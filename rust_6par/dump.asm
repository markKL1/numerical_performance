
./rust_6par/target/release/num_perf_demo:     file format elf64-x86-64


Disassembly of section .init:

0000000000003fc0 <_init>:
    3fc0:	48 83 ec 08          	sub    $0x8,%rsp
    3fc4:	48 8b 05 fd 3e 24 00 	mov    0x243efd(%rip),%rax        # 247ec8 <__gmon_start__>
    3fcb:	48 85 c0             	test   %rax,%rax
    3fce:	74 02                	je     3fd2 <_init+0x12>
    3fd0:	ff d0                	callq  *%rax
    3fd2:	48 83 c4 08          	add    $0x8,%rsp
    3fd6:	c3                   	retq   

Disassembly of section .plt:

0000000000003fe0 <.plt>:
    3fe0:	ff 35 12 3d 24 00    	pushq  0x243d12(%rip)        # 247cf8 <_GLOBAL_OFFSET_TABLE_+0x8>
    3fe6:	ff 25 14 3d 24 00    	jmpq   *0x243d14(%rip)        # 247d00 <_GLOBAL_OFFSET_TABLE_+0x10>
    3fec:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000003ff0 <dl_iterate_phdr@plt>:
    3ff0:	ff 25 12 3d 24 00    	jmpq   *0x243d12(%rip)        # 247d08 <dl_iterate_phdr@GLIBC_2.2.5>
    3ff6:	68 00 00 00 00       	pushq  $0x0
    3ffb:	e9 e0 ff ff ff       	jmpq   3fe0 <.plt>

0000000000004000 <getpid@plt>:
    4000:	ff 25 0a 3d 24 00    	jmpq   *0x243d0a(%rip)        # 247d10 <getpid@GLIBC_2.2.5>
    4006:	68 01 00 00 00       	pushq  $0x1
    400b:	e9 d0 ff ff ff       	jmpq   3fe0 <.plt>

0000000000004010 <snprintf@plt>:
    4010:	ff 25 02 3d 24 00    	jmpq   *0x243d02(%rip)        # 247d18 <snprintf@GLIBC_2.2.5>
    4016:	68 02 00 00 00       	pushq  $0x2
    401b:	e9 c0 ff ff ff       	jmpq   3fe0 <.plt>

0000000000004020 <strrchr@plt>:
    4020:	ff 25 fa 3c 24 00    	jmpq   *0x243cfa(%rip)        # 247d20 <strrchr@GLIBC_2.2.5>
    4026:	68 03 00 00 00       	pushq  $0x3
    402b:	e9 b0 ff ff ff       	jmpq   3fe0 <.plt>

0000000000004030 <lseek@plt>:
    4030:	ff 25 f2 3c 24 00    	jmpq   *0x243cf2(%rip)        # 247d28 <lseek@GLIBC_2.2.5>
    4036:	68 04 00 00 00       	pushq  $0x4
    403b:	e9 a0 ff ff ff       	jmpq   3fe0 <.plt>

0000000000004040 <close@plt>:
    4040:	ff 25 ea 3c 24 00    	jmpq   *0x243cea(%rip)        # 247d30 <close@GLIBC_2.2.5>
    4046:	68 05 00 00 00       	pushq  $0x5
    404b:	e9 90 ff ff ff       	jmpq   3fe0 <.plt>

0000000000004050 <read@plt>:
    4050:	ff 25 e2 3c 24 00    	jmpq   *0x243ce2(%rip)        # 247d38 <read@GLIBC_2.2.5>
    4056:	68 06 00 00 00       	pushq  $0x6
    405b:	e9 80 ff ff ff       	jmpq   3fe0 <.plt>

0000000000004060 <strcmp@plt>:
    4060:	ff 25 da 3c 24 00    	jmpq   *0x243cda(%rip)        # 247d40 <strcmp@GLIBC_2.2.5>
    4066:	68 07 00 00 00       	pushq  $0x7
    406b:	e9 70 ff ff ff       	jmpq   3fe0 <.plt>

0000000000004070 <__fxstat@plt>:
    4070:	ff 25 d2 3c 24 00    	jmpq   *0x243cd2(%rip)        # 247d48 <__fxstat@GLIBC_2.2.5>
    4076:	68 08 00 00 00       	pushq  $0x8
    407b:	e9 60 ff ff ff       	jmpq   3fe0 <.plt>

0000000000004080 <open@plt>:
    4080:	ff 25 ca 3c 24 00    	jmpq   *0x243cca(%rip)        # 247d50 <open@GLIBC_2.2.5>
    4086:	68 09 00 00 00       	pushq  $0x9
    408b:	e9 50 ff ff ff       	jmpq   3fe0 <.plt>

0000000000004090 <bsearch@plt>:
    4090:	ff 25 c2 3c 24 00    	jmpq   *0x243cc2(%rip)        # 247d58 <bsearch@GLIBC_2.2.5>
    4096:	68 0a 00 00 00       	pushq  $0xa
    409b:	e9 40 ff ff ff       	jmpq   3fe0 <.plt>

00000000000040a0 <_Unwind_Resume@plt>:
    40a0:	ff 25 ba 3c 24 00    	jmpq   *0x243cba(%rip)        # 247d60 <_Unwind_Resume@GCC_3.0>
    40a6:	68 0b 00 00 00       	pushq  $0xb
    40ab:	e9 30 ff ff ff       	jmpq   3fe0 <.plt>

Disassembly of section .plt.got:

00000000000040b0 <free@plt>:
    40b0:	ff 25 c2 3c 24 00    	jmpq   *0x243cc2(%rip)        # 247d78 <free@GLIBC_2.2.5>
    40b6:	66 90                	xchg   %ax,%ax

00000000000040b8 <abort@plt>:
    40b8:	ff 25 d2 3c 24 00    	jmpq   *0x243cd2(%rip)        # 247d90 <abort@GLIBC_2.2.5>
    40be:	66 90                	xchg   %ax,%ax

00000000000040c0 <__errno_location@plt>:
    40c0:	ff 25 da 3c 24 00    	jmpq   *0x243cda(%rip)        # 247da0 <__errno_location@GLIBC_2.2.5>
    40c6:	66 90                	xchg   %ax,%ax

00000000000040c8 <strlen@plt>:
    40c8:	ff 25 4a 3d 24 00    	jmpq   *0x243d4a(%rip)        # 247e18 <strlen@GLIBC_2.2.5>
    40ce:	66 90                	xchg   %ax,%ax

00000000000040d0 <memset@plt>:
    40d0:	ff 25 7a 3d 24 00    	jmpq   *0x243d7a(%rip)        # 247e50 <memset@GLIBC_2.2.5>
    40d6:	66 90                	xchg   %ax,%ax

00000000000040d8 <memcpy@plt>:
    40d8:	ff 25 f2 3d 24 00    	jmpq   *0x243df2(%rip)        # 247ed0 <memcpy@GLIBC_2.14>
    40de:	66 90                	xchg   %ax,%ax

00000000000040e0 <malloc@plt>:
    40e0:	ff 25 22 3e 24 00    	jmpq   *0x243e22(%rip)        # 247f08 <malloc@GLIBC_2.2.5>
    40e6:	66 90                	xchg   %ax,%ax

00000000000040e8 <realloc@plt>:
    40e8:	ff 25 4a 3e 24 00    	jmpq   *0x243e4a(%rip)        # 247f38 <realloc@GLIBC_2.2.5>
    40ee:	66 90                	xchg   %ax,%ax

00000000000040f0 <__cxa_finalize@plt>:
    40f0:	ff 25 e2 3e 24 00    	jmpq   *0x243ee2(%rip)        # 247fd8 <__cxa_finalize@GLIBC_2.2.5>
    40f6:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

0000000000004100 <_start>:
    4100:	31 ed                	xor    %ebp,%ebp
    4102:	49 89 d1             	mov    %rdx,%r9
    4105:	5e                   	pop    %rsi
    4106:	48 89 e2             	mov    %rsp,%rdx
    4109:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    410d:	50                   	push   %rax
    410e:	54                   	push   %rsp
    410f:	4c 8d 05 2a 62 03 00 	lea    0x3622a(%rip),%r8        # 3a340 <__libc_csu_fini>
    4116:	48 8d 0d b3 61 03 00 	lea    0x361b3(%rip),%rcx        # 3a2d0 <__libc_csu_init>
    411d:	48 8d 3d 2c 0c 00 00 	lea    0xc2c(%rip),%rdi        # 4d50 <main>
    4124:	ff 15 6e 3d 24 00    	callq  *0x243d6e(%rip)        # 247e98 <__libc_start_main@GLIBC_2.2.5>
    412a:	f4                   	hlt    
    412b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000004130 <deregister_tm_clones>:
    4130:	48 8d 3d 19 3f 24 00 	lea    0x243f19(%rip),%rdi        # 248050 <__TMC_END__>
    4137:	55                   	push   %rbp
    4138:	48 8d 05 11 3f 24 00 	lea    0x243f11(%rip),%rax        # 248050 <__TMC_END__>
    413f:	48 39 f8             	cmp    %rdi,%rax
    4142:	48 89 e5             	mov    %rsp,%rbp
    4145:	74 19                	je     4160 <deregister_tm_clones+0x30>
    4147:	48 8b 05 62 3c 24 00 	mov    0x243c62(%rip),%rax        # 247db0 <_ITM_deregisterTMCloneTable>
    414e:	48 85 c0             	test   %rax,%rax
    4151:	74 0d                	je     4160 <deregister_tm_clones+0x30>
    4153:	5d                   	pop    %rbp
    4154:	ff e0                	jmpq   *%rax
    4156:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    415d:	00 00 00 
    4160:	5d                   	pop    %rbp
    4161:	c3                   	retq   
    4162:	0f 1f 40 00          	nopl   0x0(%rax)
    4166:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    416d:	00 00 00 

0000000000004170 <register_tm_clones>:
    4170:	48 8d 3d d9 3e 24 00 	lea    0x243ed9(%rip),%rdi        # 248050 <__TMC_END__>
    4177:	48 8d 35 d2 3e 24 00 	lea    0x243ed2(%rip),%rsi        # 248050 <__TMC_END__>
    417e:	55                   	push   %rbp
    417f:	48 29 fe             	sub    %rdi,%rsi
    4182:	48 89 e5             	mov    %rsp,%rbp
    4185:	48 c1 fe 03          	sar    $0x3,%rsi
    4189:	48 89 f0             	mov    %rsi,%rax
    418c:	48 c1 e8 3f          	shr    $0x3f,%rax
    4190:	48 01 c6             	add    %rax,%rsi
    4193:	48 d1 fe             	sar    %rsi
    4196:	74 18                	je     41b0 <register_tm_clones+0x40>
    4198:	48 8b 05 09 3e 24 00 	mov    0x243e09(%rip),%rax        # 247fa8 <_ITM_registerTMCloneTable>
    419f:	48 85 c0             	test   %rax,%rax
    41a2:	74 0c                	je     41b0 <register_tm_clones+0x40>
    41a4:	5d                   	pop    %rbp
    41a5:	ff e0                	jmpq   *%rax
    41a7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    41ae:	00 00 
    41b0:	5d                   	pop    %rbp
    41b1:	c3                   	retq   
    41b2:	0f 1f 40 00          	nopl   0x0(%rax)
    41b6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    41bd:	00 00 00 

00000000000041c0 <__do_global_dtors_aux>:
    41c0:	80 3d 89 3e 24 00 00 	cmpb   $0x0,0x243e89(%rip)        # 248050 <__TMC_END__>
    41c7:	75 2f                	jne    41f8 <__do_global_dtors_aux+0x38>
    41c9:	48 83 3d 07 3e 24 00 	cmpq   $0x0,0x243e07(%rip)        # 247fd8 <__cxa_finalize@GLIBC_2.2.5>
    41d0:	00 
    41d1:	55                   	push   %rbp
    41d2:	48 89 e5             	mov    %rsp,%rbp
    41d5:	74 0c                	je     41e3 <__do_global_dtors_aux+0x23>
    41d7:	48 8b 3d 22 3e 24 00 	mov    0x243e22(%rip),%rdi        # 248000 <__dso_handle>
    41de:	e8 0d ff ff ff       	callq  40f0 <__cxa_finalize@plt>
    41e3:	e8 48 ff ff ff       	callq  4130 <deregister_tm_clones>
    41e8:	c6 05 61 3e 24 00 01 	movb   $0x1,0x243e61(%rip)        # 248050 <__TMC_END__>
    41ef:	5d                   	pop    %rbp
    41f0:	c3                   	retq   
    41f1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    41f8:	f3 c3                	repz retq 
    41fa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000004200 <frame_dummy>:
    4200:	55                   	push   %rbp
    4201:	48 89 e5             	mov    %rsp,%rbp
    4204:	5d                   	pop    %rbp
    4205:	e9 66 ff ff ff       	jmpq   4170 <register_tm_clones>
    420a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000004210 <_ZN3std2rt10lang_start28_$u7b$$u7b$closure$u7d$$u7d$17hd57d67dbe043b9c7E>:
    4210:	50                   	push   %rax
    4211:	ff 17                	callq  *(%rdi)
    4213:	31 c0                	xor    %eax,%eax
    4215:	59                   	pop    %rcx
    4216:	c3                   	retq   
    4217:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    421e:	00 00 

0000000000004220 <_ZN4core3ops8function6FnOnce40call_once$u7b$$u7b$vtable.shim$u7d$$u7d$17h1752b6e515da6220E>:
    4220:	50                   	push   %rax
    4221:	ff 17                	callq  *(%rdi)
    4223:	31 c0                	xor    %eax,%eax
    4225:	59                   	pop    %rcx
    4226:	c3                   	retq   
    4227:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    422e:	00 00 

0000000000004230 <_ZN4core3ptr13drop_in_place17h1603095b365555f6E>:
    4230:	48 83 7f 08 00       	cmpq   $0x0,0x8(%rdi)
    4235:	74 09                	je     4240 <_ZN4core3ptr13drop_in_place17h1603095b365555f6E+0x10>
    4237:	48 8b 3f             	mov    (%rdi),%rdi
    423a:	ff 25 38 3b 24 00    	jmpq   *0x243b38(%rip)        # 247d78 <free@GLIBC_2.2.5>
    4240:	c3                   	retq   
    4241:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    4248:	00 00 00 
    424b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000004250 <_ZN4core3ptr13drop_in_place17h5712d1ad92044065E>:
    4250:	41 56                	push   %r14
    4252:	53                   	push   %rbx
    4253:	50                   	push   %rax
    4254:	48 89 fb             	mov    %rdi,%rbx
    4257:	48 8b 57 10          	mov    0x10(%rdi),%rdx
    425b:	48 8b 47 18          	mov    0x18(%rdi),%rax
    425f:	48 39 c2             	cmp    %rax,%rdx
    4262:	74 38                	je     429c <_ZN4core3ptr13drop_in_place17h5712d1ad92044065E+0x4c>
    4264:	4c 8b 35 0d 3b 24 00 	mov    0x243b0d(%rip),%r14        # 247d78 <free@GLIBC_2.2.5>
    426b:	eb 0b                	jmp    4278 <_ZN4core3ptr13drop_in_place17h5712d1ad92044065E+0x28>
    426d:	0f 1f 00             	nopl   (%rax)
    4270:	48 89 ca             	mov    %rcx,%rdx
    4273:	48 39 c1             	cmp    %rax,%rcx
    4276:	74 24                	je     429c <_ZN4core3ptr13drop_in_place17h5712d1ad92044065E+0x4c>
    4278:	48 8d 4a 18          	lea    0x18(%rdx),%rcx
    427c:	48 89 4b 10          	mov    %rcx,0x10(%rbx)
    4280:	48 8b 3a             	mov    (%rdx),%rdi
    4283:	48 85 ff             	test   %rdi,%rdi
    4286:	74 14                	je     429c <_ZN4core3ptr13drop_in_place17h5712d1ad92044065E+0x4c>
    4288:	48 83 7a 08 00       	cmpq   $0x0,0x8(%rdx)
    428d:	74 e1                	je     4270 <_ZN4core3ptr13drop_in_place17h5712d1ad92044065E+0x20>
    428f:	41 ff d6             	callq  *%r14
    4292:	48 8b 4b 10          	mov    0x10(%rbx),%rcx
    4296:	48 8b 43 18          	mov    0x18(%rbx),%rax
    429a:	eb d4                	jmp    4270 <_ZN4core3ptr13drop_in_place17h5712d1ad92044065E+0x20>
    429c:	48 83 7b 08 00       	cmpq   $0x0,0x8(%rbx)
    42a1:	74 10                	je     42b3 <_ZN4core3ptr13drop_in_place17h5712d1ad92044065E+0x63>
    42a3:	48 8b 3b             	mov    (%rbx),%rdi
    42a6:	48 83 c4 08          	add    $0x8,%rsp
    42aa:	5b                   	pop    %rbx
    42ab:	41 5e                	pop    %r14
    42ad:	ff 25 c5 3a 24 00    	jmpq   *0x243ac5(%rip)        # 247d78 <free@GLIBC_2.2.5>
    42b3:	48 83 c4 08          	add    $0x8,%rsp
    42b7:	5b                   	pop    %rbx
    42b8:	41 5e                	pop    %r14
    42ba:	c3                   	retq   
    42bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000042c0 <_ZN4core3ptr13drop_in_place17hbceefdc2b3e7349fE>:
    42c0:	41 57                	push   %r15
    42c2:	41 56                	push   %r14
    42c4:	41 55                	push   %r13
    42c6:	41 54                	push   %r12
    42c8:	53                   	push   %rbx
    42c9:	49 89 fe             	mov    %rdi,%r14
    42cc:	48 8b 47 10          	mov    0x10(%rdi),%rax
    42d0:	48 85 c0             	test   %rax,%rax
    42d3:	74 4c                	je     4321 <_ZN4core3ptr13drop_in_place17hbceefdc2b3e7349fE+0x61>
    42d5:	4d 8b 26             	mov    (%r14),%r12
    42d8:	48 c1 e0 03          	shl    $0x3,%rax
    42dc:	4c 8d 3c 40          	lea    (%rax,%rax,2),%r15
    42e0:	31 db                	xor    %ebx,%ebx
    42e2:	4c 8b 2d 8f 3a 24 00 	mov    0x243a8f(%rip),%r13        # 247d78 <free@GLIBC_2.2.5>
    42e9:	49 83 7c 1c 08 00    	cmpq   $0x0,0x8(%r12,%rbx,1)
    42ef:	75 20                	jne    4311 <_ZN4core3ptr13drop_in_place17hbceefdc2b3e7349fE+0x51>
    42f1:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    42f8:	00 00 00 
    42fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    4300:	48 83 c3 18          	add    $0x18,%rbx
    4304:	49 39 df             	cmp    %rbx,%r15
    4307:	74 18                	je     4321 <_ZN4core3ptr13drop_in_place17hbceefdc2b3e7349fE+0x61>
    4309:	49 83 7c 1c 08 00    	cmpq   $0x0,0x8(%r12,%rbx,1)
    430f:	74 ef                	je     4300 <_ZN4core3ptr13drop_in_place17hbceefdc2b3e7349fE+0x40>
    4311:	49 8b 3c 1c          	mov    (%r12,%rbx,1),%rdi
    4315:	41 ff d5             	callq  *%r13
    4318:	48 83 c3 18          	add    $0x18,%rbx
    431c:	49 39 df             	cmp    %rbx,%r15
    431f:	75 e8                	jne    4309 <_ZN4core3ptr13drop_in_place17hbceefdc2b3e7349fE+0x49>
    4321:	49 83 7e 08 00       	cmpq   $0x0,0x8(%r14)
    4326:	74 12                	je     433a <_ZN4core3ptr13drop_in_place17hbceefdc2b3e7349fE+0x7a>
    4328:	49 8b 3e             	mov    (%r14),%rdi
    432b:	5b                   	pop    %rbx
    432c:	41 5c                	pop    %r12
    432e:	41 5d                	pop    %r13
    4330:	41 5e                	pop    %r14
    4332:	41 5f                	pop    %r15
    4334:	ff 25 3e 3a 24 00    	jmpq   *0x243a3e(%rip)        # 247d78 <free@GLIBC_2.2.5>
    433a:	5b                   	pop    %rbx
    433b:	41 5c                	pop    %r12
    433d:	41 5d                	pop    %r13
    433f:	41 5e                	pop    %r14
    4341:	41 5f                	pop    %r15
    4343:	c3                   	retq   
    4344:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    434b:	00 00 00 
    434e:	66 90                	xchg   %ax,%ax

0000000000004350 <_ZN13num_perf_demo4main17h836ce3a93b32691bE>:

use ::std::env::args;
use ::std::process::exit;
use ::num_perf_demo::mul_test;

fn main() {
    4350:	55                   	push   %rbp
    4351:	41 57                	push   %r15
    4353:	41 56                	push   %r14
    4355:	41 55                	push   %r13
    4357:	41 54                	push   %r12
    4359:	53                   	push   %rbx
    435a:	48 81 ec c8 00 00 00 	sub    $0xc8,%rsp
    4361:	48 8d 1d 20 3d 24 00 	lea    0x243d20(%rip),%rbx        # 248088 <_ZN3std3sys4unix4args3imp4LOCK17h1d8f441b10ddb3ddE>
    4368:	48 89 df             	mov    %rbx,%rdi
    436b:	ff 15 6f 3c 24 00    	callq  *0x243c6f(%rip)        # 247fe0 <pthread_mutex_lock@GLIBC_2.2.5>
    4371:	48 89 5c 24 40       	mov    %rbx,0x40(%rsp)
    4376:	4c 8b 25 33 3d 24 00 	mov    0x243d33(%rip),%r12        # 2480b0 <_ZN3std3sys4unix4args3imp4ARGC17h4e4d06cf3ef5a743E>
    437d:	48 c7 84 24 80 00 00 	movq   $0x8,0x80(%rsp)
    4384:	00 08 00 00 00 
    4389:	c5 f8 57 c0          	vxorps %xmm0,%xmm0,%xmm0
    438d:	c5 f8 11 84 24 88 00 	vmovups %xmm0,0x88(%rsp)
    4394:	00 00 
    4396:	4d 85 e4             	test   %r12,%r12
    4399:	7e 59                	jle    43f4 <_ZN13num_perf_demo4main17h836ce3a93b32691bE+0xa4>
    439b:	b9 18 00 00 00       	mov    $0x18,%ecx
    43a0:	45 31 f6             	xor    %r14d,%r14d
    43a3:	4c 89 e0             	mov    %r12,%rax
    43a6:	48 f7 e1             	mul    %rcx
    43a9:	49 89 c7             	mov    %rax,%r15
    43ac:	0f 91 c0             	setno  %al
    43af:	0f 80 36 08 00 00    	jo     4beb <_ZN13num_perf_demo4main17h836ce3a93b32691bE+0x89b>
    43b5:	41 88 c6             	mov    %al,%r14b
    43b8:	49 c1 e6 03          	shl    $0x3,%r14
    43bc:	4d 39 fe             	cmp    %r15,%r14
    43bf:	76 43                	jbe    4404 <_ZN13num_perf_demo4main17h836ce3a93b32691bE+0xb4>
    43c1:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
    43c8:	00 
    43c9:	48 89 e7             	mov    %rsp,%rdi
    43cc:	be 08 00 00 00       	mov    $0x8,%esi
    43d1:	4c 89 fa             	mov    %r15,%rdx
    43d4:	ff 15 c6 3b 24 00    	callq  *0x243bc6(%rip)        # 247fa0 <posix_memalign@GLIBC_2.2.5>
    43da:	85 c0                	test   %eax,%eax
    43dc:	75 09                	jne    43e7 <_ZN13num_perf_demo4main17h836ce3a93b32691bE+0x97>
    43de:	4c 8b 2c 24          	mov    (%rsp),%r13
    43e2:	4d 85 ed             	test   %r13,%r13
    43e5:	75 2e                	jne    4415 <_ZN13num_perf_demo4main17h836ce3a93b32691bE+0xc5>
    43e7:	4c 89 ff             	mov    %r15,%rdi
    43ea:	4c 89 f6             	mov    %r14,%rsi
    43ed:	e8 ce 10 00 00       	callq  54c0 <_ZN5alloc5alloc18handle_alloc_error17hf7bb8682f6c8b1d7E>
    43f2:	0f 0b                	ud2    
    43f4:	45 31 f6             	xor    %r14d,%r14d
    43f7:	bb 08 00 00 00       	mov    $0x8,%ebx
    43fc:	41 bd 08 00 00 00    	mov    $0x8,%r13d
    4402:	eb 27                	jmp    442b <_ZN13num_perf_demo4main17h836ce3a93b32691bE+0xdb>
    4404:	4c 89 ff             	mov    %r15,%rdi
    4407:	ff 15 fb 3a 24 00    	callq  *0x243afb(%rip)        # 247f08 <malloc@GLIBC_2.2.5>
    440d:	49 89 c5             	mov    %rax,%r13
    4410:	4d 85 ed             	test   %r13,%r13
    4413:	74 d2                	je     43e7 <_ZN13num_perf_demo4main17h836ce3a93b32691bE+0x97>
    4415:	4c 89 ac 24 80 00 00 	mov    %r13,0x80(%rsp)
    441c:	00 
    441d:	4c 89 a4 24 88 00 00 	mov    %r12,0x88(%rsp)
    4424:	00 
    4425:	4d 89 e6             	mov    %r12,%r14
    4428:	4c 89 eb             	mov    %r13,%rbx
    442b:	48 8d 84 24 90 00 00 	lea    0x90(%rsp),%rax
    4432:	00 
    4433:	4c 89 2c 24          	mov    %r13,(%rsp)
    4437:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    443c:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
    4443:	00 00 
    4445:	4d 85 e4             	test   %r12,%r12
    4448:	0f 8e 99 00 00 00    	jle    44e7 <_ZN13num_perf_demo4main17h836ce3a93b32691bE+0x197>
    444e:	4c 89 74 24 30       	mov    %r14,0x30(%rsp)
    4453:	48 89 5c 24 78       	mov    %rbx,0x78(%rsp)
    4458:	45 31 f6             	xor    %r14d,%r14d
    445b:	eb 2a                	jmp    4487 <_ZN13num_perf_demo4main17h836ce3a93b32691bE+0x137>
    445d:	0f 1f 00             	nopl   (%rax)
    4460:	49 ff c6             	inc    %r14
    4463:	48 89 ef             	mov    %rbp,%rdi
    4466:	4c 89 fe             	mov    %r15,%rsi
    4469:	48 89 da             	mov    %rbx,%rdx
    446c:	ff 15 5e 3a 24 00    	callq  *0x243a5e(%rip)        # 247ed0 <memcpy@GLIBC_2.14>
    4472:	49 89 6d 00          	mov    %rbp,0x0(%r13)
    4476:	49 89 5d 08          	mov    %rbx,0x8(%r13)
    447a:	49 89 5d 10          	mov    %rbx,0x10(%r13)
    447e:	49 83 c5 18          	add    $0x18,%r13
    4482:	4d 39 f4             	cmp    %r14,%r12
    4485:	74 4b                	je     44d2 <_ZN13num_perf_demo4main17h836ce3a93b32691bE+0x182>
    4487:	48 8b 05 2a 3c 24 00 	mov    0x243c2a(%rip),%rax        # 2480b8 <_ZN3std3sys4unix4args3imp4ARGV17he0db131b08904595E>
    448e:	4e 8b 3c f0          	mov    (%rax,%r14,8),%r15
    4492:	4c 89 ff             	mov    %r15,%rdi
    4495:	ff 15 7d 39 24 00    	callq  *0x24397d(%rip)        # 247e18 <strlen@GLIBC_2.2.5>
    449b:	48 89 c3             	mov    %rax,%rbx
    449e:	bd 01 00 00 00       	mov    $0x1,%ebp
    44a3:	48 85 c0             	test   %rax,%rax
    44a6:	74 b8                	je     4460 <_ZN13num_perf_demo4main17h836ce3a93b32691bE+0x110>
    44a8:	48 83 fb ff          	cmp    $0xffffffffffffffff,%rbx
    44ac:	0f 84 92 06 00 00    	je     4b44 <_ZN13num_perf_demo4main17h836ce3a93b32691bE+0x7f4>
    44b2:	48 89 df             	mov    %rbx,%rdi
    44b5:	ff 15 4d 3a 24 00    	callq  *0x243a4d(%rip)        # 247f08 <malloc@GLIBC_2.2.5>
    44bb:	48 89 c5             	mov    %rax,%rbp
    44be:	48 85 c0             	test   %rax,%rax
    44c1:	75 9d                	jne    4460 <_ZN13num_perf_demo4main17h836ce3a93b32691bE+0x110>
    44c3:	be 01 00 00 00       	mov    $0x1,%esi
    44c8:	48 89 df             	mov    %rbx,%rdi
    44cb:	e8 f0 0f 00 00       	callq  54c0 <_ZN5alloc5alloc18handle_alloc_error17hf7bb8682f6c8b1d7E>
    44d0:	0f 0b                	ud2    
    44d2:	4c 89 2c 24          	mov    %r13,(%rsp)
    44d6:	4c 89 64 24 10       	mov    %r12,0x10(%rsp)
    44db:	48 8b 5c 24 78       	mov    0x78(%rsp),%rbx
    44e0:	4c 8b 74 24 30       	mov    0x30(%rsp),%r14
    44e5:	eb 03                	jmp    44ea <_ZN13num_perf_demo4main17h836ce3a93b32691bE+0x19a>
    44e7:	45 31 e4             	xor    %r12d,%r12d
    44ea:	48 8d 3d 97 3b 24 00 	lea    0x243b97(%rip),%rdi        # 248088 <_ZN3std3sys4unix4args3imp4LOCK17h1d8f441b10ddb3ddE>
    44f1:	ff 15 01 3a 24 00    	callq  *0x243a01(%rip)        # 247ef8 <pthread_mutex_unlock@GLIBC_2.2.5>
    44f7:	4b 8d 04 64          	lea    (%r12,%r12,2),%rax
    44fb:	4c 8d 2c c3          	lea    (%rbx,%rax,8),%r13
    44ff:	48 89 9c 24 80 00 00 	mov    %rbx,0x80(%rsp)
    4506:	00 
    4507:	4c 89 b4 24 88 00 00 	mov    %r14,0x88(%rsp)
    450e:	00 
    450f:	48 89 9c 24 90 00 00 	mov    %rbx,0x90(%rsp)
    4516:	00 
    4517:	4c 89 ac 24 98 00 00 	mov    %r13,0x98(%rsp)
    451e:	00 
    451f:	48 89 dd             	mov    %rbx,%rbp
    4522:	4d 85 e4             	test   %r12,%r12
    4525:	0f 84 a1 00 00 00    	je     45cc <_ZN13num_perf_demo4main17h836ce3a93b32691bE+0x27c>
    452b:	48 8d 6b 18          	lea    0x18(%rbx),%rbp
    452f:	48 89 ac 24 90 00 00 	mov    %rbp,0x90(%rsp)
    4536:	00 
    4537:	4c 8b 3b             	mov    (%rbx),%r15
    453a:	4d 85 ff             	test   %r15,%r15
    453d:	0f 84 89 00 00 00    	je     45cc <_ZN13num_perf_demo4main17h836ce3a93b32691bE+0x27c>
    4543:	4c 8b 63 08          	mov    0x8(%rbx),%r12
    4547:	4c 8b 73 10          	mov    0x10(%rbx),%r14
    454b:	48 89 e7             	mov    %rsp,%rdi
    454e:	4c 89 fe             	mov    %r15,%rsi
    4551:	4c 89 f2             	mov    %r14,%rdx
    4554:	e8 07 72 00 00       	callq  b760 <_ZN4core3str9from_utf817ha5f1d279f7594d61E>
    4559:	48 83 3c 24 01       	cmpq   $0x1,(%rsp)
    455e:	0f 84 98 06 00 00    	je     4bfc <_ZN13num_perf_demo4main17h836ce3a93b32691bE+0x8ac>
    4564:	4c 89 3c 24          	mov    %r15,(%rsp)
    4568:	4c 89 64 24 08       	mov    %r12,0x8(%rsp)
    456d:	4c 89 74 24 10       	mov    %r14,0x10(%rsp)
    4572:	49 29 ed             	sub    %rbp,%r13
    4575:	49 c1 fd 03          	sar    $0x3,%r13
    4579:	48 b8 ab aa aa aa aa 	movabs $0xaaaaaaaaaaaaaaab,%rax
    4580:	aa aa aa 
    4583:	4c 0f af e8          	imul   %rax,%r13
    4587:	49 ff c5             	inc    %r13
    458a:	49 c7 c7 ff ff ff ff 	mov    $0xffffffffffffffff,%r15
    4591:	4d 0f 45 fd          	cmovne %r13,%r15
    4595:	b9 18 00 00 00       	mov    $0x18,%ecx
    459a:	4c 89 f8             	mov    %r15,%rax
    459d:	48 f7 e1             	mul    %rcx
    45a0:	0f 80 8b 06 00 00    	jo     4c31 <_ZN13num_perf_demo4main17h836ce3a93b32691bE+0x8e1>
    45a6:	48 89 c3             	mov    %rax,%rbx
    45a9:	48 85 c0             	test   %rax,%rax
    45ac:	0f 84 c9 00 00 00    	je     467b <_ZN13num_perf_demo4main17h836ce3a93b32691bE+0x32b>
    45b2:	48 89 df             	mov    %rbx,%rdi
    45b5:	ff 15 4d 39 24 00    	callq  *0x24394d(%rip)        # 247f08 <malloc@GLIBC_2.2.5>
    45bb:	48 85 c0             	test   %rax,%rax
    45be:	0f 84 be 06 00 00    	je     4c82 <_ZN13num_perf_demo4main17h836ce3a93b32691bE+0x932>
    45c4:	48 89 c5             	mov    %rax,%rbp
    45c7:	e9 b4 00 00 00       	jmpq   4680 <_ZN13num_perf_demo4main17h836ce3a93b32691bE+0x330>
    45cc:	4d 89 f4             	mov    %r14,%r12
    45cf:	49 89 df             	mov    %rbx,%r15
    45d2:	48 c7 44 24 40 08 00 	movq   $0x8,0x40(%rsp)
    45d9:	00 00 
    45db:	c5 f8 57 c0          	vxorps %xmm0,%xmm0,%xmm0
    45df:	c5 f8 11 44 24 48    	vmovups %xmm0,0x48(%rsp)
    45e5:	4c 39 ed             	cmp    %r13,%rbp
    45e8:	74 3f                	je     4629 <_ZN13num_perf_demo4main17h836ce3a93b32691bE+0x2d9>
    45ea:	4c 8b 35 87 37 24 00 	mov    0x243787(%rip),%r14        # 247d78 <free@GLIBC_2.2.5>
    45f1:	eb 15                	jmp    4608 <_ZN13num_perf_demo4main17h836ce3a93b32691bE+0x2b8>
    45f3:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    45fa:	00 00 00 
    45fd:	0f 1f 00             	nopl   (%rax)
    4600:	48 89 dd             	mov    %rbx,%rbp
    4603:	49 39 dd             	cmp    %rbx,%r13
    4606:	74 21                	je     4629 <_ZN13num_perf_demo4main17h836ce3a93b32691bE+0x2d9>
    4608:	48 8d 5d 18          	lea    0x18(%rbp),%rbx
    460c:	48 89 9c 24 90 00 00 	mov    %rbx,0x90(%rsp)
    4613:	00 
    4614:	48 8b 7d 00          	mov    0x0(%rbp),%rdi
    4618:	48 85 ff             	test   %rdi,%rdi
    461b:	74 0c                	je     4629 <_ZN13num_perf_demo4main17h836ce3a93b32691bE+0x2d9>
    461d:	48 83 7d 08 00       	cmpq   $0x0,0x8(%rbp)
    4622:	74 dc                	je     4600 <_ZN13num_perf_demo4main17h836ce3a93b32691bE+0x2b0>
    4624:	41 ff d6             	callq  *%r14
    4627:	eb d7                	jmp    4600 <_ZN13num_perf_demo4main17h836ce3a93b32691bE+0x2b0>
    4629:	4d 85 e4             	test   %r12,%r12
    462c:	74 09                	je     4637 <_ZN13num_perf_demo4main17h836ce3a93b32691bE+0x2e7>
    462e:	4c 89 ff             	mov    %r15,%rdi
    4631:	ff 15 41 37 24 00    	callq  *0x243741(%rip)        # 247d78 <free@GLIBC_2.2.5>
    4637:	48 8d 05 2a 1a 24 00 	lea    0x241a2a(%rip),%rax        # 246068 <__init_array_end+0x58>
    463e:	48 89 04 24          	mov    %rax,(%rsp)
    4642:	48 c7 44 24 08 01 00 	movq   $0x1,0x8(%rsp)
    4649:	00 00 
    464b:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
    4652:	00 00 
    4654:	48 8d 05 dd 8d 03 00 	lea    0x38ddd(%rip),%rax        # 3d438 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0xad8>
    465b:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
    4660:	48 c7 44 24 28 00 00 	movq   $0x0,0x28(%rsp)
    4667:	00 00 
    4669:	48 89 e7             	mov    %rsp,%rdi
    let args: Vec<String> = args().collect();
    if args.len() <= 1 {
        eprintln!("Provide integer argument.");
    466c:	c5 f8 77             	vzeroupper 
    466f:	e8 dc 66 02 00       	callq  2ad50 <_ZN3std2io5stdio7_eprint17hf19d6fb036d8919dE>
        exit(1);
    4674:	e8 a7 6b 02 00       	callq  2b220 <_ZN3std7process4exit17h48d7a25190f60a46E>
    4679:	0f 0b                	ud2    
    467b:	bd 08 00 00 00       	mov    $0x8,%ebp
    4680:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    4685:	48 89 45 10          	mov    %rax,0x10(%rbp)
    4689:	c5 f8 10 04 24       	vmovups (%rsp),%xmm0
    468e:	c5 f8 11 45 00       	vmovups %xmm0,0x0(%rbp)
    4693:	48 89 6c 24 60       	mov    %rbp,0x60(%rsp)
    4698:	4c 89 7c 24 68       	mov    %r15,0x68(%rsp)
    469d:	48 c7 44 24 70 01 00 	movq   $0x1,0x70(%rsp)
    46a4:	00 00 
    46a6:	c5 fc 10 84 24 80 00 	vmovups 0x80(%rsp),%ymm0
    46ad:	00 00 
    46af:	c5 fc 11 04 24       	vmovups %ymm0,(%rsp)
    46b4:	48 8b 4c 24 10       	mov    0x10(%rsp),%rcx
    46b9:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    46be:	48 89 84 24 a0 00 00 	mov    %rax,0xa0(%rsp)
    46c5:	00 
    46c6:	48 89 c2             	mov    %rax,%rdx
    46c9:	48 89 c8             	mov    %rcx,%rax
    46cc:	48 29 ca             	sub    %rcx,%rdx
    46cf:	48 89 94 24 c0 00 00 	mov    %rdx,0xc0(%rsp)
    46d6:	00 
    46d7:	48 83 c1 18          	add    $0x18,%rcx
    46db:	48 89 8c 24 b8 00 00 	mov    %rcx,0xb8(%rsp)
    46e2:	00 
    46e3:	41 bd 01 00 00 00    	mov    $0x1,%r13d
    46e9:	31 f6                	xor    %esi,%esi
    46eb:	48 89 ea             	mov    %rbp,%rdx
    46ee:	48 89 84 24 b0 00 00 	mov    %rax,0xb0(%rsp)
    46f5:	00 
    46f6:	48 39 b4 24 c0 00 00 	cmp    %rsi,0xc0(%rsp)
    46fd:	00 
    46fe:	75 4e                	jne    474e <_ZN13num_perf_demo4main17h836ce3a93b32691bE+0x3fe>
    4700:	e9 08 02 00 00       	jmpq   490d <_ZN13num_perf_demo4main17h836ce3a93b32691bE+0x5bd>
    4705:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    470c:	00 00 00 
    470f:	90                   	nop
    4710:	48 8b 74 24 30       	mov    0x30(%rsp),%rsi
    4715:	4c 89 e5             	mov    %r12,%rbp
    4718:	48 8b 44 24 50       	mov    0x50(%rsp),%rax
    471d:	48 89 44 35 28       	mov    %rax,0x28(%rbp,%rsi,1)
    4722:	c5 f8 10 44 24 40    	vmovups 0x40(%rsp),%xmm0
    4728:	c5 f8 11 44 35 18    	vmovups %xmm0,0x18(%rbp,%rsi,1)
    472e:	49 ff c5             	inc    %r13
    4731:	48 83 c6 18          	add    $0x18,%rsi
    4735:	48 89 ea             	mov    %rbp,%rdx
    4738:	48 8b 84 24 b0 00 00 	mov    0xb0(%rsp),%rax
    473f:	00 
    4740:	48 39 b4 24 c0 00 00 	cmp    %rsi,0xc0(%rsp)
    4747:	00 
    4748:	0f 84 bf 01 00 00    	je     490d <_ZN13num_perf_demo4main17h836ce3a93b32691bE+0x5bd>
    474e:	48 8b 8c 24 b8 00 00 	mov    0xb8(%rsp),%rcx
    4755:	00 
    4756:	4c 8d 34 31          	lea    (%rcx,%rsi,1),%r14
    475a:	4c 89 74 24 10       	mov    %r14,0x10(%rsp)
    475f:	48 8b 1c 30          	mov    (%rax,%rsi,1),%rbx
    4763:	48 85 db             	test   %rbx,%rbx
    4766:	0f 84 b4 01 00 00    	je     4920 <_ZN13num_perf_demo4main17h836ce3a93b32691bE+0x5d0>
    476c:	48 89 94 24 a8 00 00 	mov    %rdx,0xa8(%rsp)
    4773:	00 
    4774:	49 89 ec             	mov    %rbp,%r12
    4777:	4c 89 7c 24 78       	mov    %r15,0x78(%rsp)
    477c:	4c 8b 7c 30 08       	mov    0x8(%rax,%rsi,1),%r15
    4781:	48 89 74 24 30       	mov    %rsi,0x30(%rsp)
    4786:	48 8b 6c 30 10       	mov    0x10(%rax,%rsi,1),%rbp
    478b:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
    4790:	48 89 de             	mov    %rbx,%rsi
    4793:	48 89 ea             	mov    %rbp,%rdx
    4796:	c5 f8 77             	vzeroupper 
    4799:	e8 c2 6f 00 00       	callq  b760 <_ZN4core3str9from_utf817ha5f1d279f7594d61E>
    479e:	48 83 7c 24 40 01    	cmpq   $0x1,0x40(%rsp)
    47a4:	0f 84 e5 03 00 00    	je     4b8f <_ZN13num_perf_demo4main17h836ce3a93b32691bE+0x83f>
    47aa:	48 89 5c 24 40       	mov    %rbx,0x40(%rsp)
    47af:	4c 89 7c 24 48       	mov    %r15,0x48(%rsp)
    47b4:	48 89 6c 24 50       	mov    %rbp,0x50(%rsp)
    47b9:	4c 8b 7c 24 78       	mov    0x78(%rsp),%r15
    47be:	4d 39 fd             	cmp    %r15,%r13
    47c1:	0f 85 49 ff ff ff    	jne    4710 <_ZN13num_perf_demo4main17h836ce3a93b32691bE+0x3c0>
    47c7:	48 8b 9c 24 a0 00 00 	mov    0xa0(%rsp),%rbx
    47ce:	00 
    47cf:	4c 29 f3             	sub    %r14,%rbx
    47d2:	48 c1 fb 03          	sar    $0x3,%rbx
    47d6:	48 b8 ab aa aa aa aa 	movabs $0xaaaaaaaaaaaaaaab,%rax
    47dd:	aa aa aa 
    47e0:	48 0f af d8          	imul   %rax,%rbx
    47e4:	48 ff c3             	inc    %rbx
    47e7:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
    47ee:	48 0f 44 d8          	cmove  %rax,%rbx
    47f2:	4c 01 fb             	add    %r15,%rbx
    47f5:	0f 82 cc 03 00 00    	jb     4bc7 <_ZN13num_perf_demo4main17h836ce3a93b32691bE+0x877>
    47fb:	4b 8d 04 3f          	lea    (%r15,%r15,1),%rax
    47ff:	48 39 d8             	cmp    %rbx,%rax
    4802:	48 0f 47 d8          	cmova  %rax,%rbx
    4806:	45 31 f6             	xor    %r14d,%r14d
    4809:	48 89 d8             	mov    %rbx,%rax
    480c:	b9 18 00 00 00       	mov    $0x18,%ecx
    4811:	48 f7 e1             	mul    %rcx
    4814:	49 89 c4             	mov    %rax,%r12
    4817:	0f 91 c0             	setno  %al
    481a:	0f 80 a7 03 00 00    	jo     4bc7 <_ZN13num_perf_demo4main17h836ce3a93b32691bE+0x877>
    4820:	41 88 c6             	mov    %al,%r14b
    4823:	49 c1 e6 03          	shl    $0x3,%r14
    4827:	4d 85 ff             	test   %r15,%r15
    482a:	74 2c                	je     4858 <_ZN13num_perf_demo4main17h836ce3a93b32691bE+0x508>
    482c:	4d 85 e4             	test   %r12,%r12
    482f:	74 68                	je     4899 <_ZN13num_perf_demo4main17h836ce3a93b32691bE+0x549>
    4831:	48 8b bc 24 a8 00 00 	mov    0xa8(%rsp),%rdi
    4838:	00 
    4839:	4c 89 e6             	mov    %r12,%rsi
    483c:	ff 15 f6 36 24 00    	callq  *0x2436f6(%rip)        # 247f38 <realloc@GLIBC_2.2.5>
    4842:	48 89 c5             	mov    %rax,%rbp
    4845:	48 8b 74 24 30       	mov    0x30(%rsp),%rsi
    484a:	48 85 ed             	test   %rbp,%rbp
    484d:	0f 85 ad 00 00 00    	jne    4900 <_ZN13num_perf_demo4main17h836ce3a93b32691bE+0x5b0>
    4853:	e9 86 03 00 00       	jmpq   4bde <_ZN13num_perf_demo4main17h836ce3a93b32691bE+0x88e>
    4858:	4d 39 e6             	cmp    %r12,%r14
    485b:	0f 86 84 00 00 00    	jbe    48e5 <_ZN13num_perf_demo4main17h836ce3a93b32691bE+0x595>
    4861:	48 c7 44 24 38 00 00 	movq   $0x0,0x38(%rsp)
    4868:	00 00 
    486a:	be 08 00 00 00       	mov    $0x8,%esi
    486f:	48 8d 7c 24 38       	lea    0x38(%rsp),%rdi
    4874:	4c 89 e2             	mov    %r12,%rdx
    4877:	ff 15 23 37 24 00    	callq  *0x243723(%rip)        # 247fa0 <posix_memalign@GLIBC_2.2.5>
    487d:	85 c0                	test   %eax,%eax
    487f:	0f 85 59 03 00 00    	jne    4bde <_ZN13num_perf_demo4main17h836ce3a93b32691bE+0x88e>
    4885:	48 8b 6c 24 38       	mov    0x38(%rsp),%rbp
    488a:	48 8b 74 24 30       	mov    0x30(%rsp),%rsi
    488f:	48 85 ed             	test   %rbp,%rbp
    4892:	75 6c                	jne    4900 <_ZN13num_perf_demo4main17h836ce3a93b32691bE+0x5b0>
    4894:	e9 45 03 00 00       	jmpq   4bde <_ZN13num_perf_demo4main17h836ce3a93b32691bE+0x88e>
    4899:	48 c7 44 24 38 00 00 	movq   $0x0,0x38(%rsp)
    48a0:	00 00 
    48a2:	be 08 00 00 00       	mov    $0x8,%esi
    48a7:	48 8d 7c 24 38       	lea    0x38(%rsp),%rdi
    48ac:	31 d2                	xor    %edx,%edx
    48ae:	ff 15 ec 36 24 00    	callq  *0x2436ec(%rip)        # 247fa0 <posix_memalign@GLIBC_2.2.5>
    48b4:	85 c0                	test   %eax,%eax
    48b6:	0f 85 1f 03 00 00    	jne    4bdb <_ZN13num_perf_demo4main17h836ce3a93b32691bE+0x88b>
    48bc:	48 8b 6c 24 38       	mov    0x38(%rsp),%rbp
    48c1:	41 bc 00 00 00 00    	mov    $0x0,%r12d
    48c7:	48 85 ed             	test   %rbp,%rbp
    48ca:	0f 84 0e 03 00 00    	je     4bde <_ZN13num_perf_demo4main17h836ce3a93b32691bE+0x88e>
    48d0:	48 8b bc 24 a8 00 00 	mov    0xa8(%rsp),%rdi
    48d7:	00 
    48d8:	ff 15 9a 34 24 00    	callq  *0x24349a(%rip)        # 247d78 <free@GLIBC_2.2.5>
    48de:	48 8b 74 24 30       	mov    0x30(%rsp),%rsi
    48e3:	eb 1b                	jmp    4900 <_ZN13num_perf_demo4main17h836ce3a93b32691bE+0x5b0>
    48e5:	4c 89 e7             	mov    %r12,%rdi
    48e8:	ff 15 1a 36 24 00    	callq  *0x24361a(%rip)        # 247f08 <malloc@GLIBC_2.2.5>
    48ee:	48 89 c5             	mov    %rax,%rbp
    48f1:	48 8b 74 24 30       	mov    0x30(%rsp),%rsi
    48f6:	48 85 ed             	test   %rbp,%rbp
    48f9:	0f 84 df 02 00 00    	je     4bde <_ZN13num_perf_demo4main17h836ce3a93b32691bE+0x88e>
    48ff:	90                   	nop
    4900:	48 89 6c 24 60       	mov    %rbp,0x60(%rsp)
    4905:	49 89 df             	mov    %rbx,%r15
    4908:	e9 0b fe ff ff       	jmpq   4718 <_ZN13num_perf_demo4main17h836ce3a93b32691bE+0x3c8>
    490d:	4c 89 6c 24 70       	mov    %r13,0x70(%rsp)
    4912:	4c 89 7c 24 68       	mov    %r15,0x68(%rsp)
    4917:	4c 8b 2d 5a 34 24 00 	mov    0x24345a(%rip),%r13        # 247d78 <free@GLIBC_2.2.5>
    491e:	eb 4d                	jmp    496d <_ZN13num_perf_demo4main17h836ce3a93b32691bE+0x61d>
    4920:	4c 89 6c 24 70       	mov    %r13,0x70(%rsp)
    4925:	4c 89 7c 24 68       	mov    %r15,0x68(%rsp)
    492a:	4c 3b b4 24 a0 00 00 	cmp    0xa0(%rsp),%r14
    4931:	00 
    4932:	4c 8b 2d 3f 34 24 00 	mov    0x24343f(%rip),%r13        # 247d78 <free@GLIBC_2.2.5>
    4939:	75 12                	jne    494d <_ZN13num_perf_demo4main17h836ce3a93b32691bE+0x5fd>
    493b:	eb 30                	jmp    496d <_ZN13num_perf_demo4main17h836ce3a93b32691bE+0x61d>
    493d:	0f 1f 00             	nopl   (%rax)
    4940:	49 89 de             	mov    %rbx,%r14
    4943:	48 39 9c 24 a0 00 00 	cmp    %rbx,0xa0(%rsp)
    494a:	00 
    494b:	74 20                	je     496d <_ZN13num_perf_demo4main17h836ce3a93b32691bE+0x61d>
    494d:	49 8d 5e 18          	lea    0x18(%r14),%rbx
    4951:	48 89 5c 24 10       	mov    %rbx,0x10(%rsp)
    4956:	49 8b 3e             	mov    (%r14),%rdi
    4959:	48 85 ff             	test   %rdi,%rdi
    495c:	74 0f                	je     496d <_ZN13num_perf_demo4main17h836ce3a93b32691bE+0x61d>
    495e:	49 83 7e 08 00       	cmpq   $0x0,0x8(%r14)
    4963:	74 db                	je     4940 <_ZN13num_perf_demo4main17h836ce3a93b32691bE+0x5f0>
    4965:	c5 f8 77             	vzeroupper 
    4968:	41 ff d5             	callq  *%r13
    496b:	eb d3                	jmp    4940 <_ZN13num_perf_demo4main17h836ce3a93b32691bE+0x5f0>
    496d:	48 83 7c 24 08 00    	cmpq   $0x0,0x8(%rsp)
    4973:	74 0d                	je     4982 <_ZN13num_perf_demo4main17h836ce3a93b32691bE+0x632>
    4975:	48 8b 3c 24          	mov    (%rsp),%rdi
    4979:	c5 f8 77             	vzeroupper 
    497c:	ff 15 f6 33 24 00    	callq  *0x2433f6(%rip)        # 247d78 <free@GLIBC_2.2.5>
    4982:	c5 f8 10 44 24 60    	vmovups 0x60(%rsp),%xmm0
    4988:	c5 f8 29 44 24 40    	vmovaps %xmm0,0x40(%rsp)
    498e:	4c 8b 74 24 70       	mov    0x70(%rsp),%r14
    4993:	4c 89 74 24 50       	mov    %r14,0x50(%rsp)
    if args.len() <= 1 {
    4998:	49 83 fe 01          	cmp    $0x1,%r14
    499c:	0f 86 95 fc ff ff    	jbe    4637 <_ZN13num_perf_demo4main17h836ce3a93b32691bE+0x2e7>
    49a2:	4c 8b 64 24 40       	mov    0x40(%rsp),%r12
    49a7:	49 8b 4c 24 28       	mov    0x28(%r12),%rcx
    49ac:	48 85 c9             	test   %rcx,%rcx
    49af:	0f 84 40 02 00 00    	je     4bf5 <_ZN13num_perf_demo4main17h836ce3a93b32691bE+0x8a5>
    49b5:	49 8b 74 24 18       	mov    0x18(%r12),%rsi
    49ba:	80 3e 2b             	cmpb   $0x2b,(%rsi)
    49bd:	75 0c                	jne    49cb <_ZN13num_perf_demo4main17h836ce3a93b32691bE+0x67b>
    49bf:	48 ff c9             	dec    %rcx
    49c2:	0f 84 2d 02 00 00    	je     4bf5 <_ZN13num_perf_demo4main17h836ce3a93b32691bE+0x8a5>
    49c8:	48 ff c6             	inc    %rsi
    49cb:	31 ff                	xor    %edi,%edi
    49cd:	bd 0a 00 00 00       	mov    $0xa,%ebp
    49d2:	31 c0                	xor    %eax,%eax
    49d4:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    49db:	00 00 00 
    49de:	66 90                	xchg   %ax,%ax
    49e0:	48 39 f9             	cmp    %rdi,%rcx
    49e3:	74 2d                	je     4a12 <_ZN13num_perf_demo4main17h836ce3a93b32691bE+0x6c2>
    49e5:	48 8d 14 3e          	lea    (%rsi,%rdi,1),%rdx
    49e9:	0f b6 1a             	movzbl (%rdx),%ebx
    49ec:	83 c3 d0             	add    $0xffffffd0,%ebx
    49ef:	83 fb 09             	cmp    $0x9,%ebx
    49f2:	0f 87 68 01 00 00    	ja     4b60 <_ZN13num_perf_demo4main17h836ce3a93b32691bE+0x810>
    49f8:	48 f7 e5             	mul    %rbp
    49fb:	b2 02                	mov    $0x2,%dl
    49fd:	0f 80 5f 01 00 00    	jo     4b62 <_ZN13num_perf_demo4main17h836ce3a93b32691bE+0x812>
    4a03:	89 db                	mov    %ebx,%ebx
    4a05:	48 ff c7             	inc    %rdi
    4a08:	48 01 d8             	add    %rbx,%rax
    4a0b:	73 d3                	jae    49e0 <_ZN13num_perf_demo4main17h836ce3a93b32691bE+0x690>
    4a0d:	e9 50 01 00 00       	jmpq   4b62 <_ZN13num_perf_demo4main17h836ce3a93b32691bE+0x812>
    }
    let n: usize = args[1].parse::<usize>().unwrap();
    if n <= 1 {
    4a12:	48 83 f8 02          	cmp    $0x2,%rax
    4a16:	0f 82 1f 02 00 00    	jb     4c3b <_ZN13num_perf_demo4main17h836ce3a93b32691bE+0x8eb>
        eprintln!("Dimension argument too small.");
        exit(1);
    }

    let (sum, cpu_time_used) = mul_test(n);
    4a1c:	48 89 c7             	mov    %rax,%rdi
    4a1f:	c5 f8 77             	vzeroupper 
    4a22:	e8 09 d7 00 00       	callq  12130 <_ZN13num_perf_demo8mul_test17h9955734a3be41a12E>
    4a27:	c5 fb 11 44 24 38    	vmovsd %xmm0,0x38(%rsp)
    4a2d:	c5 fb 11 4c 24 60    	vmovsd %xmm1,0x60(%rsp)

    eprintln!("Sum of product elements = {:.6}.", sum);
    4a33:	48 8d 44 24 38       	lea    0x38(%rsp),%rax
    4a38:	48 89 84 24 80 00 00 	mov    %rax,0x80(%rsp)
    4a3f:	00 
    4a40:	4c 8d 3d a9 b1 00 00 	lea    0xb1a9(%rip),%r15        # fbf0 <_ZN4core3fmt5float52_$LT$impl$u20$core..fmt..Display$u20$for$u20$f64$GT$3fmt17hb0a21601b08973cbE>
    4a47:	4c 89 bc 24 88 00 00 	mov    %r15,0x88(%rsp)
    4a4e:	00 
    4a4f:	48 8d 05 ba 1d 24 00 	lea    0x241dba(%rip),%rax        # 246810 <__init_array_end+0x800>
    4a56:	48 89 04 24          	mov    %rax,(%rsp)
    4a5a:	48 c7 44 24 08 02 00 	movq   $0x2,0x8(%rsp)
    4a61:	00 00 
    4a63:	48 8d 2d 76 7f 03 00 	lea    0x37f76(%rip),%rbp        # 3c9e0 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x80>
    4a6a:	48 89 6c 24 10       	mov    %rbp,0x10(%rsp)
    4a6f:	48 c7 44 24 18 01 00 	movq   $0x1,0x18(%rsp)
    4a76:	00 00 
    4a78:	48 8d 9c 24 80 00 00 	lea    0x80(%rsp),%rbx
    4a7f:	00 
    4a80:	48 89 5c 24 20       	mov    %rbx,0x20(%rsp)
    4a85:	48 c7 44 24 28 01 00 	movq   $0x1,0x28(%rsp)
    4a8c:	00 00 
    4a8e:	48 89 e7             	mov    %rsp,%rdi
    4a91:	e8 ba 62 02 00       	callq  2ad50 <_ZN3std2io5stdio7_eprint17hf19d6fb036d8919dE>
    4a96:	48 8d 44 24 60       	lea    0x60(%rsp),%rax
    eprintln!("Time taken = {:.6} second.", cpu_time_used);
    4a9b:	48 89 84 24 80 00 00 	mov    %rax,0x80(%rsp)
    4aa2:	00 
    4aa3:	4c 89 bc 24 88 00 00 	mov    %r15,0x88(%rsp)
    4aaa:	00 
    4aab:	48 8d 05 7e 1d 24 00 	lea    0x241d7e(%rip),%rax        # 246830 <__init_array_end+0x820>
    4ab2:	48 89 04 24          	mov    %rax,(%rsp)
    4ab6:	48 c7 44 24 08 02 00 	movq   $0x2,0x8(%rsp)
    4abd:	00 00 
    4abf:	48 89 6c 24 10       	mov    %rbp,0x10(%rsp)
    4ac4:	48 c7 44 24 18 01 00 	movq   $0x1,0x18(%rsp)
    4acb:	00 00 
    4acd:	48 89 5c 24 20       	mov    %rbx,0x20(%rsp)
    4ad2:	48 c7 44 24 28 01 00 	movq   $0x1,0x28(%rsp)
    4ad9:	00 00 
    4adb:	48 89 e7             	mov    %rsp,%rdi
    4ade:	e8 6d 62 02 00       	callq  2ad50 <_ZN3std2io5stdio7_eprint17hf19d6fb036d8919dE>
    4ae3:	49 c1 e6 03          	shl    $0x3,%r14
    4ae7:	4b 8d 2c 76          	lea    (%r14,%r14,2),%rbp
    4aeb:	31 db                	xor    %ebx,%ebx
    4aed:	49 83 7c 1c 08 00    	cmpq   $0x0,0x8(%r12,%rbx,1)
    4af3:	75 1c                	jne    4b11 <_ZN13num_perf_demo4main17h836ce3a93b32691bE+0x7c1>
    4af5:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    4afc:	00 00 00 
    4aff:	90                   	nop
    4b00:	48 83 c3 18          	add    $0x18,%rbx
    4b04:	48 39 dd             	cmp    %rbx,%rbp
    4b07:	74 18                	je     4b21 <_ZN13num_perf_demo4main17h836ce3a93b32691bE+0x7d1>
    4b09:	49 83 7c 1c 08 00    	cmpq   $0x0,0x8(%r12,%rbx,1)
    4b0f:	74 ef                	je     4b00 <_ZN13num_perf_demo4main17h836ce3a93b32691bE+0x7b0>
    4b11:	49 8b 3c 1c          	mov    (%r12,%rbx,1),%rdi
    4b15:	41 ff d5             	callq  *%r13
    4b18:	48 83 c3 18          	add    $0x18,%rbx
    4b1c:	48 39 dd             	cmp    %rbx,%rbp
    4b1f:	75 e8                	jne    4b09 <_ZN13num_perf_demo4main17h836ce3a93b32691bE+0x7b9>
    4b21:	48 83 7c 24 48 00    	cmpq   $0x0,0x48(%rsp)
    4b27:	74 09                	je     4b32 <_ZN13num_perf_demo4main17h836ce3a93b32691bE+0x7e2>
    4b29:	4c 89 e7             	mov    %r12,%rdi
    4b2c:	ff 15 46 32 24 00    	callq  *0x243246(%rip)        # 247d78 <free@GLIBC_2.2.5>
}
    4b32:	48 81 c4 c8 00 00 00 	add    $0xc8,%rsp
    4b39:	5b                   	pop    %rbx
    4b3a:	41 5c                	pop    %r12
    4b3c:	41 5d                	pop    %r13
    4b3e:	41 5e                	pop    %r14
    4b40:	41 5f                	pop    %r15
    4b42:	5d                   	pop    %rbp
    4b43:	c3                   	retq   
    4b44:	4c 89 2c 24          	mov    %r13,(%rsp)
    4b48:	4c 89 74 24 10       	mov    %r14,0x10(%rsp)
    4b4d:	48 c7 c7 ff ff ff ff 	mov    $0xffffffffffffffff,%rdi
    4b54:	31 f6                	xor    %esi,%esi
    4b56:	e8 75 30 00 00       	callq  7bd0 <_ZN4core5slice20slice_index_len_fail17h52736412c1ce1871E>
    4b5b:	e9 19 fb ff ff       	jmpq   4679 <_ZN13num_perf_demo4main17h836ce3a93b32691bE+0x329>
    4b60:	b2 01                	mov    $0x1,%dl
    4b62:	88 14 24             	mov    %dl,(%rsp)
    4b65:	48 8d 3d 55 8d 03 00 	lea    0x38d55(%rip),%rdi        # 3d8c1 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0xf61>
    4b6c:	48 8d 0d d5 14 24 00 	lea    0x2414d5(%rip),%rcx        # 246048 <__init_array_end+0x38>
    4b73:	4c 8d 05 fe 14 24 00 	lea    0x2414fe(%rip),%r8        # 246078 <__init_array_end+0x68>
    4b7a:	48 89 e2             	mov    %rsp,%rdx
    4b7d:	be 2b 00 00 00       	mov    $0x2b,%esi
    4b82:	c5 f8 77             	vzeroupper 
    4b85:	e8 d6 50 00 00       	callq  9c60 <_ZN4core6option18expect_none_failed17he0fec195c6e4c2ecE>
    4b8a:	e9 ea fa ff ff       	jmpq   4679 <_ZN13num_perf_demo4main17h836ce3a93b32691bE+0x329>
    4b8f:	48 89 5c 24 40       	mov    %rbx,0x40(%rsp)
    4b94:	4c 89 7c 24 48       	mov    %r15,0x48(%rsp)
    4b99:	48 89 6c 24 50       	mov    %rbp,0x50(%rsp)
    4b9e:	48 8d 3d 1c 8d 03 00 	lea    0x38d1c(%rip),%rdi        # 3d8c1 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0xf61>
    4ba5:	48 8d 0d 0c 2a 24 00 	lea    0x242a0c(%rip),%rcx        # 2475b8 <__init_array_end+0x15a8>
    4bac:	4c 8d 05 25 2a 24 00 	lea    0x242a25(%rip),%r8        # 2475d8 <__init_array_end+0x15c8>
    4bb3:	48 8d 54 24 40       	lea    0x40(%rsp),%rdx
    4bb8:	be 2b 00 00 00       	mov    $0x2b,%esi
    4bbd:	e8 9e 50 00 00       	callq  9c60 <_ZN4core6option18expect_none_failed17he0fec195c6e4c2ecE>
    4bc2:	e9 b2 fa ff ff       	jmpq   4679 <_ZN13num_perf_demo4main17h836ce3a93b32691bE+0x329>
    4bc7:	4c 89 7c 24 70       	mov    %r15,0x70(%rsp)
    4bcc:	4c 89 7c 24 68       	mov    %r15,0x68(%rsp)
    4bd1:	e8 fa 08 00 00       	callq  54d0 <_ZN5alloc7raw_vec17capacity_overflow17h9be7d3ce681ac1a6E>
    4bd6:	e9 9e fa ff ff       	jmpq   4679 <_ZN13num_perf_demo4main17h836ce3a93b32691bE+0x329>
    4bdb:	45 31 e4             	xor    %r12d,%r12d
    4bde:	4c 89 e7             	mov    %r12,%rdi
    4be1:	4c 89 f6             	mov    %r14,%rsi
    4be4:	e8 d7 08 00 00       	callq  54c0 <_ZN5alloc5alloc18handle_alloc_error17hf7bb8682f6c8b1d7E>
    4be9:	0f 0b                	ud2    
    4beb:	e8 e0 08 00 00       	callq  54d0 <_ZN5alloc7raw_vec17capacity_overflow17h9be7d3ce681ac1a6E>
    4bf0:	e9 84 fa ff ff       	jmpq   4679 <_ZN13num_perf_demo4main17h836ce3a93b32691bE+0x329>
    4bf5:	31 d2                	xor    %edx,%edx
    4bf7:	e9 66 ff ff ff       	jmpq   4b62 <_ZN13num_perf_demo4main17h836ce3a93b32691bE+0x812>
    4bfc:	4c 89 3c 24          	mov    %r15,(%rsp)
    4c00:	4c 89 64 24 08       	mov    %r12,0x8(%rsp)
    4c05:	4c 89 74 24 10       	mov    %r14,0x10(%rsp)
    4c0a:	48 8d 3d b0 8c 03 00 	lea    0x38cb0(%rip),%rdi        # 3d8c1 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0xf61>
    4c11:	48 8d 0d a0 29 24 00 	lea    0x2429a0(%rip),%rcx        # 2475b8 <__init_array_end+0x15a8>
    4c18:	4c 8d 05 b9 29 24 00 	lea    0x2429b9(%rip),%r8        # 2475d8 <__init_array_end+0x15c8>
    4c1f:	48 89 e2             	mov    %rsp,%rdx
    4c22:	be 2b 00 00 00       	mov    $0x2b,%esi
    4c27:	e8 34 50 00 00       	callq  9c60 <_ZN4core6option18expect_none_failed17he0fec195c6e4c2ecE>
    4c2c:	e9 48 fa ff ff       	jmpq   4679 <_ZN13num_perf_demo4main17h836ce3a93b32691bE+0x329>
    4c31:	e8 8a e9 00 00       	callq  135c0 <_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$11allocate_in28_$u7b$$u7b$closure$u7d$$u7d$17h571564fc3a49ddd9E>
    4c36:	e9 3e fa ff ff       	jmpq   4679 <_ZN13num_perf_demo4main17h836ce3a93b32691bE+0x329>
    4c3b:	48 8d 05 4e 14 24 00 	lea    0x24144e(%rip),%rax        # 246090 <__init_array_end+0x80>
    4c42:	48 89 04 24          	mov    %rax,(%rsp)
    4c46:	48 c7 44 24 08 01 00 	movq   $0x1,0x8(%rsp)
    4c4d:	00 00 
    4c4f:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
    4c56:	00 00 
    4c58:	48 8d 05 d9 87 03 00 	lea    0x387d9(%rip),%rax        # 3d438 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0xad8>
    4c5f:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
    4c64:	48 c7 44 24 28 00 00 	movq   $0x0,0x28(%rsp)
    4c6b:	00 00 
    4c6d:	48 89 e7             	mov    %rsp,%rdi
        eprintln!("Dimension argument too small.");
    4c70:	c5 f8 77             	vzeroupper 
    4c73:	e8 d8 60 02 00       	callq  2ad50 <_ZN3std2io5stdio7_eprint17hf19d6fb036d8919dE>
        exit(1);
    4c78:	e8 a3 65 02 00       	callq  2b220 <_ZN3std7process4exit17h48d7a25190f60a46E>
    4c7d:	e9 f7 f9 ff ff       	jmpq   4679 <_ZN13num_perf_demo4main17h836ce3a93b32691bE+0x329>
    4c82:	be 08 00 00 00       	mov    $0x8,%esi
    4c87:	48 89 df             	mov    %rbx,%rdi
    4c8a:	e8 31 08 00 00       	callq  54c0 <_ZN5alloc5alloc18handle_alloc_error17hf7bb8682f6c8b1d7E>
    4c8f:	0f 0b                	ud2    
    4c91:	48 89 c3             	mov    %rax,%rbx
    4c94:	48 89 e7             	mov    %rsp,%rdi
    4c97:	e8 94 f5 ff ff       	callq  4230 <_ZN4core3ptr13drop_in_place17h1603095b365555f6E>
    4c9c:	eb 0b                	jmp    4ca9 <_ZN13num_perf_demo4main17h836ce3a93b32691bE+0x959>
    4c9e:	48 89 c3             	mov    %rax,%rbx
    4ca1:	48 89 e7             	mov    %rsp,%rdi
    4ca4:	e8 07 02 02 00       	callq  24eb0 <_ZN4core3ptr13drop_in_place17h5563ae43ca5ac214E>
    4ca9:	48 8d bc 24 80 00 00 	lea    0x80(%rsp),%rdi
    4cb0:	00 
    4cb1:	e8 9a f5 ff ff       	callq  4250 <_ZN4core3ptr13drop_in_place17h5712d1ad92044065E>
    4cb6:	48 89 df             	mov    %rbx,%rdi
    4cb9:	e8 e2 f3 ff ff       	callq  40a0 <_Unwind_Resume@plt>
    4cbe:	0f 0b                	ud2    
    4cc0:	48 89 c3             	mov    %rax,%rbx
    4cc3:	eb 52                	jmp    4d17 <_ZN13num_perf_demo4main17h836ce3a93b32691bE+0x9c7>
    4cc5:	48 89 c3             	mov    %rax,%rbx
    4cc8:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
    4ccd:	e8 5e f5 ff ff       	callq  4230 <_ZN4core3ptr13drop_in_place17h1603095b365555f6E>
    4cd2:	eb 1c                	jmp    4cf0 <_ZN13num_perf_demo4main17h836ce3a93b32691bE+0x9a0>
    4cd4:	48 89 c3             	mov    %rax,%rbx
    4cd7:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
    4cdc:	e8 cf 01 02 00       	callq  24eb0 <_ZN4core3ptr13drop_in_place17h5563ae43ca5ac214E>
    4ce1:	4c 89 6c 24 70       	mov    %r13,0x70(%rsp)
    4ce6:	48 8b 44 24 78       	mov    0x78(%rsp),%rax
    4ceb:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
    4cf0:	48 89 e7             	mov    %rsp,%rdi
    4cf3:	e8 58 f5 ff ff       	callq  4250 <_ZN4core3ptr13drop_in_place17h5712d1ad92044065E>
    4cf8:	48 8d 7c 24 60       	lea    0x60(%rsp),%rdi
    4cfd:	e8 be f5 ff ff       	callq  42c0 <_ZN4core3ptr13drop_in_place17hbceefdc2b3e7349fE>
    4d02:	48 89 df             	mov    %rbx,%rdi
    4d05:	e8 96 f3 ff ff       	callq  40a0 <_Unwind_Resume@plt>
    4d0a:	0f 0b                	ud2    
    4d0c:	48 89 c3             	mov    %rax,%rbx
    4d0f:	48 89 e7             	mov    %rsp,%rdi
    4d12:	e8 f9 4a 02 00       	callq  29810 <_ZN4core3ptr13drop_in_place17hd9662a405d88168dE>
    4d17:	48 8d bc 24 80 00 00 	lea    0x80(%rsp),%rdi
    4d1e:	00 
    4d1f:	e8 6c 4a 02 00       	callq  29790 <_ZN4core3ptr13drop_in_place17h3299cdb2d88644f0E>
    4d24:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
    4d29:	e8 c2 e7 01 00       	callq  234f0 <_ZN4core3ptr13drop_in_place17hdc1814fe4f8f9b15E>
    4d2e:	48 89 df             	mov    %rbx,%rdi
    4d31:	e8 6a f3 ff ff       	callq  40a0 <_Unwind_Resume@plt>
    4d36:	0f 0b                	ud2    
    4d38:	48 89 c3             	mov    %rax,%rbx
    4d3b:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
    4d40:	e8 7b f5 ff ff       	callq  42c0 <_ZN4core3ptr13drop_in_place17hbceefdc2b3e7349fE>
    4d45:	48 89 df             	mov    %rbx,%rdi
    4d48:	e8 53 f3 ff ff       	callq  40a0 <_Unwind_Resume@plt>
    4d4d:	0f 0b                	ud2    
    4d4f:	90                   	nop

0000000000004d50 <main>:
    4d50:	55                   	push   %rbp
    4d51:	48 89 e5             	mov    %rsp,%rbp
    4d54:	41 57                	push   %r15
    4d56:	41 56                	push   %r14
    4d58:	41 55                	push   %r13
    4d5a:	41 54                	push   %r12
    4d5c:	53                   	push   %rbx
    4d5d:	48 83 e4 e0          	and    $0xffffffffffffffe0,%rsp
    4d61:	48 81 ec 80 01 00 00 	sub    $0x180,%rsp
    4d68:	8a 05 b2 a3 03 00    	mov    0x3a3b2(%rip),%al        # 3f120 <__rustc_debug_gdb_scripts_section__>
    4d6e:	48 8d 05 db f5 ff ff 	lea    -0xa25(%rip),%rax        # 4350 <_ZN13num_perf_demo4main17h836ce3a93b32691bE>
    4d75:	48 89 84 24 a8 00 00 	mov    %rax,0xa8(%rsp)
    4d7c:	00 
    4d7d:	48 8d 84 24 a8 00 00 	lea    0xa8(%rsp),%rax
    4d84:	00 
    4d85:	48 89 84 24 b0 00 00 	mov    %rax,0xb0(%rsp)
    4d8c:	00 
    4d8d:	48 8d 05 84 12 24 00 	lea    0x241284(%rip),%rax        # 246018 <__init_array_end+0x8>
    4d94:	48 89 84 24 b8 00 00 	mov    %rax,0xb8(%rsp)
    4d9b:	00 
    4d9c:	be 01 00 00 00       	mov    $0x1,%esi
    4da1:	bf 0d 00 00 00       	mov    $0xd,%edi
    4da6:	ff 15 0c 31 24 00    	callq  *0x24310c(%rip)        # 247eb8 <signal@GLIBC_2.2.5>
    4dac:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
    4db0:	0f 84 4b 03 00 00    	je     5101 <main+0x3b1>
    4db6:	bf 1e 00 00 00       	mov    $0x1e,%edi
    4dbb:	ff 15 bf 31 24 00    	callq  *0x2431bf(%rip)        # 247f80 <sysconf@GLIBC_2.2.5>
    4dc1:	48 89 05 40 34 24 00 	mov    %rax,0x243440(%rip)        # 248208 <_ZN3std3sys4unix6thread5guard9PAGE_SIZE17h3a4c25a44e74b197E>
    4dc8:	48 85 c0             	test   %rax,%rax
    4dcb:	0f 84 4a 03 00 00    	je     511b <main+0x3cb>
    4dd1:	c5 f8 57 c0          	vxorps %xmm0,%xmm0,%xmm0
    4dd5:	c5 fc 11 84 24 d8 00 	vmovups %ymm0,0xd8(%rsp)
    4ddc:	00 00 
    4dde:	c5 fc 29 84 24 c0 00 	vmovaps %ymm0,0xc0(%rsp)
    4de5:	00 00 
    4de7:	48 8d bc 24 c0 00 00 	lea    0xc0(%rsp),%rdi
    4dee:	00 
    4def:	c5 f8 77             	vzeroupper 
    4df2:	ff 15 a8 30 24 00    	callq  *0x2430a8(%rip)        # 247ea0 <pthread_attr_init@GLIBC_2.2.5>
    4df8:	89 44 24 18          	mov    %eax,0x18(%rsp)
    4dfc:	85 c0                	test   %eax,%eax
    4dfe:	0f 85 31 03 00 00    	jne    5135 <main+0x3e5>
    4e04:	ff 15 5e 31 24 00    	callq  *0x24315e(%rip)        # 247f68 <pthread_self@GLIBC_2.2.5>
    4e0a:	48 8d b4 24 c0 00 00 	lea    0xc0(%rsp),%rsi
    4e11:	00 
    4e12:	48 89 c7             	mov    %rax,%rdi
    4e15:	ff 15 8d 2f 24 00    	callq  *0x242f8d(%rip)        # 247da8 <pthread_getattr_np@GLIBC_2.2.5>
    4e1b:	85 c0                	test   %eax,%eax
    4e1d:	74 07                	je     4e26 <main+0xd6>
    4e1f:	bb 01 00 00 00       	mov    $0x1,%ebx
    4e24:	eb 49                	jmp    4e6f <main+0x11f>
    4e26:	48 c7 84 24 88 00 00 	movq   $0x0,0x88(%rsp)
    4e2d:	00 00 00 00 00 
    4e32:	48 c7 44 24 18 00 00 	movq   $0x0,0x18(%rsp)
    4e39:	00 00 
    4e3b:	48 8d bc 24 c0 00 00 	lea    0xc0(%rsp),%rdi
    4e42:	00 
    4e43:	48 8d b4 24 88 00 00 	lea    0x88(%rsp),%rsi
    4e4a:	00 
    4e4b:	48 8d 54 24 18       	lea    0x18(%rsp),%rdx
    4e50:	ff 15 22 30 24 00    	callq  *0x243022(%rip)        # 247e78 <pthread_attr_getstack@GLIBC_2.2.5>
    4e56:	89 84 24 84 00 00 00 	mov    %eax,0x84(%rsp)
    4e5d:	85 c0                	test   %eax,%eax
    4e5f:	0f 85 f9 03 00 00    	jne    525e <main+0x50e>
    4e65:	4c 8b bc 24 88 00 00 	mov    0x88(%rsp),%r15
    4e6c:	00 
    4e6d:	31 db                	xor    %ebx,%ebx
    4e6f:	48 8d bc 24 c0 00 00 	lea    0xc0(%rsp),%rdi
    4e76:	00 
    4e77:	ff 15 0b 31 24 00    	callq  *0x24310b(%rip)        # 247f88 <pthread_attr_destroy@GLIBC_2.2.5>
    4e7d:	89 44 24 18          	mov    %eax,0x18(%rsp)
    4e81:	85 c0                	test   %eax,%eax
    4e83:	0f 85 2b 03 00 00    	jne    51b4 <main+0x464>
    4e89:	48 85 db             	test   %rbx,%rbx
    4e8c:	74 0c                	je     4e9a <main+0x14a>
    4e8e:	31 c0                	xor    %eax,%eax
    4e90:	48 89 84 24 90 00 00 	mov    %rax,0x90(%rsp)
    4e97:	00 
    4e98:	eb 4e                	jmp    4ee8 <main+0x198>
    4e9a:	48 8b 0d 67 33 24 00 	mov    0x243367(%rip),%rcx        # 248208 <_ZN3std3sys4unix6thread5guard9PAGE_SIZE17h3a4c25a44e74b197E>
    4ea1:	48 85 c9             	test   %rcx,%rcx
    4ea4:	0f 84 36 04 00 00    	je     52e0 <main+0x590>
    4eaa:	4c 89 f8             	mov    %r15,%rax
    4ead:	48 09 c8             	or     %rcx,%rax
    4eb0:	48 c1 e8 20          	shr    $0x20,%rax
    4eb4:	74 0a                	je     4ec0 <main+0x170>
    4eb6:	4c 89 f8             	mov    %r15,%rax
    4eb9:	31 d2                	xor    %edx,%edx
    4ebb:	48 f7 f1             	div    %rcx
    4ebe:	eb 07                	jmp    4ec7 <main+0x177>
    4ec0:	44 89 f8             	mov    %r15d,%eax
    4ec3:	31 d2                	xor    %edx,%edx
    4ec5:	f7 f1                	div    %ecx
    4ec7:	4e 8d 34 39          	lea    (%rcx,%r15,1),%r14
    4ecb:	49 29 d6             	sub    %rdx,%r14
    4ece:	48 85 d2             	test   %rdx,%rdx
    4ed1:	4d 0f 44 f7          	cmove  %r15,%r14
    4ed5:	4d 89 f7             	mov    %r14,%r15
    4ed8:	49 29 cf             	sub    %rcx,%r15
    4edb:	b8 01 00 00 00       	mov    $0x1,%eax
    4ee0:	48 89 84 24 90 00 00 	mov    %rax,0x90(%rsp)
    4ee7:	00 
    4ee8:	c5 f8 57 c0          	vxorps %xmm0,%xmm0,%xmm0
    4eec:	c5 fc 11 84 24 38 01 	vmovups %ymm0,0x138(%rsp)
    4ef3:	00 00 
    4ef5:	c5 fc 11 84 24 28 01 	vmovups %ymm0,0x128(%rsp)
    4efc:	00 00 
    4efe:	c5 fc 11 84 24 08 01 	vmovups %ymm0,0x108(%rsp)
    4f05:	00 00 
    4f07:	c5 fc 11 84 24 e8 00 	vmovups %ymm0,0xe8(%rsp)
    4f0e:	00 00 
    4f10:	c5 fc 11 84 24 c8 00 	vmovups %ymm0,0xc8(%rsp)
    4f17:	00 00 
    4f19:	c7 84 24 48 01 00 00 	movl   $0x8000004,0x148(%rsp)
    4f20:	04 00 00 08 
    4f24:	48 8d 05 f5 73 02 00 	lea    0x273f5(%rip),%rax        # 2c320 <_ZN3std3sys4unix14stack_overflow3imp14signal_handler17h6d817a4444c19957E>
    4f2b:	48 89 84 24 c0 00 00 	mov    %rax,0xc0(%rsp)
    4f32:	00 
    4f33:	4c 8b 25 96 2e 24 00 	mov    0x242e96(%rip),%r12        # 247dd0 <sigaction@GLIBC_2.2.5>
    4f3a:	45 31 ed             	xor    %r13d,%r13d
    4f3d:	48 8d 9c 24 c0 00 00 	lea    0xc0(%rsp),%rbx
    4f44:	00 
    4f45:	bf 0b 00 00 00       	mov    $0xb,%edi
    4f4a:	48 89 de             	mov    %rbx,%rsi
    4f4d:	31 d2                	xor    %edx,%edx
    4f4f:	c5 f8 77             	vzeroupper 
    4f52:	41 ff d4             	callq  *%r12
    4f55:	bf 07 00 00 00       	mov    $0x7,%edi
    4f5a:	48 89 de             	mov    %rbx,%rsi
    4f5d:	31 d2                	xor    %edx,%edx
    4f5f:	41 ff d4             	callq  *%r12
    4f62:	c5 f8 57 c0          	vxorps %xmm0,%xmm0,%xmm0
    4f66:	c5 f8 29 44 24 30    	vmovaps %xmm0,0x30(%rsp)
    4f6c:	48 c7 44 24 40 00 00 	movq   $0x0,0x40(%rsp)
    4f73:	00 00 
    4f75:	48 8d 74 24 30       	lea    0x30(%rsp),%rsi
    4f7a:	31 ff                	xor    %edi,%edi
    4f7c:	ff 15 36 30 24 00    	callq  *0x243036(%rip)        # 247fb8 <sigaltstack@GLIBC_2.2.5>
    4f82:	f6 44 24 38 02       	testb  $0x2,0x38(%rsp)
    4f87:	74 55                	je     4fde <main+0x28e>
    4f89:	be 00 20 00 00       	mov    $0x2000,%esi
    4f8e:	bf 00 00 00 00       	mov    $0x0,%edi
    4f93:	ba 03 00 00 00       	mov    $0x3,%edx
    4f98:	b9 22 00 00 00       	mov    $0x22,%ecx
    4f9d:	41 b8 ff ff ff ff    	mov    $0xffffffff,%r8d
    4fa3:	45 31 c9             	xor    %r9d,%r9d
    4fa6:	ff 15 7c 2e 24 00    	callq  *0x242e7c(%rip)        # 247e28 <mmap@GLIBC_2.2.5>
    4fac:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
    4fb0:	0f 84 8e 02 00 00    	je     5244 <main+0x4f4>
    4fb6:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
    4fbb:	c7 44 24 38 00 00 00 	movl   $0x0,0x38(%rsp)
    4fc2:	00 
    4fc3:	48 c7 44 24 40 00 20 	movq   $0x2000,0x40(%rsp)
    4fca:	00 00 
    4fcc:	48 8d 7c 24 30       	lea    0x30(%rsp),%rdi
    4fd1:	31 f6                	xor    %esi,%esi
    4fd3:	ff 15 df 2f 24 00    	callq  *0x242fdf(%rip)        # 247fb8 <sigaltstack@GLIBC_2.2.5>
    4fd9:	4c 8b 6c 24 30       	mov    0x30(%rsp),%r13
    4fde:	4c 89 2d 0b 32 24 00 	mov    %r13,0x24320b(%rip)        # 2481f0 <_ZN3std3sys4unix14stack_overflow3imp13MAIN_ALTSTACK17h264a7759a758f34eE>
    4fe5:	bf 04 00 00 00       	mov    $0x4,%edi
    4fea:	ff 15 18 2f 24 00    	callq  *0x242f18(%rip)        # 247f08 <malloc@GLIBC_2.2.5>
    4ff0:	48 85 c0             	test   %rax,%rax
    4ff3:	0f 84 3a 02 00 00    	je     5233 <main+0x4e3>
    4ff9:	c7 00 6d 61 69 6e    	movl   $0x6e69616d,(%rax)
    4fff:	48 89 84 24 c0 00 00 	mov    %rax,0xc0(%rsp)
    5006:	00 
    5007:	c5 f8 28 05 51 53 03 	vmovaps 0x35351(%rip),%xmm0        # 3a360 <_fini+0x1c>
    500e:	00 
    500f:	c5 f8 11 84 24 c8 00 	vmovups %xmm0,0xc8(%rsp)
    5016:	00 00 
    5018:	48 8d bc 24 c0 00 00 	lea    0xc0(%rsp),%rdi
    501f:	00 
    5020:	e8 3b df 01 00       	callq  22f60 <_ZN3std6thread6Thread3new17h4aa6d776ccf79e9dE>
    5025:	48 8b 8c 24 90 00 00 	mov    0x90(%rsp),%rcx
    502c:	00 
    502d:	48 89 8c 24 c0 00 00 	mov    %rcx,0xc0(%rsp)
    5034:	00 
    5035:	4c 89 bc 24 c8 00 00 	mov    %r15,0xc8(%rsp)
    503c:	00 
    503d:	4c 89 b4 24 d0 00 00 	mov    %r14,0xd0(%rsp)
    5044:	00 
    5045:	48 8d bc 24 c0 00 00 	lea    0xc0(%rsp),%rdi
    504c:	00 
    504d:	48 89 c6             	mov    %rax,%rsi
    5050:	e8 4b 6f 02 00       	callq  2bfa0 <_ZN3std10sys_common11thread_info3set17h5184dcec2d40b2c6E>
    5055:	48 8b bc 24 b0 00 00 	mov    0xb0(%rsp),%rdi
    505c:	00 
    505d:	48 8b b4 24 b8 00 00 	mov    0xb8(%rsp),%rsi
    5064:	00 
    5065:	e8 c6 75 02 00       	callq  2c630 <_ZN3std10sys_common9backtrace28__rust_begin_short_backtrace17hcbc62328ecb87c1cE>
    506a:	89 84 24 c4 00 00 00 	mov    %eax,0xc4(%rsp)
    5071:	31 c0                	xor    %eax,%eax
    5073:	89 84 24 c0 00 00 00 	mov    %eax,0xc0(%rsp)
    507a:	48 8b 05 67 31 24 00 	mov    0x243167(%rip),%rax        # 2481e8 <_ZN3std10sys_common7cleanup7CLEANUP17he74d084b7257e166E>
    5081:	48 83 f8 03          	cmp    $0x3,%rax
    5085:	74 27                	je     50ae <main+0x35e>
    5087:	c6 44 24 60 01       	movb   $0x1,0x60(%rsp)
    508c:	48 8d 44 24 60       	lea    0x60(%rsp),%rax
    5091:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
    5096:	48 8d 3d 4b 31 24 00 	lea    0x24314b(%rip),%rdi        # 2481e8 <_ZN3std10sys_common7cleanup7CLEANUP17he74d084b7257e166E>
    509d:	48 8d 15 6c 27 24 00 	lea    0x24276c(%rip),%rdx        # 247810 <__init_array_end+0x1800>
    50a4:	48 8d 74 24 30       	lea    0x30(%rsp),%rsi
    50a9:	e8 e2 61 02 00       	callq  2b290 <_ZN3std4sync4once4Once10call_inner17hfabbd1bc15485aefE>
    50ae:	8b 84 24 c0 00 00 00 	mov    0xc0(%rsp),%eax
    50b5:	4c 8b b4 24 c8 00 00 	mov    0xc8(%rsp),%r14
    50bc:	00 
    50bd:	4c 8b bc 24 d0 00 00 	mov    0xd0(%rsp),%r15
    50c4:	00 
    50c5:	bb 65 00 00 00       	mov    $0x65,%ebx
    50ca:	83 f8 01             	cmp    $0x1,%eax
    50cd:	74 07                	je     50d6 <main+0x386>
    50cf:	8b 9c 24 c4 00 00 00 	mov    0xc4(%rsp),%ebx
    50d6:	85 c0                	test   %eax,%eax
    50d8:	74 16                	je     50f0 <main+0x3a0>
    50da:	4c 89 f7             	mov    %r14,%rdi
    50dd:	41 ff 17             	callq  *(%r15)
    50e0:	49 83 7f 08 00       	cmpq   $0x0,0x8(%r15)
    50e5:	74 09                	je     50f0 <main+0x3a0>
    50e7:	4c 89 f7             	mov    %r14,%rdi
    50ea:	ff 15 88 2c 24 00    	callq  *0x242c88(%rip)        # 247d78 <free@GLIBC_2.2.5>
    50f0:	89 d8                	mov    %ebx,%eax
    50f2:	48 8d 65 d8          	lea    -0x28(%rbp),%rsp
    50f6:	5b                   	pop    %rbx
    50f7:	41 5c                	pop    %r12
    50f9:	41 5d                	pop    %r13
    50fb:	41 5e                	pop    %r14
    50fd:	41 5f                	pop    %r15
    50ff:	5d                   	pop    %rbp
    5100:	c3                   	retq   
    5101:	48 8d 3d cc 8c 03 00 	lea    0x38ccc(%rip),%rdi        # 3ddd4 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x1474>
    5108:	48 8d 15 01 28 24 00 	lea    0x242801(%rip),%rdx        # 247910 <__init_array_end+0x1900>
    510f:	be 47 00 00 00       	mov    $0x47,%esi
    5114:	e8 a7 e3 01 00       	callq  234c0 <_ZN3std9panicking11begin_panic17hc5f3eabb2c219d56E>
    5119:	0f 0b                	ud2    
    511b:	48 8d 3d fe 56 03 00 	lea    0x356fe(%rip),%rdi        # 3a820 <_ZN4core7unicode12unicode_data2cc19BITSET_INDEX_CHUNKS17h8a1f39cd536e9344E+0x360>
    5122:	48 8d 15 47 28 24 00 	lea    0x242847(%rip),%rdx        # 247970 <__init_array_end+0x1960>
    5129:	be 20 00 00 00       	mov    $0x20,%esi
    512e:	e8 8d e3 01 00       	callq  234c0 <_ZN3std9panicking11begin_panic17hc5f3eabb2c219d56E>
    5133:	0f 0b                	ud2    
    5135:	48 8d 44 24 18       	lea    0x18(%rsp),%rax
    513a:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
    513f:	48 8d 05 52 73 03 00 	lea    0x37352(%rip),%rax        # 3c498 <_ZN4core7unicode12unicode_data15grapheme_extend6BITSET17h68ce7f61ccfa32feE+0x9f8>
    5146:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    514b:	48 8d 44 24 20       	lea    0x20(%rsp),%rax
    5150:	48 89 44 24 60       	mov    %rax,0x60(%rsp)
    5155:	48 8d 05 74 e6 01 00 	lea    0x1e674(%rip),%rax        # 237d0 <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h60ee9c74ee2aa888E>
    515c:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
    5161:	48 8d 4c 24 28       	lea    0x28(%rsp),%rcx
    5166:	48 89 4c 24 70       	mov    %rcx,0x70(%rsp)
    516b:	48 89 44 24 78       	mov    %rax,0x78(%rsp)
    5170:	48 8d 05 21 1d 24 00 	lea    0x241d21(%rip),%rax        # 246e98 <__init_array_end+0xe88>
    5177:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
    517c:	48 c7 44 24 38 03 00 	movq   $0x3,0x38(%rsp)
    5183:	00 00 
    5185:	48 c7 44 24 40 00 00 	movq   $0x0,0x40(%rsp)
    518c:	00 00 
    518e:	48 8d 44 24 60       	lea    0x60(%rsp),%rax
    5193:	48 89 44 24 50       	mov    %rax,0x50(%rsp)
    5198:	48 c7 44 24 58 02 00 	movq   $0x2,0x58(%rsp)
    519f:	00 00 
    51a1:	48 8d 35 80 27 24 00 	lea    0x242780(%rip),%rsi        # 247928 <__init_array_end+0x1918>
    51a8:	48 8d 7c 24 30       	lea    0x30(%rsp),%rdi
    51ad:	e8 2e e8 01 00       	callq  239e0 <_ZN3std9panicking15begin_panic_fmt17h7fd3ef9bf535b4d1E>
    51b2:	0f 0b                	ud2    
    51b4:	48 8d 44 24 18       	lea    0x18(%rsp),%rax
    51b9:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
    51be:	48 8d 05 d3 72 03 00 	lea    0x372d3(%rip),%rax        # 3c498 <_ZN4core7unicode12unicode_data15grapheme_extend6BITSET17h68ce7f61ccfa32feE+0x9f8>
    51c5:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    51ca:	48 8d 44 24 20       	lea    0x20(%rsp),%rax
    51cf:	48 89 44 24 60       	mov    %rax,0x60(%rsp)
    51d4:	48 8d 05 f5 e5 01 00 	lea    0x1e5f5(%rip),%rax        # 237d0 <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h60ee9c74ee2aa888E>
    51db:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
    51e0:	48 8d 4c 24 28       	lea    0x28(%rsp),%rcx
    51e5:	48 89 4c 24 70       	mov    %rcx,0x70(%rsp)
    51ea:	48 89 44 24 78       	mov    %rax,0x78(%rsp)
    51ef:	48 8d 05 a2 1c 24 00 	lea    0x241ca2(%rip),%rax        # 246e98 <__init_array_end+0xe88>
    51f6:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
    51fb:	48 c7 44 24 38 03 00 	movq   $0x3,0x38(%rsp)
    5202:	00 00 
    5204:	48 c7 44 24 40 00 00 	movq   $0x0,0x40(%rsp)
    520b:	00 00 
    520d:	48 8d 44 24 60       	lea    0x60(%rsp),%rax
    5212:	48 89 44 24 50       	mov    %rax,0x50(%rsp)
    5217:	48 c7 44 24 58 02 00 	movq   $0x2,0x58(%rsp)
    521e:	00 00 
    5220:	48 8d 35 31 27 24 00 	lea    0x242731(%rip),%rsi        # 247958 <__init_array_end+0x1948>
    5227:	48 8d 7c 24 30       	lea    0x30(%rsp),%rdi
    522c:	e8 af e7 01 00       	callq  239e0 <_ZN3std9panicking15begin_panic_fmt17h7fd3ef9bf535b4d1E>
    5231:	0f 0b                	ud2    
    5233:	bf 04 00 00 00       	mov    $0x4,%edi
    5238:	be 01 00 00 00       	mov    $0x1,%esi
    523d:	e8 7e 02 00 00       	callq  54c0 <_ZN5alloc5alloc18handle_alloc_error17hf7bb8682f6c8b1d7E>
    5242:	0f 0b                	ud2    
    5244:	48 8d 3d 0e 8c 03 00 	lea    0x38c0e(%rip),%rdi        # 3de59 <str.0+0x39>
    524b:	48 8d 15 4e 27 24 00 	lea    0x24274e(%rip),%rdx        # 2479a0 <__init_array_end+0x1990>
    5252:	be 27 00 00 00       	mov    $0x27,%esi
    5257:	e8 64 e2 01 00       	callq  234c0 <_ZN3std9panicking11begin_panic17hc5f3eabb2c219d56E>
    525c:	0f 0b                	ud2    
    525e:	48 8d 84 24 84 00 00 	lea    0x84(%rsp),%rax
    5265:	00 
    5266:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
    526b:	48 8d 05 26 72 03 00 	lea    0x37226(%rip),%rax        # 3c498 <_ZN4core7unicode12unicode_data15grapheme_extend6BITSET17h68ce7f61ccfa32feE+0x9f8>
    5272:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    5277:	48 8d 44 24 20       	lea    0x20(%rsp),%rax
    527c:	48 89 44 24 60       	mov    %rax,0x60(%rsp)
    5281:	48 8d 05 48 e5 01 00 	lea    0x1e548(%rip),%rax        # 237d0 <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h60ee9c74ee2aa888E>
    5288:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
    528d:	48 8d 4c 24 28       	lea    0x28(%rsp),%rcx
    5292:	48 89 4c 24 70       	mov    %rcx,0x70(%rsp)
    5297:	48 89 44 24 78       	mov    %rax,0x78(%rsp)
    529c:	48 8d 05 f5 1b 24 00 	lea    0x241bf5(%rip),%rax        # 246e98 <__init_array_end+0xe88>
    52a3:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
    52a8:	48 c7 44 24 38 03 00 	movq   $0x3,0x38(%rsp)
    52af:	00 00 
    52b1:	48 c7 44 24 40 00 00 	movq   $0x0,0x40(%rsp)
    52b8:	00 00 
    52ba:	48 8d 44 24 60       	lea    0x60(%rsp),%rax
    52bf:	48 89 44 24 50       	mov    %rax,0x50(%rsp)
    52c4:	48 c7 44 24 58 02 00 	movq   $0x2,0x58(%rsp)
    52cb:	00 00 
    52cd:	48 8d 35 6c 26 24 00 	lea    0x24266c(%rip),%rsi        # 247940 <__init_array_end+0x1930>
    52d4:	48 8d 7c 24 30       	lea    0x30(%rsp),%rdi
    52d9:	e8 02 e7 01 00       	callq  239e0 <_ZN3std9panicking15begin_panic_fmt17h7fd3ef9bf535b4d1E>
    52de:	0f 0b                	ud2    
    52e0:	48 8d 3d 39 8b 03 00 	lea    0x38b39(%rip),%rdi        # 3de20 <str.0>
    52e7:	48 8d 15 9a 26 24 00 	lea    0x24269a(%rip),%rdx        # 247988 <__init_array_end+0x1978>
    52ee:	be 39 00 00 00       	mov    $0x39,%esi
    52f3:	e8 b8 20 00 00       	callq  73b0 <_ZN4core9panicking5panic17h6861470adfbddef8E>
    52f8:	0f 0b                	ud2    
    52fa:	48 89 c3             	mov    %rax,%rbx
    52fd:	48 8d bc 24 c0 00 00 	lea    0xc0(%rsp),%rdi
    5304:	00 
    5305:	e8 c6 72 02 00       	callq  2c5d0 <_ZN4core3ptr13drop_in_place17h900fcba381d9a228E>
    530a:	48 89 df             	mov    %rbx,%rdi
    530d:	e8 8e ed ff ff       	callq  40a0 <_Unwind_Resume@plt>
    5312:	0f 0b                	ud2    
    5314:	48 89 c3             	mov    %rax,%rbx
    5317:	4c 89 f7             	mov    %r14,%rdi
    531a:	4c 89 fe             	mov    %r15,%rsi
    531d:	e8 ee f5 01 00       	callq  24910 <_ZN5alloc5alloc8box_free17h3741427eaa5804e6E>
    5322:	48 89 df             	mov    %rbx,%rdi
    5325:	e8 76 ed ff ff       	callq  40a0 <_Unwind_Resume@plt>
    532a:	0f 0b                	ud2    
    532c:	c5 fa 6f 40 40       	vmovdqu 0x40(%rax),%xmm0
    5331:	c5 f9 7f 84 24 90 00 	vmovdqa %xmm0,0x90(%rsp)
    5338:	00 00 
    533a:	48 89 c7             	mov    %rax,%rdi
    533d:	ff 15 35 2a 24 00    	callq  *0x242a35(%rip)        # 247d78 <free@GLIBC_2.2.5>
    5343:	64 48 83 3c 25 a0 ff 	cmpq   $0x1,%fs:0xffffffffffffffa0
    534a:	ff ff 01 
    534d:	75 0e                	jne    535d <main+0x60d>
    534f:	64 48 8b 04 25 a8 ff 	mov    %fs:0xffffffffffffffa8,%rax
    5356:	ff ff 
    5358:	48 ff c8             	dec    %rax
    535b:	eb 1b                	jmp    5378 <main+0x628>
    535d:	b8 01 00 00 00       	mov    $0x1,%eax
    5362:	c4 e1 f9 6e c0       	vmovq  %rax,%xmm0
    5367:	64 c5 f9 7f 04 25 a0 	vmovdqa %xmm0,%fs:0xffffffffffffffa0
    536e:	ff ff ff 
    5371:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
    5378:	64 48 89 04 25 a8 ff 	mov    %rax,%fs:0xffffffffffffffa8
    537f:	ff ff 
    5381:	c5 f8 28 84 24 90 00 	vmovaps 0x90(%rsp),%xmm0
    5388:	00 00 
    538a:	c5 f8 11 84 24 c8 00 	vmovups %xmm0,0xc8(%rsp)
    5391:	00 00 
    5393:	b8 01 00 00 00       	mov    $0x1,%eax
    5398:	89 84 24 c0 00 00 00 	mov    %eax,0xc0(%rsp)
    539f:	48 8b 05 42 2e 24 00 	mov    0x242e42(%rip),%rax        # 2481e8 <_ZN3std10sys_common7cleanup7CLEANUP17he74d084b7257e166E>
    53a6:	48 83 f8 03          	cmp    $0x3,%rax
    53aa:	0f 85 d7 fc ff ff    	jne    5087 <main+0x337>
    53b0:	e9 f9 fc ff ff       	jmpq   50ae <main+0x35e>
    53b5:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    53bc:	00 00 00 
    53bf:	90                   	nop

00000000000053c0 <__rust_alloc>:
    53c0:	50                   	push   %rax
    53c1:	48 89 fa             	mov    %rdi,%rdx
    53c4:	48 83 fe 10          	cmp    $0x10,%rsi
    53c8:	77 0f                	ja     53d9 <__rust_alloc+0x19>
    53ca:	48 39 d6             	cmp    %rdx,%rsi
    53cd:	77 0a                	ja     53d9 <__rust_alloc+0x19>
    53cf:	48 89 d7             	mov    %rdx,%rdi
    53d2:	58                   	pop    %rax
    53d3:	ff 25 2f 2b 24 00    	jmpq   *0x242b2f(%rip)        # 247f08 <malloc@GLIBC_2.2.5>
    53d9:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
    53e0:	00 
    53e1:	48 83 fe 08          	cmp    $0x8,%rsi
    53e5:	b8 08 00 00 00       	mov    $0x8,%eax
    53ea:	48 0f 47 c6          	cmova  %rsi,%rax
    53ee:	48 89 e7             	mov    %rsp,%rdi
    53f1:	48 89 c6             	mov    %rax,%rsi
    53f4:	ff 15 a6 2b 24 00    	callq  *0x242ba6(%rip)        # 247fa0 <posix_memalign@GLIBC_2.2.5>
    53fa:	85 c0                	test   %eax,%eax
    53fc:	75 06                	jne    5404 <__rust_alloc+0x44>
    53fe:	48 8b 04 24          	mov    (%rsp),%rax
    5402:	59                   	pop    %rcx
    5403:	c3                   	retq   
    5404:	31 c0                	xor    %eax,%eax
    5406:	59                   	pop    %rcx
    5407:	c3                   	retq   
    5408:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    540f:	00 

0000000000005410 <__rust_dealloc>:
    5410:	ff 25 62 29 24 00    	jmpq   *0x242962(%rip)        # 247d78 <free@GLIBC_2.2.5>
    5416:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    541d:	00 00 00 

0000000000005420 <__rust_realloc>:
    5420:	41 57                	push   %r15
    5422:	41 56                	push   %r14
    5424:	41 54                	push   %r12
    5426:	53                   	push   %rbx
    5427:	50                   	push   %rax
    5428:	48 89 cb             	mov    %rcx,%rbx
    542b:	49 89 f7             	mov    %rsi,%r15
    542e:	49 89 fe             	mov    %rdi,%r14
    5431:	48 83 fa 10          	cmp    $0x10,%rdx
    5435:	77 1c                	ja     5453 <__rust_realloc+0x33>
    5437:	48 39 da             	cmp    %rbx,%rdx
    543a:	77 17                	ja     5453 <__rust_realloc+0x33>
    543c:	4c 89 f7             	mov    %r14,%rdi
    543f:	48 89 de             	mov    %rbx,%rsi
    5442:	48 83 c4 08          	add    $0x8,%rsp
    5446:	5b                   	pop    %rbx
    5447:	41 5c                	pop    %r12
    5449:	41 5e                	pop    %r14
    544b:	41 5f                	pop    %r15
    544d:	ff 25 e5 2a 24 00    	jmpq   *0x242ae5(%rip)        # 247f38 <realloc@GLIBC_2.2.5>
    5453:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
    545a:	00 
    545b:	48 83 fa 08          	cmp    $0x8,%rdx
    545f:	be 08 00 00 00       	mov    $0x8,%esi
    5464:	48 0f 47 f2          	cmova  %rdx,%rsi
    5468:	48 89 e7             	mov    %rsp,%rdi
    546b:	48 89 da             	mov    %rbx,%rdx
    546e:	ff 15 2c 2b 24 00    	callq  *0x242b2c(%rip)        # 247fa0 <posix_memalign@GLIBC_2.2.5>
    5474:	89 c1                	mov    %eax,%ecx
    5476:	31 c0                	xor    %eax,%eax
    5478:	85 c9                	test   %ecx,%ecx
    547a:	75 2b                	jne    54a7 <__rust_realloc+0x87>
    547c:	4c 8b 24 24          	mov    (%rsp),%r12
    5480:	4d 85 e4             	test   %r12,%r12
    5483:	74 22                	je     54a7 <__rust_realloc+0x87>
    5485:	49 39 df             	cmp    %rbx,%r15
    5488:	4c 0f 47 fb          	cmova  %rbx,%r15
    548c:	4c 89 e7             	mov    %r12,%rdi
    548f:	4c 89 f6             	mov    %r14,%rsi
    5492:	4c 89 fa             	mov    %r15,%rdx
    5495:	ff 15 35 2a 24 00    	callq  *0x242a35(%rip)        # 247ed0 <memcpy@GLIBC_2.14>
    549b:	4c 89 f7             	mov    %r14,%rdi
    549e:	ff 15 d4 28 24 00    	callq  *0x2428d4(%rip)        # 247d78 <free@GLIBC_2.2.5>
    54a4:	4c 89 e0             	mov    %r12,%rax
    54a7:	48 83 c4 08          	add    $0x8,%rsp
    54ab:	5b                   	pop    %rbx
    54ac:	41 5c                	pop    %r12
    54ae:	41 5e                	pop    %r14
    54b0:	41 5f                	pop    %r15
    54b2:	c3                   	retq   
    54b3:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    54ba:	00 00 00 
    54bd:	0f 1f 00             	nopl   (%rax)

00000000000054c0 <_ZN5alloc5alloc18handle_alloc_error17hf7bb8682f6c8b1d7E>:
    54c0:	50                   	push   %rax
    54c1:	e8 ea 6d 02 00       	callq  2c2b0 <rust_oom>
    54c6:	0f 0b                	ud2    
    54c8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    54cf:	00 

00000000000054d0 <_ZN5alloc7raw_vec17capacity_overflow17h9be7d3ce681ac1a6E>:
    54d0:	50                   	push   %rax
    54d1:	48 8d 3d 16 5a 03 00 	lea    0x35a16(%rip),%rdi        # 3aeee <_ZN4core7unicode12unicode_data2cc19BITSET_INDEX_CHUNKS17h8a1f39cd536e9344E+0xa2e>
    54d8:	48 8d 15 c1 0b 24 00 	lea    0x240bc1(%rip),%rdx        # 2460a0 <__init_array_end+0x90>
    54df:	be 11 00 00 00       	mov    $0x11,%esi
    54e4:	e8 c7 1e 00 00       	callq  73b0 <_ZN4core9panicking5panic17h6861470adfbddef8E>
    54e9:	0f 0b                	ud2    
    54eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000054f0 <_ZN50_$LT$$BP$mut$u20$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h0c22205dba98029aE>:
    54f0:	55                   	push   %rbp
    54f1:	53                   	push   %rbx
    54f2:	48 81 ec 98 00 00 00 	sub    $0x98,%rsp
    54f9:	48 89 f3             	mov    %rsi,%rbx
    54fc:	48 8b 07             	mov    (%rdi),%rax
    54ff:	f3 0f 6f 0e          	movdqu (%rsi),%xmm1
    5503:	8b 6e 30             	mov    0x30(%rsi),%ebp
    5506:	89 e9                	mov    %ebp,%ecx
    5508:	40 f6 c5 04          	test   $0x4,%bpl
    550c:	74 1d                	je     552b <_ZN50_$LT$$BP$mut$u20$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h0c22205dba98029aE+0x3b>
    550e:	66 48 0f 7e ca       	movq   %xmm1,%rdx
    5513:	89 e9                	mov    %ebp,%ecx
    5515:	83 c9 08             	or     $0x8,%ecx
    5518:	89 4b 30             	mov    %ecx,0x30(%rbx)
    551b:	48 83 fa 01          	cmp    $0x1,%rdx
    551f:	74 0a                	je     552b <_ZN50_$LT$$BP$mut$u20$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h0c22205dba98029aE+0x3b>
    5521:	0f 28 05 48 4e 03 00 	movaps 0x34e48(%rip),%xmm0        # 3a370 <_fini+0x2c>
    5528:	0f 11 03             	movups %xmm0,(%rbx)
    552b:	83 c9 04             	or     $0x4,%ecx
    552e:	89 4b 30             	mov    %ecx,0x30(%rbx)
    5531:	4c 8d 84 24 98 00 00 	lea    0x98(%rsp),%r8
    5538:	00 
    5539:	45 31 c9             	xor    %r9d,%r9d
    553c:	48 89 c1             	mov    %rax,%rcx
    553f:	90                   	nop
    5540:	48 c1 e9 04          	shr    $0x4,%rcx
    5544:	24 0f                	and    $0xf,%al
    5546:	8d 50 30             	lea    0x30(%rax),%edx
    5549:	8d 70 57             	lea    0x57(%rax),%esi
    554c:	3c 0a                	cmp    $0xa,%al
    554e:	0f b6 c2             	movzbl %dl,%eax
    5551:	40 0f b6 d6          	movzbl %sil,%edx
    5555:	0f 42 d0             	cmovb  %eax,%edx
    5558:	41 88 50 ff          	mov    %dl,-0x1(%r8)
    555c:	49 83 c0 ff          	add    $0xffffffffffffffff,%r8
    5560:	49 83 c1 01          	add    $0x1,%r9
    5564:	48 89 c8             	mov    %rcx,%rax
    5567:	48 85 c9             	test   %rcx,%rcx
    556a:	75 d4                	jne    5540 <_ZN50_$LT$$BP$mut$u20$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h0c22205dba98029aE+0x50>
    556c:	66 0f 7f 0c 24       	movdqa %xmm1,(%rsp)
    5571:	bf 80 00 00 00       	mov    $0x80,%edi
    5576:	4c 29 cf             	sub    %r9,%rdi
    5579:	48 81 ff 81 00 00 00 	cmp    $0x81,%rdi
    5580:	73 2d                	jae    55af <_ZN50_$LT$$BP$mut$u20$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h0c22205dba98029aE+0xbf>
    5582:	48 8d 15 6d 7c 03 00 	lea    0x37c6d(%rip),%rdx        # 3d1f6 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x896>
    5589:	b9 02 00 00 00       	mov    $0x2,%ecx
    558e:	48 89 df             	mov    %rbx,%rdi
    5591:	be 01 00 00 00       	mov    $0x1,%esi
    5596:	e8 55 20 00 00       	callq  75f0 <_ZN4core3fmt9Formatter12pad_integral17hc55c32e78eb96054E>
    559b:	0f 28 04 24          	movaps (%rsp),%xmm0
    559f:	0f 11 03             	movups %xmm0,(%rbx)
    55a2:	89 6b 30             	mov    %ebp,0x30(%rbx)
    55a5:	48 81 c4 98 00 00 00 	add    $0x98,%rsp
    55ac:	5b                   	pop    %rbx
    55ad:	5d                   	pop    %rbp
    55ae:	c3                   	retq   
    55af:	be 80 00 00 00       	mov    $0x80,%esi
    55b4:	e8 97 26 00 00       	callq  7c50 <_ZN4core5slice22slice_index_order_fail17h7bcf2f94ba9e06deE>
    55b9:	0f 0b                	ud2    
    55bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000055c0 <_ZN9backtrace9symbolize6Symbol4name17h05b3ddd11e7b9af9E>:
    55c0:	41 57                	push   %r15
    55c2:	41 56                	push   %r14
    55c4:	53                   	push   %rbx
    55c5:	48 81 ec 00 01 00 00 	sub    $0x100,%rsp
    55cc:	48 89 fb             	mov    %rdi,%rbx
    55cf:	8b 06                	mov    (%rsi),%eax
    55d1:	48 85 c0             	test   %rax,%rax
    55d4:	0f 84 fe 00 00 00    	je     56d8 <_ZN9backtrace9symbolize6Symbol4name17h05b3ddd11e7b9af9E+0x118>
    55da:	48 83 f8 01          	cmp    $0x1,%rax
    55de:	0f 84 0e 01 00 00    	je     56f2 <_ZN9backtrace9symbolize6Symbol4name17h05b3ddd11e7b9af9E+0x132>
    55e4:	4c 8b 76 18          	mov    0x18(%rsi),%r14
    55e8:	4d 85 f6             	test   %r14,%r14
    55eb:	0f 84 f4 00 00 00    	je     56e5 <_ZN9backtrace9symbolize6Symbol4name17h05b3ddd11e7b9af9E+0x125>
    55f1:	4c 89 f7             	mov    %r14,%rdi
    55f4:	ff 15 1e 28 24 00    	callq  *0x24281e(%rip)        # 247e18 <strlen@GLIBC_2.2.5>
    55fa:	49 89 c7             	mov    %rax,%r15
    55fd:	48 89 e7             	mov    %rsp,%rdi
    5600:	4c 89 f6             	mov    %r14,%rsi
    5603:	48 89 c2             	mov    %rax,%rdx
    5606:	e8 55 61 00 00       	callq  b760 <_ZN4core3str9from_utf817ha5f1d279f7594d61E>
    560b:	48 83 3c 24 01       	cmpq   $0x1,(%rsp)
    5610:	b8 03 00 00 00       	mov    $0x3,%eax
    5615:	74 51                	je     5668 <_ZN9backtrace9symbolize6Symbol4name17h05b3ddd11e7b9af9E+0xa8>
    5617:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
    561c:	48 85 f6             	test   %rsi,%rsi
    561f:	74 47                	je     5668 <_ZN9backtrace9symbolize6Symbol4name17h05b3ddd11e7b9af9E+0xa8>
    5621:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
    5626:	48 89 e7             	mov    %rsp,%rdi
    5629:	e8 d2 c6 01 00       	callq  21d00 <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE>
    562e:	48 8b 0c 24          	mov    (%rsp),%rcx
    5632:	b8 03 00 00 00       	mov    $0x3,%eax
    5637:	48 83 f9 03          	cmp    $0x3,%rcx
    563b:	74 2b                	je     5668 <_ZN9backtrace9symbolize6Symbol4name17h05b3ddd11e7b9af9E+0xa8>
    563d:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
    5642:	48 89 44 24 70       	mov    %rax,0x70(%rsp)
    5647:	0f 10 44 24 08       	movups 0x8(%rsp),%xmm0
    564c:	0f 10 4c 24 18       	movups 0x18(%rsp),%xmm1
    5651:	0f 10 54 24 28       	movups 0x28(%rsp),%xmm2
    5656:	0f 29 54 24 60       	movaps %xmm2,0x60(%rsp)
    565b:	0f 29 4c 24 50       	movaps %xmm1,0x50(%rsp)
    5660:	0f 29 44 24 40       	movaps %xmm0,0x40(%rsp)
    5665:	48 89 c8             	mov    %rcx,%rax
    5668:	48 8b 4c 24 70       	mov    0x70(%rsp),%rcx
    566d:	48 89 8c 24 b0 00 00 	mov    %rcx,0xb0(%rsp)
    5674:	00 
    5675:	0f 28 44 24 40       	movaps 0x40(%rsp),%xmm0
    567a:	0f 28 4c 24 50       	movaps 0x50(%rsp),%xmm1
    567f:	0f 28 54 24 60       	movaps 0x60(%rsp),%xmm2
    5684:	0f 29 94 24 a0 00 00 	movaps %xmm2,0xa0(%rsp)
    568b:	00 
    568c:	0f 29 8c 24 90 00 00 	movaps %xmm1,0x90(%rsp)
    5693:	00 
    5694:	0f 29 84 24 80 00 00 	movaps %xmm0,0x80(%rsp)
    569b:	00 
    569c:	4c 89 33             	mov    %r14,(%rbx)
    569f:	4c 89 7b 08          	mov    %r15,0x8(%rbx)
    56a3:	48 89 43 10          	mov    %rax,0x10(%rbx)
    56a7:	0f 28 84 24 80 00 00 	movaps 0x80(%rsp),%xmm0
    56ae:	00 
    56af:	0f 28 8c 24 90 00 00 	movaps 0x90(%rsp),%xmm1
    56b6:	00 
    56b7:	0f 28 94 24 a0 00 00 	movaps 0xa0(%rsp),%xmm2
    56be:	00 
    56bf:	0f 11 43 18          	movups %xmm0,0x18(%rbx)
    56c3:	0f 11 4b 28          	movups %xmm1,0x28(%rbx)
    56c7:	0f 11 53 38          	movups %xmm2,0x38(%rbx)
    56cb:	48 8b 84 24 b0 00 00 	mov    0xb0(%rsp),%rax
    56d2:	00 
    56d3:	e9 11 01 00 00       	jmpq   57e9 <_ZN9backtrace9symbolize6Symbol4name17h05b3ddd11e7b9af9E+0x229>
    56d8:	4c 8b 76 10          	mov    0x10(%rsi),%r14
    56dc:	4d 85 f6             	test   %r14,%r14
    56df:	0f 85 0c ff ff ff    	jne    55f1 <_ZN9backtrace9symbolize6Symbol4name17h05b3ddd11e7b9af9E+0x31>
    56e5:	48 c7 43 10 04 00 00 	movq   $0x4,0x10(%rbx)
    56ec:	00 
    56ed:	e9 fb 00 00 00       	jmpq   57ed <_ZN9backtrace9symbolize6Symbol4name17h05b3ddd11e7b9af9E+0x22d>
    56f2:	4c 8b 76 18          	mov    0x18(%rsi),%r14
    56f6:	4d 85 f6             	test   %r14,%r14
    56f9:	0f 84 fb 00 00 00    	je     57fa <_ZN9backtrace9symbolize6Symbol4name17h05b3ddd11e7b9af9E+0x23a>
    56ff:	4c 89 f7             	mov    %r14,%rdi
    5702:	ff 15 10 27 24 00    	callq  *0x242710(%rip)        # 247e18 <strlen@GLIBC_2.2.5>
    5708:	49 89 c7             	mov    %rax,%r15
    570b:	48 89 e7             	mov    %rsp,%rdi
    570e:	4c 89 f6             	mov    %r14,%rsi
    5711:	48 89 c2             	mov    %rax,%rdx
    5714:	e8 47 60 00 00       	callq  b760 <_ZN4core3str9from_utf817ha5f1d279f7594d61E>
    5719:	48 83 3c 24 01       	cmpq   $0x1,(%rsp)
    571e:	b8 03 00 00 00       	mov    $0x3,%eax
    5723:	74 51                	je     5776 <_ZN9backtrace9symbolize6Symbol4name17h05b3ddd11e7b9af9E+0x1b6>
    5725:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
    572a:	48 85 f6             	test   %rsi,%rsi
    572d:	74 47                	je     5776 <_ZN9backtrace9symbolize6Symbol4name17h05b3ddd11e7b9af9E+0x1b6>
    572f:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
    5734:	48 89 e7             	mov    %rsp,%rdi
    5737:	e8 c4 c5 01 00       	callq  21d00 <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE>
    573c:	48 8b 0c 24          	mov    (%rsp),%rcx
    5740:	b8 03 00 00 00       	mov    $0x3,%eax
    5745:	48 83 f9 03          	cmp    $0x3,%rcx
    5749:	74 2b                	je     5776 <_ZN9backtrace9symbolize6Symbol4name17h05b3ddd11e7b9af9E+0x1b6>
    574b:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
    5750:	48 89 44 24 70       	mov    %rax,0x70(%rsp)
    5755:	0f 10 44 24 08       	movups 0x8(%rsp),%xmm0
    575a:	0f 10 4c 24 18       	movups 0x18(%rsp),%xmm1
    575f:	0f 10 54 24 28       	movups 0x28(%rsp),%xmm2
    5764:	0f 29 54 24 60       	movaps %xmm2,0x60(%rsp)
    5769:	0f 29 4c 24 50       	movaps %xmm1,0x50(%rsp)
    576e:	0f 29 44 24 40       	movaps %xmm0,0x40(%rsp)
    5773:	48 89 c8             	mov    %rcx,%rax
    5776:	48 8b 4c 24 70       	mov    0x70(%rsp),%rcx
    577b:	48 89 8c 24 b0 00 00 	mov    %rcx,0xb0(%rsp)
    5782:	00 
    5783:	0f 28 44 24 40       	movaps 0x40(%rsp),%xmm0
    5788:	0f 28 4c 24 50       	movaps 0x50(%rsp),%xmm1
    578d:	0f 28 54 24 60       	movaps 0x60(%rsp),%xmm2
    5792:	0f 29 84 24 c0 00 00 	movaps %xmm0,0xc0(%rsp)
    5799:	00 
    579a:	0f 29 8c 24 d0 00 00 	movaps %xmm1,0xd0(%rsp)
    57a1:	00 
    57a2:	0f 29 94 24 e0 00 00 	movaps %xmm2,0xe0(%rsp)
    57a9:	00 
    57aa:	48 89 8c 24 f0 00 00 	mov    %rcx,0xf0(%rsp)
    57b1:	00 
    57b2:	4c 89 33             	mov    %r14,(%rbx)
    57b5:	4c 89 7b 08          	mov    %r15,0x8(%rbx)
    57b9:	48 89 43 10          	mov    %rax,0x10(%rbx)
    57bd:	0f 28 84 24 c0 00 00 	movaps 0xc0(%rsp),%xmm0
    57c4:	00 
    57c5:	0f 28 8c 24 d0 00 00 	movaps 0xd0(%rsp),%xmm1
    57cc:	00 
    57cd:	0f 28 94 24 e0 00 00 	movaps 0xe0(%rsp),%xmm2
    57d4:	00 
    57d5:	0f 11 43 18          	movups %xmm0,0x18(%rbx)
    57d9:	0f 11 4b 28          	movups %xmm1,0x28(%rbx)
    57dd:	0f 11 53 38          	movups %xmm2,0x38(%rbx)
    57e1:	48 8b 84 24 f0 00 00 	mov    0xf0(%rsp),%rax
    57e8:	00 
    57e9:	48 89 43 48          	mov    %rax,0x48(%rbx)
    57ed:	48 81 c4 00 01 00 00 	add    $0x100,%rsp
    57f4:	5b                   	pop    %rbx
    57f5:	41 5e                	pop    %r14
    57f7:	41 5f                	pop    %r15
    57f9:	c3                   	retq   
    57fa:	4c 8b 76 20          	mov    0x20(%rsi),%r14
    57fe:	4d 85 f6             	test   %r14,%r14
    5801:	0f 85 ea fd ff ff    	jne    55f1 <_ZN9backtrace9symbolize6Symbol4name17h05b3ddd11e7b9af9E+0x31>
    5807:	e9 d9 fe ff ff       	jmpq   56e5 <_ZN9backtrace9symbolize6Symbol4name17h05b3ddd11e7b9af9E+0x125>
    580c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000005810 <_ZN9backtrace5print17BacktraceFrameFmt9print_raw17h69930da516f47357E>:
    5810:	55                   	push   %rbp
    5811:	41 57                	push   %r15
    5813:	41 56                	push   %r14
    5815:	41 55                	push   %r13
    5817:	41 54                	push   %r12
    5819:	53                   	push   %rbx
    581a:	48 81 ec 58 01 00 00 	sub    $0x158,%rsp
    5821:	45 89 ce             	mov    %r9d,%r14d
    5824:	45 89 c4             	mov    %r8d,%r12d
    5827:	48 89 fb             	mov    %rdi,%rbx
    582a:	0f 10 02             	movups (%rdx),%xmm0
    582d:	0f 29 84 24 30 01 00 	movaps %xmm0,0x130(%rsp)
    5834:	00 
    5835:	48 8b 6a 10          	mov    0x10(%rdx),%rbp
    5839:	0f 10 42 28          	movups 0x28(%rdx),%xmm0
    583d:	0f 29 84 24 00 01 00 	movaps %xmm0,0x100(%rsp)
    5844:	00 
    5845:	0f 10 42 38          	movups 0x38(%rdx),%xmm0
    5849:	0f 29 84 24 10 01 00 	movaps %xmm0,0x110(%rsp)
    5850:	00 
    5851:	48 8b 42 48          	mov    0x48(%rdx),%rax
    5855:	48 89 84 24 20 01 00 	mov    %rax,0x120(%rsp)
    585c:	00 
    585d:	0f 10 42 18          	movups 0x18(%rdx),%xmm0
    5861:	0f 29 84 24 f0 00 00 	movaps %xmm0,0xf0(%rsp)
    5868:	00 
    5869:	4c 8b 39             	mov    (%rcx),%r15
    586c:	f3 0f 6f 41 08       	movdqu 0x8(%rcx),%xmm0
    5871:	66 0f 7f 84 24 40 01 	movdqa %xmm0,0x140(%rsp)
    5878:	00 00 
    587a:	48 89 b4 24 e8 00 00 	mov    %rsi,0xe8(%rsp)
    5881:	00 
    5882:	48 8b 07             	mov    (%rdi),%rax
    5885:	48 85 f6             	test   %rsi,%rsi
    5888:	75 12                	jne    589c <_ZN9backtrace5print17BacktraceFrameFmt9print_raw17h69930da516f47357E+0x8c>
    588a:	80 78 20 00          	cmpb   $0x0,0x20(%rax)
    588e:	75 0c                	jne    589c <_ZN9backtrace5print17BacktraceFrameFmt9print_raw17h69930da516f47357E+0x8c>
    5890:	48 83 43 08 01       	addq   $0x1,0x8(%rbx)
    5895:	31 c0                	xor    %eax,%eax
    5897:	e9 1f 04 00 00       	jmpq   5cbb <_ZN9backtrace5print17BacktraceFrameFmt9print_raw17h69930da516f47357E+0x4ab>
    589c:	48 83 7b 08 00       	cmpq   $0x0,0x8(%rbx)
    58a1:	48 8b 08             	mov    (%rax),%rcx
    58a4:	0f 84 d7 00 00 00    	je     5981 <_ZN9backtrace5print17BacktraceFrameFmt9print_raw17h69930da516f47357E+0x171>
    58aa:	48 8b 79 20          	mov    0x20(%rcx),%rdi
    58ae:	48 8b 71 28          	mov    0x28(%rcx),%rsi
    58b2:	48 8d 05 ff 07 24 00 	lea    0x2407ff(%rip),%rax        # 2460b8 <__init_array_end+0xa8>
    58b9:	48 89 04 24          	mov    %rax,(%rsp)
    58bd:	48 c7 44 24 08 01 00 	movq   $0x1,0x8(%rsp)
    58c4:	00 00 
    58c6:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
    58cd:	00 00 
    58cf:	48 8d 05 62 7b 03 00 	lea    0x37b62(%rip),%rax        # 3d438 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0xad8>
    58d6:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
    58db:	48 c7 44 24 28 00 00 	movq   $0x0,0x28(%rsp)
    58e2:	00 00 
    58e4:	48 89 e2             	mov    %rsp,%rdx
    58e7:	e8 44 31 00 00       	callq  8a30 <_ZN4core3fmt5write17h0db54a985afb558eE>
    58ec:	84 c0                	test   %al,%al
    58ee:	0f 85 c5 03 00 00    	jne    5cb9 <_ZN9backtrace5print17BacktraceFrameFmt9print_raw17h69930da516f47357E+0x4a9>
    58f4:	48 8b 03             	mov    (%rbx),%rax
    58f7:	80 78 20 01          	cmpb   $0x1,0x20(%rax)
    58fb:	0f 85 83 01 00 00    	jne    5a84 <_ZN9backtrace5print17BacktraceFrameFmt9print_raw17h69930da516f47357E+0x274>
    5901:	48 8b 00             	mov    (%rax),%rax
    5904:	48 8d 0d f5 f9 01 00 	lea    0x1f9f5(%rip),%rcx        # 25300 <_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h9716022a15e5b13cE>
    590b:	66 48 0f 6e c1       	movq   %rcx,%xmm0
    5910:	48 8d 0d 89 18 24 00 	lea    0x241889(%rip),%rcx        # 2471a0 <__init_array_end+0x1190>
    5917:	66 48 0f 6e c9       	movq   %rcx,%xmm1
    591c:	66 0f 6c c8          	punpcklqdq %xmm0,%xmm1
    5920:	66 0f 7f 4c 24 60    	movdqa %xmm1,0x60(%rsp)
    5926:	48 8d 15 b3 33 00 00 	lea    0x33b3(%rip),%rdx        # 8ce0 <_ZN4core3fmt10ArgumentV110show_usize17h2a88cb8749ea423eE>
    592d:	66 48 0f 6e c2       	movq   %rdx,%xmm0
    5932:	48 8d 15 bf 4d 03 00 	lea    0x34dbf(%rip),%rdx        # 3a6f8 <_ZN4core7unicode12unicode_data2cc19BITSET_INDEX_CHUNKS17h8a1f39cd536e9344E+0x238>
    5939:	66 48 0f 6e ca       	movq   %rdx,%xmm1
    593e:	66 0f 6c c8          	punpcklqdq %xmm0,%xmm1
    5942:	66 0f 7f 4c 24 70    	movdqa %xmm1,0x70(%rsp)
    5948:	48 8b 78 20          	mov    0x20(%rax),%rdi
    594c:	48 8b 70 28          	mov    0x28(%rax),%rsi
    5950:	48 89 0c 24          	mov    %rcx,(%rsp)
    5954:	48 c7 44 24 08 01 00 	movq   $0x1,0x8(%rsp)
    595b:	00 00 
    595d:	48 8d 05 f4 55 03 00 	lea    0x355f4(%rip),%rax        # 3af58 <_ZN4core7unicode12unicode_data2cc19BITSET_INDEX_CHUNKS17h8a1f39cd536e9344E+0xa98>
    5964:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    5969:	48 c7 44 24 18 01 00 	movq   $0x1,0x18(%rsp)
    5970:	00 00 
    5972:	48 8d 44 24 60       	lea    0x60(%rsp),%rax
    5977:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
    597c:	e9 ea 00 00 00       	jmpq   5a6b <_ZN9backtrace5print17BacktraceFrameFmt9print_raw17h69930da516f47357E+0x25b>
    5981:	48 83 c0 08          	add    $0x8,%rax
    5985:	48 89 44 24 60       	mov    %rax,0x60(%rsp)
    598a:	48 8d 05 ef 1a 00 00 	lea    0x1aef(%rip),%rax        # 7480 <_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$u64$GT$3fmt17h29103e8b1c853837E>
    5991:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
    5996:	48 8b 79 20          	mov    0x20(%rcx),%rdi
    599a:	48 8b 71 28          	mov    0x28(%rcx),%rsi
    599e:	48 8d 05 a3 0c 24 00 	lea    0x240ca3(%rip),%rax        # 246648 <__init_array_end+0x638>
    59a5:	48 89 04 24          	mov    %rax,(%rsp)
    59a9:	48 c7 44 24 08 02 00 	movq   $0x2,0x8(%rsp)
    59b0:	00 00 
    59b2:	48 8d 05 67 55 03 00 	lea    0x35567(%rip),%rax        # 3af20 <_ZN4core7unicode12unicode_data2cc19BITSET_INDEX_CHUNKS17h8a1f39cd536e9344E+0xa60>
    59b9:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    59be:	48 c7 44 24 18 01 00 	movq   $0x1,0x18(%rsp)
    59c5:	00 00 
    59c7:	4c 8d 6c 24 60       	lea    0x60(%rsp),%r13
    59cc:	4c 89 6c 24 20       	mov    %r13,0x20(%rsp)
    59d1:	48 c7 44 24 28 01 00 	movq   $0x1,0x28(%rsp)
    59d8:	00 00 
    59da:	48 89 e2             	mov    %rsp,%rdx
    59dd:	e8 4e 30 00 00       	callq  8a30 <_ZN4core3fmt5write17h0db54a985afb558eE>
    59e2:	84 c0                	test   %al,%al
    59e4:	0f 85 cf 02 00 00    	jne    5cb9 <_ZN9backtrace5print17BacktraceFrameFmt9print_raw17h69930da516f47357E+0x4a9>
    59ea:	48 8b 03             	mov    (%rbx),%rax
    59ed:	80 78 20 01          	cmpb   $0x1,0x20(%rax)
    59f1:	0f 85 8d 00 00 00    	jne    5a84 <_ZN9backtrace5print17BacktraceFrameFmt9print_raw17h69930da516f47357E+0x274>
    59f7:	48 8b 00             	mov    (%rax),%rax
    59fa:	48 8d 8c 24 e8 00 00 	lea    0xe8(%rsp),%rcx
    5a01:	00 
    5a02:	48 89 4c 24 60       	mov    %rcx,0x60(%rsp)
    5a07:	48 8d 0d e2 4c 03 00 	lea    0x34ce2(%rip),%rcx        # 3a6f0 <_ZN4core7unicode12unicode_data2cc19BITSET_INDEX_CHUNKS17h8a1f39cd536e9344E+0x230>
    5a0e:	66 48 0f 6e c1       	movq   %rcx,%xmm0
    5a13:	48 8d 0d d6 fa ff ff 	lea    -0x52a(%rip),%rcx        # 54f0 <_ZN50_$LT$$BP$mut$u20$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h0c22205dba98029aE>
    5a1a:	66 48 0f 6e c9       	movq   %rcx,%xmm1
    5a1f:	66 0f 6c c8          	punpcklqdq %xmm0,%xmm1
    5a23:	f3 0f 7f 4c 24 68    	movdqu %xmm1,0x68(%rsp)
    5a29:	48 8d 0d b0 32 00 00 	lea    0x32b0(%rip),%rcx        # 8ce0 <_ZN4core3fmt10ArgumentV110show_usize17h2a88cb8749ea423eE>
    5a30:	48 89 4c 24 78       	mov    %rcx,0x78(%rsp)
    5a35:	48 8b 78 20          	mov    0x20(%rax),%rdi
    5a39:	48 8b 70 28          	mov    0x28(%rax),%rsi
    5a3d:	48 8d 05 84 06 24 00 	lea    0x240684(%rip),%rax        # 2460c8 <__init_array_end+0xb8>
    5a44:	48 89 04 24          	mov    %rax,(%rsp)
    5a48:	48 c7 44 24 08 02 00 	movq   $0x2,0x8(%rsp)
    5a4f:	00 00 
    5a51:	48 8d 05 00 55 03 00 	lea    0x35500(%rip),%rax        # 3af58 <_ZN4core7unicode12unicode_data2cc19BITSET_INDEX_CHUNKS17h8a1f39cd536e9344E+0xa98>
    5a58:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    5a5d:	48 c7 44 24 18 01 00 	movq   $0x1,0x18(%rsp)
    5a64:	00 00 
    5a66:	4c 89 6c 24 20       	mov    %r13,0x20(%rsp)
    5a6b:	48 c7 44 24 28 02 00 	movq   $0x2,0x28(%rsp)
    5a72:	00 00 
    5a74:	48 89 e2             	mov    %rsp,%rdx
    5a77:	e8 b4 2f 00 00       	callq  8a30 <_ZN4core3fmt5write17h0db54a985afb558eE>
    5a7c:	84 c0                	test   %al,%al
    5a7e:	0f 85 35 02 00 00    	jne    5cb9 <_ZN9backtrace5print17BacktraceFrameFmt9print_raw17h69930da516f47357E+0x4a9>
    5a84:	0f 28 84 24 30 01 00 	movaps 0x130(%rsp),%xmm0
    5a8b:	00 
    5a8c:	0f 29 84 24 a0 00 00 	movaps %xmm0,0xa0(%rsp)
    5a93:	00 
    5a94:	48 8b 84 24 20 01 00 	mov    0x120(%rsp),%rax
    5a9b:	00 
    5a9c:	48 89 84 24 90 00 00 	mov    %rax,0x90(%rsp)
    5aa3:	00 
    5aa4:	66 0f 6f 84 24 f0 00 	movdqa 0xf0(%rsp),%xmm0
    5aab:	00 00 
    5aad:	66 0f 6f 8c 24 00 01 	movdqa 0x100(%rsp),%xmm1
    5ab4:	00 00 
    5ab6:	0f 28 94 24 10 01 00 	movaps 0x110(%rsp),%xmm2
    5abd:	00 
    5abe:	0f 29 94 24 80 00 00 	movaps %xmm2,0x80(%rsp)
    5ac5:	00 
    5ac6:	66 0f 7f 4c 24 70    	movdqa %xmm1,0x70(%rsp)
    5acc:	66 0f 7f 44 24 60    	movdqa %xmm0,0x60(%rsp)
    5ad2:	48 8b 03             	mov    (%rbx),%rax
    5ad5:	48 83 fd 04          	cmp    $0x4,%rbp
    5ad9:	0f 84 b4 00 00 00    	je     5b93 <_ZN9backtrace5print17BacktraceFrameFmt9print_raw17h69930da516f47357E+0x383>
    5adf:	0f b6 48 20          	movzbl 0x20(%rax),%ecx
    5ae3:	48 83 f9 01          	cmp    $0x1,%rcx
    5ae7:	0f 84 f8 00 00 00    	je     5be5 <_ZN9backtrace5print17BacktraceFrameFmt9print_raw17h69930da516f47357E+0x3d5>
    5aed:	48 85 c9             	test   %rcx,%rcx
    5af0:	0f 85 9d 00 00 00    	jne    5b93 <_ZN9backtrace5print17BacktraceFrameFmt9print_raw17h69930da516f47357E+0x383>
    5af6:	0f 28 84 24 a0 00 00 	movaps 0xa0(%rsp),%xmm0
    5afd:	00 
    5afe:	0f 29 04 24          	movaps %xmm0,(%rsp)
    5b02:	48 89 6c 24 10       	mov    %rbp,0x10(%rsp)
    5b07:	66 0f 6f 44 24 60    	movdqa 0x60(%rsp),%xmm0
    5b0d:	66 0f 6f 4c 24 70    	movdqa 0x70(%rsp),%xmm1
    5b13:	0f 28 94 24 80 00 00 	movaps 0x80(%rsp),%xmm2
    5b1a:	00 
    5b1b:	f3 0f 7f 44 24 18    	movdqu %xmm0,0x18(%rsp)
    5b21:	f3 0f 7f 4c 24 28    	movdqu %xmm1,0x28(%rsp)
    5b27:	0f 11 54 24 38       	movups %xmm2,0x38(%rsp)
    5b2c:	48 8b 8c 24 90 00 00 	mov    0x90(%rsp),%rcx
    5b33:	00 
    5b34:	48 89 4c 24 48       	mov    %rcx,0x48(%rsp)
    5b39:	48 8b 00             	mov    (%rax),%rax
    5b3c:	48 89 e1             	mov    %rsp,%rcx
    5b3f:	48 89 4c 24 50       	mov    %rcx,0x50(%rsp)
    5b44:	48 8d 0d 55 03 00 00 	lea    0x355(%rip),%rcx        # 5ea0 <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE>
    5b4b:	48 89 4c 24 58       	mov    %rcx,0x58(%rsp)
    5b50:	48 8b 78 20          	mov    0x20(%rax),%rdi
    5b54:	48 8b 70 28          	mov    0x28(%rax),%rsi
    5b58:	48 8d 05 41 16 24 00 	lea    0x241641(%rip),%rax        # 2471a0 <__init_array_end+0x1190>
    5b5f:	48 89 84 24 b0 00 00 	mov    %rax,0xb0(%rsp)
    5b66:	00 
    5b67:	48 c7 84 24 b8 00 00 	movq   $0x1,0xb8(%rsp)
    5b6e:	00 01 00 00 00 
    5b73:	48 8d 05 16 54 03 00 	lea    0x35416(%rip),%rax        # 3af90 <_ZN4core7unicode12unicode_data2cc19BITSET_INDEX_CHUNKS17h8a1f39cd536e9344E+0xad0>
    5b7a:	48 89 84 24 c0 00 00 	mov    %rax,0xc0(%rsp)
    5b81:	00 
    5b82:	48 c7 84 24 c8 00 00 	movq   $0x1,0xc8(%rsp)
    5b89:	00 01 00 00 00 
    5b8e:	e9 db 00 00 00       	jmpq   5c6e <_ZN9backtrace5print17BacktraceFrameFmt9print_raw17h69930da516f47357E+0x45e>
    5b93:	48 8b 00             	mov    (%rax),%rax
    5b96:	48 8b 78 20          	mov    0x20(%rax),%rdi
    5b9a:	48 8b 70 28          	mov    0x28(%rax),%rsi
    5b9e:	48 8d 05 43 05 24 00 	lea    0x240543(%rip),%rax        # 2460e8 <__init_array_end+0xd8>
    5ba5:	48 89 04 24          	mov    %rax,(%rsp)
    5ba9:	48 c7 44 24 08 01 00 	movq   $0x1,0x8(%rsp)
    5bb0:	00 00 
    5bb2:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
    5bb9:	00 00 
    5bbb:	48 8d 05 76 78 03 00 	lea    0x37876(%rip),%rax        # 3d438 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0xad8>
    5bc2:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
    5bc7:	48 c7 44 24 28 00 00 	movq   $0x0,0x28(%rsp)
    5bce:	00 00 
    5bd0:	48 89 e2             	mov    %rsp,%rdx
    5bd3:	e8 58 2e 00 00       	callq  8a30 <_ZN4core3fmt5write17h0db54a985afb558eE>
    5bd8:	84 c0                	test   %al,%al
    5bda:	0f 84 b8 00 00 00    	je     5c98 <_ZN9backtrace5print17BacktraceFrameFmt9print_raw17h69930da516f47357E+0x488>
    5be0:	e9 d4 00 00 00       	jmpq   5cb9 <_ZN9backtrace5print17BacktraceFrameFmt9print_raw17h69930da516f47357E+0x4a9>
    5be5:	0f 28 84 24 a0 00 00 	movaps 0xa0(%rsp),%xmm0
    5bec:	00 
    5bed:	0f 29 04 24          	movaps %xmm0,(%rsp)
    5bf1:	48 89 6c 24 10       	mov    %rbp,0x10(%rsp)
    5bf6:	66 0f 6f 44 24 60    	movdqa 0x60(%rsp),%xmm0
    5bfc:	66 0f 6f 4c 24 70    	movdqa 0x70(%rsp),%xmm1
    5c02:	0f 28 94 24 80 00 00 	movaps 0x80(%rsp),%xmm2
    5c09:	00 
    5c0a:	f3 0f 7f 44 24 18    	movdqu %xmm0,0x18(%rsp)
    5c10:	f3 0f 7f 4c 24 28    	movdqu %xmm1,0x28(%rsp)
    5c16:	0f 11 54 24 38       	movups %xmm2,0x38(%rsp)
    5c1b:	48 8b 8c 24 90 00 00 	mov    0x90(%rsp),%rcx
    5c22:	00 
    5c23:	48 89 4c 24 48       	mov    %rcx,0x48(%rsp)
    5c28:	48 8b 00             	mov    (%rax),%rax
    5c2b:	48 89 e1             	mov    %rsp,%rcx
    5c2e:	48 89 4c 24 50       	mov    %rcx,0x50(%rsp)
    5c33:	48 8d 0d 66 02 00 00 	lea    0x266(%rip),%rcx        # 5ea0 <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE>
    5c3a:	48 89 4c 24 58       	mov    %rcx,0x58(%rsp)
    5c3f:	48 8b 78 20          	mov    0x20(%rax),%rdi
    5c43:	48 8b 70 28          	mov    0x28(%rax),%rsi
    5c47:	48 8d 05 52 15 24 00 	lea    0x241552(%rip),%rax        # 2471a0 <__init_array_end+0x1190>
    5c4e:	48 89 84 24 b0 00 00 	mov    %rax,0xb0(%rsp)
    5c55:	00 
    5c56:	48 c7 84 24 b8 00 00 	movq   $0x1,0xb8(%rsp)
    5c5d:	00 01 00 00 00 
    5c62:	48 c7 84 24 c0 00 00 	movq   $0x0,0xc0(%rsp)
    5c69:	00 00 00 00 00 
    5c6e:	48 8d 44 24 50       	lea    0x50(%rsp),%rax
    5c73:	48 89 84 24 d0 00 00 	mov    %rax,0xd0(%rsp)
    5c7a:	00 
    5c7b:	48 c7 84 24 d8 00 00 	movq   $0x1,0xd8(%rsp)
    5c82:	00 01 00 00 00 
    5c87:	48 8d 94 24 b0 00 00 	lea    0xb0(%rsp),%rdx
    5c8e:	00 
    5c8f:	e8 9c 2d 00 00       	callq  8a30 <_ZN4core3fmt5write17h0db54a985afb558eE>
    5c94:	84 c0                	test   %al,%al
    5c96:	75 21                	jne    5cb9 <_ZN9backtrace5print17BacktraceFrameFmt9print_raw17h69930da516f47357E+0x4a9>
    5c98:	48 8b 03             	mov    (%rbx),%rax
    5c9b:	48 8b 00             	mov    (%rax),%rax
    5c9e:	48 8b 78 20          	mov    0x20(%rax),%rdi
    5ca2:	48 8b 40 28          	mov    0x28(%rax),%rax
    5ca6:	48 8d 35 18 78 03 00 	lea    0x37818(%rip),%rsi        # 3d4c5 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0xb65>
    5cad:	ba 01 00 00 00       	mov    $0x1,%edx
    5cb2:	ff 50 18             	callq  *0x18(%rax)
    5cb5:	84 c0                	test   %al,%al
    5cb7:	74 14                	je     5ccd <_ZN9backtrace5print17BacktraceFrameFmt9print_raw17h69930da516f47357E+0x4bd>
    5cb9:	b0 01                	mov    $0x1,%al
    5cbb:	48 81 c4 58 01 00 00 	add    $0x158,%rsp
    5cc2:	5b                   	pop    %rbx
    5cc3:	41 5c                	pop    %r12
    5cc5:	41 5d                	pop    %r13
    5cc7:	41 5e                	pop    %r14
    5cc9:	41 5f                	pop    %r15
    5ccb:	5d                   	pop    %rbp
    5ccc:	c3                   	retq   
    5ccd:	66 0f 6f 84 24 40 01 	movdqa 0x140(%rsp),%xmm0
    5cd4:	00 00 
    5cd6:	66 0f 7f 44 24 50    	movdqa %xmm0,0x50(%rsp)
    5cdc:	41 83 fc 01          	cmp    $0x1,%r12d
    5ce0:	0f 85 aa fb ff ff    	jne    5890 <_ZN9backtrace5print17BacktraceFrameFmt9print_raw17h69930da516f47357E+0x80>
    5ce6:	49 83 ff 02          	cmp    $0x2,%r15
    5cea:	0f 84 a0 fb ff ff    	je     5890 <_ZN9backtrace5print17BacktraceFrameFmt9print_raw17h69930da516f47357E+0x80>
    5cf0:	66 0f 6f 44 24 50    	movdqa 0x50(%rsp),%xmm0
    5cf6:	66 0f 7f 84 24 b0 00 	movdqa %xmm0,0xb0(%rsp)
    5cfd:	00 00 
    5cff:	44 89 b4 24 a0 00 00 	mov    %r14d,0xa0(%rsp)
    5d06:	00 
    5d07:	48 8b 03             	mov    (%rbx),%rax
    5d0a:	80 78 20 01          	cmpb   $0x1,0x20(%rax)
    5d0e:	0f 85 97 00 00 00    	jne    5dab <_ZN9backtrace5print17BacktraceFrameFmt9print_raw17h69930da516f47357E+0x59b>
    5d14:	48 8b 00             	mov    (%rax),%rax
    5d17:	48 8d 0d e2 f5 01 00 	lea    0x1f5e2(%rip),%rcx        # 25300 <_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h9716022a15e5b13cE>
    5d1e:	66 48 0f 6e c1       	movq   %rcx,%xmm0
    5d23:	48 8d 0d 76 14 24 00 	lea    0x241476(%rip),%rcx        # 2471a0 <__init_array_end+0x1190>
    5d2a:	66 48 0f 6e c9       	movq   %rcx,%xmm1
    5d2f:	66 0f 6c c8          	punpcklqdq %xmm0,%xmm1
    5d33:	66 0f 7f 4c 24 60    	movdqa %xmm1,0x60(%rsp)
    5d39:	48 8d 15 a0 2f 00 00 	lea    0x2fa0(%rip),%rdx        # 8ce0 <_ZN4core3fmt10ArgumentV110show_usize17h2a88cb8749ea423eE>
    5d40:	66 48 0f 6e c2       	movq   %rdx,%xmm0
    5d45:	48 8d 15 a4 49 03 00 	lea    0x349a4(%rip),%rdx        # 3a6f0 <_ZN4core7unicode12unicode_data2cc19BITSET_INDEX_CHUNKS17h8a1f39cd536e9344E+0x230>
    5d4c:	66 48 0f 6e ca       	movq   %rdx,%xmm1
    5d51:	66 0f 6c c8          	punpcklqdq %xmm0,%xmm1
    5d55:	66 0f 7f 4c 24 70    	movdqa %xmm1,0x70(%rsp)
    5d5b:	48 8b 78 20          	mov    0x20(%rax),%rdi
    5d5f:	48 8b 70 28          	mov    0x28(%rax),%rsi
    5d63:	48 89 0c 24          	mov    %rcx,(%rsp)
    5d67:	48 c7 44 24 08 01 00 	movq   $0x1,0x8(%rsp)
    5d6e:	00 00 
    5d70:	48 8d 05 e1 51 03 00 	lea    0x351e1(%rip),%rax        # 3af58 <_ZN4core7unicode12unicode_data2cc19BITSET_INDEX_CHUNKS17h8a1f39cd536e9344E+0xa98>
    5d77:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    5d7c:	48 c7 44 24 18 01 00 	movq   $0x1,0x18(%rsp)
    5d83:	00 00 
    5d85:	48 8d 44 24 60       	lea    0x60(%rsp),%rax
    5d8a:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
    5d8f:	48 c7 44 24 28 02 00 	movq   $0x2,0x28(%rsp)
    5d96:	00 00 
    5d98:	48 89 e2             	mov    %rsp,%rdx
    5d9b:	e8 90 2c 00 00       	callq  8a30 <_ZN4core3fmt5write17h0db54a985afb558eE>
    5da0:	84 c0                	test   %al,%al
    5da2:	0f 85 11 ff ff ff    	jne    5cb9 <_ZN9backtrace5print17BacktraceFrameFmt9print_raw17h69930da516f47357E+0x4a9>
    5da8:	48 8b 03             	mov    (%rbx),%rax
    5dab:	48 8b 00             	mov    (%rax),%rax
    5dae:	48 8b 78 20          	mov    0x20(%rax),%rdi
    5db2:	48 8b 70 28          	mov    0x28(%rax),%rsi
    5db6:	48 8d 05 3b 03 24 00 	lea    0x24033b(%rip),%rax        # 2460f8 <__init_array_end+0xe8>
    5dbd:	48 89 04 24          	mov    %rax,(%rsp)
    5dc1:	48 c7 44 24 08 01 00 	movq   $0x1,0x8(%rsp)
    5dc8:	00 00 
    5dca:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
    5dd1:	00 00 
    5dd3:	48 8d 05 5e 76 03 00 	lea    0x3765e(%rip),%rax        # 3d438 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0xad8>
    5dda:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
    5ddf:	48 c7 44 24 28 00 00 	movq   $0x0,0x28(%rsp)
    5de6:	00 00 
    5de8:	48 89 e2             	mov    %rsp,%rdx
    5deb:	e8 40 2c 00 00       	callq  8a30 <_ZN4core3fmt5write17h0db54a985afb558eE>
    5df0:	84 c0                	test   %al,%al
    5df2:	0f 85 c1 fe ff ff    	jne    5cb9 <_ZN9backtrace5print17BacktraceFrameFmt9print_raw17h69930da516f47357E+0x4a9>
    5df8:	48 8b 03             	mov    (%rbx),%rax
    5dfb:	48 8b 78 10          	mov    0x10(%rax),%rdi
    5dff:	48 8b 48 18          	mov    0x18(%rax),%rcx
    5e03:	48 8b 30             	mov    (%rax),%rsi
    5e06:	48 89 34 24          	mov    %rsi,(%rsp)
    5e0a:	48 8d 54 24 08       	lea    0x8(%rsp),%rdx
    5e0f:	4c 89 7c 24 08       	mov    %r15,0x8(%rsp)
    5e14:	66 0f 6f 84 24 b0 00 	movdqa 0xb0(%rsp),%xmm0
    5e1b:	00 00 
    5e1d:	f3 0f 7f 44 24 10    	movdqu %xmm0,0x10(%rsp)
    5e23:	ff 51 18             	callq  *0x18(%rcx)
    5e26:	84 c0                	test   %al,%al
    5e28:	0f 85 8b fe ff ff    	jne    5cb9 <_ZN9backtrace5print17BacktraceFrameFmt9print_raw17h69930da516f47357E+0x4a9>
    5e2e:	48 8b 03             	mov    (%rbx),%rax
    5e31:	48 8b 00             	mov    (%rax),%rax
    5e34:	48 8d 8c 24 a0 00 00 	lea    0xa0(%rsp),%rcx
    5e3b:	00 
    5e3c:	48 89 4c 24 60       	mov    %rcx,0x60(%rsp)
    5e41:	48 8d 0d b8 3e 00 00 	lea    0x3eb8(%rip),%rcx        # 9d00 <_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$u32$GT$3fmt17h0d5c971f484cf42aE>
    5e48:	48 89 4c 24 68       	mov    %rcx,0x68(%rsp)
    5e4d:	48 8b 78 20          	mov    0x20(%rax),%rdi
    5e51:	48 8b 70 28          	mov    0x28(%rax),%rsi
    5e55:	48 8d 05 ac 02 24 00 	lea    0x2402ac(%rip),%rax        # 246108 <__init_array_end+0xf8>
    5e5c:	48 89 04 24          	mov    %rax,(%rsp)
    5e60:	48 c7 44 24 08 02 00 	movq   $0x2,0x8(%rsp)
    5e67:	00 00 
    5e69:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
    5e70:	00 00 
    5e72:	48 8d 44 24 60       	lea    0x60(%rsp),%rax
    5e77:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
    5e7c:	48 c7 44 24 28 01 00 	movq   $0x1,0x28(%rsp)
    5e83:	00 00 
    5e85:	48 89 e2             	mov    %rsp,%rdx
    5e88:	e8 a3 2b 00 00       	callq  8a30 <_ZN4core3fmt5write17h0db54a985afb558eE>
    5e8d:	84 c0                	test   %al,%al
    5e8f:	0f 84 fb f9 ff ff    	je     5890 <_ZN9backtrace5print17BacktraceFrameFmt9print_raw17h69930da516f47357E+0x80>
    5e95:	e9 1f fe ff ff       	jmpq   5cb9 <_ZN9backtrace5print17BacktraceFrameFmt9print_raw17h69930da516f47357E+0x4a9>
    5e9a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000005ea0 <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE>:
    5ea0:	55                   	push   %rbp
    5ea1:	41 57                	push   %r15
    5ea3:	41 56                	push   %r14
    5ea5:	41 55                	push   %r13
    5ea7:	41 54                	push   %r12
    5ea9:	53                   	push   %rbx
    5eaa:	48 81 ec 98 00 00 00 	sub    $0x98,%rsp
    5eb1:	48 89 74 24 28       	mov    %rsi,0x28(%rsp)
    5eb6:	48 8b 47 10          	mov    0x10(%rdi),%rax
    5eba:	48 83 f8 02          	cmp    $0x2,%rax
    5ebe:	0f 84 97 00 00 00    	je     5f5b <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0xbb>
    5ec4:	48 83 f8 03          	cmp    $0x3,%rax
    5ec8:	0f 85 be 00 00 00    	jne    5f8c <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0xec>
    5ece:	48 8b 5f 08          	mov    0x8(%rdi),%rbx
    5ed2:	48 85 db             	test   %rbx,%rbx
    5ed5:	0f 84 35 12 00 00    	je     7110 <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x1270>
    5edb:	4c 8b 27             	mov    (%rdi),%r12
    5ede:	4c 8d 74 24 30       	lea    0x30(%rsp),%r14
    5ee3:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    5eea:	00 00 00 
    5eed:	0f 1f 00             	nopl   (%rax)
    5ef0:	4c 89 f7             	mov    %r14,%rdi
    5ef3:	4c 89 e6             	mov    %r12,%rsi
    5ef6:	48 89 da             	mov    %rbx,%rdx
    5ef9:	e8 62 58 00 00       	callq  b760 <_ZN4core3str9from_utf817ha5f1d279f7594d61E>
    5efe:	48 83 7c 24 30 01    	cmpq   $0x1,0x30(%rsp)
    5f04:	0f 85 ea 11 00 00    	jne    70f4 <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x1254>
    5f0a:	48 8b 6c 24 38       	mov    0x38(%rsp),%rbp
    5f0f:	44 0f b6 7c 24 40    	movzbl 0x40(%rsp),%r15d
    5f15:	44 0f b6 6c 24 41    	movzbl 0x41(%rsp),%r13d
    5f1b:	ba 03 00 00 00       	mov    $0x3,%edx
    5f20:	48 8b 7c 24 28       	mov    0x28(%rsp),%rdi
    5f25:	48 8d 35 ea 4f 03 00 	lea    0x34fea(%rip),%rsi        # 3af16 <_ZN4core7unicode12unicode_data2cc19BITSET_INDEX_CHUNKS17h8a1f39cd536e9344E+0xa56>
    5f2c:	e8 9f 1d 00 00       	callq  7cd0 <_ZN4core3fmt9Formatter3pad17h7ef001ba65c2db9cE>
    5f31:	84 c0                	test   %al,%al
    5f33:	0f 85 d3 11 00 00    	jne    710c <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x126c>
    5f39:	45 84 ff             	test   %r15b,%r15b
    5f3c:	0f 84 ce 11 00 00    	je     7110 <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x1270>
    5f42:	4c 01 ed             	add    %r13,%rbp
    5f45:	48 39 eb             	cmp    %rbp,%rbx
    5f48:	0f 82 55 12 00 00    	jb     71a3 <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x1303>
    5f4e:	49 01 ec             	add    %rbp,%r12
    5f51:	48 29 eb             	sub    %rbp,%rbx
    5f54:	75 9a                	jne    5ef0 <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x50>
    5f56:	e9 b5 11 00 00       	jmpq   7110 <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x1270>
    5f5b:	48 8b 77 30          	mov    0x30(%rdi),%rsi
    5f5f:	48 89 bc 24 88 00 00 	mov    %rdi,0x88(%rsp)
    5f66:	00 
    5f67:	48 8b 57 38          	mov    0x38(%rdi),%rdx
    5f6b:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    5f70:	48 8b 78 20          	mov    0x20(%rax),%rdi
    5f74:	48 8b 40 28          	mov    0x28(%rax),%rax
    5f78:	ff 50 18             	callq  *0x18(%rax)
    5f7b:	89 c1                	mov    %eax,%ecx
    5f7d:	b0 01                	mov    $0x1,%al
    5f7f:	84 c9                	test   %cl,%cl
    5f81:	0f 85 8b 11 00 00    	jne    7112 <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x1272>
    5f87:	e9 46 11 00 00       	jmpq   70d2 <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x1232>
    5f8c:	48 83 f8 01          	cmp    $0x1,%rax
    5f90:	48 89 bc 24 88 00 00 	mov    %rdi,0x88(%rsp)
    5f97:	00 
    5f98:	75 46                	jne    5fe0 <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x140>
    5f9a:	f3 0f 6f 47 18       	movdqu 0x18(%rdi),%xmm0
    5f9f:	66 0f 7f 44 24 30    	movdqa %xmm0,0x30(%rsp)
    5fa5:	48 c7 44 24 40 00 00 	movq   $0x0,0x40(%rsp)
    5fac:	00 00 
    5fae:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    5fb3:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
    5fb8:	c7 44 24 50 00 00 00 	movl   $0x0,0x50(%rsp)
    5fbf:	00 
    5fc0:	48 8d 7c 24 30       	lea    0x30(%rsp),%rdi
    5fc5:	be 01 00 00 00       	mov    $0x1,%esi
    5fca:	e8 41 7d 01 00       	callq  1dd10 <_ZN14rustc_demangle2v07Printer10print_path17haa095a98ac60aefaE>
    5fcf:	89 c1                	mov    %eax,%ecx
    5fd1:	b0 01                	mov    $0x1,%al
    5fd3:	84 c9                	test   %cl,%cl
    5fd5:	0f 84 f7 10 00 00    	je     70d2 <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x1232>
    5fdb:	e9 32 11 00 00       	jmpq   7112 <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x1272>
    5fe0:	4c 8b 67 18          	mov    0x18(%rdi),%r12
    5fe4:	4c 8b 77 20          	mov    0x20(%rdi),%r14
    5fe8:	48 8b 47 28          	mov    0x28(%rdi),%rax
    5fec:	48 89 84 24 90 00 00 	mov    %rax,0x90(%rsp)
    5ff3:	00 
    5ff4:	31 c0                	xor    %eax,%eax
    5ff6:	48 89 84 24 80 00 00 	mov    %rax,0x80(%rsp)
    5ffd:	00 
    5ffe:	66 0f 6f 15 7a 43 03 	movdqa 0x3437a(%rip),%xmm2        # 3a380 <_fini+0x3c>
    6005:	00 
    6006:	66 0f 6f 1d 82 43 03 	movdqa 0x34382(%rip),%xmm3        # 3a390 <_fini+0x4c>
    600d:	00 
    600e:	66 0f 6f 25 8a 43 03 	movdqa 0x3438a(%rip),%xmm4        # 3a3a0 <_fini+0x5c>
    6015:	00 
    6016:	4c 8b 84 24 80 00 00 	mov    0x80(%rsp),%r8
    601d:	00 
    601e:	4c 3b 84 24 90 00 00 	cmp    0x90(%rsp),%r8
    6025:	00 
    6026:	75 64                	jne    608c <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x1ec>
    6028:	e9 a5 10 00 00       	jmpq   70d2 <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x1232>
    602d:	4c 89 64 24 40       	mov    %r12,0x40(%rsp)
    6032:	4c 8b 64 24 60       	mov    0x60(%rsp),%r12
    6037:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    603c:	48 8b 78 20          	mov    0x20(%rax),%rdi
    6040:	48 8b 40 28          	mov    0x28(%rax),%rax
    6044:	4c 89 ee             	mov    %r13,%rsi
    6047:	4c 89 e2             	mov    %r12,%rdx
    604a:	ff 50 18             	callq  *0x18(%rax)
    604d:	66 0f 6f 25 4b 43 03 	movdqa 0x3434b(%rip),%xmm4        # 3a3a0 <_fini+0x5c>
    6054:	00 
    6055:	66 0f 6f 1d 33 43 03 	movdqa 0x34333(%rip),%xmm3        # 3a390 <_fini+0x4c>
    605c:	00 
    605d:	66 0f 6f 15 1b 43 03 	movdqa 0x3431b(%rip),%xmm2        # 3a380 <_fini+0x3c>
    6064:	00 
    6065:	89 c1                	mov    %eax,%ecx
    6067:	b0 01                	mov    $0x1,%al
    6069:	4c 8b 64 24 68       	mov    0x68(%rsp),%r12
    606e:	84 c9                	test   %cl,%cl
    6070:	0f 85 9c 10 00 00    	jne    7112 <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x1272>
    6076:	4c 8b 84 24 80 00 00 	mov    0x80(%rsp),%r8
    607d:	00 
    607e:	4c 3b 84 24 90 00 00 	cmp    0x90(%rsp),%r8
    6085:	00 
    6086:	0f 84 46 10 00 00    	je     70d2 <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x1232>
    608c:	4d 85 f6             	test   %r14,%r14
    608f:	0f 84 b9 10 00 00    	je     714e <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x12ae>
    6095:	49 8d 40 01          	lea    0x1(%r8),%rax
    6099:	48 89 84 24 80 00 00 	mov    %rax,0x80(%rsp)
    60a0:	00 
    60a1:	4f 8d 14 34          	lea    (%r12,%r14,1),%r10
    60a5:	4d 8d 4e ff          	lea    -0x1(%r14),%r9
    60a9:	31 db                	xor    %ebx,%ebx
    60ab:	4c 89 f6             	mov    %r14,%rsi
    60ae:	41 0f b6 0c 1c       	movzbl (%r12,%rbx,1),%ecx
    60b3:	84 c9                	test   %cl,%cl
    60b5:	79 23                	jns    60da <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x23a>
    60b7:	eb 47                	jmp    6100 <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x260>
    60b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    60c0:	48 83 c6 ff          	add    $0xffffffffffffffff,%rsi
    60c4:	48 83 c3 01          	add    $0x1,%rbx
    60c8:	49 39 de             	cmp    %rbx,%r14
    60cb:	0f 84 7d 10 00 00    	je     714e <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x12ae>
    60d1:	41 0f b6 0c 1c       	movzbl (%r12,%rbx,1),%ecx
    60d6:	84 c9                	test   %cl,%cl
    60d8:	78 26                	js     6100 <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x260>
    60da:	89 cf                	mov    %ecx,%edi
    60dc:	4d 8d 2c 1c          	lea    (%r12,%rbx,1),%r13
    60e0:	83 c7 d0             	add    $0xffffffd0,%edi
    60e3:	83 ff 0a             	cmp    $0xa,%edi
    60e6:	0f 82 b0 00 00 00    	jb     619c <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x2fc>
    60ec:	e9 ef 00 00 00       	jmpq   61e0 <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x340>
    60f1:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    60f8:	00 00 00 
    60fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    6100:	31 ff                	xor    %edi,%edi
    6102:	4c 89 d0             	mov    %r10,%rax
    6105:	49 39 d9             	cmp    %rbx,%r9
    6108:	74 11                	je     611b <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x27b>
    610a:	49 8d 04 1c          	lea    (%r12,%rbx,1),%rax
    610e:	48 83 c0 02          	add    $0x2,%rax
    6112:	41 0f b6 7c 1c 01    	movzbl 0x1(%r12,%rbx,1),%edi
    6118:	83 e7 3f             	and    $0x3f,%edi
    611b:	89 ca                	mov    %ecx,%edx
    611d:	83 e2 1f             	and    $0x1f,%edx
    6120:	80 f9 df             	cmp    $0xdf,%cl
    6123:	76 26                	jbe    614b <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x2ab>
    6125:	4c 39 d0             	cmp    %r10,%rax
    6128:	74 26                	je     6150 <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x2b0>
    612a:	0f b6 28             	movzbl (%rax),%ebp
    612d:	48 83 c0 01          	add    $0x1,%rax
    6131:	83 e5 3f             	and    $0x3f,%ebp
    6134:	c1 e7 06             	shl    $0x6,%edi
    6137:	09 ef                	or     %ebp,%edi
    6139:	80 f9 f0             	cmp    $0xf0,%cl
    613c:	72 21                	jb     615f <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x2bf>
    613e:	4c 39 d0             	cmp    %r10,%rax
    6141:	74 2f                	je     6172 <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x2d2>
    6143:	0f b6 00             	movzbl (%rax),%eax
    6146:	83 e0 3f             	and    $0x3f,%eax
    6149:	eb 29                	jmp    6174 <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x2d4>
    614b:	c1 e2 06             	shl    $0x6,%edx
    614e:	eb 12                	jmp    6162 <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x2c2>
    6150:	31 ed                	xor    %ebp,%ebp
    6152:	4c 89 d0             	mov    %r10,%rax
    6155:	c1 e7 06             	shl    $0x6,%edi
    6158:	09 ef                	or     %ebp,%edi
    615a:	80 f9 f0             	cmp    $0xf0,%cl
    615d:	73 df                	jae    613e <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x29e>
    615f:	c1 e2 0c             	shl    $0xc,%edx
    6162:	09 d7                	or     %edx,%edi
    6164:	4d 8d 2c 1c          	lea    (%r12,%rbx,1),%r13
    6168:	83 c7 d0             	add    $0xffffffd0,%edi
    616b:	83 ff 0a             	cmp    $0xa,%edi
    616e:	72 2c                	jb     619c <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x2fc>
    6170:	eb 6e                	jmp    61e0 <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x340>
    6172:	31 c0                	xor    %eax,%eax
    6174:	83 e2 07             	and    $0x7,%edx
    6177:	c1 e2 12             	shl    $0x12,%edx
    617a:	c1 e7 06             	shl    $0x6,%edi
    617d:	09 d7                	or     %edx,%edi
    617f:	09 c7                	or     %eax,%edi
    6181:	81 ff 00 00 11 00    	cmp    $0x110000,%edi
    6187:	0f 84 c1 0f 00 00    	je     714e <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x12ae>
    618d:	0f 1f 00             	nopl   (%rax)
    6190:	4d 8d 2c 1c          	lea    (%r12,%rbx,1),%r13
    6194:	83 c7 d0             	add    $0xffffffd0,%edi
    6197:	83 ff 0a             	cmp    $0xa,%edi
    619a:	73 44                	jae    61e0 <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x340>
    619c:	4c 89 6c 24 18       	mov    %r13,0x18(%rsp)
    61a1:	48 89 74 24 20       	mov    %rsi,0x20(%rsp)
    61a6:	48 c7 44 24 08 01 00 	movq   $0x1,0x8(%rsp)
    61ad:	00 00 
    61af:	48 89 74 24 10       	mov    %rsi,0x10(%rsp)
    61b4:	48 83 fe 01          	cmp    $0x1,%rsi
    61b8:	0f 84 02 ff ff ff    	je     60c0 <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x220>
    61be:	48 85 f6             	test   %rsi,%rsi
    61c1:	0f 84 5d 0f 00 00    	je     7124 <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x1284>
    61c7:	41 80 7c 1c 01 bf    	cmpb   $0xbf,0x1(%r12,%rbx,1)
    61cd:	0f 8f ed fe ff ff    	jg     60c0 <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x220>
    61d3:	e9 4c 0f 00 00       	jmpq   7124 <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x1284>
    61d8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    61df:	00 
    61e0:	4c 89 64 24 30       	mov    %r12,0x30(%rsp)
    61e5:	4c 89 74 24 38       	mov    %r14,0x38(%rsp)
    61ea:	49 39 de             	cmp    %rbx,%r14
    61ed:	74 21                	je     6210 <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x370>
    61ef:	48 85 db             	test   %rbx,%rbx
    61f2:	74 1c                	je     6210 <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x370>
    61f4:	49 39 de             	cmp    %rbx,%r14
    61f7:	41 ba 0a 00 00 00    	mov    $0xa,%r10d
    61fd:	0f 86 91 0f 00 00    	jbe    7194 <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x12f4>
    6203:	41 80 3c 1c c0       	cmpb   $0xc0,(%r12,%rbx,1)
    6208:	7d 15                	jge    621f <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x37f>
    620a:	e9 85 0f 00 00       	jmpq   7194 <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x12f4>
    620f:	90                   	nop
    6210:	48 85 db             	test   %rbx,%rbx
    6213:	41 ba 0a 00 00 00    	mov    $0xa,%r10d
    6219:	0f 84 c7 0f 00 00    	je     71e6 <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x1346>
    621f:	41 80 3c 24 2b       	cmpb   $0x2b,(%r12)
    6224:	48 89 d9             	mov    %rbx,%rcx
    6227:	4d 89 e1             	mov    %r12,%r9
    622a:	75 13                	jne    623f <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x39f>
    622c:	48 83 fb 01          	cmp    $0x1,%rbx
    6230:	0f 84 b0 0f 00 00    	je     71e6 <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x1346>
    6236:	4d 8d 4c 24 01       	lea    0x1(%r12),%r9
    623b:	48 8d 4b ff          	lea    -0x1(%rbx),%rcx
    623f:	48 8d 05 23 6f 03 00 	lea    0x36f23(%rip),%rax        # 3d169 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x809>
    6246:	4c 29 e0             	sub    %r12,%rax
    6249:	48 89 44 24 78       	mov    %rax,0x78(%rsp)
    624e:	4d 8d 1c 1c          	lea    (%r12,%rbx,1),%r11
    6252:	49 83 c3 01          	add    $0x1,%r11
    6256:	31 ed                	xor    %ebp,%ebp
    6258:	45 31 ff             	xor    %r15d,%r15d
    625b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    6260:	48 39 e9             	cmp    %rbp,%rcx
    6263:	74 3b                	je     62a0 <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x400>
    6265:	49 8d 04 29          	lea    (%r9,%rbp,1),%rax
    6269:	0f b6 38             	movzbl (%rax),%edi
    626c:	83 c7 d0             	add    $0xffffffd0,%edi
    626f:	83 ff 09             	cmp    $0x9,%edi
    6272:	0f 87 f0 0e 00 00    	ja     7168 <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x12c8>
    6278:	4c 89 f8             	mov    %r15,%rax
    627b:	49 f7 e2             	mul    %r10
    627e:	b2 02                	mov    $0x2,%dl
    6280:	0f 80 e4 0e 00 00    	jo     716a <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x12ca>
    6286:	49 89 c7             	mov    %rax,%r15
    6289:	89 f8                	mov    %edi,%eax
    628b:	48 83 c5 01          	add    $0x1,%rbp
    628f:	49 01 c7             	add    %rax,%r15
    6292:	73 cc                	jae    6260 <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x3c0>
    6294:	e9 d1 0e 00 00       	jmpq   716a <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x12ca>
    6299:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    62a0:	4c 89 6c 24 18       	mov    %r13,0x18(%rsp)
    62a5:	48 89 74 24 20       	mov    %rsi,0x20(%rsp)
    62aa:	4c 89 7c 24 08       	mov    %r15,0x8(%rsp)
    62af:	48 89 74 24 10       	mov    %rsi,0x10(%rsp)
    62b4:	4d 85 ff             	test   %r15,%r15
    62b7:	0f 94 c1             	sete   %cl
    62ba:	4d 29 fe             	sub    %r15,%r14
    62bd:	49 29 de             	sub    %rbx,%r14
    62c0:	0f 94 c0             	sete   %al
    62c3:	08 c8                	or     %cl,%al
    62c5:	75 17                	jne    62de <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x43e>
    62c7:	4c 39 fe             	cmp    %r15,%rsi
    62ca:	0f 86 54 0e 00 00    	jbe    7124 <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x1284>
    62d0:	4b 8d 0c 3c          	lea    (%r12,%r15,1),%rcx
    62d4:	80 3c 0b bf          	cmpb   $0xbf,(%rbx,%rcx,1)
    62d8:	0f 8e 46 0e 00 00    	jle    7124 <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x1284>
    62de:	4c 89 6c 24 30       	mov    %r13,0x30(%rsp)
    62e3:	48 89 74 24 38       	mov    %rsi,0x38(%rsp)
    62e8:	84 c0                	test   %al,%al
    62ea:	75 17                	jne    6303 <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x463>
    62ec:	4c 39 fe             	cmp    %r15,%rsi
    62ef:	0f 86 e2 0e 00 00    	jbe    71d7 <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x1337>
    62f5:	4b 8d 04 3c          	lea    (%r12,%r15,1),%rax
    62f9:	80 3c 18 bf          	cmpb   $0xbf,(%rax,%rbx,1)
    62fd:	0f 8e d4 0e 00 00    	jle    71d7 <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x1337>
    6303:	4b 8d 04 2f          	lea    (%r15,%r13,1),%rax
    6307:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
    630c:	4d 85 ff             	test   %r15,%r15
    630f:	0f 84 ab 01 00 00    	je     64c0 <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x620>
    6315:	48 8b 84 24 80 00 00 	mov    0x80(%rsp),%rax
    631c:	00 
    631d:	48 3b 84 24 90 00 00 	cmp    0x90(%rsp),%rax
    6324:	00 
    6325:	0f 85 95 01 00 00    	jne    64c0 <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x620>
    632b:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    6330:	8b 40 30             	mov    0x30(%rax),%eax
    6333:	83 e0 04             	and    $0x4,%eax
    6336:	0f 84 84 01 00 00    	je     64c0 <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x620>
    633c:	41 80 7d 00 68       	cmpb   $0x68,0x0(%r13)
    6341:	0f 85 79 01 00 00    	jne    64c0 <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x620>
    6347:	4c 89 6c 24 18       	mov    %r13,0x18(%rsp)
    634c:	4c 89 7c 24 20       	mov    %r15,0x20(%rsp)
    6351:	48 c7 44 24 08 01 00 	movq   $0x1,0x8(%rsp)
    6358:	00 00 
    635a:	4c 89 7c 24 10       	mov    %r15,0x10(%rsp)
    635f:	49 83 ff 01          	cmp    $0x1,%r15
    6363:	0f 84 69 0d 00 00    	je     70d2 <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x1232>
    6369:	41 8a 0b             	mov    (%r11),%cl
    636c:	80 f9 bf             	cmp    $0xbf,%cl
    636f:	0f 8e af 0d 00 00    	jle    7124 <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x1284>
    6375:	4d 89 f9             	mov    %r15,%r9
    6378:	49 f7 d9             	neg    %r9
    637b:	4c 89 e2             	mov    %r12,%rdx
    637e:	48 f7 da             	neg    %rdx
    6381:	4c 89 de             	mov    %r11,%rsi
    6384:	84 c9                	test   %cl,%cl
    6386:	0f 89 16 01 00 00    	jns    64a2 <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x602>
    638c:	0f 1f 40 00          	nopl   0x0(%rax)
    6390:	4a 8d 04 0e          	lea    (%rsi,%r9,1),%rax
    6394:	48 8d 3c 02          	lea    (%rdx,%rax,1),%rdi
    6398:	48 83 c7 01          	add    $0x1,%rdi
    639c:	89 c8                	mov    %ecx,%eax
    639e:	24 1f                	and    $0x1f,%al
    63a0:	48 39 df             	cmp    %rbx,%rdi
    63a3:	74 4b                	je     63f0 <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x550>
    63a5:	0f b6 7e 01          	movzbl 0x1(%rsi),%edi
    63a9:	48 83 c6 02          	add    $0x2,%rsi
    63ad:	83 e7 3f             	and    $0x3f,%edi
    63b0:	0f b6 c0             	movzbl %al,%eax
    63b3:	80 f9 df             	cmp    $0xdf,%cl
    63b6:	76 47                	jbe    63ff <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x55f>
    63b8:	4a 8d 2c 0e          	lea    (%rsi,%r9,1),%rbp
    63bc:	48 01 d5             	add    %rdx,%rbp
    63bf:	48 39 dd             	cmp    %rbx,%rbp
    63c2:	74 76                	je     643a <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x59a>
    63c4:	0f b6 2e             	movzbl (%rsi),%ebp
    63c7:	48 83 c6 01          	add    $0x1,%rsi
    63cb:	83 e5 3f             	and    $0x3f,%ebp
    63ce:	c1 e7 06             	shl    $0x6,%edi
    63d1:	09 ef                	or     %ebp,%edi
    63d3:	80 f9 f0             	cmp    $0xf0,%cl
    63d6:	72 73                	jb     644b <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x5ab>
    63d8:	4a 8d 0c 0e          	lea    (%rsi,%r9,1),%rcx
    63dc:	48 01 d1             	add    %rdx,%rcx
    63df:	48 39 d9             	cmp    %rbx,%rcx
    63e2:	74 76                	je     645a <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x5ba>
    63e4:	0f b6 0e             	movzbl (%rsi),%ecx
    63e7:	48 83 c6 01          	add    $0x1,%rsi
    63eb:	83 e1 3f             	and    $0x3f,%ecx
    63ee:	eb 71                	jmp    6461 <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x5c1>
    63f0:	31 ff                	xor    %edi,%edi
    63f2:	48 8b 74 24 68       	mov    0x68(%rsp),%rsi
    63f7:	0f b6 c0             	movzbl %al,%eax
    63fa:	80 f9 df             	cmp    $0xdf,%cl
    63fd:	77 b9                	ja     63b8 <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x518>
    63ff:	c1 e0 06             	shl    $0x6,%eax
    6402:	09 c7                	or     %eax,%edi
    6404:	8d 47 d0             	lea    -0x30(%rdi),%eax
    6407:	83 f8 0a             	cmp    $0xa,%eax
    640a:	72 7c                	jb     6488 <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x5e8>
    640c:	0f 1f 40 00          	nopl   0x0(%rax)
    6410:	8d 4f 9f             	lea    -0x61(%rdi),%ecx
    6413:	b8 a9 ff ff ff       	mov    $0xffffffa9,%eax
    6418:	83 f9 1a             	cmp    $0x1a,%ecx
    641b:	72 11                	jb     642e <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x58e>
    641d:	8d 4f bf             	lea    -0x41(%rdi),%ecx
    6420:	b8 c9 ff ff ff       	mov    $0xffffffc9,%eax
    6425:	83 f9 19             	cmp    $0x19,%ecx
    6428:	0f 87 92 00 00 00    	ja     64c0 <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x620>
    642e:	01 c7                	add    %eax,%edi
    6430:	83 ff 0f             	cmp    $0xf,%edi
    6433:	76 53                	jbe    6488 <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x5e8>
    6435:	e9 86 00 00 00       	jmpq   64c0 <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x620>
    643a:	31 ed                	xor    %ebp,%ebp
    643c:	48 8b 74 24 68       	mov    0x68(%rsp),%rsi
    6441:	c1 e7 06             	shl    $0x6,%edi
    6444:	09 ef                	or     %ebp,%edi
    6446:	80 f9 f0             	cmp    $0xf0,%cl
    6449:	73 8d                	jae    63d8 <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x538>
    644b:	c1 e0 0c             	shl    $0xc,%eax
    644e:	09 c7                	or     %eax,%edi
    6450:	8d 47 d0             	lea    -0x30(%rdi),%eax
    6453:	83 f8 0a             	cmp    $0xa,%eax
    6456:	73 b8                	jae    6410 <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x570>
    6458:	eb 2e                	jmp    6488 <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x5e8>
    645a:	31 c9                	xor    %ecx,%ecx
    645c:	48 8b 74 24 68       	mov    0x68(%rsp),%rsi
    6461:	83 e0 07             	and    $0x7,%eax
    6464:	c1 e0 12             	shl    $0x12,%eax
    6467:	c1 e7 06             	shl    $0x6,%edi
    646a:	09 c7                	or     %eax,%edi
    646c:	09 cf                	or     %ecx,%edi
    646e:	81 ff 00 00 11 00    	cmp    $0x110000,%edi
    6474:	0f 84 58 0c 00 00    	je     70d2 <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x1232>
    647a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    6480:	8d 47 d0             	lea    -0x30(%rdi),%eax
    6483:	83 f8 0a             	cmp    $0xa,%eax
    6486:	73 88                	jae    6410 <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x570>
    6488:	4a 8d 04 0e          	lea    (%rsi,%r9,1),%rax
    648c:	48 01 d0             	add    %rdx,%rax
    648f:	48 39 d8             	cmp    %rbx,%rax
    6492:	0f 84 3a 0c 00 00    	je     70d2 <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x1232>
    6498:	8a 0e                	mov    (%rsi),%cl
    649a:	84 c9                	test   %cl,%cl
    649c:	0f 88 ee fe ff ff    	js     6390 <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x4f0>
    64a2:	48 83 c6 01          	add    $0x1,%rsi
    64a6:	0f b6 f9             	movzbl %cl,%edi
    64a9:	8d 47 d0             	lea    -0x30(%rdi),%eax
    64ac:	83 f8 0a             	cmp    $0xa,%eax
    64af:	0f 83 5b ff ff ff    	jae    6410 <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x570>
    64b5:	eb d1                	jmp    6488 <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x5e8>
    64b7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    64be:	00 00 
    64c0:	4d 85 c0             	test   %r8,%r8
    64c3:	74 42                	je     6507 <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x667>
    64c5:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    64ca:	48 8b 78 20          	mov    0x20(%rax),%rdi
    64ce:	48 8b 40 28          	mov    0x28(%rax),%rax
    64d2:	ba 02 00 00 00       	mov    $0x2,%edx
    64d7:	48 8d 35 89 6c 03 00 	lea    0x36c89(%rip),%rsi        # 3d167 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x807>
    64de:	4c 89 dd             	mov    %r11,%rbp
    64e1:	ff 50 18             	callq  *0x18(%rax)
    64e4:	49 89 eb             	mov    %rbp,%r11
    64e7:	66 0f 6f 25 b1 3e 03 	movdqa 0x33eb1(%rip),%xmm4        # 3a3a0 <_fini+0x5c>
    64ee:	00 
    64ef:	66 0f 6f 1d 99 3e 03 	movdqa 0x33e99(%rip),%xmm3        # 3a390 <_fini+0x4c>
    64f6:	00 
    64f7:	66 0f 6f 15 81 3e 03 	movdqa 0x33e81(%rip),%xmm2        # 3a380 <_fini+0x3c>
    64fe:	00 
    64ff:	84 c0                	test   %al,%al
    6501:	0f 85 05 0c 00 00    	jne    710c <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x126c>
    6507:	49 83 ff 02          	cmp    $0x2,%r15
    650b:	72 53                	jb     6560 <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x6c0>
    650d:	48 8d 05 55 6c 03 00 	lea    0x36c55(%rip),%rax        # 3d169 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x809>
    6514:	48 39 5c 24 78       	cmp    %rbx,0x78(%rsp)
    6519:	74 10                	je     652b <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x68b>
    651b:	41 0f b7 4d 00       	movzwl 0x0(%r13),%ecx
    6520:	4c 89 e8             	mov    %r13,%rax
    6523:	81 f9 5f 24 00 00    	cmp    $0x245f,%ecx
    6529:	75 35                	jne    6560 <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x6c0>
    652b:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    6530:	4c 89 7c 24 20       	mov    %r15,0x20(%rsp)
    6535:	48 c7 44 24 08 01 00 	movq   $0x1,0x8(%rsp)
    653c:	00 00 
    653e:	4c 89 7c 24 10       	mov    %r15,0x10(%rsp)
    6543:	41 80 3b bf          	cmpb   $0xbf,(%r11)
    6547:	0f 8e d7 0b 00 00    	jle    7124 <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x1284>
    654d:	49 83 c7 ff          	add    $0xffffffffffffffff,%r15
    6551:	4d 8d 2c 1c          	lea    (%r12,%rbx,1),%r13
    6555:	49 83 c5 01          	add    $0x1,%r13
    6559:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    6560:	4d 89 fc             	mov    %r15,%r12
    6563:	4d 85 ff             	test   %r15,%r15
    6566:	0f 84 b4 09 00 00    	je     6f20 <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x1080>
    656c:	41 8a 45 00          	mov    0x0(%r13),%al
    6570:	3c 24                	cmp    $0x24,%al
    6572:	0f 84 b8 00 00 00    	je     6630 <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x790>
    6578:	3c 2e                	cmp    $0x2e,%al
    657a:	0f 85 a0 09 00 00    	jne    6f20 <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x1080>
    6580:	4c 89 6c 24 18       	mov    %r13,0x18(%rsp)
    6585:	4c 89 64 24 20       	mov    %r12,0x20(%rsp)
    658a:	48 c7 44 24 08 01 00 	movq   $0x1,0x8(%rsp)
    6591:	00 00 
    6593:	4c 89 64 24 10       	mov    %r12,0x10(%rsp)
    6598:	49 83 fc 01          	cmp    $0x1,%r12
    659c:	74 0b                	je     65a9 <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x709>
    659e:	41 80 7d 01 bf       	cmpb   $0xbf,0x1(%r13)
    65a3:	0f 8e 7b 0b 00 00    	jle    7124 <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x1284>
    65a9:	49 83 fc 01          	cmp    $0x1,%r12
    65ad:	0f 84 13 04 00 00    	je     69c6 <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0xb26>
    65b3:	41 0f b6 55 01       	movzbl 0x1(%r13),%edx
    65b8:	84 d2                	test   %dl,%dl
    65ba:	0f 88 9e 03 00 00    	js     695e <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0xabe>
    65c0:	89 d0                	mov    %edx,%eax
    65c2:	83 f8 2e             	cmp    $0x2e,%eax
    65c5:	0f 85 fb 03 00 00    	jne    69c6 <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0xb26>
    65cb:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    65d0:	48 8b 78 20          	mov    0x20(%rax),%rdi
    65d4:	48 8b 40 28          	mov    0x28(%rax),%rax
    65d8:	ba 02 00 00 00       	mov    $0x2,%edx
    65dd:	48 8d 35 83 6b 03 00 	lea    0x36b83(%rip),%rsi        # 3d167 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x807>
    65e4:	ff 50 18             	callq  *0x18(%rax)
    65e7:	84 c0                	test   %al,%al
    65e9:	0f 85 1d 0b 00 00    	jne    710c <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x126c>
    65ef:	4c 89 6c 24 18       	mov    %r13,0x18(%rsp)
    65f4:	49 83 c5 02          	add    $0x2,%r13
    65f8:	4c 89 64 24 20       	mov    %r12,0x20(%rsp)
    65fd:	48 c7 44 24 08 02 00 	movq   $0x2,0x8(%rsp)
    6604:	00 00 
    6606:	4c 89 64 24 10       	mov    %r12,0x10(%rsp)
    660b:	49 83 fc 02          	cmp    $0x2,%r12
    660f:	74 0b                	je     661c <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x77c>
    6611:	41 80 7d 00 bf       	cmpb   $0xbf,0x0(%r13)
    6616:	0f 8e 08 0b 00 00    	jle    7124 <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x1284>
    661c:	49 83 c4 fe          	add    $0xfffffffffffffffe,%r12
    6620:	e9 f6 03 00 00       	jmpq   6a1b <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0xb7b>
    6625:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    662c:	00 00 00 
    662f:	90                   	nop
    6630:	4c 89 6c 24 18       	mov    %r13,0x18(%rsp)
    6635:	4c 89 64 24 20       	mov    %r12,0x20(%rsp)
    663a:	48 c7 44 24 08 01 00 	movq   $0x1,0x8(%rsp)
    6641:	00 00 
    6643:	4c 89 64 24 10       	mov    %r12,0x10(%rsp)
    6648:	49 83 fc 01          	cmp    $0x1,%r12
    664c:	74 0b                	je     6659 <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x7b9>
    664e:	41 80 7d 01 bf       	cmpb   $0xbf,0x1(%r13)
    6653:	0f 8e cb 0a 00 00    	jle    7124 <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x1284>
    6659:	4d 8d 4d 01          	lea    0x1(%r13),%r9
    665d:	4c 89 64 24 60       	mov    %r12,0x60(%rsp)
    6662:	49 83 c4 ff          	add    $0xffffffffffffffff,%r12
    6666:	4c 89 4c 24 30       	mov    %r9,0x30(%rsp)
    666b:	4c 89 64 24 38       	mov    %r12,0x38(%rsp)
    6670:	48 c7 44 24 40 00 00 	movq   $0x0,0x40(%rsp)
    6677:	00 00 
    6679:	4c 89 64 24 48       	mov    %r12,0x48(%rsp)
    667e:	48 b8 24 00 00 00 24 	movabs $0x2400000024,%rax
    6685:	00 00 00 
    6688:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
    668d:	48 c7 44 24 50 01 00 	movq   $0x1,0x50(%rsp)
    6694:	00 00 
    6696:	44 89 c9             	mov    %r9d,%ecx
    6699:	83 e1 07             	and    $0x7,%ecx
    669c:	48 85 c9             	test   %rcx,%rcx
    669f:	0f 84 ad 00 00 00    	je     6752 <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x8b2>
    66a5:	b8 08 00 00 00       	mov    $0x8,%eax
    66aa:	bf 00 00 00 00       	mov    $0x0,%edi
    66af:	48 29 c8             	sub    %rcx,%rax
    66b2:	74 48                	je     66fc <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x85c>
    66b4:	4c 39 e0             	cmp    %r12,%rax
    66b7:	49 0f 47 c4          	cmova  %r12,%rax
    66bb:	48 89 c2             	mov    %rax,%rdx
    66be:	48 f7 da             	neg    %rdx
    66c1:	48 c7 c1 ff ff ff ff 	mov    $0xffffffffffffffff,%rcx
    66c8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    66cf:	00 
    66d0:	48 8d 3c 0a          	lea    (%rdx,%rcx,1),%rdi
    66d4:	48 83 ff ff          	cmp    $0xffffffffffffffff,%rdi
    66d8:	74 1f                	je     66f9 <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x859>
    66da:	41 80 7c 0d 02 24    	cmpb   $0x24,0x2(%r13,%rcx,1)
    66e0:	48 8d 49 01          	lea    0x1(%rcx),%rcx
    66e4:	75 ea                	jne    66d0 <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x830>
    66e6:	0f 94 c0             	sete   %al
    66e9:	04 01                	add    $0x1,%al
    66eb:	0f b6 d8             	movzbl %al,%ebx
    66ee:	83 e3 01             	and    $0x1,%ebx
    66f1:	48 01 cb             	add    %rcx,%rbx
    66f4:	e9 a1 00 00 00       	jmpq   679a <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x8fa>
    66f9:	48 89 c7             	mov    %rax,%rdi
    66fc:	49 83 fc 10          	cmp    $0x10,%r12
    6700:	72 58                	jb     675a <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x8ba>
    6702:	48 8b 44 24 60       	mov    0x60(%rsp),%rax
    6707:	48 83 c0 ef          	add    $0xffffffffffffffef,%rax
    670b:	48 39 c7             	cmp    %rax,%rdi
    670e:	77 4a                	ja     675a <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x8ba>
    6710:	f3 41 0f 6f 44 3d 01 	movdqu 0x1(%r13,%rdi,1),%xmm0
    6717:	66 0f 6f c8          	movdqa %xmm0,%xmm1
    671b:	66 0f ef ca          	pxor   %xmm2,%xmm1
    671f:	66 0f d4 cb          	paddq  %xmm3,%xmm1
    6723:	66 0f df c1          	pandn  %xmm1,%xmm0
    6727:	66 0f db c4          	pand   %xmm4,%xmm0
    672b:	66 48 0f 7e c1       	movq   %xmm0,%rcx
    6730:	66 0f 70 c0 4e       	pshufd $0x4e,%xmm0,%xmm0
    6735:	66 48 0f 7e c2       	movq   %xmm0,%rdx
    673a:	48 09 ca             	or     %rcx,%rdx
    673d:	75 09                	jne    6748 <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x8a8>
    673f:	48 83 c7 10          	add    $0x10,%rdi
    6743:	48 39 c7             	cmp    %rax,%rdi
    6746:	76 c8                	jbe    6710 <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x870>
    6748:	4c 39 e7             	cmp    %r12,%rdi
    674b:	76 0d                	jbe    675a <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x8ba>
    674d:	e9 5e 0a 00 00       	jmpq   71b0 <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x1310>
    6752:	31 ff                	xor    %edi,%edi
    6754:	49 83 fc 10          	cmp    $0x10,%r12
    6758:	73 a8                	jae    6702 <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x862>
    675a:	4a 8d 0c 2f          	lea    (%rdi,%r13,1),%rcx
    675e:	48 83 c1 01          	add    $0x1,%rcx
    6762:	48 89 fa             	mov    %rdi,%rdx
    6765:	48 f7 d2             	not    %rdx
    6768:	48 03 54 24 60       	add    0x60(%rsp),%rdx
    676d:	31 c0                	xor    %eax,%eax
    676f:	90                   	nop
    6770:	48 39 c2             	cmp    %rax,%rdx
    6773:	0f 84 b4 f8 ff ff    	je     602d <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x18d>
    6779:	80 3c 01 24          	cmpb   $0x24,(%rcx,%rax,1)
    677d:	48 8d 40 01          	lea    0x1(%rax),%rax
    6781:	75 ed                	jne    6770 <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x8d0>
    6783:	0f 94 c1             	sete   %cl
    6786:	80 c1 01             	add    $0x1,%cl
    6789:	0f b6 c9             	movzbl %cl,%ecx
    678c:	83 e1 01             	and    $0x1,%ecx
    678f:	48 01 cf             	add    %rcx,%rdi
    6792:	48 8d 1c 38          	lea    (%rax,%rdi,1),%rbx
    6796:	48 83 c3 ff          	add    $0xffffffffffffffff,%rbx
    679a:	49 8d 6d 02          	lea    0x2(%r13),%rbp
    679e:	48 8b 44 24 60       	mov    0x60(%rsp),%rax
    67a3:	48 83 c0 fe          	add    $0xfffffffffffffffe,%rax
    67a7:	48 89 44 24 78       	mov    %rax,0x78(%rsp)
    67ac:	45 31 ff             	xor    %r15d,%r15d
    67af:	48 89 6c 24 70       	mov    %rbp,0x70(%rsp)
    67b4:	eb 1b                	jmp    67d1 <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x931>
    67b6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    67bd:	00 00 00 
    67c0:	31 c0                	xor    %eax,%eax
    67c2:	48 01 fb             	add    %rdi,%rbx
    67c5:	4d 89 df             	mov    %r11,%r15
    67c8:	48 85 c0             	test   %rax,%rax
    67cb:	0f 84 5c f8 ff ff    	je     602d <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x18d>
    67d1:	4a 8d 34 3b          	lea    (%rbx,%r15,1),%rsi
    67d5:	49 89 f3             	mov    %rsi,%r11
    67d8:	49 ff c3             	inc    %r11
    67db:	4c 89 5c 24 40       	mov    %r11,0x40(%rsp)
    67e0:	74 13                	je     67f5 <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x955>
    67e2:	4d 39 dc             	cmp    %r11,%r12
    67e5:	72 0e                	jb     67f5 <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x955>
    67e7:	41 8a 04 31          	mov    (%r9,%rsi,1),%al
    67eb:	3a 44 24 5c          	cmp    0x5c(%rsp),%al
    67ef:	0f 84 2e 02 00 00    	je     6a23 <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0xb83>
    67f5:	4c 89 e0             	mov    %r12,%rax
    67f8:	4c 29 d8             	sub    %r11,%rax
    67fb:	0f 82 31 f8 ff ff    	jb     6032 <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x192>
    6801:	4b 8d 0c 19          	lea    (%r9,%r11,1),%rcx
    6805:	83 e1 07             	and    $0x7,%ecx
    6808:	48 85 c9             	test   %rcx,%rcx
    680b:	0f 84 df 00 00 00    	je     68f0 <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0xa50>
    6811:	41 b8 08 00 00 00    	mov    $0x8,%r8d
    6817:	bf 00 00 00 00       	mov    $0x0,%edi
    681c:	49 29 c8             	sub    %rcx,%r8
    681f:	74 65                	je     6886 <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x9e6>
    6821:	4d 89 ca             	mov    %r9,%r10
    6824:	49 39 c0             	cmp    %rax,%r8
    6827:	4c 0f 47 c0          	cmova  %rax,%r8
    682b:	48 8d 14 2e          	lea    (%rsi,%rbp,1),%rdx
    682f:	4c 89 c1             	mov    %r8,%rcx
    6832:	48 f7 d9             	neg    %rcx
    6835:	48 c7 c7 ff ff ff ff 	mov    $0xffffffffffffffff,%rdi
    683c:	0f 1f 40 00          	nopl   0x0(%rax)
    6840:	4c 8d 0c 39          	lea    (%rcx,%rdi,1),%r9
    6844:	49 83 f9 ff          	cmp    $0xffffffffffffffff,%r9
    6848:	74 36                	je     6880 <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x9e0>
    684a:	80 7c 3a 01 24       	cmpb   $0x24,0x1(%rdx,%rdi,1)
    684f:	48 8d 7f 01          	lea    0x1(%rdi),%rdi
    6853:	75 eb                	jne    6840 <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x9a0>
    6855:	0f 94 c0             	sete   %al
    6858:	04 01                	add    $0x1,%al
    685a:	0f b6 d8             	movzbl %al,%ebx
    685d:	83 e3 01             	and    $0x1,%ebx
    6860:	48 01 fb             	add    %rdi,%rbx
    6863:	b8 01 00 00 00       	mov    $0x1,%eax
    6868:	4d 89 d1             	mov    %r10,%r9
    686b:	4d 89 df             	mov    %r11,%r15
    686e:	48 85 c0             	test   %rax,%rax
    6871:	0f 85 5a ff ff ff    	jne    67d1 <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x931>
    6877:	e9 b1 f7 ff ff       	jmpq   602d <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x18d>
    687c:	0f 1f 40 00          	nopl   0x0(%rax)
    6880:	4c 89 c7             	mov    %r8,%rdi
    6883:	4d 89 d1             	mov    %r10,%r9
    6886:	48 83 f8 10          	cmp    $0x10,%rax
    688a:	72 74                	jb     6900 <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0xa60>
    688c:	48 8d 48 f0          	lea    -0x10(%rax),%rcx
    6890:	48 39 cf             	cmp    %rcx,%rdi
    6893:	77 6b                	ja     6900 <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0xa60>
    6895:	48 01 ee             	add    %rbp,%rsi
    6898:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    689f:	00 
    68a0:	f3 0f 6f 04 3e       	movdqu (%rsi,%rdi,1),%xmm0
    68a5:	66 0f 6f c8          	movdqa %xmm0,%xmm1
    68a9:	66 0f ef ca          	pxor   %xmm2,%xmm1
    68ad:	66 0f d4 cb          	paddq  %xmm3,%xmm1
    68b1:	66 0f df c1          	pandn  %xmm1,%xmm0
    68b5:	66 0f db c4          	pand   %xmm4,%xmm0
    68b9:	66 48 0f 7e c2       	movq   %xmm0,%rdx
    68be:	66 0f 70 c0 4e       	pshufd $0x4e,%xmm0,%xmm0
    68c3:	66 48 0f 7e c5       	movq   %xmm0,%rbp
    68c8:	48 09 d5             	or     %rdx,%rbp
    68cb:	75 09                	jne    68d6 <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0xa36>
    68cd:	48 83 c7 10          	add    $0x10,%rdi
    68d1:	48 39 cf             	cmp    %rcx,%rdi
    68d4:	76 ca                	jbe    68a0 <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0xa00>
    68d6:	48 39 c7             	cmp    %rax,%rdi
    68d9:	0f 87 db 08 00 00    	ja     71ba <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x131a>
    68df:	48 8b 6c 24 70       	mov    0x70(%rsp),%rbp
    68e4:	eb 1a                	jmp    6900 <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0xa60>
    68e6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    68ed:	00 00 00 
    68f0:	31 ff                	xor    %edi,%edi
    68f2:	48 83 f8 10          	cmp    $0x10,%rax
    68f6:	73 94                	jae    688c <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x9ec>
    68f8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    68ff:	00 
    6900:	48 01 fb             	add    %rdi,%rbx
    6903:	4c 01 fb             	add    %r15,%rbx
    6906:	48 8d 04 2b          	lea    (%rbx,%rbp,1),%rax
    690a:	48 8b 4c 24 78       	mov    0x78(%rsp),%rcx
    690f:	48 29 d9             	sub    %rbx,%rcx
    6912:	31 db                	xor    %ebx,%ebx
    6914:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    691b:	00 00 00 
    691e:	66 90                	xchg   %ax,%ax
    6920:	48 39 d9             	cmp    %rbx,%rcx
    6923:	0f 84 97 fe ff ff    	je     67c0 <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x920>
    6929:	80 3c 18 24          	cmpb   $0x24,(%rax,%rbx,1)
    692d:	48 8d 5b 01          	lea    0x1(%rbx),%rbx
    6931:	75 ed                	jne    6920 <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0xa80>
    6933:	0f 94 c0             	sete   %al
    6936:	04 01                	add    $0x1,%al
    6938:	0f b6 c0             	movzbl %al,%eax
    693b:	83 e0 01             	and    $0x1,%eax
    693e:	48 01 c3             	add    %rax,%rbx
    6941:	48 83 c3 ff          	add    $0xffffffffffffffff,%rbx
    6945:	b8 01 00 00 00       	mov    $0x1,%eax
    694a:	48 01 fb             	add    %rdi,%rbx
    694d:	4d 89 df             	mov    %r11,%r15
    6950:	48 85 c0             	test   %rax,%rax
    6953:	0f 85 78 fe ff ff    	jne    67d1 <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x931>
    6959:	e9 cf f6 ff ff       	jmpq   602d <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x18d>
    695e:	4b 8d 34 2c          	lea    (%r12,%r13,1),%rsi
    6962:	31 c0                	xor    %eax,%eax
    6964:	48 89 f7             	mov    %rsi,%rdi
    6967:	49 83 fc 02          	cmp    $0x2,%r12
    696b:	74 0c                	je     6979 <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0xad9>
    696d:	49 8d 7d 03          	lea    0x3(%r13),%rdi
    6971:	41 0f b6 45 02       	movzbl 0x2(%r13),%eax
    6976:	83 e0 3f             	and    $0x3f,%eax
    6979:	89 d1                	mov    %edx,%ecx
    697b:	83 e1 1f             	and    $0x1f,%ecx
    697e:	80 fa df             	cmp    $0xdf,%dl
    6981:	76 35                	jbe    69b8 <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0xb18>
    6983:	48 39 f7             	cmp    %rsi,%rdi
    6986:	0f 84 3c 01 00 00    	je     6ac8 <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0xc28>
    698c:	0f b6 2f             	movzbl (%rdi),%ebp
    698f:	48 83 c7 01          	add    $0x1,%rdi
    6993:	83 e5 3f             	and    $0x3f,%ebp
    6996:	c1 e0 06             	shl    $0x6,%eax
    6999:	09 e8                	or     %ebp,%eax
    699b:	80 fa f0             	cmp    $0xf0,%dl
    699e:	0f 82 37 01 00 00    	jb     6adb <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0xc3b>
    69a4:	48 39 f7             	cmp    %rsi,%rdi
    69a7:	0f 84 19 04 00 00    	je     6dc6 <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0xf26>
    69ad:	0f b6 17             	movzbl (%rdi),%edx
    69b0:	83 e2 3f             	and    $0x3f,%edx
    69b3:	e9 10 04 00 00       	jmpq   6dc8 <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0xf28>
    69b8:	c1 e1 06             	shl    $0x6,%ecx
    69bb:	09 c8                	or     %ecx,%eax
    69bd:	83 f8 2e             	cmp    $0x2e,%eax
    69c0:	0f 84 05 fc ff ff    	je     65cb <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x72b>
    69c6:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    69cb:	48 8b 78 20          	mov    0x20(%rax),%rdi
    69cf:	48 8b 40 28          	mov    0x28(%rax),%rax
    69d3:	ba 01 00 00 00       	mov    $0x1,%edx
    69d8:	48 8d 35 3f 6c 03 00 	lea    0x36c3f(%rip),%rsi        # 3d61e <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0xcbe>
    69df:	ff 50 18             	callq  *0x18(%rax)
    69e2:	84 c0                	test   %al,%al
    69e4:	0f 85 22 07 00 00    	jne    710c <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x126c>
    69ea:	4c 89 6c 24 18       	mov    %r13,0x18(%rsp)
    69ef:	49 83 c5 01          	add    $0x1,%r13
    69f3:	4c 89 64 24 20       	mov    %r12,0x20(%rsp)
    69f8:	48 c7 44 24 08 01 00 	movq   $0x1,0x8(%rsp)
    69ff:	00 00 
    6a01:	4c 89 64 24 10       	mov    %r12,0x10(%rsp)
    6a06:	49 83 fc 01          	cmp    $0x1,%r12
    6a0a:	74 0b                	je     6a17 <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0xb77>
    6a0c:	41 80 7d 00 bf       	cmpb   $0xbf,0x0(%r13)
    6a11:	0f 8e 0d 07 00 00    	jle    7124 <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x1284>
    6a17:	49 83 c4 ff          	add    $0xffffffffffffffff,%r12
    6a1b:	4d 89 e7             	mov    %r12,%r15
    6a1e:	e9 86 06 00 00       	jmpq   70a9 <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x1209>
    6a23:	4c 89 6c 24 18       	mov    %r13,0x18(%rsp)
    6a28:	4c 8b 64 24 60       	mov    0x60(%rsp),%r12
    6a2d:	4c 89 64 24 20       	mov    %r12,0x20(%rsp)
    6a32:	48 c7 44 24 08 01 00 	movq   $0x1,0x8(%rsp)
    6a39:	00 00 
    6a3b:	4c 89 5c 24 10       	mov    %r11,0x10(%rsp)
    6a40:	49 83 fc 01          	cmp    $0x1,%r12
    6a44:	74 0a                	je     6a50 <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0xbb0>
    6a46:	41 80 39 bf          	cmpb   $0xbf,(%r9)
    6a4a:	0f 8e d4 06 00 00    	jle    7124 <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x1284>
    6a50:	4d 39 dc             	cmp    %r11,%r12
    6a53:	74 12                	je     6a67 <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0xbc7>
    6a55:	0f 86 c9 06 00 00    	jbe    7124 <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x1284>
    6a5b:	43 80 7c 1d 00 bf    	cmpb   $0xbf,0x0(%r13,%r11,1)
    6a61:	0f 8e bd 06 00 00    	jle    7124 <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x1284>
    6a67:	48 89 f0             	mov    %rsi,%rax
    6a6a:	4c 89 6c 24 18       	mov    %r13,0x18(%rsp)
    6a6f:	4c 89 64 24 20       	mov    %r12,0x20(%rsp)
    6a74:	4c 89 64 24 10       	mov    %r12,0x10(%rsp)
    6a79:	48 83 c0 02          	add    $0x2,%rax
    6a7d:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    6a82:	74 17                	je     6a9b <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0xbfb>
    6a84:	49 39 c4             	cmp    %rax,%r12
    6a87:	74 12                	je     6a9b <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0xbfb>
    6a89:	0f 86 95 06 00 00    	jbe    7124 <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x1284>
    6a8f:	41 80 7c 05 00 bf    	cmpb   $0xbf,0x0(%r13,%rax,1)
    6a95:	0f 8e 89 06 00 00    	jle    7124 <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x1284>
    6a9b:	4e 8d 14 28          	lea    (%rax,%r13,1),%r10
    6a9f:	4d 89 e7             	mov    %r12,%r15
    6aa2:	49 29 c7             	sub    %rax,%r15
    6aa5:	48 83 fe 01          	cmp    $0x1,%rsi
    6aa9:	0f 84 6c 01 00 00    	je     6c1b <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0xd7b>
    6aaf:	48 83 fe 02          	cmp    $0x2,%rsi
    6ab3:	74 39                	je     6aee <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0xc4e>
    6ab5:	48 85 f6             	test   %rsi,%rsi
    6ab8:	0f 84 79 f5 ff ff    	je     6037 <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x197>
    6abe:	41 8a 09             	mov    (%r9),%cl
    6ac1:	31 c0                	xor    %eax,%eax
    6ac3:	e9 b7 01 00 00       	jmpq   6c7f <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0xddf>
    6ac8:	31 ed                	xor    %ebp,%ebp
    6aca:	48 89 f7             	mov    %rsi,%rdi
    6acd:	c1 e0 06             	shl    $0x6,%eax
    6ad0:	09 e8                	or     %ebp,%eax
    6ad2:	80 fa f0             	cmp    $0xf0,%dl
    6ad5:	0f 83 c9 fe ff ff    	jae    69a4 <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0xb04>
    6adb:	c1 e1 0c             	shl    $0xc,%ecx
    6ade:	09 c8                	or     %ecx,%eax
    6ae0:	83 f8 2e             	cmp    $0x2e,%eax
    6ae3:	0f 84 e2 fa ff ff    	je     65cb <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x72b>
    6ae9:	e9 d8 fe ff ff       	jmpq   69c6 <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0xb26>
    6aee:	48 8d 2d 85 66 03 00 	lea    0x36685(%rip),%rbp        # 3d17a <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x81a>
    6af5:	48 8d 05 6f 66 03 00 	lea    0x3666f(%rip),%rax        # 3d16b <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x80b>
    6afc:	49 39 c1             	cmp    %rax,%r9
    6aff:	0f 84 3a 01 00 00    	je     6c3f <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0xd9f>
    6b05:	41 0f b7 01          	movzwl (%r9),%eax
    6b09:	48 8d 2d 6a 66 03 00 	lea    0x3666a(%rip),%rbp        # 3d17a <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x81a>
    6b10:	3d 53 50 00 00       	cmp    $0x5053,%eax
    6b15:	0f 84 24 01 00 00    	je     6c3f <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0xd9f>
    6b1b:	48 8d 2d 59 66 03 00 	lea    0x36659(%rip),%rbp        # 3d17b <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x81b>
    6b22:	48 8d 05 44 66 03 00 	lea    0x36644(%rip),%rax        # 3d16d <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x80d>
    6b29:	49 39 c1             	cmp    %rax,%r9
    6b2c:	0f 84 0d 01 00 00    	je     6c3f <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0xd9f>
    6b32:	41 0f b7 01          	movzwl (%r9),%eax
    6b36:	48 8d 2d 3e 66 03 00 	lea    0x3663e(%rip),%rbp        # 3d17b <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x81b>
    6b3d:	3d 42 50 00 00       	cmp    $0x5042,%eax
    6b42:	0f 84 f7 00 00 00    	je     6c3f <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0xd9f>
    6b48:	48 8d 2d 2d 66 03 00 	lea    0x3662d(%rip),%rbp        # 3d17c <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x81c>
    6b4f:	48 8d 05 19 66 03 00 	lea    0x36619(%rip),%rax        # 3d16f <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x80f>
    6b56:	49 39 c1             	cmp    %rax,%r9
    6b59:	0f 84 e0 00 00 00    	je     6c3f <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0xd9f>
    6b5f:	41 0f b7 01          	movzwl (%r9),%eax
    6b63:	48 8d 2d 12 66 03 00 	lea    0x36612(%rip),%rbp        # 3d17c <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x81c>
    6b6a:	3d 52 46 00 00       	cmp    $0x4652,%eax
    6b6f:	0f 84 ca 00 00 00    	je     6c3f <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0xd9f>
    6b75:	48 8d 2d 01 66 03 00 	lea    0x36601(%rip),%rbp        # 3d17d <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x81d>
    6b7c:	48 8d 05 ee 65 03 00 	lea    0x365ee(%rip),%rax        # 3d171 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x811>
    6b83:	49 39 c1             	cmp    %rax,%r9
    6b86:	0f 84 b3 00 00 00    	je     6c3f <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0xd9f>
    6b8c:	41 0f b7 01          	movzwl (%r9),%eax
    6b90:	48 8d 2d e6 65 03 00 	lea    0x365e6(%rip),%rbp        # 3d17d <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x81d>
    6b97:	3d 4c 54 00 00       	cmp    $0x544c,%eax
    6b9c:	0f 84 9d 00 00 00    	je     6c3f <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0xd9f>
    6ba2:	48 8d 2d d5 65 03 00 	lea    0x365d5(%rip),%rbp        # 3d17e <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x81e>
    6ba9:	48 8d 05 c3 65 03 00 	lea    0x365c3(%rip),%rax        # 3d173 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x813>
    6bb0:	49 39 c1             	cmp    %rax,%r9
    6bb3:	0f 84 86 00 00 00    	je     6c3f <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0xd9f>
    6bb9:	41 0f b7 01          	movzwl (%r9),%eax
    6bbd:	48 8d 2d ba 65 03 00 	lea    0x365ba(%rip),%rbp        # 3d17e <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x81e>
    6bc4:	3d 47 54 00 00       	cmp    $0x5447,%eax
    6bc9:	74 74                	je     6c3f <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0xd9f>
    6bcb:	48 8d 2d ad 65 03 00 	lea    0x365ad(%rip),%rbp        # 3d17f <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x81f>
    6bd2:	48 8d 05 9c 65 03 00 	lea    0x3659c(%rip),%rax        # 3d175 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x815>
    6bd9:	49 39 c1             	cmp    %rax,%r9
    6bdc:	74 61                	je     6c3f <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0xd9f>
    6bde:	41 0f b7 01          	movzwl (%r9),%eax
    6be2:	48 8d 2d 96 65 03 00 	lea    0x36596(%rip),%rbp        # 3d17f <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x81f>
    6be9:	3d 4c 50 00 00       	cmp    $0x504c,%eax
    6bee:	74 4f                	je     6c3f <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0xd9f>
    6bf0:	48 8d 2d c9 6c 03 00 	lea    0x36cc9(%rip),%rbp        # 3d8c0 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0xf60>
    6bf7:	48 8d 05 79 65 03 00 	lea    0x36579(%rip),%rax        # 3d177 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x817>
    6bfe:	49 39 c1             	cmp    %rax,%r9
    6c01:	74 3c                	je     6c3f <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0xd9f>
    6c03:	41 0f b7 01          	movzwl (%r9),%eax
    6c07:	48 8d 2d b2 6c 03 00 	lea    0x36cb2(%rip),%rbp        # 3d8c0 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0xf60>
    6c0e:	3d 52 50 00 00       	cmp    $0x5052,%eax
    6c13:	0f 85 a5 fe ff ff    	jne    6abe <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0xc1e>
    6c19:	eb 24                	jmp    6c3f <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0xd9f>
    6c1b:	48 8d 2d 5e 65 03 00 	lea    0x3655e(%rip),%rbp        # 3d180 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x820>
    6c22:	48 8d 05 50 65 03 00 	lea    0x36550(%rip),%rax        # 3d179 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x819>
    6c29:	49 39 c1             	cmp    %rax,%r9
    6c2c:	74 11                	je     6c3f <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0xd9f>
    6c2e:	41 8a 09             	mov    (%r9),%cl
    6c31:	b0 01                	mov    $0x1,%al
    6c33:	48 8d 2d 46 65 03 00 	lea    0x36546(%rip),%rbp        # 3d180 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x820>
    6c3a:	80 f9 43             	cmp    $0x43,%cl
    6c3d:	75 40                	jne    6c7f <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0xddf>
    6c3f:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    6c44:	48 8b 78 20          	mov    0x20(%rax),%rdi
    6c48:	48 8b 40 28          	mov    0x28(%rax),%rax
    6c4c:	ba 01 00 00 00       	mov    $0x1,%edx
    6c51:	48 89 ee             	mov    %rbp,%rsi
    6c54:	4d 89 d5             	mov    %r10,%r13
    6c57:	ff 50 18             	callq  *0x18(%rax)
    6c5a:	66 0f 6f 25 3e 37 03 	movdqa 0x3373e(%rip),%xmm4        # 3a3a0 <_fini+0x5c>
    6c61:	00 
    6c62:	66 0f 6f 1d 26 37 03 	movdqa 0x33726(%rip),%xmm3        # 3a390 <_fini+0x4c>
    6c69:	00 
    6c6a:	66 0f 6f 15 0e 37 03 	movdqa 0x3370e(%rip),%xmm2        # 3a380 <_fini+0x3c>
    6c71:	00 
    6c72:	84 c0                	test   %al,%al
    6c74:	0f 84 e6 f8 ff ff    	je     6560 <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x6c0>
    6c7a:	e9 8d 04 00 00       	jmpq   710c <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x126c>
    6c7f:	80 f9 75             	cmp    $0x75,%cl
    6c82:	0f 85 af f3 ff ff    	jne    6037 <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x197>
    6c88:	4c 89 4c 24 18       	mov    %r9,0x18(%rsp)
    6c8d:	48 89 74 24 20       	mov    %rsi,0x20(%rsp)
    6c92:	48 c7 44 24 08 01 00 	movq   $0x1,0x8(%rsp)
    6c99:	00 00 
    6c9b:	48 89 74 24 10       	mov    %rsi,0x10(%rsp)
    6ca0:	84 c0                	test   %al,%al
    6ca2:	75 15                	jne    6cb9 <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0xe19>
    6ca4:	48 83 fe 02          	cmp    $0x2,%rsi
    6ca8:	0f 82 76 04 00 00    	jb     7124 <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x1284>
    6cae:	41 80 7d 02 bf       	cmpb   $0xbf,0x2(%r13)
    6cb3:	0f 8e 6b 04 00 00    	jle    7124 <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x1284>
    6cb9:	4c 8d 46 ff          	lea    -0x1(%rsi),%r8
    6cbd:	4a 8d 04 2e          	lea    (%rsi,%r13,1),%rax
    6cc1:	48 83 c0 01          	add    $0x1,%rax
    6cc5:	48 8b 54 24 70       	mov    0x70(%rsp),%rdx
    6cca:	48 39 c2             	cmp    %rax,%rdx
    6ccd:	75 27                	jne    6cf6 <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0xe56>
    6ccf:	e9 e6 00 00 00       	jmpq   6dba <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0xf1a>
    6cd4:	c1 e3 06             	shl    $0x6,%ebx
    6cd7:	09 df                	or     %ebx,%edi
    6cd9:	8d 4f 9f             	lea    -0x61(%rdi),%ecx
    6cdc:	83 f9 06             	cmp    $0x6,%ecx
    6cdf:	72 0c                	jb     6ced <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0xe4d>
    6ce1:	83 c7 d0             	add    $0xffffffd0,%edi
    6ce4:	83 ff 0a             	cmp    $0xa,%edi
    6ce7:	0f 83 f6 00 00 00    	jae    6de3 <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0xf43>
    6ced:	48 39 c2             	cmp    %rax,%rdx
    6cf0:	0f 84 c4 00 00 00    	je     6dba <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0xf1a>
    6cf6:	48 8d 4a 01          	lea    0x1(%rdx),%rcx
    6cfa:	0f b6 2a             	movzbl (%rdx),%ebp
    6cfd:	40 84 ed             	test   %bpl,%bpl
    6d00:	78 0f                	js     6d11 <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0xe71>
    6d02:	48 89 ca             	mov    %rcx,%rdx
    6d05:	89 ef                	mov    %ebp,%edi
    6d07:	8d 4f 9f             	lea    -0x61(%rdi),%ecx
    6d0a:	83 f9 06             	cmp    $0x6,%ecx
    6d0d:	73 d2                	jae    6ce1 <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0xe41>
    6d0f:	eb dc                	jmp    6ced <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0xe4d>
    6d11:	48 39 c1             	cmp    %rax,%rcx
    6d14:	74 18                	je     6d2e <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0xe8e>
    6d16:	0f b6 7a 01          	movzbl 0x1(%rdx),%edi
    6d1a:	48 83 c2 02          	add    $0x2,%rdx
    6d1e:	83 e7 3f             	and    $0x3f,%edi
    6d21:	89 eb                	mov    %ebp,%ebx
    6d23:	83 e3 1f             	and    $0x1f,%ebx
    6d26:	40 80 fd df          	cmp    $0xdf,%bpl
    6d2a:	76 a8                	jbe    6cd4 <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0xe34>
    6d2c:	eb 10                	jmp    6d3e <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0xe9e>
    6d2e:	31 ff                	xor    %edi,%edi
    6d30:	48 89 c2             	mov    %rax,%rdx
    6d33:	89 eb                	mov    %ebp,%ebx
    6d35:	83 e3 1f             	and    $0x1f,%ebx
    6d38:	40 80 fd df          	cmp    $0xdf,%bpl
    6d3c:	76 96                	jbe    6cd4 <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0xe34>
    6d3e:	48 39 c2             	cmp    %rax,%rdx
    6d41:	74 26                	je     6d69 <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0xec9>
    6d43:	0f b6 0a             	movzbl (%rdx),%ecx
    6d46:	48 83 c2 01          	add    $0x1,%rdx
    6d4a:	83 e1 3f             	and    $0x3f,%ecx
    6d4d:	c1 e7 06             	shl    $0x6,%edi
    6d50:	09 cf                	or     %ecx,%edi
    6d52:	40 80 fd f0          	cmp    $0xf0,%bpl
    6d56:	72 21                	jb     6d79 <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0xed9>
    6d58:	48 39 c2             	cmp    %rax,%rdx
    6d5b:	74 32                	je     6d8f <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0xeef>
    6d5d:	0f b6 0a             	movzbl (%rdx),%ecx
    6d60:	48 83 c2 01          	add    $0x1,%rdx
    6d64:	83 e1 3f             	and    $0x3f,%ecx
    6d67:	eb 2b                	jmp    6d94 <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0xef4>
    6d69:	31 c9                	xor    %ecx,%ecx
    6d6b:	48 89 c2             	mov    %rax,%rdx
    6d6e:	c1 e7 06             	shl    $0x6,%edi
    6d71:	09 cf                	or     %ecx,%edi
    6d73:	40 80 fd f0          	cmp    $0xf0,%bpl
    6d77:	73 df                	jae    6d58 <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0xeb8>
    6d79:	c1 e3 0c             	shl    $0xc,%ebx
    6d7c:	09 df                	or     %ebx,%edi
    6d7e:	8d 4f 9f             	lea    -0x61(%rdi),%ecx
    6d81:	83 f9 06             	cmp    $0x6,%ecx
    6d84:	0f 83 57 ff ff ff    	jae    6ce1 <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0xe41>
    6d8a:	e9 5e ff ff ff       	jmpq   6ced <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0xe4d>
    6d8f:	31 c9                	xor    %ecx,%ecx
    6d91:	48 89 c2             	mov    %rax,%rdx
    6d94:	83 e3 07             	and    $0x7,%ebx
    6d97:	c1 e3 12             	shl    $0x12,%ebx
    6d9a:	c1 e7 06             	shl    $0x6,%edi
    6d9d:	09 df                	or     %ebx,%edi
    6d9f:	09 cf                	or     %ecx,%edi
    6da1:	81 ff 00 00 11 00    	cmp    $0x110000,%edi
    6da7:	74 11                	je     6dba <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0xf1a>
    6da9:	8d 4f 9f             	lea    -0x61(%rdi),%ecx
    6dac:	83 f9 06             	cmp    $0x6,%ecx
    6daf:	0f 83 2c ff ff ff    	jae    6ce1 <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0xe41>
    6db5:	e9 33 ff ff ff       	jmpq   6ced <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0xe4d>
    6dba:	31 ff                	xor    %edi,%edi
    6dbc:	4d 85 c0             	test   %r8,%r8
    6dbf:	75 2e                	jne    6def <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0xf4f>
    6dc1:	e9 71 f2 ff ff       	jmpq   6037 <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x197>
    6dc6:	31 d2                	xor    %edx,%edx
    6dc8:	83 e1 07             	and    $0x7,%ecx
    6dcb:	c1 e1 12             	shl    $0x12,%ecx
    6dce:	c1 e0 06             	shl    $0x6,%eax
    6dd1:	09 c8                	or     %ecx,%eax
    6dd3:	09 d0                	or     %edx,%eax
    6dd5:	83 f8 2e             	cmp    $0x2e,%eax
    6dd8:	0f 84 ed f7 ff ff    	je     65cb <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x72b>
    6dde:	e9 e3 fb ff ff       	jmpq   69c6 <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0xb26>
    6de3:	40 b7 01             	mov    $0x1,%dil
    6de6:	4d 85 c0             	test   %r8,%r8
    6de9:	0f 84 48 f2 ff ff    	je     6037 <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x197>
    6def:	48 8b 5c 24 70       	mov    0x70(%rsp),%rbx
    6df4:	80 3b 2b             	cmpb   $0x2b,(%rbx)
    6df7:	75 11                	jne    6e0a <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0xf6a>
    6df9:	48 83 c6 fe          	add    $0xfffffffffffffffe,%rsi
    6dfd:	0f 84 34 f2 ff ff    	je     6037 <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x197>
    6e03:	49 8d 5d 03          	lea    0x3(%r13),%rbx
    6e07:	49 89 f0             	mov    %rsi,%r8
    6e0a:	31 c9                	xor    %ecx,%ecx
    6e0c:	31 c0                	xor    %eax,%eax
    6e0e:	49 39 c8             	cmp    %rcx,%r8
    6e11:	74 57                	je     6e6a <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0xfca>
    6e13:	0f b6 14 0b          	movzbl (%rbx,%rcx,1),%edx
    6e17:	8d 6a d0             	lea    -0x30(%rdx),%ebp
    6e1a:	83 fd 0a             	cmp    $0xa,%ebp
    6e1d:	72 31                	jb     6e50 <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0xfb0>
    6e1f:	8d 72 9f             	lea    -0x61(%rdx),%esi
    6e22:	83 fe 1a             	cmp    $0x1a,%esi
    6e25:	73 0f                	jae    6e36 <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0xf96>
    6e27:	83 c2 a9             	add    $0xffffffa9,%edx
    6e2a:	89 d5                	mov    %edx,%ebp
    6e2c:	83 fa 0f             	cmp    $0xf,%edx
    6e2f:	76 1f                	jbe    6e50 <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0xfb0>
    6e31:	e9 01 f2 ff ff       	jmpq   6037 <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x197>
    6e36:	8d 72 bf             	lea    -0x41(%rdx),%esi
    6e39:	83 fe 1a             	cmp    $0x1a,%esi
    6e3c:	0f 83 f5 f1 ff ff    	jae    6037 <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x197>
    6e42:	83 c2 c9             	add    $0xffffffc9,%edx
    6e45:	89 d5                	mov    %edx,%ebp
    6e47:	83 fa 0f             	cmp    $0xf,%edx
    6e4a:	0f 87 e7 f1 ff ff    	ja     6037 <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x197>
    6e50:	ba 10 00 00 00       	mov    $0x10,%edx
    6e55:	f7 e2                	mul    %edx
    6e57:	0f 80 da f1 ff ff    	jo     6037 <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x197>
    6e5d:	48 83 c1 01          	add    $0x1,%rcx
    6e61:	01 e8                	add    %ebp,%eax
    6e63:	73 a9                	jae    6e0e <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0xf6e>
    6e65:	e9 cd f1 ff ff       	jmpq   6037 <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x197>
    6e6a:	3d ff ff 10 00       	cmp    $0x10ffff,%eax
    6e6f:	0f 87 c2 f1 ff ff    	ja     6037 <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x197>
    6e75:	89 c1                	mov    %eax,%ecx
    6e77:	81 e1 00 f8 ff ff    	and    $0xfffff800,%ecx
    6e7d:	81 f9 00 d8 00 00    	cmp    $0xd800,%ecx
    6e83:	b9 00 00 11 00       	mov    $0x110000,%ecx
    6e88:	0f 44 c1             	cmove  %ecx,%eax
    6e8b:	3d 00 00 11 00       	cmp    $0x110000,%eax
    6e90:	0f 94 c1             	sete   %cl
    6e93:	40 08 cf             	or     %cl,%dil
    6e96:	0f 85 9b f1 ff ff    	jne    6037 <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x197>
    6e9c:	4c 89 d3             	mov    %r10,%rbx
    6e9f:	89 44 24 30          	mov    %eax,0x30(%rsp)
    6ea3:	89 c1                	mov    %eax,%ecx
    6ea5:	c1 e9 06             	shr    $0x6,%ecx
    6ea8:	f7 c1 f0 7f 00 00    	test   $0x7ff0,%ecx
    6eae:	75 2d                	jne    6edd <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x103d>
    6eb0:	83 e1 0f             	and    $0xf,%ecx
    6eb3:	48 8d 15 06 36 03 00 	lea    0x33606(%rip),%rdx        # 3a4c0 <_ZN4core7unicode12unicode_data2cc19BITSET_INDEX_CHUNKS17h8a1f39cd536e9344E>
    6eba:	0f b6 34 11          	movzbl (%rcx,%rdx,1),%esi
    6ebe:	48 83 fe 03          	cmp    $0x3,%rsi
    6ec2:	0f 83 fc 02 00 00    	jae    71c4 <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x1324>
    6ec8:	48 8d 0d 91 5a 03 00 	lea    0x35a91(%rip),%rcx        # 3c960 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE>
    6ecf:	48 8b 0c f1          	mov    (%rcx,%rsi,8),%rcx
    6ed3:	48 0f a3 c1          	bt     %rax,%rcx
    6ed7:	0f 82 5a f1 ff ff    	jb     6037 <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x197>
    6edd:	48 8d 7c 24 30       	lea    0x30(%rsp),%rdi
    6ee2:	48 8b 74 24 28       	mov    0x28(%rsp),%rsi
    6ee7:	e8 e4 3a 00 00       	callq  a9d0 <_ZN43_$LT$char$u20$as$u20$core..fmt..Display$GT$3fmt17h7792e6955f0fb677E>
    6eec:	49 89 dd             	mov    %rbx,%r13
    6eef:	84 c0                	test   %al,%al
    6ef1:	66 0f 6f 15 87 34 03 	movdqa 0x33487(%rip),%xmm2        # 3a380 <_fini+0x3c>
    6ef8:	00 
    6ef9:	66 0f 6f 1d 8f 34 03 	movdqa 0x3348f(%rip),%xmm3        # 3a390 <_fini+0x4c>
    6f00:	00 
    6f01:	66 0f 6f 25 97 34 03 	movdqa 0x33497(%rip),%xmm4        # 3a3a0 <_fini+0x5c>
    6f08:	00 
    6f09:	0f 84 51 f6 ff ff    	je     6560 <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x6c0>
    6f0f:	e9 f8 01 00 00       	jmpq   710c <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x126c>
    6f14:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    6f1b:	00 00 00 
    6f1e:	66 90                	xchg   %ax,%ax
    6f20:	4f 8d 04 2c          	lea    (%r12,%r13,1),%r8
    6f24:	31 c0                	xor    %eax,%eax
    6f26:	4c 89 e9             	mov    %r13,%rcx
    6f29:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    6f30:	49 39 c8             	cmp    %rcx,%r8
    6f33:	0f 84 fe f0 ff ff    	je     6037 <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x197>
    6f39:	48 89 c3             	mov    %rax,%rbx
    6f3c:	48 8d 51 01          	lea    0x1(%rcx),%rdx
    6f40:	0f b6 39             	movzbl (%rcx),%edi
    6f43:	40 84 ff             	test   %dil,%dil
    6f46:	78 18                	js     6f60 <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x10c0>
    6f48:	89 fe                	mov    %edi,%esi
    6f4a:	83 fe 24             	cmp    $0x24,%esi
    6f4d:	0f 85 c2 00 00 00    	jne    7015 <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x1175>
    6f53:	e9 d2 00 00 00       	jmpq   702a <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x118a>
    6f58:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    6f5f:	00 
    6f60:	4c 39 c2             	cmp    %r8,%rdx
    6f63:	74 4d                	je     6fb2 <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x1112>
    6f65:	48 8d 51 02          	lea    0x2(%rcx),%rdx
    6f69:	0f b6 71 01          	movzbl 0x1(%rcx),%esi
    6f6d:	83 e6 3f             	and    $0x3f,%esi
    6f70:	48 89 d0             	mov    %rdx,%rax
    6f73:	89 fd                	mov    %edi,%ebp
    6f75:	83 e5 1f             	and    $0x1f,%ebp
    6f78:	40 80 ff df          	cmp    $0xdf,%dil
    6f7c:	76 44                	jbe    6fc2 <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x1122>
    6f7e:	4c 39 c0             	cmp    %r8,%rax
    6f81:	74 4b                	je     6fce <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x112e>
    6f83:	44 0f b6 08          	movzbl (%rax),%r9d
    6f87:	48 83 c0 01          	add    $0x1,%rax
    6f8b:	41 83 e1 3f          	and    $0x3f,%r9d
    6f8f:	48 89 c2             	mov    %rax,%rdx
    6f92:	c1 e6 06             	shl    $0x6,%esi
    6f95:	44 09 ce             	or     %r9d,%esi
    6f98:	40 80 ff f0          	cmp    $0xf0,%dil
    6f9c:	72 42                	jb     6fe0 <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x1140>
    6f9e:	4c 39 c0             	cmp    %r8,%rax
    6fa1:	74 49                	je     6fec <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x114c>
    6fa3:	0f b6 38             	movzbl (%rax),%edi
    6fa6:	48 83 c0 01          	add    $0x1,%rax
    6faa:	83 e7 3f             	and    $0x3f,%edi
    6fad:	48 89 c2             	mov    %rax,%rdx
    6fb0:	eb 3c                	jmp    6fee <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x114e>
    6fb2:	31 f6                	xor    %esi,%esi
    6fb4:	4c 89 c0             	mov    %r8,%rax
    6fb7:	89 fd                	mov    %edi,%ebp
    6fb9:	83 e5 1f             	and    $0x1f,%ebp
    6fbc:	40 80 ff df          	cmp    $0xdf,%dil
    6fc0:	77 bc                	ja     6f7e <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x10de>
    6fc2:	c1 e5 06             	shl    $0x6,%ebp
    6fc5:	09 ee                	or     %ebp,%esi
    6fc7:	83 fe 24             	cmp    $0x24,%esi
    6fca:	75 49                	jne    7015 <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x1175>
    6fcc:	eb 5c                	jmp    702a <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x118a>
    6fce:	45 31 c9             	xor    %r9d,%r9d
    6fd1:	4c 89 c0             	mov    %r8,%rax
    6fd4:	c1 e6 06             	shl    $0x6,%esi
    6fd7:	44 09 ce             	or     %r9d,%esi
    6fda:	40 80 ff f0          	cmp    $0xf0,%dil
    6fde:	73 be                	jae    6f9e <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x10fe>
    6fe0:	c1 e5 0c             	shl    $0xc,%ebp
    6fe3:	09 ee                	or     %ebp,%esi
    6fe5:	83 fe 24             	cmp    $0x24,%esi
    6fe8:	75 2b                	jne    7015 <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x1175>
    6fea:	eb 3e                	jmp    702a <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x118a>
    6fec:	31 ff                	xor    %edi,%edi
    6fee:	83 e5 07             	and    $0x7,%ebp
    6ff1:	c1 e5 12             	shl    $0x12,%ebp
    6ff4:	c1 e6 06             	shl    $0x6,%esi
    6ff7:	09 ee                	or     %ebp,%esi
    6ff9:	09 fe                	or     %edi,%esi
    6ffb:	81 fe 00 00 11 00    	cmp    $0x110000,%esi
    7001:	0f 84 30 f0 ff ff    	je     6037 <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x197>
    7007:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    700e:	00 00 
    7010:	83 fe 24             	cmp    $0x24,%esi
    7013:	74 15                	je     702a <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x118a>
    7015:	48 89 d8             	mov    %rbx,%rax
    7018:	48 29 c8             	sub    %rcx,%rax
    701b:	48 01 d0             	add    %rdx,%rax
    701e:	48 89 d1             	mov    %rdx,%rcx
    7021:	83 fe 2e             	cmp    $0x2e,%esi
    7024:	0f 85 06 ff ff ff    	jne    6f30 <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x1090>
    702a:	4c 89 6c 24 30       	mov    %r13,0x30(%rsp)
    702f:	4c 89 64 24 38       	mov    %r12,0x38(%rsp)
    7034:	48 85 db             	test   %rbx,%rbx
    7037:	0f 94 c0             	sete   %al
    703a:	4d 89 e7             	mov    %r12,%r15
    703d:	49 29 df             	sub    %rbx,%r15
    7040:	40 0f 94 c5          	sete   %bpl
    7044:	40 08 c5             	or     %al,%bpl
    7047:	75 15                	jne    705e <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x11be>
    7049:	49 39 dc             	cmp    %rbx,%r12
    704c:	0f 86 42 01 00 00    	jbe    7194 <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x12f4>
    7052:	41 80 7c 1d 00 bf    	cmpb   $0xbf,0x0(%r13,%rbx,1)
    7058:	0f 8e 36 01 00 00    	jle    7194 <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x12f4>
    705e:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    7063:	48 8b 78 20          	mov    0x20(%rax),%rdi
    7067:	48 8b 40 28          	mov    0x28(%rax),%rax
    706b:	4c 89 ee             	mov    %r13,%rsi
    706e:	48 89 da             	mov    %rbx,%rdx
    7071:	ff 50 18             	callq  *0x18(%rax)
    7074:	84 c0                	test   %al,%al
    7076:	0f 85 90 00 00 00    	jne    710c <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x126c>
    707c:	4c 89 6c 24 18       	mov    %r13,0x18(%rsp)
    7081:	4c 89 64 24 20       	mov    %r12,0x20(%rsp)
    7086:	48 89 5c 24 08       	mov    %rbx,0x8(%rsp)
    708b:	4c 89 64 24 10       	mov    %r12,0x10(%rsp)
    7090:	40 84 ed             	test   %bpl,%bpl
    7093:	75 11                	jne    70a6 <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x1206>
    7095:	49 39 dc             	cmp    %rbx,%r12
    7098:	0f 86 86 00 00 00    	jbe    7124 <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x1284>
    709e:	41 80 7c 1d 00 bf    	cmpb   $0xbf,0x0(%r13,%rbx,1)
    70a4:	7e 7e                	jle    7124 <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x1284>
    70a6:	49 01 dd             	add    %rbx,%r13
    70a9:	66 0f 6f 15 cf 32 03 	movdqa 0x332cf(%rip),%xmm2        # 3a380 <_fini+0x3c>
    70b0:	00 
    70b1:	66 0f 6f 1d d7 32 03 	movdqa 0x332d7(%rip),%xmm3        # 3a390 <_fini+0x4c>
    70b8:	00 
    70b9:	66 0f 6f 25 df 32 03 	movdqa 0x332df(%rip),%xmm4        # 3a3a0 <_fini+0x5c>
    70c0:	00 
    70c1:	4d 89 fc             	mov    %r15,%r12
    70c4:	4d 85 ff             	test   %r15,%r15
    70c7:	0f 85 9f f4 ff ff    	jne    656c <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x6cc>
    70cd:	e9 4e fe ff ff       	jmpq   6f20 <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x1080>
    70d2:	48 8b 84 24 88 00 00 	mov    0x88(%rsp),%rax
    70d9:	00 
    70da:	48 8b 70 40          	mov    0x40(%rax),%rsi
    70de:	48 8b 50 48          	mov    0x48(%rax),%rdx
    70e2:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    70e7:	48 8b 78 20          	mov    0x20(%rax),%rdi
    70eb:	48 8b 40 28          	mov    0x28(%rax),%rax
    70ef:	ff 50 18             	callq  *0x18(%rax)
    70f2:	eb 1e                	jmp    7112 <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x1272>
    70f4:	48 8b 74 24 38       	mov    0x38(%rsp),%rsi
    70f9:	48 8b 54 24 40       	mov    0x40(%rsp),%rdx
    70fe:	48 8b 7c 24 28       	mov    0x28(%rsp),%rdi
    7103:	e8 c8 0b 00 00       	callq  7cd0 <_ZN4core3fmt9Formatter3pad17h7ef001ba65c2db9cE>
    7108:	84 c0                	test   %al,%al
    710a:	74 04                	je     7110 <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x1270>
    710c:	b0 01                	mov    $0x1,%al
    710e:	eb 02                	jmp    7112 <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x1272>
    7110:	31 c0                	xor    %eax,%eax
    7112:	48 81 c4 98 00 00 00 	add    $0x98,%rsp
    7119:	5b                   	pop    %rbx
    711a:	41 5c                	pop    %r12
    711c:	41 5d                	pop    %r13
    711e:	41 5e                	pop    %r14
    7120:	41 5f                	pop    %r15
    7122:	5d                   	pop    %rbp
    7123:	c3                   	retq   
    7124:	48 8d 44 24 18       	lea    0x18(%rsp),%rax
    7129:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
    712e:	48 8d 44 24 08       	lea    0x8(%rsp),%rax
    7133:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
    7138:	48 8d 44 24 10       	lea    0x10(%rsp),%rax
    713d:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
    7142:	48 8d 7c 24 30       	lea    0x30(%rsp),%rdi
    7147:	e8 94 6b 01 00       	callq  1dce0 <_ZN4core3str6traits101_$LT$impl$u20$core..slice..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..Range$LT$usize$GT$$GT$5index28_$u7b$$u7b$closure$u7d$$u7d$17hd529a7a73bc70800E>
    714c:	0f 0b                	ud2    
    714e:	48 8d 3d cc 61 03 00 	lea    0x361cc(%rip),%rdi        # 3d321 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x9c1>
    7155:	48 8d 15 84 fb 23 00 	lea    0x23fb84(%rip),%rdx        # 246ce0 <__init_array_end+0xcd0>
    715c:	be 2b 00 00 00       	mov    $0x2b,%esi
    7161:	e8 4a 02 00 00       	callq  73b0 <_ZN4core9panicking5panic17h6861470adfbddef8E>
    7166:	0f 0b                	ud2    
    7168:	b2 01                	mov    $0x1,%dl
    716a:	88 54 24 30          	mov    %dl,0x30(%rsp)
    716e:	48 8d 3d 4c 67 03 00 	lea    0x3674c(%rip),%rdi        # 3d8c1 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0xf61>
    7175:	48 8d 0d 7c fb 23 00 	lea    0x23fb7c(%rip),%rcx        # 246cf8 <__init_array_end+0xce8>
    717c:	4c 8d 05 95 fb 23 00 	lea    0x23fb95(%rip),%r8        # 246d18 <__init_array_end+0xd08>
    7183:	48 8d 54 24 30       	lea    0x30(%rsp),%rdx
    7188:	be 2b 00 00 00       	mov    $0x2b,%esi
    718d:	e8 ce 2a 00 00       	callq  9c60 <_ZN4core6option18expect_none_failed17he0fec195c6e4c2ecE>
    7192:	0f 0b                	ud2    
    7194:	48 8d 7c 24 30       	lea    0x30(%rsp),%rdi
    7199:	48 89 de             	mov    %rbx,%rsi
    719c:	e8 1f 6b 01 00       	callq  1dcc0 <_ZN4core3str6traits103_$LT$impl$u20$core..slice..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..RangeTo$LT$usize$GT$$GT$5index28_$u7b$$u7b$closure$u7d$$u7d$17ha84ce7feeb82c1fdE>
    71a1:	0f 0b                	ud2    
    71a3:	48 89 ef             	mov    %rbp,%rdi
    71a6:	48 89 de             	mov    %rbx,%rsi
    71a9:	e8 a2 0a 00 00       	callq  7c50 <_ZN4core5slice22slice_index_order_fail17h7bcf2f94ba9e06deE>
    71ae:	0f 0b                	ud2    
    71b0:	4c 89 e6             	mov    %r12,%rsi
    71b3:	e8 98 0a 00 00       	callq  7c50 <_ZN4core5slice22slice_index_order_fail17h7bcf2f94ba9e06deE>
    71b8:	0f 0b                	ud2    
    71ba:	48 89 c6             	mov    %rax,%rsi
    71bd:	e8 8e 0a 00 00       	callq  7c50 <_ZN4core5slice22slice_index_order_fail17h7bcf2f94ba9e06deE>
    71c2:	0f 0b                	ud2    
    71c4:	48 8d 3d dd f1 23 00 	lea    0x23f1dd(%rip),%rdi        # 2463a8 <__init_array_end+0x398>
    71cb:	ba 03 00 00 00       	mov    $0x3,%edx
    71d0:	e8 2b 02 00 00       	callq  7400 <_ZN4core9panicking18panic_bounds_check17h83121a2515f55ceeE>
    71d5:	0f 0b                	ud2    
    71d7:	48 8d 7c 24 30       	lea    0x30(%rsp),%rdi
    71dc:	4c 89 fe             	mov    %r15,%rsi
    71df:	e8 dc 6a 01 00       	callq  1dcc0 <_ZN4core3str6traits103_$LT$impl$u20$core..slice..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..RangeTo$LT$usize$GT$$GT$5index28_$u7b$$u7b$closure$u7d$$u7d$17ha84ce7feeb82c1fdE>
    71e4:	0f 0b                	ud2    
    71e6:	31 d2                	xor    %edx,%edx
    71e8:	eb 80                	jmp    716a <_ZN71_$LT$backtrace..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h17077a10756a9dedE+0x12ca>
    71ea:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000000071f0 <_ZN9backtrace9backtrace9libunwind5trace8trace_fn17hd9e9e3922687a990E>:
    71f0:	48 83 ec 18          	sub    $0x18,%rsp
    71f4:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
    71fb:	00 
    71fc:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
    7201:	48 8b 3e             	mov    (%rsi),%rdi
    7204:	48 8b 46 08          	mov    0x8(%rsi),%rax
    7208:	48 89 e6             	mov    %rsp,%rsi
    720b:	ff 50 18             	callq  *0x18(%rax)
    720e:	34 01                	xor    $0x1,%al
    7210:	0f b6 c0             	movzbl %al,%eax
    7213:	8d 04 c0             	lea    (%rax,%rax,8),%eax
    7216:	48 83 c4 18          	add    $0x18,%rsp
    721a:	c3                   	retq   
    721b:	e8 10 00 00 00       	callq  7230 <_ZN4core3ptr13drop_in_place17h53b75667231ab1f7E>
    7220:	0f 0b                	ud2    
    7222:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    7229:	00 00 00 
    722c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000007230 <_ZN4core3ptr13drop_in_place17h53b75667231ab1f7E>:
    7230:	50                   	push   %rax
    7231:	48 8d 3d 99 3d 03 00 	lea    0x33d99(%rip),%rdi        # 3afd1 <_ZN4core7unicode12unicode_data2cc19BITSET_INDEX_CHUNKS17h8a1f39cd536e9344E+0xb11>
    7238:	48 8d 15 e9 ee 23 00 	lea    0x23eee9(%rip),%rdx        # 246128 <__init_array_end+0x118>
    723f:	be 2a 00 00 00       	mov    $0x2a,%esi
    7244:	e8 67 01 00 00       	callq  73b0 <_ZN4core9panicking5panic17h6861470adfbddef8E>
    7249:	0f 0b                	ud2    
    724b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000007250 <_ZN9backtrace9symbolize12libbacktrace8error_cb17h86374d9caead850cE>:
    7250:	c3                   	retq   
    7251:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    7258:	00 00 00 
    725b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000007260 <_ZN9backtrace9symbolize12libbacktrace10syminfo_cb17hfad1c2595b5b9bc6E>:
    7260:	41 57                	push   %r15
    7262:	41 56                	push   %r14
    7264:	53                   	push   %rbx
    7265:	48 83 ec 50          	sub    $0x50,%rsp
    7269:	49 89 d7             	mov    %rdx,%r15
    726c:	49 89 f6             	mov    %rsi,%r14
    726f:	48 89 fb             	mov    %rdi,%rbx
    7272:	0f 10 07             	movups (%rdi),%xmm0
    7275:	0f 29 04 24          	movaps %xmm0,(%rsp)
    7279:	48 89 54 24 10       	mov    %rdx,0x10(%rsp)
    727e:	c6 44 24 18 00       	movb   $0x0,0x18(%rsp)
    7283:	48 8b 3d ce 0d 24 00 	mov    0x240dce(%rip),%rdi        # 248058 <_ZN9backtrace9symbolize12libbacktrace10init_state5STATE17hda2ae0499012601eE>
    728a:	48 85 ff             	test   %rdi,%rdi
    728d:	75 1d                	jne    72ac <_ZN9backtrace9symbolize12libbacktrace10syminfo_cb17hfad1c2595b5b9bc6E+0x4c>
    728f:	48 8d 15 ba ff ff ff 	lea    -0x46(%rip),%rdx        # 7250 <_ZN9backtrace9symbolize12libbacktrace8error_cb17h86374d9caead850cE>
    7296:	31 ff                	xor    %edi,%edi
    7298:	31 f6                	xor    %esi,%esi
    729a:	31 c9                	xor    %ecx,%ecx
    729c:	ff 15 26 0b 24 00    	callq  *0x240b26(%rip)        # 247dc8 <_GLOBAL_OFFSET_TABLE_+0xd8>
    72a2:	48 89 c7             	mov    %rax,%rdi
    72a5:	48 89 05 ac 0d 24 00 	mov    %rax,0x240dac(%rip)        # 248058 <_ZN9backtrace9symbolize12libbacktrace10init_state5STATE17hda2ae0499012601eE>
    72ac:	48 8b 73 10          	mov    0x10(%rbx),%rsi
    72b0:	48 8d 15 59 00 00 00 	lea    0x59(%rip),%rdx        # 7310 <_ZN9backtrace9symbolize12libbacktrace9pcinfo_cb17h50d83df67359738aE>
    72b7:	48 8d 0d 92 ff ff ff 	lea    -0x6e(%rip),%rcx        # 7250 <_ZN9backtrace9symbolize12libbacktrace8error_cb17h86374d9caead850cE>
    72be:	49 89 e0             	mov    %rsp,%r8
    72c1:	ff 15 11 0b 24 00    	callq  *0x240b11(%rip)        # 247dd8 <_GLOBAL_OFFSET_TABLE_+0xe8>
    72c7:	80 7c 24 18 00       	cmpb   $0x0,0x18(%rsp)
    72cc:	75 23                	jne    72f1 <_ZN9backtrace9symbolize12libbacktrace10syminfo_cb17hfad1c2595b5b9bc6E+0x91>
    72ce:	48 8b 3c 24          	mov    (%rsp),%rdi
    72d2:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    72d7:	c7 44 24 28 00 00 00 	movl   $0x0,0x28(%rsp)
    72de:	00 
    72df:	4c 89 74 24 30       	mov    %r14,0x30(%rsp)
    72e4:	4c 89 7c 24 38       	mov    %r15,0x38(%rsp)
    72e9:	48 8d 74 24 28       	lea    0x28(%rsp),%rsi
    72ee:	ff 50 18             	callq  *0x18(%rax)
    72f1:	48 83 c4 50          	add    $0x50,%rsp
    72f5:	5b                   	pop    %rbx
    72f6:	41 5e                	pop    %r14
    72f8:	41 5f                	pop    %r15
    72fa:	c3                   	retq   
    72fb:	e8 30 ff ff ff       	callq  7230 <_ZN4core3ptr13drop_in_place17h53b75667231ab1f7E>
    7300:	0f 0b                	ud2    
    7302:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    7309:	00 00 00 
    730c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000007310 <_ZN9backtrace9symbolize12libbacktrace9pcinfo_cb17h50d83df67359738aE>:
    7310:	48 83 ec 28          	sub    $0x28,%rsp
    7314:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    7319:	48 85 d2             	test   %rdx,%rdx
    731c:	74 3f                	je     735d <_ZN9backtrace9symbolize12libbacktrace9pcinfo_cb17h50d83df67359738aE+0x4d>
    731e:	4d 85 c0             	test   %r8,%r8
    7321:	74 3a                	je     735d <_ZN9backtrace9symbolize12libbacktrace9pcinfo_cb17h50d83df67359738aE+0x4d>
    7323:	c6 47 18 01          	movb   $0x1,0x18(%rdi)
    7327:	48 8b 07             	mov    (%rdi),%rax
    732a:	4c 8b 4f 08          	mov    0x8(%rdi),%r9
    732e:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
    7332:	c7 04 24 01 00 00 00 	movl   $0x1,(%rsp)
    7339:	89 4c 24 04          	mov    %ecx,0x4(%rsp)
    733d:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
    7342:	48 89 54 24 10       	mov    %rdx,0x10(%rsp)
    7347:	4c 89 44 24 18       	mov    %r8,0x18(%rsp)
    734c:	48 89 7c 24 20       	mov    %rdi,0x20(%rsp)
    7351:	48 89 e6             	mov    %rsp,%rsi
    7354:	48 89 c7             	mov    %rax,%rdi
    7357:	41 ff 51 18          	callq  *0x18(%r9)
    735b:	31 c0                	xor    %eax,%eax
    735d:	48 83 c4 28          	add    $0x28,%rsp
    7361:	c3                   	retq   
    7362:	e8 c9 fe ff ff       	callq  7230 <_ZN4core3ptr13drop_in_place17h53b75667231ab1f7E>
    7367:	0f 0b                	ud2    
    7369:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000007370 <_ZN9backtrace9symbolize12libbacktrace7resolve28_$u7b$$u7b$closure$u7d$$u7d$17h3de75ca001dcb813E>:
    7370:	48 8b 07             	mov    (%rdi),%rax
    7373:	c6 00 01             	movb   $0x1,(%rax)
    7376:	48 8b 47 08          	mov    0x8(%rdi),%rax
    737a:	48 8b 38             	mov    (%rax),%rdi
    737d:	48 8b 40 08          	mov    0x8(%rax),%rax
    7381:	48 8b 40 18          	mov    0x18(%rax),%rax
    7385:	ff e0                	jmpq   *%rax
    7387:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    738e:	00 00 

0000000000007390 <_ZN4core3ops8function6FnOnce40call_once$u7b$$u7b$vtable.shim$u7d$$u7d$17h7de23211b782e1b5E>:
    7390:	48 8b 07             	mov    (%rdi),%rax
    7393:	48 8b 4f 08          	mov    0x8(%rdi),%rcx
    7397:	c6 00 01             	movb   $0x1,(%rax)
    739a:	48 8b 39             	mov    (%rcx),%rdi
    739d:	48 8b 41 08          	mov    0x8(%rcx),%rax
    73a1:	48 8b 40 18          	mov    0x18(%rax),%rax
    73a5:	ff e0                	jmpq   *%rax
    73a7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    73ae:	00 00 

00000000000073b0 <_ZN4core9panicking5panic17h6861470adfbddef8E>:
    73b0:	48 83 ec 48          	sub    $0x48,%rsp
    73b4:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
    73b9:	48 89 74 24 10       	mov    %rsi,0x10(%rsp)
    73be:	48 8d 44 24 08       	lea    0x8(%rsp),%rax
    73c3:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    73c8:	48 c7 44 24 20 01 00 	movq   $0x1,0x20(%rsp)
    73cf:	00 00 
    73d1:	48 c7 44 24 28 00 00 	movq   $0x0,0x28(%rsp)
    73d8:	00 00 
    73da:	48 8d 05 57 60 03 00 	lea    0x36057(%rip),%rax        # 3d438 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0xad8>
    73e1:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
    73e6:	48 c7 44 24 40 00 00 	movq   $0x0,0x40(%rsp)
    73ed:	00 00 
    73ef:	48 8d 7c 24 18       	lea    0x18(%rsp),%rdi
    73f4:	48 89 d6             	mov    %rdx,%rsi
    73f7:	e8 b4 01 00 00       	callq  75b0 <_ZN4core9panicking9panic_fmt17he168e49e4b05d288E>
    73fc:	0f 0b                	ud2    
    73fe:	66 90                	xchg   %ax,%ax

0000000000007400 <_ZN4core9panicking18panic_bounds_check17h83121a2515f55ceeE>:
    7400:	48 83 ec 68          	sub    $0x68,%rsp
    7404:	48 89 f8             	mov    %rdi,%rax
    7407:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
    740c:	48 89 54 24 10       	mov    %rdx,0x10(%rsp)
    7411:	48 8d 4c 24 10       	lea    0x10(%rsp),%rcx
    7416:	48 89 4c 24 18       	mov    %rcx,0x18(%rsp)
    741b:	48 8d 0d 5e 00 00 00 	lea    0x5e(%rip),%rcx        # 7480 <_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$u64$GT$3fmt17h29103e8b1c853837E>
    7422:	48 89 4c 24 20       	mov    %rcx,0x20(%rsp)
    7427:	48 8d 54 24 08       	lea    0x8(%rsp),%rdx
    742c:	48 89 54 24 28       	mov    %rdx,0x28(%rsp)
    7431:	48 89 4c 24 30       	mov    %rcx,0x30(%rsp)
    7436:	48 8d 0d 2b ed 23 00 	lea    0x23ed2b(%rip),%rcx        # 246168 <__init_array_end+0x158>
    743d:	48 89 4c 24 38       	mov    %rcx,0x38(%rsp)
    7442:	48 c7 44 24 40 02 00 	movq   $0x2,0x40(%rsp)
    7449:	00 00 
    744b:	48 c7 44 24 48 00 00 	movq   $0x0,0x48(%rsp)
    7452:	00 00 
    7454:	48 8d 4c 24 18       	lea    0x18(%rsp),%rcx
    7459:	48 89 4c 24 58       	mov    %rcx,0x58(%rsp)
    745e:	48 c7 44 24 60 02 00 	movq   $0x2,0x60(%rsp)
    7465:	00 00 
    7467:	48 8d 7c 24 38       	lea    0x38(%rsp),%rdi
    746c:	48 89 c6             	mov    %rax,%rsi
    746f:	e8 3c 01 00 00       	callq  75b0 <_ZN4core9panicking9panic_fmt17he168e49e4b05d288E>
    7474:	0f 0b                	ud2    
    7476:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    747d:	00 00 00 

0000000000007480 <_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$u64$GT$3fmt17h29103e8b1c853837E>:
    7480:	48 83 ec 28          	sub    $0x28,%rsp
    7484:	49 89 f2             	mov    %rsi,%r10
    7487:	48 8b 37             	mov    (%rdi),%rsi
    748a:	41 bb 27 00 00 00    	mov    $0x27,%r11d
    7490:	48 81 fe 10 27 00 00 	cmp    $0x2710,%rsi
    7497:	0f 82 bc 00 00 00    	jb     7559 <_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$u64$GT$3fmt17h29103e8b1c853837E+0xd9>
    749d:	41 bb 27 00 00 00    	mov    $0x27,%r11d
    74a3:	49 b8 4b 59 86 38 d6 	movabs $0x346dc5d63886594b,%r8
    74aa:	c5 6d 34 
    74ad:	4c 8d 0d b6 41 03 00 	lea    0x341b6(%rip),%r9        # 3b66a <_ZN4core3str15UTF8_CHAR_WIDTH17h639c7c3d8ce7e983E+0x112>
    74b4:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    74bb:	00 00 00 
    74be:	66 90                	xchg   %ax,%ax
    74c0:	48 89 f0             	mov    %rsi,%rax
    74c3:	49 f7 e0             	mul    %r8
    74c6:	48 c1 ea 0b          	shr    $0xb,%rdx
    74ca:	69 c2 10 27 00 00    	imul   $0x2710,%edx,%eax
    74d0:	89 f1                	mov    %esi,%ecx
    74d2:	29 c1                	sub    %eax,%ecx
    74d4:	0f b7 c1             	movzwl %cx,%eax
    74d7:	c1 e8 02             	shr    $0x2,%eax
    74da:	69 c0 7b 14 00 00    	imul   $0x147b,%eax,%eax
    74e0:	c1 e8 11             	shr    $0x11,%eax
    74e3:	6b f8 64             	imul   $0x64,%eax,%edi
    74e6:	29 f9                	sub    %edi,%ecx
    74e8:	0f b7 c9             	movzwl %cx,%ecx
    74eb:	41 0f b7 04 41       	movzwl (%r9,%rax,2),%eax
    74f0:	66 42 89 44 1c fd    	mov    %ax,-0x3(%rsp,%r11,1)
    74f6:	41 0f b7 04 49       	movzwl (%r9,%rcx,2),%eax
    74fb:	66 42 89 44 1c ff    	mov    %ax,-0x1(%rsp,%r11,1)
    7501:	49 83 c3 fc          	add    $0xfffffffffffffffc,%r11
    7505:	48 81 fe ff e0 f5 05 	cmp    $0x5f5e0ff,%rsi
    750c:	48 89 d6             	mov    %rdx,%rsi
    750f:	77 af                	ja     74c0 <_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$u64$GT$3fmt17h29103e8b1c853837E+0x40>
    7511:	48 83 fa 63          	cmp    $0x63,%rdx
    7515:	7e 2f                	jle    7546 <_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$u64$GT$3fmt17h29103e8b1c853837E+0xc6>
    7517:	0f b7 c2             	movzwl %dx,%eax
    751a:	c1 e8 02             	shr    $0x2,%eax
    751d:	69 c0 7b 14 00 00    	imul   $0x147b,%eax,%eax
    7523:	c1 e8 11             	shr    $0x11,%eax
    7526:	6b c8 64             	imul   $0x64,%eax,%ecx
    7529:	29 ca                	sub    %ecx,%edx
    752b:	0f b7 ca             	movzwl %dx,%ecx
    752e:	48 8d 15 35 41 03 00 	lea    0x34135(%rip),%rdx        # 3b66a <_ZN4core3str15UTF8_CHAR_WIDTH17h639c7c3d8ce7e983E+0x112>
    7535:	0f b7 0c 4a          	movzwl (%rdx,%rcx,2),%ecx
    7539:	66 42 89 4c 1c ff    	mov    %cx,-0x1(%rsp,%r11,1)
    753f:	49 83 c3 fe          	add    $0xfffffffffffffffe,%r11
    7543:	48 89 c2             	mov    %rax,%rdx
    7546:	48 83 fa 0a          	cmp    $0xa,%rdx
    754a:	7d 18                	jge    7564 <_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$u64$GT$3fmt17h29103e8b1c853837E+0xe4>
    754c:	80 c2 30             	add    $0x30,%dl
    754f:	42 88 14 1c          	mov    %dl,(%rsp,%r11,1)
    7553:	49 83 c3 ff          	add    $0xffffffffffffffff,%r11
    7557:	eb 20                	jmp    7579 <_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$u64$GT$3fmt17h29103e8b1c853837E+0xf9>
    7559:	48 89 f2             	mov    %rsi,%rdx
    755c:	48 83 fa 63          	cmp    $0x63,%rdx
    7560:	7f b5                	jg     7517 <_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$u64$GT$3fmt17h29103e8b1c853837E+0x97>
    7562:	eb e2                	jmp    7546 <_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$u64$GT$3fmt17h29103e8b1c853837E+0xc6>
    7564:	48 8d 05 ff 40 03 00 	lea    0x340ff(%rip),%rax        # 3b66a <_ZN4core3str15UTF8_CHAR_WIDTH17h639c7c3d8ce7e983E+0x112>
    756b:	0f b7 04 50          	movzwl (%rax,%rdx,2),%eax
    756f:	66 42 89 44 1c ff    	mov    %ax,-0x1(%rsp,%r11,1)
    7575:	49 83 c3 fe          	add    $0xfffffffffffffffe,%r11
    7579:	4e 8d 04 1c          	lea    (%rsp,%r11,1),%r8
    757d:	49 83 c0 01          	add    $0x1,%r8
    7581:	41 b9 27 00 00 00    	mov    $0x27,%r9d
    7587:	4d 29 d9             	sub    %r11,%r9
    758a:	48 8d 15 a7 5e 03 00 	lea    0x35ea7(%rip),%rdx        # 3d438 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0xad8>
    7591:	4c 89 d7             	mov    %r10,%rdi
    7594:	be 01 00 00 00       	mov    $0x1,%esi
    7599:	31 c9                	xor    %ecx,%ecx
    759b:	e8 50 00 00 00       	callq  75f0 <_ZN4core3fmt9Formatter12pad_integral17hc55c32e78eb96054E>
    75a0:	48 83 c4 28          	add    $0x28,%rsp
    75a4:	c3                   	retq   
    75a5:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    75ac:	00 00 00 
    75af:	90                   	nop

00000000000075b0 <_ZN4core9panicking9panic_fmt17he168e49e4b05d288E>:
    75b0:	48 83 ec 28          	sub    $0x28,%rsp
    75b4:	48 8d 05 7d 5e 03 00 	lea    0x35e7d(%rip),%rax        # 3d438 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0xad8>
    75bb:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    75c0:	48 8d 05 c1 eb 23 00 	lea    0x23ebc1(%rip),%rax        # 246188 <__init_array_end+0x178>
    75c7:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    75cc:	48 89 7c 24 18       	mov    %rdi,0x18(%rsp)
    75d1:	48 89 74 24 20       	mov    %rsi,0x20(%rsp)
    75d6:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
    75db:	e8 40 c4 01 00       	callq  23a20 <rust_begin_unwind>
    75e0:	0f 0b                	ud2    
    75e2:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    75e9:	00 00 00 
    75ec:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000075f0 <_ZN4core3fmt9Formatter12pad_integral17hc55c32e78eb96054E>:
    75f0:	55                   	push   %rbp
    75f1:	41 57                	push   %r15
    75f3:	41 56                	push   %r14
    75f5:	41 55                	push   %r13
    75f7:	41 54                	push   %r12
    75f9:	53                   	push   %rbx
    75fa:	48 83 ec 18          	sub    $0x18,%rsp
    75fe:	4d 89 cf             	mov    %r9,%r15
    7601:	4c 89 c5             	mov    %r8,%rbp
    7604:	49 89 cc             	mov    %rcx,%r12
    7607:	49 89 d5             	mov    %rdx,%r13
    760a:	48 89 fb             	mov    %rdi,%rbx
    760d:	40 84 f6             	test   %sil,%sil
    7610:	74 52                	je     7664 <_ZN4core3fmt9Formatter12pad_integral17hc55c32e78eb96054E+0x74>
    7612:	44 8b 43 30          	mov    0x30(%rbx),%r8d
    7616:	45 89 c1             	mov    %r8d,%r9d
    7619:	41 83 e1 01          	and    $0x1,%r9d
    761d:	45 85 c9             	test   %r9d,%r9d
    7620:	ba 00 00 11 00       	mov    $0x110000,%edx
    7625:	41 be 2b 00 00 00    	mov    $0x2b,%r14d
    762b:	44 0f 44 f2          	cmove  %edx,%r14d
    762f:	4d 01 f9             	add    %r15,%r9
    7632:	41 f6 c0 04          	test   $0x4,%r8b
    7636:	74 40                	je     7678 <_ZN4core3fmt9Formatter12pad_integral17hc55c32e78eb96054E+0x88>
    7638:	49 89 ea             	mov    %rbp,%r10
    763b:	4d 85 e4             	test   %r12,%r12
    763e:	74 78                	je     76b8 <_ZN4core3fmt9Formatter12pad_integral17hc55c32e78eb96054E+0xc8>
    7640:	49 8d 54 24 ff       	lea    -0x1(%r12),%rdx
    7645:	44 89 e5             	mov    %r12d,%ebp
    7648:	83 e5 03             	and    $0x3,%ebp
    764b:	48 83 fa 03          	cmp    $0x3,%rdx
    764f:	73 6e                	jae    76bf <_ZN4core3fmt9Formatter12pad_integral17hc55c32e78eb96054E+0xcf>
    7651:	31 f6                	xor    %esi,%esi
    7653:	4c 89 ef             	mov    %r13,%rdi
    7656:	48 85 ed             	test   %rbp,%rbp
    7659:	0f 85 1b 01 00 00    	jne    777a <_ZN4core3fmt9Formatter12pad_integral17hc55c32e78eb96054E+0x18a>
    765f:	e9 37 01 00 00       	jmpq   779b <_ZN4core3fmt9Formatter12pad_integral17hc55c32e78eb96054E+0x1ab>
    7664:	4d 8d 4f 01          	lea    0x1(%r15),%r9
    7668:	44 8b 43 30          	mov    0x30(%rbx),%r8d
    766c:	41 be 2d 00 00 00    	mov    $0x2d,%r14d
    7672:	41 f6 c0 04          	test   $0x4,%r8b
    7676:	75 c0                	jne    7638 <_ZN4core3fmt9Formatter12pad_integral17hc55c32e78eb96054E+0x48>
    7678:	45 31 ed             	xor    %r13d,%r13d
    767b:	48 83 3b 01          	cmpq   $0x1,(%rbx)
    767f:	0f 84 29 01 00 00    	je     77ae <_ZN4core3fmt9Formatter12pad_integral17hc55c32e78eb96054E+0x1be>
    7685:	48 89 df             	mov    %rbx,%rdi
    7688:	44 89 f6             	mov    %r14d,%esi
    768b:	4c 89 ea             	mov    %r13,%rdx
    768e:	4c 89 e1             	mov    %r12,%rcx
    7691:	e8 5a 03 00 00       	callq  79f0 <_ZN4core3fmt9Formatter12pad_integral12write_prefix17h9f1b96f1c06957eeE>
    7696:	41 b4 01             	mov    $0x1,%r12b
    7699:	84 c0                	test   %al,%al
    769b:	0f 85 35 03 00 00    	jne    79d6 <_ZN4core3fmt9Formatter12pad_integral17hc55c32e78eb96054E+0x3e6>
    76a1:	48 8b 7b 20          	mov    0x20(%rbx),%rdi
    76a5:	48 8b 43 28          	mov    0x28(%rbx),%rax
    76a9:	48 8b 40 18          	mov    0x18(%rax),%rax
    76ad:	48 89 ee             	mov    %rbp,%rsi
    76b0:	4c 89 fa             	mov    %r15,%rdx
    76b3:	e9 75 01 00 00       	jmpq   782d <_ZN4core3fmt9Formatter12pad_integral17hc55c32e78eb96054E+0x23d>
    76b8:	31 f6                	xor    %esi,%esi
    76ba:	e9 dc 00 00 00       	jmpq   779b <_ZN4core3fmt9Formatter12pad_integral17hc55c32e78eb96054E+0x1ab>
    76bf:	48 89 ea             	mov    %rbp,%rdx
    76c2:	4c 29 e2             	sub    %r12,%rdx
    76c5:	31 f6                	xor    %esi,%esi
    76c7:	66 0f 6f 05 e1 2c 03 	movdqa 0x32ce1(%rip),%xmm0        # 3a3b0 <_fini+0x6c>
    76ce:	00 
    76cf:	66 0f 6f 0d e9 2c 03 	movdqa 0x32ce9(%rip),%xmm1        # 3a3c0 <_fini+0x7c>
    76d6:	00 
    76d7:	66 0f 6f 15 f1 2c 03 	movdqa 0x32cf1(%rip),%xmm2        # 3a3d0 <_fini+0x8c>
    76de:	00 
    76df:	4c 89 ef             	mov    %r13,%rdi
    76e2:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    76e9:	00 00 00 
    76ec:	0f 1f 40 00          	nopl   0x0(%rax)
    76f0:	0f b6 4f 03          	movzbl 0x3(%rdi),%ecx
    76f4:	66 0f 6e d9          	movd   %ecx,%xmm3
    76f8:	0f b6 4f 02          	movzbl 0x2(%rdi),%ecx
    76fc:	66 0f 6e e1          	movd   %ecx,%xmm4
    7700:	66 0f 62 e3          	punpckldq %xmm3,%xmm4
    7704:	0f b6 4f 01          	movzbl 0x1(%rdi),%ecx
    7708:	66 0f 6e d9          	movd   %ecx,%xmm3
    770c:	0f b6 0f             	movzbl (%rdi),%ecx
    770f:	66 0f 6e e9          	movd   %ecx,%xmm5
    7713:	66 0f 62 eb          	punpckldq %xmm3,%xmm5
    7717:	66 0f 6c ec          	punpcklqdq %xmm4,%xmm5
    771b:	66 0f db e8          	pand   %xmm0,%xmm5
    771f:	66 0f 76 e9          	pcmpeqd %xmm1,%xmm5
    7723:	66 0f 70 dd d4       	pshufd $0xd4,%xmm5,%xmm3
    7728:	66 0f 73 f3 38       	psllq  $0x38,%xmm3
    772d:	66 0f 6f e3          	movdqa %xmm3,%xmm4
    7731:	66 0f 72 e4 1f       	psrad  $0x1f,%xmm4
    7736:	66 0f 70 e4 ed       	pshufd $0xed,%xmm4,%xmm4
    773b:	66 0f 72 e3 18       	psrad  $0x18,%xmm3
    7740:	66 0f 70 db ed       	pshufd $0xed,%xmm3,%xmm3
    7745:	66 0f 62 dc          	punpckldq %xmm4,%xmm3
    7749:	66 0f 70 e5 f6       	pshufd $0xf6,%xmm5,%xmm4
    774e:	66 0f db e2          	pand   %xmm2,%xmm4
    7752:	66 0f fb e3          	psubq  %xmm3,%xmm4
    7756:	48 83 c7 04          	add    $0x4,%rdi
    775a:	66 0f 70 dc 4e       	pshufd $0x4e,%xmm4,%xmm3
    775f:	66 0f d4 dc          	paddq  %xmm4,%xmm3
    7763:	66 48 0f 7e d9       	movq   %xmm3,%rcx
    7768:	48 01 ce             	add    %rcx,%rsi
    776b:	48 83 c2 04          	add    $0x4,%rdx
    776f:	0f 85 7b ff ff ff    	jne    76f0 <_ZN4core3fmt9Formatter12pad_integral17hc55c32e78eb96054E+0x100>
    7775:	48 85 ed             	test   %rbp,%rbp
    7778:	74 21                	je     779b <_ZN4core3fmt9Formatter12pad_integral17hc55c32e78eb96054E+0x1ab>
    777a:	31 d2                	xor    %edx,%edx
    777c:	0f 1f 40 00          	nopl   0x0(%rax)
    7780:	0f b6 0c 17          	movzbl (%rdi,%rdx,1),%ecx
    7784:	80 e1 c0             	and    $0xc0,%cl
    7787:	31 c0                	xor    %eax,%eax
    7789:	80 f9 80             	cmp    $0x80,%cl
    778c:	0f 94 c0             	sete   %al
    778f:	48 01 c6             	add    %rax,%rsi
    7792:	48 83 c2 01          	add    $0x1,%rdx
    7796:	48 39 d5             	cmp    %rdx,%rbp
    7799:	75 e5                	jne    7780 <_ZN4core3fmt9Formatter12pad_integral17hc55c32e78eb96054E+0x190>
    779b:	4d 01 e1             	add    %r12,%r9
    779e:	49 29 f1             	sub    %rsi,%r9
    77a1:	4c 89 d5             	mov    %r10,%rbp
    77a4:	48 83 3b 01          	cmpq   $0x1,(%rbx)
    77a8:	0f 85 d7 fe ff ff    	jne    7685 <_ZN4core3fmt9Formatter12pad_integral17hc55c32e78eb96054E+0x95>
    77ae:	4c 89 7c 24 10       	mov    %r15,0x10(%rsp)
    77b3:	48 8b 53 08          	mov    0x8(%rbx),%rdx
    77b7:	49 89 d7             	mov    %rdx,%r15
    77ba:	4d 29 cf             	sub    %r9,%r15
    77bd:	76 3e                	jbe    77fd <_ZN4core3fmt9Formatter12pad_integral17hc55c32e78eb96054E+0x20d>
    77bf:	41 f6 c0 08          	test   $0x8,%r8b
    77c3:	75 78                	jne    783d <_ZN4core3fmt9Formatter12pad_integral17hc55c32e78eb96054E+0x24d>
    77c5:	48 89 6c 24 08       	mov    %rbp,0x8(%rsp)
    77ca:	4c 29 ca             	sub    %r9,%rdx
    77cd:	8b 43 38             	mov    0x38(%rbx),%eax
    77d0:	3c 03                	cmp    $0x3,%al
    77d2:	b9 01 00 00 00       	mov    $0x1,%ecx
    77d7:	0f 45 c8             	cmovne %eax,%ecx
    77da:	31 ed                	xor    %ebp,%ebp
    77dc:	0f b6 c1             	movzbl %cl,%eax
    77df:	48 8d 0d 5a 2d 03 00 	lea    0x32d5a(%rip),%rcx        # 3a540 <_ZN4core7unicode12unicode_data2cc19BITSET_INDEX_CHUNKS17h8a1f39cd536e9344E+0x80>
    77e6:	48 63 04 81          	movslq (%rcx,%rax,4),%rax
    77ea:	48 01 c8             	add    %rcx,%rax
    77ed:	49 89 d7             	mov    %rdx,%r15
    77f0:	ff e0                	jmpq   *%rax
    77f2:	45 31 ff             	xor    %r15d,%r15d
    77f5:	48 89 d5             	mov    %rdx,%rbp
    77f8:	e9 b8 00 00 00       	jmpq   78b5 <_ZN4core3fmt9Formatter12pad_integral17hc55c32e78eb96054E+0x2c5>
    77fd:	48 89 df             	mov    %rbx,%rdi
    7800:	44 89 f6             	mov    %r14d,%esi
    7803:	4c 89 ea             	mov    %r13,%rdx
    7806:	4c 89 e1             	mov    %r12,%rcx
    7809:	e8 e2 01 00 00       	callq  79f0 <_ZN4core3fmt9Formatter12pad_integral12write_prefix17h9f1b96f1c06957eeE>
    780e:	41 b4 01             	mov    $0x1,%r12b
    7811:	84 c0                	test   %al,%al
    7813:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
    7818:	0f 85 b8 01 00 00    	jne    79d6 <_ZN4core3fmt9Formatter12pad_integral17hc55c32e78eb96054E+0x3e6>
    781e:	48 8b 7b 20          	mov    0x20(%rbx),%rdi
    7822:	48 8b 43 28          	mov    0x28(%rbx),%rax
    7826:	48 8b 40 18          	mov    0x18(%rax),%rax
    782a:	48 89 ee             	mov    %rbp,%rsi
    782d:	48 83 c4 18          	add    $0x18,%rsp
    7831:	5b                   	pop    %rbx
    7832:	41 5c                	pop    %r12
    7834:	41 5d                	pop    %r13
    7836:	41 5e                	pop    %r14
    7838:	41 5f                	pop    %r15
    783a:	5d                   	pop    %rbp
    783b:	ff e0                	jmpq   *%rax
    783d:	8b 43 34             	mov    0x34(%rbx),%eax
    7840:	89 44 24 08          	mov    %eax,0x8(%rsp)
    7844:	c7 43 34 30 00 00 00 	movl   $0x30,0x34(%rbx)
    784b:	8a 43 38             	mov    0x38(%rbx),%al
    784e:	88 44 24 07          	mov    %al,0x7(%rsp)
    7852:	c6 43 38 01          	movb   $0x1,0x38(%rbx)
    7856:	48 89 df             	mov    %rbx,%rdi
    7859:	44 89 f6             	mov    %r14d,%esi
    785c:	4c 89 ea             	mov    %r13,%rdx
    785f:	4c 89 e1             	mov    %r12,%rcx
    7862:	e8 89 01 00 00       	callq  79f0 <_ZN4core3fmt9Formatter12pad_integral12write_prefix17h9f1b96f1c06957eeE>
    7867:	41 b4 01             	mov    $0x1,%r12b
    786a:	84 c0                	test   %al,%al
    786c:	0f 85 64 01 00 00    	jne    79d6 <_ZN4core3fmt9Formatter12pad_integral17hc55c32e78eb96054E+0x3e6>
    7872:	49 89 ee             	mov    %rbp,%r14
    7875:	8b 43 38             	mov    0x38(%rbx),%eax
    7878:	3c 03                	cmp    $0x3,%al
    787a:	b9 01 00 00 00       	mov    $0x1,%ecx
    787f:	0f 45 c8             	cmovne %eax,%ecx
    7882:	31 ed                	xor    %ebp,%ebp
    7884:	0f b6 c1             	movzbl %cl,%eax
    7887:	48 8d 0d a2 2c 03 00 	lea    0x32ca2(%rip),%rcx        # 3a530 <_ZN4core7unicode12unicode_data2cc19BITSET_INDEX_CHUNKS17h8a1f39cd536e9344E+0x70>
    788e:	48 63 04 81          	movslq (%rcx,%rax,4),%rax
    7892:	48 01 c8             	add    %rcx,%rax
    7895:	4d 89 fd             	mov    %r15,%r13
    7898:	ff e0                	jmpq   *%rax
    789a:	45 31 ed             	xor    %r13d,%r13d
    789d:	4c 89 fd             	mov    %r15,%rbp
    78a0:	e9 b6 00 00 00       	jmpq   795b <_ZN4core3fmt9Formatter12pad_integral17hc55c32e78eb96054E+0x36b>
    78a5:	48 89 d5             	mov    %rdx,%rbp
    78a8:	48 d1 ed             	shr    %rbp
    78ab:	48 83 c2 01          	add    $0x1,%rdx
    78af:	48 d1 ea             	shr    %rdx
    78b2:	49 89 d7             	mov    %rdx,%r15
    78b5:	48 83 c5 01          	add    $0x1,%rbp
    78b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    78c0:	48 83 c5 ff          	add    $0xffffffffffffffff,%rbp
    78c4:	74 1a                	je     78e0 <_ZN4core3fmt9Formatter12pad_integral17hc55c32e78eb96054E+0x2f0>
    78c6:	48 8b 7b 20          	mov    0x20(%rbx),%rdi
    78ca:	48 8b 43 28          	mov    0x28(%rbx),%rax
    78ce:	8b 73 34             	mov    0x34(%rbx),%esi
    78d1:	ff 50 20             	callq  *0x20(%rax)
    78d4:	84 c0                	test   %al,%al
    78d6:	74 e8                	je     78c0 <_ZN4core3fmt9Formatter12pad_integral17hc55c32e78eb96054E+0x2d0>
    78d8:	41 b4 01             	mov    $0x1,%r12b
    78db:	e9 f6 00 00 00       	jmpq   79d6 <_ZN4core3fmt9Formatter12pad_integral17hc55c32e78eb96054E+0x3e6>
    78e0:	8b 6b 34             	mov    0x34(%rbx),%ebp
    78e3:	48 89 df             	mov    %rbx,%rdi
    78e6:	44 89 f6             	mov    %r14d,%esi
    78e9:	4c 89 ea             	mov    %r13,%rdx
    78ec:	4c 89 e1             	mov    %r12,%rcx
    78ef:	e8 fc 00 00 00       	callq  79f0 <_ZN4core3fmt9Formatter12pad_integral12write_prefix17h9f1b96f1c06957eeE>
    78f4:	41 b4 01             	mov    $0x1,%r12b
    78f7:	84 c0                	test   %al,%al
    78f9:	0f 85 d7 00 00 00    	jne    79d6 <_ZN4core3fmt9Formatter12pad_integral17hc55c32e78eb96054E+0x3e6>
    78ff:	48 8b 7b 20          	mov    0x20(%rbx),%rdi
    7903:	48 8b 43 28          	mov    0x28(%rbx),%rax
    7907:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
    790c:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
    7911:	ff 50 18             	callq  *0x18(%rax)
    7914:	84 c0                	test   %al,%al
    7916:	0f 85 ba 00 00 00    	jne    79d6 <_ZN4core3fmt9Formatter12pad_integral17hc55c32e78eb96054E+0x3e6>
    791c:	4c 8b 73 20          	mov    0x20(%rbx),%r14
    7920:	48 8b 5b 28          	mov    0x28(%rbx),%rbx
    7924:	49 83 c7 01          	add    $0x1,%r15
    7928:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    792f:	00 
    7930:	49 83 c7 ff          	add    $0xffffffffffffffff,%r15
    7934:	0f 84 99 00 00 00    	je     79d3 <_ZN4core3fmt9Formatter12pad_integral17hc55c32e78eb96054E+0x3e3>
    793a:	4c 89 f7             	mov    %r14,%rdi
    793d:	89 ee                	mov    %ebp,%esi
    793f:	ff 53 20             	callq  *0x20(%rbx)
    7942:	84 c0                	test   %al,%al
    7944:	74 ea                	je     7930 <_ZN4core3fmt9Formatter12pad_integral17hc55c32e78eb96054E+0x340>
    7946:	e9 8b 00 00 00       	jmpq   79d6 <_ZN4core3fmt9Formatter12pad_integral17hc55c32e78eb96054E+0x3e6>
    794b:	4c 89 fd             	mov    %r15,%rbp
    794e:	48 d1 ed             	shr    %rbp
    7951:	49 83 c7 01          	add    $0x1,%r15
    7955:	49 d1 ef             	shr    %r15
    7958:	4d 89 fd             	mov    %r15,%r13
    795b:	48 83 c5 01          	add    $0x1,%rbp
    795f:	90                   	nop
    7960:	48 83 c5 ff          	add    $0xffffffffffffffff,%rbp
    7964:	74 14                	je     797a <_ZN4core3fmt9Formatter12pad_integral17hc55c32e78eb96054E+0x38a>
    7966:	48 8b 7b 20          	mov    0x20(%rbx),%rdi
    796a:	48 8b 43 28          	mov    0x28(%rbx),%rax
    796e:	8b 73 34             	mov    0x34(%rbx),%esi
    7971:	ff 50 20             	callq  *0x20(%rax)
    7974:	84 c0                	test   %al,%al
    7976:	74 e8                	je     7960 <_ZN4core3fmt9Formatter12pad_integral17hc55c32e78eb96054E+0x370>
    7978:	eb 5c                	jmp    79d6 <_ZN4core3fmt9Formatter12pad_integral17hc55c32e78eb96054E+0x3e6>
    797a:	44 8b 7b 34          	mov    0x34(%rbx),%r15d
    797e:	48 8b 7b 20          	mov    0x20(%rbx),%rdi
    7982:	48 8b 43 28          	mov    0x28(%rbx),%rax
    7986:	4c 89 f6             	mov    %r14,%rsi
    7989:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
    798e:	ff 50 18             	callq  *0x18(%rax)
    7991:	84 c0                	test   %al,%al
    7993:	75 41                	jne    79d6 <_ZN4core3fmt9Formatter12pad_integral17hc55c32e78eb96054E+0x3e6>
    7995:	4c 8b 73 20          	mov    0x20(%rbx),%r14
    7999:	48 8b 6b 28          	mov    0x28(%rbx),%rbp
    799d:	49 83 c5 01          	add    $0x1,%r13
    79a1:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    79a8:	00 00 00 
    79ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    79b0:	49 83 c5 ff          	add    $0xffffffffffffffff,%r13
    79b4:	74 0f                	je     79c5 <_ZN4core3fmt9Formatter12pad_integral17hc55c32e78eb96054E+0x3d5>
    79b6:	4c 89 f7             	mov    %r14,%rdi
    79b9:	44 89 fe             	mov    %r15d,%esi
    79bc:	ff 55 20             	callq  *0x20(%rbp)
    79bf:	84 c0                	test   %al,%al
    79c1:	74 ed                	je     79b0 <_ZN4core3fmt9Formatter12pad_integral17hc55c32e78eb96054E+0x3c0>
    79c3:	eb 11                	jmp    79d6 <_ZN4core3fmt9Formatter12pad_integral17hc55c32e78eb96054E+0x3e6>
    79c5:	8b 44 24 08          	mov    0x8(%rsp),%eax
    79c9:	89 43 34             	mov    %eax,0x34(%rbx)
    79cc:	8a 44 24 07          	mov    0x7(%rsp),%al
    79d0:	88 43 38             	mov    %al,0x38(%rbx)
    79d3:	45 31 e4             	xor    %r12d,%r12d
    79d6:	44 89 e0             	mov    %r12d,%eax
    79d9:	48 83 c4 18          	add    $0x18,%rsp
    79dd:	5b                   	pop    %rbx
    79de:	41 5c                	pop    %r12
    79e0:	41 5d                	pop    %r13
    79e2:	41 5e                	pop    %r14
    79e4:	41 5f                	pop    %r15
    79e6:	5d                   	pop    %rbp
    79e7:	c3                   	retq   
    79e8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    79ef:	00 

00000000000079f0 <_ZN4core3fmt9Formatter12pad_integral12write_prefix17h9f1b96f1c06957eeE>:
    79f0:	41 57                	push   %r15
    79f2:	41 56                	push   %r14
    79f4:	53                   	push   %rbx
    79f5:	49 89 ce             	mov    %rcx,%r14
    79f8:	49 89 d7             	mov    %rdx,%r15
    79fb:	48 89 fb             	mov    %rdi,%rbx
    79fe:	81 fe 00 00 11 00    	cmp    $0x110000,%esi
    7a04:	74 13                	je     7a19 <_ZN4core3fmt9Formatter12pad_integral12write_prefix17h9f1b96f1c06957eeE+0x29>
    7a06:	48 8b 7b 20          	mov    0x20(%rbx),%rdi
    7a0a:	48 8b 43 28          	mov    0x28(%rbx),%rax
    7a0e:	ff 50 20             	callq  *0x20(%rax)
    7a11:	89 c1                	mov    %eax,%ecx
    7a13:	b0 01                	mov    $0x1,%al
    7a15:	84 c9                	test   %cl,%cl
    7a17:	75 20                	jne    7a39 <_ZN4core3fmt9Formatter12pad_integral12write_prefix17h9f1b96f1c06957eeE+0x49>
    7a19:	4d 85 ff             	test   %r15,%r15
    7a1c:	74 19                	je     7a37 <_ZN4core3fmt9Formatter12pad_integral12write_prefix17h9f1b96f1c06957eeE+0x47>
    7a1e:	48 8b 7b 20          	mov    0x20(%rbx),%rdi
    7a22:	48 8b 43 28          	mov    0x28(%rbx),%rax
    7a26:	48 8b 40 18          	mov    0x18(%rax),%rax
    7a2a:	4c 89 fe             	mov    %r15,%rsi
    7a2d:	4c 89 f2             	mov    %r14,%rdx
    7a30:	5b                   	pop    %rbx
    7a31:	41 5e                	pop    %r14
    7a33:	41 5f                	pop    %r15
    7a35:	ff e0                	jmpq   *%rax
    7a37:	31 c0                	xor    %eax,%eax
    7a39:	5b                   	pop    %rbx
    7a3a:	41 5e                	pop    %r14
    7a3c:	41 5f                	pop    %r15
    7a3e:	c3                   	retq   
    7a3f:	90                   	nop

0000000000007a40 <_ZN4core3num6bignum8Big32x408mul_pow217h98a8a86db4c173d2E>:
    7a40:	55                   	push   %rbp
    7a41:	53                   	push   %rbx
    7a42:	50                   	push   %rax
    7a43:	48 81 fe ff 04 00 00 	cmp    $0x4ff,%rsi
    7a4a:	0f 87 64 01 00 00    	ja     7bb4 <_ZN4core3num6bignum8Big32x408mul_pow217h98a8a86db4c173d2E+0x174>
    7a50:	49 89 f0             	mov    %rsi,%r8
    7a53:	48 89 f0             	mov    %rsi,%rax
    7a56:	48 c1 e8 05          	shr    $0x5,%rax
    7a5a:	48 8b 37             	mov    (%rdi),%rsi
    7a5d:	48 85 f6             	test   %rsi,%rsi
    7a60:	74 38                	je     7a9a <_ZN4core3num6bignum8Big32x408mul_pow217h98a8a86db4c173d2E+0x5a>
    7a62:	48 83 c6 ff          	add    $0xffffffffffffffff,%rsi
    7a66:	48 8d 14 87          	lea    (%rdi,%rax,4),%rdx
    7a6a:	48 83 c2 04          	add    $0x4,%rdx
    7a6e:	66 90                	xchg   %ax,%ax
    7a70:	48 83 fe 27          	cmp    $0x27,%rsi
    7a74:	0f 87 0f 01 00 00    	ja     7b89 <_ZN4core3num6bignum8Big32x408mul_pow217h98a8a86db4c173d2E+0x149>
    7a7a:	48 8d 0c 30          	lea    (%rax,%rsi,1),%rcx
    7a7e:	48 83 f9 27          	cmp    $0x27,%rcx
    7a82:	0f 87 eb 00 00 00    	ja     7b73 <_ZN4core3num6bignum8Big32x408mul_pow217h98a8a86db4c173d2E+0x133>
    7a88:	8b 4c b7 08          	mov    0x8(%rdi,%rsi,4),%ecx
    7a8c:	89 4c b2 04          	mov    %ecx,0x4(%rdx,%rsi,4)
    7a90:	48 83 c6 ff          	add    $0xffffffffffffffff,%rsi
    7a94:	48 83 fe ff          	cmp    $0xffffffffffffffff,%rsi
    7a98:	75 d6                	jne    7a70 <_ZN4core3num6bignum8Big32x408mul_pow217h98a8a86db4c173d2E+0x30>
    7a9a:	48 85 c0             	test   %rax,%rax
    7a9d:	74 2c                	je     7acb <_ZN4core3num6bignum8Big32x408mul_pow217h98a8a86db4c173d2E+0x8b>
    7a9f:	31 c9                	xor    %ecx,%ecx
    7aa1:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    7aa8:	00 00 00 
    7aab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    7ab0:	48 83 f9 28          	cmp    $0x28,%rcx
    7ab4:	0f 84 e2 00 00 00    	je     7b9c <_ZN4core3num6bignum8Big32x408mul_pow217h98a8a86db4c173d2E+0x15c>
    7aba:	c7 44 8f 08 00 00 00 	movl   $0x0,0x8(%rdi,%rcx,4)
    7ac1:	00 
    7ac2:	48 83 c1 01          	add    $0x1,%rcx
    7ac6:	48 39 c8             	cmp    %rcx,%rax
    7ac9:	75 e5                	jne    7ab0 <_ZN4core3num6bignum8Big32x408mul_pow217h98a8a86db4c173d2E+0x70>
    7acb:	48 8b 37             	mov    (%rdi),%rsi
    7ace:	48 01 c6             	add    %rax,%rsi
    7ad1:	41 f6 c0 1f          	test   $0x1f,%r8b
    7ad5:	0f 84 88 00 00 00    	je     7b63 <_ZN4core3num6bignum8Big32x408mul_pow217h98a8a86db4c173d2E+0x123>
    7adb:	48 8d 4e ff          	lea    -0x1(%rsi),%rcx
    7adf:	48 83 f9 27          	cmp    $0x27,%rcx
    7ae3:	0f 87 8a 00 00 00    	ja     7b73 <_ZN4core3num6bignum8Big32x408mul_pow217h98a8a86db4c173d2E+0x133>
    7ae9:	8b 54 b7 04          	mov    0x4(%rdi,%rsi,4),%edx
    7aed:	45 89 c1             	mov    %r8d,%r9d
    7af0:	41 f7 d9             	neg    %r9d
    7af3:	41 83 e1 1f          	and    $0x1f,%r9d
    7af7:	41 89 d3             	mov    %edx,%r11d
    7afa:	44 89 c9             	mov    %r9d,%ecx
    7afd:	41 d3 eb             	shr    %cl,%r11d
    7b00:	49 89 f2             	mov    %rsi,%r10
    7b03:	45 85 db             	test   %r11d,%r11d
    7b06:	74 0f                	je     7b17 <_ZN4core3num6bignum8Big32x408mul_pow217h98a8a86db4c173d2E+0xd7>
    7b08:	48 83 fe 27          	cmp    $0x27,%rsi
    7b0c:	77 7b                	ja     7b89 <_ZN4core3num6bignum8Big32x408mul_pow217h98a8a86db4c173d2E+0x149>
    7b0e:	44 89 5c b7 08       	mov    %r11d,0x8(%rdi,%rsi,4)
    7b13:	4c 8d 56 01          	lea    0x1(%rsi),%r10
    7b17:	4c 8d 58 01          	lea    0x1(%rax),%r11
    7b1b:	41 83 e0 1f          	and    $0x1f,%r8d
    7b1f:	49 39 f3             	cmp    %rsi,%r11
    7b22:	73 36                	jae    7b5a <_ZN4core3num6bignum8Big32x408mul_pow217h98a8a86db4c173d2E+0x11a>
    7b24:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    7b2b:	00 00 00 
    7b2e:	66 90                	xchg   %ax,%ax
    7b30:	48 8d 4e fe          	lea    -0x2(%rsi),%rcx
    7b34:	48 83 f9 27          	cmp    $0x27,%rcx
    7b38:	77 39                	ja     7b73 <_ZN4core3num6bignum8Big32x408mul_pow217h98a8a86db4c173d2E+0x133>
    7b3a:	44 89 c1             	mov    %r8d,%ecx
    7b3d:	d3 e2                	shl    %cl,%edx
    7b3f:	8b 1c b7             	mov    (%rdi,%rsi,4),%ebx
    7b42:	89 dd                	mov    %ebx,%ebp
    7b44:	44 89 c9             	mov    %r9d,%ecx
    7b47:	d3 ed                	shr    %cl,%ebp
    7b49:	09 d5                	or     %edx,%ebp
    7b4b:	89 6c b7 04          	mov    %ebp,0x4(%rdi,%rsi,4)
    7b4f:	48 83 c6 ff          	add    $0xffffffffffffffff,%rsi
    7b53:	89 da                	mov    %ebx,%edx
    7b55:	49 39 f3             	cmp    %rsi,%r11
    7b58:	72 d6                	jb     7b30 <_ZN4core3num6bignum8Big32x408mul_pow217h98a8a86db4c173d2E+0xf0>
    7b5a:	44 89 c1             	mov    %r8d,%ecx
    7b5d:	d3 64 87 08          	shll   %cl,0x8(%rdi,%rax,4)
    7b61:	eb 03                	jmp    7b66 <_ZN4core3num6bignum8Big32x408mul_pow217h98a8a86db4c173d2E+0x126>
    7b63:	49 89 f2             	mov    %rsi,%r10
    7b66:	4c 89 17             	mov    %r10,(%rdi)
    7b69:	48 89 f8             	mov    %rdi,%rax
    7b6c:	48 83 c4 08          	add    $0x8,%rsp
    7b70:	5b                   	pop    %rbx
    7b71:	5d                   	pop    %rbp
    7b72:	c3                   	retq   
    7b73:	48 8d 3d 2e e6 23 00 	lea    0x23e62e(%rip),%rdi        # 2461a8 <__init_array_end+0x198>
    7b7a:	ba 28 00 00 00       	mov    $0x28,%edx
    7b7f:	48 89 ce             	mov    %rcx,%rsi
    7b82:	e8 79 f8 ff ff       	callq  7400 <_ZN4core9panicking18panic_bounds_check17h83121a2515f55ceeE>
    7b87:	0f 0b                	ud2    
    7b89:	48 8d 3d 18 e6 23 00 	lea    0x23e618(%rip),%rdi        # 2461a8 <__init_array_end+0x198>
    7b90:	ba 28 00 00 00       	mov    $0x28,%edx
    7b95:	e8 66 f8 ff ff       	callq  7400 <_ZN4core9panicking18panic_bounds_check17h83121a2515f55ceeE>
    7b9a:	0f 0b                	ud2    
    7b9c:	48 8d 3d 05 e6 23 00 	lea    0x23e605(%rip),%rdi        # 2461a8 <__init_array_end+0x198>
    7ba3:	be 28 00 00 00       	mov    $0x28,%esi
    7ba8:	ba 28 00 00 00       	mov    $0x28,%edx
    7bad:	e8 4e f8 ff ff       	callq  7400 <_ZN4core9panicking18panic_bounds_check17h83121a2515f55ceeE>
    7bb2:	0f 0b                	ud2    
    7bb4:	48 8d 3d 77 3b 03 00 	lea    0x33b77(%rip),%rdi        # 3b732 <_ZN4core3str15UTF8_CHAR_WIDTH17h639c7c3d8ce7e983E+0x1da>
    7bbb:	48 8d 15 e6 e5 23 00 	lea    0x23e5e6(%rip),%rdx        # 2461a8 <__init_array_end+0x198>
    7bc2:	be 1d 00 00 00       	mov    $0x1d,%esi
    7bc7:	e8 e4 f7 ff ff       	callq  73b0 <_ZN4core9panicking5panic17h6861470adfbddef8E>
    7bcc:	0f 0b                	ud2    
    7bce:	66 90                	xchg   %ax,%ax

0000000000007bd0 <_ZN4core5slice20slice_index_len_fail17h52736412c1ce1871E>:
    7bd0:	48 83 ec 68          	sub    $0x68,%rsp
    7bd4:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
    7bd9:	48 89 74 24 10       	mov    %rsi,0x10(%rsp)
    7bde:	48 8d 44 24 08       	lea    0x8(%rsp),%rax
    7be3:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    7be8:	48 8d 05 91 f8 ff ff 	lea    -0x76f(%rip),%rax        # 7480 <_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$u64$GT$3fmt17h29103e8b1c853837E>
    7bef:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
    7bf4:	48 8d 4c 24 10       	lea    0x10(%rsp),%rcx
    7bf9:	48 89 4c 24 28       	mov    %rcx,0x28(%rsp)
    7bfe:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
    7c03:	48 8d 05 b6 e5 23 00 	lea    0x23e5b6(%rip),%rax        # 2461c0 <__init_array_end+0x1b0>
    7c0a:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
    7c0f:	48 c7 44 24 40 02 00 	movq   $0x2,0x40(%rsp)
    7c16:	00 00 
    7c18:	48 c7 44 24 48 00 00 	movq   $0x0,0x48(%rsp)
    7c1f:	00 00 
    7c21:	48 8d 44 24 18       	lea    0x18(%rsp),%rax
    7c26:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
    7c2b:	48 c7 44 24 60 02 00 	movq   $0x2,0x60(%rsp)
    7c32:	00 00 
    7c34:	48 8d 35 a5 e5 23 00 	lea    0x23e5a5(%rip),%rsi        # 2461e0 <__init_array_end+0x1d0>
    7c3b:	48 8d 7c 24 38       	lea    0x38(%rsp),%rdi
    7c40:	e8 6b f9 ff ff       	callq  75b0 <_ZN4core9panicking9panic_fmt17he168e49e4b05d288E>
    7c45:	0f 0b                	ud2    
    7c47:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    7c4e:	00 00 

0000000000007c50 <_ZN4core5slice22slice_index_order_fail17h7bcf2f94ba9e06deE>:
    7c50:	48 83 ec 68          	sub    $0x68,%rsp
    7c54:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
    7c59:	48 89 74 24 10       	mov    %rsi,0x10(%rsp)
    7c5e:	48 8d 44 24 08       	lea    0x8(%rsp),%rax
    7c63:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    7c68:	48 8d 05 11 f8 ff ff 	lea    -0x7ef(%rip),%rax        # 7480 <_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$u64$GT$3fmt17h29103e8b1c853837E>
    7c6f:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
    7c74:	48 8d 4c 24 10       	lea    0x10(%rsp),%rcx
    7c79:	48 89 4c 24 28       	mov    %rcx,0x28(%rsp)
    7c7e:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
    7c83:	48 8d 05 6e e5 23 00 	lea    0x23e56e(%rip),%rax        # 2461f8 <__init_array_end+0x1e8>
    7c8a:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
    7c8f:	48 c7 44 24 40 02 00 	movq   $0x2,0x40(%rsp)
    7c96:	00 00 
    7c98:	48 c7 44 24 48 00 00 	movq   $0x0,0x48(%rsp)
    7c9f:	00 00 
    7ca1:	48 8d 44 24 18       	lea    0x18(%rsp),%rax
    7ca6:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
    7cab:	48 c7 44 24 60 02 00 	movq   $0x2,0x60(%rsp)
    7cb2:	00 00 
    7cb4:	48 8d 35 5d e5 23 00 	lea    0x23e55d(%rip),%rsi        # 246218 <__init_array_end+0x208>
    7cbb:	48 8d 7c 24 38       	lea    0x38(%rsp),%rdi
    7cc0:	e8 eb f8 ff ff       	callq  75b0 <_ZN4core9panicking9panic_fmt17he168e49e4b05d288E>
    7cc5:	0f 0b                	ud2    
    7cc7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    7cce:	00 00 

0000000000007cd0 <_ZN4core3fmt9Formatter3pad17h7ef001ba65c2db9cE>:
    7cd0:	55                   	push   %rbp
    7cd1:	41 57                	push   %r15
    7cd3:	41 56                	push   %r14
    7cd5:	41 55                	push   %r13
    7cd7:	41 54                	push   %r12
    7cd9:	53                   	push   %rbx
    7cda:	50                   	push   %rax
    7cdb:	49 89 d6             	mov    %rdx,%r14
    7cde:	49 89 f7             	mov    %rsi,%r15
    7ce1:	49 89 fd             	mov    %rdi,%r13
    7ce4:	4c 8b 07             	mov    (%rdi),%r8
    7ce7:	48 8b 47 10          	mov    0x10(%rdi),%rax
    7ceb:	49 83 f8 01          	cmp    $0x1,%r8
    7cef:	75 0b                	jne    7cfc <_ZN4core3fmt9Formatter3pad17h7ef001ba65c2db9cE+0x2c>
    7cf1:	48 83 f8 01          	cmp    $0x1,%rax
    7cf5:	74 0f                	je     7d06 <_ZN4core3fmt9Formatter3pad17h7ef001ba65c2db9cE+0x36>
    7cf7:	e9 32 01 00 00       	jmpq   7e2e <_ZN4core3fmt9Formatter3pad17h7ef001ba65c2db9cE+0x15e>
    7cfc:	48 83 f8 01          	cmp    $0x1,%rax
    7d00:	0f 85 4b 04 00 00    	jne    8151 <_ZN4core3fmt9Formatter3pad17h7ef001ba65c2db9cE+0x481>
    7d06:	4d 85 f6             	test   %r14,%r14
    7d09:	0f 84 12 01 00 00    	je     7e21 <_ZN4core3fmt9Formatter3pad17h7ef001ba65c2db9cE+0x151>
    7d0f:	4f 8d 0c 37          	lea    (%r15,%r14,1),%r9
    7d13:	49 8b 75 18          	mov    0x18(%r13),%rsi
    7d17:	48 83 c6 01          	add    $0x1,%rsi
    7d1b:	31 c9                	xor    %ecx,%ecx
    7d1d:	4c 89 ff             	mov    %r15,%rdi
    7d20:	4c 89 fd             	mov    %r15,%rbp
    7d23:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    7d2a:	00 00 00 
    7d2d:	0f 1f 00             	nopl   (%rax)
    7d30:	48 8d 57 01          	lea    0x1(%rdi),%rdx
    7d34:	0f b6 07             	movzbl (%rdi),%eax
    7d37:	84 c0                	test   %al,%al
    7d39:	78 15                	js     7d50 <_ZN4core3fmt9Formatter3pad17h7ef001ba65c2db9cE+0x80>
    7d3b:	48 89 d7             	mov    %rdx,%rdi
    7d3e:	48 83 c6 ff          	add    $0xffffffffffffffff,%rsi
    7d42:	0f 85 c2 00 00 00    	jne    7e0a <_ZN4core3fmt9Formatter3pad17h7ef001ba65c2db9cE+0x13a>
    7d48:	e9 1c 02 00 00       	jmpq   7f69 <_ZN4core3fmt9Formatter3pad17h7ef001ba65c2db9cE+0x299>
    7d4d:	0f 1f 00             	nopl   (%rax)
    7d50:	4c 39 ca             	cmp    %r9,%rdx
    7d53:	74 4a                	je     7d9f <_ZN4core3fmt9Formatter3pad17h7ef001ba65c2db9cE+0xcf>
    7d55:	0f b6 5f 01          	movzbl 0x1(%rdi),%ebx
    7d59:	48 83 c7 02          	add    $0x2,%rdi
    7d5d:	83 e3 3f             	and    $0x3f,%ebx
    7d60:	49 89 fa             	mov    %rdi,%r10
    7d63:	89 c2                	mov    %eax,%edx
    7d65:	83 e2 1f             	and    $0x1f,%edx
    7d68:	3c df                	cmp    $0xdf,%al
    7d6a:	76 44                	jbe    7db0 <_ZN4core3fmt9Formatter3pad17h7ef001ba65c2db9cE+0xe0>
    7d6c:	4d 39 ca             	cmp    %r9,%r10
    7d6f:	74 44                	je     7db5 <_ZN4core3fmt9Formatter3pad17h7ef001ba65c2db9cE+0xe5>
    7d71:	45 0f b6 1a          	movzbl (%r10),%r11d
    7d75:	49 83 c2 01          	add    $0x1,%r10
    7d79:	41 83 e3 3f          	and    $0x3f,%r11d
    7d7d:	4c 89 d7             	mov    %r10,%rdi
    7d80:	c1 e3 06             	shl    $0x6,%ebx
    7d83:	44 09 db             	or     %r11d,%ebx
    7d86:	3c f0                	cmp    $0xf0,%al
    7d88:	72 3b                	jb     7dc5 <_ZN4core3fmt9Formatter3pad17h7ef001ba65c2db9cE+0xf5>
    7d8a:	4d 39 ca             	cmp    %r9,%r10
    7d8d:	74 48                	je     7dd7 <_ZN4core3fmt9Formatter3pad17h7ef001ba65c2db9cE+0x107>
    7d8f:	41 0f b6 02          	movzbl (%r10),%eax
    7d93:	49 83 c2 01          	add    $0x1,%r10
    7d97:	83 e0 3f             	and    $0x3f,%eax
    7d9a:	4c 89 d7             	mov    %r10,%rdi
    7d9d:	eb 3a                	jmp    7dd9 <_ZN4core3fmt9Formatter3pad17h7ef001ba65c2db9cE+0x109>
    7d9f:	31 db                	xor    %ebx,%ebx
    7da1:	48 89 d7             	mov    %rdx,%rdi
    7da4:	4d 89 ca             	mov    %r9,%r10
    7da7:	89 c2                	mov    %eax,%edx
    7da9:	83 e2 1f             	and    $0x1f,%edx
    7dac:	3c df                	cmp    $0xdf,%al
    7dae:	77 bc                	ja     7d6c <_ZN4core3fmt9Formatter3pad17h7ef001ba65c2db9cE+0x9c>
    7db0:	c1 e2 06             	shl    $0x6,%edx
    7db3:	eb 13                	jmp    7dc8 <_ZN4core3fmt9Formatter3pad17h7ef001ba65c2db9cE+0xf8>
    7db5:	45 31 db             	xor    %r11d,%r11d
    7db8:	4d 89 ca             	mov    %r9,%r10
    7dbb:	c1 e3 06             	shl    $0x6,%ebx
    7dbe:	44 09 db             	or     %r11d,%ebx
    7dc1:	3c f0                	cmp    $0xf0,%al
    7dc3:	73 c5                	jae    7d8a <_ZN4core3fmt9Formatter3pad17h7ef001ba65c2db9cE+0xba>
    7dc5:	c1 e2 0c             	shl    $0xc,%edx
    7dc8:	09 d3                	or     %edx,%ebx
    7dca:	89 d8                	mov    %ebx,%eax
    7dcc:	48 83 c6 ff          	add    $0xffffffffffffffff,%rsi
    7dd0:	75 38                	jne    7e0a <_ZN4core3fmt9Formatter3pad17h7ef001ba65c2db9cE+0x13a>
    7dd2:	e9 92 01 00 00       	jmpq   7f69 <_ZN4core3fmt9Formatter3pad17h7ef001ba65c2db9cE+0x299>
    7dd7:	31 c0                	xor    %eax,%eax
    7dd9:	83 e2 07             	and    $0x7,%edx
    7ddc:	c1 e2 12             	shl    $0x12,%edx
    7ddf:	c1 e3 06             	shl    $0x6,%ebx
    7de2:	09 d3                	or     %edx,%ebx
    7de4:	09 c3                	or     %eax,%ebx
    7de6:	89 d8                	mov    %ebx,%eax
    7de8:	81 fb 00 00 11 00    	cmp    $0x110000,%ebx
    7dee:	0f 84 53 03 00 00    	je     8147 <_ZN4core3fmt9Formatter3pad17h7ef001ba65c2db9cE+0x477>
    7df4:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    7dfb:	00 00 00 
    7dfe:	66 90                	xchg   %ax,%ax
    7e00:	48 83 c6 ff          	add    $0xffffffffffffffff,%rsi
    7e04:	0f 84 5f 01 00 00    	je     7f69 <_ZN4core3fmt9Formatter3pad17h7ef001ba65c2db9cE+0x299>
    7e0a:	48 29 e9             	sub    %rbp,%rcx
    7e0d:	48 01 f9             	add    %rdi,%rcx
    7e10:	48 89 fd             	mov    %rdi,%rbp
    7e13:	49 39 f9             	cmp    %rdi,%r9
    7e16:	0f 85 14 ff ff ff    	jne    7d30 <_ZN4core3fmt9Formatter3pad17h7ef001ba65c2db9cE+0x60>
    7e1c:	e9 26 03 00 00       	jmpq   8147 <_ZN4core3fmt9Formatter3pad17h7ef001ba65c2db9cE+0x477>
    7e21:	45 31 f6             	xor    %r14d,%r14d
    7e24:	49 83 f8 01          	cmp    $0x1,%r8
    7e28:	0f 85 23 03 00 00    	jne    8151 <_ZN4core3fmt9Formatter3pad17h7ef001ba65c2db9cE+0x481>
    7e2e:	4d 85 f6             	test   %r14,%r14
    7e31:	74 23                	je     7e56 <_ZN4core3fmt9Formatter3pad17h7ef001ba65c2db9cE+0x186>
    7e33:	49 8d 4e ff          	lea    -0x1(%r14),%rcx
    7e37:	44 89 f0             	mov    %r14d,%eax
    7e3a:	83 e0 03             	and    $0x3,%eax
    7e3d:	48 83 f9 03          	cmp    $0x3,%rcx
    7e41:	73 1a                	jae    7e5d <_ZN4core3fmt9Formatter3pad17h7ef001ba65c2db9cE+0x18d>
    7e43:	31 c9                	xor    %ecx,%ecx
    7e45:	4c 89 fa             	mov    %r15,%rdx
    7e48:	48 85 c0             	test   %rax,%rax
    7e4b:	0f 85 b9 00 00 00    	jne    7f0a <_ZN4core3fmt9Formatter3pad17h7ef001ba65c2db9cE+0x23a>
    7e51:	e9 d6 00 00 00       	jmpq   7f2c <_ZN4core3fmt9Formatter3pad17h7ef001ba65c2db9cE+0x25c>
    7e56:	31 c9                	xor    %ecx,%ecx
    7e58:	e9 cf 00 00 00       	jmpq   7f2c <_ZN4core3fmt9Formatter3pad17h7ef001ba65c2db9cE+0x25c>
    7e5d:	48 89 c6             	mov    %rax,%rsi
    7e60:	4c 29 f6             	sub    %r14,%rsi
    7e63:	31 c9                	xor    %ecx,%ecx
    7e65:	66 0f 6f 05 43 25 03 	movdqa 0x32543(%rip),%xmm0        # 3a3b0 <_fini+0x6c>
    7e6c:	00 
    7e6d:	66 0f 6f 0d 4b 25 03 	movdqa 0x3254b(%rip),%xmm1        # 3a3c0 <_fini+0x7c>
    7e74:	00 
    7e75:	66 0f 6f 15 53 25 03 	movdqa 0x32553(%rip),%xmm2        # 3a3d0 <_fini+0x8c>
    7e7c:	00 
    7e7d:	4c 89 fa             	mov    %r15,%rdx
    7e80:	0f b6 7a 03          	movzbl 0x3(%rdx),%edi
    7e84:	66 0f 6e df          	movd   %edi,%xmm3
    7e88:	0f b6 7a 02          	movzbl 0x2(%rdx),%edi
    7e8c:	66 0f 6e e7          	movd   %edi,%xmm4
    7e90:	66 0f 62 e3          	punpckldq %xmm3,%xmm4
    7e94:	0f b6 7a 01          	movzbl 0x1(%rdx),%edi
    7e98:	66 0f 6e df          	movd   %edi,%xmm3
    7e9c:	0f b6 3a             	movzbl (%rdx),%edi
    7e9f:	66 0f 6e ef          	movd   %edi,%xmm5
    7ea3:	66 0f 62 eb          	punpckldq %xmm3,%xmm5
    7ea7:	66 0f 6c ec          	punpcklqdq %xmm4,%xmm5
    7eab:	66 0f db e8          	pand   %xmm0,%xmm5
    7eaf:	66 0f 76 e9          	pcmpeqd %xmm1,%xmm5
    7eb3:	66 0f 70 dd d4       	pshufd $0xd4,%xmm5,%xmm3
    7eb8:	66 0f 73 f3 38       	psllq  $0x38,%xmm3
    7ebd:	66 0f 6f e3          	movdqa %xmm3,%xmm4
    7ec1:	66 0f 72 e4 1f       	psrad  $0x1f,%xmm4
    7ec6:	66 0f 70 e4 ed       	pshufd $0xed,%xmm4,%xmm4
    7ecb:	66 0f 72 e3 18       	psrad  $0x18,%xmm3
    7ed0:	66 0f 70 db ed       	pshufd $0xed,%xmm3,%xmm3
    7ed5:	66 0f 62 dc          	punpckldq %xmm4,%xmm3
    7ed9:	66 0f 70 e5 f6       	pshufd $0xf6,%xmm5,%xmm4
    7ede:	66 0f db e2          	pand   %xmm2,%xmm4
    7ee2:	66 0f fb e3          	psubq  %xmm3,%xmm4
    7ee6:	48 83 c2 04          	add    $0x4,%rdx
    7eea:	66 0f 70 dc 4e       	pshufd $0x4e,%xmm4,%xmm3
    7eef:	66 0f d4 dc          	paddq  %xmm4,%xmm3
    7ef3:	66 48 0f 7e df       	movq   %xmm3,%rdi
    7ef8:	48 01 f9             	add    %rdi,%rcx
    7efb:	48 83 c6 04          	add    $0x4,%rsi
    7eff:	0f 85 7b ff ff ff    	jne    7e80 <_ZN4core3fmt9Formatter3pad17h7ef001ba65c2db9cE+0x1b0>
    7f05:	48 85 c0             	test   %rax,%rax
    7f08:	74 22                	je     7f2c <_ZN4core3fmt9Formatter3pad17h7ef001ba65c2db9cE+0x25c>
    7f0a:	31 f6                	xor    %esi,%esi
    7f0c:	0f 1f 40 00          	nopl   0x0(%rax)
    7f10:	0f b6 1c 32          	movzbl (%rdx,%rsi,1),%ebx
    7f14:	80 e3 c0             	and    $0xc0,%bl
    7f17:	31 ff                	xor    %edi,%edi
    7f19:	80 fb 80             	cmp    $0x80,%bl
    7f1c:	40 0f 94 c7          	sete   %dil
    7f20:	48 01 f9             	add    %rdi,%rcx
    7f23:	48 83 c6 01          	add    $0x1,%rsi
    7f27:	48 39 f0             	cmp    %rsi,%rax
    7f2a:	75 e4                	jne    7f10 <_ZN4core3fmt9Formatter3pad17h7ef001ba65c2db9cE+0x240>
    7f2c:	4c 89 f0             	mov    %r14,%rax
    7f2f:	48 29 c8             	sub    %rcx,%rax
    7f32:	4d 8b 45 08          	mov    0x8(%r13),%r8
    7f36:	4c 39 c0             	cmp    %r8,%rax
    7f39:	0f 83 12 02 00 00    	jae    8151 <_ZN4core3fmt9Formatter3pad17h7ef001ba65c2db9cE+0x481>
    7f3f:	31 ed                	xor    %ebp,%ebp
    7f41:	4d 85 f6             	test   %r14,%r14
    7f44:	74 54                	je     7f9a <_ZN4core3fmt9Formatter3pad17h7ef001ba65c2db9cE+0x2ca>
    7f46:	49 8d 46 ff          	lea    -0x1(%r14),%rax
    7f4a:	44 89 f2             	mov    %r14d,%edx
    7f4d:	83 e2 03             	and    $0x3,%edx
    7f50:	48 83 f8 03          	cmp    $0x3,%rax
    7f54:	73 4b                	jae    7fa1 <_ZN4core3fmt9Formatter3pad17h7ef001ba65c2db9cE+0x2d1>
    7f56:	31 c0                	xor    %eax,%eax
    7f58:	4c 89 fe             	mov    %r15,%rsi
    7f5b:	48 85 d2             	test   %rdx,%rdx
    7f5e:	0f 85 f6 00 00 00    	jne    805a <_ZN4core3fmt9Formatter3pad17h7ef001ba65c2db9cE+0x38a>
    7f64:	e9 12 01 00 00       	jmpq   807b <_ZN4core3fmt9Formatter3pad17h7ef001ba65c2db9cE+0x3ab>
    7f69:	3d 00 00 11 00       	cmp    $0x110000,%eax
    7f6e:	0f 84 d3 01 00 00    	je     8147 <_ZN4core3fmt9Formatter3pad17h7ef001ba65c2db9cE+0x477>
    7f74:	48 85 c9             	test   %rcx,%rcx
    7f77:	74 19                	je     7f92 <_ZN4core3fmt9Formatter3pad17h7ef001ba65c2db9cE+0x2c2>
    7f79:	4c 39 f1             	cmp    %r14,%rcx
    7f7c:	74 14                	je     7f92 <_ZN4core3fmt9Formatter3pad17h7ef001ba65c2db9cE+0x2c2>
    7f7e:	4c 39 f1             	cmp    %r14,%rcx
    7f81:	0f 83 b3 01 00 00    	jae    813a <_ZN4core3fmt9Formatter3pad17h7ef001ba65c2db9cE+0x46a>
    7f87:	41 80 3c 0f c0       	cmpb   $0xc0,(%r15,%rcx,1)
    7f8c:	0f 8c a8 01 00 00    	jl     813a <_ZN4core3fmt9Formatter3pad17h7ef001ba65c2db9cE+0x46a>
    7f92:	4c 89 f8             	mov    %r15,%rax
    7f95:	e9 a2 01 00 00       	jmpq   813c <_ZN4core3fmt9Formatter3pad17h7ef001ba65c2db9cE+0x46c>
    7f9a:	31 c0                	xor    %eax,%eax
    7f9c:	e9 da 00 00 00       	jmpq   807b <_ZN4core3fmt9Formatter3pad17h7ef001ba65c2db9cE+0x3ab>
    7fa1:	48 89 d7             	mov    %rdx,%rdi
    7fa4:	4c 29 f7             	sub    %r14,%rdi
    7fa7:	31 c0                	xor    %eax,%eax
    7fa9:	66 0f 6f 05 ff 23 03 	movdqa 0x323ff(%rip),%xmm0        # 3a3b0 <_fini+0x6c>
    7fb0:	00 
    7fb1:	66 0f 6f 0d 07 24 03 	movdqa 0x32407(%rip),%xmm1        # 3a3c0 <_fini+0x7c>
    7fb8:	00 
    7fb9:	66 0f 6f 15 0f 24 03 	movdqa 0x3240f(%rip),%xmm2        # 3a3d0 <_fini+0x8c>
    7fc0:	00 
    7fc1:	4c 89 fe             	mov    %r15,%rsi
    7fc4:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    7fcb:	00 00 00 
    7fce:	66 90                	xchg   %ax,%ax
    7fd0:	0f b6 5e 03          	movzbl 0x3(%rsi),%ebx
    7fd4:	66 0f 6e db          	movd   %ebx,%xmm3
    7fd8:	0f b6 5e 02          	movzbl 0x2(%rsi),%ebx
    7fdc:	66 0f 6e e3          	movd   %ebx,%xmm4
    7fe0:	66 0f 62 e3          	punpckldq %xmm3,%xmm4
    7fe4:	0f b6 5e 01          	movzbl 0x1(%rsi),%ebx
    7fe8:	66 0f 6e db          	movd   %ebx,%xmm3
    7fec:	0f b6 1e             	movzbl (%rsi),%ebx
    7fef:	66 0f 6e eb          	movd   %ebx,%xmm5
    7ff3:	66 0f 62 eb          	punpckldq %xmm3,%xmm5
    7ff7:	66 0f 6c ec          	punpcklqdq %xmm4,%xmm5
    7ffb:	66 0f db e8          	pand   %xmm0,%xmm5
    7fff:	66 0f 76 e9          	pcmpeqd %xmm1,%xmm5
    8003:	66 0f 70 dd d4       	pshufd $0xd4,%xmm5,%xmm3
    8008:	66 0f 73 f3 38       	psllq  $0x38,%xmm3
    800d:	66 0f 6f e3          	movdqa %xmm3,%xmm4
    8011:	66 0f 72 e4 1f       	psrad  $0x1f,%xmm4
    8016:	66 0f 70 e4 ed       	pshufd $0xed,%xmm4,%xmm4
    801b:	66 0f 72 e3 18       	psrad  $0x18,%xmm3
    8020:	66 0f 70 db ed       	pshufd $0xed,%xmm3,%xmm3
    8025:	66 0f 62 dc          	punpckldq %xmm4,%xmm3
    8029:	66 0f 70 e5 f6       	pshufd $0xf6,%xmm5,%xmm4
    802e:	66 0f db e2          	pand   %xmm2,%xmm4
    8032:	66 0f fb e3          	psubq  %xmm3,%xmm4
    8036:	48 83 c6 04          	add    $0x4,%rsi
    803a:	66 0f 70 dc 4e       	pshufd $0x4e,%xmm4,%xmm3
    803f:	66 0f d4 dc          	paddq  %xmm4,%xmm3
    8043:	66 48 0f 7e db       	movq   %xmm3,%rbx
    8048:	48 01 d8             	add    %rbx,%rax
    804b:	48 83 c7 04          	add    $0x4,%rdi
    804f:	0f 85 7b ff ff ff    	jne    7fd0 <_ZN4core3fmt9Formatter3pad17h7ef001ba65c2db9cE+0x300>
    8055:	48 85 d2             	test   %rdx,%rdx
    8058:	74 21                	je     807b <_ZN4core3fmt9Formatter3pad17h7ef001ba65c2db9cE+0x3ab>
    805a:	31 ff                	xor    %edi,%edi
    805c:	0f 1f 40 00          	nopl   0x0(%rax)
    8060:	0f b6 1c 3e          	movzbl (%rsi,%rdi,1),%ebx
    8064:	80 e3 c0             	and    $0xc0,%bl
    8067:	31 c9                	xor    %ecx,%ecx
    8069:	80 fb 80             	cmp    $0x80,%bl
    806c:	0f 94 c1             	sete   %cl
    806f:	48 01 c8             	add    %rcx,%rax
    8072:	48 83 c7 01          	add    $0x1,%rdi
    8076:	48 39 fa             	cmp    %rdi,%rdx
    8079:	75 e5                	jne    8060 <_ZN4core3fmt9Formatter3pad17h7ef001ba65c2db9cE+0x390>
    807b:	4c 29 f0             	sub    %r14,%rax
    807e:	4c 01 c0             	add    %r8,%rax
    8081:	41 8b 4d 38          	mov    0x38(%r13),%ecx
    8085:	80 f9 03             	cmp    $0x3,%cl
    8088:	0f 44 cd             	cmove  %ebp,%ecx
    808b:	0f b6 c9             	movzbl %cl,%ecx
    808e:	48 8d 15 bb 24 03 00 	lea    0x324bb(%rip),%rdx        # 3a550 <_ZN4core7unicode12unicode_data2cc19BITSET_INDEX_CHUNKS17h8a1f39cd536e9344E+0x90>
    8095:	48 63 0c 8a          	movslq (%rdx,%rcx,4),%rcx
    8099:	48 01 d1             	add    %rdx,%rcx
    809c:	48 89 c3             	mov    %rax,%rbx
    809f:	ff e1                	jmpq   *%rcx
    80a1:	31 db                	xor    %ebx,%ebx
    80a3:	48 89 c5             	mov    %rax,%rbp
    80a6:	eb 10                	jmp    80b8 <_ZN4core3fmt9Formatter3pad17h7ef001ba65c2db9cE+0x3e8>
    80a8:	48 89 c5             	mov    %rax,%rbp
    80ab:	48 d1 ed             	shr    %rbp
    80ae:	48 83 c0 01          	add    $0x1,%rax
    80b2:	48 d1 e8             	shr    %rax
    80b5:	48 89 c3             	mov    %rax,%rbx
    80b8:	48 83 c5 01          	add    $0x1,%rbp
    80bc:	0f 1f 40 00          	nopl   0x0(%rax)
    80c0:	48 83 c5 ff          	add    $0xffffffffffffffff,%rbp
    80c4:	74 18                	je     80de <_ZN4core3fmt9Formatter3pad17h7ef001ba65c2db9cE+0x40e>
    80c6:	49 8b 7d 20          	mov    0x20(%r13),%rdi
    80ca:	49 8b 45 28          	mov    0x28(%r13),%rax
    80ce:	41 8b 75 34          	mov    0x34(%r13),%esi
    80d2:	ff 50 20             	callq  *0x20(%rax)
    80d5:	84 c0                	test   %al,%al
    80d7:	74 e7                	je     80c0 <_ZN4core3fmt9Formatter3pad17h7ef001ba65c2db9cE+0x3f0>
    80d9:	41 b6 01             	mov    $0x1,%r14b
    80dc:	eb 4a                	jmp    8128 <_ZN4core3fmt9Formatter3pad17h7ef001ba65c2db9cE+0x458>
    80de:	45 8b 65 34          	mov    0x34(%r13),%r12d
    80e2:	49 8b 7d 20          	mov    0x20(%r13),%rdi
    80e6:	49 8b 45 28          	mov    0x28(%r13),%rax
    80ea:	4c 89 fe             	mov    %r15,%rsi
    80ed:	4c 89 f2             	mov    %r14,%rdx
    80f0:	ff 50 18             	callq  *0x18(%rax)
    80f3:	41 b6 01             	mov    $0x1,%r14b
    80f6:	84 c0                	test   %al,%al
    80f8:	75 2e                	jne    8128 <_ZN4core3fmt9Formatter3pad17h7ef001ba65c2db9cE+0x458>
    80fa:	4d 8b 7d 20          	mov    0x20(%r13),%r15
    80fe:	49 8b 6d 28          	mov    0x28(%r13),%rbp
    8102:	48 83 c3 01          	add    $0x1,%rbx
    8106:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    810d:	00 00 00 
    8110:	48 83 c3 ff          	add    $0xffffffffffffffff,%rbx
    8114:	74 0f                	je     8125 <_ZN4core3fmt9Formatter3pad17h7ef001ba65c2db9cE+0x455>
    8116:	4c 89 ff             	mov    %r15,%rdi
    8119:	44 89 e6             	mov    %r12d,%esi
    811c:	ff 55 20             	callq  *0x20(%rbp)
    811f:	84 c0                	test   %al,%al
    8121:	74 ed                	je     8110 <_ZN4core3fmt9Formatter3pad17h7ef001ba65c2db9cE+0x440>
    8123:	eb 03                	jmp    8128 <_ZN4core3fmt9Formatter3pad17h7ef001ba65c2db9cE+0x458>
    8125:	45 31 f6             	xor    %r14d,%r14d
    8128:	44 89 f0             	mov    %r14d,%eax
    812b:	48 83 c4 08          	add    $0x8,%rsp
    812f:	5b                   	pop    %rbx
    8130:	41 5c                	pop    %r12
    8132:	41 5d                	pop    %r13
    8134:	41 5e                	pop    %r14
    8136:	41 5f                	pop    %r15
    8138:	5d                   	pop    %rbp
    8139:	c3                   	retq   
    813a:	31 c0                	xor    %eax,%eax
    813c:	48 85 c0             	test   %rax,%rax
    813f:	4c 0f 45 f1          	cmovne %rcx,%r14
    8143:	4c 0f 45 f8          	cmovne %rax,%r15
    8147:	49 83 f8 01          	cmp    $0x1,%r8
    814b:	0f 84 dd fc ff ff    	je     7e2e <_ZN4core3fmt9Formatter3pad17h7ef001ba65c2db9cE+0x15e>
    8151:	49 8b 7d 20          	mov    0x20(%r13),%rdi
    8155:	49 8b 45 28          	mov    0x28(%r13),%rax
    8159:	48 8b 40 18          	mov    0x18(%rax),%rax
    815d:	4c 89 fe             	mov    %r15,%rsi
    8160:	4c 89 f2             	mov    %r14,%rdx
    8163:	48 83 c4 08          	add    $0x8,%rsp
    8167:	5b                   	pop    %rbx
    8168:	41 5c                	pop    %r12
    816a:	41 5d                	pop    %r13
    816c:	41 5e                	pop    %r14
    816e:	41 5f                	pop    %r15
    8170:	5d                   	pop    %rbp
    8171:	ff e0                	jmpq   *%rax
    8173:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    817a:	00 00 00 
    817d:	0f 1f 00             	nopl   (%rax)

0000000000008180 <_ZN4core3str16slice_error_fail17hc48083e4f6af7f4aE>:
    8180:	48 81 ec d8 00 00 00 	sub    $0xd8,%rsp
    8187:	48 89 94 24 c0 00 00 	mov    %rdx,0xc0(%rsp)
    818e:	00 
    818f:	48 89 8c 24 c8 00 00 	mov    %rcx,0xc8(%rsp)
    8196:	00 
    8197:	41 b0 01             	mov    $0x1,%r8b
    819a:	49 89 f2             	mov    %rsi,%r10
    819d:	48 81 fe 01 01 00 00 	cmp    $0x101,%rsi
    81a4:	72 45                	jb     81eb <_ZN4core3str16slice_error_fail17hc48083e4f6af7f4aE+0x6b>
    81a6:	41 b9 ff 00 00 00    	mov    $0xff,%r9d
    81ac:	49 29 f1             	sub    %rsi,%r9
    81af:	b8 00 01 00 00       	mov    $0x100,%eax
    81b4:	45 31 c0             	xor    %r8d,%r8d
    81b7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    81be:	00 00 
    81c0:	48 39 f0             	cmp    %rsi,%rax
    81c3:	73 06                	jae    81cb <_ZN4core3str16slice_error_fail17hc48083e4f6af7f4aE+0x4b>
    81c5:	80 3c 07 bf          	cmpb   $0xbf,(%rdi,%rax,1)
    81c9:	7f 1a                	jg     81e5 <_ZN4core3str16slice_error_fail17hc48083e4f6af7f4aE+0x65>
    81cb:	4c 8d 50 ff          	lea    -0x1(%rax),%r10
    81cf:	48 83 f8 01          	cmp    $0x1,%rax
    81d3:	74 16                	je     81eb <_ZN4core3str16slice_error_fail17hc48083e4f6af7f4aE+0x6b>
    81d5:	4c 01 c8             	add    %r9,%rax
    81d8:	48 3d 00 01 00 00    	cmp    $0x100,%rax
    81de:	4c 89 d0             	mov    %r10,%rax
    81e1:	75 dd                	jne    81c0 <_ZN4core3str16slice_error_fail17hc48083e4f6af7f4aE+0x40>
    81e3:	eb 06                	jmp    81eb <_ZN4core3str16slice_error_fail17hc48083e4f6af7f4aE+0x6b>
    81e5:	45 31 c0             	xor    %r8d,%r8d
    81e8:	49 89 c2             	mov    %rax,%r10
    81eb:	48 89 bc 24 a0 00 00 	mov    %rdi,0xa0(%rsp)
    81f2:	00 
    81f3:	4c 89 94 24 a8 00 00 	mov    %r10,0xa8(%rsp)
    81fa:	00 
    81fb:	4c 8d 0d 36 52 03 00 	lea    0x35236(%rip),%r9        # 3d438 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0xad8>
    8202:	4c 8d 15 c2 35 03 00 	lea    0x335c2(%rip),%r10        # 3b7cb <_ZN4core3str15UTF8_CHAR_WIDTH17h639c7c3d8ce7e983E+0x273>
    8209:	45 84 c0             	test   %r8b,%r8b
    820c:	4d 0f 45 d1          	cmovne %r9,%r10
    8210:	41 80 f0 01          	xor    $0x1,%r8b
    8214:	41 0f b6 c0          	movzbl %r8b,%eax
    8218:	48 8d 04 80          	lea    (%rax,%rax,4),%rax
    821c:	4c 89 94 24 b0 00 00 	mov    %r10,0xb0(%rsp)
    8223:	00 
    8224:	48 89 84 24 b8 00 00 	mov    %rax,0xb8(%rsp)
    822b:	00 
    822c:	48 39 f2             	cmp    %rsi,%rdx
    822f:	0f 87 2f 02 00 00    	ja     8464 <_ZN4core3str16slice_error_fail17hc48083e4f6af7f4aE+0x2e4>
    8235:	48 39 f1             	cmp    %rsi,%rcx
    8238:	0f 87 26 02 00 00    	ja     8464 <_ZN4core3str16slice_error_fail17hc48083e4f6af7f4aE+0x2e4>
    823e:	48 39 ca             	cmp    %rcx,%rdx
    8241:	0f 87 ae 02 00 00    	ja     84f5 <_ZN4core3str16slice_error_fail17hc48083e4f6af7f4aE+0x375>
    8247:	48 85 d2             	test   %rdx,%rdx
    824a:	74 0d                	je     8259 <_ZN4core3str16slice_error_fail17hc48083e4f6af7f4aE+0xd9>
    824c:	48 39 d6             	cmp    %rdx,%rsi
    824f:	74 08                	je     8259 <_ZN4core3str16slice_error_fail17hc48083e4f6af7f4aE+0xd9>
    8251:	76 09                	jbe    825c <_ZN4core3str16slice_error_fail17hc48083e4f6af7f4aE+0xdc>
    8253:	80 3c 17 c0          	cmpb   $0xc0,(%rdi,%rdx,1)
    8257:	7c 03                	jl     825c <_ZN4core3str16slice_error_fail17hc48083e4f6af7f4aE+0xdc>
    8259:	48 89 ca             	mov    %rcx,%rdx
    825c:	48 89 94 24 d0 00 00 	mov    %rdx,0xd0(%rsp)
    8263:	00 
    8264:	48 85 d2             	test   %rdx,%rdx
    8267:	74 36                	je     829f <_ZN4core3str16slice_error_fail17hc48083e4f6af7f4aE+0x11f>
    8269:	48 39 f2             	cmp    %rsi,%rdx
    826c:	74 31                	je     829f <_ZN4core3str16slice_error_fail17hc48083e4f6af7f4aE+0x11f>
    826e:	48 8d 4e 01          	lea    0x1(%rsi),%rcx
    8272:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    8279:	00 00 00 
    827c:	0f 1f 40 00          	nopl   0x0(%rax)
    8280:	48 39 f2             	cmp    %rsi,%rdx
    8283:	73 06                	jae    828b <_ZN4core3str16slice_error_fail17hc48083e4f6af7f4aE+0x10b>
    8285:	80 3c 17 c0          	cmpb   $0xc0,(%rdi,%rdx,1)
    8289:	7d 14                	jge    829f <_ZN4core3str16slice_error_fail17hc48083e4f6af7f4aE+0x11f>
    828b:	48 8d 42 ff          	lea    -0x1(%rdx),%rax
    828f:	48 83 fa 01          	cmp    $0x1,%rdx
    8293:	74 0d                	je     82a2 <_ZN4core3str16slice_error_fail17hc48083e4f6af7f4aE+0x122>
    8295:	48 39 d1             	cmp    %rdx,%rcx
    8298:	48 89 c2             	mov    %rax,%rdx
    829b:	75 e3                	jne    8280 <_ZN4core3str16slice_error_fail17hc48083e4f6af7f4aE+0x100>
    829d:	eb 03                	jmp    82a2 <_ZN4core3str16slice_error_fail17hc48083e4f6af7f4aE+0x122>
    829f:	48 89 d0             	mov    %rdx,%rax
    82a2:	48 39 f0             	cmp    %rsi,%rax
    82a5:	75 1a                	jne    82c1 <_ZN4core3str16slice_error_fail17hc48083e4f6af7f4aE+0x141>
    82a7:	48 8d 3d 73 50 03 00 	lea    0x35073(%rip),%rdi        # 3d321 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x9c1>
    82ae:	48 8d 15 1b e0 23 00 	lea    0x23e01b(%rip),%rdx        # 2462d0 <__init_array_end+0x2c0>
    82b5:	be 2b 00 00 00       	mov    $0x2b,%esi
    82ba:	e8 f1 f0 ff ff       	callq  73b0 <_ZN4core9panicking5panic17h6861470adfbddef8E>
    82bf:	0f 0b                	ud2    
    82c1:	48 8d 0c 07          	lea    (%rdi,%rax,1),%rcx
    82c5:	0f b6 11             	movzbl (%rcx),%edx
    82c8:	84 d2                	test   %dl,%dl
    82ca:	78 13                	js     82df <_ZN4core3str16slice_error_fail17hc48083e4f6af7f4aE+0x15f>
    82cc:	89 54 24 0c          	mov    %edx,0xc(%rsp)
    82d0:	48 8d 54 24 10       	lea    0x10(%rsp),%rdx
    82d5:	be 01 00 00 00       	mov    $0x1,%esi
    82da:	e9 bd 00 00 00       	jmpq   839c <_ZN4core3str16slice_error_fail17hc48083e4f6af7f4aE+0x21c>
    82df:	48 01 f7             	add    %rsi,%rdi
    82e2:	48 8d 71 01          	lea    0x1(%rcx),%rsi
    82e6:	45 31 d2             	xor    %r10d,%r10d
    82e9:	49 89 f8             	mov    %rdi,%r8
    82ec:	48 39 fe             	cmp    %rdi,%rsi
    82ef:	74 10                	je     8301 <_ZN4core3str16slice_error_fail17hc48083e4f6af7f4aE+0x181>
    82f1:	44 0f b6 51 01       	movzbl 0x1(%rcx),%r10d
    82f6:	48 83 c1 02          	add    $0x2,%rcx
    82fa:	41 83 e2 3f          	and    $0x3f,%r10d
    82fe:	49 89 c8             	mov    %rcx,%r8
    8301:	89 d6                	mov    %edx,%esi
    8303:	83 e6 1f             	and    $0x1f,%esi
    8306:	80 fa df             	cmp    $0xdf,%dl
    8309:	76 50                	jbe    835b <_ZN4core3str16slice_error_fail17hc48083e4f6af7f4aE+0x1db>
    830b:	31 c9                	xor    %ecx,%ecx
    830d:	49 89 f9             	mov    %rdi,%r9
    8310:	49 39 f8             	cmp    %rdi,%r8
    8313:	74 0e                	je     8323 <_ZN4core3str16slice_error_fail17hc48083e4f6af7f4aE+0x1a3>
    8315:	41 0f b6 08          	movzbl (%r8),%ecx
    8319:	49 83 c0 01          	add    $0x1,%r8
    831d:	83 e1 3f             	and    $0x3f,%ecx
    8320:	4d 89 c1             	mov    %r8,%r9
    8323:	41 c1 e2 06          	shl    $0x6,%r10d
    8327:	41 09 ca             	or     %ecx,%r10d
    832a:	80 fa f0             	cmp    $0xf0,%dl
    832d:	72 31                	jb     8360 <_ZN4core3str16slice_error_fail17hc48083e4f6af7f4aE+0x1e0>
    832f:	31 c9                	xor    %ecx,%ecx
    8331:	49 39 f9             	cmp    %rdi,%r9
    8334:	74 07                	je     833d <_ZN4core3str16slice_error_fail17hc48083e4f6af7f4aE+0x1bd>
    8336:	41 0f b6 09          	movzbl (%r9),%ecx
    833a:	83 e1 3f             	and    $0x3f,%ecx
    833d:	83 e6 07             	and    $0x7,%esi
    8340:	c1 e6 12             	shl    $0x12,%esi
    8343:	41 c1 e2 06          	shl    $0x6,%r10d
    8347:	41 09 f2             	or     %esi,%r10d
    834a:	41 09 ca             	or     %ecx,%r10d
    834d:	41 81 fa 00 00 11 00 	cmp    $0x110000,%r10d
    8354:	75 10                	jne    8366 <_ZN4core3str16slice_error_fail17hc48083e4f6af7f4aE+0x1e6>
    8356:	e9 4c ff ff ff       	jmpq   82a7 <_ZN4core3str16slice_error_fail17hc48083e4f6af7f4aE+0x127>
    835b:	c1 e6 06             	shl    $0x6,%esi
    835e:	eb 03                	jmp    8363 <_ZN4core3str16slice_error_fail17hc48083e4f6af7f4aE+0x1e3>
    8360:	c1 e6 0c             	shl    $0xc,%esi
    8363:	41 09 f2             	or     %esi,%r10d
    8366:	44 89 54 24 0c       	mov    %r10d,0xc(%rsp)
    836b:	48 8d 54 24 10       	lea    0x10(%rsp),%rdx
    8370:	be 01 00 00 00       	mov    $0x1,%esi
    8375:	41 81 fa 80 00 00 00 	cmp    $0x80,%r10d
    837c:	72 1e                	jb     839c <_ZN4core3str16slice_error_fail17hc48083e4f6af7f4aE+0x21c>
    837e:	be 02 00 00 00       	mov    $0x2,%esi
    8383:	41 81 fa 00 08 00 00 	cmp    $0x800,%r10d
    838a:	72 10                	jb     839c <_ZN4core3str16slice_error_fail17hc48083e4f6af7f4aE+0x21c>
    838c:	41 81 fa 00 00 01 00 	cmp    $0x10000,%r10d
    8393:	be 04 00 00 00       	mov    $0x4,%esi
    8398:	48 83 de 00          	sbb    $0x0,%rsi
    839c:	48 01 c6             	add    %rax,%rsi
    839f:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    83a4:	48 89 74 24 18       	mov    %rsi,0x18(%rsp)
    83a9:	48 8d 84 24 d0 00 00 	lea    0xd0(%rsp),%rax
    83b0:	00 
    83b1:	48 89 44 24 50       	mov    %rax,0x50(%rsp)
    83b6:	48 8d 05 c3 f0 ff ff 	lea    -0xf3d(%rip),%rax        # 7480 <_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$u64$GT$3fmt17h29103e8b1c853837E>
    83bd:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
    83c2:	48 8d 44 24 0c       	lea    0xc(%rsp),%rax
    83c7:	48 89 44 24 60       	mov    %rax,0x60(%rsp)
    83cc:	48 8d 05 cd 01 00 00 	lea    0x1cd(%rip),%rax        # 85a0 <_ZN41_$LT$char$u20$as$u20$core..fmt..Debug$GT$3fmt17hfae621a96f786e62E>
    83d3:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
    83d8:	48 89 54 24 70       	mov    %rdx,0x70(%rsp)
    83dd:	48 8d 05 ac 03 00 00 	lea    0x3ac(%rip),%rax        # 8790 <_ZN71_$LT$core..ops..range..Range$LT$Idx$GT$$u20$as$u20$core..fmt..Debug$GT$3fmt17h057db709cc0963edE>
    83e4:	48 89 44 24 78       	mov    %rax,0x78(%rsp)
    83e9:	48 8d 84 24 a0 00 00 	lea    0xa0(%rsp),%rax
    83f0:	00 
    83f1:	48 89 84 24 80 00 00 	mov    %rax,0x80(%rsp)
    83f8:	00 
    83f9:	48 8d 05 00 cf 01 00 	lea    0x1cf00(%rip),%rax        # 25300 <_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h9716022a15e5b13cE>
    8400:	48 89 84 24 88 00 00 	mov    %rax,0x88(%rsp)
    8407:	00 
    8408:	48 8d 8c 24 b0 00 00 	lea    0xb0(%rsp),%rcx
    840f:	00 
    8410:	48 89 8c 24 90 00 00 	mov    %rcx,0x90(%rsp)
    8417:	00 
    8418:	48 89 84 24 98 00 00 	mov    %rax,0x98(%rsp)
    841f:	00 
    8420:	48 8d 05 c1 de 23 00 	lea    0x23dec1(%rip),%rax        # 2462e8 <__init_array_end+0x2d8>
    8427:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
    842c:	48 c7 44 24 28 05 00 	movq   $0x5,0x28(%rsp)
    8433:	00 00 
    8435:	48 c7 44 24 30 00 00 	movq   $0x0,0x30(%rsp)
    843c:	00 00 
    843e:	48 8d 44 24 50       	lea    0x50(%rsp),%rax
    8443:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
    8448:	48 c7 44 24 48 05 00 	movq   $0x5,0x48(%rsp)
    844f:	00 00 
    8451:	48 8d 35 e0 de 23 00 	lea    0x23dee0(%rip),%rsi        # 246338 <__init_array_end+0x328>
    8458:	48 8d 7c 24 20       	lea    0x20(%rsp),%rdi
    845d:	e8 4e f1 ff ff       	callq  75b0 <_ZN4core9panicking9panic_fmt17he168e49e4b05d288E>
    8462:	0f 0b                	ud2    
    8464:	48 39 f2             	cmp    %rsi,%rdx
    8467:	48 0f 47 ca          	cmova  %rdx,%rcx
    846b:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
    8470:	48 8d 44 24 10       	lea    0x10(%rsp),%rax
    8475:	48 89 44 24 50       	mov    %rax,0x50(%rsp)
    847a:	48 8d 05 ff ef ff ff 	lea    -0x1001(%rip),%rax        # 7480 <_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$u64$GT$3fmt17h29103e8b1c853837E>
    8481:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
    8486:	48 8d 84 24 a0 00 00 	lea    0xa0(%rsp),%rax
    848d:	00 
    848e:	48 89 44 24 60       	mov    %rax,0x60(%rsp)
    8493:	48 8d 05 66 ce 01 00 	lea    0x1ce66(%rip),%rax        # 25300 <_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h9716022a15e5b13cE>
    849a:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
    849f:	48 8d 8c 24 b0 00 00 	lea    0xb0(%rsp),%rcx
    84a6:	00 
    84a7:	48 89 4c 24 70       	mov    %rcx,0x70(%rsp)
    84ac:	48 89 44 24 78       	mov    %rax,0x78(%rsp)
    84b1:	48 8d 05 78 dd 23 00 	lea    0x23dd78(%rip),%rax        # 246230 <__init_array_end+0x220>
    84b8:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
    84bd:	48 c7 44 24 28 03 00 	movq   $0x3,0x28(%rsp)
    84c4:	00 00 
    84c6:	48 c7 44 24 30 00 00 	movq   $0x0,0x30(%rsp)
    84cd:	00 00 
    84cf:	48 8d 44 24 50       	lea    0x50(%rsp),%rax
    84d4:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
    84d9:	48 c7 44 24 48 03 00 	movq   $0x3,0x48(%rsp)
    84e0:	00 00 
    84e2:	48 8d 35 77 dd 23 00 	lea    0x23dd77(%rip),%rsi        # 246260 <__init_array_end+0x250>
    84e9:	48 8d 7c 24 20       	lea    0x20(%rsp),%rdi
    84ee:	e8 bd f0 ff ff       	callq  75b0 <_ZN4core9panicking9panic_fmt17he168e49e4b05d288E>
    84f3:	0f 0b                	ud2    
    84f5:	48 8d 84 24 c0 00 00 	lea    0xc0(%rsp),%rax
    84fc:	00 
    84fd:	48 89 44 24 50       	mov    %rax,0x50(%rsp)
    8502:	48 8d 05 77 ef ff ff 	lea    -0x1089(%rip),%rax        # 7480 <_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$u64$GT$3fmt17h29103e8b1c853837E>
    8509:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
    850e:	48 8d 8c 24 c8 00 00 	lea    0xc8(%rsp),%rcx
    8515:	00 
    8516:	48 89 4c 24 60       	mov    %rcx,0x60(%rsp)
    851b:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
    8520:	48 8d 84 24 a0 00 00 	lea    0xa0(%rsp),%rax
    8527:	00 
    8528:	48 89 44 24 70       	mov    %rax,0x70(%rsp)
    852d:	48 8d 05 cc cd 01 00 	lea    0x1cdcc(%rip),%rax        # 25300 <_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h9716022a15e5b13cE>
    8534:	48 89 44 24 78       	mov    %rax,0x78(%rsp)
    8539:	48 8d 8c 24 b0 00 00 	lea    0xb0(%rsp),%rcx
    8540:	00 
    8541:	48 89 8c 24 80 00 00 	mov    %rcx,0x80(%rsp)
    8548:	00 
    8549:	48 89 84 24 88 00 00 	mov    %rax,0x88(%rsp)
    8550:	00 
    8551:	48 8d 05 20 dd 23 00 	lea    0x23dd20(%rip),%rax        # 246278 <__init_array_end+0x268>
    8558:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
    855d:	48 c7 44 24 28 04 00 	movq   $0x4,0x28(%rsp)
    8564:	00 00 
    8566:	48 c7 44 24 30 00 00 	movq   $0x0,0x30(%rsp)
    856d:	00 00 
    856f:	48 8d 44 24 50       	lea    0x50(%rsp),%rax
    8574:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
    8579:	48 c7 44 24 48 04 00 	movq   $0x4,0x48(%rsp)
    8580:	00 00 
    8582:	48 8d 35 2f dd 23 00 	lea    0x23dd2f(%rip),%rsi        # 2462b8 <__init_array_end+0x2a8>
    8589:	48 8d 7c 24 20       	lea    0x20(%rsp),%rdi
    858e:	e8 1d f0 ff ff       	callq  75b0 <_ZN4core9panicking9panic_fmt17he168e49e4b05d288E>
    8593:	0f 0b                	ud2    
    8595:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    859c:	00 00 00 
    859f:	90                   	nop

00000000000085a0 <_ZN41_$LT$char$u20$as$u20$core..fmt..Debug$GT$3fmt17hfae621a96f786e62E>:
    85a0:	55                   	push   %rbp
    85a1:	41 57                	push   %r15
    85a3:	41 56                	push   %r14
    85a5:	41 55                	push   %r13
    85a7:	41 54                	push   %r12
    85a9:	53                   	push   %rbx
    85aa:	48 83 ec 28          	sub    $0x28,%rsp
    85ae:	49 89 f7             	mov    %rsi,%r15
    85b1:	48 89 fb             	mov    %rdi,%rbx
    85b4:	48 8b 7e 20          	mov    0x20(%rsi),%rdi
    85b8:	48 8b 46 28          	mov    0x28(%rsi),%rax
    85bc:	be 27 00 00 00       	mov    $0x27,%esi
    85c1:	ff 50 20             	callq  *0x20(%rax)
    85c4:	84 c0                	test   %al,%al
    85c6:	74 11                	je     85d9 <_ZN41_$LT$char$u20$as$u20$core..fmt..Debug$GT$3fmt17hfae621a96f786e62E+0x39>
    85c8:	b0 01                	mov    $0x1,%al
    85ca:	48 83 c4 28          	add    $0x28,%rsp
    85ce:	5b                   	pop    %rbx
    85cf:	41 5c                	pop    %r12
    85d1:	41 5d                	pop    %r13
    85d3:	41 5e                	pop    %r14
    85d5:	41 5f                	pop    %r15
    85d7:	5d                   	pop    %rbp
    85d8:	c3                   	retq   
    85d9:	8b 33                	mov    (%rbx),%esi
    85db:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
    85e0:	e8 2b 08 00 00       	callq  8e10 <_ZN4core4char7methods22_$LT$impl$u20$char$GT$16escape_debug_ext17hfbb695d8f3fda62eE>
    85e5:	8b 6c 24 10          	mov    0x10(%rsp),%ebp
    85e9:	44 8b 6c 24 14       	mov    0x14(%rsp),%r13d
    85ee:	4c 8b 74 24 18       	mov    0x18(%rsp),%r14
    85f3:	8b 44 24 20          	mov    0x20(%rsp),%eax
    85f7:	89 44 24 0c          	mov    %eax,0xc(%rsp)
    85fb:	8a 5c 24 24          	mov    0x24(%rsp),%bl
    85ff:	41 81 fd 00 00 11 00 	cmp    $0x110000,%r13d
    8606:	0f 85 9c 00 00 00    	jne    86a8 <_ZN41_$LT$char$u20$as$u20$core..fmt..Debug$GT$3fmt17hfae621a96f786e62E+0x108>
    860c:	4c 8d 25 75 1f 03 00 	lea    0x31f75(%rip),%r12        # 3a588 <_ZN4core7unicode12unicode_data2cc19BITSET_INDEX_CHUNKS17h8a1f39cd536e9344E+0xc8>
    8613:	45 31 ed             	xor    %r13d,%r13d
    8616:	83 fd 02             	cmp    $0x2,%ebp
    8619:	0f 82 4a 01 00 00    	jb     8769 <_ZN41_$LT$char$u20$as$u20$core..fmt..Debug$GT$3fmt17hfae621a96f786e62E+0x1c9>
    861f:	bd 01 00 00 00       	mov    $0x1,%ebp
    8624:	be 5c 00 00 00       	mov    $0x5c,%esi
    8629:	74 65                	je     8690 <_ZN41_$LT$char$u20$as$u20$core..fmt..Debug$GT$3fmt17hfae621a96f786e62E+0xf0>
    862b:	bd 03 00 00 00       	mov    $0x3,%ebp
    8630:	0f b6 c3             	movzbl %bl,%eax
    8633:	49 63 04 84          	movslq (%r12,%rax,4),%rax
    8637:	4c 01 e0             	add    %r12,%rax
    863a:	b3 04                	mov    $0x4,%bl
    863c:	ff e0                	jmpq   *%rax
    863e:	be 7d 00 00 00       	mov    $0x7d,%esi
    8643:	31 db                	xor    %ebx,%ebx
    8645:	eb 49                	jmp    8690 <_ZN41_$LT$char$u20$as$u20$core..fmt..Debug$GT$3fmt17hfae621a96f786e62E+0xf0>
    8647:	49 83 fe 01          	cmp    $0x1,%r14
    864b:	b3 02                	mov    $0x2,%bl
    864d:	80 db 00             	sbb    $0x0,%bl
    8650:	4c 89 f0             	mov    %r14,%rax
    8653:	48 83 e8 01          	sub    $0x1,%rax
    8657:	49 0f 42 c5          	cmovb  %r13,%rax
    865b:	41 c1 e6 02          	shl    $0x2,%r14d
    865f:	8b 4c 24 0c          	mov    0xc(%rsp),%ecx
    8663:	89 ca                	mov    %ecx,%edx
    8665:	44 89 f1             	mov    %r14d,%ecx
    8668:	d3 ea                	shr    %cl,%edx
    866a:	83 e2 0f             	and    $0xf,%edx
    866d:	8d 4a 30             	lea    0x30(%rdx),%ecx
    8670:	89 d6                	mov    %edx,%esi
    8672:	83 c6 57             	add    $0x57,%esi
    8675:	80 fa 0a             	cmp    $0xa,%dl
    8678:	0f 42 f1             	cmovb  %ecx,%esi
    867b:	49 89 c6             	mov    %rax,%r14
    867e:	eb 10                	jmp    8690 <_ZN41_$LT$char$u20$as$u20$core..fmt..Debug$GT$3fmt17hfae621a96f786e62E+0xf0>
    8680:	b3 02                	mov    $0x2,%bl
    8682:	be 7b 00 00 00       	mov    $0x7b,%esi
    8687:	eb 07                	jmp    8690 <_ZN41_$LT$char$u20$as$u20$core..fmt..Debug$GT$3fmt17hfae621a96f786e62E+0xf0>
    8689:	b3 03                	mov    $0x3,%bl
    868b:	be 75 00 00 00       	mov    $0x75,%esi
    8690:	49 8b 7f 20          	mov    0x20(%r15),%rdi
    8694:	49 8b 47 28          	mov    0x28(%r15),%rax
    8698:	ff 50 20             	callq  *0x20(%rax)
    869b:	84 c0                	test   %al,%al
    869d:	0f 84 73 ff ff ff    	je     8616 <_ZN41_$LT$char$u20$as$u20$core..fmt..Debug$GT$3fmt17hfae621a96f786e62E+0x76>
    86a3:	e9 20 ff ff ff       	jmpq   85c8 <_ZN41_$LT$char$u20$as$u20$core..fmt..Debug$GT$3fmt17hfae621a96f786e62E+0x28>
    86a8:	4c 8d 25 b1 1e 03 00 	lea    0x31eb1(%rip),%r12        # 3a560 <_ZN4core7unicode12unicode_data2cc19BITSET_INDEX_CHUNKS17h8a1f39cd536e9344E+0xa0>
    86af:	eb 27                	jmp    86d8 <_ZN41_$LT$char$u20$as$u20$core..fmt..Debug$GT$3fmt17hfae621a96f786e62E+0x138>
    86b1:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    86b8:	00 00 00 
    86bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    86c0:	31 ed                	xor    %ebp,%ebp
    86c2:	44 89 ee             	mov    %r13d,%esi
    86c5:	49 8b 7f 20          	mov    0x20(%r15),%rdi
    86c9:	49 8b 47 28          	mov    0x28(%r15),%rax
    86cd:	ff 50 20             	callq  *0x20(%rax)
    86d0:	84 c0                	test   %al,%al
    86d2:	0f 85 f0 fe ff ff    	jne    85c8 <_ZN41_$LT$char$u20$as$u20$core..fmt..Debug$GT$3fmt17hfae621a96f786e62E+0x28>
    86d8:	be 5c 00 00 00       	mov    $0x5c,%esi
    86dd:	89 e8                	mov    %ebp,%eax
    86df:	49 63 04 84          	movslq (%r12,%rax,4),%rax
    86e3:	4c 01 e0             	add    %r12,%rax
    86e6:	bd 01 00 00 00       	mov    $0x1,%ebp
    86eb:	ff e0                	jmpq   *%rax
    86ed:	bd 03 00 00 00       	mov    $0x3,%ebp
    86f2:	0f b6 c3             	movzbl %bl,%eax
    86f5:	48 8d 0d 74 1e 03 00 	lea    0x31e74(%rip),%rcx        # 3a570 <_ZN4core7unicode12unicode_data2cc19BITSET_INDEX_CHUNKS17h8a1f39cd536e9344E+0xb0>
    86fc:	48 63 04 81          	movslq (%rcx,%rax,4),%rax
    8700:	48 01 c8             	add    %rcx,%rax
    8703:	b3 04                	mov    $0x4,%bl
    8705:	ff e0                	jmpq   *%rax
    8707:	be 7d 00 00 00       	mov    $0x7d,%esi
    870c:	31 db                	xor    %ebx,%ebx
    870e:	eb b5                	jmp    86c5 <_ZN41_$LT$char$u20$as$u20$core..fmt..Debug$GT$3fmt17hfae621a96f786e62E+0x125>
    8710:	49 83 fe 01          	cmp    $0x1,%r14
    8714:	b3 02                	mov    $0x2,%bl
    8716:	80 db 00             	sbb    $0x0,%bl
    8719:	4c 89 f0             	mov    %r14,%rax
    871c:	48 83 e8 01          	sub    $0x1,%rax
    8720:	b9 00 00 00 00       	mov    $0x0,%ecx
    8725:	48 0f 42 c1          	cmovb  %rcx,%rax
    8729:	41 c1 e6 02          	shl    $0x2,%r14d
    872d:	8b 4c 24 0c          	mov    0xc(%rsp),%ecx
    8731:	89 ca                	mov    %ecx,%edx
    8733:	44 89 f1             	mov    %r14d,%ecx
    8736:	d3 ea                	shr    %cl,%edx
    8738:	83 e2 0f             	and    $0xf,%edx
    873b:	8d 4a 30             	lea    0x30(%rdx),%ecx
    873e:	89 d6                	mov    %edx,%esi
    8740:	83 c6 57             	add    $0x57,%esi
    8743:	80 fa 0a             	cmp    $0xa,%dl
    8746:	0f 42 f1             	cmovb  %ecx,%esi
    8749:	49 89 c6             	mov    %rax,%r14
    874c:	e9 74 ff ff ff       	jmpq   86c5 <_ZN41_$LT$char$u20$as$u20$core..fmt..Debug$GT$3fmt17hfae621a96f786e62E+0x125>
    8751:	b3 02                	mov    $0x2,%bl
    8753:	be 7b 00 00 00       	mov    $0x7b,%esi
    8758:	e9 68 ff ff ff       	jmpq   86c5 <_ZN41_$LT$char$u20$as$u20$core..fmt..Debug$GT$3fmt17hfae621a96f786e62E+0x125>
    875d:	b3 03                	mov    $0x3,%bl
    875f:	be 75 00 00 00       	mov    $0x75,%esi
    8764:	e9 5c ff ff ff       	jmpq   86c5 <_ZN41_$LT$char$u20$as$u20$core..fmt..Debug$GT$3fmt17hfae621a96f786e62E+0x125>
    8769:	49 8b 7f 20          	mov    0x20(%r15),%rdi
    876d:	49 8b 47 28          	mov    0x28(%r15),%rax
    8771:	48 8b 40 20          	mov    0x20(%rax),%rax
    8775:	be 27 00 00 00       	mov    $0x27,%esi
    877a:	48 83 c4 28          	add    $0x28,%rsp
    877e:	5b                   	pop    %rbx
    877f:	41 5c                	pop    %r12
    8781:	41 5d                	pop    %r13
    8783:	41 5e                	pop    %r14
    8785:	41 5f                	pop    %r15
    8787:	5d                   	pop    %rbp
    8788:	ff e0                	jmpq   *%rax
    878a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000008790 <_ZN71_$LT$core..ops..range..Range$LT$Idx$GT$$u20$as$u20$core..fmt..Debug$GT$3fmt17h057db709cc0963edE>:
    8790:	41 56                	push   %r14
    8792:	53                   	push   %rbx
    8793:	48 83 ec 38          	sub    $0x38,%rsp
    8797:	48 89 f3             	mov    %rsi,%rbx
    879a:	49 89 fe             	mov    %rdi,%r14
    879d:	e8 6e 00 00 00       	callq  8810 <_ZN4core3fmt3num52_$LT$impl$u20$core..fmt..Debug$u20$for$u20$usize$GT$3fmt17h68ab9e58238c0956E>
    87a2:	84 c0                	test   %al,%al
    87a4:	75 49                	jne    87ef <_ZN71_$LT$core..ops..range..Range$LT$Idx$GT$$u20$as$u20$core..fmt..Debug$GT$3fmt17h057db709cc0963edE+0x5f>
    87a6:	48 8b 7b 20          	mov    0x20(%rbx),%rdi
    87aa:	48 8b 73 28          	mov    0x28(%rbx),%rsi
    87ae:	48 8d 05 9b db 23 00 	lea    0x23db9b(%rip),%rax        # 246350 <__init_array_end+0x340>
    87b5:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    87ba:	48 c7 44 24 10 01 00 	movq   $0x1,0x10(%rsp)
    87c1:	00 00 
    87c3:	48 c7 44 24 18 00 00 	movq   $0x0,0x18(%rsp)
    87ca:	00 00 
    87cc:	48 8d 05 65 4c 03 00 	lea    0x34c65(%rip),%rax        # 3d438 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0xad8>
    87d3:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    87d8:	48 c7 44 24 30 00 00 	movq   $0x0,0x30(%rsp)
    87df:	00 00 
    87e1:	48 8d 54 24 08       	lea    0x8(%rsp),%rdx
    87e6:	e8 45 02 00 00       	callq  8a30 <_ZN4core3fmt5write17h0db54a985afb558eE>
    87eb:	84 c0                	test   %al,%al
    87ed:	74 0a                	je     87f9 <_ZN71_$LT$core..ops..range..Range$LT$Idx$GT$$u20$as$u20$core..fmt..Debug$GT$3fmt17h057db709cc0963edE+0x69>
    87ef:	b0 01                	mov    $0x1,%al
    87f1:	48 83 c4 38          	add    $0x38,%rsp
    87f5:	5b                   	pop    %rbx
    87f6:	41 5e                	pop    %r14
    87f8:	c3                   	retq   
    87f9:	49 83 c6 08          	add    $0x8,%r14
    87fd:	4c 89 f7             	mov    %r14,%rdi
    8800:	48 89 de             	mov    %rbx,%rsi
    8803:	48 83 c4 38          	add    $0x38,%rsp
    8807:	5b                   	pop    %rbx
    8808:	41 5e                	pop    %r14
    880a:	e9 01 00 00 00       	jmpq   8810 <_ZN4core3fmt3num52_$LT$impl$u20$core..fmt..Debug$u20$for$u20$usize$GT$3fmt17h68ab9e58238c0956E>
    880f:	90                   	nop

0000000000008810 <_ZN4core3fmt3num52_$LT$impl$u20$core..fmt..Debug$u20$for$u20$usize$GT$3fmt17h68ab9e58238c0956E>:
    8810:	48 81 ec 88 00 00 00 	sub    $0x88,%rsp
    8817:	49 89 f2             	mov    %rsi,%r10
    881a:	8b 46 30             	mov    0x30(%rsi),%eax
    881d:	a8 10                	test   $0x10,%al
    881f:	0f 85 dc 00 00 00    	jne    8901 <_ZN4core3fmt3num52_$LT$impl$u20$core..fmt..Debug$u20$for$u20$usize$GT$3fmt17h68ab9e58238c0956E+0xf1>
    8825:	48 8b 0f             	mov    (%rdi),%rcx
    8828:	a8 20                	test   $0x20,%al
    882a:	0f 85 20 01 00 00    	jne    8950 <_ZN4core3fmt3num52_$LT$impl$u20$core..fmt..Debug$u20$for$u20$usize$GT$3fmt17h68ab9e58238c0956E+0x140>
    8830:	41 bb 27 00 00 00    	mov    $0x27,%r11d
    8836:	48 81 f9 10 27 00 00 	cmp    $0x2710,%rcx
    883d:	0f 82 7d 01 00 00    	jb     89c0 <_ZN4core3fmt3num52_$LT$impl$u20$core..fmt..Debug$u20$for$u20$usize$GT$3fmt17h68ab9e58238c0956E+0x1b0>
    8843:	41 bb 27 00 00 00    	mov    $0x27,%r11d
    8849:	49 b8 4b 59 86 38 d6 	movabs $0x346dc5d63886594b,%r8
    8850:	c5 6d 34 
    8853:	4c 8d 0d 10 2e 03 00 	lea    0x32e10(%rip),%r9        # 3b66a <_ZN4core3str15UTF8_CHAR_WIDTH17h639c7c3d8ce7e983E+0x112>
    885a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    8860:	48 89 c8             	mov    %rcx,%rax
    8863:	49 f7 e0             	mul    %r8
    8866:	48 c1 ea 0b          	shr    $0xb,%rdx
    886a:	69 c2 10 27 00 00    	imul   $0x2710,%edx,%eax
    8870:	89 ce                	mov    %ecx,%esi
    8872:	29 c6                	sub    %eax,%esi
    8874:	0f b7 c6             	movzwl %si,%eax
    8877:	c1 e8 02             	shr    $0x2,%eax
    887a:	69 c0 7b 14 00 00    	imul   $0x147b,%eax,%eax
    8880:	c1 e8 11             	shr    $0x11,%eax
    8883:	6b f8 64             	imul   $0x64,%eax,%edi
    8886:	29 fe                	sub    %edi,%esi
    8888:	0f b7 f6             	movzwl %si,%esi
    888b:	41 0f b7 04 41       	movzwl (%r9,%rax,2),%eax
    8890:	66 42 89 44 1c 04    	mov    %ax,0x4(%rsp,%r11,1)
    8896:	41 0f b7 04 71       	movzwl (%r9,%rsi,2),%eax
    889b:	66 42 89 44 1c 06    	mov    %ax,0x6(%rsp,%r11,1)
    88a1:	49 83 c3 fc          	add    $0xfffffffffffffffc,%r11
    88a5:	48 81 f9 ff e0 f5 05 	cmp    $0x5f5e0ff,%rcx
    88ac:	48 89 d1             	mov    %rdx,%rcx
    88af:	77 af                	ja     8860 <_ZN4core3fmt3num52_$LT$impl$u20$core..fmt..Debug$u20$for$u20$usize$GT$3fmt17h68ab9e58238c0956E+0x50>
    88b1:	48 83 fa 63          	cmp    $0x63,%rdx
    88b5:	7e 2f                	jle    88e6 <_ZN4core3fmt3num52_$LT$impl$u20$core..fmt..Debug$u20$for$u20$usize$GT$3fmt17h68ab9e58238c0956E+0xd6>
    88b7:	0f b7 c2             	movzwl %dx,%eax
    88ba:	c1 e8 02             	shr    $0x2,%eax
    88bd:	69 c0 7b 14 00 00    	imul   $0x147b,%eax,%eax
    88c3:	c1 e8 11             	shr    $0x11,%eax
    88c6:	6b c8 64             	imul   $0x64,%eax,%ecx
    88c9:	29 ca                	sub    %ecx,%edx
    88cb:	0f b7 ca             	movzwl %dx,%ecx
    88ce:	48 8d 15 95 2d 03 00 	lea    0x32d95(%rip),%rdx        # 3b66a <_ZN4core3str15UTF8_CHAR_WIDTH17h639c7c3d8ce7e983E+0x112>
    88d5:	0f b7 0c 4a          	movzwl (%rdx,%rcx,2),%ecx
    88d9:	66 42 89 4c 1c 06    	mov    %cx,0x6(%rsp,%r11,1)
    88df:	49 83 c3 fe          	add    $0xfffffffffffffffe,%r11
    88e3:	48 89 c2             	mov    %rax,%rdx
    88e6:	48 83 fa 0a          	cmp    $0xa,%rdx
    88ea:	0f 8d e2 00 00 00    	jge    89d2 <_ZN4core3fmt3num52_$LT$impl$u20$core..fmt..Debug$u20$for$u20$usize$GT$3fmt17h68ab9e58238c0956E+0x1c2>
    88f0:	80 c2 30             	add    $0x30,%dl
    88f3:	42 88 54 1c 07       	mov    %dl,0x7(%rsp,%r11,1)
    88f8:	49 83 c3 ff          	add    $0xffffffffffffffff,%r11
    88fc:	e9 e6 00 00 00       	jmpq   89e7 <_ZN4core3fmt3num52_$LT$impl$u20$core..fmt..Debug$u20$for$u20$usize$GT$3fmt17h68ab9e58238c0956E+0x1d7>
    8901:	48 8b 0f             	mov    (%rdi),%rcx
    8904:	4c 8d 84 24 88 00 00 	lea    0x88(%rsp),%r8
    890b:	00 
    890c:	45 31 c9             	xor    %r9d,%r9d
    890f:	48 89 c8             	mov    %rcx,%rax
    8912:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    8919:	00 00 00 
    891c:	0f 1f 40 00          	nopl   0x0(%rax)
    8920:	48 c1 e8 04          	shr    $0x4,%rax
    8924:	80 e1 0f             	and    $0xf,%cl
    8927:	8d 51 30             	lea    0x30(%rcx),%edx
    892a:	8d 71 57             	lea    0x57(%rcx),%esi
    892d:	80 f9 0a             	cmp    $0xa,%cl
    8930:	0f b6 ca             	movzbl %dl,%ecx
    8933:	40 0f b6 d6          	movzbl %sil,%edx
    8937:	0f 42 d1             	cmovb  %ecx,%edx
    893a:	41 88 50 ff          	mov    %dl,-0x1(%r8)
    893e:	49 83 c0 ff          	add    $0xffffffffffffffff,%r8
    8942:	49 83 c1 01          	add    $0x1,%r9
    8946:	48 89 c1             	mov    %rax,%rcx
    8949:	48 85 c0             	test   %rax,%rax
    894c:	75 d2                	jne    8920 <_ZN4core3fmt3num52_$LT$impl$u20$core..fmt..Debug$u20$for$u20$usize$GT$3fmt17h68ab9e58238c0956E+0x110>
    894e:	eb 3e                	jmp    898e <_ZN4core3fmt3num52_$LT$impl$u20$core..fmt..Debug$u20$for$u20$usize$GT$3fmt17h68ab9e58238c0956E+0x17e>
    8950:	4c 8d 84 24 88 00 00 	lea    0x88(%rsp),%r8
    8957:	00 
    8958:	45 31 c9             	xor    %r9d,%r9d
    895b:	48 89 c8             	mov    %rcx,%rax
    895e:	66 90                	xchg   %ax,%ax
    8960:	48 c1 e8 04          	shr    $0x4,%rax
    8964:	80 e1 0f             	and    $0xf,%cl
    8967:	8d 51 30             	lea    0x30(%rcx),%edx
    896a:	8d 71 37             	lea    0x37(%rcx),%esi
    896d:	80 f9 0a             	cmp    $0xa,%cl
    8970:	0f b6 ca             	movzbl %dl,%ecx
    8973:	40 0f b6 d6          	movzbl %sil,%edx
    8977:	0f 42 d1             	cmovb  %ecx,%edx
    897a:	41 88 50 ff          	mov    %dl,-0x1(%r8)
    897e:	49 83 c0 ff          	add    $0xffffffffffffffff,%r8
    8982:	49 83 c1 01          	add    $0x1,%r9
    8986:	48 89 c1             	mov    %rax,%rcx
    8989:	48 85 c0             	test   %rax,%rax
    898c:	75 d2                	jne    8960 <_ZN4core3fmt3num52_$LT$impl$u20$core..fmt..Debug$u20$for$u20$usize$GT$3fmt17h68ab9e58238c0956E+0x150>
    898e:	bf 80 00 00 00       	mov    $0x80,%edi
    8993:	4c 29 cf             	sub    %r9,%rdi
    8996:	48 81 ff 81 00 00 00 	cmp    $0x81,%rdi
    899d:	73 77                	jae    8a16 <_ZN4core3fmt3num52_$LT$impl$u20$core..fmt..Debug$u20$for$u20$usize$GT$3fmt17h68ab9e58238c0956E+0x206>
    899f:	48 8d 15 50 48 03 00 	lea    0x34850(%rip),%rdx        # 3d1f6 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x896>
    89a6:	b9 02 00 00 00       	mov    $0x2,%ecx
    89ab:	4c 89 d7             	mov    %r10,%rdi
    89ae:	be 01 00 00 00       	mov    $0x1,%esi
    89b3:	e8 38 ec ff ff       	callq  75f0 <_ZN4core3fmt9Formatter12pad_integral17hc55c32e78eb96054E>
    89b8:	48 81 c4 88 00 00 00 	add    $0x88,%rsp
    89bf:	c3                   	retq   
    89c0:	48 89 ca             	mov    %rcx,%rdx
    89c3:	48 83 fa 63          	cmp    $0x63,%rdx
    89c7:	0f 8f ea fe ff ff    	jg     88b7 <_ZN4core3fmt3num52_$LT$impl$u20$core..fmt..Debug$u20$for$u20$usize$GT$3fmt17h68ab9e58238c0956E+0xa7>
    89cd:	e9 14 ff ff ff       	jmpq   88e6 <_ZN4core3fmt3num52_$LT$impl$u20$core..fmt..Debug$u20$for$u20$usize$GT$3fmt17h68ab9e58238c0956E+0xd6>
    89d2:	48 8d 05 91 2c 03 00 	lea    0x32c91(%rip),%rax        # 3b66a <_ZN4core3str15UTF8_CHAR_WIDTH17h639c7c3d8ce7e983E+0x112>
    89d9:	0f b7 04 50          	movzwl (%rax,%rdx,2),%eax
    89dd:	66 42 89 44 1c 06    	mov    %ax,0x6(%rsp,%r11,1)
    89e3:	49 83 c3 fe          	add    $0xfffffffffffffffe,%r11
    89e7:	4e 8d 04 1c          	lea    (%rsp,%r11,1),%r8
    89eb:	49 83 c0 08          	add    $0x8,%r8
    89ef:	41 b9 27 00 00 00    	mov    $0x27,%r9d
    89f5:	4d 29 d9             	sub    %r11,%r9
    89f8:	48 8d 15 39 4a 03 00 	lea    0x34a39(%rip),%rdx        # 3d438 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0xad8>
    89ff:	4c 89 d7             	mov    %r10,%rdi
    8a02:	be 01 00 00 00       	mov    $0x1,%esi
    8a07:	31 c9                	xor    %ecx,%ecx
    8a09:	e8 e2 eb ff ff       	callq  75f0 <_ZN4core3fmt9Formatter12pad_integral17hc55c32e78eb96054E>
    8a0e:	48 81 c4 88 00 00 00 	add    $0x88,%rsp
    8a15:	c3                   	retq   
    8a16:	be 80 00 00 00       	mov    $0x80,%esi
    8a1b:	e8 30 f2 ff ff       	callq  7c50 <_ZN4core5slice22slice_index_order_fail17h7bcf2f94ba9e06deE>
    8a20:	0f 0b                	ud2    
    8a22:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    8a29:	00 00 00 
    8a2c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000008a30 <_ZN4core3fmt5write17h0db54a985afb558eE>:
    8a30:	55                   	push   %rbp
    8a31:	41 57                	push   %r15
    8a33:	41 56                	push   %r14
    8a35:	41 55                	push   %r13
    8a37:	41 54                	push   %r12
    8a39:	53                   	push   %rbx
    8a3a:	48 83 ec 58          	sub    $0x58,%rsp
    8a3e:	48 89 f1             	mov    %rsi,%rcx
    8a41:	48 b8 00 00 00 00 20 	movabs $0x2000000000,%rax
    8a48:	00 00 00 
    8a4b:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
    8a50:	c6 44 24 48 03       	movb   $0x3,0x48(%rsp)
    8a55:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
    8a5c:	00 00 
    8a5e:	48 c7 44 24 20 00 00 	movq   $0x0,0x20(%rsp)
    8a65:	00 00 
    8a67:	48 89 7c 24 30       	mov    %rdi,0x30(%rsp)
    8a6c:	48 89 74 24 38       	mov    %rsi,0x38(%rsp)
    8a71:	4c 8b 72 10          	mov    0x10(%rdx),%r14
    8a75:	4d 85 f6             	test   %r14,%r14
    8a78:	0f 84 6c 01 00 00    	je     8bea <_ZN4core3fmt5write17h0db54a985afb558eE+0x1ba>
    8a7e:	4c 8b 7a 18          	mov    0x18(%rdx),%r15
    8a82:	4c 8b 2a             	mov    (%rdx),%r13
    8a85:	48 8b 5a 08          	mov    0x8(%rdx),%rbx
    8a89:	49 39 df             	cmp    %rbx,%r15
    8a8c:	4c 0f 47 fb          	cmova  %rbx,%r15
    8a90:	4d 85 ff             	test   %r15,%r15
    8a93:	0f 84 d3 01 00 00    	je     8c6c <_ZN4core3fmt5write17h0db54a985afb558eE+0x23c>
    8a99:	48 89 5c 24 08       	mov    %rbx,0x8(%rsp)
    8a9e:	4c 8b 62 20          	mov    0x20(%rdx),%r12
    8aa2:	48 8b 5a 28          	mov    0x28(%rdx),%rbx
    8aa6:	49 8b 75 00          	mov    0x0(%r13),%rsi
    8aaa:	49 8b 55 08          	mov    0x8(%r13),%rdx
    8aae:	ff 51 18             	callq  *0x18(%rcx)
    8ab1:	b1 01                	mov    $0x1,%cl
    8ab3:	84 c0                	test   %al,%al
    8ab5:	0f 85 ec 01 00 00    	jne    8ca7 <_ZN4core3fmt5write17h0db54a985afb558eE+0x277>
    8abb:	4c 89 6c 24 50       	mov    %r13,0x50(%rsp)
    8ac0:	49 83 c5 18          	add    $0x18,%r13
    8ac4:	49 83 c6 30          	add    $0x30,%r14
    8ac8:	bd 01 00 00 00       	mov    $0x1,%ebp
    8acd:	0f 1f 00             	nopl   (%rax)
    8ad0:	41 8b 46 f8          	mov    -0x8(%r14),%eax
    8ad4:	89 44 24 44          	mov    %eax,0x44(%rsp)
    8ad8:	41 0f b6 06          	movzbl (%r14),%eax
    8adc:	88 44 24 48          	mov    %al,0x48(%rsp)
    8ae0:	41 8b 46 fc          	mov    -0x4(%r14),%eax
    8ae4:	89 44 24 40          	mov    %eax,0x40(%rsp)
    8ae8:	49 8b 46 e8          	mov    -0x18(%r14),%rax
    8aec:	49 8b 76 f0          	mov    -0x10(%r14),%rsi
    8af0:	48 85 c0             	test   %rax,%rax
    8af3:	74 28                	je     8b1d <_ZN4core3fmt5write17h0db54a985afb558eE+0xed>
    8af5:	48 83 f8 02          	cmp    $0x2,%rax
    8af9:	74 35                	je     8b30 <_ZN4core3fmt5write17h0db54a985afb558eE+0x100>
    8afb:	48 39 de             	cmp    %rbx,%rsi
    8afe:	0f 83 c8 01 00 00    	jae    8ccc <_ZN4core3fmt5write17h0db54a985afb558eE+0x29c>
    8b04:	48 c1 e6 04          	shl    $0x4,%rsi
    8b08:	48 8d 05 d1 01 00 00 	lea    0x1d1(%rip),%rax        # 8ce0 <_ZN4core3fmt10ArgumentV110show_usize17h2a88cb8749ea423eE>
    8b0f:	49 39 44 34 08       	cmp    %rax,0x8(%r12,%rsi,1)
    8b14:	75 1a                	jne    8b30 <_ZN4core3fmt5write17h0db54a985afb558eE+0x100>
    8b16:	49 8b 04 34          	mov    (%r12,%rsi,1),%rax
    8b1a:	48 8b 30             	mov    (%rax),%rsi
    8b1d:	b8 01 00 00 00       	mov    $0x1,%eax
    8b22:	eb 0e                	jmp    8b32 <_ZN4core3fmt5write17h0db54a985afb558eE+0x102>
    8b24:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    8b2b:	00 00 00 
    8b2e:	66 90                	xchg   %ax,%ax
    8b30:	31 c0                	xor    %eax,%eax
    8b32:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    8b37:	48 89 74 24 18       	mov    %rsi,0x18(%rsp)
    8b3c:	49 8b 46 d8          	mov    -0x28(%r14),%rax
    8b40:	49 8b 76 e0          	mov    -0x20(%r14),%rsi
    8b44:	48 85 c0             	test   %rax,%rax
    8b47:	74 28                	je     8b71 <_ZN4core3fmt5write17h0db54a985afb558eE+0x141>
    8b49:	48 83 f8 02          	cmp    $0x2,%rax
    8b4d:	74 31                	je     8b80 <_ZN4core3fmt5write17h0db54a985afb558eE+0x150>
    8b4f:	48 39 de             	cmp    %rbx,%rsi
    8b52:	0f 83 74 01 00 00    	jae    8ccc <_ZN4core3fmt5write17h0db54a985afb558eE+0x29c>
    8b58:	48 c1 e6 04          	shl    $0x4,%rsi
    8b5c:	48 8d 05 7d 01 00 00 	lea    0x17d(%rip),%rax        # 8ce0 <_ZN4core3fmt10ArgumentV110show_usize17h2a88cb8749ea423eE>
    8b63:	49 39 44 34 08       	cmp    %rax,0x8(%r12,%rsi,1)
    8b68:	75 16                	jne    8b80 <_ZN4core3fmt5write17h0db54a985afb558eE+0x150>
    8b6a:	49 8b 04 34          	mov    (%r12,%rsi,1),%rax
    8b6e:	48 8b 30             	mov    (%rax),%rsi
    8b71:	b8 01 00 00 00       	mov    $0x1,%eax
    8b76:	eb 0a                	jmp    8b82 <_ZN4core3fmt5write17h0db54a985afb558eE+0x152>
    8b78:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    8b7f:	00 
    8b80:	31 c0                	xor    %eax,%eax
    8b82:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
    8b87:	48 89 74 24 28       	mov    %rsi,0x28(%rsp)
    8b8c:	49 8b 4e d0          	mov    -0x30(%r14),%rcx
    8b90:	48 39 d9             	cmp    %rbx,%rcx
    8b93:	0f 83 1f 01 00 00    	jae    8cb8 <_ZN4core3fmt5write17h0db54a985afb558eE+0x288>
    8b99:	48 c1 e1 04          	shl    $0x4,%rcx
    8b9d:	49 8b 3c 0c          	mov    (%r12,%rcx,1),%rdi
    8ba1:	48 8d 74 24 10       	lea    0x10(%rsp),%rsi
    8ba6:	41 ff 54 0c 08       	callq  *0x8(%r12,%rcx,1)
    8bab:	84 c0                	test   %al,%al
    8bad:	0f 85 b5 00 00 00    	jne    8c68 <_ZN4core3fmt5write17h0db54a985afb558eE+0x238>
    8bb3:	4c 39 fd             	cmp    %r15,%rbp
    8bb6:	0f 83 b9 00 00 00    	jae    8c75 <_ZN4core3fmt5write17h0db54a985afb558eE+0x245>
    8bbc:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
    8bc1:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
    8bc6:	48 83 c5 01          	add    $0x1,%rbp
    8bca:	49 8b 75 f8          	mov    -0x8(%r13),%rsi
    8bce:	49 8b 55 00          	mov    0x0(%r13),%rdx
    8bd2:	ff 50 18             	callq  *0x18(%rax)
    8bd5:	49 83 c5 10          	add    $0x10,%r13
    8bd9:	49 83 c6 38          	add    $0x38,%r14
    8bdd:	84 c0                	test   %al,%al
    8bdf:	0f 84 eb fe ff ff    	je     8ad0 <_ZN4core3fmt5write17h0db54a985afb558eE+0xa0>
    8be5:	e9 7e 00 00 00       	jmpq   8c68 <_ZN4core3fmt5write17h0db54a985afb558eE+0x238>
    8bea:	4c 8b 7a 28          	mov    0x28(%rdx),%r15
    8bee:	4c 8b 2a             	mov    (%rdx),%r13
    8bf1:	48 8b 5a 08          	mov    0x8(%rdx),%rbx
    8bf5:	49 39 df             	cmp    %rbx,%r15
    8bf8:	4c 0f 47 fb          	cmova  %rbx,%r15
    8bfc:	4d 85 ff             	test   %r15,%r15
    8bff:	74 6b                	je     8c6c <_ZN4core3fmt5write17h0db54a985afb558eE+0x23c>
    8c01:	4c 8b 62 20          	mov    0x20(%rdx),%r12
    8c05:	49 8b 75 00          	mov    0x0(%r13),%rsi
    8c09:	49 8b 55 08          	mov    0x8(%r13),%rdx
    8c0d:	ff 51 18             	callq  *0x18(%rcx)
    8c10:	b1 01                	mov    $0x1,%cl
    8c12:	84 c0                	test   %al,%al
    8c14:	0f 85 8d 00 00 00    	jne    8ca7 <_ZN4core3fmt5write17h0db54a985afb558eE+0x277>
    8c1a:	48 89 5c 24 08       	mov    %rbx,0x8(%rsp)
    8c1f:	bd 01 00 00 00       	mov    $0x1,%ebp
    8c24:	31 db                	xor    %ebx,%ebx
    8c26:	4c 8d 74 24 10       	lea    0x10(%rsp),%r14
    8c2b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    8c30:	49 8b 3c 1c          	mov    (%r12,%rbx,1),%rdi
    8c34:	4c 89 f6             	mov    %r14,%rsi
    8c37:	41 ff 54 1c 08       	callq  *0x8(%r12,%rbx,1)
    8c3c:	84 c0                	test   %al,%al
    8c3e:	75 28                	jne    8c68 <_ZN4core3fmt5write17h0db54a985afb558eE+0x238>
    8c40:	4c 39 fd             	cmp    %r15,%rbp
    8c43:	73 35                	jae    8c7a <_ZN4core3fmt5write17h0db54a985afb558eE+0x24a>
    8c45:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
    8c4a:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
    8c4f:	48 83 c5 01          	add    $0x1,%rbp
    8c53:	49 8b 74 1d 10       	mov    0x10(%r13,%rbx,1),%rsi
    8c58:	49 8b 54 1d 18       	mov    0x18(%r13,%rbx,1),%rdx
    8c5d:	ff 50 18             	callq  *0x18(%rax)
    8c60:	48 83 c3 10          	add    $0x10,%rbx
    8c64:	84 c0                	test   %al,%al
    8c66:	74 c8                	je     8c30 <_ZN4core3fmt5write17h0db54a985afb558eE+0x200>
    8c68:	b1 01                	mov    $0x1,%cl
    8c6a:	eb 3b                	jmp    8ca7 <_ZN4core3fmt5write17h0db54a985afb558eE+0x277>
    8c6c:	31 ed                	xor    %ebp,%ebp
    8c6e:	48 39 eb             	cmp    %rbp,%rbx
    8c71:	76 32                	jbe    8ca5 <_ZN4core3fmt5write17h0db54a985afb558eE+0x275>
    8c73:	eb 0f                	jmp    8c84 <_ZN4core3fmt5write17h0db54a985afb558eE+0x254>
    8c75:	4c 8b 6c 24 50       	mov    0x50(%rsp),%r13
    8c7a:	48 8b 5c 24 08       	mov    0x8(%rsp),%rbx
    8c7f:	48 39 eb             	cmp    %rbp,%rbx
    8c82:	76 21                	jbe    8ca5 <_ZN4core3fmt5write17h0db54a985afb558eE+0x275>
    8c84:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
    8c89:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
    8c8e:	48 c1 e5 04          	shl    $0x4,%rbp
    8c92:	49 8b 74 2d 00       	mov    0x0(%r13,%rbp,1),%rsi
    8c97:	49 8b 54 2d 08       	mov    0x8(%r13,%rbp,1),%rdx
    8c9c:	ff 50 18             	callq  *0x18(%rax)
    8c9f:	b1 01                	mov    $0x1,%cl
    8ca1:	84 c0                	test   %al,%al
    8ca3:	75 02                	jne    8ca7 <_ZN4core3fmt5write17h0db54a985afb558eE+0x277>
    8ca5:	31 c9                	xor    %ecx,%ecx
    8ca7:	89 c8                	mov    %ecx,%eax
    8ca9:	48 83 c4 58          	add    $0x58,%rsp
    8cad:	5b                   	pop    %rbx
    8cae:	41 5c                	pop    %r12
    8cb0:	41 5d                	pop    %r13
    8cb2:	41 5e                	pop    %r14
    8cb4:	41 5f                	pop    %r15
    8cb6:	5d                   	pop    %rbp
    8cb7:	c3                   	retq   
    8cb8:	48 8d 3d b9 d6 23 00 	lea    0x23d6b9(%rip),%rdi        # 246378 <__init_array_end+0x368>
    8cbf:	48 89 ce             	mov    %rcx,%rsi
    8cc2:	48 89 da             	mov    %rbx,%rdx
    8cc5:	e8 36 e7 ff ff       	callq  7400 <_ZN4core9panicking18panic_bounds_check17h83121a2515f55ceeE>
    8cca:	0f 0b                	ud2    
    8ccc:	48 8d 3d 8d d6 23 00 	lea    0x23d68d(%rip),%rdi        # 246360 <__init_array_end+0x350>
    8cd3:	48 89 da             	mov    %rbx,%rdx
    8cd6:	e8 25 e7 ff ff       	callq  7400 <_ZN4core9panicking18panic_bounds_check17h83121a2515f55ceeE>
    8cdb:	0f 0b                	ud2    
    8cdd:	0f 1f 00             	nopl   (%rax)

0000000000008ce0 <_ZN4core3fmt10ArgumentV110show_usize17h2a88cb8749ea423eE>:
    8ce0:	48 83 ec 28          	sub    $0x28,%rsp
    8ce4:	49 89 f2             	mov    %rsi,%r10
    8ce7:	48 8b 37             	mov    (%rdi),%rsi
    8cea:	41 bb 27 00 00 00    	mov    $0x27,%r11d
    8cf0:	48 81 fe 10 27 00 00 	cmp    $0x2710,%rsi
    8cf7:	0f 82 bc 00 00 00    	jb     8db9 <_ZN4core3fmt10ArgumentV110show_usize17h2a88cb8749ea423eE+0xd9>
    8cfd:	41 bb 27 00 00 00    	mov    $0x27,%r11d
    8d03:	49 b8 4b 59 86 38 d6 	movabs $0x346dc5d63886594b,%r8
    8d0a:	c5 6d 34 
    8d0d:	4c 8d 0d 56 29 03 00 	lea    0x32956(%rip),%r9        # 3b66a <_ZN4core3str15UTF8_CHAR_WIDTH17h639c7c3d8ce7e983E+0x112>
    8d14:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    8d1b:	00 00 00 
    8d1e:	66 90                	xchg   %ax,%ax
    8d20:	48 89 f0             	mov    %rsi,%rax
    8d23:	49 f7 e0             	mul    %r8
    8d26:	48 c1 ea 0b          	shr    $0xb,%rdx
    8d2a:	69 c2 10 27 00 00    	imul   $0x2710,%edx,%eax
    8d30:	89 f1                	mov    %esi,%ecx
    8d32:	29 c1                	sub    %eax,%ecx
    8d34:	0f b7 c1             	movzwl %cx,%eax
    8d37:	c1 e8 02             	shr    $0x2,%eax
    8d3a:	69 c0 7b 14 00 00    	imul   $0x147b,%eax,%eax
    8d40:	c1 e8 11             	shr    $0x11,%eax
    8d43:	6b f8 64             	imul   $0x64,%eax,%edi
    8d46:	29 f9                	sub    %edi,%ecx
    8d48:	0f b7 c9             	movzwl %cx,%ecx
    8d4b:	41 0f b7 04 41       	movzwl (%r9,%rax,2),%eax
    8d50:	66 42 89 44 1c fd    	mov    %ax,-0x3(%rsp,%r11,1)
    8d56:	41 0f b7 04 49       	movzwl (%r9,%rcx,2),%eax
    8d5b:	66 42 89 44 1c ff    	mov    %ax,-0x1(%rsp,%r11,1)
    8d61:	49 83 c3 fc          	add    $0xfffffffffffffffc,%r11
    8d65:	48 81 fe ff e0 f5 05 	cmp    $0x5f5e0ff,%rsi
    8d6c:	48 89 d6             	mov    %rdx,%rsi
    8d6f:	77 af                	ja     8d20 <_ZN4core3fmt10ArgumentV110show_usize17h2a88cb8749ea423eE+0x40>
    8d71:	48 83 fa 63          	cmp    $0x63,%rdx
    8d75:	7e 2f                	jle    8da6 <_ZN4core3fmt10ArgumentV110show_usize17h2a88cb8749ea423eE+0xc6>
    8d77:	0f b7 c2             	movzwl %dx,%eax
    8d7a:	c1 e8 02             	shr    $0x2,%eax
    8d7d:	69 c0 7b 14 00 00    	imul   $0x147b,%eax,%eax
    8d83:	c1 e8 11             	shr    $0x11,%eax
    8d86:	6b c8 64             	imul   $0x64,%eax,%ecx
    8d89:	29 ca                	sub    %ecx,%edx
    8d8b:	0f b7 ca             	movzwl %dx,%ecx
    8d8e:	48 8d 15 d5 28 03 00 	lea    0x328d5(%rip),%rdx        # 3b66a <_ZN4core3str15UTF8_CHAR_WIDTH17h639c7c3d8ce7e983E+0x112>
    8d95:	0f b7 0c 4a          	movzwl (%rdx,%rcx,2),%ecx
    8d99:	66 42 89 4c 1c ff    	mov    %cx,-0x1(%rsp,%r11,1)
    8d9f:	49 83 c3 fe          	add    $0xfffffffffffffffe,%r11
    8da3:	48 89 c2             	mov    %rax,%rdx
    8da6:	48 83 fa 0a          	cmp    $0xa,%rdx
    8daa:	7d 18                	jge    8dc4 <_ZN4core3fmt10ArgumentV110show_usize17h2a88cb8749ea423eE+0xe4>
    8dac:	80 c2 30             	add    $0x30,%dl
    8daf:	42 88 14 1c          	mov    %dl,(%rsp,%r11,1)
    8db3:	49 83 c3 ff          	add    $0xffffffffffffffff,%r11
    8db7:	eb 20                	jmp    8dd9 <_ZN4core3fmt10ArgumentV110show_usize17h2a88cb8749ea423eE+0xf9>
    8db9:	48 89 f2             	mov    %rsi,%rdx
    8dbc:	48 83 fa 63          	cmp    $0x63,%rdx
    8dc0:	7f b5                	jg     8d77 <_ZN4core3fmt10ArgumentV110show_usize17h2a88cb8749ea423eE+0x97>
    8dc2:	eb e2                	jmp    8da6 <_ZN4core3fmt10ArgumentV110show_usize17h2a88cb8749ea423eE+0xc6>
    8dc4:	48 8d 05 9f 28 03 00 	lea    0x3289f(%rip),%rax        # 3b66a <_ZN4core3str15UTF8_CHAR_WIDTH17h639c7c3d8ce7e983E+0x112>
    8dcb:	0f b7 04 50          	movzwl (%rax,%rdx,2),%eax
    8dcf:	66 42 89 44 1c ff    	mov    %ax,-0x1(%rsp,%r11,1)
    8dd5:	49 83 c3 fe          	add    $0xfffffffffffffffe,%r11
    8dd9:	4e 8d 04 1c          	lea    (%rsp,%r11,1),%r8
    8ddd:	49 83 c0 01          	add    $0x1,%r8
    8de1:	41 b9 27 00 00 00    	mov    $0x27,%r9d
    8de7:	4d 29 d9             	sub    %r11,%r9
    8dea:	48 8d 15 47 46 03 00 	lea    0x34647(%rip),%rdx        # 3d438 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0xad8>
    8df1:	4c 89 d7             	mov    %r10,%rdi
    8df4:	be 01 00 00 00       	mov    $0x1,%esi
    8df9:	31 c9                	xor    %ecx,%ecx
    8dfb:	e8 f0 e7 ff ff       	callq  75f0 <_ZN4core3fmt9Formatter12pad_integral17hc55c32e78eb96054E>
    8e00:	48 83 c4 28          	add    $0x28,%rsp
    8e04:	c3                   	retq   
    8e05:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    8e0c:	00 00 00 
    8e0f:	90                   	nop

0000000000008e10 <_ZN4core4char7methods22_$LT$impl$u20$char$GT$16escape_debug_ext17hfbb695d8f3fda62eE>:
    8e10:	41 56                	push   %r14
    8e12:	53                   	push   %rbx
    8e13:	50                   	push   %rax
    8e14:	41 89 f6             	mov    %esi,%r14d
    8e17:	48 89 fb             	mov    %rdi,%rbx
    8e1a:	b8 02 00 00 00       	mov    $0x2,%eax
    8e1f:	41 8d 4e f7          	lea    -0x9(%r14),%ecx
    8e23:	83 f9 1e             	cmp    $0x1e,%ecx
    8e26:	77 1f                	ja     8e47 <_ZN4core4char7methods22_$LT$impl$u20$char$GT$16escape_debug_ext17hfbb695d8f3fda62eE+0x37>
    8e28:	ba 74 00 00 00       	mov    $0x74,%edx
    8e2d:	48 8d 35 6c 17 03 00 	lea    0x3176c(%rip),%rsi        # 3a5a0 <_ZN4core7unicode12unicode_data2cc19BITSET_INDEX_CHUNKS17h8a1f39cd536e9344E+0xe0>
    8e34:	48 63 3c 8e          	movslq (%rsi,%rcx,4),%rdi
    8e38:	48 01 f7             	add    %rsi,%rdi
    8e3b:	ff e7                	jmpq   *%rdi
    8e3d:	ba 6e 00 00 00       	mov    $0x6e,%edx
    8e42:	e9 ac 00 00 00       	jmpq   8ef3 <_ZN4core4char7methods22_$LT$impl$u20$char$GT$16escape_debug_ext17hfbb695d8f3fda62eE+0xe3>
    8e47:	41 83 fe 5c          	cmp    $0x5c,%r14d
    8e4b:	75 08                	jne    8e55 <_ZN4core4char7methods22_$LT$impl$u20$char$GT$16escape_debug_ext17hfbb695d8f3fda62eE+0x45>
    8e4d:	44 89 f2             	mov    %r14d,%edx
    8e50:	e9 9e 00 00 00       	jmpq   8ef3 <_ZN4core4char7methods22_$LT$impl$u20$char$GT$16escape_debug_ext17hfbb695d8f3fda62eE+0xe3>
    8e55:	44 89 f0             	mov    %r14d,%eax
    8e58:	c1 e8 06             	shr    $0x6,%eax
    8e5b:	48 89 c1             	mov    %rax,%rcx
    8e5e:	48 c1 e9 04          	shr    $0x4,%rcx
    8e62:	41 81 fe 00 ec 01 00 	cmp    $0x1ec00,%r14d
    8e69:	72 17                	jb     8e82 <_ZN4core4char7methods22_$LT$impl$u20$char$GT$16escape_debug_ext17hfbb695d8f3fda62eE+0x72>
    8e6b:	be 1e 00 00 00       	mov    $0x1e,%esi
    8e70:	48 81 f9 80 03 00 00 	cmp    $0x380,%rcx
    8e77:	74 1e                	je     8e97 <_ZN4core4char7methods22_$LT$impl$u20$char$GT$16escape_debug_ext17hfbb695d8f3fda62eE+0x87>
    8e79:	eb 4b                	jmp    8ec6 <_ZN4core4char7methods22_$LT$impl$u20$char$GT$16escape_debug_ext17hfbb695d8f3fda62eE+0xb6>
    8e7b:	ba 72 00 00 00       	mov    $0x72,%edx
    8e80:	eb 71                	jmp    8ef3 <_ZN4core4char7methods22_$LT$impl$u20$char$GT$16escape_debug_ext17hfbb695d8f3fda62eE+0xe3>
    8e82:	48 8d 15 aa 29 03 00 	lea    0x329aa(%rip),%rdx        # 3b833 <_ZN4core7unicode12unicode_data15grapheme_extend17BITSET_CHUNKS_MAP17he1ca2faf12a885b8E>
    8e89:	0f b6 34 11          	movzbl (%rcx,%rdx,1),%esi
    8e8d:	48 83 fe 1e          	cmp    $0x1e,%rsi
    8e91:	0f 87 98 00 00 00    	ja     8f2f <_ZN4core4char7methods22_$LT$impl$u20$char$GT$16escape_debug_ext17hfbb695d8f3fda62eE+0x11f>
    8e97:	83 e0 0f             	and    $0xf,%eax
    8e9a:	48 c1 e6 04          	shl    $0x4,%rsi
    8e9e:	48 8d 0d 09 2a 03 00 	lea    0x32a09(%rip),%rcx        # 3b8ae <_ZN4core7unicode12unicode_data15grapheme_extend19BITSET_INDEX_CHUNKS17h8c26348c7fad7845E>
    8ea5:	48 01 f1             	add    %rsi,%rcx
    8ea8:	0f b6 34 08          	movzbl (%rax,%rcx,1),%esi
    8eac:	48 81 fe 8b 00 00 00 	cmp    $0x8b,%rsi
    8eb3:	73 67                	jae    8f1c <_ZN4core4char7methods22_$LT$impl$u20$char$GT$16escape_debug_ext17hfbb695d8f3fda62eE+0x10c>
    8eb5:	48 8d 05 e4 2b 03 00 	lea    0x32be4(%rip),%rax        # 3baa0 <_ZN4core7unicode12unicode_data15grapheme_extend6BITSET17h68ce7f61ccfa32feE>
    8ebc:	48 8b 04 f0          	mov    (%rax,%rsi,8),%rax
    8ec0:	4c 0f a3 f0          	bt     %r14,%rax
    8ec4:	72 16                	jb     8edc <_ZN4core4char7methods22_$LT$impl$u20$char$GT$16escape_debug_ext17hfbb695d8f3fda62eE+0xcc>
    8ec6:	44 89 f7             	mov    %r14d,%edi
    8ec9:	e8 82 00 00 00       	callq  8f50 <_ZN4core7unicode9printable12is_printable17hf3d1ac2cea80390bE>
    8ece:	84 c0                	test   %al,%al
    8ed0:	74 0a                	je     8edc <_ZN4core4char7methods22_$LT$impl$u20$char$GT$16escape_debug_ext17hfbb695d8f3fda62eE+0xcc>
    8ed2:	b8 01 00 00 00       	mov    $0x1,%eax
    8ed7:	44 89 f2             	mov    %r14d,%edx
    8eda:	eb 17                	jmp    8ef3 <_ZN4core4char7methods22_$LT$impl$u20$char$GT$16escape_debug_ext17hfbb695d8f3fda62eE+0xe3>
    8edc:	44 89 f0             	mov    %r14d,%eax
    8edf:	83 c8 01             	or     $0x1,%eax
    8ee2:	0f bd c8             	bsr    %eax,%ecx
    8ee5:	83 f1 1c             	xor    $0x1c,%ecx
    8ee8:	c1 e9 02             	shr    $0x2,%ecx
    8eeb:	83 f1 07             	xor    $0x7,%ecx
    8eee:	b8 03 00 00 00       	mov    $0x3,%eax
    8ef3:	89 03                	mov    %eax,(%rbx)
    8ef5:	89 53 04             	mov    %edx,0x4(%rbx)
    8ef8:	48 89 4b 08          	mov    %rcx,0x8(%rbx)
    8efc:	44 89 73 10          	mov    %r14d,0x10(%rbx)
    8f00:	c6 43 14 05          	movb   $0x5,0x14(%rbx)
    8f04:	0f b7 44 24 05       	movzwl 0x5(%rsp),%eax
    8f09:	66 89 43 15          	mov    %ax,0x15(%rbx)
    8f0d:	8a 44 24 07          	mov    0x7(%rsp),%al
    8f11:	88 43 17             	mov    %al,0x17(%rbx)
    8f14:	48 83 c4 08          	add    $0x8,%rsp
    8f18:	5b                   	pop    %rbx
    8f19:	41 5e                	pop    %r14
    8f1b:	c3                   	retq   
    8f1c:	48 8d 3d 85 d4 23 00 	lea    0x23d485(%rip),%rdi        # 2463a8 <__init_array_end+0x398>
    8f23:	ba 8b 00 00 00       	mov    $0x8b,%edx
    8f28:	e8 d3 e4 ff ff       	callq  7400 <_ZN4core9panicking18panic_bounds_check17h83121a2515f55ceeE>
    8f2d:	0f 0b                	ud2    
    8f2f:	48 8d 3d 5a d4 23 00 	lea    0x23d45a(%rip),%rdi        # 246390 <__init_array_end+0x380>
    8f36:	ba 1f 00 00 00       	mov    $0x1f,%edx
    8f3b:	e8 c0 e4 ff ff       	callq  7400 <_ZN4core9panicking18panic_bounds_check17h83121a2515f55ceeE>
    8f40:	0f 0b                	ud2    
    8f42:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    8f49:	00 00 00 
    8f4c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000008f50 <_ZN4core7unicode9printable12is_printable17hf3d1ac2cea80390bE>:
    8f50:	53                   	push   %rbx
    8f51:	81 ff 00 00 01 00    	cmp    $0x10000,%edi
    8f57:	0f 83 e5 00 00 00    	jae    9042 <_ZN4core7unicode9printable12is_printable17hf3d1ac2cea80390bE+0xf2>
    8f5d:	41 89 f9             	mov    %edi,%r9d
    8f60:	41 c1 e9 08          	shr    $0x8,%r9d
    8f64:	48 8d 35 a7 2f 03 00 	lea    0x32fa7(%rip),%rsi        # 3bf12 <_ZN4core7unicode12unicode_data15grapheme_extend6BITSET17h68ce7f61ccfa32feE+0x472>
    8f6b:	31 c0                	xor    %eax,%eax
    8f6d:	4c 8d 05 f0 2f 03 00 	lea    0x32ff0(%rip),%r8        # 3bf64 <_ZN4core7unicode12unicode_data15grapheme_extend6BITSET17h68ce7f61ccfa32feE+0x4c4>
    8f74:	4c 8d 1d e9 2f 03 00 	lea    0x32fe9(%rip),%r11        # 3bf64 <_ZN4core7unicode12unicode_data15grapheme_extend6BITSET17h68ce7f61ccfa32feE+0x4c4>
    8f7b:	0f b6 4e 01          	movzbl 0x1(%rsi),%ecx
    8f7f:	4c 8d 14 08          	lea    (%rax,%rcx,1),%r10
    8f83:	44 38 0e             	cmp    %r9b,(%rsi)
    8f86:	48 8d 76 02          	lea    0x2(%rsi),%rsi
    8f8a:	75 44                	jne    8fd0 <_ZN4core7unicode9printable12is_printable17hf3d1ac2cea80390bE+0x80>
    8f8c:	49 39 c2             	cmp    %rax,%r10
    8f8f:	0f 82 f9 01 00 00    	jb     918e <_ZN4core7unicode9printable12is_printable17hf3d1ac2cea80390bE+0x23e>
    8f95:	49 81 fa 25 01 00 00 	cmp    $0x125,%r10
    8f9c:	0f 87 f9 01 00 00    	ja     919b <_ZN4core7unicode9printable12is_printable17hf3d1ac2cea80390bE+0x24b>
    8fa2:	31 d2                	xor    %edx,%edx
    8fa4:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    8fab:	00 00 00 
    8fae:	66 90                	xchg   %ax,%ax
    8fb0:	48 39 d1             	cmp    %rdx,%rcx
    8fb3:	74 1d                	je     8fd2 <_ZN4core7unicode9printable12is_printable17hf3d1ac2cea80390bE+0x82>
    8fb5:	48 8d 1c 10          	lea    (%rax,%rdx,1),%rbx
    8fb9:	48 83 c2 01          	add    $0x1,%rdx
    8fbd:	41 38 3c 1b          	cmp    %dil,(%r11,%rbx,1)
    8fc1:	75 ed                	jne    8fb0 <_ZN4core7unicode9printable12is_printable17hf3d1ac2cea80390bE+0x60>
    8fc3:	e9 5a 01 00 00       	jmpq   9122 <_ZN4core7unicode9printable12is_printable17hf3d1ac2cea80390bE+0x1d2>
    8fc8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    8fcf:	00 
    8fd0:	77 08                	ja     8fda <_ZN4core7unicode9printable12is_printable17hf3d1ac2cea80390bE+0x8a>
    8fd2:	4c 89 d0             	mov    %r10,%rax
    8fd5:	4c 39 c6             	cmp    %r8,%rsi
    8fd8:	75 a1                	jne    8f7b <_ZN4core7unicode9printable12is_printable17hf3d1ac2cea80390bE+0x2b>
    8fda:	0f b7 cf             	movzwl %di,%ecx
    8fdd:	48 8d 15 a5 30 03 00 	lea    0x330a5(%rip),%rdx        # 3c089 <_ZN4core7unicode12unicode_data15grapheme_extend6BITSET17h68ce7f61ccfa32feE+0x5e9>
    8fe4:	b0 01                	mov    $0x1,%al
    8fe6:	4c 8d 05 d6 31 03 00 	lea    0x331d6(%rip),%r8        # 3c1c3 <_ZN4core7unicode12unicode_data15grapheme_extend6BITSET17h68ce7f61ccfa32feE+0x723>
    8fed:	0f 1f 00             	nopl   (%rax)
    8ff0:	48 8d 72 01          	lea    0x1(%rdx),%rsi
    8ff4:	0f b6 3a             	movzbl (%rdx),%edi
    8ff7:	40 84 ff             	test   %dil,%dil
    8ffa:	78 24                	js     9020 <_ZN4core7unicode9printable12is_printable17hf3d1ac2cea80390bE+0xd0>
    8ffc:	48 89 f2             	mov    %rsi,%rdx
    8fff:	29 f9                	sub    %edi,%ecx
    9001:	0f 88 83 01 00 00    	js     918a <_ZN4core7unicode9printable12is_printable17hf3d1ac2cea80390bE+0x23a>
    9007:	34 01                	xor    $0x1,%al
    9009:	4c 39 c2             	cmp    %r8,%rdx
    900c:	75 e2                	jne    8ff0 <_ZN4core7unicode9printable12is_printable17hf3d1ac2cea80390bE+0xa0>
    900e:	e9 77 01 00 00       	jmpq   918a <_ZN4core7unicode9printable12is_printable17hf3d1ac2cea80390bE+0x23a>
    9013:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    901a:	00 00 00 
    901d:	0f 1f 00             	nopl   (%rax)
    9020:	4c 39 c6             	cmp    %r8,%rsi
    9023:	0f 84 90 01 00 00    	je     91b9 <_ZN4core7unicode9printable12is_printable17hf3d1ac2cea80390bE+0x269>
    9029:	83 e7 7f             	and    $0x7f,%edi
    902c:	c1 e7 08             	shl    $0x8,%edi
    902f:	0f b6 72 01          	movzbl 0x1(%rdx),%esi
    9033:	48 83 c2 02          	add    $0x2,%rdx
    9037:	09 f7                	or     %esi,%edi
    9039:	29 f9                	sub    %edi,%ecx
    903b:	79 ca                	jns    9007 <_ZN4core7unicode9printable12is_printable17hf3d1ac2cea80390bE+0xb7>
    903d:	e9 48 01 00 00       	jmpq   918a <_ZN4core7unicode9printable12is_printable17hf3d1ac2cea80390bE+0x23a>
    9042:	81 ff 00 00 02 00    	cmp    $0x20000,%edi
    9048:	0f 83 da 00 00 00    	jae    9128 <_ZN4core7unicode9printable12is_printable17hf3d1ac2cea80390bE+0x1d8>
    904e:	41 89 f9             	mov    %edi,%r9d
    9051:	41 c1 e9 08          	shr    $0x8,%r9d
    9055:	48 8d 35 67 31 03 00 	lea    0x33167(%rip),%rsi        # 3c1c3 <_ZN4core7unicode12unicode_data15grapheme_extend6BITSET17h68ce7f61ccfa32feE+0x723>
    905c:	31 c0                	xor    %eax,%eax
    905e:	4c 8d 05 a4 31 03 00 	lea    0x331a4(%rip),%r8        # 3c209 <_ZN4core7unicode12unicode_data15grapheme_extend6BITSET17h68ce7f61ccfa32feE+0x769>
    9065:	4c 8d 1d 9d 31 03 00 	lea    0x3319d(%rip),%r11        # 3c209 <_ZN4core7unicode12unicode_data15grapheme_extend6BITSET17h68ce7f61ccfa32feE+0x769>
    906c:	0f b6 4e 01          	movzbl 0x1(%rsi),%ecx
    9070:	4c 8d 14 08          	lea    (%rax,%rcx,1),%r10
    9074:	44 38 0e             	cmp    %r9b,(%rsi)
    9077:	48 8d 76 02          	lea    0x2(%rsi),%rsi
    907b:	75 43                	jne    90c0 <_ZN4core7unicode9printable12is_printable17hf3d1ac2cea80390bE+0x170>
    907d:	49 39 c2             	cmp    %rax,%r10
    9080:	0f 82 08 01 00 00    	jb     918e <_ZN4core7unicode9printable12is_printable17hf3d1ac2cea80390bE+0x23e>
    9086:	49 81 fa a6 00 00 00 	cmp    $0xa6,%r10
    908d:	0f 87 17 01 00 00    	ja     91aa <_ZN4core7unicode9printable12is_printable17hf3d1ac2cea80390bE+0x25a>
    9093:	31 d2                	xor    %edx,%edx
    9095:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    909c:	00 00 00 
    909f:	90                   	nop
    90a0:	48 39 d1             	cmp    %rdx,%rcx
    90a3:	74 1d                	je     90c2 <_ZN4core7unicode9printable12is_printable17hf3d1ac2cea80390bE+0x172>
    90a5:	48 8d 1c 10          	lea    (%rax,%rdx,1),%rbx
    90a9:	48 83 c2 01          	add    $0x1,%rdx
    90ad:	41 38 3c 1b          	cmp    %dil,(%r11,%rbx,1)
    90b1:	75 ed                	jne    90a0 <_ZN4core7unicode9printable12is_printable17hf3d1ac2cea80390bE+0x150>
    90b3:	e9 d0 00 00 00       	jmpq   9188 <_ZN4core7unicode9printable12is_printable17hf3d1ac2cea80390bE+0x238>
    90b8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    90bf:	00 
    90c0:	77 08                	ja     90ca <_ZN4core7unicode9printable12is_printable17hf3d1ac2cea80390bE+0x17a>
    90c2:	4c 89 d0             	mov    %r10,%rax
    90c5:	4c 39 c6             	cmp    %r8,%rsi
    90c8:	75 a2                	jne    906c <_ZN4core7unicode9printable12is_printable17hf3d1ac2cea80390bE+0x11c>
    90ca:	0f b7 cf             	movzwl %di,%ecx
    90cd:	48 8d 15 db 31 03 00 	lea    0x331db(%rip),%rdx        # 3c2af <_ZN4core7unicode12unicode_data15grapheme_extend6BITSET17h68ce7f61ccfa32feE+0x80f>
    90d4:	b0 01                	mov    $0x1,%al
    90d6:	4c 8d 05 6a 33 03 00 	lea    0x3336a(%rip),%r8        # 3c447 <_ZN4core7unicode12unicode_data15grapheme_extend6BITSET17h68ce7f61ccfa32feE+0x9a7>
    90dd:	0f 1f 00             	nopl   (%rax)
    90e0:	48 8d 72 01          	lea    0x1(%rdx),%rsi
    90e4:	0f b6 3a             	movzbl (%rdx),%edi
    90e7:	40 84 ff             	test   %dil,%dil
    90ea:	78 17                	js     9103 <_ZN4core7unicode9printable12is_printable17hf3d1ac2cea80390bE+0x1b3>
    90ec:	48 89 f2             	mov    %rsi,%rdx
    90ef:	29 f9                	sub    %edi,%ecx
    90f1:	0f 88 93 00 00 00    	js     918a <_ZN4core7unicode9printable12is_printable17hf3d1ac2cea80390bE+0x23a>
    90f7:	34 01                	xor    $0x1,%al
    90f9:	4c 39 c2             	cmp    %r8,%rdx
    90fc:	75 e2                	jne    90e0 <_ZN4core7unicode9printable12is_printable17hf3d1ac2cea80390bE+0x190>
    90fe:	e9 87 00 00 00       	jmpq   918a <_ZN4core7unicode9printable12is_printable17hf3d1ac2cea80390bE+0x23a>
    9103:	4c 39 c6             	cmp    %r8,%rsi
    9106:	0f 84 ad 00 00 00    	je     91b9 <_ZN4core7unicode9printable12is_printable17hf3d1ac2cea80390bE+0x269>
    910c:	83 e7 7f             	and    $0x7f,%edi
    910f:	c1 e7 08             	shl    $0x8,%edi
    9112:	0f b6 72 01          	movzbl 0x1(%rdx),%esi
    9116:	48 83 c2 02          	add    $0x2,%rdx
    911a:	09 f7                	or     %esi,%edi
    911c:	29 f9                	sub    %edi,%ecx
    911e:	79 d7                	jns    90f7 <_ZN4core7unicode9printable12is_printable17hf3d1ac2cea80390bE+0x1a7>
    9120:	eb 68                	jmp    918a <_ZN4core7unicode9printable12is_printable17hf3d1ac2cea80390bE+0x23a>
    9122:	31 c0                	xor    %eax,%eax
    9124:	24 01                	and    $0x1,%al
    9126:	5b                   	pop    %rbx
    9127:	c3                   	retq   
    9128:	8d 8f e2 05 fd ff    	lea    -0x2fa1e(%rdi),%ecx
    912e:	31 c0                	xor    %eax,%eax
    9130:	81 f9 e2 06 0b 00    	cmp    $0xb06e2,%ecx
    9136:	72 52                	jb     918a <_ZN4core7unicode9printable12is_printable17hf3d1ac2cea80390bE+0x23a>
    9138:	8d 8f 1f 14 fd ff    	lea    -0x2ebe1(%rdi),%ecx
    913e:	81 f9 1f 0c 00 00    	cmp    $0xc1f,%ecx
    9144:	72 44                	jb     918a <_ZN4core7unicode9printable12is_printable17hf3d1ac2cea80390bE+0x23a>
    9146:	8d 8f 5e 31 fd ff    	lea    -0x2cea2(%rdi),%ecx
    914c:	83 f9 0e             	cmp    $0xe,%ecx
    914f:	72 39                	jb     918a <_ZN4core7unicode9printable12is_printable17hf3d1ac2cea80390bE+0x23a>
    9151:	89 f9                	mov    %edi,%ecx
    9153:	81 e1 fe ff 1f 00    	and    $0x1ffffe,%ecx
    9159:	81 f9 1e b8 02 00    	cmp    $0x2b81e,%ecx
    915f:	74 29                	je     918a <_ZN4core7unicode9printable12is_printable17hf3d1ac2cea80390bE+0x23a>
    9161:	8d 8f 29 59 fd ff    	lea    -0x2a6d7(%rdi),%ecx
    9167:	83 f9 29             	cmp    $0x29,%ecx
    916a:	72 1e                	jb     918a <_ZN4core7unicode9printable12is_printable17hf3d1ac2cea80390bE+0x23a>
    916c:	8d 8f cb 48 fd ff    	lea    -0x2b735(%rdi),%ecx
    9172:	83 f9 0b             	cmp    $0xb,%ecx
    9175:	72 13                	jb     918a <_ZN4core7unicode9printable12is_printable17hf3d1ac2cea80390bE+0x23a>
    9177:	81 c7 10 fe f1 ff    	add    $0xfff1fe10,%edi
    917d:	81 ff 0f fe 02 00    	cmp    $0x2fe0f,%edi
    9183:	0f 97 c0             	seta   %al
    9186:	5b                   	pop    %rbx
    9187:	c3                   	retq   
    9188:	31 c0                	xor    %eax,%eax
    918a:	24 01                	and    $0x1,%al
    918c:	5b                   	pop    %rbx
    918d:	c3                   	retq   
    918e:	48 89 c7             	mov    %rax,%rdi
    9191:	4c 89 d6             	mov    %r10,%rsi
    9194:	e8 b7 ea ff ff       	callq  7c50 <_ZN4core5slice22slice_index_order_fail17h7bcf2f94ba9e06deE>
    9199:	0f 0b                	ud2    
    919b:	be 25 01 00 00       	mov    $0x125,%esi
    91a0:	4c 89 d7             	mov    %r10,%rdi
    91a3:	e8 28 ea ff ff       	callq  7bd0 <_ZN4core5slice20slice_index_len_fail17h52736412c1ce1871E>
    91a8:	0f 0b                	ud2    
    91aa:	be a6 00 00 00       	mov    $0xa6,%esi
    91af:	4c 89 d7             	mov    %r10,%rdi
    91b2:	e8 19 ea ff ff       	callq  7bd0 <_ZN4core5slice20slice_index_len_fail17h52736412c1ce1871E>
    91b7:	0f 0b                	ud2    
    91b9:	48 8d 3d 61 41 03 00 	lea    0x34161(%rip),%rdi        # 3d321 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x9c1>
    91c0:	48 8d 15 f9 d1 23 00 	lea    0x23d1f9(%rip),%rdx        # 2463c0 <__init_array_end+0x3b0>
    91c7:	be 2b 00 00 00       	mov    $0x2b,%esi
    91cc:	e8 df e1 ff ff       	callq  73b0 <_ZN4core9panicking5panic17h6861470adfbddef8E>
    91d1:	0f 0b                	ud2    
    91d3:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    91da:	00 00 00 
    91dd:	0f 1f 00             	nopl   (%rax)

00000000000091e0 <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h798e5cbb932f061cE>:
    91e0:	48 81 ec 88 00 00 00 	sub    $0x88,%rsp
    91e7:	49 89 f2             	mov    %rsi,%r10
    91ea:	48 8b 07             	mov    (%rdi),%rax
    91ed:	8b 56 30             	mov    0x30(%rsi),%edx
    91f0:	f6 c2 10             	test   $0x10,%dl
    91f3:	0f 85 d8 00 00 00    	jne    92d1 <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h798e5cbb932f061cE+0xf1>
    91f9:	48 8b 08             	mov    (%rax),%rcx
    91fc:	f6 c2 20             	test   $0x20,%dl
    91ff:	0f 85 1b 01 00 00    	jne    9320 <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h798e5cbb932f061cE+0x140>
    9205:	41 bb 27 00 00 00    	mov    $0x27,%r11d
    920b:	48 81 f9 10 27 00 00 	cmp    $0x2710,%rcx
    9212:	0f 82 78 01 00 00    	jb     9390 <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h798e5cbb932f061cE+0x1b0>
    9218:	41 bb 27 00 00 00    	mov    $0x27,%r11d
    921e:	49 b8 4b 59 86 38 d6 	movabs $0x346dc5d63886594b,%r8
    9225:	c5 6d 34 
    9228:	4c 8d 0d 3b 24 03 00 	lea    0x3243b(%rip),%r9        # 3b66a <_ZN4core3str15UTF8_CHAR_WIDTH17h639c7c3d8ce7e983E+0x112>
    922f:	90                   	nop
    9230:	48 89 c8             	mov    %rcx,%rax
    9233:	49 f7 e0             	mul    %r8
    9236:	48 c1 ea 0b          	shr    $0xb,%rdx
    923a:	69 c2 10 27 00 00    	imul   $0x2710,%edx,%eax
    9240:	89 ce                	mov    %ecx,%esi
    9242:	29 c6                	sub    %eax,%esi
    9244:	0f b7 c6             	movzwl %si,%eax
    9247:	c1 e8 02             	shr    $0x2,%eax
    924a:	69 c0 7b 14 00 00    	imul   $0x147b,%eax,%eax
    9250:	c1 e8 11             	shr    $0x11,%eax
    9253:	6b f8 64             	imul   $0x64,%eax,%edi
    9256:	29 fe                	sub    %edi,%esi
    9258:	0f b7 f6             	movzwl %si,%esi
    925b:	41 0f b7 04 41       	movzwl (%r9,%rax,2),%eax
    9260:	66 42 89 44 1c 04    	mov    %ax,0x4(%rsp,%r11,1)
    9266:	41 0f b7 04 71       	movzwl (%r9,%rsi,2),%eax
    926b:	66 42 89 44 1c 06    	mov    %ax,0x6(%rsp,%r11,1)
    9271:	49 83 c3 fc          	add    $0xfffffffffffffffc,%r11
    9275:	48 81 f9 ff e0 f5 05 	cmp    $0x5f5e0ff,%rcx
    927c:	48 89 d1             	mov    %rdx,%rcx
    927f:	77 af                	ja     9230 <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h798e5cbb932f061cE+0x50>
    9281:	48 83 fa 63          	cmp    $0x63,%rdx
    9285:	7e 2f                	jle    92b6 <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h798e5cbb932f061cE+0xd6>
    9287:	0f b7 c2             	movzwl %dx,%eax
    928a:	c1 e8 02             	shr    $0x2,%eax
    928d:	69 c0 7b 14 00 00    	imul   $0x147b,%eax,%eax
    9293:	c1 e8 11             	shr    $0x11,%eax
    9296:	6b c8 64             	imul   $0x64,%eax,%ecx
    9299:	29 ca                	sub    %ecx,%edx
    929b:	0f b7 ca             	movzwl %dx,%ecx
    929e:	48 8d 15 c5 23 03 00 	lea    0x323c5(%rip),%rdx        # 3b66a <_ZN4core3str15UTF8_CHAR_WIDTH17h639c7c3d8ce7e983E+0x112>
    92a5:	0f b7 0c 4a          	movzwl (%rdx,%rcx,2),%ecx
    92a9:	66 42 89 4c 1c 06    	mov    %cx,0x6(%rsp,%r11,1)
    92af:	49 83 c3 fe          	add    $0xfffffffffffffffe,%r11
    92b3:	48 89 c2             	mov    %rax,%rdx
    92b6:	48 83 fa 0a          	cmp    $0xa,%rdx
    92ba:	0f 8d e2 00 00 00    	jge    93a2 <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h798e5cbb932f061cE+0x1c2>
    92c0:	80 c2 30             	add    $0x30,%dl
    92c3:	42 88 54 1c 07       	mov    %dl,0x7(%rsp,%r11,1)
    92c8:	49 83 c3 ff          	add    $0xffffffffffffffff,%r11
    92cc:	e9 e6 00 00 00       	jmpq   93b7 <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h798e5cbb932f061cE+0x1d7>
    92d1:	48 8b 08             	mov    (%rax),%rcx
    92d4:	4c 8d 84 24 88 00 00 	lea    0x88(%rsp),%r8
    92db:	00 
    92dc:	45 31 c9             	xor    %r9d,%r9d
    92df:	48 89 c8             	mov    %rcx,%rax
    92e2:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    92e9:	00 00 00 
    92ec:	0f 1f 40 00          	nopl   0x0(%rax)
    92f0:	48 c1 e8 04          	shr    $0x4,%rax
    92f4:	80 e1 0f             	and    $0xf,%cl
    92f7:	8d 51 30             	lea    0x30(%rcx),%edx
    92fa:	8d 71 57             	lea    0x57(%rcx),%esi
    92fd:	80 f9 0a             	cmp    $0xa,%cl
    9300:	0f b6 ca             	movzbl %dl,%ecx
    9303:	40 0f b6 d6          	movzbl %sil,%edx
    9307:	0f 42 d1             	cmovb  %ecx,%edx
    930a:	41 88 50 ff          	mov    %dl,-0x1(%r8)
    930e:	49 83 c0 ff          	add    $0xffffffffffffffff,%r8
    9312:	49 83 c1 01          	add    $0x1,%r9
    9316:	48 89 c1             	mov    %rax,%rcx
    9319:	48 85 c0             	test   %rax,%rax
    931c:	75 d2                	jne    92f0 <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h798e5cbb932f061cE+0x110>
    931e:	eb 3e                	jmp    935e <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h798e5cbb932f061cE+0x17e>
    9320:	4c 8d 84 24 88 00 00 	lea    0x88(%rsp),%r8
    9327:	00 
    9328:	45 31 c9             	xor    %r9d,%r9d
    932b:	48 89 c8             	mov    %rcx,%rax
    932e:	66 90                	xchg   %ax,%ax
    9330:	48 c1 e8 04          	shr    $0x4,%rax
    9334:	80 e1 0f             	and    $0xf,%cl
    9337:	8d 51 30             	lea    0x30(%rcx),%edx
    933a:	8d 71 37             	lea    0x37(%rcx),%esi
    933d:	80 f9 0a             	cmp    $0xa,%cl
    9340:	0f b6 ca             	movzbl %dl,%ecx
    9343:	40 0f b6 d6          	movzbl %sil,%edx
    9347:	0f 42 d1             	cmovb  %ecx,%edx
    934a:	41 88 50 ff          	mov    %dl,-0x1(%r8)
    934e:	49 83 c0 ff          	add    $0xffffffffffffffff,%r8
    9352:	49 83 c1 01          	add    $0x1,%r9
    9356:	48 89 c1             	mov    %rax,%rcx
    9359:	48 85 c0             	test   %rax,%rax
    935c:	75 d2                	jne    9330 <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h798e5cbb932f061cE+0x150>
    935e:	bf 80 00 00 00       	mov    $0x80,%edi
    9363:	4c 29 cf             	sub    %r9,%rdi
    9366:	48 81 ff 81 00 00 00 	cmp    $0x81,%rdi
    936d:	73 77                	jae    93e6 <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h798e5cbb932f061cE+0x206>
    936f:	48 8d 15 80 3e 03 00 	lea    0x33e80(%rip),%rdx        # 3d1f6 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x896>
    9376:	b9 02 00 00 00       	mov    $0x2,%ecx
    937b:	4c 89 d7             	mov    %r10,%rdi
    937e:	be 01 00 00 00       	mov    $0x1,%esi
    9383:	e8 68 e2 ff ff       	callq  75f0 <_ZN4core3fmt9Formatter12pad_integral17hc55c32e78eb96054E>
    9388:	48 81 c4 88 00 00 00 	add    $0x88,%rsp
    938f:	c3                   	retq   
    9390:	48 89 ca             	mov    %rcx,%rdx
    9393:	48 83 fa 63          	cmp    $0x63,%rdx
    9397:	0f 8f ea fe ff ff    	jg     9287 <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h798e5cbb932f061cE+0xa7>
    939d:	e9 14 ff ff ff       	jmpq   92b6 <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h798e5cbb932f061cE+0xd6>
    93a2:	48 8d 05 c1 22 03 00 	lea    0x322c1(%rip),%rax        # 3b66a <_ZN4core3str15UTF8_CHAR_WIDTH17h639c7c3d8ce7e983E+0x112>
    93a9:	0f b7 04 50          	movzwl (%rax,%rdx,2),%eax
    93ad:	66 42 89 44 1c 06    	mov    %ax,0x6(%rsp,%r11,1)
    93b3:	49 83 c3 fe          	add    $0xfffffffffffffffe,%r11
    93b7:	4e 8d 04 1c          	lea    (%rsp,%r11,1),%r8
    93bb:	49 83 c0 08          	add    $0x8,%r8
    93bf:	41 b9 27 00 00 00    	mov    $0x27,%r9d
    93c5:	4d 29 d9             	sub    %r11,%r9
    93c8:	48 8d 15 69 40 03 00 	lea    0x34069(%rip),%rdx        # 3d438 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0xad8>
    93cf:	4c 89 d7             	mov    %r10,%rdi
    93d2:	be 01 00 00 00       	mov    $0x1,%esi
    93d7:	31 c9                	xor    %ecx,%ecx
    93d9:	e8 12 e2 ff ff       	callq  75f0 <_ZN4core3fmt9Formatter12pad_integral17hc55c32e78eb96054E>
    93de:	48 81 c4 88 00 00 00 	add    $0x88,%rsp
    93e5:	c3                   	retq   
    93e6:	be 80 00 00 00       	mov    $0x80,%esi
    93eb:	e8 60 e8 ff ff       	callq  7c50 <_ZN4core5slice22slice_index_order_fail17h7bcf2f94ba9e06deE>
    93f0:	0f 0b                	ud2    
    93f2:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    93f9:	00 00 00 
    93fc:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000009400 <_ZN4core3num7flt2dec8strategy6dragon9mul_pow1017h05c46b8dc6645da1E>:
    9400:	41 57                	push   %r15
    9402:	41 56                	push   %r14
    9404:	53                   	push   %rbx
    9405:	49 89 f7             	mov    %rsi,%r15
    9408:	49 89 fe             	mov    %rdi,%r14
    940b:	48 89 f1             	mov    %rsi,%rcx
    940e:	48 83 e1 07          	and    $0x7,%rcx
    9412:	0f 84 ff 00 00 00    	je     9517 <_ZN4core3num7flt2dec8strategy6dragon9mul_pow1017h05c46b8dc6645da1E+0x117>
    9418:	4d 8b 06             	mov    (%r14),%r8
    941b:	49 83 f8 29          	cmp    $0x29,%r8
    941f:	0f 83 a2 02 00 00    	jae    96c7 <_ZN4core3num7flt2dec8strategy6dragon9mul_pow1017h05c46b8dc6645da1E+0x2c7>
    9425:	4d 85 c0             	test   %r8,%r8
    9428:	74 3a                	je     9464 <_ZN4core3num7flt2dec8strategy6dragon9mul_pow1017h05c46b8dc6645da1E+0x64>
    942a:	48 8d 15 d3 30 03 00 	lea    0x330d3(%rip),%rdx        # 3c504 <_ZN4core3num7flt2dec8strategy6dragon5POW1017h40c711b6b4af62a3E>
    9431:	8b 0c 8a             	mov    (%rdx,%rcx,4),%ecx
    9434:	49 8d 56 08          	lea    0x8(%r14),%rdx
    9438:	4a 8d 3c 85 fc ff ff 	lea    -0x4(,%r8,4),%rdi
    943f:	ff 
    9440:	48 89 fe             	mov    %rdi,%rsi
    9443:	48 c1 ee 02          	shr    $0x2,%rsi
    9447:	48 83 c6 01          	add    $0x1,%rsi
    944b:	41 89 f1             	mov    %esi,%r9d
    944e:	41 83 e1 03          	and    $0x3,%r9d
    9452:	48 83 ff 0c          	cmp    $0xc,%rdi
    9456:	73 14                	jae    946c <_ZN4core3num7flt2dec8strategy6dragon9mul_pow1017h05c46b8dc6645da1E+0x6c>
    9458:	31 c0                	xor    %eax,%eax
    945a:	4d 85 c9             	test   %r9,%r9
    945d:	75 75                	jne    94d4 <_ZN4core3num7flt2dec8strategy6dragon9mul_pow1017h05c46b8dc6645da1E+0xd4>
    945f:	e9 99 00 00 00       	jmpq   94fd <_ZN4core3num7flt2dec8strategy6dragon9mul_pow1017h05c46b8dc6645da1E+0xfd>
    9464:	45 31 c0             	xor    %r8d,%r8d
    9467:	e9 a8 00 00 00       	jmpq   9514 <_ZN4core3num7flt2dec8strategy6dragon9mul_pow1017h05c46b8dc6645da1E+0x114>
    946c:	4c 29 ce             	sub    %r9,%rsi
    946f:	31 c0                	xor    %eax,%eax
    9471:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    9478:	00 00 00 
    947b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    9480:	8b 3a                	mov    (%rdx),%edi
    9482:	8b 5a 04             	mov    0x4(%rdx),%ebx
    9485:	48 0f af f9          	imul   %rcx,%rdi
    9489:	48 01 c7             	add    %rax,%rdi
    948c:	89 3a                	mov    %edi,(%rdx)
    948e:	48 c1 ef 20          	shr    $0x20,%rdi
    9492:	48 0f af d9          	imul   %rcx,%rbx
    9496:	48 01 fb             	add    %rdi,%rbx
    9499:	89 5a 04             	mov    %ebx,0x4(%rdx)
    949c:	48 c1 eb 20          	shr    $0x20,%rbx
    94a0:	8b 42 08             	mov    0x8(%rdx),%eax
    94a3:	48 0f af c1          	imul   %rcx,%rax
    94a7:	48 01 d8             	add    %rbx,%rax
    94aa:	89 42 08             	mov    %eax,0x8(%rdx)
    94ad:	48 c1 e8 20          	shr    $0x20,%rax
    94b1:	8b 7a 0c             	mov    0xc(%rdx),%edi
    94b4:	48 0f af f9          	imul   %rcx,%rdi
    94b8:	48 01 c7             	add    %rax,%rdi
    94bb:	89 7a 0c             	mov    %edi,0xc(%rdx)
    94be:	48 89 f8             	mov    %rdi,%rax
    94c1:	48 c1 e8 20          	shr    $0x20,%rax
    94c5:	48 83 c2 10          	add    $0x10,%rdx
    94c9:	48 83 c6 fc          	add    $0xfffffffffffffffc,%rsi
    94cd:	75 b1                	jne    9480 <_ZN4core3num7flt2dec8strategy6dragon9mul_pow1017h05c46b8dc6645da1E+0x80>
    94cf:	4d 85 c9             	test   %r9,%r9
    94d2:	74 29                	je     94fd <_ZN4core3num7flt2dec8strategy6dragon9mul_pow1017h05c46b8dc6645da1E+0xfd>
    94d4:	31 f6                	xor    %esi,%esi
    94d6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    94dd:	00 00 00 
    94e0:	8b 3c b2             	mov    (%rdx,%rsi,4),%edi
    94e3:	48 0f af f9          	imul   %rcx,%rdi
    94e7:	48 01 c7             	add    %rax,%rdi
    94ea:	48 89 f8             	mov    %rdi,%rax
    94ed:	48 c1 e8 20          	shr    $0x20,%rax
    94f1:	89 3c b2             	mov    %edi,(%rdx,%rsi,4)
    94f4:	48 83 c6 01          	add    $0x1,%rsi
    94f8:	49 39 f1             	cmp    %rsi,%r9
    94fb:	75 e3                	jne    94e0 <_ZN4core3num7flt2dec8strategy6dragon9mul_pow1017h05c46b8dc6645da1E+0xe0>
    94fd:	85 c0                	test   %eax,%eax
    94ff:	74 13                	je     9514 <_ZN4core3num7flt2dec8strategy6dragon9mul_pow1017h05c46b8dc6645da1E+0x114>
    9501:	49 83 f8 27          	cmp    $0x27,%r8
    9505:	0f 87 cb 01 00 00    	ja     96d6 <_ZN4core3num7flt2dec8strategy6dragon9mul_pow1017h05c46b8dc6645da1E+0x2d6>
    950b:	43 89 44 86 08       	mov    %eax,0x8(%r14,%r8,4)
    9510:	49 83 c0 01          	add    $0x1,%r8
    9514:	4d 89 06             	mov    %r8,(%r14)
    9517:	41 f6 c7 08          	test   $0x8,%r15b
    951b:	0f 84 f9 00 00 00    	je     961a <_ZN4core3num7flt2dec8strategy6dragon9mul_pow1017h05c46b8dc6645da1E+0x21a>
    9521:	4d 8b 06             	mov    (%r14),%r8
    9524:	49 83 f8 29          	cmp    $0x29,%r8
    9528:	0f 83 99 01 00 00    	jae    96c7 <_ZN4core3num7flt2dec8strategy6dragon9mul_pow1017h05c46b8dc6645da1E+0x2c7>
    952e:	4d 85 c0             	test   %r8,%r8
    9531:	74 2e                	je     9561 <_ZN4core3num7flt2dec8strategy6dragon9mul_pow1017h05c46b8dc6645da1E+0x161>
    9533:	49 8d 4e 08          	lea    0x8(%r14),%rcx
    9537:	4a 8d 34 85 fc ff ff 	lea    -0x4(,%r8,4),%rsi
    953e:	ff 
    953f:	48 89 f7             	mov    %rsi,%rdi
    9542:	48 c1 ef 02          	shr    $0x2,%rdi
    9546:	48 83 c7 01          	add    $0x1,%rdi
    954a:	89 fa                	mov    %edi,%edx
    954c:	83 e2 03             	and    $0x3,%edx
    954f:	48 83 fe 0c          	cmp    $0xc,%rsi
    9553:	73 14                	jae    9569 <_ZN4core3num7flt2dec8strategy6dragon9mul_pow1017h05c46b8dc6645da1E+0x169>
    9555:	31 f6                	xor    %esi,%esi
    9557:	48 85 d2             	test   %rdx,%rdx
    955a:	75 74                	jne    95d0 <_ZN4core3num7flt2dec8strategy6dragon9mul_pow1017h05c46b8dc6645da1E+0x1d0>
    955c:	e9 9f 00 00 00       	jmpq   9600 <_ZN4core3num7flt2dec8strategy6dragon9mul_pow1017h05c46b8dc6645da1E+0x200>
    9561:	45 31 c0             	xor    %r8d,%r8d
    9564:	e9 ae 00 00 00       	jmpq   9617 <_ZN4core3num7flt2dec8strategy6dragon9mul_pow1017h05c46b8dc6645da1E+0x217>
    9569:	48 29 d7             	sub    %rdx,%rdi
    956c:	31 f6                	xor    %esi,%esi
    956e:	66 90                	xchg   %ax,%ax
    9570:	8b 19                	mov    (%rcx),%ebx
    9572:	8b 41 04             	mov    0x4(%rcx),%eax
    9575:	48 69 db 00 e1 f5 05 	imul   $0x5f5e100,%rbx,%rbx
    957c:	48 01 f3             	add    %rsi,%rbx
    957f:	89 19                	mov    %ebx,(%rcx)
    9581:	48 c1 eb 20          	shr    $0x20,%rbx
    9585:	48 69 c0 00 e1 f5 05 	imul   $0x5f5e100,%rax,%rax
    958c:	48 01 d8             	add    %rbx,%rax
    958f:	89 41 04             	mov    %eax,0x4(%rcx)
    9592:	48 c1 e8 20          	shr    $0x20,%rax
    9596:	8b 71 08             	mov    0x8(%rcx),%esi
    9599:	48 69 f6 00 e1 f5 05 	imul   $0x5f5e100,%rsi,%rsi
    95a0:	48 01 c6             	add    %rax,%rsi
    95a3:	89 71 08             	mov    %esi,0x8(%rcx)
    95a6:	48 c1 ee 20          	shr    $0x20,%rsi
    95aa:	8b 41 0c             	mov    0xc(%rcx),%eax
    95ad:	48 69 c0 00 e1 f5 05 	imul   $0x5f5e100,%rax,%rax
    95b4:	48 01 f0             	add    %rsi,%rax
    95b7:	89 41 0c             	mov    %eax,0xc(%rcx)
    95ba:	48 89 c6             	mov    %rax,%rsi
    95bd:	48 c1 ee 20          	shr    $0x20,%rsi
    95c1:	48 83 c1 10          	add    $0x10,%rcx
    95c5:	48 83 c7 fc          	add    $0xfffffffffffffffc,%rdi
    95c9:	75 a5                	jne    9570 <_ZN4core3num7flt2dec8strategy6dragon9mul_pow1017h05c46b8dc6645da1E+0x170>
    95cb:	48 85 d2             	test   %rdx,%rdx
    95ce:	74 30                	je     9600 <_ZN4core3num7flt2dec8strategy6dragon9mul_pow1017h05c46b8dc6645da1E+0x200>
    95d0:	31 ff                	xor    %edi,%edi
    95d2:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    95d9:	00 00 00 
    95dc:	0f 1f 40 00          	nopl   0x0(%rax)
    95e0:	8b 1c b9             	mov    (%rcx,%rdi,4),%ebx
    95e3:	48 69 db 00 e1 f5 05 	imul   $0x5f5e100,%rbx,%rbx
    95ea:	48 01 f3             	add    %rsi,%rbx
    95ed:	48 89 de             	mov    %rbx,%rsi
    95f0:	48 c1 ee 20          	shr    $0x20,%rsi
    95f4:	89 1c b9             	mov    %ebx,(%rcx,%rdi,4)
    95f7:	48 83 c7 01          	add    $0x1,%rdi
    95fb:	48 39 fa             	cmp    %rdi,%rdx
    95fe:	75 e0                	jne    95e0 <_ZN4core3num7flt2dec8strategy6dragon9mul_pow1017h05c46b8dc6645da1E+0x1e0>
    9600:	85 f6                	test   %esi,%esi
    9602:	74 13                	je     9617 <_ZN4core3num7flt2dec8strategy6dragon9mul_pow1017h05c46b8dc6645da1E+0x217>
    9604:	49 83 f8 27          	cmp    $0x27,%r8
    9608:	0f 87 c8 00 00 00    	ja     96d6 <_ZN4core3num7flt2dec8strategy6dragon9mul_pow1017h05c46b8dc6645da1E+0x2d6>
    960e:	43 89 74 86 08       	mov    %esi,0x8(%r14,%r8,4)
    9613:	49 83 c0 01          	add    $0x1,%r8
    9617:	4d 89 06             	mov    %r8,(%r14)
    961a:	41 f6 c7 10          	test   $0x10,%r15b
    961e:	75 37                	jne    9657 <_ZN4core3num7flt2dec8strategy6dragon9mul_pow1017h05c46b8dc6645da1E+0x257>
    9620:	41 f6 c7 20          	test   $0x20,%r15b
    9624:	75 4b                	jne    9671 <_ZN4core3num7flt2dec8strategy6dragon9mul_pow1017h05c46b8dc6645da1E+0x271>
    9626:	41 f6 c7 40          	test   $0x40,%r15b
    962a:	75 5f                	jne    968b <_ZN4core3num7flt2dec8strategy6dragon9mul_pow1017h05c46b8dc6645da1E+0x28b>
    962c:	45 84 ff             	test   %r15b,%r15b
    962f:	78 73                	js     96a4 <_ZN4core3num7flt2dec8strategy6dragon9mul_pow1017h05c46b8dc6645da1E+0x2a4>
    9631:	41 f7 c7 00 01 00 00 	test   $0x100,%r15d
    9638:	74 14                	je     964e <_ZN4core3num7flt2dec8strategy6dragon9mul_pow1017h05c46b8dc6645da1E+0x24e>
    963a:	48 8d 35 57 2f 03 00 	lea    0x32f57(%rip),%rsi        # 3c598 <_ZN4core3num7flt2dec8strategy6dragon10POW10TO25617haf225b14fd05fa3eE>
    9641:	ba 1b 00 00 00       	mov    $0x1b,%edx
    9646:	4c 89 f7             	mov    %r14,%rdi
    9649:	e8 a2 00 00 00       	callq  96f0 <_ZN4core3num6bignum8Big32x4010mul_digits17h3eb5263f93e125cdE>
    964e:	4c 89 f0             	mov    %r14,%rax
    9651:	5b                   	pop    %rbx
    9652:	41 5e                	pop    %r14
    9654:	41 5f                	pop    %r15
    9656:	c3                   	retq   
    9657:	48 8d 35 ce 2e 03 00 	lea    0x32ece(%rip),%rsi        # 3c52c <_ZN4core3num7flt2dec8strategy6dragon9POW10TO1617h6f033e3a48aac9b1E>
    965e:	ba 02 00 00 00       	mov    $0x2,%edx
    9663:	4c 89 f7             	mov    %r14,%rdi
    9666:	e8 85 00 00 00       	callq  96f0 <_ZN4core3num6bignum8Big32x4010mul_digits17h3eb5263f93e125cdE>
    966b:	41 f6 c7 20          	test   $0x20,%r15b
    966f:	74 b5                	je     9626 <_ZN4core3num7flt2dec8strategy6dragon9mul_pow1017h05c46b8dc6645da1E+0x226>
    9671:	48 8d 35 bc 2e 03 00 	lea    0x32ebc(%rip),%rsi        # 3c534 <_ZN4core3num7flt2dec8strategy6dragon9POW10TO3217h39981c0e35b11ec1E>
    9678:	ba 04 00 00 00       	mov    $0x4,%edx
    967d:	4c 89 f7             	mov    %r14,%rdi
    9680:	e8 6b 00 00 00       	callq  96f0 <_ZN4core3num6bignum8Big32x4010mul_digits17h3eb5263f93e125cdE>
    9685:	41 f6 c7 40          	test   $0x40,%r15b
    9689:	74 a1                	je     962c <_ZN4core3num7flt2dec8strategy6dragon9mul_pow1017h05c46b8dc6645da1E+0x22c>
    968b:	48 8d 35 b2 2e 03 00 	lea    0x32eb2(%rip),%rsi        # 3c544 <_ZN4core3num7flt2dec8strategy6dragon9POW10TO6417he1a166025a1b47d2E>
    9692:	ba 07 00 00 00       	mov    $0x7,%edx
    9697:	4c 89 f7             	mov    %r14,%rdi
    969a:	e8 51 00 00 00       	callq  96f0 <_ZN4core3num6bignum8Big32x4010mul_digits17h3eb5263f93e125cdE>
    969f:	45 84 ff             	test   %r15b,%r15b
    96a2:	79 8d                	jns    9631 <_ZN4core3num7flt2dec8strategy6dragon9mul_pow1017h05c46b8dc6645da1E+0x231>
    96a4:	48 8d 35 b5 2e 03 00 	lea    0x32eb5(%rip),%rsi        # 3c560 <_ZN4core3num7flt2dec8strategy6dragon10POW10TO12817h5f4f391745db5e19E>
    96ab:	ba 0e 00 00 00       	mov    $0xe,%edx
    96b0:	4c 89 f7             	mov    %r14,%rdi
    96b3:	e8 38 00 00 00       	callq  96f0 <_ZN4core3num6bignum8Big32x4010mul_digits17h3eb5263f93e125cdE>
    96b8:	41 f7 c7 00 01 00 00 	test   $0x100,%r15d
    96bf:	0f 85 75 ff ff ff    	jne    963a <_ZN4core3num7flt2dec8strategy6dragon9mul_pow1017h05c46b8dc6645da1E+0x23a>
    96c5:	eb 87                	jmp    964e <_ZN4core3num7flt2dec8strategy6dragon9mul_pow1017h05c46b8dc6645da1E+0x24e>
    96c7:	be 28 00 00 00       	mov    $0x28,%esi
    96cc:	4c 89 c7             	mov    %r8,%rdi
    96cf:	e8 fc e4 ff ff       	callq  7bd0 <_ZN4core5slice20slice_index_len_fail17h52736412c1ce1871E>
    96d4:	0f 0b                	ud2    
    96d6:	48 8d 3d cb ca 23 00 	lea    0x23cacb(%rip),%rdi        # 2461a8 <__init_array_end+0x198>
    96dd:	ba 28 00 00 00       	mov    $0x28,%edx
    96e2:	4c 89 c6             	mov    %r8,%rsi
    96e5:	e8 16 dd ff ff       	callq  7400 <_ZN4core9panicking18panic_bounds_check17h83121a2515f55ceeE>
    96ea:	0f 0b                	ud2    
    96ec:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000096f0 <_ZN4core3num6bignum8Big32x4010mul_digits17h3eb5263f93e125cdE>:
    96f0:	55                   	push   %rbp
    96f1:	41 57                	push   %r15
    96f3:	41 56                	push   %r14
    96f5:	41 55                	push   %r13
    96f7:	41 54                	push   %r12
    96f9:	53                   	push   %rbx
    96fa:	48 81 ec d8 00 00 00 	sub    $0xd8,%rsp
    9701:	0f 57 c0             	xorps  %xmm0,%xmm0
    9704:	0f 29 84 24 c0 00 00 	movaps %xmm0,0xc0(%rsp)
    970b:	00 
    970c:	0f 29 84 24 b0 00 00 	movaps %xmm0,0xb0(%rsp)
    9713:	00 
    9714:	0f 29 84 24 a0 00 00 	movaps %xmm0,0xa0(%rsp)
    971b:	00 
    971c:	0f 29 84 24 90 00 00 	movaps %xmm0,0x90(%rsp)
    9723:	00 
    9724:	0f 29 84 24 80 00 00 	movaps %xmm0,0x80(%rsp)
    972b:	00 
    972c:	0f 29 44 24 70       	movaps %xmm0,0x70(%rsp)
    9731:	0f 29 44 24 60       	movaps %xmm0,0x60(%rsp)
    9736:	0f 29 44 24 50       	movaps %xmm0,0x50(%rsp)
    973b:	0f 29 44 24 40       	movaps %xmm0,0x40(%rsp)
    9740:	0f 29 44 24 30       	movaps %xmm0,0x30(%rsp)
    9745:	4c 8b 1f             	mov    (%rdi),%r11
    9748:	49 83 fb 29          	cmp    $0x29,%r11
    974c:	0f 83 f4 02 00 00    	jae    9a46 <_ZN4core3num6bignum8Big32x4010mul_digits17h3eb5263f93e125cdE+0x356>
    9752:	49 89 ff             	mov    %rdi,%r15
    9755:	48 83 c7 08          	add    $0x8,%rdi
    9759:	49 39 d3             	cmp    %rdx,%r11
    975c:	0f 83 21 01 00 00    	jae    9883 <_ZN4core3num6bignum8Big32x4010mul_digits17h3eb5263f93e125cdE+0x193>
    9762:	48 8d 42 01          	lea    0x1(%rdx),%rax
    9766:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    976b:	4f 8d 2c 9f          	lea    (%r15,%r11,4),%r13
    976f:	49 83 c5 08          	add    $0x8,%r13
    9773:	48 8d 42 ff          	lea    -0x1(%rdx),%rax
    9777:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    977c:	4c 8d 44 24 2c       	lea    0x2c(%rsp),%r8
    9781:	48 89 54 24 18       	mov    %rdx,0x18(%rsp)
    9786:	4c 8d 24 95 00 00 00 	lea    0x0(,%rdx,4),%r12
    978d:	00 
    978e:	31 d2                	xor    %edx,%edx
    9790:	48 89 7c 24 20       	mov    %rdi,0x20(%rsp)
    9795:	49 89 f9             	mov    %rdi,%r9
    9798:	31 c0                	xor    %eax,%eax
    979a:	48 89 04 24          	mov    %rax,(%rsp)
    979e:	48 89 fb             	mov    %rdi,%rbx
    97a1:	4d 8d 04 90          	lea    (%r8,%rdx,4),%r8
    97a5:	48 89 d7             	mov    %rdx,%rdi
    97a8:	45 31 f6             	xor    %r14d,%r14d
    97ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    97b0:	49 39 dd             	cmp    %rbx,%r13
    97b3:	0f 84 fb 01 00 00    	je     99b4 <_ZN4core3num6bignum8Big32x4010mul_digits17h3eb5263f93e125cdE+0x2c4>
    97b9:	4c 89 f5             	mov    %r14,%rbp
    97bc:	48 89 f8             	mov    %rdi,%rax
    97bf:	48 83 c3 04          	add    $0x4,%rbx
    97c3:	47 8b 14 b1          	mov    (%r9,%r14,4),%r10d
    97c7:	49 83 c6 01          	add    $0x1,%r14
    97cb:	49 83 c0 04          	add    $0x4,%r8
    97cf:	48 83 c7 01          	add    $0x1,%rdi
    97d3:	4d 85 d2             	test   %r10,%r10
    97d6:	74 d8                	je     97b0 <_ZN4core3num6bignum8Big32x4010mul_digits17h3eb5263f93e125cdE+0xc0>
    97d8:	4a 8d 0c 32          	lea    (%rdx,%r14,1),%rcx
    97dc:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
    97e1:	31 ff                	xor    %edi,%edi
    97e3:	45 31 c9             	xor    %r9d,%r9d
    97e6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    97ed:	00 00 00 
    97f0:	48 83 f8 27          	cmp    $0x27,%rax
    97f4:	0f 87 20 02 00 00    	ja     9a1a <_ZN4core3num6bignum8Big32x4010mul_digits17h3eb5263f93e125cdE+0x32a>
    97fa:	8b 0c 3e             	mov    (%rsi,%rdi,1),%ecx
    97fd:	45 8b 1c 38          	mov    (%r8,%rdi,1),%r11d
    9801:	4d 01 d9             	add    %r11,%r9
    9804:	49 0f af ca          	imul   %r10,%rcx
    9808:	4c 01 c9             	add    %r9,%rcx
    980b:	49 89 c9             	mov    %rcx,%r9
    980e:	49 c1 e9 20          	shr    $0x20,%r9
    9812:	41 89 0c 38          	mov    %ecx,(%r8,%rdi,1)
    9816:	48 83 c7 04          	add    $0x4,%rdi
    981a:	48 83 c0 01          	add    $0x1,%rax
    981e:	49 39 fc             	cmp    %rdi,%r12
    9821:	75 cd                	jne    97f0 <_ZN4core3num6bignum8Big32x4010mul_digits17h3eb5263f93e125cdE+0x100>
    9823:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
    9828:	48 89 c8             	mov    %rcx,%rax
    982b:	45 85 c9             	test   %r9d,%r9d
    982e:	4c 8d 44 24 2c       	lea    0x2c(%rsp),%r8
    9833:	74 27                	je     985c <_ZN4core3num6bignum8Big32x4010mul_digits17h3eb5263f93e125cdE+0x16c>
    9835:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    983a:	48 01 d0             	add    %rdx,%rax
    983d:	4c 01 f0             	add    %r14,%rax
    9840:	48 83 f8 27          	cmp    $0x27,%rax
    9844:	0f 87 0b 02 00 00    	ja     9a55 <_ZN4core3num6bignum8Big32x4010mul_digits17h3eb5263f93e125cdE+0x365>
    984a:	48 8d 04 11          	lea    (%rcx,%rdx,1),%rax
    984e:	49 8d 04 80          	lea    (%r8,%rax,4),%rax
    9852:	44 89 4c a8 04       	mov    %r9d,0x4(%rax,%rbp,4)
    9857:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    985c:	48 01 c2             	add    %rax,%rdx
    985f:	49 8d 04 16          	lea    (%r14,%rdx,1),%rax
    9863:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
    9867:	48 8b 0c 24          	mov    (%rsp),%rcx
    986b:	48 39 c1             	cmp    %rax,%rcx
    986e:	48 0f 42 c8          	cmovb  %rax,%rcx
    9872:	48 89 0c 24          	mov    %rcx,(%rsp)
    9876:	49 89 d9             	mov    %rbx,%r9
    9879:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
    987e:	e9 1e ff ff ff       	jmpq   97a1 <_ZN4core3num6bignum8Big32x4010mul_digits17h3eb5263f93e125cdE+0xb1>
    9883:	4d 85 db             	test   %r11,%r11
    9886:	0f 84 33 01 00 00    	je     99bf <_ZN4core3num6bignum8Big32x4010mul_digits17h3eb5263f93e125cdE+0x2cf>
    988c:	49 8d 43 01          	lea    0x1(%r11),%rax
    9890:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    9895:	4c 8d 24 96          	lea    (%rsi,%rdx,4),%r12
    9899:	49 8d 43 ff          	lea    -0x1(%r11),%rax
    989d:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    98a2:	4c 8d 44 24 2c       	lea    0x2c(%rsp),%r8
    98a7:	4e 8d 2c 9d 00 00 00 	lea    0x0(,%r11,4),%r13
    98ae:	00 
    98af:	45 31 c9             	xor    %r9d,%r9d
    98b2:	45 31 f6             	xor    %r14d,%r14d
    98b5:	48 89 f3             	mov    %rsi,%rbx
    98b8:	4f 8d 04 88          	lea    (%r8,%r9,4),%r8
    98bc:	4c 89 ca             	mov    %r9,%rdx
    98bf:	31 c0                	xor    %eax,%eax
    98c1:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    98c8:	00 00 00 
    98cb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    98d0:	49 39 dc             	cmp    %rbx,%r12
    98d3:	0f 84 19 01 00 00    	je     99f2 <_ZN4core3num6bignum8Big32x4010mul_digits17h3eb5263f93e125cdE+0x302>
    98d9:	48 89 c5             	mov    %rax,%rbp
    98dc:	48 89 d1             	mov    %rdx,%rcx
    98df:	48 83 c3 04          	add    $0x4,%rbx
    98e3:	44 8b 14 86          	mov    (%rsi,%rax,4),%r10d
    98e7:	48 83 c0 01          	add    $0x1,%rax
    98eb:	49 83 c0 04          	add    $0x4,%r8
    98ef:	48 83 c2 01          	add    $0x1,%rdx
    98f3:	4d 85 d2             	test   %r10,%r10
    98f6:	74 d8                	je     98d0 <_ZN4core3num6bignum8Big32x4010mul_digits17h3eb5263f93e125cdE+0x1e0>
    98f8:	4c 89 34 24          	mov    %r14,(%rsp)
    98fc:	48 89 fa             	mov    %rdi,%rdx
    98ff:	4c 89 4c 24 20       	mov    %r9,0x20(%rsp)
    9904:	49 8d 34 01          	lea    (%r9,%rax,1),%rsi
    9908:	48 89 74 24 18       	mov    %rsi,0x18(%rsp)
    990d:	31 ff                	xor    %edi,%edi
    990f:	31 f6                	xor    %esi,%esi
    9911:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    9918:	00 00 00 
    991b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    9920:	48 83 f9 27          	cmp    $0x27,%rcx
    9924:	0f 87 06 01 00 00    	ja     9a30 <_ZN4core3num6bignum8Big32x4010mul_digits17h3eb5263f93e125cdE+0x340>
    992a:	45 8b 4c 3f 08       	mov    0x8(%r15,%rdi,1),%r9d
    992f:	45 8b 34 38          	mov    (%r8,%rdi,1),%r14d
    9933:	4c 01 f6             	add    %r14,%rsi
    9936:	4d 0f af ca          	imul   %r10,%r9
    993a:	49 01 f1             	add    %rsi,%r9
    993d:	4c 89 ce             	mov    %r9,%rsi
    9940:	48 c1 ee 20          	shr    $0x20,%rsi
    9944:	45 89 0c 38          	mov    %r9d,(%r8,%rdi,1)
    9948:	48 83 c7 04          	add    $0x4,%rdi
    994c:	48 83 c1 01          	add    $0x1,%rcx
    9950:	49 39 fd             	cmp    %rdi,%r13
    9953:	75 cb                	jne    9920 <_ZN4core3num6bignum8Big32x4010mul_digits17h3eb5263f93e125cdE+0x230>
    9955:	4c 89 d9             	mov    %r11,%rcx
    9958:	85 f6                	test   %esi,%esi
    995a:	48 89 d7             	mov    %rdx,%rdi
    995d:	4c 8b 34 24          	mov    (%rsp),%r14
    9961:	48 8d 54 24 2c       	lea    0x2c(%rsp),%rdx
    9966:	49 89 d0             	mov    %rdx,%r8
    9969:	48 8b 54 24 20       	mov    0x20(%rsp),%rdx
    996e:	74 26                	je     9996 <_ZN4core3num6bignum8Big32x4010mul_digits17h3eb5263f93e125cdE+0x2a6>
    9970:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    9975:	48 01 d1             	add    %rdx,%rcx
    9978:	48 01 c1             	add    %rax,%rcx
    997b:	48 83 f9 27          	cmp    $0x27,%rcx
    997f:	0f 87 ee 00 00 00    	ja     9a73 <_ZN4core3num6bignum8Big32x4010mul_digits17h3eb5263f93e125cdE+0x383>
    9985:	49 8d 0c 13          	lea    (%r11,%rdx,1),%rcx
    9989:	49 8d 0c 88          	lea    (%r8,%rcx,4),%rcx
    998d:	89 74 a9 04          	mov    %esi,0x4(%rcx,%rbp,4)
    9991:	48 8b 4c 24 10       	mov    0x10(%rsp),%rcx
    9996:	48 01 ca             	add    %rcx,%rdx
    9999:	48 01 d0             	add    %rdx,%rax
    999c:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
    99a0:	49 39 c6             	cmp    %rax,%r14
    99a3:	4c 0f 42 f0          	cmovb  %rax,%r14
    99a7:	48 89 de             	mov    %rbx,%rsi
    99aa:	4c 8b 4c 24 18       	mov    0x18(%rsp),%r9
    99af:	e9 04 ff ff ff       	jmpq   98b8 <_ZN4core3num6bignum8Big32x4010mul_digits17h3eb5263f93e125cdE+0x1c8>
    99b4:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
    99b9:	4c 8b 34 24          	mov    (%rsp),%r14
    99bd:	eb 33                	jmp    99f2 <_ZN4core3num6bignum8Big32x4010mul_digits17h3eb5263f93e125cdE+0x302>
    99bf:	48 8d 04 96          	lea    (%rsi,%rdx,4),%rax
    99c3:	31 c9                	xor    %ecx,%ecx
    99c5:	45 31 f6             	xor    %r14d,%r14d
    99c8:	31 d2                	xor    %edx,%edx
    99ca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    99d0:	48 39 f0             	cmp    %rsi,%rax
    99d3:	74 1d                	je     99f2 <_ZN4core3num6bignum8Big32x4010mul_digits17h3eb5263f93e125cdE+0x302>
    99d5:	48 83 c2 ff          	add    $0xffffffffffffffff,%rdx
    99d9:	83 3e 00             	cmpl   $0x0,(%rsi)
    99dc:	48 8d 76 04          	lea    0x4(%rsi),%rsi
    99e0:	74 ee                	je     99d0 <_ZN4core3num6bignum8Big32x4010mul_digits17h3eb5263f93e125cdE+0x2e0>
    99e2:	48 29 d1             	sub    %rdx,%rcx
    99e5:	48 8d 51 ff          	lea    -0x1(%rcx),%rdx
    99e9:	49 39 d6             	cmp    %rdx,%r14
    99ec:	4c 0f 42 f2          	cmovb  %rdx,%r14
    99f0:	eb d6                	jmp    99c8 <_ZN4core3num6bignum8Big32x4010mul_digits17h3eb5263f93e125cdE+0x2d8>
    99f2:	48 8d 74 24 30       	lea    0x30(%rsp),%rsi
    99f7:	ba a0 00 00 00       	mov    $0xa0,%edx
    99fc:	ff 15 ce e4 23 00    	callq  *0x23e4ce(%rip)        # 247ed0 <memcpy@GLIBC_2.14>
    9a02:	4d 89 37             	mov    %r14,(%r15)
    9a05:	4c 89 f8             	mov    %r15,%rax
    9a08:	48 81 c4 d8 00 00 00 	add    $0xd8,%rsp
    9a0f:	5b                   	pop    %rbx
    9a10:	41 5c                	pop    %r12
    9a12:	41 5d                	pop    %r13
    9a14:	41 5e                	pop    %r14
    9a16:	41 5f                	pop    %r15
    9a18:	5d                   	pop    %rbp
    9a19:	c3                   	retq   
    9a1a:	48 8d 3d 87 c7 23 00 	lea    0x23c787(%rip),%rdi        # 2461a8 <__init_array_end+0x198>
    9a21:	ba 28 00 00 00       	mov    $0x28,%edx
    9a26:	48 89 c6             	mov    %rax,%rsi
    9a29:	e8 d2 d9 ff ff       	callq  7400 <_ZN4core9panicking18panic_bounds_check17h83121a2515f55ceeE>
    9a2e:	0f 0b                	ud2    
    9a30:	48 8d 3d 71 c7 23 00 	lea    0x23c771(%rip),%rdi        # 2461a8 <__init_array_end+0x198>
    9a37:	ba 28 00 00 00       	mov    $0x28,%edx
    9a3c:	48 89 ce             	mov    %rcx,%rsi
    9a3f:	e8 bc d9 ff ff       	callq  7400 <_ZN4core9panicking18panic_bounds_check17h83121a2515f55ceeE>
    9a44:	0f 0b                	ud2    
    9a46:	be 28 00 00 00       	mov    $0x28,%esi
    9a4b:	4c 89 df             	mov    %r11,%rdi
    9a4e:	e8 7d e1 ff ff       	callq  7bd0 <_ZN4core5slice20slice_index_len_fail17h52736412c1ce1871E>
    9a53:	0f 0b                	ud2    
    9a55:	48 01 d1             	add    %rdx,%rcx
    9a58:	49 8d 34 0e          	lea    (%r14,%rcx,1),%rsi
    9a5c:	48 83 c6 ff          	add    $0xffffffffffffffff,%rsi
    9a60:	48 8d 3d 41 c7 23 00 	lea    0x23c741(%rip),%rdi        # 2461a8 <__init_array_end+0x198>
    9a67:	ba 28 00 00 00       	mov    $0x28,%edx
    9a6c:	e8 8f d9 ff ff       	callq  7400 <_ZN4core9panicking18panic_bounds_check17h83121a2515f55ceeE>
    9a71:	0f 0b                	ud2    
    9a73:	49 01 d3             	add    %rdx,%r11
    9a76:	4a 8d 34 18          	lea    (%rax,%r11,1),%rsi
    9a7a:	48 83 c6 ff          	add    $0xffffffffffffffff,%rsi
    9a7e:	48 8d 3d 23 c7 23 00 	lea    0x23c723(%rip),%rdi        # 2461a8 <__init_array_end+0x198>
    9a85:	ba 28 00 00 00       	mov    $0x28,%edx
    9a8a:	e8 71 d9 ff ff       	callq  7400 <_ZN4core9panicking18panic_bounds_check17h83121a2515f55ceeE>
    9a8f:	0f 0b                	ud2    
    9a91:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    9a98:	00 00 00 
    9a9b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000009aa0 <_ZN4core3num7flt2dec8round_up17h468b4c0dfea5d943E>:
    9aa0:	50                   	push   %rax
    9aa1:	48 89 f1             	mov    %rsi,%rcx
    9aa4:	48 39 d6             	cmp    %rdx,%rsi
    9aa7:	0f 82 c7 00 00 00    	jb     9b74 <_ZN4core3num7flt2dec8round_up17h468b4c0dfea5d943E+0xd4>
    9aad:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
    9ab4:	48 89 d6             	mov    %rdx,%rsi
    9ab7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    9abe:	00 00 
    9ac0:	48 85 f6             	test   %rsi,%rsi
    9ac3:	74 45                	je     9b0a <_ZN4core3num7flt2dec8round_up17h468b4c0dfea5d943E+0x6a>
    9ac5:	48 83 c0 01          	add    $0x1,%rax
    9ac9:	80 7c 37 ff 39       	cmpb   $0x39,-0x1(%rdi,%rsi,1)
    9ace:	48 8d 76 ff          	lea    -0x1(%rsi),%rsi
    9ad2:	74 ec                	je     9ac0 <_ZN4core3num7flt2dec8round_up17h468b4c0dfea5d943E+0x20>
    9ad4:	48 39 ce             	cmp    %rcx,%rsi
    9ad7:	0f 83 a4 00 00 00    	jae    9b81 <_ZN4core3num7flt2dec8round_up17h468b4c0dfea5d943E+0xe1>
    9add:	80 04 37 01          	addb   $0x1,(%rdi,%rsi,1)
    9ae1:	48 83 c6 01          	add    $0x1,%rsi
    9ae5:	48 39 d6             	cmp    %rdx,%rsi
    9ae8:	73 19                	jae    9b03 <_ZN4core3num7flt2dec8round_up17h468b4c0dfea5d943E+0x63>
    9aea:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    9af0:	48 39 ce             	cmp    %rcx,%rsi
    9af3:	73 5a                	jae    9b4f <_ZN4core3num7flt2dec8round_up17h468b4c0dfea5d943E+0xaf>
    9af5:	c6 04 37 30          	movb   $0x30,(%rdi,%rsi,1)
    9af9:	48 83 c6 01          	add    $0x1,%rsi
    9afd:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
    9b01:	75 ed                	jne    9af0 <_ZN4core3num7flt2dec8round_up17h468b4c0dfea5d943E+0x50>
    9b03:	31 c0                	xor    %eax,%eax
    9b05:	44 89 c2             	mov    %r8d,%edx
    9b08:	59                   	pop    %rcx
    9b09:	c3                   	retq   
    9b0a:	b0 01                	mov    $0x1,%al
    9b0c:	48 85 d2             	test   %rdx,%rdx
    9b0f:	74 36                	je     9b47 <_ZN4core3num7flt2dec8round_up17h468b4c0dfea5d943E+0xa7>
    9b11:	48 85 c9             	test   %rcx,%rcx
    9b14:	74 7c                	je     9b92 <_ZN4core3num7flt2dec8round_up17h468b4c0dfea5d943E+0xf2>
    9b16:	c6 07 31             	movb   $0x31,(%rdi)
    9b19:	41 b0 30             	mov    $0x30,%r8b
    9b1c:	48 83 fa 02          	cmp    $0x2,%rdx
    9b20:	72 20                	jb     9b42 <_ZN4core3num7flt2dec8round_up17h468b4c0dfea5d943E+0xa2>
    9b22:	be 01 00 00 00       	mov    $0x1,%esi
    9b27:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    9b2e:	00 00 
    9b30:	48 39 f1             	cmp    %rsi,%rcx
    9b33:	74 2b                	je     9b60 <_ZN4core3num7flt2dec8round_up17h468b4c0dfea5d943E+0xc0>
    9b35:	c6 04 37 30          	movb   $0x30,(%rdi,%rsi,1)
    9b39:	48 83 c6 01          	add    $0x1,%rsi
    9b3d:	48 39 f2             	cmp    %rsi,%rdx
    9b40:	75 ee                	jne    9b30 <_ZN4core3num7flt2dec8round_up17h468b4c0dfea5d943E+0x90>
    9b42:	44 89 c2             	mov    %r8d,%edx
    9b45:	59                   	pop    %rcx
    9b46:	c3                   	retq   
    9b47:	41 b0 31             	mov    $0x31,%r8b
    9b4a:	44 89 c2             	mov    %r8d,%edx
    9b4d:	59                   	pop    %rcx
    9b4e:	c3                   	retq   
    9b4f:	48 8d 3d fa c8 23 00 	lea    0x23c8fa(%rip),%rdi        # 246450 <__init_array_end+0x440>
    9b56:	48 89 ca             	mov    %rcx,%rdx
    9b59:	e8 a2 d8 ff ff       	callq  7400 <_ZN4core9panicking18panic_bounds_check17h83121a2515f55ceeE>
    9b5e:	0f 0b                	ud2    
    9b60:	48 8d 3d 19 c9 23 00 	lea    0x23c919(%rip),%rdi        # 246480 <__init_array_end+0x470>
    9b67:	48 89 ce             	mov    %rcx,%rsi
    9b6a:	48 89 ca             	mov    %rcx,%rdx
    9b6d:	e8 8e d8 ff ff       	callq  7400 <_ZN4core9panicking18panic_bounds_check17h83121a2515f55ceeE>
    9b72:	0f 0b                	ud2    
    9b74:	48 89 d7             	mov    %rdx,%rdi
    9b77:	48 89 ce             	mov    %rcx,%rsi
    9b7a:	e8 51 e0 ff ff       	callq  7bd0 <_ZN4core5slice20slice_index_len_fail17h52736412c1ce1871E>
    9b7f:	0f 0b                	ud2    
    9b81:	48 8d 3d b0 c8 23 00 	lea    0x23c8b0(%rip),%rdi        # 246438 <__init_array_end+0x428>
    9b88:	48 89 ca             	mov    %rcx,%rdx
    9b8b:	e8 70 d8 ff ff       	callq  7400 <_ZN4core9panicking18panic_bounds_check17h83121a2515f55ceeE>
    9b90:	0f 0b                	ud2    
    9b92:	48 8d 3d cf c8 23 00 	lea    0x23c8cf(%rip),%rdi        # 246468 <__init_array_end+0x458>
    9b99:	31 f6                	xor    %esi,%esi
    9b9b:	31 d2                	xor    %edx,%edx
    9b9d:	e8 5e d8 ff ff       	callq  7400 <_ZN4core9panicking18panic_bounds_check17h83121a2515f55ceeE>
    9ba2:	0f 0b                	ud2    
    9ba4:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    9bab:	00 00 00 
    9bae:	66 90                	xchg   %ax,%ax

0000000000009bb0 <_ZN60_$LT$core..cell..BorrowError$u20$as$u20$core..fmt..Debug$GT$3fmt17h2a00aa81ac6583c2E>:
    9bb0:	48 8b 7e 20          	mov    0x20(%rsi),%rdi
    9bb4:	48 8b 46 28          	mov    0x28(%rsi),%rax
    9bb8:	48 8b 40 18          	mov    0x18(%rax),%rax
    9bbc:	48 8d 35 6d 2c 03 00 	lea    0x32c6d(%rip),%rsi        # 3c830 <str.1+0x80>
    9bc3:	ba 0b 00 00 00       	mov    $0xb,%edx
    9bc8:	ff e0                	jmpq   *%rax
    9bca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000009bd0 <_ZN63_$LT$core..cell..BorrowMutError$u20$as$u20$core..fmt..Debug$GT$3fmt17hf0b28d99ecc5a7e5E>:
    9bd0:	48 8b 7e 20          	mov    0x20(%rsi),%rdi
    9bd4:	48 8b 46 28          	mov    0x28(%rsi),%rax
    9bd8:	48 8b 40 18          	mov    0x18(%rax),%rax
    9bdc:	48 8d 35 58 2c 03 00 	lea    0x32c58(%rip),%rsi        # 3c83b <str.1+0x8b>
    9be3:	ba 0e 00 00 00       	mov    $0xe,%edx
    9be8:	ff e0                	jmpq   *%rax
    9bea:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000009bf0 <_ZN4core6option13expect_failed17h76ad4c74f3ea7214E>:
    9bf0:	48 83 ec 58          	sub    $0x58,%rsp
    9bf4:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
    9bf9:	48 89 74 24 10       	mov    %rsi,0x10(%rsp)
    9bfe:	48 8d 44 24 08       	lea    0x8(%rsp),%rax
    9c03:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    9c08:	48 8d 05 f1 b6 01 00 	lea    0x1b6f1(%rip),%rax        # 25300 <_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h9716022a15e5b13cE>
    9c0f:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
    9c14:	48 8d 05 85 d5 23 00 	lea    0x23d585(%rip),%rax        # 2471a0 <__init_array_end+0x1190>
    9c1b:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    9c20:	48 c7 44 24 30 01 00 	movq   $0x1,0x30(%rsp)
    9c27:	00 00 
    9c29:	48 c7 44 24 38 00 00 	movq   $0x0,0x38(%rsp)
    9c30:	00 00 
    9c32:	48 8d 44 24 18       	lea    0x18(%rsp),%rax
    9c37:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
    9c3c:	48 c7 44 24 50 01 00 	movq   $0x1,0x50(%rsp)
    9c43:	00 00 
    9c45:	48 8d 7c 24 28       	lea    0x28(%rsp),%rdi
    9c4a:	48 89 d6             	mov    %rdx,%rsi
    9c4d:	e8 5e d9 ff ff       	callq  75b0 <_ZN4core9panicking9panic_fmt17he168e49e4b05d288E>
    9c52:	0f 0b                	ud2    
    9c54:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    9c5b:	00 00 00 
    9c5e:	66 90                	xchg   %ax,%ax

0000000000009c60 <_ZN4core6option18expect_none_failed17he0fec195c6e4c2ecE>:
    9c60:	48 83 ec 78          	sub    $0x78,%rsp
    9c64:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
    9c69:	48 89 74 24 10       	mov    %rsi,0x10(%rsp)
    9c6e:	48 89 54 24 18       	mov    %rdx,0x18(%rsp)
    9c73:	48 89 4c 24 20       	mov    %rcx,0x20(%rsp)
    9c78:	48 8d 44 24 08       	lea    0x8(%rsp),%rax
    9c7d:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    9c82:	48 8d 05 77 b6 01 00 	lea    0x1b677(%rip),%rax        # 25300 <_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h9716022a15e5b13cE>
    9c89:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
    9c8e:	48 8d 44 24 18       	lea    0x18(%rsp),%rax
    9c93:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
    9c98:	48 8d 05 51 00 00 00 	lea    0x51(%rip),%rax        # 9cf0 <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h463242635ebeb52aE>
    9c9f:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
    9ca4:	48 8d 05 9d c9 23 00 	lea    0x23c99d(%rip),%rax        # 246648 <__init_array_end+0x638>
    9cab:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
    9cb0:	48 c7 44 24 50 02 00 	movq   $0x2,0x50(%rsp)
    9cb7:	00 00 
    9cb9:	48 c7 44 24 58 00 00 	movq   $0x0,0x58(%rsp)
    9cc0:	00 00 
    9cc2:	48 8d 44 24 28       	lea    0x28(%rsp),%rax
    9cc7:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
    9ccc:	48 c7 44 24 70 02 00 	movq   $0x2,0x70(%rsp)
    9cd3:	00 00 
    9cd5:	48 8d 7c 24 48       	lea    0x48(%rsp),%rdi
    9cda:	4c 89 c6             	mov    %r8,%rsi
    9cdd:	e8 ce d8 ff ff       	callq  75b0 <_ZN4core9panicking9panic_fmt17he168e49e4b05d288E>
    9ce2:	0f 0b                	ud2    
    9ce4:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    9ceb:	00 00 00 
    9cee:	66 90                	xchg   %ax,%ax

0000000000009cf0 <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h463242635ebeb52aE>:
    9cf0:	48 8b 07             	mov    (%rdi),%rax
    9cf3:	48 8b 4f 08          	mov    0x8(%rdi),%rcx
    9cf7:	48 8b 49 18          	mov    0x18(%rcx),%rcx
    9cfb:	48 89 c7             	mov    %rax,%rdi
    9cfe:	ff e1                	jmpq   *%rcx

0000000000009d00 <_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$u32$GT$3fmt17h0d5c971f484cf42aE>:
    9d00:	48 83 ec 28          	sub    $0x28,%rsp
    9d04:	49 89 f2             	mov    %rsi,%r10
    9d07:	8b 37                	mov    (%rdi),%esi
    9d09:	41 bb 27 00 00 00    	mov    $0x27,%r11d
    9d0f:	48 81 fe 10 27 00 00 	cmp    $0x2710,%rsi
    9d16:	0f 82 bd 00 00 00    	jb     9dd9 <_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$u32$GT$3fmt17h0d5c971f484cf42aE+0xd9>
    9d1c:	41 bb 27 00 00 00    	mov    $0x27,%r11d
    9d22:	49 b8 4b 59 86 38 d6 	movabs $0x346dc5d63886594b,%r8
    9d29:	c5 6d 34 
    9d2c:	4c 8d 0d 37 19 03 00 	lea    0x31937(%rip),%r9        # 3b66a <_ZN4core3str15UTF8_CHAR_WIDTH17h639c7c3d8ce7e983E+0x112>
    9d33:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    9d3a:	00 00 00 
    9d3d:	0f 1f 00             	nopl   (%rax)
    9d40:	48 89 f0             	mov    %rsi,%rax
    9d43:	49 f7 e0             	mul    %r8
    9d46:	48 c1 ea 0b          	shr    $0xb,%rdx
    9d4a:	69 c2 10 27 00 00    	imul   $0x2710,%edx,%eax
    9d50:	89 f1                	mov    %esi,%ecx
    9d52:	29 c1                	sub    %eax,%ecx
    9d54:	0f b7 c1             	movzwl %cx,%eax
    9d57:	c1 e8 02             	shr    $0x2,%eax
    9d5a:	69 c0 7b 14 00 00    	imul   $0x147b,%eax,%eax
    9d60:	c1 e8 11             	shr    $0x11,%eax
    9d63:	6b f8 64             	imul   $0x64,%eax,%edi
    9d66:	29 f9                	sub    %edi,%ecx
    9d68:	0f b7 c9             	movzwl %cx,%ecx
    9d6b:	41 0f b7 04 41       	movzwl (%r9,%rax,2),%eax
    9d70:	66 42 89 44 1c fd    	mov    %ax,-0x3(%rsp,%r11,1)
    9d76:	41 0f b7 04 49       	movzwl (%r9,%rcx,2),%eax
    9d7b:	66 42 89 44 1c ff    	mov    %ax,-0x1(%rsp,%r11,1)
    9d81:	49 83 c3 fc          	add    $0xfffffffffffffffc,%r11
    9d85:	48 81 fe ff e0 f5 05 	cmp    $0x5f5e0ff,%rsi
    9d8c:	48 89 d6             	mov    %rdx,%rsi
    9d8f:	77 af                	ja     9d40 <_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$u32$GT$3fmt17h0d5c971f484cf42aE+0x40>
    9d91:	48 83 fa 63          	cmp    $0x63,%rdx
    9d95:	76 2f                	jbe    9dc6 <_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$u32$GT$3fmt17h0d5c971f484cf42aE+0xc6>
    9d97:	0f b7 c2             	movzwl %dx,%eax
    9d9a:	c1 e8 02             	shr    $0x2,%eax
    9d9d:	69 c0 7b 14 00 00    	imul   $0x147b,%eax,%eax
    9da3:	c1 e8 11             	shr    $0x11,%eax
    9da6:	6b c8 64             	imul   $0x64,%eax,%ecx
    9da9:	29 ca                	sub    %ecx,%edx
    9dab:	0f b7 ca             	movzwl %dx,%ecx
    9dae:	48 8d 15 b5 18 03 00 	lea    0x318b5(%rip),%rdx        # 3b66a <_ZN4core3str15UTF8_CHAR_WIDTH17h639c7c3d8ce7e983E+0x112>
    9db5:	0f b7 0c 4a          	movzwl (%rdx,%rcx,2),%ecx
    9db9:	66 42 89 4c 1c ff    	mov    %cx,-0x1(%rsp,%r11,1)
    9dbf:	49 83 c3 fe          	add    $0xfffffffffffffffe,%r11
    9dc3:	48 89 c2             	mov    %rax,%rdx
    9dc6:	48 83 fa 0a          	cmp    $0xa,%rdx
    9dca:	7d 18                	jge    9de4 <_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$u32$GT$3fmt17h0d5c971f484cf42aE+0xe4>
    9dcc:	80 c2 30             	add    $0x30,%dl
    9dcf:	42 88 14 1c          	mov    %dl,(%rsp,%r11,1)
    9dd3:	49 83 c3 ff          	add    $0xffffffffffffffff,%r11
    9dd7:	eb 20                	jmp    9df9 <_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$u32$GT$3fmt17h0d5c971f484cf42aE+0xf9>
    9dd9:	48 89 f2             	mov    %rsi,%rdx
    9ddc:	48 83 fa 63          	cmp    $0x63,%rdx
    9de0:	77 b5                	ja     9d97 <_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$u32$GT$3fmt17h0d5c971f484cf42aE+0x97>
    9de2:	eb e2                	jmp    9dc6 <_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$u32$GT$3fmt17h0d5c971f484cf42aE+0xc6>
    9de4:	48 8d 05 7f 18 03 00 	lea    0x3187f(%rip),%rax        # 3b66a <_ZN4core3str15UTF8_CHAR_WIDTH17h639c7c3d8ce7e983E+0x112>
    9deb:	0f b7 04 50          	movzwl (%rax,%rdx,2),%eax
    9def:	66 42 89 44 1c ff    	mov    %ax,-0x1(%rsp,%r11,1)
    9df5:	49 83 c3 fe          	add    $0xfffffffffffffffe,%r11
    9df9:	4e 8d 04 1c          	lea    (%rsp,%r11,1),%r8
    9dfd:	49 83 c0 01          	add    $0x1,%r8
    9e01:	41 b9 27 00 00 00    	mov    $0x27,%r9d
    9e07:	4d 29 d9             	sub    %r11,%r9
    9e0a:	48 8d 15 27 36 03 00 	lea    0x33627(%rip),%rdx        # 3d438 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0xad8>
    9e11:	4c 89 d7             	mov    %r10,%rdi
    9e14:	be 01 00 00 00       	mov    $0x1,%esi
    9e19:	31 c9                	xor    %ecx,%ecx
    9e1b:	e8 d0 d7 ff ff       	callq  75f0 <_ZN4core3fmt9Formatter12pad_integral17hc55c32e78eb96054E>
    9e20:	48 83 c4 28          	add    $0x28,%rsp
    9e24:	c3                   	retq   
    9e25:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    9e2c:	00 00 00 
    9e2f:	90                   	nop

0000000000009e30 <_ZN68_$LT$core..fmt..builders..PadAdapter$u20$as$u20$core..fmt..Write$GT$9write_str17hd01e6907c32c2493E>:
    9e30:	55                   	push   %rbp
    9e31:	41 57                	push   %r15
    9e33:	41 56                	push   %r14
    9e35:	41 55                	push   %r13
    9e37:	41 54                	push   %r12
    9e39:	53                   	push   %rbx
    9e3a:	50                   	push   %rax
    9e3b:	48 85 d2             	test   %rdx,%rdx
    9e3e:	0f 84 58 02 00 00    	je     a09c <_ZN68_$LT$core..fmt..builders..PadAdapter$u20$as$u20$core..fmt..Write$GT$9write_str17hd01e6907c32c2493E+0x26c>
    9e44:	48 89 d3             	mov    %rdx,%rbx
    9e47:	49 89 f6             	mov    %rsi,%r14
    9e4a:	49 89 ff             	mov    %rdi,%r15
    9e4d:	66 0f 6f 15 8b 05 03 	movdqa 0x3058b(%rip),%xmm2        # 3a3e0 <_fini+0x9c>
    9e54:	00 
    9e55:	66 0f 6f 1d 33 05 03 	movdqa 0x30533(%rip),%xmm3        # 3a390 <_fini+0x4c>
    9e5c:	00 
    9e5d:	66 0f 6f 25 3b 05 03 	movdqa 0x3053b(%rip),%xmm4        # 3a3a0 <_fini+0x5c>
    9e64:	00 
    9e65:	4c 8d 25 f0 25 03 00 	lea    0x325f0(%rip),%r12        # 3c45c <_ZN4core7unicode12unicode_data15grapheme_extend6BITSET17h68ce7f61ccfa32feE+0x9bc>
    9e6c:	49 8b 47 10          	mov    0x10(%r15),%rax
    9e70:	80 38 00             	cmpb   $0x0,(%rax)
    9e73:	75 38                	jne    9ead <_ZN68_$LT$core..fmt..builders..PadAdapter$u20$as$u20$core..fmt..Write$GT$9write_str17hd01e6907c32c2493E+0x7d>
    9e75:	eb 68                	jmp    9edf <_ZN68_$LT$core..fmt..builders..PadAdapter$u20$as$u20$core..fmt..Write$GT$9write_str17hd01e6907c32c2493E+0xaf>
    9e77:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    9e7e:	00 00 
    9e80:	4d 01 ee             	add    %r13,%r14
    9e83:	4c 29 eb             	sub    %r13,%rbx
    9e86:	66 0f 6f 15 52 05 03 	movdqa 0x30552(%rip),%xmm2        # 3a3e0 <_fini+0x9c>
    9e8d:	00 
    9e8e:	66 0f 6f 1d fa 04 03 	movdqa 0x304fa(%rip),%xmm3        # 3a390 <_fini+0x4c>
    9e95:	00 
    9e96:	66 0f 6f 25 02 05 03 	movdqa 0x30502(%rip),%xmm4        # 3a3a0 <_fini+0x5c>
    9e9d:	00 
    9e9e:	0f 84 f8 01 00 00    	je     a09c <_ZN68_$LT$core..fmt..builders..PadAdapter$u20$as$u20$core..fmt..Write$GT$9write_str17hd01e6907c32c2493E+0x26c>
    9ea4:	49 8b 47 10          	mov    0x10(%r15),%rax
    9ea8:	80 38 00             	cmpb   $0x0,(%rax)
    9eab:	74 32                	je     9edf <_ZN68_$LT$core..fmt..builders..PadAdapter$u20$as$u20$core..fmt..Write$GT$9write_str17hd01e6907c32c2493E+0xaf>
    9ead:	49 8b 3f             	mov    (%r15),%rdi
    9eb0:	49 8b 47 08          	mov    0x8(%r15),%rax
    9eb4:	ba 04 00 00 00       	mov    $0x4,%edx
    9eb9:	4c 89 e6             	mov    %r12,%rsi
    9ebc:	ff 50 18             	callq  *0x18(%rax)
    9ebf:	66 0f 6f 25 d9 04 03 	movdqa 0x304d9(%rip),%xmm4        # 3a3a0 <_fini+0x5c>
    9ec6:	00 
    9ec7:	66 0f 6f 1d c1 04 03 	movdqa 0x304c1(%rip),%xmm3        # 3a390 <_fini+0x4c>
    9ece:	00 
    9ecf:	66 0f 6f 15 09 05 03 	movdqa 0x30509(%rip),%xmm2        # 3a3e0 <_fini+0x9c>
    9ed6:	00 
    9ed7:	84 c0                	test   %al,%al
    9ed9:	0f 85 c1 01 00 00    	jne    a0a0 <_ZN68_$LT$core..fmt..builders..PadAdapter$u20$as$u20$core..fmt..Write$GT$9write_str17hd01e6907c32c2493E+0x270>
    9edf:	45 31 ed             	xor    %r13d,%r13d
    9ee2:	48 89 de             	mov    %rbx,%rsi
    9ee5:	4c 29 ee             	sub    %r13,%rsi
    9ee8:	4b 8d 04 2e          	lea    (%r14,%r13,1),%rax
    9eec:	89 c2                	mov    %eax,%edx
    9eee:	83 e2 07             	and    $0x7,%edx
    9ef1:	48 85 d2             	test   %rdx,%rdx
    9ef4:	0f 84 d6 00 00 00    	je     9fd0 <_ZN68_$LT$core..fmt..builders..PadAdapter$u20$as$u20$core..fmt..Write$GT$9write_str17hd01e6907c32c2493E+0x1a0>
    9efa:	b9 08 00 00 00       	mov    $0x8,%ecx
    9eff:	bf 00 00 00 00       	mov    $0x0,%edi
    9f04:	48 29 d1             	sub    %rdx,%rcx
    9f07:	74 6a                	je     9f73 <_ZN68_$LT$core..fmt..builders..PadAdapter$u20$as$u20$core..fmt..Write$GT$9write_str17hd01e6907c32c2493E+0x143>
    9f09:	48 39 f1             	cmp    %rsi,%rcx
    9f0c:	48 0f 47 ce          	cmova  %rsi,%rcx
    9f10:	48 89 cf             	mov    %rcx,%rdi
    9f13:	48 f7 df             	neg    %rdi
    9f16:	48 c7 c2 ff ff ff ff 	mov    $0xffffffffffffffff,%rdx
    9f1d:	0f 1f 00             	nopl   (%rax)
    9f20:	48 8d 2c 17          	lea    (%rdi,%rdx,1),%rbp
    9f24:	48 83 fd ff          	cmp    $0xffffffffffffffff,%rbp
    9f28:	74 46                	je     9f70 <_ZN68_$LT$core..fmt..builders..PadAdapter$u20$as$u20$core..fmt..Write$GT$9write_str17hd01e6907c32c2493E+0x140>
    9f2a:	80 7c 10 01 0a       	cmpb   $0xa,0x1(%rax,%rdx,1)
    9f2f:	48 8d 52 01          	lea    0x1(%rdx),%rdx
    9f33:	75 eb                	jne    9f20 <_ZN68_$LT$core..fmt..builders..PadAdapter$u20$as$u20$core..fmt..Write$GT$9write_str17hd01e6907c32c2493E+0xf0>
    9f35:	0f 94 c0             	sete   %al
    9f38:	04 01                	add    $0x1,%al
    9f3a:	0f b6 f8             	movzbl %al,%edi
    9f3d:	83 e7 01             	and    $0x1,%edi
    9f40:	48 01 d7             	add    %rdx,%rdi
    9f43:	4a 8d 04 2f          	lea    (%rdi,%r13,1),%rax
    9f47:	49 01 fd             	add    %rdi,%r13
    9f4a:	49 83 c5 01          	add    $0x1,%r13
    9f4e:	48 39 d8             	cmp    %rbx,%rax
    9f51:	0f 83 d3 00 00 00    	jae    a02a <_ZN68_$LT$core..fmt..builders..PadAdapter$u20$as$u20$core..fmt..Write$GT$9write_str17hd01e6907c32c2493E+0x1fa>
    9f57:	41 80 3c 06 0a       	cmpb   $0xa,(%r14,%rax,1)
    9f5c:	0f 85 c8 00 00 00    	jne    a02a <_ZN68_$LT$core..fmt..builders..PadAdapter$u20$as$u20$core..fmt..Write$GT$9write_str17hd01e6907c32c2493E+0x1fa>
    9f62:	e9 31 01 00 00       	jmpq   a098 <_ZN68_$LT$core..fmt..builders..PadAdapter$u20$as$u20$core..fmt..Write$GT$9write_str17hd01e6907c32c2493E+0x268>
    9f67:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    9f6e:	00 00 
    9f70:	48 89 cf             	mov    %rcx,%rdi
    9f73:	48 83 fe 10          	cmp    $0x10,%rsi
    9f77:	72 67                	jb     9fe0 <_ZN68_$LT$core..fmt..builders..PadAdapter$u20$as$u20$core..fmt..Write$GT$9write_str17hd01e6907c32c2493E+0x1b0>
    9f79:	48 8d 4e f0          	lea    -0x10(%rsi),%rcx
    9f7d:	48 39 cf             	cmp    %rcx,%rdi
    9f80:	77 5e                	ja     9fe0 <_ZN68_$LT$core..fmt..builders..PadAdapter$u20$as$u20$core..fmt..Write$GT$9write_str17hd01e6907c32c2493E+0x1b0>
    9f82:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    9f89:	00 00 00 
    9f8c:	0f 1f 40 00          	nopl   0x0(%rax)
    9f90:	f3 0f 6f 04 38       	movdqu (%rax,%rdi,1),%xmm0
    9f95:	66 0f 6f c8          	movdqa %xmm0,%xmm1
    9f99:	66 0f ef ca          	pxor   %xmm2,%xmm1
    9f9d:	66 0f d4 cb          	paddq  %xmm3,%xmm1
    9fa1:	66 0f df c1          	pandn  %xmm1,%xmm0
    9fa5:	66 0f db c4          	pand   %xmm4,%xmm0
    9fa9:	66 48 0f 7e c2       	movq   %xmm0,%rdx
    9fae:	66 0f 70 c0 4e       	pshufd $0x4e,%xmm0,%xmm0
    9fb3:	66 48 0f 7e c5       	movq   %xmm0,%rbp
    9fb8:	48 09 d5             	or     %rdx,%rbp
    9fbb:	75 09                	jne    9fc6 <_ZN68_$LT$core..fmt..builders..PadAdapter$u20$as$u20$core..fmt..Write$GT$9write_str17hd01e6907c32c2493E+0x196>
    9fbd:	48 83 c7 10          	add    $0x10,%rdi
    9fc1:	48 39 cf             	cmp    %rcx,%rdi
    9fc4:	76 ca                	jbe    9f90 <_ZN68_$LT$core..fmt..builders..PadAdapter$u20$as$u20$core..fmt..Write$GT$9write_str17hd01e6907c32c2493E+0x160>
    9fc6:	48 39 f7             	cmp    %rsi,%rdi
    9fc9:	76 15                	jbe    9fe0 <_ZN68_$LT$core..fmt..builders..PadAdapter$u20$as$u20$core..fmt..Write$GT$9write_str17hd01e6907c32c2493E+0x1b0>
    9fcb:	e9 e1 00 00 00       	jmpq   a0b1 <_ZN68_$LT$core..fmt..builders..PadAdapter$u20$as$u20$core..fmt..Write$GT$9write_str17hd01e6907c32c2493E+0x281>
    9fd0:	31 ff                	xor    %edi,%edi
    9fd2:	48 83 fe 10          	cmp    $0x10,%rsi
    9fd6:	73 a1                	jae    9f79 <_ZN68_$LT$core..fmt..builders..PadAdapter$u20$as$u20$core..fmt..Write$GT$9write_str17hd01e6907c32c2493E+0x149>
    9fd8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    9fdf:	00 
    9fe0:	4a 8d 0c 2f          	lea    (%rdi,%r13,1),%rcx
    9fe4:	b8 01 00 00 00       	mov    $0x1,%eax
    9fe9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    9ff0:	48 39 cb             	cmp    %rcx,%rbx
    9ff3:	74 4b                	je     a040 <_ZN68_$LT$core..fmt..builders..PadAdapter$u20$as$u20$core..fmt..Write$GT$9write_str17hd01e6907c32c2493E+0x210>
    9ff5:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
    9ff9:	41 80 3c 0e 0a       	cmpb   $0xa,(%r14,%rcx,1)
    9ffe:	48 8d 49 01          	lea    0x1(%rcx),%rcx
    a002:	75 ec                	jne    9ff0 <_ZN68_$LT$core..fmt..builders..PadAdapter$u20$as$u20$core..fmt..Write$GT$9write_str17hd01e6907c32c2493E+0x1c0>
    a004:	0f 94 c1             	sete   %cl
    a007:	80 c1 01             	add    $0x1,%cl
    a00a:	0f b6 c9             	movzbl %cl,%ecx
    a00d:	83 e1 01             	and    $0x1,%ecx
    a010:	48 01 cf             	add    %rcx,%rdi
    a013:	48 29 c7             	sub    %rax,%rdi
    a016:	4a 8d 04 2f          	lea    (%rdi,%r13,1),%rax
    a01a:	49 01 fd             	add    %rdi,%r13
    a01d:	49 83 c5 01          	add    $0x1,%r13
    a021:	48 39 d8             	cmp    %rbx,%rax
    a024:	0f 82 2d ff ff ff    	jb     9f57 <_ZN68_$LT$core..fmt..builders..PadAdapter$u20$as$u20$core..fmt..Write$GT$9write_str17hd01e6907c32c2493E+0x127>
    a02a:	49 39 dd             	cmp    %rbx,%r13
    a02d:	0f 86 af fe ff ff    	jbe    9ee2 <_ZN68_$LT$core..fmt..builders..PadAdapter$u20$as$u20$core..fmt..Write$GT$9write_str17hd01e6907c32c2493E+0xb2>
    a033:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    a03a:	00 00 00 
    a03d:	0f 1f 00             	nopl   (%rax)
    a040:	31 c0                	xor    %eax,%eax
    a042:	49 89 dd             	mov    %rbx,%r13
    a045:	49 8b 4f 10          	mov    0x10(%r15),%rcx
    a049:	88 01                	mov    %al,(%rcx)
    a04b:	49 8b 3f             	mov    (%r15),%rdi
    a04e:	49 8b 4f 08          	mov    0x8(%r15),%rcx
    a052:	4d 85 ed             	test   %r13,%r13
    a055:	0f 94 c0             	sete   %al
    a058:	4c 39 eb             	cmp    %r13,%rbx
    a05b:	40 0f 94 c5          	sete   %bpl
    a05f:	40 08 c5             	or     %al,%bpl
    a062:	75 0c                	jne    a070 <_ZN68_$LT$core..fmt..builders..PadAdapter$u20$as$u20$core..fmt..Write$GT$9write_str17hd01e6907c32c2493E+0x240>
    a064:	4c 39 eb             	cmp    %r13,%rbx
    a067:	76 4f                	jbe    a0b8 <_ZN68_$LT$core..fmt..builders..PadAdapter$u20$as$u20$core..fmt..Write$GT$9write_str17hd01e6907c32c2493E+0x288>
    a069:	43 80 3c 2e bf       	cmpb   $0xbf,(%r14,%r13,1)
    a06e:	7e 48                	jle    a0b8 <_ZN68_$LT$core..fmt..builders..PadAdapter$u20$as$u20$core..fmt..Write$GT$9write_str17hd01e6907c32c2493E+0x288>
    a070:	4c 89 f6             	mov    %r14,%rsi
    a073:	4c 89 ea             	mov    %r13,%rdx
    a076:	ff 51 18             	callq  *0x18(%rcx)
    a079:	84 c0                	test   %al,%al
    a07b:	75 23                	jne    a0a0 <_ZN68_$LT$core..fmt..builders..PadAdapter$u20$as$u20$core..fmt..Write$GT$9write_str17hd01e6907c32c2493E+0x270>
    a07d:	40 84 ed             	test   %bpl,%bpl
    a080:	0f 85 fa fd ff ff    	jne    9e80 <_ZN68_$LT$core..fmt..builders..PadAdapter$u20$as$u20$core..fmt..Write$GT$9write_str17hd01e6907c32c2493E+0x50>
    a086:	4c 39 eb             	cmp    %r13,%rbx
    a089:	76 3f                	jbe    a0ca <_ZN68_$LT$core..fmt..builders..PadAdapter$u20$as$u20$core..fmt..Write$GT$9write_str17hd01e6907c32c2493E+0x29a>
    a08b:	43 80 3c 2e bf       	cmpb   $0xbf,(%r14,%r13,1)
    a090:	0f 8f ea fd ff ff    	jg     9e80 <_ZN68_$LT$core..fmt..builders..PadAdapter$u20$as$u20$core..fmt..Write$GT$9write_str17hd01e6907c32c2493E+0x50>
    a096:	eb 32                	jmp    a0ca <_ZN68_$LT$core..fmt..builders..PadAdapter$u20$as$u20$core..fmt..Write$GT$9write_str17hd01e6907c32c2493E+0x29a>
    a098:	b0 01                	mov    $0x1,%al
    a09a:	eb a9                	jmp    a045 <_ZN68_$LT$core..fmt..builders..PadAdapter$u20$as$u20$core..fmt..Write$GT$9write_str17hd01e6907c32c2493E+0x215>
    a09c:	31 c0                	xor    %eax,%eax
    a09e:	eb 02                	jmp    a0a2 <_ZN68_$LT$core..fmt..builders..PadAdapter$u20$as$u20$core..fmt..Write$GT$9write_str17hd01e6907c32c2493E+0x272>
    a0a0:	b0 01                	mov    $0x1,%al
    a0a2:	48 83 c4 08          	add    $0x8,%rsp
    a0a6:	5b                   	pop    %rbx
    a0a7:	41 5c                	pop    %r12
    a0a9:	41 5d                	pop    %r13
    a0ab:	41 5e                	pop    %r14
    a0ad:	41 5f                	pop    %r15
    a0af:	5d                   	pop    %rbp
    a0b0:	c3                   	retq   
    a0b1:	e8 9a db ff ff       	callq  7c50 <_ZN4core5slice22slice_index_order_fail17h7bcf2f94ba9e06deE>
    a0b6:	0f 0b                	ud2    
    a0b8:	4c 89 f7             	mov    %r14,%rdi
    a0bb:	48 89 de             	mov    %rbx,%rsi
    a0be:	31 d2                	xor    %edx,%edx
    a0c0:	4c 89 e9             	mov    %r13,%rcx
    a0c3:	e8 b8 e0 ff ff       	callq  8180 <_ZN4core3str16slice_error_fail17hc48083e4f6af7f4aE>
    a0c8:	0f 0b                	ud2    
    a0ca:	4c 89 f7             	mov    %r14,%rdi
    a0cd:	48 89 de             	mov    %rbx,%rsi
    a0d0:	4c 89 ea             	mov    %r13,%rdx
    a0d3:	48 89 d9             	mov    %rbx,%rcx
    a0d6:	e8 a5 e0 ff ff       	callq  8180 <_ZN4core3str16slice_error_fail17hc48083e4f6af7f4aE>
    a0db:	0f 0b                	ud2    
    a0dd:	0f 1f 00             	nopl   (%rax)

000000000000a0e0 <_ZN4core3fmt8builders11DebugStruct5field17h12f9df3a6de8af04E>:
    a0e0:	55                   	push   %rbp
    a0e1:	41 57                	push   %r15
    a0e3:	41 56                	push   %r14
    a0e5:	41 55                	push   %r13
    a0e7:	41 54                	push   %r12
    a0e9:	53                   	push   %rbx
    a0ea:	48 83 ec 78          	sub    $0x78,%rsp
    a0ee:	48 89 fb             	mov    %rdi,%rbx
    a0f1:	41 b5 01             	mov    $0x1,%r13b
    a0f4:	80 7f 08 00          	cmpb   $0x0,0x8(%rdi)
    a0f8:	74 1a                	je     a114 <_ZN4core3fmt8builders11DebugStruct5field17h12f9df3a6de8af04E+0x34>
    a0fa:	44 88 6b 08          	mov    %r13b,0x8(%rbx)
    a0fe:	c6 43 09 01          	movb   $0x1,0x9(%rbx)
    a102:	48 89 d8             	mov    %rbx,%rax
    a105:	48 83 c4 78          	add    $0x78,%rsp
    a109:	5b                   	pop    %rbx
    a10a:	41 5c                	pop    %r12
    a10c:	41 5d                	pop    %r13
    a10e:	41 5e                	pop    %r14
    a110:	41 5f                	pop    %r15
    a112:	5d                   	pop    %rbp
    a113:	c3                   	retq   
    a114:	4d 89 c6             	mov    %r8,%r14
    a117:	49 89 cf             	mov    %rcx,%r15
    a11a:	49 89 d4             	mov    %rdx,%r12
    a11d:	48 89 f5             	mov    %rsi,%rbp
    a120:	48 8b 03             	mov    (%rbx),%rax
    a123:	8b 50 30             	mov    0x30(%rax),%edx
    a126:	8a 4b 09             	mov    0x9(%rbx),%cl
    a129:	f6 c2 04             	test   $0x4,%dl
    a12c:	75 75                	jne    a1a3 <_ZN4core3fmt8builders11DebugStruct5field17h12f9df3a6de8af04E+0xc3>
    a12e:	31 d2                	xor    %edx,%edx
    a130:	84 c9                	test   %cl,%cl
    a132:	48 8d 0d 10 27 03 00 	lea    0x32710(%rip),%rcx        # 3c849 <str.1+0x99>
    a139:	48 8d 35 a4 30 03 00 	lea    0x330a4(%rip),%rsi        # 3d1e4 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x884>
    a140:	48 0f 44 f1          	cmove  %rcx,%rsi
    a144:	0f 94 c2             	sete   %dl
    a147:	48 83 ca 02          	or     $0x2,%rdx
    a14b:	48 8b 78 20          	mov    0x20(%rax),%rdi
    a14f:	48 8b 40 28          	mov    0x28(%rax),%rax
    a153:	ff 50 18             	callq  *0x18(%rax)
    a156:	84 c0                	test   %al,%al
    a158:	75 a0                	jne    a0fa <_ZN4core3fmt8builders11DebugStruct5field17h12f9df3a6de8af04E+0x1a>
    a15a:	48 8b 03             	mov    (%rbx),%rax
    a15d:	48 8b 78 20          	mov    0x20(%rax),%rdi
    a161:	48 8b 40 28          	mov    0x28(%rax),%rax
    a165:	48 89 ee             	mov    %rbp,%rsi
    a168:	4c 89 e2             	mov    %r12,%rdx
    a16b:	ff 50 18             	callq  *0x18(%rax)
    a16e:	84 c0                	test   %al,%al
    a170:	75 88                	jne    a0fa <_ZN4core3fmt8builders11DebugStruct5field17h12f9df3a6de8af04E+0x1a>
    a172:	48 8b 03             	mov    (%rbx),%rax
    a175:	48 8b 78 20          	mov    0x20(%rax),%rdi
    a179:	48 8b 40 28          	mov    0x28(%rax),%rax
    a17d:	48 8d 35 6d 3a 03 00 	lea    0x33a6d(%rip),%rsi        # 3dbf1 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x1291>
    a184:	ba 02 00 00 00       	mov    $0x2,%edx
    a189:	ff 50 18             	callq  *0x18(%rax)
    a18c:	84 c0                	test   %al,%al
    a18e:	0f 85 66 ff ff ff    	jne    a0fa <_ZN4core3fmt8builders11DebugStruct5field17h12f9df3a6de8af04E+0x1a>
    a194:	48 8b 33             	mov    (%rbx),%rsi
    a197:	4c 89 ff             	mov    %r15,%rdi
    a19a:	41 ff 56 18          	callq  *0x18(%r14)
    a19e:	e9 da 00 00 00       	jmpq   a27d <_ZN4core3fmt8builders11DebugStruct5field17h12f9df3a6de8af04E+0x19d>
    a1a3:	84 c9                	test   %cl,%cl
    a1a5:	75 25                	jne    a1cc <_ZN4core3fmt8builders11DebugStruct5field17h12f9df3a6de8af04E+0xec>
    a1a7:	48 8b 78 20          	mov    0x20(%rax),%rdi
    a1ab:	48 8b 40 28          	mov    0x28(%rax),%rax
    a1af:	48 8d 35 96 26 03 00 	lea    0x32696(%rip),%rsi        # 3c84c <str.1+0x9c>
    a1b6:	ba 03 00 00 00       	mov    $0x3,%edx
    a1bb:	ff 50 18             	callq  *0x18(%rax)
    a1be:	84 c0                	test   %al,%al
    a1c0:	0f 85 34 ff ff ff    	jne    a0fa <_ZN4core3fmt8builders11DebugStruct5field17h12f9df3a6de8af04E+0x1a>
    a1c6:	48 8b 03             	mov    (%rbx),%rax
    a1c9:	8b 50 30             	mov    0x30(%rax),%edx
    a1cc:	c6 44 24 0f 01       	movb   $0x1,0xf(%rsp)
    a1d1:	0f 10 40 20          	movups 0x20(%rax),%xmm0
    a1d5:	0f 29 44 24 10       	movaps %xmm0,0x10(%rsp)
    a1da:	48 8d 4c 24 0f       	lea    0xf(%rsp),%rcx
    a1df:	48 89 4c 24 20       	mov    %rcx,0x20(%rsp)
    a1e4:	8b 48 34             	mov    0x34(%rax),%ecx
    a1e7:	40 8a 70 38          	mov    0x38(%rax),%sil
    a1eb:	0f 10 00             	movups (%rax),%xmm0
    a1ee:	0f 10 48 10          	movups 0x10(%rax),%xmm1
    a1f2:	89 54 24 60          	mov    %edx,0x60(%rsp)
    a1f6:	89 4c 24 64          	mov    %ecx,0x64(%rsp)
    a1fa:	40 88 74 24 68       	mov    %sil,0x68(%rsp)
    a1ff:	0f 29 44 24 30       	movaps %xmm0,0x30(%rsp)
    a204:	0f 29 4c 24 40       	movaps %xmm1,0x40(%rsp)
    a209:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
    a20e:	48 89 7c 24 50       	mov    %rdi,0x50(%rsp)
    a213:	48 8d 05 7e c4 23 00 	lea    0x23c47e(%rip),%rax        # 246698 <__init_array_end+0x688>
    a21a:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
    a21f:	48 89 ee             	mov    %rbp,%rsi
    a222:	4c 89 e2             	mov    %r12,%rdx
    a225:	e8 06 fc ff ff       	callq  9e30 <_ZN68_$LT$core..fmt..builders..PadAdapter$u20$as$u20$core..fmt..Write$GT$9write_str17hd01e6907c32c2493E>
    a22a:	84 c0                	test   %al,%al
    a22c:	0f 85 c8 fe ff ff    	jne    a0fa <_ZN4core3fmt8builders11DebugStruct5field17h12f9df3a6de8af04E+0x1a>
    a232:	48 8d 35 b8 39 03 00 	lea    0x339b8(%rip),%rsi        # 3dbf1 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x1291>
    a239:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
    a23e:	ba 02 00 00 00       	mov    $0x2,%edx
    a243:	e8 e8 fb ff ff       	callq  9e30 <_ZN68_$LT$core..fmt..builders..PadAdapter$u20$as$u20$core..fmt..Write$GT$9write_str17hd01e6907c32c2493E>
    a248:	84 c0                	test   %al,%al
    a24a:	0f 85 aa fe ff ff    	jne    a0fa <_ZN4core3fmt8builders11DebugStruct5field17h12f9df3a6de8af04E+0x1a>
    a250:	48 8d 74 24 30       	lea    0x30(%rsp),%rsi
    a255:	4c 89 ff             	mov    %r15,%rdi
    a258:	41 ff 56 18          	callq  *0x18(%r14)
    a25c:	84 c0                	test   %al,%al
    a25e:	0f 85 96 fe ff ff    	jne    a0fa <_ZN4core3fmt8builders11DebugStruct5field17h12f9df3a6de8af04E+0x1a>
    a264:	48 8b 7c 24 50       	mov    0x50(%rsp),%rdi
    a269:	48 8b 44 24 58       	mov    0x58(%rsp),%rax
    a26e:	48 8d 35 da 25 03 00 	lea    0x325da(%rip),%rsi        # 3c84f <str.1+0x9f>
    a275:	ba 02 00 00 00       	mov    $0x2,%edx
    a27a:	ff 50 18             	callq  *0x18(%rax)
    a27d:	41 89 c5             	mov    %eax,%r13d
    a280:	e9 75 fe ff ff       	jmpq   a0fa <_ZN4core3fmt8builders11DebugStruct5field17h12f9df3a6de8af04E+0x1a>
    a285:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    a28c:	00 00 00 
    a28f:	90                   	nop

000000000000a290 <_ZN4core3fmt5Write10write_char17ha6d58e44f7254117E>:
    a290:	50                   	push   %rax
    a291:	89 f0                	mov    %esi,%eax
    a293:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%rsp)
    a29a:	00 
    a29b:	81 fe 80 00 00 00    	cmp    $0x80,%esi
    a2a1:	73 15                	jae    a2b8 <_ZN4core3fmt5Write10write_char17ha6d58e44f7254117E+0x28>
    a2a3:	48 8d 74 24 04       	lea    0x4(%rsp),%rsi
    a2a8:	88 44 24 04          	mov    %al,0x4(%rsp)
    a2ac:	ba 01 00 00 00       	mov    $0x1,%edx
    a2b1:	e8 7a fb ff ff       	callq  9e30 <_ZN68_$LT$core..fmt..builders..PadAdapter$u20$as$u20$core..fmt..Write$GT$9write_str17hd01e6907c32c2493E>
    a2b6:	59                   	pop    %rcx
    a2b7:	c3                   	retq   
    a2b8:	48 8d 74 24 04       	lea    0x4(%rsp),%rsi
    a2bd:	89 c1                	mov    %eax,%ecx
    a2bf:	3d 00 08 00 00       	cmp    $0x800,%eax
    a2c4:	73 21                	jae    a2e7 <_ZN4core3fmt5Write10write_char17ha6d58e44f7254117E+0x57>
    a2c6:	c1 e9 06             	shr    $0x6,%ecx
    a2c9:	80 e1 1f             	and    $0x1f,%cl
    a2cc:	80 c9 c0             	or     $0xc0,%cl
    a2cf:	88 4c 24 04          	mov    %cl,0x4(%rsp)
    a2d3:	24 3f                	and    $0x3f,%al
    a2d5:	0c 80                	or     $0x80,%al
    a2d7:	88 44 24 05          	mov    %al,0x5(%rsp)
    a2db:	ba 02 00 00 00       	mov    $0x2,%edx
    a2e0:	e8 4b fb ff ff       	callq  9e30 <_ZN68_$LT$core..fmt..builders..PadAdapter$u20$as$u20$core..fmt..Write$GT$9write_str17hd01e6907c32c2493E>
    a2e5:	59                   	pop    %rcx
    a2e6:	c3                   	retq   
    a2e7:	3d 00 00 01 00       	cmp    $0x10000,%eax
    a2ec:	73 30                	jae    a31e <_ZN4core3fmt5Write10write_char17ha6d58e44f7254117E+0x8e>
    a2ee:	c1 e9 0c             	shr    $0xc,%ecx
    a2f1:	80 e1 0f             	and    $0xf,%cl
    a2f4:	80 c9 e0             	or     $0xe0,%cl
    a2f7:	88 4c 24 04          	mov    %cl,0x4(%rsp)
    a2fb:	89 c1                	mov    %eax,%ecx
    a2fd:	c1 e9 06             	shr    $0x6,%ecx
    a300:	80 e1 3f             	and    $0x3f,%cl
    a303:	80 c9 80             	or     $0x80,%cl
    a306:	88 4c 24 05          	mov    %cl,0x5(%rsp)
    a30a:	24 3f                	and    $0x3f,%al
    a30c:	0c 80                	or     $0x80,%al
    a30e:	88 44 24 06          	mov    %al,0x6(%rsp)
    a312:	ba 03 00 00 00       	mov    $0x3,%edx
    a317:	e8 14 fb ff ff       	callq  9e30 <_ZN68_$LT$core..fmt..builders..PadAdapter$u20$as$u20$core..fmt..Write$GT$9write_str17hd01e6907c32c2493E>
    a31c:	59                   	pop    %rcx
    a31d:	c3                   	retq   
    a31e:	c1 e9 12             	shr    $0x12,%ecx
    a321:	80 c9 f0             	or     $0xf0,%cl
    a324:	88 4c 24 04          	mov    %cl,0x4(%rsp)
    a328:	89 c1                	mov    %eax,%ecx
    a32a:	c1 e9 0c             	shr    $0xc,%ecx
    a32d:	80 e1 3f             	and    $0x3f,%cl
    a330:	80 c9 80             	or     $0x80,%cl
    a333:	88 4c 24 05          	mov    %cl,0x5(%rsp)
    a337:	89 c1                	mov    %eax,%ecx
    a339:	c1 e9 06             	shr    $0x6,%ecx
    a33c:	80 e1 3f             	and    $0x3f,%cl
    a33f:	80 c9 80             	or     $0x80,%cl
    a342:	88 4c 24 06          	mov    %cl,0x6(%rsp)
    a346:	24 3f                	and    $0x3f,%al
    a348:	0c 80                	or     $0x80,%al
    a34a:	88 44 24 07          	mov    %al,0x7(%rsp)
    a34e:	ba 04 00 00 00       	mov    $0x4,%edx
    a353:	e8 d8 fa ff ff       	callq  9e30 <_ZN68_$LT$core..fmt..builders..PadAdapter$u20$as$u20$core..fmt..Write$GT$9write_str17hd01e6907c32c2493E>
    a358:	59                   	pop    %rcx
    a359:	c3                   	retq   
    a35a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000000a360 <_ZN4core3fmt5Write9write_fmt17hd5b09948deb95d85E>:
    a360:	48 83 ec 48          	sub    $0x48,%rsp
    a364:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
    a369:	0f 10 06             	movups (%rsi),%xmm0
    a36c:	0f 10 4e 10          	movups 0x10(%rsi),%xmm1
    a370:	0f 10 56 20          	movups 0x20(%rsi),%xmm2
    a374:	0f 29 54 24 30       	movaps %xmm2,0x30(%rsp)
    a379:	0f 29 4c 24 20       	movaps %xmm1,0x20(%rsp)
    a37e:	0f 29 44 24 10       	movaps %xmm0,0x10(%rsp)
    a383:	48 8d 35 3e c3 23 00 	lea    0x23c33e(%rip),%rsi        # 2466c8 <__init_array_end+0x6b8>
    a38a:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
    a38f:	48 8d 54 24 10       	lea    0x10(%rsp),%rdx
    a394:	e8 97 e6 ff ff       	callq  8a30 <_ZN4core3fmt5write17h0db54a985afb558eE>
    a399:	48 83 c4 48          	add    $0x48,%rsp
    a39d:	c3                   	retq   
    a39e:	66 90                	xchg   %ax,%ax

000000000000a3a0 <_ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$9write_str17hde514a83b0c52f91E>:
    a3a0:	48 8b 3f             	mov    (%rdi),%rdi
    a3a3:	e9 88 fa ff ff       	jmpq   9e30 <_ZN68_$LT$core..fmt..builders..PadAdapter$u20$as$u20$core..fmt..Write$GT$9write_str17hd01e6907c32c2493E>
    a3a8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    a3af:	00 

000000000000a3b0 <_ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$10write_char17haa910e856b629553E>:
    a3b0:	50                   	push   %rax
    a3b1:	89 f0                	mov    %esi,%eax
    a3b3:	48 8b 3f             	mov    (%rdi),%rdi
    a3b6:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%rsp)
    a3bd:	00 
    a3be:	81 fe 80 00 00 00    	cmp    $0x80,%esi
    a3c4:	73 15                	jae    a3db <_ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$10write_char17haa910e856b629553E+0x2b>
    a3c6:	48 8d 74 24 04       	lea    0x4(%rsp),%rsi
    a3cb:	88 44 24 04          	mov    %al,0x4(%rsp)
    a3cf:	ba 01 00 00 00       	mov    $0x1,%edx
    a3d4:	e8 57 fa ff ff       	callq  9e30 <_ZN68_$LT$core..fmt..builders..PadAdapter$u20$as$u20$core..fmt..Write$GT$9write_str17hd01e6907c32c2493E>
    a3d9:	59                   	pop    %rcx
    a3da:	c3                   	retq   
    a3db:	48 8d 74 24 04       	lea    0x4(%rsp),%rsi
    a3e0:	89 c1                	mov    %eax,%ecx
    a3e2:	3d 00 08 00 00       	cmp    $0x800,%eax
    a3e7:	73 21                	jae    a40a <_ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$10write_char17haa910e856b629553E+0x5a>
    a3e9:	c1 e9 06             	shr    $0x6,%ecx
    a3ec:	80 e1 1f             	and    $0x1f,%cl
    a3ef:	80 c9 c0             	or     $0xc0,%cl
    a3f2:	88 4c 24 04          	mov    %cl,0x4(%rsp)
    a3f6:	24 3f                	and    $0x3f,%al
    a3f8:	0c 80                	or     $0x80,%al
    a3fa:	88 44 24 05          	mov    %al,0x5(%rsp)
    a3fe:	ba 02 00 00 00       	mov    $0x2,%edx
    a403:	e8 28 fa ff ff       	callq  9e30 <_ZN68_$LT$core..fmt..builders..PadAdapter$u20$as$u20$core..fmt..Write$GT$9write_str17hd01e6907c32c2493E>
    a408:	59                   	pop    %rcx
    a409:	c3                   	retq   
    a40a:	3d 00 00 01 00       	cmp    $0x10000,%eax
    a40f:	73 30                	jae    a441 <_ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$10write_char17haa910e856b629553E+0x91>
    a411:	c1 e9 0c             	shr    $0xc,%ecx
    a414:	80 e1 0f             	and    $0xf,%cl
    a417:	80 c9 e0             	or     $0xe0,%cl
    a41a:	88 4c 24 04          	mov    %cl,0x4(%rsp)
    a41e:	89 c1                	mov    %eax,%ecx
    a420:	c1 e9 06             	shr    $0x6,%ecx
    a423:	80 e1 3f             	and    $0x3f,%cl
    a426:	80 c9 80             	or     $0x80,%cl
    a429:	88 4c 24 05          	mov    %cl,0x5(%rsp)
    a42d:	24 3f                	and    $0x3f,%al
    a42f:	0c 80                	or     $0x80,%al
    a431:	88 44 24 06          	mov    %al,0x6(%rsp)
    a435:	ba 03 00 00 00       	mov    $0x3,%edx
    a43a:	e8 f1 f9 ff ff       	callq  9e30 <_ZN68_$LT$core..fmt..builders..PadAdapter$u20$as$u20$core..fmt..Write$GT$9write_str17hd01e6907c32c2493E>
    a43f:	59                   	pop    %rcx
    a440:	c3                   	retq   
    a441:	c1 e9 12             	shr    $0x12,%ecx
    a444:	80 c9 f0             	or     $0xf0,%cl
    a447:	88 4c 24 04          	mov    %cl,0x4(%rsp)
    a44b:	89 c1                	mov    %eax,%ecx
    a44d:	c1 e9 0c             	shr    $0xc,%ecx
    a450:	80 e1 3f             	and    $0x3f,%cl
    a453:	80 c9 80             	or     $0x80,%cl
    a456:	88 4c 24 05          	mov    %cl,0x5(%rsp)
    a45a:	89 c1                	mov    %eax,%ecx
    a45c:	c1 e9 06             	shr    $0x6,%ecx
    a45f:	80 e1 3f             	and    $0x3f,%cl
    a462:	80 c9 80             	or     $0x80,%cl
    a465:	88 4c 24 06          	mov    %cl,0x6(%rsp)
    a469:	24 3f                	and    $0x3f,%al
    a46b:	0c 80                	or     $0x80,%al
    a46d:	88 44 24 07          	mov    %al,0x7(%rsp)
    a471:	ba 04 00 00 00       	mov    $0x4,%edx
    a476:	e8 b5 f9 ff ff       	callq  9e30 <_ZN68_$LT$core..fmt..builders..PadAdapter$u20$as$u20$core..fmt..Write$GT$9write_str17hd01e6907c32c2493E>
    a47b:	59                   	pop    %rcx
    a47c:	c3                   	retq   
    a47d:	0f 1f 00             	nopl   (%rax)

000000000000a480 <_ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$9write_fmt17h91210661878babfdE>:
    a480:	48 83 ec 48          	sub    $0x48,%rsp
    a484:	48 8b 07             	mov    (%rdi),%rax
    a487:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    a48c:	0f 10 06             	movups (%rsi),%xmm0
    a48f:	0f 10 4e 10          	movups 0x10(%rsi),%xmm1
    a493:	0f 10 56 20          	movups 0x20(%rsi),%xmm2
    a497:	0f 29 54 24 30       	movaps %xmm2,0x30(%rsp)
    a49c:	0f 29 4c 24 20       	movaps %xmm1,0x20(%rsp)
    a4a1:	0f 29 44 24 10       	movaps %xmm0,0x10(%rsp)
    a4a6:	48 8d 35 1b c2 23 00 	lea    0x23c21b(%rip),%rsi        # 2466c8 <__init_array_end+0x6b8>
    a4ad:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
    a4b2:	48 8d 54 24 10       	lea    0x10(%rsp),%rdx
    a4b7:	e8 74 e5 ff ff       	callq  8a30 <_ZN4core3fmt5write17h0db54a985afb558eE>
    a4bc:	48 83 c4 48          	add    $0x48,%rsp
    a4c0:	c3                   	retq   
    a4c1:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    a4c8:	00 00 00 
    a4cb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000a4d0 <_ZN57_$LT$core..fmt..Arguments$u20$as$u20$core..fmt..Debug$GT$3fmt17hdeddc72b2c89543dE>:
    a4d0:	48 83 ec 38          	sub    $0x38,%rsp
    a4d4:	48 8b 46 20          	mov    0x20(%rsi),%rax
    a4d8:	48 8b 76 28          	mov    0x28(%rsi),%rsi
    a4dc:	0f 10 07             	movups (%rdi),%xmm0
    a4df:	0f 10 4f 10          	movups 0x10(%rdi),%xmm1
    a4e3:	0f 10 57 20          	movups 0x20(%rdi),%xmm2
    a4e7:	0f 29 54 24 20       	movaps %xmm2,0x20(%rsp)
    a4ec:	0f 29 4c 24 10       	movaps %xmm1,0x10(%rsp)
    a4f1:	0f 29 04 24          	movaps %xmm0,(%rsp)
    a4f5:	48 89 e2             	mov    %rsp,%rdx
    a4f8:	48 89 c7             	mov    %rax,%rdi
    a4fb:	e8 30 e5 ff ff       	callq  8a30 <_ZN4core3fmt5write17h0db54a985afb558eE>
    a500:	48 83 c4 38          	add    $0x38,%rsp
    a504:	c3                   	retq   
    a505:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    a50c:	00 00 00 
    a50f:	90                   	nop

000000000000a510 <_ZN40_$LT$str$u20$as$u20$core..fmt..Debug$GT$3fmt17h942f30b282040ce2E>:
    a510:	55                   	push   %rbp
    a511:	41 57                	push   %r15
    a513:	41 56                	push   %r14
    a515:	41 55                	push   %r13
    a517:	41 54                	push   %r12
    a519:	53                   	push   %rbx
    a51a:	48 81 ec 98 00 00 00 	sub    $0x98,%rsp
    a521:	48 89 d5             	mov    %rdx,%rbp
    a524:	49 89 f5             	mov    %rsi,%r13
    a527:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
    a52c:	48 8b 7a 20          	mov    0x20(%rdx),%rdi
    a530:	48 8b 42 28          	mov    0x28(%rdx),%rax
    a534:	be 22 00 00 00       	mov    $0x22,%esi
    a539:	ff 50 20             	callq  *0x20(%rax)
    a53c:	84 c0                	test   %al,%al
    a53e:	0f 85 19 04 00 00    	jne    a95d <_ZN40_$LT$str$u20$as$u20$core..fmt..Debug$GT$3fmt17h942f30b282040ce2E+0x44d>
    a544:	4d 85 ed             	test   %r13,%r13
    a547:	0f 84 b9 03 00 00    	je     a906 <_ZN40_$LT$str$u20$as$u20$core..fmt..Debug$GT$3fmt17h942f30b282040ce2E+0x3f6>
    a54d:	48 89 6c 24 20       	mov    %rbp,0x20(%rsp)
    a552:	4c 8b 7c 24 08       	mov    0x8(%rsp),%r15
    a557:	4b 8d 3c 2f          	lea    (%r15,%r13,1),%rdi
    a55b:	31 db                	xor    %ebx,%ebx
    a55d:	45 31 e4             	xor    %r12d,%r12d
    a560:	4c 89 6c 24 48       	mov    %r13,0x48(%rsp)
    a565:	48 89 7c 24 50       	mov    %rdi,0x50(%rsp)
    a56a:	eb 22                	jmp    a58e <_ZN40_$LT$str$u20$as$u20$core..fmt..Debug$GT$3fmt17h942f30b282040ce2E+0x7e>
    a56c:	0f 1f 40 00          	nopl   0x0(%rax)
    a570:	4c 01 e3             	add    %r12,%rbx
    a573:	4c 8b 6c 24 48       	mov    0x48(%rsp),%r13
    a578:	4c 2b 64 24 58       	sub    0x58(%rsp),%r12
    a57d:	4d 01 fc             	add    %r15,%r12
    a580:	48 8b 7c 24 50       	mov    0x50(%rsp),%rdi
    a585:	4c 39 ff             	cmp    %r15,%rdi
    a588:	0f 84 7c 03 00 00    	je     a90a <_ZN40_$LT$str$u20$as$u20$core..fmt..Debug$GT$3fmt17h942f30b282040ce2E+0x3fa>
    a58e:	4c 89 fe             	mov    %r15,%rsi
    a591:	49 8d 4f 01          	lea    0x1(%r15),%rcx
    a595:	41 0f b6 2f          	movzbl (%r15),%ebp
    a599:	40 84 ed             	test   %bpl,%bpl
    a59c:	78 12                	js     a5b0 <_ZN40_$LT$str$u20$as$u20$core..fmt..Debug$GT$3fmt17h942f30b282040ce2E+0xa0>
    a59e:	49 89 cf             	mov    %rcx,%r15
    a5a1:	e9 ba 00 00 00       	jmpq   a660 <_ZN40_$LT$str$u20$as$u20$core..fmt..Debug$GT$3fmt17h942f30b282040ce2E+0x150>
    a5a6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    a5ad:	00 00 00 
    a5b0:	48 39 f9             	cmp    %rdi,%rcx
    a5b3:	74 4e                	je     a603 <_ZN40_$LT$str$u20$as$u20$core..fmt..Debug$GT$3fmt17h942f30b282040ce2E+0xf3>
    a5b5:	41 0f b6 47 01       	movzbl 0x1(%r15),%eax
    a5ba:	49 83 c7 02          	add    $0x2,%r15
    a5be:	83 e0 3f             	and    $0x3f,%eax
    a5c1:	4c 89 fa             	mov    %r15,%rdx
    a5c4:	89 e9                	mov    %ebp,%ecx
    a5c6:	83 e1 1f             	and    $0x1f,%ecx
    a5c9:	40 80 fd df          	cmp    $0xdf,%bpl
    a5cd:	76 47                	jbe    a616 <_ZN40_$LT$str$u20$as$u20$core..fmt..Debug$GT$3fmt17h942f30b282040ce2E+0x106>
    a5cf:	48 39 fa             	cmp    %rdi,%rdx
    a5d2:	74 47                	je     a61b <_ZN40_$LT$str$u20$as$u20$core..fmt..Debug$GT$3fmt17h942f30b282040ce2E+0x10b>
    a5d4:	44 0f b6 02          	movzbl (%rdx),%r8d
    a5d8:	48 83 c2 01          	add    $0x1,%rdx
    a5dc:	41 83 e0 3f          	and    $0x3f,%r8d
    a5e0:	49 89 d7             	mov    %rdx,%r15
    a5e3:	c1 e0 06             	shl    $0x6,%eax
    a5e6:	44 09 c0             	or     %r8d,%eax
    a5e9:	40 80 fd f0          	cmp    $0xf0,%bpl
    a5ed:	72 3e                	jb     a62d <_ZN40_$LT$str$u20$as$u20$core..fmt..Debug$GT$3fmt17h942f30b282040ce2E+0x11d>
    a5ef:	48 39 fa             	cmp    %rdi,%rdx
    a5f2:	74 42                	je     a636 <_ZN40_$LT$str$u20$as$u20$core..fmt..Debug$GT$3fmt17h942f30b282040ce2E+0x126>
    a5f4:	0f b6 2a             	movzbl (%rdx),%ebp
    a5f7:	48 83 c2 01          	add    $0x1,%rdx
    a5fb:	83 e5 3f             	and    $0x3f,%ebp
    a5fe:	49 89 d7             	mov    %rdx,%r15
    a601:	eb 35                	jmp    a638 <_ZN40_$LT$str$u20$as$u20$core..fmt..Debug$GT$3fmt17h942f30b282040ce2E+0x128>
    a603:	31 c0                	xor    %eax,%eax
    a605:	49 89 cf             	mov    %rcx,%r15
    a608:	48 89 fa             	mov    %rdi,%rdx
    a60b:	89 e9                	mov    %ebp,%ecx
    a60d:	83 e1 1f             	and    $0x1f,%ecx
    a610:	40 80 fd df          	cmp    $0xdf,%bpl
    a614:	77 b9                	ja     a5cf <_ZN40_$LT$str$u20$as$u20$core..fmt..Debug$GT$3fmt17h942f30b282040ce2E+0xbf>
    a616:	c1 e1 06             	shl    $0x6,%ecx
    a619:	eb 15                	jmp    a630 <_ZN40_$LT$str$u20$as$u20$core..fmt..Debug$GT$3fmt17h942f30b282040ce2E+0x120>
    a61b:	45 31 c0             	xor    %r8d,%r8d
    a61e:	48 89 fa             	mov    %rdi,%rdx
    a621:	c1 e0 06             	shl    $0x6,%eax
    a624:	44 09 c0             	or     %r8d,%eax
    a627:	40 80 fd f0          	cmp    $0xf0,%bpl
    a62b:	73 c2                	jae    a5ef <_ZN40_$LT$str$u20$as$u20$core..fmt..Debug$GT$3fmt17h942f30b282040ce2E+0xdf>
    a62d:	c1 e1 0c             	shl    $0xc,%ecx
    a630:	09 c8                	or     %ecx,%eax
    a632:	89 c5                	mov    %eax,%ebp
    a634:	eb 2a                	jmp    a660 <_ZN40_$LT$str$u20$as$u20$core..fmt..Debug$GT$3fmt17h942f30b282040ce2E+0x150>
    a636:	31 ed                	xor    %ebp,%ebp
    a638:	83 e1 07             	and    $0x7,%ecx
    a63b:	c1 e1 12             	shl    $0x12,%ecx
    a63e:	c1 e0 06             	shl    $0x6,%eax
    a641:	09 c8                	or     %ecx,%eax
    a643:	09 e8                	or     %ebp,%eax
    a645:	89 c5                	mov    %eax,%ebp
    a647:	3d 00 00 11 00       	cmp    $0x110000,%eax
    a64c:	0f 84 b8 02 00 00    	je     a90a <_ZN40_$LT$str$u20$as$u20$core..fmt..Debug$GT$3fmt17h942f30b282040ce2E+0x3fa>
    a652:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    a659:	00 00 00 
    a65c:	0f 1f 40 00          	nopl   0x0(%rax)
    a660:	48 89 74 24 58       	mov    %rsi,0x58(%rsp)
    a665:	48 8d 7c 24 30       	lea    0x30(%rsp),%rdi
    a66a:	89 ee                	mov    %ebp,%esi
    a66c:	e8 9f e7 ff ff       	callq  8e10 <_ZN4core4char7methods22_$LT$impl$u20$char$GT$16escape_debug_ext17hfbb695d8f3fda62eE>
    a671:	44 8b 74 24 30       	mov    0x30(%rsp),%r14d
    a676:	48 8d 05 9f ff 02 00 	lea    0x2ff9f(%rip),%rax        # 3a61c <_ZN4core7unicode12unicode_data2cc19BITSET_INDEX_CHUNKS17h8a1f39cd536e9344E+0x15c>
    a67d:	48 89 c1             	mov    %rax,%rcx
    a680:	4a 63 04 b0          	movslq (%rax,%r14,4),%rax
    a684:	48 01 c8             	add    %rcx,%rax
    a687:	ff e0                	jmpq   *%rax
    a689:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    a68e:	48 89 44 24 70       	mov    %rax,0x70(%rsp)
    a693:	4c 89 6c 24 78       	mov    %r13,0x78(%rsp)
    a698:	48 89 5c 24 60       	mov    %rbx,0x60(%rsp)
    a69d:	4c 89 64 24 68       	mov    %r12,0x68(%rsp)
    a6a2:	4c 89 e2             	mov    %r12,%rdx
    a6a5:	48 29 da             	sub    %rbx,%rdx
    a6a8:	0f 82 e7 02 00 00    	jb     a995 <_ZN40_$LT$str$u20$as$u20$core..fmt..Debug$GT$3fmt17h942f30b282040ce2E+0x485>
    a6ae:	48 85 db             	test   %rbx,%rbx
    a6b1:	74 1a                	je     a6cd <_ZN40_$LT$str$u20$as$u20$core..fmt..Debug$GT$3fmt17h942f30b282040ce2E+0x1bd>
    a6b3:	4c 39 eb             	cmp    %r13,%rbx
    a6b6:	74 15                	je     a6cd <_ZN40_$LT$str$u20$as$u20$core..fmt..Debug$GT$3fmt17h942f30b282040ce2E+0x1bd>
    a6b8:	0f 83 d7 02 00 00    	jae    a995 <_ZN40_$LT$str$u20$as$u20$core..fmt..Debug$GT$3fmt17h942f30b282040ce2E+0x485>
    a6be:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    a6c3:	80 3c 18 bf          	cmpb   $0xbf,(%rax,%rbx,1)
    a6c7:	0f 8e c8 02 00 00    	jle    a995 <_ZN40_$LT$str$u20$as$u20$core..fmt..Debug$GT$3fmt17h942f30b282040ce2E+0x485>
    a6cd:	4d 85 e4             	test   %r12,%r12
    a6d0:	74 1b                	je     a6ed <_ZN40_$LT$str$u20$as$u20$core..fmt..Debug$GT$3fmt17h942f30b282040ce2E+0x1dd>
    a6d2:	4d 39 ec             	cmp    %r13,%r12
    a6d5:	74 16                	je     a6ed <_ZN40_$LT$str$u20$as$u20$core..fmt..Debug$GT$3fmt17h942f30b282040ce2E+0x1dd>
    a6d7:	0f 83 b8 02 00 00    	jae    a995 <_ZN40_$LT$str$u20$as$u20$core..fmt..Debug$GT$3fmt17h942f30b282040ce2E+0x485>
    a6dd:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    a6e2:	42 80 3c 20 bf       	cmpb   $0xbf,(%rax,%r12,1)
    a6e7:	0f 8e a8 02 00 00    	jle    a995 <_ZN40_$LT$str$u20$as$u20$core..fmt..Debug$GT$3fmt17h942f30b282040ce2E+0x485>
    a6ed:	48 03 5c 24 08       	add    0x8(%rsp),%rbx
    a6f2:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
    a6f7:	48 8b 78 20          	mov    0x20(%rax),%rdi
    a6fb:	49 89 c5             	mov    %rax,%r13
    a6fe:	48 8b 40 28          	mov    0x28(%rax),%rax
    a702:	48 89 de             	mov    %rbx,%rsi
    a705:	ff 50 18             	callq  *0x18(%rax)
    a708:	84 c0                	test   %al,%al
    a70a:	0f 85 4d 02 00 00    	jne    a95d <_ZN40_$LT$str$u20$as$u20$core..fmt..Debug$GT$3fmt17h942f30b282040ce2E+0x44d>
    a710:	8b 4c 24 34          	mov    0x34(%rsp),%ecx
    a714:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
    a719:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    a71e:	8b 44 24 40          	mov    0x40(%rsp),%eax
    a722:	89 44 24 14          	mov    %eax,0x14(%rsp)
    a726:	8a 5c 24 44          	mov    0x44(%rsp),%bl
    a72a:	81 f9 00 00 11 00    	cmp    $0x110000,%ecx
    a730:	0f 85 aa 00 00 00    	jne    a7e0 <_ZN40_$LT$str$u20$as$u20$core..fmt..Debug$GT$3fmt17h942f30b282040ce2E+0x2d0>
    a736:	41 83 fe 02          	cmp    $0x2,%r14d
    a73a:	0f 82 90 01 00 00    	jb     a8d0 <_ZN40_$LT$str$u20$as$u20$core..fmt..Debug$GT$3fmt17h942f30b282040ce2E+0x3c0>
    a740:	41 be 01 00 00 00    	mov    $0x1,%r14d
    a746:	be 5c 00 00 00       	mov    $0x5c,%esi
    a74b:	74 73                	je     a7c0 <_ZN40_$LT$str$u20$as$u20$core..fmt..Debug$GT$3fmt17h942f30b282040ce2E+0x2b0>
    a74d:	41 be 03 00 00 00    	mov    $0x3,%r14d
    a753:	0f b6 c3             	movzbl %bl,%eax
    a756:	48 8d 0d f7 fe 02 00 	lea    0x2fef7(%rip),%rcx        # 3a654 <_ZN4core7unicode12unicode_data2cc19BITSET_INDEX_CHUNKS17h8a1f39cd536e9344E+0x194>
    a75d:	48 63 04 81          	movslq (%rcx,%rax,4),%rax
    a761:	48 01 c8             	add    %rcx,%rax
    a764:	b3 04                	mov    $0x4,%bl
    a766:	ff e0                	jmpq   *%rax
    a768:	be 7d 00 00 00       	mov    $0x7d,%esi
    a76d:	31 db                	xor    %ebx,%ebx
    a76f:	eb 4f                	jmp    a7c0 <_ZN40_$LT$str$u20$as$u20$core..fmt..Debug$GT$3fmt17h942f30b282040ce2E+0x2b0>
    a771:	b3 02                	mov    $0x2,%bl
    a773:	be 7b 00 00 00       	mov    $0x7b,%esi
    a778:	eb 46                	jmp    a7c0 <_ZN40_$LT$str$u20$as$u20$core..fmt..Debug$GT$3fmt17h942f30b282040ce2E+0x2b0>
    a77a:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
    a77f:	48 83 f9 01          	cmp    $0x1,%rcx
    a783:	b3 02                	mov    $0x2,%bl
    a785:	80 db 00             	sbb    $0x0,%bl
    a788:	48 89 c8             	mov    %rcx,%rax
    a78b:	48 83 e8 01          	sub    $0x1,%rax
    a78f:	ba 00 00 00 00       	mov    $0x0,%edx
    a794:	48 0f 43 d0          	cmovae %rax,%rdx
    a798:	c1 e1 02             	shl    $0x2,%ecx
    a79b:	8b 44 24 14          	mov    0x14(%rsp),%eax
    a79f:	d3 e8                	shr    %cl,%eax
    a7a1:	83 e0 0f             	and    $0xf,%eax
    a7a4:	8d 48 30             	lea    0x30(%rax),%ecx
    a7a7:	89 c6                	mov    %eax,%esi
    a7a9:	83 c6 57             	add    $0x57,%esi
    a7ac:	3c 0a                	cmp    $0xa,%al
    a7ae:	0f 42 f1             	cmovb  %ecx,%esi
    a7b1:	48 89 54 24 18       	mov    %rdx,0x18(%rsp)
    a7b6:	eb 08                	jmp    a7c0 <_ZN40_$LT$str$u20$as$u20$core..fmt..Debug$GT$3fmt17h942f30b282040ce2E+0x2b0>
    a7b8:	b3 03                	mov    $0x3,%bl
    a7ba:	be 75 00 00 00       	mov    $0x75,%esi
    a7bf:	90                   	nop
    a7c0:	49 8b 7d 20          	mov    0x20(%r13),%rdi
    a7c4:	49 8b 45 28          	mov    0x28(%r13),%rax
    a7c8:	ff 50 20             	callq  *0x20(%rax)
    a7cb:	84 c0                	test   %al,%al
    a7cd:	0f 84 63 ff ff ff    	je     a736 <_ZN40_$LT$str$u20$as$u20$core..fmt..Debug$GT$3fmt17h942f30b282040ce2E+0x226>
    a7d3:	e9 85 01 00 00       	jmpq   a95d <_ZN40_$LT$str$u20$as$u20$core..fmt..Debug$GT$3fmt17h942f30b282040ce2E+0x44d>
    a7d8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    a7df:	00 
    a7e0:	89 4c 24 2c          	mov    %ecx,0x2c(%rsp)
    a7e4:	eb 44                	jmp    a82a <_ZN40_$LT$str$u20$as$u20$core..fmt..Debug$GT$3fmt17h942f30b282040ce2E+0x31a>
    a7e6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    a7ed:	00 00 00 
    a7f0:	0f b6 44 24 44       	movzbl 0x44(%rsp),%eax
    a7f5:	48 03 44 24 38       	add    0x38(%rsp),%rax
    a7fa:	48 83 f8 01          	cmp    $0x1,%rax
    a7fe:	0f 84 74 fd ff ff    	je     a578 <_ZN40_$LT$str$u20$as$u20$core..fmt..Debug$GT$3fmt17h942f30b282040ce2E+0x68>
    a804:	e9 80 fe ff ff       	jmpq   a689 <_ZN40_$LT$str$u20$as$u20$core..fmt..Debug$GT$3fmt17h942f30b282040ce2E+0x179>
    a809:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    a810:	45 31 f6             	xor    %r14d,%r14d
    a813:	8b 74 24 2c          	mov    0x2c(%rsp),%esi
    a817:	49 8b 7d 20          	mov    0x20(%r13),%rdi
    a81b:	49 8b 45 28          	mov    0x28(%r13),%rax
    a81f:	ff 50 20             	callq  *0x20(%rax)
    a822:	84 c0                	test   %al,%al
    a824:	0f 85 33 01 00 00    	jne    a95d <_ZN40_$LT$str$u20$as$u20$core..fmt..Debug$GT$3fmt17h942f30b282040ce2E+0x44d>
    a82a:	be 5c 00 00 00       	mov    $0x5c,%esi
    a82f:	44 89 f0             	mov    %r14d,%eax
    a832:	48 8d 0d f3 fd 02 00 	lea    0x2fdf3(%rip),%rcx        # 3a62c <_ZN4core7unicode12unicode_data2cc19BITSET_INDEX_CHUNKS17h8a1f39cd536e9344E+0x16c>
    a839:	48 63 04 81          	movslq (%rcx,%rax,4),%rax
    a83d:	48 01 c8             	add    %rcx,%rax
    a840:	41 be 01 00 00 00    	mov    $0x1,%r14d
    a846:	ff e0                	jmpq   *%rax
    a848:	41 be 03 00 00 00    	mov    $0x3,%r14d
    a84e:	0f b6 c3             	movzbl %bl,%eax
    a851:	48 8d 0d e4 fd 02 00 	lea    0x2fde4(%rip),%rcx        # 3a63c <_ZN4core7unicode12unicode_data2cc19BITSET_INDEX_CHUNKS17h8a1f39cd536e9344E+0x17c>
    a858:	48 63 04 81          	movslq (%rcx,%rax,4),%rax
    a85c:	48 01 c8             	add    %rcx,%rax
    a85f:	b3 04                	mov    $0x4,%bl
    a861:	ff e0                	jmpq   *%rax
    a863:	be 7d 00 00 00       	mov    $0x7d,%esi
    a868:	31 db                	xor    %ebx,%ebx
    a86a:	eb ab                	jmp    a817 <_ZN40_$LT$str$u20$as$u20$core..fmt..Debug$GT$3fmt17h942f30b282040ce2E+0x307>
    a86c:	b3 02                	mov    $0x2,%bl
    a86e:	be 7b 00 00 00       	mov    $0x7b,%esi
    a873:	eb a2                	jmp    a817 <_ZN40_$LT$str$u20$as$u20$core..fmt..Debug$GT$3fmt17h942f30b282040ce2E+0x307>
    a875:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
    a87a:	48 83 f9 01          	cmp    $0x1,%rcx
    a87e:	b3 02                	mov    $0x2,%bl
    a880:	80 db 00             	sbb    $0x0,%bl
    a883:	48 89 c8             	mov    %rcx,%rax
    a886:	48 83 e8 01          	sub    $0x1,%rax
    a88a:	ba 00 00 00 00       	mov    $0x0,%edx
    a88f:	48 0f 43 d0          	cmovae %rax,%rdx
    a893:	c1 e1 02             	shl    $0x2,%ecx
    a896:	8b 44 24 14          	mov    0x14(%rsp),%eax
    a89a:	d3 e8                	shr    %cl,%eax
    a89c:	83 e0 0f             	and    $0xf,%eax
    a89f:	8d 48 30             	lea    0x30(%rax),%ecx
    a8a2:	89 c6                	mov    %eax,%esi
    a8a4:	83 c6 57             	add    $0x57,%esi
    a8a7:	3c 0a                	cmp    $0xa,%al
    a8a9:	0f 42 f1             	cmovb  %ecx,%esi
    a8ac:	48 89 54 24 18       	mov    %rdx,0x18(%rsp)
    a8b1:	e9 61 ff ff ff       	jmpq   a817 <_ZN40_$LT$str$u20$as$u20$core..fmt..Debug$GT$3fmt17h942f30b282040ce2E+0x307>
    a8b6:	b3 03                	mov    $0x3,%bl
    a8b8:	be 75 00 00 00       	mov    $0x75,%esi
    a8bd:	e9 55 ff ff ff       	jmpq   a817 <_ZN40_$LT$str$u20$as$u20$core..fmt..Debug$GT$3fmt17h942f30b282040ce2E+0x307>
    a8c2:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    a8c9:	00 00 00 
    a8cc:	0f 1f 40 00          	nopl   0x0(%rax)
    a8d0:	bb 01 00 00 00       	mov    $0x1,%ebx
    a8d5:	81 fd 80 00 00 00    	cmp    $0x80,%ebp
    a8db:	0f 82 8f fc ff ff    	jb     a570 <_ZN40_$LT$str$u20$as$u20$core..fmt..Debug$GT$3fmt17h942f30b282040ce2E+0x60>
    a8e1:	bb 02 00 00 00       	mov    $0x2,%ebx
    a8e6:	81 fd 00 08 00 00    	cmp    $0x800,%ebp
    a8ec:	0f 82 7e fc ff ff    	jb     a570 <_ZN40_$LT$str$u20$as$u20$core..fmt..Debug$GT$3fmt17h942f30b282040ce2E+0x60>
    a8f2:	81 fd 00 00 01 00    	cmp    $0x10000,%ebp
    a8f8:	bb 04 00 00 00       	mov    $0x4,%ebx
    a8fd:	48 83 db 00          	sbb    $0x0,%rbx
    a901:	e9 6a fc ff ff       	jmpq   a570 <_ZN40_$LT$str$u20$as$u20$core..fmt..Debug$GT$3fmt17h942f30b282040ce2E+0x60>
    a906:	31 db                	xor    %ebx,%ebx
    a908:	eb 36                	jmp    a940 <_ZN40_$LT$str$u20$as$u20$core..fmt..Debug$GT$3fmt17h942f30b282040ce2E+0x430>
    a90a:	48 85 db             	test   %rbx,%rbx
    a90d:	74 2c                	je     a93b <_ZN40_$LT$str$u20$as$u20$core..fmt..Debug$GT$3fmt17h942f30b282040ce2E+0x42b>
    a90f:	4c 39 eb             	cmp    %r13,%rbx
    a912:	48 8b 6c 24 20       	mov    0x20(%rsp),%rbp
    a917:	74 27                	je     a940 <_ZN40_$LT$str$u20$as$u20$core..fmt..Debug$GT$3fmt17h942f30b282040ce2E+0x430>
    a919:	73 0b                	jae    a926 <_ZN40_$LT$str$u20$as$u20$core..fmt..Debug$GT$3fmt17h942f30b282040ce2E+0x416>
    a91b:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    a920:	80 3c 18 bf          	cmpb   $0xbf,(%rax,%rbx,1)
    a924:	7f 1a                	jg     a940 <_ZN40_$LT$str$u20$as$u20$core..fmt..Debug$GT$3fmt17h942f30b282040ce2E+0x430>
    a926:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    a92b:	4c 89 ee             	mov    %r13,%rsi
    a92e:	48 89 da             	mov    %rbx,%rdx
    a931:	4c 89 e9             	mov    %r13,%rcx
    a934:	e8 47 d8 ff ff       	callq  8180 <_ZN4core3str16slice_error_fail17hc48083e4f6af7f4aE>
    a939:	0f 0b                	ud2    
    a93b:	48 8b 6c 24 20       	mov    0x20(%rsp),%rbp
    a940:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
    a945:	48 01 de             	add    %rbx,%rsi
    a948:	49 29 dd             	sub    %rbx,%r13
    a94b:	48 8b 7d 20          	mov    0x20(%rbp),%rdi
    a94f:	48 8b 45 28          	mov    0x28(%rbp),%rax
    a953:	4c 89 ea             	mov    %r13,%rdx
    a956:	ff 50 18             	callq  *0x18(%rax)
    a959:	84 c0                	test   %al,%al
    a95b:	74 14                	je     a971 <_ZN40_$LT$str$u20$as$u20$core..fmt..Debug$GT$3fmt17h942f30b282040ce2E+0x461>
    a95d:	b0 01                	mov    $0x1,%al
    a95f:	48 81 c4 98 00 00 00 	add    $0x98,%rsp
    a966:	5b                   	pop    %rbx
    a967:	41 5c                	pop    %r12
    a969:	41 5d                	pop    %r13
    a96b:	41 5e                	pop    %r14
    a96d:	41 5f                	pop    %r15
    a96f:	5d                   	pop    %rbp
    a970:	c3                   	retq   
    a971:	48 8b 7d 20          	mov    0x20(%rbp),%rdi
    a975:	48 8b 45 28          	mov    0x28(%rbp),%rax
    a979:	48 8b 40 20          	mov    0x20(%rax),%rax
    a97d:	be 22 00 00 00       	mov    $0x22,%esi
    a982:	48 81 c4 98 00 00 00 	add    $0x98,%rsp
    a989:	5b                   	pop    %rbx
    a98a:	41 5c                	pop    %r12
    a98c:	41 5d                	pop    %r13
    a98e:	41 5e                	pop    %r14
    a990:	41 5f                	pop    %r15
    a992:	5d                   	pop    %rbp
    a993:	ff e0                	jmpq   *%rax
    a995:	48 8d 44 24 70       	lea    0x70(%rsp),%rax
    a99a:	48 89 84 24 80 00 00 	mov    %rax,0x80(%rsp)
    a9a1:	00 
    a9a2:	48 8d 44 24 60       	lea    0x60(%rsp),%rax
    a9a7:	48 89 84 24 88 00 00 	mov    %rax,0x88(%rsp)
    a9ae:	00 
    a9af:	48 8d 44 24 68       	lea    0x68(%rsp),%rax
    a9b4:	48 89 84 24 90 00 00 	mov    %rax,0x90(%rsp)
    a9bb:	00 
    a9bc:	48 8d bc 24 80 00 00 	lea    0x80(%rsp),%rdi
    a9c3:	00 
    a9c4:	e8 17 33 01 00       	callq  1dce0 <_ZN4core3str6traits101_$LT$impl$u20$core..slice..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..Range$LT$usize$GT$$GT$5index28_$u7b$$u7b$closure$u7d$$u7d$17hd529a7a73bc70800E>
    a9c9:	0f 0b                	ud2    
    a9cb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000a9d0 <_ZN43_$LT$char$u20$as$u20$core..fmt..Display$GT$3fmt17h7792e6955f0fb677E>:
    a9d0:	50                   	push   %rax
    a9d1:	48 83 3e 01          	cmpq   $0x1,(%rsi)
    a9d5:	74 07                	je     a9de <_ZN43_$LT$char$u20$as$u20$core..fmt..Display$GT$3fmt17h7792e6955f0fb677E+0xe>
    a9d7:	48 83 7e 10 01       	cmpq   $0x1,0x10(%rsi)
    a9dc:	75 4d                	jne    aa2b <_ZN43_$LT$char$u20$as$u20$core..fmt..Display$GT$3fmt17h7792e6955f0fb677E+0x5b>
    a9de:	8b 0f                	mov    (%rdi),%ecx
    a9e0:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%rsp)
    a9e7:	00 
    a9e8:	48 8d 44 24 04       	lea    0x4(%rsp),%rax
    a9ed:	81 f9 80 00 00 00    	cmp    $0x80,%ecx
    a9f3:	73 0e                	jae    aa03 <_ZN43_$LT$char$u20$as$u20$core..fmt..Display$GT$3fmt17h7792e6955f0fb677E+0x33>
    a9f5:	88 4c 24 04          	mov    %cl,0x4(%rsp)
    a9f9:	ba 01 00 00 00       	mov    $0x1,%edx
    a9fe:	e9 a7 00 00 00       	jmpq   aaaa <_ZN43_$LT$char$u20$as$u20$core..fmt..Display$GT$3fmt17h7792e6955f0fb677E+0xda>
    aa03:	89 ca                	mov    %ecx,%edx
    aa05:	81 f9 00 08 00 00    	cmp    $0x800,%ecx
    aa0b:	73 31                	jae    aa3e <_ZN43_$LT$char$u20$as$u20$core..fmt..Display$GT$3fmt17h7792e6955f0fb677E+0x6e>
    aa0d:	c1 ea 06             	shr    $0x6,%edx
    aa10:	80 e2 1f             	and    $0x1f,%dl
    aa13:	80 ca c0             	or     $0xc0,%dl
    aa16:	88 54 24 04          	mov    %dl,0x4(%rsp)
    aa1a:	80 e1 3f             	and    $0x3f,%cl
    aa1d:	80 c9 80             	or     $0x80,%cl
    aa20:	88 4c 24 05          	mov    %cl,0x5(%rsp)
    aa24:	ba 02 00 00 00       	mov    $0x2,%edx
    aa29:	eb 7f                	jmp    aaaa <_ZN43_$LT$char$u20$as$u20$core..fmt..Display$GT$3fmt17h7792e6955f0fb677E+0xda>
    aa2b:	8b 07                	mov    (%rdi),%eax
    aa2d:	48 8b 7e 20          	mov    0x20(%rsi),%rdi
    aa31:	48 8b 4e 28          	mov    0x28(%rsi),%rcx
    aa35:	48 8b 49 20          	mov    0x20(%rcx),%rcx
    aa39:	89 c6                	mov    %eax,%esi
    aa3b:	58                   	pop    %rax
    aa3c:	ff e1                	jmpq   *%rcx
    aa3e:	81 f9 00 00 01 00    	cmp    $0x10000,%ecx
    aa44:	73 2d                	jae    aa73 <_ZN43_$LT$char$u20$as$u20$core..fmt..Display$GT$3fmt17h7792e6955f0fb677E+0xa3>
    aa46:	c1 ea 0c             	shr    $0xc,%edx
    aa49:	80 e2 0f             	and    $0xf,%dl
    aa4c:	80 ca e0             	or     $0xe0,%dl
    aa4f:	88 54 24 04          	mov    %dl,0x4(%rsp)
    aa53:	89 ca                	mov    %ecx,%edx
    aa55:	c1 ea 06             	shr    $0x6,%edx
    aa58:	80 e2 3f             	and    $0x3f,%dl
    aa5b:	80 ca 80             	or     $0x80,%dl
    aa5e:	88 54 24 05          	mov    %dl,0x5(%rsp)
    aa62:	80 e1 3f             	and    $0x3f,%cl
    aa65:	80 c9 80             	or     $0x80,%cl
    aa68:	88 4c 24 06          	mov    %cl,0x6(%rsp)
    aa6c:	ba 03 00 00 00       	mov    $0x3,%edx
    aa71:	eb 37                	jmp    aaaa <_ZN43_$LT$char$u20$as$u20$core..fmt..Display$GT$3fmt17h7792e6955f0fb677E+0xda>
    aa73:	c1 ea 12             	shr    $0x12,%edx
    aa76:	80 ca f0             	or     $0xf0,%dl
    aa79:	88 54 24 04          	mov    %dl,0x4(%rsp)
    aa7d:	89 ca                	mov    %ecx,%edx
    aa7f:	c1 ea 0c             	shr    $0xc,%edx
    aa82:	80 e2 3f             	and    $0x3f,%dl
    aa85:	80 ca 80             	or     $0x80,%dl
    aa88:	88 54 24 05          	mov    %dl,0x5(%rsp)
    aa8c:	89 ca                	mov    %ecx,%edx
    aa8e:	c1 ea 06             	shr    $0x6,%edx
    aa91:	80 e2 3f             	and    $0x3f,%dl
    aa94:	80 ca 80             	or     $0x80,%dl
    aa97:	88 54 24 06          	mov    %dl,0x6(%rsp)
    aa9b:	80 e1 3f             	and    $0x3f,%cl
    aa9e:	80 c9 80             	or     $0x80,%cl
    aaa1:	88 4c 24 07          	mov    %cl,0x7(%rsp)
    aaa5:	ba 04 00 00 00       	mov    $0x4,%edx
    aaaa:	48 89 f7             	mov    %rsi,%rdi
    aaad:	48 89 c6             	mov    %rax,%rsi
    aab0:	e8 1b d2 ff ff       	callq  7cd0 <_ZN4core3fmt9Formatter3pad17h7ef001ba65c2db9cE>
    aab5:	59                   	pop    %rcx
    aab6:	c3                   	retq   
    aab7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    aabe:	00 00 

000000000000aac0 <_ZN4core3str7pattern11StrSearcher3new17h5e55b3d26d3aed5eE>:
    aac0:	55                   	push   %rbp
    aac1:	41 57                	push   %r15
    aac3:	41 56                	push   %r14
    aac5:	41 55                	push   %r13
    aac7:	41 54                	push   %r12
    aac9:	53                   	push   %rbx
    aaca:	48 83 ec 18          	sub    $0x18,%rsp
    aace:	49 89 cf             	mov    %rcx,%r15
    aad1:	49 89 f2             	mov    %rsi,%r10
    aad4:	4d 85 c0             	test   %r8,%r8
    aad7:	74 29                	je     ab02 <_ZN4core3str7pattern11StrSearcher3new17h5e55b3d26d3aed5eE+0x42>
    aad9:	4d 89 c4             	mov    %r8,%r12
    aadc:	49 83 f8 01          	cmp    $0x1,%r8
    aae0:	48 89 54 24 10       	mov    %rdx,0x10(%rsp)
    aae5:	4c 89 54 24 08       	mov    %r10,0x8(%rsp)
    aaea:	75 41                	jne    ab2d <_ZN4core3str7pattern11StrSearcher3new17h5e55b3d26d3aed5eE+0x6d>
    aaec:	41 be 01 00 00 00    	mov    $0x1,%r14d
    aaf2:	45 31 c9             	xor    %r9d,%r9d
    aaf5:	b9 01 00 00 00       	mov    $0x1,%ecx
    aafa:	45 31 ed             	xor    %r13d,%r13d
    aafd:	e9 78 01 00 00       	jmpq   ac7a <_ZN4core3str7pattern11StrSearcher3new17h5e55b3d26d3aed5eE+0x1ba>
    ab02:	4c 89 17             	mov    %r10,(%rdi)
    ab05:	48 89 57 08          	mov    %rdx,0x8(%rdi)
    ab09:	4c 89 7f 10          	mov    %r15,0x10(%rdi)
    ab0d:	66 0f 57 c0          	xorpd  %xmm0,%xmm0
    ab11:	66 0f 11 47 18       	movupd %xmm0,0x18(%rdi)
    ab16:	48 c7 47 28 00 00 00 	movq   $0x0,0x28(%rdi)
    ab1d:	00 
    ab1e:	48 89 57 30          	mov    %rdx,0x30(%rdi)
    ab22:	66 c7 47 38 01 01    	movw   $0x101,0x38(%rdi)
    ab28:	e9 2b 08 00 00       	jmpq   b358 <_ZN4core3str7pattern11StrSearcher3new17h5e55b3d26d3aed5eE+0x898>
    ab2d:	bd 01 00 00 00       	mov    $0x1,%ebp
    ab32:	45 31 c0             	xor    %r8d,%r8d
    ab35:	45 31 c9             	xor    %r9d,%r9d
    ab38:	b8 01 00 00 00       	mov    $0x1,%eax
    ab3d:	31 c9                	xor    %ecx,%ecx
    ab3f:	41 be 01 00 00 00    	mov    $0x1,%r14d
    ab45:	4a 8d 34 09          	lea    (%rcx,%r9,1),%rsi
    ab49:	4c 39 e6             	cmp    %r12,%rsi
    ab4c:	72 3b                	jb     ab89 <_ZN4core3str7pattern11StrSearcher3new17h5e55b3d26d3aed5eE+0xc9>
    ab4e:	e9 44 08 00 00       	jmpq   b397 <_ZN4core3str7pattern11StrSearcher3new17h5e55b3d26d3aed5eE+0x8d7>
    ab53:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    ab5a:	00 00 00 
    ab5d:	0f 1f 00             	nopl   (%rax)
    ab60:	48 8d 34 08          	lea    (%rax,%rcx,1),%rsi
    ab64:	48 83 c6 01          	add    $0x1,%rsi
    ab68:	49 89 f6             	mov    %rsi,%r14
    ab6b:	4d 29 ce             	sub    %r9,%r14
    ab6e:	31 c9                	xor    %ecx,%ecx
    ab70:	48 8d 2c 0e          	lea    (%rsi,%rcx,1),%rbp
    ab74:	48 89 f0             	mov    %rsi,%rax
    ab77:	4c 39 e5             	cmp    %r12,%rbp
    ab7a:	73 5f                	jae    abdb <_ZN4core3str7pattern11StrSearcher3new17h5e55b3d26d3aed5eE+0x11b>
    ab7c:	4a 8d 34 09          	lea    (%rcx,%r9,1),%rsi
    ab80:	4c 39 e6             	cmp    %r12,%rsi
    ab83:	0f 83 0e 08 00 00    	jae    b397 <_ZN4core3str7pattern11StrSearcher3new17h5e55b3d26d3aed5eE+0x8d7>
    ab89:	41 0f b6 1c 37       	movzbl (%r15,%rsi,1),%ebx
    ab8e:	41 38 1c 2f          	cmp    %bl,(%r15,%rbp,1)
    ab92:	72 cc                	jb     ab60 <_ZN4core3str7pattern11StrSearcher3new17h5e55b3d26d3aed5eE+0xa0>
    ab94:	75 2a                	jne    abc0 <_ZN4core3str7pattern11StrSearcher3new17h5e55b3d26d3aed5eE+0x100>
    ab96:	48 83 c1 01          	add    $0x1,%rcx
    ab9a:	4c 39 f1             	cmp    %r14,%rcx
    ab9d:	48 89 cd             	mov    %rcx,%rbp
    aba0:	49 0f 44 e8          	cmove  %r8,%rbp
    aba4:	49 0f 45 c8          	cmovne %r8,%rcx
    aba8:	48 89 ce             	mov    %rcx,%rsi
    abab:	48 01 c6             	add    %rax,%rsi
    abae:	48 89 e9             	mov    %rbp,%rcx
    abb1:	48 8d 2c 0e          	lea    (%rsi,%rcx,1),%rbp
    abb5:	48 89 f0             	mov    %rsi,%rax
    abb8:	4c 39 e5             	cmp    %r12,%rbp
    abbb:	72 bf                	jb     ab7c <_ZN4core3str7pattern11StrSearcher3new17h5e55b3d26d3aed5eE+0xbc>
    abbd:	eb 1c                	jmp    abdb <_ZN4core3str7pattern11StrSearcher3new17h5e55b3d26d3aed5eE+0x11b>
    abbf:	90                   	nop
    abc0:	48 8d 70 01          	lea    0x1(%rax),%rsi
    abc4:	41 be 01 00 00 00    	mov    $0x1,%r14d
    abca:	31 c9                	xor    %ecx,%ecx
    abcc:	49 89 c1             	mov    %rax,%r9
    abcf:	48 8d 2c 0e          	lea    (%rsi,%rcx,1),%rbp
    abd3:	48 89 f0             	mov    %rsi,%rax
    abd6:	4c 39 e5             	cmp    %r12,%rbp
    abd9:	72 a1                	jb     ab7c <_ZN4core3str7pattern11StrSearcher3new17h5e55b3d26d3aed5eE+0xbc>
    abdb:	bb 01 00 00 00       	mov    $0x1,%ebx
    abe0:	45 31 c0             	xor    %r8d,%r8d
    abe3:	45 31 ed             	xor    %r13d,%r13d
    abe6:	bd 01 00 00 00       	mov    $0x1,%ebp
    abeb:	31 c0                	xor    %eax,%eax
    abed:	b9 01 00 00 00       	mov    $0x1,%ecx
    abf2:	4a 8d 34 28          	lea    (%rax,%r13,1),%rsi
    abf6:	4c 39 e6             	cmp    %r12,%rsi
    abf9:	72 2e                	jb     ac29 <_ZN4core3str7pattern11StrSearcher3new17h5e55b3d26d3aed5eE+0x169>
    abfb:	e9 97 07 00 00       	jmpq   b397 <_ZN4core3str7pattern11StrSearcher3new17h5e55b3d26d3aed5eE+0x8d7>
    ac00:	48 8d 34 28          	lea    (%rax,%rbp,1),%rsi
    ac04:	48 83 c6 01          	add    $0x1,%rsi
    ac08:	48 89 f1             	mov    %rsi,%rcx
    ac0b:	4c 29 e9             	sub    %r13,%rcx
    ac0e:	31 c0                	xor    %eax,%eax
    ac10:	48 8d 1c 06          	lea    (%rsi,%rax,1),%rbx
    ac14:	48 89 f5             	mov    %rsi,%rbp
    ac17:	4c 39 e3             	cmp    %r12,%rbx
    ac1a:	73 5e                	jae    ac7a <_ZN4core3str7pattern11StrSearcher3new17h5e55b3d26d3aed5eE+0x1ba>
    ac1c:	4a 8d 34 28          	lea    (%rax,%r13,1),%rsi
    ac20:	4c 39 e6             	cmp    %r12,%rsi
    ac23:	0f 83 6e 07 00 00    	jae    b397 <_ZN4core3str7pattern11StrSearcher3new17h5e55b3d26d3aed5eE+0x8d7>
    ac29:	41 0f b6 14 37       	movzbl (%r15,%rsi,1),%edx
    ac2e:	41 38 14 1f          	cmp    %dl,(%r15,%rbx,1)
    ac32:	77 cc                	ja     ac00 <_ZN4core3str7pattern11StrSearcher3new17h5e55b3d26d3aed5eE+0x140>
    ac34:	75 2a                	jne    ac60 <_ZN4core3str7pattern11StrSearcher3new17h5e55b3d26d3aed5eE+0x1a0>
    ac36:	48 83 c0 01          	add    $0x1,%rax
    ac3a:	48 39 c8             	cmp    %rcx,%rax
    ac3d:	48 89 c2             	mov    %rax,%rdx
    ac40:	49 0f 44 d0          	cmove  %r8,%rdx
    ac44:	49 0f 45 c0          	cmovne %r8,%rax
    ac48:	48 89 c6             	mov    %rax,%rsi
    ac4b:	48 01 ee             	add    %rbp,%rsi
    ac4e:	48 89 d0             	mov    %rdx,%rax
    ac51:	48 8d 1c 06          	lea    (%rsi,%rax,1),%rbx
    ac55:	48 89 f5             	mov    %rsi,%rbp
    ac58:	4c 39 e3             	cmp    %r12,%rbx
    ac5b:	72 bf                	jb     ac1c <_ZN4core3str7pattern11StrSearcher3new17h5e55b3d26d3aed5eE+0x15c>
    ac5d:	eb 1b                	jmp    ac7a <_ZN4core3str7pattern11StrSearcher3new17h5e55b3d26d3aed5eE+0x1ba>
    ac5f:	90                   	nop
    ac60:	48 8d 75 01          	lea    0x1(%rbp),%rsi
    ac64:	b9 01 00 00 00       	mov    $0x1,%ecx
    ac69:	31 c0                	xor    %eax,%eax
    ac6b:	49 89 ed             	mov    %rbp,%r13
    ac6e:	48 8d 1c 06          	lea    (%rsi,%rax,1),%rbx
    ac72:	48 89 f5             	mov    %rsi,%rbp
    ac75:	4c 39 e3             	cmp    %r12,%rbx
    ac78:	72 a2                	jb     ac1c <_ZN4core3str7pattern11StrSearcher3new17h5e55b3d26d3aed5eE+0x15c>
    ac7a:	4d 39 e9             	cmp    %r13,%r9
    ac7d:	4c 0f 46 f1          	cmovbe %rcx,%r14
    ac81:	4d 0f 47 e9          	cmova  %r9,%r13
    ac85:	4d 39 e5             	cmp    %r12,%r13
    ac88:	0f 87 3f 07 00 00    	ja     b3cd <_ZN4core3str7pattern11StrSearcher3new17h5e55b3d26d3aed5eE+0x90d>
    ac8e:	4c 89 f6             	mov    %r14,%rsi
    ac91:	4c 01 ee             	add    %r13,%rsi
    ac94:	0f 82 40 07 00 00    	jb     b3da <_ZN4core3str7pattern11StrSearcher3new17h5e55b3d26d3aed5eE+0x91a>
    ac9a:	48 89 3c 24          	mov    %rdi,(%rsp)
    ac9e:	4c 39 e6             	cmp    %r12,%rsi
    aca1:	0f 87 3d 07 00 00    	ja     b3e4 <_ZN4core3str7pattern11StrSearcher3new17h5e55b3d26d3aed5eE+0x924>
    aca7:	4f 8d 14 37          	lea    (%r15,%r14,1),%r10
    acab:	4d 85 f6             	test   %r14,%r14
    acae:	74 3e                	je     acee <_ZN4core3str7pattern11StrSearcher3new17h5e55b3d26d3aed5eE+0x22e>
    acb0:	4c 89 ff             	mov    %r15,%rdi
    acb3:	4c 89 d6             	mov    %r10,%rsi
    acb6:	4c 89 ea             	mov    %r13,%rdx
    acb9:	4c 89 d3             	mov    %r10,%rbx
    acbc:	ff 15 56 d2 23 00    	callq  *0x23d256(%rip)        # 247f18 <bcmp@GLIBC_2.2.5>
    acc2:	49 89 da             	mov    %rbx,%r10
    acc5:	85 c0                	test   %eax,%eax
    acc7:	74 25                	je     acee <_ZN4core3str7pattern11StrSearcher3new17h5e55b3d26d3aed5eE+0x22e>
    acc9:	4d 89 e6             	mov    %r12,%r14
    accc:	4d 29 ee             	sub    %r13,%r14
    accf:	4d 39 f5             	cmp    %r14,%r13
    acd2:	4d 0f 47 f5          	cmova  %r13,%r14
    acd6:	49 83 fc 04          	cmp    $0x4,%r12
    acda:	0f 83 e8 01 00 00    	jae    aec8 <_ZN4core3str7pattern11StrSearcher3new17h5e55b3d26d3aed5eE+0x408>
    ace0:	31 d2                	xor    %edx,%edx
    ace2:	4c 89 f8             	mov    %r15,%rax
    ace5:	48 8b 1c 24          	mov    (%rsp),%rbx
    ace9:	e9 d7 03 00 00       	jmpq   b0c5 <_ZN4core3str7pattern11StrSearcher3new17h5e55b3d26d3aed5eE+0x605>
    acee:	bd 01 00 00 00       	mov    $0x1,%ebp
    acf3:	45 31 c0             	xor    %r8d,%r8d
    acf6:	31 d2                	xor    %edx,%edx
    acf8:	b9 01 00 00 00       	mov    $0x1,%ecx
    acfd:	45 31 c9             	xor    %r9d,%r9d
    ad00:	48 8d 04 11          	lea    (%rcx,%rdx,1),%rax
    ad04:	4c 39 e0             	cmp    %r12,%rax
    ad07:	72 32                	jb     ad3b <_ZN4core3str7pattern11StrSearcher3new17h5e55b3d26d3aed5eE+0x27b>
    ad09:	e9 a8 00 00 00       	jmpq   adb6 <_ZN4core3str7pattern11StrSearcher3new17h5e55b3d26d3aed5eE+0x2f6>
    ad0e:	66 90                	xchg   %ax,%ax
    ad10:	48 8d 3c 0a          	lea    (%rdx,%rcx,1),%rdi
    ad14:	48 83 c7 01          	add    $0x1,%rdi
    ad18:	48 89 fd             	mov    %rdi,%rbp
    ad1b:	4c 29 cd             	sub    %r9,%rbp
    ad1e:	31 d2                	xor    %edx,%edx
    ad20:	4c 89 c9             	mov    %r9,%rcx
    ad23:	49 89 c9             	mov    %rcx,%r9
    ad26:	48 89 f9             	mov    %rdi,%rcx
    ad29:	4c 39 f5             	cmp    %r14,%rbp
    ad2c:	0f 84 84 00 00 00    	je     adb6 <_ZN4core3str7pattern11StrSearcher3new17h5e55b3d26d3aed5eE+0x2f6>
    ad32:	48 8d 04 11          	lea    (%rcx,%rdx,1),%rax
    ad36:	4c 39 e0             	cmp    %r12,%rax
    ad39:	73 7b                	jae    adb6 <_ZN4core3str7pattern11StrSearcher3new17h5e55b3d26d3aed5eE+0x2f6>
    ad3b:	48 89 c8             	mov    %rcx,%rax
    ad3e:	48 f7 d0             	not    %rax
    ad41:	4c 89 e6             	mov    %r12,%rsi
    ad44:	48 29 d6             	sub    %rdx,%rsi
    ad47:	48 01 c6             	add    %rax,%rsi
    ad4a:	4c 39 e6             	cmp    %r12,%rsi
    ad4d:	0f 83 55 06 00 00    	jae    b3a8 <_ZN4core3str7pattern11StrSearcher3new17h5e55b3d26d3aed5eE+0x8e8>
    ad53:	48 89 d0             	mov    %rdx,%rax
    ad56:	48 f7 d0             	not    %rax
    ad59:	4c 01 e0             	add    %r12,%rax
    ad5c:	4c 29 c8             	sub    %r9,%rax
    ad5f:	4c 39 e0             	cmp    %r12,%rax
    ad62:	0f 83 51 06 00 00    	jae    b3b9 <_ZN4core3str7pattern11StrSearcher3new17h5e55b3d26d3aed5eE+0x8f9>
    ad68:	48 8d 79 01          	lea    0x1(%rcx),%rdi
    ad6c:	41 0f b6 04 07       	movzbl (%r15,%rax,1),%eax
    ad71:	41 38 04 37          	cmp    %al,(%r15,%rsi,1)
    ad75:	72 99                	jb     ad10 <_ZN4core3str7pattern11StrSearcher3new17h5e55b3d26d3aed5eE+0x250>
    ad77:	75 27                	jne    ada0 <_ZN4core3str7pattern11StrSearcher3new17h5e55b3d26d3aed5eE+0x2e0>
    ad79:	48 83 c2 01          	add    $0x1,%rdx
    ad7d:	48 39 ea             	cmp    %rbp,%rdx
    ad80:	48 89 d0             	mov    %rdx,%rax
    ad83:	49 0f 44 c0          	cmove  %r8,%rax
    ad87:	49 0f 45 d0          	cmovne %r8,%rdx
    ad8b:	48 89 d7             	mov    %rdx,%rdi
    ad8e:	48 01 cf             	add    %rcx,%rdi
    ad91:	48 89 c2             	mov    %rax,%rdx
    ad94:	eb 8a                	jmp    ad20 <_ZN4core3str7pattern11StrSearcher3new17h5e55b3d26d3aed5eE+0x260>
    ad96:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    ad9d:	00 00 00 
    ada0:	bd 01 00 00 00       	mov    $0x1,%ebp
    ada5:	31 d2                	xor    %edx,%edx
    ada7:	49 89 c9             	mov    %rcx,%r9
    adaa:	48 89 f9             	mov    %rdi,%rcx
    adad:	4c 39 f5             	cmp    %r14,%rbp
    adb0:	0f 85 7c ff ff ff    	jne    ad32 <_ZN4core3str7pattern11StrSearcher3new17h5e55b3d26d3aed5eE+0x272>
    adb6:	bb 01 00 00 00       	mov    $0x1,%ebx
    adbb:	45 31 c0             	xor    %r8d,%r8d
    adbe:	31 ed                	xor    %ebp,%ebp
    adc0:	b9 01 00 00 00       	mov    $0x1,%ecx
    adc5:	31 d2                	xor    %edx,%edx
    adc7:	48 8d 04 29          	lea    (%rcx,%rbp,1),%rax
    adcb:	4c 39 e0             	cmp    %r12,%rax
    adce:	72 3b                	jb     ae0b <_ZN4core3str7pattern11StrSearcher3new17h5e55b3d26d3aed5eE+0x34b>
    add0:	e9 b1 00 00 00       	jmpq   ae86 <_ZN4core3str7pattern11StrSearcher3new17h5e55b3d26d3aed5eE+0x3c6>
    add5:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    addc:	00 00 00 
    addf:	90                   	nop
    ade0:	48 8d 3c 29          	lea    (%rcx,%rbp,1),%rdi
    ade4:	48 83 c7 01          	add    $0x1,%rdi
    ade8:	48 89 fb             	mov    %rdi,%rbx
    adeb:	48 29 d3             	sub    %rdx,%rbx
    adee:	31 ed                	xor    %ebp,%ebp
    adf0:	48 89 d1             	mov    %rdx,%rcx
    adf3:	48 89 ca             	mov    %rcx,%rdx
    adf6:	48 89 f9             	mov    %rdi,%rcx
    adf9:	4c 39 f3             	cmp    %r14,%rbx
    adfc:	0f 84 84 00 00 00    	je     ae86 <_ZN4core3str7pattern11StrSearcher3new17h5e55b3d26d3aed5eE+0x3c6>
    ae02:	48 8d 04 29          	lea    (%rcx,%rbp,1),%rax
    ae06:	4c 39 e0             	cmp    %r12,%rax
    ae09:	73 7b                	jae    ae86 <_ZN4core3str7pattern11StrSearcher3new17h5e55b3d26d3aed5eE+0x3c6>
    ae0b:	48 89 c8             	mov    %rcx,%rax
    ae0e:	48 f7 d0             	not    %rax
    ae11:	4c 89 e6             	mov    %r12,%rsi
    ae14:	48 29 ee             	sub    %rbp,%rsi
    ae17:	48 01 c6             	add    %rax,%rsi
    ae1a:	4c 39 e6             	cmp    %r12,%rsi
    ae1d:	0f 83 85 05 00 00    	jae    b3a8 <_ZN4core3str7pattern11StrSearcher3new17h5e55b3d26d3aed5eE+0x8e8>
    ae23:	48 89 e8             	mov    %rbp,%rax
    ae26:	48 f7 d0             	not    %rax
    ae29:	4c 01 e0             	add    %r12,%rax
    ae2c:	48 29 d0             	sub    %rdx,%rax
    ae2f:	4c 39 e0             	cmp    %r12,%rax
    ae32:	0f 83 81 05 00 00    	jae    b3b9 <_ZN4core3str7pattern11StrSearcher3new17h5e55b3d26d3aed5eE+0x8f9>
    ae38:	48 8d 79 01          	lea    0x1(%rcx),%rdi
    ae3c:	41 0f b6 04 07       	movzbl (%r15,%rax,1),%eax
    ae41:	41 38 04 37          	cmp    %al,(%r15,%rsi,1)
    ae45:	77 99                	ja     ade0 <_ZN4core3str7pattern11StrSearcher3new17h5e55b3d26d3aed5eE+0x320>
    ae47:	75 27                	jne    ae70 <_ZN4core3str7pattern11StrSearcher3new17h5e55b3d26d3aed5eE+0x3b0>
    ae49:	48 83 c5 01          	add    $0x1,%rbp
    ae4d:	48 39 dd             	cmp    %rbx,%rbp
    ae50:	48 89 e8             	mov    %rbp,%rax
    ae53:	49 0f 44 c0          	cmove  %r8,%rax
    ae57:	49 0f 45 e8          	cmovne %r8,%rbp
    ae5b:	48 89 ef             	mov    %rbp,%rdi
    ae5e:	48 01 cf             	add    %rcx,%rdi
    ae61:	48 89 c5             	mov    %rax,%rbp
    ae64:	eb 8a                	jmp    adf0 <_ZN4core3str7pattern11StrSearcher3new17h5e55b3d26d3aed5eE+0x330>
    ae66:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    ae6d:	00 00 00 
    ae70:	bb 01 00 00 00       	mov    $0x1,%ebx
    ae75:	31 ed                	xor    %ebp,%ebp
    ae77:	48 89 ca             	mov    %rcx,%rdx
    ae7a:	48 89 f9             	mov    %rdi,%rcx
    ae7d:	4c 39 f3             	cmp    %r14,%rbx
    ae80:	0f 85 7c ff ff ff    	jne    ae02 <_ZN4core3str7pattern11StrSearcher3new17h5e55b3d26d3aed5eE+0x342>
    ae86:	49 39 d1             	cmp    %rdx,%r9
    ae89:	49 0f 47 d1          	cmova  %r9,%rdx
    ae8d:	4d 39 e6             	cmp    %r12,%r14
    ae90:	0f 87 5b 05 00 00    	ja     b3f1 <_ZN4core3str7pattern11StrSearcher3new17h5e55b3d26d3aed5eE+0x931>
    ae96:	4c 89 e0             	mov    %r12,%rax
    ae99:	48 29 d0             	sub    %rdx,%rax
    ae9c:	4d 85 f6             	test   %r14,%r14
    ae9f:	48 8b 1c 24          	mov    (%rsp),%rbx
    aea3:	74 14                	je     aeb9 <_ZN4core3str7pattern11StrSearcher3new17h5e55b3d26d3aed5eE+0x3f9>
    aea5:	49 83 fe 04          	cmp    $0x4,%r14
    aea9:	0f 83 4b 02 00 00    	jae    b0fa <_ZN4core3str7pattern11StrSearcher3new17h5e55b3d26d3aed5eE+0x63a>
    aeaf:	31 d2                	xor    %edx,%edx
    aeb1:	4c 89 f9             	mov    %r15,%rcx
    aeb4:	e9 40 04 00 00       	jmpq   b2f9 <_ZN4core3str7pattern11StrSearcher3new17h5e55b3d26d3aed5eE+0x839>
    aeb9:	31 f6                	xor    %esi,%esi
    aebb:	4c 89 e1             	mov    %r12,%rcx
    aebe:	31 d2                	xor    %edx,%edx
    aec0:	45 31 f6             	xor    %r14d,%r14d
    aec3:	e9 4b 04 00 00       	jmpq   b313 <_ZN4core3str7pattern11StrSearcher3new17h5e55b3d26d3aed5eE+0x853>
    aec8:	4c 89 e0             	mov    %r12,%rax
    aecb:	48 83 e0 fc          	and    $0xfffffffffffffffc,%rax
    aecf:	48 8d 48 fc          	lea    -0x4(%rax),%rcx
    aed3:	48 89 ce             	mov    %rcx,%rsi
    aed6:	48 c1 ee 02          	shr    $0x2,%rsi
    aeda:	48 83 c6 01          	add    $0x1,%rsi
    aede:	89 f2                	mov    %esi,%edx
    aee0:	83 e2 01             	and    $0x1,%edx
    aee3:	48 85 c9             	test   %rcx,%rcx
    aee6:	48 8b 1c 24          	mov    (%rsp),%rbx
    aeea:	0f 84 77 04 00 00    	je     b367 <_ZN4core3str7pattern11StrSearcher3new17h5e55b3d26d3aed5eE+0x8a7>
    aef0:	48 29 d6             	sub    %rdx,%rsi
    aef3:	66 0f 57 c0          	xorpd  %xmm0,%xmm0
    aef7:	31 c9                	xor    %ecx,%ecx
    aef9:	66 0f 6f 15 ff f4 02 	movdqa 0x2f4ff(%rip),%xmm2        # 3a400 <_fini+0xbc>
    af00:	00 
    af01:	66 0f db 15 e7 f4 02 	pand   0x2f4e7(%rip),%xmm2        # 3a3f0 <_fini+0xac>
    af08:	00 
    af09:	66 0f 6f 1d bf f4 02 	movdqa 0x2f4bf(%rip),%xmm3        # 3a3d0 <_fini+0x8c>
    af10:	00 
    af11:	66 0f 57 c9          	xorpd  %xmm1,%xmm1
    af15:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    af1c:	00 00 00 
    af1f:	90                   	nop
    af20:	41 0f b6 7c 0f 01    	movzbl 0x1(%r15,%rcx,1),%edi
    af26:	66 48 0f 6e e7       	movq   %rdi,%xmm4
    af2b:	41 0f b6 3c 0f       	movzbl (%r15,%rcx,1),%edi
    af30:	66 48 0f 6e ef       	movq   %rdi,%xmm5
    af35:	66 0f 6c ec          	punpcklqdq %xmm4,%xmm5
    af39:	41 0f b6 7c 0f 03    	movzbl 0x3(%r15,%rcx,1),%edi
    af3f:	66 48 0f 6e e7       	movq   %rdi,%xmm4
    af44:	41 0f b6 7c 0f 02    	movzbl 0x2(%r15,%rcx,1),%edi
    af4a:	66 48 0f 6e f7       	movq   %rdi,%xmm6
    af4f:	66 0f 6c f4          	punpcklqdq %xmm4,%xmm6
    af53:	66 0f db ea          	pand   %xmm2,%xmm5
    af57:	66 0f db f2          	pand   %xmm2,%xmm6
    af5b:	66 0f 6f fb          	movdqa %xmm3,%xmm7
    af5f:	66 0f f3 fd          	psllq  %xmm5,%xmm7
    af63:	66 0f 70 ed 4e       	pshufd $0x4e,%xmm5,%xmm5
    af68:	66 0f 6f e3          	movdqa %xmm3,%xmm4
    af6c:	66 0f f3 e5          	psllq  %xmm5,%xmm4
    af70:	f2 0f 10 e7          	movsd  %xmm7,%xmm4
    af74:	66 0f 56 e0          	orpd   %xmm0,%xmm4
    af78:	66 0f 6f c3          	movdqa %xmm3,%xmm0
    af7c:	66 0f f3 c6          	psllq  %xmm6,%xmm0
    af80:	66 0f 70 f6 4e       	pshufd $0x4e,%xmm6,%xmm6
    af85:	66 0f 6f eb          	movdqa %xmm3,%xmm5
    af89:	66 0f f3 ee          	psllq  %xmm6,%xmm5
    af8d:	f2 0f 10 e8          	movsd  %xmm0,%xmm5
    af91:	66 0f 56 e9          	orpd   %xmm1,%xmm5
    af95:	41 0f b6 7c 0f 05    	movzbl 0x5(%r15,%rcx,1),%edi
    af9b:	66 48 0f 6e c7       	movq   %rdi,%xmm0
    afa0:	41 0f b6 7c 0f 04    	movzbl 0x4(%r15,%rcx,1),%edi
    afa6:	66 48 0f 6e cf       	movq   %rdi,%xmm1
    afab:	66 0f 6c c8          	punpcklqdq %xmm0,%xmm1
    afaf:	41 0f b6 7c 0f 07    	movzbl 0x7(%r15,%rcx,1),%edi
    afb5:	66 48 0f 6e c7       	movq   %rdi,%xmm0
    afba:	41 0f b6 7c 0f 06    	movzbl 0x6(%r15,%rcx,1),%edi
    afc0:	66 48 0f 6e f7       	movq   %rdi,%xmm6
    afc5:	66 0f db ca          	pand   %xmm2,%xmm1
    afc9:	66 0f 6f fb          	movdqa %xmm3,%xmm7
    afcd:	66 0f f3 f9          	psllq  %xmm1,%xmm7
    afd1:	66 0f 6c f0          	punpcklqdq %xmm0,%xmm6
    afd5:	66 0f 70 c9 4e       	pshufd $0x4e,%xmm1,%xmm1
    afda:	66 0f 6f c3          	movdqa %xmm3,%xmm0
    afde:	66 0f f3 c1          	psllq  %xmm1,%xmm0
    afe2:	66 0f db f2          	pand   %xmm2,%xmm6
    afe6:	f2 0f 10 c7          	movsd  %xmm7,%xmm0
    afea:	66 0f 6f fb          	movdqa %xmm3,%xmm7
    afee:	66 0f f3 fe          	psllq  %xmm6,%xmm7
    aff2:	66 0f 56 c4          	orpd   %xmm4,%xmm0
    aff6:	66 0f 70 e6 4e       	pshufd $0x4e,%xmm6,%xmm4
    affb:	66 0f 6f cb          	movdqa %xmm3,%xmm1
    afff:	66 0f f3 cc          	psllq  %xmm4,%xmm1
    b003:	f2 0f 10 cf          	movsd  %xmm7,%xmm1
    b007:	66 0f 56 cd          	orpd   %xmm5,%xmm1
    b00b:	48 83 c1 08          	add    $0x8,%rcx
    b00f:	48 83 c6 fe          	add    $0xfffffffffffffffe,%rsi
    b013:	0f 85 07 ff ff ff    	jne    af20 <_ZN4core3str7pattern11StrSearcher3new17h5e55b3d26d3aed5eE+0x460>
    b019:	48 85 d2             	test   %rdx,%rdx
    b01c:	0f 84 89 00 00 00    	je     b0ab <_ZN4core3str7pattern11StrSearcher3new17h5e55b3d26d3aed5eE+0x5eb>
    b022:	41 0f b6 54 0f 03    	movzbl 0x3(%r15,%rcx,1),%edx
    b028:	66 48 0f 6e d2       	movq   %rdx,%xmm2
    b02d:	41 0f b6 54 0f 02    	movzbl 0x2(%r15,%rcx,1),%edx
    b033:	66 48 0f 6e da       	movq   %rdx,%xmm3
    b038:	66 0f 6c da          	punpcklqdq %xmm2,%xmm3
    b03c:	66 0f 6f 15 bc f3 02 	movdqa 0x2f3bc(%rip),%xmm2        # 3a400 <_fini+0xbc>
    b043:	00 
    b044:	66 0f db 15 a4 f3 02 	pand   0x2f3a4(%rip),%xmm2        # 3a3f0 <_fini+0xac>
    b04b:	00 
    b04c:	66 0f db da          	pand   %xmm2,%xmm3
    b050:	66 0f 6f 25 78 f3 02 	movdqa 0x2f378(%rip),%xmm4        # 3a3d0 <_fini+0x8c>
    b057:	00 
    b058:	66 0f 6f ec          	movdqa %xmm4,%xmm5
    b05c:	66 0f f3 eb          	psllq  %xmm3,%xmm5
    b060:	66 0f 70 db 4e       	pshufd $0x4e,%xmm3,%xmm3
    b065:	66 0f 6f f4          	movdqa %xmm4,%xmm6
    b069:	66 0f f3 f3          	psllq  %xmm3,%xmm6
    b06d:	f2 0f 10 f5          	movsd  %xmm5,%xmm6
    b071:	66 0f 56 ce          	orpd   %xmm6,%xmm1
    b075:	41 0f b6 54 0f 01    	movzbl 0x1(%r15,%rcx,1),%edx
    b07b:	66 48 0f 6e da       	movq   %rdx,%xmm3
    b080:	41 0f b6 0c 0f       	movzbl (%r15,%rcx,1),%ecx
    b085:	66 48 0f 6e e9       	movq   %rcx,%xmm5
    b08a:	66 0f 6c eb          	punpcklqdq %xmm3,%xmm5
    b08e:	66 0f db ea          	pand   %xmm2,%xmm5
    b092:	66 0f 6f d4          	movdqa %xmm4,%xmm2
    b096:	66 0f f3 d5          	psllq  %xmm5,%xmm2
    b09a:	66 0f 70 dd 4e       	pshufd $0x4e,%xmm5,%xmm3
    b09f:	66 0f f3 e3          	psllq  %xmm3,%xmm4
    b0a3:	f2 0f 10 e2          	movsd  %xmm2,%xmm4
    b0a7:	66 0f 56 c4          	orpd   %xmm4,%xmm0
    b0ab:	66 0f 56 c1          	orpd   %xmm1,%xmm0
    b0af:	66 0f 70 c8 4e       	pshufd $0x4e,%xmm0,%xmm1
    b0b4:	66 0f eb c8          	por    %xmm0,%xmm1
    b0b8:	66 48 0f 7e ca       	movq   %xmm1,%rdx
    b0bd:	4c 39 e0             	cmp    %r12,%rax
    b0c0:	74 1e                	je     b0e0 <_ZN4core3str7pattern11StrSearcher3new17h5e55b3d26d3aed5eE+0x620>
    b0c2:	4c 01 f8             	add    %r15,%rax
    b0c5:	4b 8d 0c 27          	lea    (%r15,%r12,1),%rcx
    b0c9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    b0d0:	0f b6 30             	movzbl (%rax),%esi
    b0d3:	48 83 c0 01          	add    $0x1,%rax
    b0d7:	48 0f ab f2          	bts    %rsi,%rdx
    b0db:	48 39 c1             	cmp    %rax,%rcx
    b0de:	75 f0                	jne    b0d0 <_ZN4core3str7pattern11StrSearcher3new17h5e55b3d26d3aed5eE+0x610>
    b0e0:	49 83 c6 01          	add    $0x1,%r14
    b0e4:	48 c7 c6 ff ff ff ff 	mov    $0xffffffffffffffff,%rsi
    b0eb:	48 c7 c1 ff ff ff ff 	mov    $0xffffffffffffffff,%rcx
    b0f2:	4c 89 e8             	mov    %r13,%rax
    b0f5:	e9 19 02 00 00       	jmpq   b313 <_ZN4core3str7pattern11StrSearcher3new17h5e55b3d26d3aed5eE+0x853>
    b0fa:	4c 89 f1             	mov    %r14,%rcx
    b0fd:	48 83 e1 fc          	and    $0xfffffffffffffffc,%rcx
    b101:	48 8d 51 fc          	lea    -0x4(%rcx),%rdx
    b105:	48 89 d7             	mov    %rdx,%rdi
    b108:	48 c1 ef 02          	shr    $0x2,%rdi
    b10c:	48 83 c7 01          	add    $0x1,%rdi
    b110:	89 fe                	mov    %edi,%esi
    b112:	83 e6 01             	and    $0x1,%esi
    b115:	48 85 d2             	test   %rdx,%rdx
    b118:	0f 84 61 02 00 00    	je     b37f <_ZN4core3str7pattern11StrSearcher3new17h5e55b3d26d3aed5eE+0x8bf>
    b11e:	48 29 f7             	sub    %rsi,%rdi
    b121:	66 0f 57 c0          	xorpd  %xmm0,%xmm0
    b125:	31 d2                	xor    %edx,%edx
    b127:	66 0f 6f 15 d1 f2 02 	movdqa 0x2f2d1(%rip),%xmm2        # 3a400 <_fini+0xbc>
    b12e:	00 
    b12f:	66 0f db 15 b9 f2 02 	pand   0x2f2b9(%rip),%xmm2        # 3a3f0 <_fini+0xac>
    b136:	00 
    b137:	66 0f 6f 1d 91 f2 02 	movdqa 0x2f291(%rip),%xmm3        # 3a3d0 <_fini+0x8c>
    b13e:	00 
    b13f:	66 0f 57 c9          	xorpd  %xmm1,%xmm1
    b143:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    b14a:	00 00 00 
    b14d:	0f 1f 00             	nopl   (%rax)
    b150:	41 0f b6 6c 17 01    	movzbl 0x1(%r15,%rdx,1),%ebp
    b156:	66 48 0f 6e e5       	movq   %rbp,%xmm4
    b15b:	41 0f b6 2c 17       	movzbl (%r15,%rdx,1),%ebp
    b160:	66 48 0f 6e ed       	movq   %rbp,%xmm5
    b165:	66 0f 6c ec          	punpcklqdq %xmm4,%xmm5
    b169:	41 0f b6 6c 17 03    	movzbl 0x3(%r15,%rdx,1),%ebp
    b16f:	66 48 0f 6e e5       	movq   %rbp,%xmm4
    b174:	41 0f b6 6c 17 02    	movzbl 0x2(%r15,%rdx,1),%ebp
    b17a:	66 48 0f 6e f5       	movq   %rbp,%xmm6
    b17f:	66 0f 6c f4          	punpcklqdq %xmm4,%xmm6
    b183:	66 0f db ea          	pand   %xmm2,%xmm5
    b187:	66 0f db f2          	pand   %xmm2,%xmm6
    b18b:	66 0f 6f fb          	movdqa %xmm3,%xmm7
    b18f:	66 0f f3 fd          	psllq  %xmm5,%xmm7
    b193:	66 0f 70 ed 4e       	pshufd $0x4e,%xmm5,%xmm5
    b198:	66 0f 6f e3          	movdqa %xmm3,%xmm4
    b19c:	66 0f f3 e5          	psllq  %xmm5,%xmm4
    b1a0:	f2 0f 10 e7          	movsd  %xmm7,%xmm4
    b1a4:	66 0f 56 e0          	orpd   %xmm0,%xmm4
    b1a8:	66 0f 6f c3          	movdqa %xmm3,%xmm0
    b1ac:	66 0f f3 c6          	psllq  %xmm6,%xmm0
    b1b0:	66 0f 70 f6 4e       	pshufd $0x4e,%xmm6,%xmm6
    b1b5:	66 0f 6f eb          	movdqa %xmm3,%xmm5
    b1b9:	66 0f f3 ee          	psllq  %xmm6,%xmm5
    b1bd:	f2 0f 10 e8          	movsd  %xmm0,%xmm5
    b1c1:	66 0f 56 e9          	orpd   %xmm1,%xmm5
    b1c5:	41 0f b6 6c 17 05    	movzbl 0x5(%r15,%rdx,1),%ebp
    b1cb:	66 48 0f 6e c5       	movq   %rbp,%xmm0
    b1d0:	41 0f b6 6c 17 04    	movzbl 0x4(%r15,%rdx,1),%ebp
    b1d6:	66 48 0f 6e cd       	movq   %rbp,%xmm1
    b1db:	66 0f 6c c8          	punpcklqdq %xmm0,%xmm1
    b1df:	41 0f b6 6c 17 07    	movzbl 0x7(%r15,%rdx,1),%ebp
    b1e5:	66 48 0f 6e c5       	movq   %rbp,%xmm0
    b1ea:	41 0f b6 6c 17 06    	movzbl 0x6(%r15,%rdx,1),%ebp
    b1f0:	66 48 0f 6e f5       	movq   %rbp,%xmm6
    b1f5:	66 0f db ca          	pand   %xmm2,%xmm1
    b1f9:	66 0f 6f fb          	movdqa %xmm3,%xmm7
    b1fd:	66 0f f3 f9          	psllq  %xmm1,%xmm7
    b201:	66 0f 6c f0          	punpcklqdq %xmm0,%xmm6
    b205:	66 0f 70 c9 4e       	pshufd $0x4e,%xmm1,%xmm1
    b20a:	66 0f 6f c3          	movdqa %xmm3,%xmm0
    b20e:	66 0f f3 c1          	psllq  %xmm1,%xmm0
    b212:	66 0f db f2          	pand   %xmm2,%xmm6
    b216:	f2 0f 10 c7          	movsd  %xmm7,%xmm0
    b21a:	66 0f 6f fb          	movdqa %xmm3,%xmm7
    b21e:	66 0f f3 fe          	psllq  %xmm6,%xmm7
    b222:	66 0f 56 c4          	orpd   %xmm4,%xmm0
    b226:	66 0f 70 e6 4e       	pshufd $0x4e,%xmm6,%xmm4
    b22b:	66 0f 6f cb          	movdqa %xmm3,%xmm1
    b22f:	66 0f f3 cc          	psllq  %xmm4,%xmm1
    b233:	f2 0f 10 cf          	movsd  %xmm7,%xmm1
    b237:	66 0f 56 cd          	orpd   %xmm5,%xmm1
    b23b:	48 83 c2 08          	add    $0x8,%rdx
    b23f:	48 83 c7 fe          	add    $0xfffffffffffffffe,%rdi
    b243:	0f 85 07 ff ff ff    	jne    b150 <_ZN4core3str7pattern11StrSearcher3new17h5e55b3d26d3aed5eE+0x690>
    b249:	48 85 f6             	test   %rsi,%rsi
    b24c:	0f 84 89 00 00 00    	je     b2db <_ZN4core3str7pattern11StrSearcher3new17h5e55b3d26d3aed5eE+0x81b>
    b252:	41 0f b6 74 17 03    	movzbl 0x3(%r15,%rdx,1),%esi
    b258:	66 48 0f 6e d6       	movq   %rsi,%xmm2
    b25d:	41 0f b6 74 17 02    	movzbl 0x2(%r15,%rdx,1),%esi
    b263:	66 48 0f 6e de       	movq   %rsi,%xmm3
    b268:	66 0f 6c da          	punpcklqdq %xmm2,%xmm3
    b26c:	66 0f 6f 15 8c f1 02 	movdqa 0x2f18c(%rip),%xmm2        # 3a400 <_fini+0xbc>
    b273:	00 
    b274:	66 0f db 15 74 f1 02 	pand   0x2f174(%rip),%xmm2        # 3a3f0 <_fini+0xac>
    b27b:	00 
    b27c:	66 0f db da          	pand   %xmm2,%xmm3
    b280:	66 0f 6f 25 48 f1 02 	movdqa 0x2f148(%rip),%xmm4        # 3a3d0 <_fini+0x8c>
    b287:	00 
    b288:	66 0f 6f ec          	movdqa %xmm4,%xmm5
    b28c:	66 0f f3 eb          	psllq  %xmm3,%xmm5
    b290:	66 0f 70 db 4e       	pshufd $0x4e,%xmm3,%xmm3
    b295:	66 0f 6f f4          	movdqa %xmm4,%xmm6
    b299:	66 0f f3 f3          	psllq  %xmm3,%xmm6
    b29d:	f2 0f 10 f5          	movsd  %xmm5,%xmm6
    b2a1:	66 0f 56 ce          	orpd   %xmm6,%xmm1
    b2a5:	41 0f b6 74 17 01    	movzbl 0x1(%r15,%rdx,1),%esi
    b2ab:	66 48 0f 6e de       	movq   %rsi,%xmm3
    b2b0:	41 0f b6 14 17       	movzbl (%r15,%rdx,1),%edx
    b2b5:	66 48 0f 6e ea       	movq   %rdx,%xmm5
    b2ba:	66 0f 6c eb          	punpcklqdq %xmm3,%xmm5
    b2be:	66 0f db ea          	pand   %xmm2,%xmm5
    b2c2:	66 0f 6f d4          	movdqa %xmm4,%xmm2
    b2c6:	66 0f f3 d5          	psllq  %xmm5,%xmm2
    b2ca:	66 0f 70 dd 4e       	pshufd $0x4e,%xmm5,%xmm3
    b2cf:	66 0f f3 e3          	psllq  %xmm3,%xmm4
    b2d3:	f2 0f 10 e2          	movsd  %xmm2,%xmm4
    b2d7:	66 0f 56 c4          	orpd   %xmm4,%xmm0
    b2db:	66 0f 56 c1          	orpd   %xmm1,%xmm0
    b2df:	66 0f 70 c8 4e       	pshufd $0x4e,%xmm0,%xmm1
    b2e4:	66 0f eb c8          	por    %xmm0,%xmm1
    b2e8:	66 48 0f 7e ca       	movq   %xmm1,%rdx
    b2ed:	49 39 ce             	cmp    %rcx,%r14
    b2f0:	75 04                	jne    b2f6 <_ZN4core3str7pattern11StrSearcher3new17h5e55b3d26d3aed5eE+0x836>
    b2f2:	31 f6                	xor    %esi,%esi
    b2f4:	eb 1a                	jmp    b310 <_ZN4core3str7pattern11StrSearcher3new17h5e55b3d26d3aed5eE+0x850>
    b2f6:	4c 01 f9             	add    %r15,%rcx
    b2f9:	31 f6                	xor    %esi,%esi
    b2fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    b300:	0f b6 39             	movzbl (%rcx),%edi
    b303:	48 83 c1 01          	add    $0x1,%rcx
    b307:	48 0f ab fa          	bts    %rdi,%rdx
    b30b:	49 39 ca             	cmp    %rcx,%r10
    b30e:	75 f0                	jne    b300 <_ZN4core3str7pattern11StrSearcher3new17h5e55b3d26d3aed5eE+0x840>
    b310:	4c 89 e1             	mov    %r12,%rcx
    b313:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    b318:	48 89 3b             	mov    %rdi,(%rbx)
    b31b:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
    b320:	48 89 7b 08          	mov    %rdi,0x8(%rbx)
    b324:	4c 89 7b 10          	mov    %r15,0x10(%rbx)
    b328:	4c 89 63 18          	mov    %r12,0x18(%rbx)
    b32c:	48 c7 43 20 01 00 00 	movq   $0x1,0x20(%rbx)
    b333:	00 
    b334:	4c 89 6b 28          	mov    %r13,0x28(%rbx)
    b338:	48 89 43 30          	mov    %rax,0x30(%rbx)
    b33c:	4c 89 73 38          	mov    %r14,0x38(%rbx)
    b340:	48 89 53 40          	mov    %rdx,0x40(%rbx)
    b344:	48 c7 43 48 00 00 00 	movq   $0x0,0x48(%rbx)
    b34b:	00 
    b34c:	48 89 7b 50          	mov    %rdi,0x50(%rbx)
    b350:	48 89 73 58          	mov    %rsi,0x58(%rbx)
    b354:	48 89 4b 60          	mov    %rcx,0x60(%rbx)
    b358:	48 83 c4 18          	add    $0x18,%rsp
    b35c:	5b                   	pop    %rbx
    b35d:	41 5c                	pop    %r12
    b35f:	41 5d                	pop    %r13
    b361:	41 5e                	pop    %r14
    b363:	41 5f                	pop    %r15
    b365:	5d                   	pop    %rbp
    b366:	c3                   	retq   
    b367:	66 0f 57 c0          	xorpd  %xmm0,%xmm0
    b36b:	31 c9                	xor    %ecx,%ecx
    b36d:	66 0f 57 c9          	xorpd  %xmm1,%xmm1
    b371:	48 85 d2             	test   %rdx,%rdx
    b374:	0f 85 a8 fc ff ff    	jne    b022 <_ZN4core3str7pattern11StrSearcher3new17h5e55b3d26d3aed5eE+0x562>
    b37a:	e9 2c fd ff ff       	jmpq   b0ab <_ZN4core3str7pattern11StrSearcher3new17h5e55b3d26d3aed5eE+0x5eb>
    b37f:	66 0f 57 c0          	xorpd  %xmm0,%xmm0
    b383:	31 d2                	xor    %edx,%edx
    b385:	66 0f 57 c9          	xorpd  %xmm1,%xmm1
    b389:	48 85 f6             	test   %rsi,%rsi
    b38c:	0f 85 c0 fe ff ff    	jne    b252 <_ZN4core3str7pattern11StrSearcher3new17h5e55b3d26d3aed5eE+0x792>
    b392:	e9 44 ff ff ff       	jmpq   b2db <_ZN4core3str7pattern11StrSearcher3new17h5e55b3d26d3aed5eE+0x81b>
    b397:	48 8d 3d 5a b3 23 00 	lea    0x23b35a(%rip),%rdi        # 2466f8 <__init_array_end+0x6e8>
    b39e:	4c 89 e2             	mov    %r12,%rdx
    b3a1:	e8 5a c0 ff ff       	callq  7400 <_ZN4core9panicking18panic_bounds_check17h83121a2515f55ceeE>
    b3a6:	0f 0b                	ud2    
    b3a8:	48 8d 3d 61 b3 23 00 	lea    0x23b361(%rip),%rdi        # 246710 <__init_array_end+0x700>
    b3af:	4c 89 e2             	mov    %r12,%rdx
    b3b2:	e8 49 c0 ff ff       	callq  7400 <_ZN4core9panicking18panic_bounds_check17h83121a2515f55ceeE>
    b3b7:	0f 0b                	ud2    
    b3b9:	48 8d 3d 68 b3 23 00 	lea    0x23b368(%rip),%rdi        # 246728 <__init_array_end+0x718>
    b3c0:	48 89 c6             	mov    %rax,%rsi
    b3c3:	4c 89 e2             	mov    %r12,%rdx
    b3c6:	e8 35 c0 ff ff       	callq  7400 <_ZN4core9panicking18panic_bounds_check17h83121a2515f55ceeE>
    b3cb:	0f 0b                	ud2    
    b3cd:	4c 89 ef             	mov    %r13,%rdi
    b3d0:	4c 89 e6             	mov    %r12,%rsi
    b3d3:	e8 f8 c7 ff ff       	callq  7bd0 <_ZN4core5slice20slice_index_len_fail17h52736412c1ce1871E>
    b3d8:	0f 0b                	ud2    
    b3da:	4c 89 f7             	mov    %r14,%rdi
    b3dd:	e8 6e c8 ff ff       	callq  7c50 <_ZN4core5slice22slice_index_order_fail17h7bcf2f94ba9e06deE>
    b3e2:	0f 0b                	ud2    
    b3e4:	48 89 f7             	mov    %rsi,%rdi
    b3e7:	4c 89 e6             	mov    %r12,%rsi
    b3ea:	e8 e1 c7 ff ff       	callq  7bd0 <_ZN4core5slice20slice_index_len_fail17h52736412c1ce1871E>
    b3ef:	0f 0b                	ud2    
    b3f1:	4c 89 f7             	mov    %r14,%rdi
    b3f4:	4c 89 e6             	mov    %r12,%rsi
    b3f7:	e8 d4 c7 ff ff       	callq  7bd0 <_ZN4core5slice20slice_index_len_fail17h52736412c1ce1871E>
    b3fc:	0f 0b                	ud2    
    b3fe:	66 90                	xchg   %ax,%ax

000000000000b400 <_ZN96_$LT$core..str..lossy..Utf8LossyChunksIter$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hf04031f9d61ea481E>:
    b400:	55                   	push   %rbp
    b401:	41 57                	push   %r15
    b403:	41 56                	push   %r14
    b405:	41 54                	push   %r12
    b407:	53                   	push   %rbx
    b408:	49 89 f0             	mov    %rsi,%r8
    b40b:	48 8b 76 08          	mov    0x8(%rsi),%rsi
    b40f:	48 85 f6             	test   %rsi,%rsi
    b412:	0f 84 18 02 00 00    	je     b630 <_ZN96_$LT$core..str..lossy..Utf8LossyChunksIter$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hf04031f9d61ea481E+0x230>
    b418:	4d 8b 20             	mov    (%r8),%r12
    b41b:	31 c0                	xor    %eax,%eax
    b41d:	4c 8d 15 34 01 03 00 	lea    0x30134(%rip),%r10        # 3b558 <_ZN4core3str15UTF8_CHAR_WIDTH17h639c7c3d8ce7e983E>
    b424:	4c 8d 1d 44 14 03 00 	lea    0x31444(%rip),%r11        # 3c86f <str.1+0xbf>
    b42b:	41 0f b6 1c 04       	movzbl (%r12,%rax,1),%ebx
    b430:	48 8d 50 01          	lea    0x1(%rax),%rdx
    b434:	84 db                	test   %bl,%bl
    b436:	79 0b                	jns    b443 <_ZN96_$LT$core..str..lossy..Utf8LossyChunksIter$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hf04031f9d61ea481E+0x43>
    b438:	eb 22                	jmp    b45c <_ZN96_$LT$core..str..lossy..Utf8LossyChunksIter$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hf04031f9d61ea481E+0x5c>
    b43a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    b440:	48 89 c2             	mov    %rax,%rdx
    b443:	48 89 d0             	mov    %rdx,%rax
    b446:	48 39 f2             	cmp    %rsi,%rdx
    b449:	0f 83 ed 01 00 00    	jae    b63c <_ZN96_$LT$core..str..lossy..Utf8LossyChunksIter$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hf04031f9d61ea481E+0x23c>
    b44f:	41 0f b6 1c 04       	movzbl (%r12,%rax,1),%ebx
    b454:	48 8d 50 01          	lea    0x1(%rax),%rdx
    b458:	84 db                	test   %bl,%bl
    b45a:	79 e7                	jns    b443 <_ZN96_$LT$core..str..lossy..Utf8LossyChunksIter$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hf04031f9d61ea481E+0x43>
    b45c:	4d 8d 0c 04          	lea    (%r12,%rax,1),%r9
    b460:	42 8a 0c 13          	mov    (%rbx,%r10,1),%cl
    b464:	80 f9 02             	cmp    $0x2,%cl
    b467:	0f 84 88 00 00 00    	je     b4f5 <_ZN96_$LT$core..str..lossy..Utf8LossyChunksIter$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hf04031f9d61ea481E+0xf5>
    b46d:	80 f9 03             	cmp    $0x3,%cl
    b470:	74 48                	je     b4ba <_ZN96_$LT$core..str..lossy..Utf8LossyChunksIter$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hf04031f9d61ea481E+0xba>
    b472:	80 f9 04             	cmp    $0x4,%cl
    b475:	0f 85 eb 01 00 00    	jne    b666 <_ZN96_$LT$core..str..lossy..Utf8LossyChunksIter$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hf04031f9d61ea481E+0x266>
    b47b:	4d 8d 34 14          	lea    (%r12,%rdx,1),%r14
    b47f:	49 89 f7             	mov    %rsi,%r15
    b482:	49 29 d7             	sub    %rdx,%r15
    b485:	b9 00 00 00 00       	mov    $0x0,%ecx
    b48a:	49 0f 47 ce          	cmova  %r14,%rcx
    b48e:	48 85 c9             	test   %rcx,%rcx
    b491:	49 0f 44 cb          	cmove  %r11,%rcx
    b495:	8a 09                	mov    (%rcx),%cl
    b497:	80 fb f4             	cmp    $0xf4,%bl
    b49a:	0f 84 87 00 00 00    	je     b527 <_ZN96_$LT$core..str..lossy..Utf8LossyChunksIter$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hf04031f9d61ea481E+0x127>
    b4a0:	80 fb f0             	cmp    $0xf0,%bl
    b4a3:	0f 85 a6 00 00 00    	jne    b54f <_ZN96_$LT$core..str..lossy..Utf8LossyChunksIter$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hf04031f9d61ea481E+0x14f>
    b4a9:	80 c1 70             	add    $0x70,%cl
    b4ac:	80 f9 30             	cmp    $0x30,%cl
    b4af:	0f 82 b7 00 00 00    	jb     b56c <_ZN96_$LT$core..str..lossy..Utf8LossyChunksIter$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hf04031f9d61ea481E+0x16c>
    b4b5:	e9 0d 02 00 00       	jmpq   b6c7 <_ZN96_$LT$core..str..lossy..Utf8LossyChunksIter$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hf04031f9d61ea481E+0x2c7>
    b4ba:	4d 8d 34 14          	lea    (%r12,%rdx,1),%r14
    b4be:	49 89 f7             	mov    %rsi,%r15
    b4c1:	49 29 d7             	sub    %rdx,%r15
    b4c4:	b9 00 00 00 00       	mov    $0x0,%ecx
    b4c9:	49 0f 47 ce          	cmova  %r14,%rcx
    b4cd:	48 85 c9             	test   %rcx,%rcx
    b4d0:	49 0f 44 cb          	cmove  %r11,%rcx
    b4d4:	8a 09                	mov    (%rcx),%cl
    b4d6:	80 fb ed             	cmp    $0xed,%bl
    b4d9:	74 5e                	je     b539 <_ZN96_$LT$core..str..lossy..Utf8LossyChunksIter$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hf04031f9d61ea481E+0x139>
    b4db:	80 fb e0             	cmp    $0xe0,%bl
    b4de:	0f 85 e5 00 00 00    	jne    b5c9 <_ZN96_$LT$core..str..lossy..Utf8LossyChunksIter$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hf04031f9d61ea481E+0x1c9>
    b4e4:	80 e1 e0             	and    $0xe0,%cl
    b4e7:	80 f9 a0             	cmp    $0xa0,%cl
    b4ea:	0f 84 11 01 00 00    	je     b601 <_ZN96_$LT$core..str..lossy..Utf8LossyChunksIter$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hf04031f9d61ea481E+0x201>
    b4f0:	e9 cb 01 00 00       	jmpq   b6c0 <_ZN96_$LT$core..str..lossy..Utf8LossyChunksIter$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hf04031f9d61ea481E+0x2c0>
    b4f5:	4d 8d 34 14          	lea    (%r12,%rdx,1),%r14
    b4f9:	48 89 f3             	mov    %rsi,%rbx
    b4fc:	48 29 d3             	sub    %rdx,%rbx
    b4ff:	bd 00 00 00 00       	mov    $0x0,%ebp
    b504:	49 0f 47 ee          	cmova  %r14,%rbp
    b508:	48 85 ed             	test   %rbp,%rbp
    b50b:	49 0f 44 eb          	cmove  %r11,%rbp
    b50f:	8a 4d 00             	mov    0x0(%rbp),%cl
    b512:	80 e1 c0             	and    $0xc0,%cl
    b515:	80 f9 80             	cmp    $0x80,%cl
    b518:	0f 85 b9 01 00 00    	jne    b6d7 <_ZN96_$LT$core..str..lossy..Utf8LossyChunksIter$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hf04031f9d61ea481E+0x2d7>
    b51e:	48 83 c0 02          	add    $0x2,%rax
    b522:	e9 19 ff ff ff       	jmpq   b440 <_ZN96_$LT$core..str..lossy..Utf8LossyChunksIter$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hf04031f9d61ea481E+0x40>
    b527:	84 c9                	test   %cl,%cl
    b529:	0f 89 98 01 00 00    	jns    b6c7 <_ZN96_$LT$core..str..lossy..Utf8LossyChunksIter$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hf04031f9d61ea481E+0x2c7>
    b52f:	80 f9 90             	cmp    $0x90,%cl
    b532:	72 38                	jb     b56c <_ZN96_$LT$core..str..lossy..Utf8LossyChunksIter$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hf04031f9d61ea481E+0x16c>
    b534:	e9 8e 01 00 00       	jmpq   b6c7 <_ZN96_$LT$core..str..lossy..Utf8LossyChunksIter$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hf04031f9d61ea481E+0x2c7>
    b539:	84 c9                	test   %cl,%cl
    b53b:	0f 89 7f 01 00 00    	jns    b6c0 <_ZN96_$LT$core..str..lossy..Utf8LossyChunksIter$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hf04031f9d61ea481E+0x2c0>
    b541:	80 f9 a0             	cmp    $0xa0,%cl
    b544:	0f 82 b7 00 00 00    	jb     b601 <_ZN96_$LT$core..str..lossy..Utf8LossyChunksIter$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hf04031f9d61ea481E+0x201>
    b54a:	e9 71 01 00 00       	jmpq   b6c0 <_ZN96_$LT$core..str..lossy..Utf8LossyChunksIter$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hf04031f9d61ea481E+0x2c0>
    b54f:	80 f9 bf             	cmp    $0xbf,%cl
    b552:	0f 87 6f 01 00 00    	ja     b6c7 <_ZN96_$LT$core..str..lossy..Utf8LossyChunksIter$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hf04031f9d61ea481E+0x2c7>
    b558:	80 c3 0f             	add    $0xf,%bl
    b55b:	80 fb 02             	cmp    $0x2,%bl
    b55e:	0f 87 63 01 00 00    	ja     b6c7 <_ZN96_$LT$core..str..lossy..Utf8LossyChunksIter$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hf04031f9d61ea481E+0x2c7>
    b564:	84 c9                	test   %cl,%cl
    b566:	0f 89 5b 01 00 00    	jns    b6c7 <_ZN96_$LT$core..str..lossy..Utf8LossyChunksIter$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hf04031f9d61ea481E+0x2c7>
    b56c:	48 8d 50 02          	lea    0x2(%rax),%rdx
    b570:	48 39 d6             	cmp    %rdx,%rsi
    b573:	49 8d 4c 04 02       	lea    0x2(%r12,%rax,1),%rcx
    b578:	bb 00 00 00 00       	mov    $0x0,%ebx
    b57d:	48 0f 47 d9          	cmova  %rcx,%rbx
    b581:	48 85 db             	test   %rbx,%rbx
    b584:	49 0f 44 db          	cmove  %r11,%rbx
    b588:	8a 1b                	mov    (%rbx),%bl
    b58a:	80 e3 c0             	and    $0xc0,%bl
    b58d:	80 fb 80             	cmp    $0x80,%bl
    b590:	0f 85 ef 00 00 00    	jne    b685 <_ZN96_$LT$core..str..lossy..Utf8LossyChunksIter$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hf04031f9d61ea481E+0x285>
    b596:	48 8d 50 03          	lea    0x3(%rax),%rdx
    b59a:	48 39 d6             	cmp    %rdx,%rsi
    b59d:	49 8d 4c 04 03       	lea    0x3(%r12,%rax,1),%rcx
    b5a2:	bb 00 00 00 00       	mov    $0x0,%ebx
    b5a7:	48 0f 47 d9          	cmova  %rcx,%rbx
    b5ab:	48 85 db             	test   %rbx,%rbx
    b5ae:	49 0f 44 db          	cmove  %r11,%rbx
    b5b2:	8a 1b                	mov    (%rbx),%bl
    b5b4:	80 e3 c0             	and    $0xc0,%bl
    b5b7:	80 fb 80             	cmp    $0x80,%bl
    b5ba:	0f 85 41 01 00 00    	jne    b701 <_ZN96_$LT$core..str..lossy..Utf8LossyChunksIter$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hf04031f9d61ea481E+0x301>
    b5c0:	48 83 c0 04          	add    $0x4,%rax
    b5c4:	e9 77 fe ff ff       	jmpq   b440 <_ZN96_$LT$core..str..lossy..Utf8LossyChunksIter$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hf04031f9d61ea481E+0x40>
    b5c9:	8d 6b 1f             	lea    0x1f(%rbx),%ebp
    b5cc:	40 80 fd 0b          	cmp    $0xb,%bpl
    b5d0:	77 12                	ja     b5e4 <_ZN96_$LT$core..str..lossy..Utf8LossyChunksIter$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hf04031f9d61ea481E+0x1e4>
    b5d2:	84 c9                	test   %cl,%cl
    b5d4:	0f 89 e6 00 00 00    	jns    b6c0 <_ZN96_$LT$core..str..lossy..Utf8LossyChunksIter$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hf04031f9d61ea481E+0x2c0>
    b5da:	80 f9 c0             	cmp    $0xc0,%cl
    b5dd:	72 22                	jb     b601 <_ZN96_$LT$core..str..lossy..Utf8LossyChunksIter$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hf04031f9d61ea481E+0x201>
    b5df:	e9 dc 00 00 00       	jmpq   b6c0 <_ZN96_$LT$core..str..lossy..Utf8LossyChunksIter$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hf04031f9d61ea481E+0x2c0>
    b5e4:	80 f9 bf             	cmp    $0xbf,%cl
    b5e7:	0f 87 d3 00 00 00    	ja     b6c0 <_ZN96_$LT$core..str..lossy..Utf8LossyChunksIter$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hf04031f9d61ea481E+0x2c0>
    b5ed:	80 e3 fe             	and    $0xfe,%bl
    b5f0:	80 fb ee             	cmp    $0xee,%bl
    b5f3:	0f 85 c7 00 00 00    	jne    b6c0 <_ZN96_$LT$core..str..lossy..Utf8LossyChunksIter$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hf04031f9d61ea481E+0x2c0>
    b5f9:	84 c9                	test   %cl,%cl
    b5fb:	0f 89 bf 00 00 00    	jns    b6c0 <_ZN96_$LT$core..str..lossy..Utf8LossyChunksIter$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hf04031f9d61ea481E+0x2c0>
    b601:	48 8d 50 02          	lea    0x2(%rax),%rdx
    b605:	48 39 d6             	cmp    %rdx,%rsi
    b608:	49 8d 4c 04 02       	lea    0x2(%r12,%rax,1),%rcx
    b60d:	bb 00 00 00 00       	mov    $0x0,%ebx
    b612:	48 0f 47 d9          	cmova  %rcx,%rbx
    b616:	48 85 db             	test   %rbx,%rbx
    b619:	49 0f 44 db          	cmove  %r11,%rbx
    b61d:	8a 1b                	mov    (%rbx),%bl
    b61f:	80 e3 c0             	and    $0xc0,%bl
    b622:	80 fb 80             	cmp    $0x80,%bl
    b625:	75 5e                	jne    b685 <_ZN96_$LT$core..str..lossy..Utf8LossyChunksIter$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hf04031f9d61ea481E+0x285>
    b627:	48 83 c0 03          	add    $0x3,%rax
    b62b:	e9 10 fe ff ff       	jmpq   b440 <_ZN96_$LT$core..str..lossy..Utf8LossyChunksIter$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hf04031f9d61ea481E+0x40>
    b630:	48 c7 07 00 00 00 00 	movq   $0x0,(%rdi)
    b637:	e9 bc 00 00 00       	jmpq   b6f8 <_ZN96_$LT$core..str..lossy..Utf8LossyChunksIter$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hf04031f9d61ea481E+0x2f8>
    b63c:	48 8d 05 f5 1d 03 00 	lea    0x31df5(%rip),%rax        # 3d438 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0xad8>
    b643:	49 89 00             	mov    %rax,(%r8)
    b646:	49 c7 40 08 00 00 00 	movq   $0x0,0x8(%r8)
    b64d:	00 
    b64e:	4c 89 27             	mov    %r12,(%rdi)
    b651:	48 89 77 08          	mov    %rsi,0x8(%rdi)
    b655:	48 89 47 10          	mov    %rax,0x10(%rdi)
    b659:	48 c7 47 18 00 00 00 	movq   $0x0,0x18(%rdi)
    b660:	00 
    b661:	e9 92 00 00 00       	jmpq   b6f8 <_ZN96_$LT$core..str..lossy..Utf8LossyChunksIter$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hf04031f9d61ea481E+0x2f8>
    b666:	48 39 c6             	cmp    %rax,%rsi
    b669:	0f 82 c1 00 00 00    	jb     b730 <_ZN96_$LT$core..str..lossy..Utf8LossyChunksIter$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hf04031f9d61ea481E+0x330>
    b66f:	0f 86 c5 00 00 00    	jbe    b73a <_ZN96_$LT$core..str..lossy..Utf8LossyChunksIter$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hf04031f9d61ea481E+0x33a>
    b675:	49 8d 0c 14          	lea    (%r12,%rdx,1),%rcx
    b679:	48 29 d6             	sub    %rdx,%rsi
    b67c:	49 89 08             	mov    %rcx,(%r8)
    b67f:	49 89 70 08          	mov    %rsi,0x8(%r8)
    b683:	eb 60                	jmp    b6e5 <_ZN96_$LT$core..str..lossy..Utf8LossyChunksIter$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hf04031f9d61ea481E+0x2e5>
    b685:	48 39 c6             	cmp    %rax,%rsi
    b688:	0f 82 a2 00 00 00    	jb     b730 <_ZN96_$LT$core..str..lossy..Utf8LossyChunksIter$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hf04031f9d61ea481E+0x330>
    b68e:	48 83 f8 fd          	cmp    $0xfffffffffffffffd,%rax
    b692:	0f 87 ac 00 00 00    	ja     b744 <_ZN96_$LT$core..str..lossy..Utf8LossyChunksIter$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hf04031f9d61ea481E+0x344>
    b698:	48 89 f3             	mov    %rsi,%rbx
    b69b:	48 29 d3             	sub    %rdx,%rbx
    b69e:	0f 82 96 00 00 00    	jb     b73a <_ZN96_$LT$core..str..lossy..Utf8LossyChunksIter$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hf04031f9d61ea481E+0x33a>
    b6a4:	49 89 08             	mov    %rcx,(%r8)
    b6a7:	49 89 58 08          	mov    %rbx,0x8(%r8)
    b6ab:	4c 89 27             	mov    %r12,(%rdi)
    b6ae:	48 89 47 08          	mov    %rax,0x8(%rdi)
    b6b2:	4c 89 4f 10          	mov    %r9,0x10(%rdi)
    b6b6:	48 c7 47 18 02 00 00 	movq   $0x2,0x18(%rdi)
    b6bd:	00 
    b6be:	eb 38                	jmp    b6f8 <_ZN96_$LT$core..str..lossy..Utf8LossyChunksIter$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hf04031f9d61ea481E+0x2f8>
    b6c0:	48 39 c6             	cmp    %rax,%rsi
    b6c3:	73 07                	jae    b6cc <_ZN96_$LT$core..str..lossy..Utf8LossyChunksIter$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hf04031f9d61ea481E+0x2cc>
    b6c5:	eb 69                	jmp    b730 <_ZN96_$LT$core..str..lossy..Utf8LossyChunksIter$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hf04031f9d61ea481E+0x330>
    b6c7:	48 39 c6             	cmp    %rax,%rsi
    b6ca:	72 64                	jb     b730 <_ZN96_$LT$core..str..lossy..Utf8LossyChunksIter$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hf04031f9d61ea481E+0x330>
    b6cc:	76 6c                	jbe    b73a <_ZN96_$LT$core..str..lossy..Utf8LossyChunksIter$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hf04031f9d61ea481E+0x33a>
    b6ce:	4d 89 30             	mov    %r14,(%r8)
    b6d1:	4d 89 78 08          	mov    %r15,0x8(%r8)
    b6d5:	eb 0e                	jmp    b6e5 <_ZN96_$LT$core..str..lossy..Utf8LossyChunksIter$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hf04031f9d61ea481E+0x2e5>
    b6d7:	48 39 c6             	cmp    %rax,%rsi
    b6da:	72 54                	jb     b730 <_ZN96_$LT$core..str..lossy..Utf8LossyChunksIter$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hf04031f9d61ea481E+0x330>
    b6dc:	76 5c                	jbe    b73a <_ZN96_$LT$core..str..lossy..Utf8LossyChunksIter$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hf04031f9d61ea481E+0x33a>
    b6de:	4d 89 30             	mov    %r14,(%r8)
    b6e1:	49 89 58 08          	mov    %rbx,0x8(%r8)
    b6e5:	4c 89 27             	mov    %r12,(%rdi)
    b6e8:	48 89 47 08          	mov    %rax,0x8(%rdi)
    b6ec:	4c 89 4f 10          	mov    %r9,0x10(%rdi)
    b6f0:	48 c7 47 18 01 00 00 	movq   $0x1,0x18(%rdi)
    b6f7:	00 
    b6f8:	5b                   	pop    %rbx
    b6f9:	41 5c                	pop    %r12
    b6fb:	41 5e                	pop    %r14
    b6fd:	41 5f                	pop    %r15
    b6ff:	5d                   	pop    %rbp
    b700:	c3                   	retq   
    b701:	48 39 c6             	cmp    %rax,%rsi
    b704:	72 2a                	jb     b730 <_ZN96_$LT$core..str..lossy..Utf8LossyChunksIter$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hf04031f9d61ea481E+0x330>
    b706:	48 83 f8 fc          	cmp    $0xfffffffffffffffc,%rax
    b70a:	77 38                	ja     b744 <_ZN96_$LT$core..str..lossy..Utf8LossyChunksIter$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hf04031f9d61ea481E+0x344>
    b70c:	48 89 f3             	mov    %rsi,%rbx
    b70f:	48 29 d3             	sub    %rdx,%rbx
    b712:	72 26                	jb     b73a <_ZN96_$LT$core..str..lossy..Utf8LossyChunksIter$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hf04031f9d61ea481E+0x33a>
    b714:	49 89 08             	mov    %rcx,(%r8)
    b717:	49 89 58 08          	mov    %rbx,0x8(%r8)
    b71b:	4c 89 27             	mov    %r12,(%rdi)
    b71e:	48 89 47 08          	mov    %rax,0x8(%rdi)
    b722:	4c 89 4f 10          	mov    %r9,0x10(%rdi)
    b726:	48 c7 47 18 03 00 00 	movq   $0x3,0x18(%rdi)
    b72d:	00 
    b72e:	eb c8                	jmp    b6f8 <_ZN96_$LT$core..str..lossy..Utf8LossyChunksIter$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hf04031f9d61ea481E+0x2f8>
    b730:	48 89 c7             	mov    %rax,%rdi
    b733:	e8 98 c4 ff ff       	callq  7bd0 <_ZN4core5slice20slice_index_len_fail17h52736412c1ce1871E>
    b738:	0f 0b                	ud2    
    b73a:	48 89 d7             	mov    %rdx,%rdi
    b73d:	e8 8e c4 ff ff       	callq  7bd0 <_ZN4core5slice20slice_index_len_fail17h52736412c1ce1871E>
    b742:	0f 0b                	ud2    
    b744:	48 89 c7             	mov    %rax,%rdi
    b747:	48 89 d6             	mov    %rdx,%rsi
    b74a:	e8 01 c5 ff ff       	callq  7c50 <_ZN4core5slice22slice_index_order_fail17h7bcf2f94ba9e06deE>
    b74f:	0f 0b                	ud2    
    b751:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    b758:	00 00 00 
    b75b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000b760 <_ZN4core3str9from_utf817ha5f1d279f7594d61E>:
    b760:	55                   	push   %rbp
    b761:	41 56                	push   %r14
    b763:	53                   	push   %rbx
    b764:	48 83 ec 0c          	sub    $0xc,%rsp
    b768:	48 8d 42 f1          	lea    -0xf(%rdx),%rax
    b76c:	45 31 f6             	xor    %r14d,%r14d
    b76f:	48 83 fa 0f          	cmp    $0xf,%rdx
    b773:	4c 0f 47 f0          	cmova  %rax,%r14
    b777:	89 f0                	mov    %esi,%eax
    b779:	83 e0 07             	and    $0x7,%eax
    b77c:	49 89 f1             	mov    %rsi,%r9
    b77f:	49 f7 d9             	neg    %r9
    b782:	48 85 c0             	test   %rax,%rax
    b785:	4c 0f 44 c8          	cmove  %rax,%r9
    b789:	48 85 d2             	test   %rdx,%rdx
    b78c:	0f 84 d5 01 00 00    	je     b967 <_ZN4core3str9from_utf817ha5f1d279f7594d61E+0x207>
    b792:	31 c0                	xor    %eax,%eax
    b794:	4c 8d 15 bd fd 02 00 	lea    0x2fdbd(%rip),%r10        # 3b558 <_ZN4core3str15UTF8_CHAR_WIDTH17h639c7c3d8ce7e983E>
    b79b:	49 bb 80 80 80 80 80 	movabs $0x8080808080808080,%r11
    b7a2:	80 80 80 
    b7a5:	0f b6 1c 06          	movzbl (%rsi,%rax,1),%ebx
    b7a9:	84 db                	test   %bl,%bl
    b7ab:	79 1b                	jns    b7c8 <_ZN4core3str9from_utf817ha5f1d279f7594d61E+0x68>
    b7ad:	eb 71                	jmp    b820 <_ZN4core3str9from_utf817ha5f1d279f7594d61E+0xc0>
    b7af:	90                   	nop
    b7b0:	48 83 c5 01          	add    $0x1,%rbp
    b7b4:	48 89 e8             	mov    %rbp,%rax
    b7b7:	48 39 d0             	cmp    %rdx,%rax
    b7ba:	0f 83 a7 01 00 00    	jae    b967 <_ZN4core3str9from_utf817ha5f1d279f7594d61E+0x207>
    b7c0:	0f b6 1c 06          	movzbl (%rsi,%rax,1),%ebx
    b7c4:	84 db                	test   %bl,%bl
    b7c6:	78 58                	js     b820 <_ZN4core3str9from_utf817ha5f1d279f7594d61E+0xc0>
    b7c8:	44 89 c9             	mov    %r9d,%ecx
    b7cb:	29 c1                	sub    %eax,%ecx
    b7cd:	f6 c1 07             	test   $0x7,%cl
    b7d0:	74 12                	je     b7e4 <_ZN4core3str9from_utf817ha5f1d279f7594d61E+0x84>
    b7d2:	48 83 c0 01          	add    $0x1,%rax
    b7d6:	48 39 d0             	cmp    %rdx,%rax
    b7d9:	72 e5                	jb     b7c0 <_ZN4core3str9from_utf817ha5f1d279f7594d61E+0x60>
    b7db:	e9 87 01 00 00       	jmpq   b967 <_ZN4core3str9from_utf817ha5f1d279f7594d61E+0x207>
    b7e0:	48 83 c0 10          	add    $0x10,%rax
    b7e4:	4c 39 f0             	cmp    %r14,%rax
    b7e7:	73 0e                	jae    b7f7 <_ZN4core3str9from_utf817ha5f1d279f7594d61E+0x97>
    b7e9:	48 8b 4c 06 08       	mov    0x8(%rsi,%rax,1),%rcx
    b7ee:	48 0b 0c 06          	or     (%rsi,%rax,1),%rcx
    b7f2:	4c 85 d9             	test   %r11,%rcx
    b7f5:	74 e9                	je     b7e0 <_ZN4core3str9from_utf817ha5f1d279f7594d61E+0x80>
    b7f7:	48 39 d0             	cmp    %rdx,%rax
    b7fa:	73 bb                	jae    b7b7 <_ZN4core3str9from_utf817ha5f1d279f7594d61E+0x57>
    b7fc:	0f 1f 40 00          	nopl   0x0(%rax)
    b800:	80 3c 06 00          	cmpb   $0x0,(%rsi,%rax,1)
    b804:	78 b1                	js     b7b7 <_ZN4core3str9from_utf817ha5f1d279f7594d61E+0x57>
    b806:	48 83 c0 01          	add    $0x1,%rax
    b80a:	48 39 c2             	cmp    %rax,%rdx
    b80d:	75 f1                	jne    b800 <_ZN4core3str9from_utf817ha5f1d279f7594d61E+0xa0>
    b80f:	e9 53 01 00 00       	jmpq   b967 <_ZN4core3str9from_utf817ha5f1d279f7594d61E+0x207>
    b814:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    b81b:	00 00 00 
    b81e:	66 90                	xchg   %ax,%ax
    b820:	42 8a 0c 13          	mov    (%rbx,%r10,1),%cl
    b824:	41 b0 01             	mov    $0x1,%r8b
    b827:	80 f9 04             	cmp    $0x4,%cl
    b82a:	74 31                	je     b85d <_ZN4core3str9from_utf817ha5f1d279f7594d61E+0xfd>
    b82c:	80 f9 03             	cmp    $0x3,%cl
    b82f:	74 56                	je     b887 <_ZN4core3str9from_utf817ha5f1d279f7594d61E+0x127>
    b831:	80 f9 02             	cmp    $0x2,%cl
    b834:	0f 85 29 01 00 00    	jne    b963 <_ZN4core3str9from_utf817ha5f1d279f7594d61E+0x203>
    b83a:	48 8d 68 01          	lea    0x1(%rax),%rbp
    b83e:	48 39 d5             	cmp    %rdx,%rbp
    b841:	0f 83 2c 01 00 00    	jae    b973 <_ZN4core3str9from_utf817ha5f1d279f7594d61E+0x213>
    b847:	8a 0c 2e             	mov    (%rsi,%rbp,1),%cl
    b84a:	80 e1 c0             	and    $0xc0,%cl
    b84d:	b3 01                	mov    $0x1,%bl
    b84f:	80 f9 80             	cmp    $0x80,%cl
    b852:	0f 84 58 ff ff ff    	je     b7b0 <_ZN4core3str9from_utf817ha5f1d279f7594d61E+0x50>
    b858:	e9 21 01 00 00       	jmpq   b97e <_ZN4core3str9from_utf817ha5f1d279f7594d61E+0x21e>
    b85d:	48 8d 48 01          	lea    0x1(%rax),%rcx
    b861:	48 39 d1             	cmp    %rdx,%rcx
    b864:	0f 83 09 01 00 00    	jae    b973 <_ZN4core3str9from_utf817ha5f1d279f7594d61E+0x213>
    b86a:	40 8a 2c 0e          	mov    (%rsi,%rcx,1),%bpl
    b86e:	80 fb f4             	cmp    $0xf4,%bl
    b871:	74 42                	je     b8b5 <_ZN4core3str9from_utf817ha5f1d279f7594d61E+0x155>
    b873:	80 fb f0             	cmp    $0xf0,%bl
    b876:	75 51                	jne    b8c9 <_ZN4core3str9from_utf817ha5f1d279f7594d61E+0x169>
    b878:	40 80 c5 70          	add    $0x70,%bpl
    b87c:	40 80 fd 30          	cmp    $0x30,%bpl
    b880:	72 62                	jb     b8e4 <_ZN4core3str9from_utf817ha5f1d279f7594d61E+0x184>
    b882:	e9 dc 00 00 00       	jmpq   b963 <_ZN4core3str9from_utf817ha5f1d279f7594d61E+0x203>
    b887:	48 8d 48 01          	lea    0x1(%rax),%rcx
    b88b:	48 39 d1             	cmp    %rdx,%rcx
    b88e:	0f 83 df 00 00 00    	jae    b973 <_ZN4core3str9from_utf817ha5f1d279f7594d61E+0x213>
    b894:	40 8a 2c 0e          	mov    (%rsi,%rcx,1),%bpl
    b898:	80 fb ed             	cmp    $0xed,%bl
    b89b:	74 79                	je     b916 <_ZN4core3str9from_utf817ha5f1d279f7594d61E+0x1b6>
    b89d:	80 fb e0             	cmp    $0xe0,%bl
    b8a0:	0f 85 95 00 00 00    	jne    b93b <_ZN4core3str9from_utf817ha5f1d279f7594d61E+0x1db>
    b8a6:	40 80 e5 e0          	and    $0xe0,%bpl
    b8aa:	40 80 fd a0          	cmp    $0xa0,%bpl
    b8ae:	74 71                	je     b921 <_ZN4core3str9from_utf817ha5f1d279f7594d61E+0x1c1>
    b8b0:	e9 ae 00 00 00       	jmpq   b963 <_ZN4core3str9from_utf817ha5f1d279f7594d61E+0x203>
    b8b5:	40 84 ed             	test   %bpl,%bpl
    b8b8:	0f 89 a5 00 00 00    	jns    b963 <_ZN4core3str9from_utf817ha5f1d279f7594d61E+0x203>
    b8be:	40 80 fd 90          	cmp    $0x90,%bpl
    b8c2:	72 20                	jb     b8e4 <_ZN4core3str9from_utf817ha5f1d279f7594d61E+0x184>
    b8c4:	e9 9a 00 00 00       	jmpq   b963 <_ZN4core3str9from_utf817ha5f1d279f7594d61E+0x203>
    b8c9:	40 80 fd bf          	cmp    $0xbf,%bpl
    b8cd:	0f 87 90 00 00 00    	ja     b963 <_ZN4core3str9from_utf817ha5f1d279f7594d61E+0x203>
    b8d3:	80 c3 0f             	add    $0xf,%bl
    b8d6:	80 fb 02             	cmp    $0x2,%bl
    b8d9:	0f 87 84 00 00 00    	ja     b963 <_ZN4core3str9from_utf817ha5f1d279f7594d61E+0x203>
    b8df:	40 84 ed             	test   %bpl,%bpl
    b8e2:	79 7f                	jns    b963 <_ZN4core3str9from_utf817ha5f1d279f7594d61E+0x203>
    b8e4:	48 8d 48 02          	lea    0x2(%rax),%rcx
    b8e8:	48 39 d1             	cmp    %rdx,%rcx
    b8eb:	0f 83 82 00 00 00    	jae    b973 <_ZN4core3str9from_utf817ha5f1d279f7594d61E+0x213>
    b8f1:	8a 0c 0e             	mov    (%rsi,%rcx,1),%cl
    b8f4:	80 e1 c0             	and    $0xc0,%cl
    b8f7:	80 f9 80             	cmp    $0x80,%cl
    b8fa:	75 7c                	jne    b978 <_ZN4core3str9from_utf817ha5f1d279f7594d61E+0x218>
    b8fc:	48 8d 68 03          	lea    0x3(%rax),%rbp
    b900:	48 39 d5             	cmp    %rdx,%rbp
    b903:	73 6e                	jae    b973 <_ZN4core3str9from_utf817ha5f1d279f7594d61E+0x213>
    b905:	8a 0c 2e             	mov    (%rsi,%rbp,1),%cl
    b908:	80 e1 c0             	and    $0xc0,%cl
    b90b:	80 f9 80             	cmp    $0x80,%cl
    b90e:	0f 84 9c fe ff ff    	je     b7b0 <_ZN4core3str9from_utf817ha5f1d279f7594d61E+0x50>
    b914:	eb 66                	jmp    b97c <_ZN4core3str9from_utf817ha5f1d279f7594d61E+0x21c>
    b916:	40 84 ed             	test   %bpl,%bpl
    b919:	79 48                	jns    b963 <_ZN4core3str9from_utf817ha5f1d279f7594d61E+0x203>
    b91b:	40 80 fd a0          	cmp    $0xa0,%bpl
    b91f:	73 42                	jae    b963 <_ZN4core3str9from_utf817ha5f1d279f7594d61E+0x203>
    b921:	48 8d 68 02          	lea    0x2(%rax),%rbp
    b925:	48 39 d5             	cmp    %rdx,%rbp
    b928:	73 49                	jae    b973 <_ZN4core3str9from_utf817ha5f1d279f7594d61E+0x213>
    b92a:	8a 0c 2e             	mov    (%rsi,%rbp,1),%cl
    b92d:	80 e1 c0             	and    $0xc0,%cl
    b930:	80 f9 80             	cmp    $0x80,%cl
    b933:	0f 84 77 fe ff ff    	je     b7b0 <_ZN4core3str9from_utf817ha5f1d279f7594d61E+0x50>
    b939:	eb 3d                	jmp    b978 <_ZN4core3str9from_utf817ha5f1d279f7594d61E+0x218>
    b93b:	8d 4b 1f             	lea    0x1f(%rbx),%ecx
    b93e:	80 f9 0b             	cmp    $0xb,%cl
    b941:	77 0d                	ja     b950 <_ZN4core3str9from_utf817ha5f1d279f7594d61E+0x1f0>
    b943:	40 84 ed             	test   %bpl,%bpl
    b946:	79 1b                	jns    b963 <_ZN4core3str9from_utf817ha5f1d279f7594d61E+0x203>
    b948:	40 80 fd c0          	cmp    $0xc0,%bpl
    b94c:	72 d3                	jb     b921 <_ZN4core3str9from_utf817ha5f1d279f7594d61E+0x1c1>
    b94e:	eb 13                	jmp    b963 <_ZN4core3str9from_utf817ha5f1d279f7594d61E+0x203>
    b950:	40 80 fd bf          	cmp    $0xbf,%bpl
    b954:	77 0d                	ja     b963 <_ZN4core3str9from_utf817ha5f1d279f7594d61E+0x203>
    b956:	80 e3 fe             	and    $0xfe,%bl
    b959:	80 fb ee             	cmp    $0xee,%bl
    b95c:	75 05                	jne    b963 <_ZN4core3str9from_utf817ha5f1d279f7594d61E+0x203>
    b95e:	40 84 ed             	test   %bpl,%bpl
    b961:	78 be                	js     b921 <_ZN4core3str9from_utf817ha5f1d279f7594d61E+0x1c1>
    b963:	b3 01                	mov    $0x1,%bl
    b965:	eb 17                	jmp    b97e <_ZN4core3str9from_utf817ha5f1d279f7594d61E+0x21e>
    b967:	48 89 77 08          	mov    %rsi,0x8(%rdi)
    b96b:	48 89 57 10          	mov    %rdx,0x10(%rdi)
    b96f:	31 c0                	xor    %eax,%eax
    b971:	eb 3b                	jmp    b9ae <_ZN4core3str9from_utf817ha5f1d279f7594d61E+0x24e>
    b973:	45 31 c0             	xor    %r8d,%r8d
    b976:	eb 06                	jmp    b97e <_ZN4core3str9from_utf817ha5f1d279f7594d61E+0x21e>
    b978:	b3 02                	mov    $0x2,%bl
    b97a:	eb 02                	jmp    b97e <_ZN4core3str9from_utf817ha5f1d279f7594d61E+0x21e>
    b97c:	b3 03                	mov    $0x3,%bl
    b97e:	0f b7 4c 24 0a       	movzwl 0xa(%rsp),%ecx
    b983:	66 89 4c 24 04       	mov    %cx,0x4(%rsp)
    b988:	8b 4c 24 06          	mov    0x6(%rsp),%ecx
    b98c:	89 0c 24             	mov    %ecx,(%rsp)
    b98f:	48 89 47 08          	mov    %rax,0x8(%rdi)
    b993:	44 88 47 10          	mov    %r8b,0x10(%rdi)
    b997:	88 5f 11             	mov    %bl,0x11(%rdi)
    b99a:	8b 04 24             	mov    (%rsp),%eax
    b99d:	89 47 12             	mov    %eax,0x12(%rdi)
    b9a0:	0f b7 44 24 04       	movzwl 0x4(%rsp),%eax
    b9a5:	66 89 47 16          	mov    %ax,0x16(%rdi)
    b9a9:	b8 01 00 00 00       	mov    $0x1,%eax
    b9ae:	48 89 07             	mov    %rax,(%rdi)
    b9b1:	48 83 c4 0c          	add    $0xc,%rsp
    b9b5:	5b                   	pop    %rbx
    b9b6:	41 5e                	pop    %r14
    b9b8:	5d                   	pop    %rbp
    b9b9:	c3                   	retq   
    b9ba:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000000b9c0 <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hfa2aab2d446ee9a4E>:
    b9c0:	48 81 ec 88 00 00 00 	sub    $0x88,%rsp
    b9c7:	48 8b 07             	mov    (%rdi),%rax
    b9ca:	8b 4e 30             	mov    0x30(%rsi),%ecx
    b9cd:	f6 c1 10             	test   $0x10,%cl
    b9d0:	75 40                	jne    ba12 <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hfa2aab2d446ee9a4E+0x52>
    b9d2:	8a 00                	mov    (%rax),%al
    b9d4:	f6 c1 20             	test   $0x20,%cl
    b9d7:	75 74                	jne    ba4d <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hfa2aab2d446ee9a4E+0x8d>
    b9d9:	0f b6 d0             	movzbl %al,%edx
    b9dc:	80 fa 64             	cmp    $0x64,%dl
    b9df:	0f 82 d8 00 00 00    	jb     babd <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hfa2aab2d446ee9a4E+0xfd>
    b9e5:	8d 0c 92             	lea    (%rdx,%rdx,4),%ecx
    b9e8:	8d 14 ca             	lea    (%rdx,%rcx,8),%edx
    b9eb:	c1 ea 0c             	shr    $0xc,%edx
    b9ee:	6b ca 64             	imul   $0x64,%edx,%ecx
    b9f1:	28 c8                	sub    %cl,%al
    b9f3:	0f b6 c0             	movzbl %al,%eax
    b9f6:	48 8d 0d 6d fc 02 00 	lea    0x2fc6d(%rip),%rcx        # 3b66a <_ZN4core3str15UTF8_CHAR_WIDTH17h639c7c3d8ce7e983E+0x112>
    b9fd:	0f b7 04 41          	movzwl (%rcx,%rax,2),%eax
    ba01:	66 89 44 24 2d       	mov    %ax,0x2d(%rsp)
    ba06:	b9 24 00 00 00       	mov    $0x24,%ecx
    ba0b:	89 d0                	mov    %edx,%eax
    ba0d:	e9 b4 00 00 00       	jmpq   bac6 <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hfa2aab2d446ee9a4E+0x106>
    ba12:	8a 00                	mov    (%rax),%al
    ba14:	4c 8d 84 24 88 00 00 	lea    0x88(%rsp),%r8
    ba1b:	00 
    ba1c:	45 31 c9             	xor    %r9d,%r9d
    ba1f:	90                   	nop
    ba20:	89 c1                	mov    %eax,%ecx
    ba22:	80 e1 0f             	and    $0xf,%cl
    ba25:	c0 e8 04             	shr    $0x4,%al
    ba28:	8d 51 30             	lea    0x30(%rcx),%edx
    ba2b:	8d 79 57             	lea    0x57(%rcx),%edi
    ba2e:	80 f9 0a             	cmp    $0xa,%cl
    ba31:	0f b6 ca             	movzbl %dl,%ecx
    ba34:	40 0f b6 d7          	movzbl %dil,%edx
    ba38:	0f 42 d1             	cmovb  %ecx,%edx
    ba3b:	41 88 50 ff          	mov    %dl,-0x1(%r8)
    ba3f:	49 83 c0 ff          	add    $0xffffffffffffffff,%r8
    ba43:	49 83 c1 01          	add    $0x1,%r9
    ba47:	84 c0                	test   %al,%al
    ba49:	75 d5                	jne    ba20 <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hfa2aab2d446ee9a4E+0x60>
    ba4b:	eb 3e                	jmp    ba8b <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hfa2aab2d446ee9a4E+0xcb>
    ba4d:	4c 8d 84 24 88 00 00 	lea    0x88(%rsp),%r8
    ba54:	00 
    ba55:	45 31 c9             	xor    %r9d,%r9d
    ba58:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    ba5f:	00 
    ba60:	89 c1                	mov    %eax,%ecx
    ba62:	80 e1 0f             	and    $0xf,%cl
    ba65:	c0 e8 04             	shr    $0x4,%al
    ba68:	8d 51 30             	lea    0x30(%rcx),%edx
    ba6b:	8d 79 37             	lea    0x37(%rcx),%edi
    ba6e:	80 f9 0a             	cmp    $0xa,%cl
    ba71:	0f b6 ca             	movzbl %dl,%ecx
    ba74:	40 0f b6 d7          	movzbl %dil,%edx
    ba78:	0f 42 d1             	cmovb  %ecx,%edx
    ba7b:	41 88 50 ff          	mov    %dl,-0x1(%r8)
    ba7f:	49 83 c0 ff          	add    $0xffffffffffffffff,%r8
    ba83:	49 83 c1 01          	add    $0x1,%r9
    ba87:	84 c0                	test   %al,%al
    ba89:	75 d5                	jne    ba60 <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hfa2aab2d446ee9a4E+0xa0>
    ba8b:	bf 80 00 00 00       	mov    $0x80,%edi
    ba90:	4c 29 cf             	sub    %r9,%rdi
    ba93:	48 81 ff 81 00 00 00 	cmp    $0x81,%rdi
    ba9a:	73 76                	jae    bb12 <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hfa2aab2d446ee9a4E+0x152>
    ba9c:	48 8d 15 53 17 03 00 	lea    0x31753(%rip),%rdx        # 3d1f6 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x896>
    baa3:	b9 02 00 00 00       	mov    $0x2,%ecx
    baa8:	48 89 f7             	mov    %rsi,%rdi
    baab:	be 01 00 00 00       	mov    $0x1,%esi
    bab0:	e8 3b bb ff ff       	callq  75f0 <_ZN4core3fmt9Formatter12pad_integral17hc55c32e78eb96054E>
    bab5:	48 81 c4 88 00 00 00 	add    $0x88,%rsp
    babc:	c3                   	retq   
    babd:	b9 26 00 00 00       	mov    $0x26,%ecx
    bac2:	3c 0a                	cmp    $0xa,%al
    bac4:	73 08                	jae    bace <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hfa2aab2d446ee9a4E+0x10e>
    bac6:	04 30                	add    $0x30,%al
    bac8:	88 44 0c 08          	mov    %al,0x8(%rsp,%rcx,1)
    bacc:	eb 15                	jmp    bae3 <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hfa2aab2d446ee9a4E+0x123>
    bace:	48 8d 05 95 fb 02 00 	lea    0x2fb95(%rip),%rax        # 3b66a <_ZN4core3str15UTF8_CHAR_WIDTH17h639c7c3d8ce7e983E+0x112>
    bad5:	0f b7 04 50          	movzwl (%rax,%rdx,2),%eax
    bad9:	66 89 44 24 2d       	mov    %ax,0x2d(%rsp)
    bade:	b9 25 00 00 00       	mov    $0x25,%ecx
    bae3:	4c 8d 04 0c          	lea    (%rsp,%rcx,1),%r8
    bae7:	49 83 c0 08          	add    $0x8,%r8
    baeb:	41 b9 27 00 00 00    	mov    $0x27,%r9d
    baf1:	49 29 c9             	sub    %rcx,%r9
    baf4:	48 8d 15 3d 19 03 00 	lea    0x3193d(%rip),%rdx        # 3d438 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0xad8>
    bafb:	48 89 f7             	mov    %rsi,%rdi
    bafe:	be 01 00 00 00       	mov    $0x1,%esi
    bb03:	31 c9                	xor    %ecx,%ecx
    bb05:	e8 e6 ba ff ff       	callq  75f0 <_ZN4core3fmt9Formatter12pad_integral17hc55c32e78eb96054E>
    bb0a:	48 81 c4 88 00 00 00 	add    $0x88,%rsp
    bb11:	c3                   	retq   
    bb12:	be 80 00 00 00       	mov    $0x80,%esi
    bb17:	e8 34 c1 ff ff       	callq  7c50 <_ZN4core5slice22slice_index_order_fail17h7bcf2f94ba9e06deE>
    bb1c:	0f 0b                	ud2    
    bb1e:	66 90                	xchg   %ax,%ax

000000000000bb20 <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17he281434635d6633cE>:
    bb20:	48 8b 3f             	mov    (%rdi),%rdi
    bb23:	e9 e8 cc ff ff       	jmpq   8810 <_ZN4core3fmt3num52_$LT$impl$u20$core..fmt..Debug$u20$for$u20$usize$GT$3fmt17h68ab9e58238c0956E>
    bb28:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    bb2f:	00 

000000000000bb30 <_ZN61_$LT$core..num..ParseIntError$u20$as$u20$core..fmt..Debug$GT$3fmt17h596ef249bcdc5c11E>:
    bb30:	41 56                	push   %r14
    bb32:	53                   	push   %rbx
    bb33:	48 83 ec 18          	sub    $0x18,%rsp
    bb37:	48 89 f3             	mov    %rsi,%rbx
    bb3a:	49 89 fe             	mov    %rdi,%r14
    bb3d:	48 8b 7e 20          	mov    0x20(%rsi),%rdi
    bb41:	48 8b 46 28          	mov    0x28(%rsi),%rax
    bb45:	48 8d 35 64 0d 03 00 	lea    0x30d64(%rip),%rsi        # 3c8b0 <str.1+0x100>
    bb4c:	ba 0d 00 00 00       	mov    $0xd,%edx
    bb51:	ff 50 18             	callq  *0x18(%rax)
    bb54:	48 89 1c 24          	mov    %rbx,(%rsp)
    bb58:	88 44 24 08          	mov    %al,0x8(%rsp)
    bb5c:	c6 44 24 09 00       	movb   $0x0,0x9(%rsp)
    bb61:	4c 89 74 24 10       	mov    %r14,0x10(%rsp)
    bb66:	48 8d 35 3f 09 03 00 	lea    0x3093f(%rip),%rsi        # 3c4ac <_ZN4core7unicode12unicode_data15grapheme_extend6BITSET17h68ce7f61ccfa32feE+0xa0c>
    bb6d:	4c 8d 05 04 ac 23 00 	lea    0x23ac04(%rip),%r8        # 246778 <__init_array_end+0x768>
    bb74:	48 89 e7             	mov    %rsp,%rdi
    bb77:	48 8d 4c 24 10       	lea    0x10(%rsp),%rcx
    bb7c:	ba 04 00 00 00       	mov    $0x4,%edx
    bb81:	e8 5a e5 ff ff       	callq  a0e0 <_ZN4core3fmt8builders11DebugStruct5field17h12f9df3a6de8af04E>
    bb86:	80 7c 24 09 00       	cmpb   $0x0,0x9(%rsp)
    bb8b:	8a 44 24 08          	mov    0x8(%rsp),%al
    bb8f:	74 3c                	je     bbcd <_ZN61_$LT$core..num..ParseIntError$u20$as$u20$core..fmt..Debug$GT$3fmt17h596ef249bcdc5c11E+0x9d>
    bb91:	84 c0                	test   %al,%al
    bb93:	b0 01                	mov    $0x1,%al
    bb95:	75 32                	jne    bbc9 <_ZN61_$LT$core..num..ParseIntError$u20$as$u20$core..fmt..Debug$GT$3fmt17h596ef249bcdc5c11E+0x99>
    bb97:	48 8b 04 24          	mov    (%rsp),%rax
    bb9b:	f6 40 30 04          	testb  $0x4,0x30(%rax)
    bb9f:	48 8b 78 20          	mov    0x20(%rax),%rdi
    bba3:	48 8b 40 28          	mov    0x28(%rax),%rax
    bba7:	48 8b 40 18          	mov    0x18(%rax),%rax
    bbab:	75 0e                	jne    bbbb <_ZN61_$LT$core..num..ParseIntError$u20$as$u20$core..fmt..Debug$GT$3fmt17h596ef249bcdc5c11E+0x8b>
    bbad:	48 8d 35 9d 0c 03 00 	lea    0x30c9d(%rip),%rsi        # 3c851 <str.1+0xa1>
    bbb4:	ba 02 00 00 00       	mov    $0x2,%edx
    bbb9:	eb 0c                	jmp    bbc7 <_ZN61_$LT$core..num..ParseIntError$u20$as$u20$core..fmt..Debug$GT$3fmt17h596ef249bcdc5c11E+0x97>
    bbbb:	48 8d 35 21 16 03 00 	lea    0x31621(%rip),%rsi        # 3d1e3 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x883>
    bbc2:	ba 01 00 00 00       	mov    $0x1,%edx
    bbc7:	ff d0                	callq  *%rax
    bbc9:	88 44 24 08          	mov    %al,0x8(%rsp)
    bbcd:	48 83 c4 18          	add    $0x18,%rsp
    bbd1:	5b                   	pop    %rbx
    bbd2:	41 5e                	pop    %r14
    bbd4:	c3                   	retq   
    bbd5:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    bbdc:	00 00 00 
    bbdf:	90                   	nop

000000000000bbe0 <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h7e95713bb3b0c577E>:
    bbe0:	48 8b 07             	mov    (%rdi),%rax
    bbe3:	0f b6 00             	movzbl (%rax),%eax
    bbe6:	48 8d 0d 7f ea 02 00 	lea    0x2ea7f(%rip),%rcx        # 3a66c <_ZN4core7unicode12unicode_data2cc19BITSET_INDEX_CHUNKS17h8a1f39cd536e9344E+0x1ac>
    bbed:	48 63 04 81          	movslq (%rcx,%rax,4),%rax
    bbf1:	48 01 c8             	add    %rcx,%rax
    bbf4:	ff e0                	jmpq   *%rax
    bbf6:	48 8b 7e 20          	mov    0x20(%rsi),%rdi
    bbfa:	48 8b 46 28          	mov    0x28(%rsi),%rax
    bbfe:	48 8b 40 18          	mov    0x18(%rax),%rax
    bc02:	48 8d 35 a2 0c 03 00 	lea    0x30ca2(%rip),%rsi        # 3c8ab <str.1+0xfb>
    bc09:	ba 05 00 00 00       	mov    $0x5,%edx
    bc0e:	ff e0                	jmpq   *%rax
    bc10:	48 8b 7e 20          	mov    0x20(%rsi),%rdi
    bc14:	48 8b 46 28          	mov    0x28(%rsi),%rax
    bc18:	48 8b 40 18          	mov    0x18(%rax),%rax
    bc1c:	48 8d 35 9a 0c 03 00 	lea    0x30c9a(%rip),%rsi        # 3c8bd <str.1+0x10d>
    bc23:	ba 0c 00 00 00       	mov    $0xc,%edx
    bc28:	ff e0                	jmpq   *%rax
    bc2a:	48 8b 7e 20          	mov    0x20(%rsi),%rdi
    bc2e:	48 8b 46 28          	mov    0x28(%rsi),%rax
    bc32:	48 8b 40 18          	mov    0x18(%rax),%rax
    bc36:	48 8d 35 cb ea 02 00 	lea    0x2eacb(%rip),%rsi        # 3a708 <_ZN4core7unicode12unicode_data2cc19BITSET_INDEX_CHUNKS17h8a1f39cd536e9344E+0x248>
    bc3d:	ba 08 00 00 00       	mov    $0x8,%edx
    bc42:	ff e0                	jmpq   *%rax
    bc44:	48 8b 7e 20          	mov    0x20(%rsi),%rdi
    bc48:	48 8b 46 28          	mov    0x28(%rsi),%rax
    bc4c:	48 8b 40 18          	mov    0x18(%rax),%rax
    bc50:	48 8d 35 72 0c 03 00 	lea    0x30c72(%rip),%rsi        # 3c8c9 <str.1+0x119>
    bc57:	ba 09 00 00 00       	mov    $0x9,%edx
    bc5c:	ff e0                	jmpq   *%rax
    bc5e:	48 8b 7e 20          	mov    0x20(%rsi),%rdi
    bc62:	48 8b 46 28          	mov    0x28(%rsi),%rax
    bc66:	48 8b 40 18          	mov    0x18(%rax),%rax
    bc6a:	48 8d 35 ef 07 03 00 	lea    0x307ef(%rip),%rsi        # 3c460 <_ZN4core7unicode12unicode_data15grapheme_extend6BITSET17h68ce7f61ccfa32feE+0x9c0>
    bc71:	ba 04 00 00 00       	mov    $0x4,%edx
    bc76:	ff e0                	jmpq   *%rax
    bc78:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    bc7f:	00 

000000000000bc80 <_ZN4core3fmt9Formatter19pad_formatted_parts17h064a65cf2af3d8ffE>:
    bc80:	55                   	push   %rbp
    bc81:	41 57                	push   %r15
    bc83:	41 56                	push   %r14
    bc85:	41 55                	push   %r13
    bc87:	41 54                	push   %r12
    bc89:	53                   	push   %rbx
    bc8a:	48 83 ec 28          	sub    $0x28,%rsp
    bc8e:	48 89 f0             	mov    %rsi,%rax
    bc91:	49 89 fe             	mov    %rdi,%r14
    bc94:	48 83 3f 01          	cmpq   $0x1,(%rdi)
    bc98:	75 47                	jne    bce1 <_ZN4core3fmt9Formatter19pad_formatted_parts17h064a65cf2af3d8ffE+0x61>
    bc9a:	4d 8b 7e 08          	mov    0x8(%r14),%r15
    bc9e:	48 8b 30             	mov    (%rax),%rsi
    bca1:	48 8b 58 08          	mov    0x8(%rax),%rbx
    bca5:	48 8b 68 10          	mov    0x10(%rax),%rbp
    bca9:	4c 8b 68 18          	mov    0x18(%rax),%r13
    bcad:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
    bcb2:	48 89 5c 24 10       	mov    %rbx,0x10(%rsp)
    bcb7:	48 89 6c 24 18       	mov    %rbp,0x18(%rsp)
    bcbc:	4c 89 6c 24 20       	mov    %r13,0x20(%rsp)
    bcc1:	41 8b 46 34          	mov    0x34(%r14),%eax
    bcc5:	89 44 24 04          	mov    %eax,0x4(%rsp)
    bcc9:	45 8a 66 38          	mov    0x38(%r14),%r12b
    bccd:	41 f6 46 30 08       	testb  $0x8,0x30(%r14)
    bcd2:	75 26                	jne    bcfa <_ZN4core3fmt9Formatter19pad_formatted_parts17h064a65cf2af3d8ffE+0x7a>
    bcd4:	44 89 e0             	mov    %r12d,%eax
    bcd7:	4d 85 ed             	test   %r13,%r13
    bcda:	75 6c                	jne    bd48 <_ZN4core3fmt9Formatter19pad_formatted_parts17h064a65cf2af3d8ffE+0xc8>
    bcdc:	e9 f7 00 00 00       	jmpq   bdd8 <_ZN4core3fmt9Formatter19pad_formatted_parts17h064a65cf2af3d8ffE+0x158>
    bce1:	4c 89 f7             	mov    %r14,%rdi
    bce4:	48 89 c6             	mov    %rax,%rsi
    bce7:	48 83 c4 28          	add    $0x28,%rsp
    bceb:	5b                   	pop    %rbx
    bcec:	41 5c                	pop    %r12
    bcee:	41 5d                	pop    %r13
    bcf0:	41 5e                	pop    %r14
    bcf2:	41 5f                	pop    %r15
    bcf4:	5d                   	pop    %rbp
    bcf5:	e9 b6 01 00 00       	jmpq   beb0 <_ZN4core3fmt9Formatter21write_formatted_parts17h6ebc89b84e6795bcE>
    bcfa:	49 8b 7e 20          	mov    0x20(%r14),%rdi
    bcfe:	49 8b 46 28          	mov    0x28(%r14),%rax
    bd02:	48 89 da             	mov    %rbx,%rdx
    bd05:	ff 50 18             	callq  *0x18(%rax)
    bd08:	84 c0                	test   %al,%al
    bd0a:	0f 85 50 01 00 00    	jne    be60 <_ZN4core3fmt9Formatter19pad_formatted_parts17h064a65cf2af3d8ffE+0x1e0>
    bd10:	48 8d 05 21 17 03 00 	lea    0x31721(%rip),%rax        # 3d438 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0xad8>
    bd17:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    bd1c:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
    bd23:	00 00 
    bd25:	31 c0                	xor    %eax,%eax
    bd27:	49 29 df             	sub    %rbx,%r15
    bd2a:	4c 0f 42 f8          	cmovb  %rax,%r15
    bd2e:	41 c7 46 34 30 00 00 	movl   $0x30,0x34(%r14)
    bd35:	00 
    bd36:	41 c6 46 38 01       	movb   $0x1,0x38(%r14)
    bd3b:	b0 01                	mov    $0x1,%al
    bd3d:	31 db                	xor    %ebx,%ebx
    bd3f:	4d 85 ed             	test   %r13,%r13
    bd42:	0f 84 90 00 00 00    	je     bdd8 <_ZN4core3fmt9Formatter19pad_formatted_parts17h064a65cf2af3d8ffE+0x158>
    bd48:	4a 8d 0c 6d 00 00 00 	lea    0x0(,%r13,2),%rcx
    bd4f:	00 
    bd50:	4c 01 e9             	add    %r13,%rcx
    bd53:	48 8d 0c cd 00 00 00 	lea    0x0(,%rcx,8),%rcx
    bd5a:	00 
    bd5b:	48 01 e9             	add    %rbp,%rcx
    bd5e:	eb 0c                	jmp    bd6c <_ZN4core3fmt9Formatter19pad_formatted_parts17h064a65cf2af3d8ffE+0xec>
    bd60:	48 8b 52 08          	mov    0x8(%rdx),%rdx
    bd64:	48 01 d3             	add    %rdx,%rbx
    bd67:	48 39 e9             	cmp    %rbp,%rcx
    bd6a:	74 6c                	je     bdd8 <_ZN4core3fmt9Formatter19pad_formatted_parts17h064a65cf2af3d8ffE+0x158>
    bd6c:	48 89 ea             	mov    %rbp,%rdx
    bd6f:	48 83 c5 18          	add    $0x18,%rbp
    bd73:	0f b7 32             	movzwl (%rdx),%esi
    bd76:	48 85 f6             	test   %rsi,%rsi
    bd79:	74 e5                	je     bd60 <_ZN4core3fmt9Formatter19pad_formatted_parts17h064a65cf2af3d8ffE+0xe0>
    bd7b:	48 83 fe 01          	cmp    $0x1,%rsi
    bd7f:	74 0f                	je     bd90 <_ZN4core3fmt9Formatter19pad_formatted_parts17h064a65cf2af3d8ffE+0x110>
    bd81:	48 8b 52 10          	mov    0x10(%rdx),%rdx
    bd85:	48 01 d3             	add    %rdx,%rbx
    bd88:	48 39 e9             	cmp    %rbp,%rcx
    bd8b:	75 df                	jne    bd6c <_ZN4core3fmt9Formatter19pad_formatted_parts17h064a65cf2af3d8ffE+0xec>
    bd8d:	eb 49                	jmp    bdd8 <_ZN4core3fmt9Formatter19pad_formatted_parts17h064a65cf2af3d8ffE+0x158>
    bd8f:	90                   	nop
    bd90:	0f b7 72 02          	movzwl 0x2(%rdx),%esi
    bd94:	81 fe e8 03 00 00    	cmp    $0x3e8,%esi
    bd9a:	73 22                	jae    bdbe <_ZN4core3fmt9Formatter19pad_formatted_parts17h064a65cf2af3d8ffE+0x13e>
    bd9c:	ba 01 00 00 00       	mov    $0x1,%edx
    bda1:	66 83 fe 0a          	cmp    $0xa,%si
    bda5:	72 bd                	jb     bd64 <_ZN4core3fmt9Formatter19pad_formatted_parts17h064a65cf2af3d8ffE+0xe4>
    bda7:	66 83 fe 64          	cmp    $0x64,%si
    bdab:	ba 03 00 00 00       	mov    $0x3,%edx
    bdb0:	48 83 da 00          	sbb    $0x0,%rdx
    bdb4:	48 01 d3             	add    %rdx,%rbx
    bdb7:	48 39 e9             	cmp    %rbp,%rcx
    bdba:	75 b0                	jne    bd6c <_ZN4core3fmt9Formatter19pad_formatted_parts17h064a65cf2af3d8ffE+0xec>
    bdbc:	eb 1a                	jmp    bdd8 <_ZN4core3fmt9Formatter19pad_formatted_parts17h064a65cf2af3d8ffE+0x158>
    bdbe:	0f b7 d6             	movzwl %si,%edx
    bdc1:	81 fa 10 27 00 00    	cmp    $0x2710,%edx
    bdc7:	ba 05 00 00 00       	mov    $0x5,%edx
    bdcc:	48 83 da 00          	sbb    $0x0,%rdx
    bdd0:	48 01 d3             	add    %rdx,%rbx
    bdd3:	48 39 e9             	cmp    %rbp,%rcx
    bdd6:	75 94                	jne    bd6c <_ZN4core3fmt9Formatter19pad_formatted_parts17h064a65cf2af3d8ffE+0xec>
    bdd8:	49 29 df             	sub    %rbx,%r15
    bddb:	76 20                	jbe    bdfd <_ZN4core3fmt9Formatter19pad_formatted_parts17h064a65cf2af3d8ffE+0x17d>
    bddd:	31 db                	xor    %ebx,%ebx
    bddf:	0f b6 c0             	movzbl %al,%eax
    bde2:	48 8d 0d 97 e8 02 00 	lea    0x2e897(%rip),%rcx        # 3a680 <_ZN4core7unicode12unicode_data2cc19BITSET_INDEX_CHUNKS17h8a1f39cd536e9344E+0x1c0>
    bde9:	48 63 04 81          	movslq (%rcx,%rax,4),%rax
    bded:	48 01 c8             	add    %rcx,%rax
    bdf0:	4d 89 fd             	mov    %r15,%r13
    bdf3:	ff e0                	jmpq   *%rax
    bdf5:	45 31 ed             	xor    %r13d,%r13d
    bdf8:	4c 89 fb             	mov    %r15,%rbx
    bdfb:	eb 2b                	jmp    be28 <_ZN4core3fmt9Formatter19pad_formatted_parts17h064a65cf2af3d8ffE+0x1a8>
    bdfd:	48 8d 74 24 08       	lea    0x8(%rsp),%rsi
    be02:	4c 89 f7             	mov    %r14,%rdi
    be05:	e8 a6 00 00 00       	callq  beb0 <_ZN4core3fmt9Formatter21write_formatted_parts17h6ebc89b84e6795bcE>
    be0a:	8b 4c 24 04          	mov    0x4(%rsp),%ecx
    be0e:	41 89 4e 34          	mov    %ecx,0x34(%r14)
    be12:	45 88 66 38          	mov    %r12b,0x38(%r14)
    be16:	eb 4a                	jmp    be62 <_ZN4core3fmt9Formatter19pad_formatted_parts17h064a65cf2af3d8ffE+0x1e2>
    be18:	4c 89 fb             	mov    %r15,%rbx
    be1b:	48 d1 eb             	shr    %rbx
    be1e:	49 83 c7 01          	add    $0x1,%r15
    be22:	49 d1 ef             	shr    %r15
    be25:	4d 89 fd             	mov    %r15,%r13
    be28:	48 83 c3 01          	add    $0x1,%rbx
    be2c:	0f 1f 40 00          	nopl   0x0(%rax)
    be30:	48 83 c3 ff          	add    $0xffffffffffffffff,%rbx
    be34:	74 15                	je     be4b <_ZN4core3fmt9Formatter19pad_formatted_parts17h064a65cf2af3d8ffE+0x1cb>
    be36:	49 8b 7e 20          	mov    0x20(%r14),%rdi
    be3a:	49 8b 46 28          	mov    0x28(%r14),%rax
    be3e:	41 8b 76 34          	mov    0x34(%r14),%esi
    be42:	ff 50 20             	callq  *0x20(%rax)
    be45:	84 c0                	test   %al,%al
    be47:	74 e7                	je     be30 <_ZN4core3fmt9Formatter19pad_formatted_parts17h064a65cf2af3d8ffE+0x1b0>
    be49:	eb 15                	jmp    be60 <_ZN4core3fmt9Formatter19pad_formatted_parts17h064a65cf2af3d8ffE+0x1e0>
    be4b:	45 8b 7e 34          	mov    0x34(%r14),%r15d
    be4f:	48 8d 74 24 08       	lea    0x8(%rsp),%rsi
    be54:	4c 89 f7             	mov    %r14,%rdi
    be57:	e8 54 00 00 00       	callq  beb0 <_ZN4core3fmt9Formatter21write_formatted_parts17h6ebc89b84e6795bcE>
    be5c:	84 c0                	test   %al,%al
    be5e:	74 11                	je     be71 <_ZN4core3fmt9Formatter19pad_formatted_parts17h064a65cf2af3d8ffE+0x1f1>
    be60:	b0 01                	mov    $0x1,%al
    be62:	48 83 c4 28          	add    $0x28,%rsp
    be66:	5b                   	pop    %rbx
    be67:	41 5c                	pop    %r12
    be69:	41 5d                	pop    %r13
    be6b:	41 5e                	pop    %r14
    be6d:	41 5f                	pop    %r15
    be6f:	5d                   	pop    %rbp
    be70:	c3                   	retq   
    be71:	49 8b 5e 20          	mov    0x20(%r14),%rbx
    be75:	49 8b 6e 28          	mov    0x28(%r14),%rbp
    be79:	49 83 c5 01          	add    $0x1,%r13
    be7d:	0f 1f 00             	nopl   (%rax)
    be80:	49 83 c5 ff          	add    $0xffffffffffffffff,%r13
    be84:	74 14                	je     be9a <_ZN4core3fmt9Formatter19pad_formatted_parts17h064a65cf2af3d8ffE+0x21a>
    be86:	48 89 df             	mov    %rbx,%rdi
    be89:	44 89 fe             	mov    %r15d,%esi
    be8c:	ff 55 20             	callq  *0x20(%rbp)
    be8f:	84 c0                	test   %al,%al
    be91:	74 ed                	je     be80 <_ZN4core3fmt9Formatter19pad_formatted_parts17h064a65cf2af3d8ffE+0x200>
    be93:	b0 01                	mov    $0x1,%al
    be95:	e9 70 ff ff ff       	jmpq   be0a <_ZN4core3fmt9Formatter19pad_formatted_parts17h064a65cf2af3d8ffE+0x18a>
    be9a:	31 c0                	xor    %eax,%eax
    be9c:	e9 69 ff ff ff       	jmpq   be0a <_ZN4core3fmt9Formatter19pad_formatted_parts17h064a65cf2af3d8ffE+0x18a>
    bea1:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    bea8:	00 00 00 
    beab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000beb0 <_ZN4core3fmt9Formatter21write_formatted_parts17h6ebc89b84e6795bcE>:
    beb0:	55                   	push   %rbp
    beb1:	41 57                	push   %r15
    beb3:	41 56                	push   %r14
    beb5:	41 55                	push   %r13
    beb7:	41 54                	push   %r12
    beb9:	53                   	push   %rbx
    beba:	50                   	push   %rax
    bebb:	48 89 f3             	mov    %rsi,%rbx
    bebe:	49 89 fc             	mov    %rdi,%r12
    bec1:	48 8b 56 08          	mov    0x8(%rsi),%rdx
    bec5:	48 85 d2             	test   %rdx,%rdx
    bec8:	74 1c                	je     bee6 <_ZN4core3fmt9Formatter21write_formatted_parts17h6ebc89b84e6795bcE+0x36>
    beca:	49 8b 7c 24 20       	mov    0x20(%r12),%rdi
    becf:	49 8b 44 24 28       	mov    0x28(%r12),%rax
    bed4:	48 8b 33             	mov    (%rbx),%rsi
    bed7:	ff 50 18             	callq  *0x18(%rax)
    beda:	89 c1                	mov    %eax,%ecx
    bedc:	b0 01                	mov    $0x1,%al
    bede:	84 c9                	test   %cl,%cl
    bee0:	0f 85 52 02 00 00    	jne    c138 <_ZN4core3fmt9Formatter21write_formatted_parts17h6ebc89b84e6795bcE+0x288>
    bee6:	48 8b 43 18          	mov    0x18(%rbx),%rax
    beea:	48 85 c0             	test   %rax,%rax
    beed:	0f 84 43 02 00 00    	je     c136 <_ZN4core3fmt9Formatter21write_formatted_parts17h6ebc89b84e6795bcE+0x286>
    bef3:	4c 8b 6b 10          	mov    0x10(%rbx),%r13
    bef7:	48 8d 04 40          	lea    (%rax,%rax,2),%rax
    befb:	48 8d 2c c5 00 00 00 	lea    0x0(,%rax,8),%rbp
    bf02:	00 
    bf03:	4c 01 ed             	add    %r13,%rbp
    bf06:	4c 8d 35 f0 09 03 00 	lea    0x309f0(%rip),%r14        # 3c8fd <str.1+0x14d>
    bf0d:	49 89 e7             	mov    %rsp,%r15
    bf10:	41 0f b7 45 00       	movzwl 0x0(%r13),%eax
    bf15:	48 85 c0             	test   %rax,%rax
    bf18:	75 3a                	jne    bf54 <_ZN4core3fmt9Formatter21write_formatted_parts17h6ebc89b84e6795bcE+0xa4>
    bf1a:	e9 b1 00 00 00       	jmpq   bfd0 <_ZN4core3fmt9Formatter21write_formatted_parts17h6ebc89b84e6795bcE+0x120>
    bf1f:	90                   	nop
    bf20:	49 8b 75 08          	mov    0x8(%r13),%rsi
    bf24:	49 8b 55 10          	mov    0x10(%r13),%rdx
    bf28:	49 8b 7c 24 20       	mov    0x20(%r12),%rdi
    bf2d:	49 8b 44 24 28       	mov    0x28(%r12),%rax
    bf32:	ff 50 18             	callq  *0x18(%rax)
    bf35:	84 c0                	test   %al,%al
    bf37:	0f 85 f5 01 00 00    	jne    c132 <_ZN4core3fmt9Formatter21write_formatted_parts17h6ebc89b84e6795bcE+0x282>
    bf3d:	49 83 c5 18          	add    $0x18,%r13
    bf41:	4c 39 ed             	cmp    %r13,%rbp
    bf44:	0f 84 ec 01 00 00    	je     c136 <_ZN4core3fmt9Formatter21write_formatted_parts17h6ebc89b84e6795bcE+0x286>
    bf4a:	41 0f b7 45 00       	movzwl 0x0(%r13),%eax
    bf4f:	48 85 c0             	test   %rax,%rax
    bf52:	74 7c                	je     bfd0 <_ZN4core3fmt9Formatter21write_formatted_parts17h6ebc89b84e6795bcE+0x120>
    bf54:	48 83 f8 01          	cmp    $0x1,%rax
    bf58:	75 c6                	jne    bf20 <_ZN4core3fmt9Formatter21write_formatted_parts17h6ebc89b84e6795bcE+0x70>
    bf5a:	41 0f b7 45 02       	movzwl 0x2(%r13),%eax
    bf5f:	c6 44 24 04 00       	movb   $0x0,0x4(%rsp)
    bf64:	c7 04 24 00 00 00 00 	movl   $0x0,(%rsp)
    bf6b:	41 0f b7 55 00       	movzwl 0x0(%r13),%edx
    bf70:	48 85 d2             	test   %rdx,%rdx
    bf73:	0f 84 cf 00 00 00    	je     c048 <_ZN4core3fmt9Formatter21write_formatted_parts17h6ebc89b84e6795bcE+0x198>
    bf79:	b9 02 00 00 00       	mov    $0x2,%ecx
    bf7e:	48 83 fa 01          	cmp    $0x1,%rdx
    bf82:	0f 85 c5 00 00 00    	jne    c04d <_ZN4core3fmt9Formatter21write_formatted_parts17h6ebc89b84e6795bcE+0x19d>
    bf88:	41 0f b7 4d 02       	movzwl 0x2(%r13),%ecx
    bf8d:	81 f9 e8 03 00 00    	cmp    $0x3e8,%ecx
    bf93:	0f 83 e9 00 00 00    	jae    c082 <_ZN4core3fmt9Formatter21write_formatted_parts17h6ebc89b84e6795bcE+0x1d2>
    bf99:	bf 01 00 00 00       	mov    $0x1,%edi
    bf9e:	66 83 f9 0a          	cmp    $0xa,%cx
    bfa2:	0f 82 f2 00 00 00    	jb     c09a <_ZN4core3fmt9Formatter21write_formatted_parts17h6ebc89b84e6795bcE+0x1ea>
    bfa8:	66 83 f9 64          	cmp    $0x64,%cx
    bfac:	bf 03 00 00 00       	mov    $0x3,%edi
    bfb1:	48 83 df 00          	sbb    $0x0,%rdi
    bfb5:	40 f6 c7 01          	test   $0x1,%dil
    bfb9:	0f 84 a8 00 00 00    	je     c067 <_ZN4core3fmt9Formatter21write_formatted_parts17h6ebc89b84e6795bcE+0x1b7>
    bfbf:	e9 d6 00 00 00       	jmpq   c09a <_ZN4core3fmt9Formatter21write_formatted_parts17h6ebc89b84e6795bcE+0x1ea>
    bfc4:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    bfcb:	00 00 00 
    bfce:	66 90                	xchg   %ax,%ax
    bfd0:	49 8b 5d 08          	mov    0x8(%r13),%rbx
    bfd4:	48 83 fb 41          	cmp    $0x41,%rbx
    bfd8:	72 2f                	jb     c009 <_ZN4core3fmt9Formatter21write_formatted_parts17h6ebc89b84e6795bcE+0x159>
    bfda:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    bfe0:	49 8b 7c 24 20       	mov    0x20(%r12),%rdi
    bfe5:	49 8b 44 24 28       	mov    0x28(%r12),%rax
    bfea:	ba 40 00 00 00       	mov    $0x40,%edx
    bfef:	4c 89 f6             	mov    %r14,%rsi
    bff2:	ff 50 18             	callq  *0x18(%rax)
    bff5:	84 c0                	test   %al,%al
    bff7:	0f 85 35 01 00 00    	jne    c132 <_ZN4core3fmt9Formatter21write_formatted_parts17h6ebc89b84e6795bcE+0x282>
    bffd:	48 83 c3 c0          	add    $0xffffffffffffffc0,%rbx
    c001:	48 83 fb 40          	cmp    $0x40,%rbx
    c005:	77 d9                	ja     bfe0 <_ZN4core3fmt9Formatter21write_formatted_parts17h6ebc89b84e6795bcE+0x130>
    c007:	eb 09                	jmp    c012 <_ZN4core3fmt9Formatter21write_formatted_parts17h6ebc89b84e6795bcE+0x162>
    c009:	48 85 db             	test   %rbx,%rbx
    c00c:	0f 84 2b ff ff ff    	je     bf3d <_ZN4core3fmt9Formatter21write_formatted_parts17h6ebc89b84e6795bcE+0x8d>
    c012:	49 8b 7c 24 20       	mov    0x20(%r12),%rdi
    c017:	49 8b 4c 24 28       	mov    0x28(%r12),%rcx
    c01c:	ba 40 00 00 00       	mov    $0x40,%edx
    c021:	48 83 fb 40          	cmp    $0x40,%rbx
    c025:	74 0e                	je     c035 <_ZN4core3fmt9Formatter21write_formatted_parts17h6ebc89b84e6795bcE+0x185>
    c027:	42 80 3c 33 bf       	cmpb   $0xbf,(%rbx,%r14,1)
    c02c:	0f 8e 21 01 00 00    	jle    c153 <_ZN4core3fmt9Formatter21write_formatted_parts17h6ebc89b84e6795bcE+0x2a3>
    c032:	48 89 da             	mov    %rbx,%rdx
    c035:	4c 89 f6             	mov    %r14,%rsi
    c038:	ff 51 18             	callq  *0x18(%rcx)
    c03b:	84 c0                	test   %al,%al
    c03d:	0f 84 fa fe ff ff    	je     bf3d <_ZN4core3fmt9Formatter21write_formatted_parts17h6ebc89b84e6795bcE+0x8d>
    c043:	e9 ea 00 00 00       	jmpq   c132 <_ZN4core3fmt9Formatter21write_formatted_parts17h6ebc89b84e6795bcE+0x282>
    c048:	b9 01 00 00 00       	mov    $0x1,%ecx
    c04d:	49 8b 7c cd 00       	mov    0x0(%r13,%rcx,8),%rdi
    c052:	48 83 ff 06          	cmp    $0x6,%rdi
    c056:	0f 83 eb 00 00 00    	jae    c147 <_ZN4core3fmt9Formatter21write_formatted_parts17h6ebc89b84e6795bcE+0x297>
    c05c:	48 85 ff             	test   %rdi,%rdi
    c05f:	74 1a                	je     c07b <_ZN4core3fmt9Formatter21write_formatted_parts17h6ebc89b84e6795bcE+0x1cb>
    c061:	40 f6 c7 01          	test   $0x1,%dil
    c065:	75 33                	jne    c09a <_ZN4core3fmt9Formatter21write_formatted_parts17h6ebc89b84e6795bcE+0x1ea>
    c067:	48 8d 0c 3c          	lea    (%rsp,%rdi,1),%rcx
    c06b:	ba 01 00 00 00       	mov    $0x1,%edx
    c070:	48 83 ff 01          	cmp    $0x1,%rdi
    c074:	75 5a                	jne    c0d0 <_ZN4core3fmt9Formatter21write_formatted_parts17h6ebc89b84e6795bcE+0x220>
    c076:	e9 9f 00 00 00       	jmpq   c11a <_ZN4core3fmt9Formatter21write_formatted_parts17h6ebc89b84e6795bcE+0x26a>
    c07b:	31 d2                	xor    %edx,%edx
    c07d:	e9 98 00 00 00       	jmpq   c11a <_ZN4core3fmt9Formatter21write_formatted_parts17h6ebc89b84e6795bcE+0x26a>
    c082:	0f b7 c9             	movzwl %cx,%ecx
    c085:	81 f9 10 27 00 00    	cmp    $0x2710,%ecx
    c08b:	bf 05 00 00 00       	mov    $0x5,%edi
    c090:	48 83 df 00          	sbb    $0x0,%rdi
    c094:	40 f6 c7 01          	test   $0x1,%dil
    c098:	74 cd                	je     c067 <_ZN4core3fmt9Formatter21write_formatted_parts17h6ebc89b84e6795bcE+0x1b7>
    c09a:	48 8d 0c 3c          	lea    (%rsp,%rdi,1),%rcx
    c09e:	48 83 c1 ff          	add    $0xffffffffffffffff,%rcx
    c0a2:	0f b7 d0             	movzwl %ax,%edx
    c0a5:	69 d2 cd cc 00 00    	imul   $0xcccd,%edx,%edx
    c0ab:	c1 ea 13             	shr    $0x13,%edx
    c0ae:	8d 34 12             	lea    (%rdx,%rdx,1),%esi
    c0b1:	8d 34 b6             	lea    (%rsi,%rsi,4),%esi
    c0b4:	29 f0                	sub    %esi,%eax
    c0b6:	0c 30                	or     $0x30,%al
    c0b8:	88 44 3c ff          	mov    %al,-0x1(%rsp,%rdi,1)
    c0bc:	89 d0                	mov    %edx,%eax
    c0be:	ba 01 00 00 00       	mov    $0x1,%edx
    c0c3:	48 83 ff 01          	cmp    $0x1,%rdi
    c0c7:	74 51                	je     c11a <_ZN4core3fmt9Formatter21write_formatted_parts17h6ebc89b84e6795bcE+0x26a>
    c0c9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    c0d0:	0f b7 d8             	movzwl %ax,%ebx
    c0d3:	69 d3 cd cc 00 00    	imul   $0xcccd,%ebx,%edx
    c0d9:	c1 ea 13             	shr    $0x13,%edx
    c0dc:	8d 34 12             	lea    (%rdx,%rdx,1),%esi
    c0df:	8d 34 b6             	lea    (%rsi,%rsi,4),%esi
    c0e2:	89 d8                	mov    %ebx,%eax
    c0e4:	29 f0                	sub    %esi,%eax
    c0e6:	0c 30                	or     $0x30,%al
    c0e8:	88 41 ff             	mov    %al,-0x1(%rcx)
    c0eb:	69 c2 cd cc 00 00    	imul   $0xcccd,%edx,%eax
    c0f1:	c1 e8 12             	shr    $0x12,%eax
    c0f4:	83 e0 fe             	and    $0xfffffffe,%eax
    c0f7:	8d 04 80             	lea    (%rax,%rax,4),%eax
    c0fa:	29 c2                	sub    %eax,%edx
    c0fc:	80 ca 30             	or     $0x30,%dl
    c0ff:	88 51 fe             	mov    %dl,-0x2(%rcx)
    c102:	48 83 c1 fe          	add    $0xfffffffffffffffe,%rcx
    c106:	c1 eb 02             	shr    $0x2,%ebx
    c109:	69 c3 7b 14 00 00    	imul   $0x147b,%ebx,%eax
    c10f:	c1 e8 11             	shr    $0x11,%eax
    c112:	49 39 cf             	cmp    %rcx,%r15
    c115:	75 b9                	jne    c0d0 <_ZN4core3fmt9Formatter21write_formatted_parts17h6ebc89b84e6795bcE+0x220>
    c117:	48 89 fa             	mov    %rdi,%rdx
    c11a:	49 8b 7c 24 20       	mov    0x20(%r12),%rdi
    c11f:	49 8b 44 24 28       	mov    0x28(%r12),%rax
    c124:	4c 89 fe             	mov    %r15,%rsi
    c127:	ff 50 18             	callq  *0x18(%rax)
    c12a:	84 c0                	test   %al,%al
    c12c:	0f 84 0b fe ff ff    	je     bf3d <_ZN4core3fmt9Formatter21write_formatted_parts17h6ebc89b84e6795bcE+0x8d>
    c132:	b0 01                	mov    $0x1,%al
    c134:	eb 02                	jmp    c138 <_ZN4core3fmt9Formatter21write_formatted_parts17h6ebc89b84e6795bcE+0x288>
    c136:	31 c0                	xor    %eax,%eax
    c138:	48 83 c4 08          	add    $0x8,%rsp
    c13c:	5b                   	pop    %rbx
    c13d:	41 5c                	pop    %r12
    c13f:	41 5d                	pop    %r13
    c141:	41 5e                	pop    %r14
    c143:	41 5f                	pop    %r15
    c145:	5d                   	pop    %rbp
    c146:	c3                   	retq   
    c147:	be 05 00 00 00       	mov    $0x5,%esi
    c14c:	e8 7f ba ff ff       	callq  7bd0 <_ZN4core5slice20slice_index_len_fail17h52736412c1ce1871E>
    c151:	0f 0b                	ud2    
    c153:	48 8d 3d a3 07 03 00 	lea    0x307a3(%rip),%rdi        # 3c8fd <str.1+0x14d>
    c15a:	be 40 00 00 00       	mov    $0x40,%esi
    c15f:	31 d2                	xor    %edx,%edx
    c161:	48 89 d9             	mov    %rbx,%rcx
    c164:	e8 17 c0 ff ff       	callq  8180 <_ZN4core3str16slice_error_fail17hc48083e4f6af7f4aE>
    c169:	0f 0b                	ud2    
    c16b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000c170 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E>:
    c170:	55                   	push   %rbp
    c171:	41 57                	push   %r15
    c173:	41 56                	push   %r14
    c175:	41 55                	push   %r13
    c177:	41 54                	push   %r12
    c179:	53                   	push   %rbx
    c17a:	48 81 ec 28 06 00 00 	sub    $0x628,%rsp
    c181:	48 b9 00 00 00 00 00 	movabs $0x10000000000000,%rcx
    c188:	00 10 00 
    c18b:	66 48 0f 7e c5       	movq   %xmm0,%rbp
    c190:	49 89 eb             	mov    %rbp,%r11
    c193:	49 c1 eb 34          	shr    $0x34,%r11
    c197:	48 8d 51 ff          	lea    -0x1(%rcx),%rdx
    c19b:	48 21 ea             	and    %rbp,%rdx
    c19e:	48 8d 04 12          	lea    (%rdx,%rdx,1),%rax
    c1a2:	4c 8d 0c 0a          	lea    (%rdx,%rcx,1),%r9
    c1a6:	66 41 81 e3 ff 07    	and    $0x7ff,%r11w
    c1ac:	4c 0f 44 c8          	cmove  %rax,%r9
    c1b0:	48 8d 04 6d 00 00 00 	lea    0x0(,%rbp,2),%rax
    c1b7:	00 
    c1b8:	48 85 c0             	test   %rax,%rax
    c1bb:	74 2b                	je     c1e8 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x78>
    c1bd:	45 89 ca             	mov    %r9d,%r10d
    c1c0:	41 83 e2 01          	and    $0x1,%r10d
    c1c4:	48 bb 00 00 00 00 00 	movabs $0x7ff0000000000000,%rbx
    c1cb:	00 f0 7f 
    c1ce:	48 89 e8             	mov    %rbp,%rax
    c1d1:	48 21 d8             	and    %rbx,%rax
    c1d4:	74 17                	je     c1ed <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x7d>
    c1d6:	48 39 d8             	cmp    %rbx,%rax
    c1d9:	75 2c                	jne    c207 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x97>
    c1db:	48 85 d2             	test   %rdx,%rdx
    c1de:	41 0f 94 c2          	sete   %r10b
    c1e2:	41 80 ca 02          	or     $0x2,%r10b
    c1e6:	eb 03                	jmp    c1eb <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x7b>
    c1e8:	41 b2 04             	mov    $0x4,%r10b
    c1eb:	eb 4e                	jmp    c23b <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0xcb>
    c1ed:	41 81 c3 cd fb ff ff 	add    $0xfffffbcd,%r11d
    c1f4:	41 80 f2 01          	xor    $0x1,%r10b
    c1f8:	b8 01 00 00 00       	mov    $0x1,%eax
    c1fd:	48 89 84 24 f8 00 00 	mov    %rax,0xf8(%rsp)
    c204:	00 
    c205:	eb 34                	jmp    c23b <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0xcb>
    c207:	31 c0                	xor    %eax,%eax
    c209:	49 39 c9             	cmp    %rcx,%r9
    c20c:	4f 8d 0c 09          	lea    (%r9,%r9,1),%r9
    c210:	0f 94 c0             	sete   %al
    c213:	48 b9 00 00 00 00 00 	movabs $0x40000000000000,%rcx
    c21a:	00 40 00 
    c21d:	4c 0f 44 c9          	cmove  %rcx,%r9
    c221:	48 8d 48 01          	lea    0x1(%rax),%rcx
    c225:	48 89 8c 24 f8 00 00 	mov    %rcx,0xf8(%rsp)
    c22c:	00 
    c22d:	41 29 c3             	sub    %eax,%r11d
    c230:	41 81 c3 cc fb ff ff 	add    $0xfffffbcc,%r11d
    c237:	41 80 f2 01          	xor    $0x1,%r10b
    c23b:	41 8d 4a fe          	lea    -0x2(%r10),%ecx
    c23f:	80 f9 03             	cmp    $0x3,%cl
    c242:	0f b6 c1             	movzbl %cl,%eax
    c245:	ba 03 00 00 00       	mov    $0x3,%edx
    c24a:	0f 42 d0             	cmovb  %eax,%edx
    c24d:	84 d2                	test   %dl,%dl
    c24f:	74 47                	je     c298 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x128>
    c251:	0f b6 c2             	movzbl %dl,%eax
    c254:	48 83 f8 02          	cmp    $0x2,%rax
    c258:	75 6d                	jne    c2c7 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x157>
    c25a:	4c 8d 05 d7 11 03 00 	lea    0x311d7(%rip),%r8        # 3d438 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0xad8>
    c261:	31 db                	xor    %ebx,%ebx
    c263:	40 0f b6 c6          	movzbl %sil,%eax
    c267:	48 8d 0d 22 e4 02 00 	lea    0x2e422(%rip),%rcx        # 3a690 <_ZN4core7unicode12unicode_data2cc19BITSET_INDEX_CHUNKS17h8a1f39cd536e9344E+0x1d0>
    c26e:	48 63 04 81          	movslq (%rcx,%rax,4),%rax
    c272:	48 01 c8             	add    %rcx,%rax
    c275:	ff e0                	jmpq   *%rax
    c277:	48 85 ed             	test   %rbp,%rbp
    c27a:	48 8d 05 01 10 03 00 	lea    0x31001(%rip),%rax        # 3d282 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x922>
    c281:	4c 8d 05 b0 11 03 00 	lea    0x311b0(%rip),%r8        # 3d438 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0xad8>
    c288:	4c 0f 48 c0          	cmovs  %rax,%r8
    c28c:	48 c1 ed 3f          	shr    $0x3f,%rbp
    c290:	48 89 eb             	mov    %rbp,%rbx
    c293:	e9 4a 04 00 00       	jmpq   c6e2 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x572>
    c298:	66 c7 44 24 40 02 00 	movw   $0x2,0x40(%rsp)
    c29f:	48 8d 05 2c 06 03 00 	lea    0x3062c(%rip),%rax        # 3c8d2 <str.1+0x122>
    c2a6:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
    c2ab:	48 c7 44 24 50 03 00 	movq   $0x3,0x50(%rsp)
    c2b2:	00 00 
    c2b4:	b8 01 00 00 00       	mov    $0x1,%eax
    c2b9:	4c 8d 05 78 11 03 00 	lea    0x31178(%rip),%r8        # 3d438 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0xad8>
    c2c0:	31 db                	xor    %ebx,%ebx
    c2c2:	e9 3c 04 00 00       	jmpq   c703 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x593>
    c2c7:	40 80 fe 01          	cmp    $0x1,%sil
    c2cb:	0f 97 c0             	seta   %al
    c2ce:	48 85 ed             	test   %rbp,%rbp
    c2d1:	0f 98 c2             	sets   %dl
    c2d4:	48 8d 1d a7 0f 03 00 	lea    0x30fa7(%rip),%rbx        # 3d282 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x922>
    c2db:	48 8d 2d 56 11 03 00 	lea    0x31156(%rip),%rbp        # 3d438 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0xad8>
    c2e2:	48 0f 48 eb          	cmovs  %rbx,%rbp
    c2e6:	4c 8d 05 42 05 03 00 	lea    0x30542(%rip),%r8        # 3c82f <str.1+0x7f>
    c2ed:	4c 0f 48 c3          	cmovs  %rbx,%r8
    c2f1:	08 c2                	or     %al,%dl
    c2f3:	40 80 fe 02          	cmp    $0x2,%sil
    c2f7:	4c 0f 42 c5          	cmovb  %rbp,%r8
    c2fb:	0f b6 da             	movzbl %dl,%ebx
    c2fe:	80 f9 02             	cmp    $0x2,%cl
    c301:	0f 86 9a 03 00 00    	jbe    c6a1 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x531>
    c307:	4d 85 c9             	test   %r9,%r9
    c30a:	0f 84 5e 1d 00 00    	je     e06e <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x1efe>
    c310:	4d 89 ce             	mov    %r9,%r14
    c313:	4c 03 b4 24 f8 00 00 	add    0xf8(%rsp),%r14
    c31a:	00 
    c31b:	0f 82 67 1d 00 00    	jb     e088 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x1f18>
    c321:	49 83 f9 01          	cmp    $0x1,%r9
    c325:	0f 82 77 1d 00 00    	jb     e0a2 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x1f32>
    c32b:	4c 89 f0             	mov    %r14,%rax
    c32e:	48 c1 e8 3d          	shr    $0x3d,%rax
    c332:	0f 85 84 1d 00 00    	jne    e0bc <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x1f4c>
    c338:	4c 89 f0             	mov    %r14,%rax
    c33b:	48 c1 e8 20          	shr    $0x20,%rax
    c33f:	4c 89 f1             	mov    %r14,%rcx
    c342:	48 c1 e1 20          	shl    $0x20,%rcx
    c346:	48 85 c0             	test   %rax,%rax
    c349:	49 0f 45 ce          	cmovne %r14,%rcx
    c34d:	41 8d 43 e0          	lea    -0x20(%r11),%eax
    c351:	41 0f 45 c3          	cmovne %r11d,%eax
    c355:	48 89 ca             	mov    %rcx,%rdx
    c358:	48 c1 ea 30          	shr    $0x30,%rdx
    c35c:	48 89 ce             	mov    %rcx,%rsi
    c35f:	48 c1 e6 10          	shl    $0x10,%rsi
    c363:	48 85 d2             	test   %rdx,%rdx
    c366:	48 0f 45 f1          	cmovne %rcx,%rsi
    c36a:	8d 48 f0             	lea    -0x10(%rax),%ecx
    c36d:	0f 45 c8             	cmovne %eax,%ecx
    c370:	48 89 f0             	mov    %rsi,%rax
    c373:	48 c1 e8 38          	shr    $0x38,%rax
    c377:	48 89 f2             	mov    %rsi,%rdx
    c37a:	48 c1 e2 08          	shl    $0x8,%rdx
    c37e:	48 85 c0             	test   %rax,%rax
    c381:	48 0f 45 d6          	cmovne %rsi,%rdx
    c385:	8d 41 f8             	lea    -0x8(%rcx),%eax
    c388:	0f 45 c1             	cmovne %ecx,%eax
    c38b:	48 89 d1             	mov    %rdx,%rcx
    c38e:	48 c1 e9 3c          	shr    $0x3c,%rcx
    c392:	48 89 d6             	mov    %rdx,%rsi
    c395:	48 c1 e6 04          	shl    $0x4,%rsi
    c399:	48 85 c9             	test   %rcx,%rcx
    c39c:	48 0f 45 f2          	cmovne %rdx,%rsi
    c3a0:	8d 48 fc             	lea    -0x4(%rax),%ecx
    c3a3:	0f 45 c8             	cmovne %eax,%ecx
    c3a6:	48 89 f0             	mov    %rsi,%rax
    c3a9:	48 c1 e8 3e          	shr    $0x3e,%rax
    c3ad:	4c 8d 24 b5 00 00 00 	lea    0x0(,%rsi,4),%r12
    c3b4:	00 
    c3b5:	48 85 c0             	test   %rax,%rax
    c3b8:	4c 0f 45 e6          	cmovne %rsi,%r12
    c3bc:	8d 41 fe             	lea    -0x2(%rcx),%eax
    c3bf:	0f 45 c1             	cmovne %ecx,%eax
    c3c2:	4d 85 e4             	test   %r12,%r12
    c3c5:	0f 99 c1             	setns  %cl
    c3c8:	4c 89 e2             	mov    %r12,%rdx
    c3cb:	48 d3 e2             	shl    %cl,%rdx
    c3ce:	49 c1 fc 3f          	sar    $0x3f,%r12
    c3d2:	41 f7 d4             	not    %r12d
    c3d5:	41 01 c4             	add    %eax,%r12d
    c3d8:	49 8d 41 ff          	lea    -0x1(%r9),%rax
    c3dc:	48 89 84 24 d8 04 00 	mov    %rax,0x4d8(%rsp)
    c3e3:	00 
    c3e4:	66 44 89 9c 24 e0 04 	mov    %r11w,0x4e0(%rsp)
    c3eb:	00 00 
    c3ed:	44 89 d9             	mov    %r11d,%ecx
    c3f0:	66 44 29 e1          	sub    %r12w,%cx
    c3f4:	0f 88 dc 1c 00 00    	js     e0d6 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x1f66>
    c3fa:	83 e1 3f             	and    $0x3f,%ecx
    c3fd:	48 c7 c5 ff ff ff ff 	mov    $0xffffffffffffffff,%rbp
    c404:	48 d3 ed             	shr    %cl,%rbp
    c407:	48 89 ee             	mov    %rbp,%rsi
    c40a:	48 21 c6             	and    %rax,%rsi
    c40d:	48 89 b4 24 e0 02 00 	mov    %rsi,0x2e0(%rsp)
    c414:	00 
    c415:	48 39 e8             	cmp    %rbp,%rax
    c418:	0f 87 a3 1b 00 00    	ja     dfc1 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x1e51>
    c41e:	48 d3 e0             	shl    %cl,%rax
    c421:	4c 89 8c 24 d8 04 00 	mov    %r9,0x4d8(%rsp)
    c428:	00 
    c429:	66 44 89 9c 24 e0 04 	mov    %r11w,0x4e0(%rsp)
    c430:	00 00 
    c432:	48 89 ee             	mov    %rbp,%rsi
    c435:	4c 21 ce             	and    %r9,%rsi
    c438:	48 89 b4 24 e0 02 00 	mov    %rsi,0x2e0(%rsp)
    c43f:	00 
    c440:	49 39 e9             	cmp    %rbp,%r9
    c443:	0f 87 78 1b 00 00    	ja     dfc1 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x1e51>
    c449:	4c 89 b4 24 70 01 00 	mov    %r14,0x170(%rsp)
    c450:	00 
    c451:	4c 89 94 24 40 01 00 	mov    %r10,0x140(%rsp)
    c458:	00 
    c459:	48 89 9c 24 78 01 00 	mov    %rbx,0x178(%rsp)
    c460:	00 
    c461:	4c 89 84 24 80 01 00 	mov    %r8,0x180(%rsp)
    c468:	00 
    c469:	48 89 bc 24 88 01 00 	mov    %rdi,0x188(%rsp)
    c470:	00 
    c471:	4c 89 ce             	mov    %r9,%rsi
    c474:	48 d3 e6             	shl    %cl,%rsi
    c477:	48 89 74 24 10       	mov    %rsi,0x10(%rsp)
    c47c:	b9 a0 ff ff ff       	mov    $0xffffffa0,%ecx
    c481:	44 29 e1             	sub    %r12d,%ecx
    c484:	0f bf c9             	movswl %cx,%ecx
    c487:	8d 0c 89             	lea    (%rcx,%rcx,4),%ecx
    c48a:	c1 e1 04             	shl    $0x4,%ecx
    c48d:	81 c1 b0 53 01 00    	add    $0x153b0,%ecx
    c493:	48 63 c9             	movslq %ecx,%rcx
    c496:	48 69 c9 93 c9 4d 7b 	imul   $0x7b4dc993,%rcx,%rcx
    c49d:	48 89 ce             	mov    %rcx,%rsi
    c4a0:	48 c1 ee 3f          	shr    $0x3f,%rsi
    c4a4:	48 c1 f9 2a          	sar    $0x2a,%rcx
    c4a8:	01 f1                	add    %esi,%ecx
    c4aa:	48 63 f1             	movslq %ecx,%rsi
    c4ad:	83 fe 51             	cmp    $0x51,%esi
    c4b0:	0f 83 3a 1c 00 00    	jae    e0f0 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x1f80>
    c4b6:	48 c1 e6 04          	shl    $0x4,%rsi
    c4ba:	4c 8d 05 87 eb 02 00 	lea    0x2eb87(%rip),%r8        # 3b048 <_ZN4core3num7flt2dec8strategy5grisu12CACHED_POW1017hec9e8afcf9e6cf37E>
    c4c1:	4e 8b 3c 06          	mov    (%rsi,%r8,1),%r15
    c4c5:	42 0f b7 4c 06 0a    	movzwl 0xa(%rsi,%r8,1),%ecx
    c4cb:	89 0c 24             	mov    %ecx,(%rsp)
    c4ce:	48 89 d1             	mov    %rdx,%rcx
    c4d1:	48 c1 e9 20          	shr    $0x20,%rcx
    c4d5:	48 89 cd             	mov    %rcx,%rbp
    c4d8:	48 89 8c 24 30 01 00 	mov    %rcx,0x130(%rsp)
    c4df:	00 
    c4e0:	89 d2                	mov    %edx,%edx
    c4e2:	45 89 fa             	mov    %r15d,%r10d
    c4e5:	49 c1 ef 20          	shr    $0x20,%r15
    c4e9:	4c 89 f9             	mov    %r15,%rcx
    c4ec:	48 0f af ca          	imul   %rdx,%rcx
    c4f0:	48 89 4c 24 18       	mov    %rcx,0x18(%rsp)
    c4f5:	4c 89 d7             	mov    %r10,%rdi
    c4f8:	48 0f af fd          	imul   %rbp,%rdi
    c4fc:	49 0f af d2          	imul   %r10,%rdx
    c500:	48 c1 ea 20          	shr    $0x20,%rdx
    c504:	89 fb                	mov    %edi,%ebx
    c506:	48 01 d3             	add    %rdx,%rbx
    c509:	89 cd                	mov    %ecx,%ebp
    c50b:	66 46 03 64 06 08    	add    0x8(%rsi,%r8,1),%r12w
    c511:	48 01 dd             	add    %rbx,%rbp
    c514:	49 89 c5             	mov    %rax,%r13
    c517:	49 c1 ed 20          	shr    $0x20,%r13
    c51b:	89 c0                	mov    %eax,%eax
    c51d:	4c 89 fb             	mov    %r15,%rbx
    c520:	48 0f af d8          	imul   %rax,%rbx
    c524:	4c 89 d6             	mov    %r10,%rsi
    c527:	49 0f af f5          	imul   %r13,%rsi
    c52b:	49 0f af c2          	imul   %r10,%rax
    c52f:	48 c1 e8 20          	shr    $0x20,%rax
    c533:	89 f2                	mov    %esi,%edx
    c535:	48 01 c2             	add    %rax,%rdx
    c538:	89 d8                	mov    %ebx,%eax
    c53a:	48 01 d0             	add    %rdx,%rax
    c53d:	48 89 84 24 f0 00 00 	mov    %rax,0xf0(%rsp)
    c544:	00 
    c545:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    c54a:	49 89 c0             	mov    %rax,%r8
    c54d:	49 c1 e8 20          	shr    $0x20,%r8
    c551:	89 c0                	mov    %eax,%eax
    c553:	4c 89 fa             	mov    %r15,%rdx
    c556:	48 0f af d0          	imul   %rax,%rdx
    c55a:	4c 89 d1             	mov    %r10,%rcx
    c55d:	49 0f af c8          	imul   %r8,%rcx
    c561:	4c 0f af d0          	imul   %rax,%r10
    c565:	49 c1 ea 20          	shr    $0x20,%r10
    c569:	89 c8                	mov    %ecx,%eax
    c56b:	4c 01 d0             	add    %r10,%rax
    c56e:	41 89 d2             	mov    %edx,%r10d
    c571:	49 01 c2             	add    %rax,%r10
    c574:	4d 89 fe             	mov    %r15,%r14
    c577:	4c 0f af b4 24 30 01 	imul   0x130(%rsp),%r14
    c57e:	00 00 
    c580:	48 81 ed 00 00 00 80 	sub    $0xffffffff80000000,%rbp
    c587:	48 c1 ef 20          	shr    $0x20,%rdi
    c58b:	48 89 7c 24 38       	mov    %rdi,0x38(%rsp)
    c590:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
    c595:	48 c1 ef 20          	shr    $0x20,%rdi
    c599:	48 c1 ed 20          	shr    $0x20,%rbp
    c59d:	4c 89 f8             	mov    %r15,%rax
    c5a0:	4c 89 ac 24 58 01 00 	mov    %r13,0x158(%rsp)
    c5a7:	00 
    c5a8:	49 0f af c5          	imul   %r13,%rax
    c5ac:	4c 8b ac 24 f0 00 00 	mov    0xf0(%rsp),%r13
    c5b3:	00 
    c5b4:	49 81 ed 00 00 00 80 	sub    $0xffffffff80000000,%r13
    c5bb:	48 c1 ee 20          	shr    $0x20,%rsi
    c5bf:	48 89 b4 24 20 01 00 	mov    %rsi,0x120(%rsp)
    c5c6:	00 
    c5c7:	4c 89 f6             	mov    %r14,%rsi
    c5ca:	48 c1 eb 20          	shr    $0x20,%rbx
    c5ce:	48 89 9c 24 28 01 00 	mov    %rbx,0x128(%rsp)
    c5d5:	00 
    c5d6:	49 c1 ed 20          	shr    $0x20,%r13
    c5da:	4c 89 bc 24 60 01 00 	mov    %r15,0x160(%rsp)
    c5e1:	00 
    c5e2:	4c 89 fb             	mov    %r15,%rbx
    c5e5:	49 0f af d8          	imul   %r8,%rbx
    c5e9:	49 81 ea 00 00 00 80 	sub    $0xffffffff80000000,%r10
    c5f0:	48 c1 e9 20          	shr    $0x20,%rcx
    c5f4:	48 89 8c 24 50 01 00 	mov    %rcx,0x150(%rsp)
    c5fb:	00 
    c5fc:	48 01 cb             	add    %rcx,%rbx
    c5ff:	48 c1 ea 20          	shr    $0x20,%rdx
    c603:	48 8b 4c 24 38       	mov    0x38(%rsp),%rcx
    c608:	4c 01 f1             	add    %r14,%rcx
    c60b:	48 89 7c 24 18       	mov    %rdi,0x18(%rsp)
    c610:	48 01 f9             	add    %rdi,%rcx
    c613:	48 89 ac 24 e8 00 00 	mov    %rbp,0xe8(%rsp)
    c61a:	00 
    c61b:	4c 8d 3c 29          	lea    (%rcx,%rbp,1),%r15
    c61f:	49 83 c7 01          	add    $0x1,%r15
    c623:	41 f7 dc             	neg    %r12d
    c626:	41 83 e4 3f          	and    $0x3f,%r12d
    c62a:	4d 89 fe             	mov    %r15,%r14
    c62d:	44 89 e1             	mov    %r12d,%ecx
    c630:	49 d3 ee             	shr    %cl,%r14
    c633:	bf 01 00 00 00       	mov    $0x1,%edi
    c638:	48 d3 e7             	shl    %cl,%rdi
    c63b:	48 89 94 24 48 01 00 	mov    %rdx,0x148(%rsp)
    c642:	00 
    c643:	48 01 d3             	add    %rdx,%rbx
    c646:	49 c1 ea 20          	shr    $0x20,%r10
    c64a:	4c 89 94 24 18 01 00 	mov    %r10,0x118(%rsp)
    c651:	00 
    c652:	48 89 bc 24 68 01 00 	mov    %rdi,0x168(%rsp)
    c659:	00 
    c65a:	48 8d 4f ff          	lea    -0x1(%rdi),%rcx
    c65e:	48 89 8c 24 38 01 00 	mov    %rcx,0x138(%rsp)
    c665:	00 
    c666:	41 81 fe 10 27 00 00 	cmp    $0x2710,%r14d
    c66d:	4c 89 9c 24 10 01 00 	mov    %r11,0x110(%rsp)
    c674:	00 
    c675:	0f 83 cc 00 00 00    	jae    c747 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x5d7>
    c67b:	4c 89 e7             	mov    %r12,%rdi
    c67e:	41 83 fe 64          	cmp    $0x64,%r14d
    c682:	0f 83 e5 00 00 00    	jae    c76d <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x5fd>
    c688:	31 c9                	xor    %ecx,%ecx
    c68a:	41 83 fe 09          	cmp    $0x9,%r14d
    c68e:	0f 97 c1             	seta   %cl
    c691:	44 8d 1c c9          	lea    (%rcx,%rcx,8),%r11d
    c695:	41 83 c3 01          	add    $0x1,%r11d
    c699:	8b 14 24             	mov    (%rsp),%edx
    c69c:	e9 30 01 00 00       	jmpq   c7d1 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x661>
    c6a1:	66 c7 44 24 40 02 00 	movw   $0x2,0x40(%rsp)
    c6a8:	48 8d 05 26 02 03 00 	lea    0x30226(%rip),%rax        # 3c8d5 <str.1+0x125>
    c6af:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
    c6b4:	48 c7 44 24 50 03 00 	movq   $0x3,0x50(%rsp)
    c6bb:	00 00 
    c6bd:	eb 3f                	jmp    c6fe <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x58e>
    c6bf:	4c 8d 05 69 01 03 00 	lea    0x30169(%rip),%r8        # 3c82f <str.1+0x7f>
    c6c6:	eb 15                	jmp    c6dd <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x56d>
    c6c8:	48 85 ed             	test   %rbp,%rbp
    c6cb:	48 8d 05 b0 0b 03 00 	lea    0x30bb0(%rip),%rax        # 3d282 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x922>
    c6d2:	4c 8d 05 56 01 03 00 	lea    0x30156(%rip),%r8        # 3c82f <str.1+0x7f>
    c6d9:	4c 0f 48 c0          	cmovs  %rax,%r8
    c6dd:	bb 01 00 00 00       	mov    $0x1,%ebx
    c6e2:	66 c7 44 24 40 02 00 	movw   $0x2,0x40(%rsp)
    c6e9:	48 8d 05 e4 0d 03 00 	lea    0x30de4(%rip),%rax        # 3d4d4 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0xb74>
    c6f0:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
    c6f5:	48 c7 44 24 50 01 00 	movq   $0x1,0x50(%rsp)
    c6fc:	00 00 
    c6fe:	b8 01 00 00 00       	mov    $0x1,%eax
    c703:	4c 89 84 24 88 03 00 	mov    %r8,0x388(%rsp)
    c70a:	00 
    c70b:	48 89 9c 24 90 03 00 	mov    %rbx,0x390(%rsp)
    c712:	00 
    c713:	48 8d 4c 24 40       	lea    0x40(%rsp),%rcx
    c718:	48 89 8c 24 98 03 00 	mov    %rcx,0x398(%rsp)
    c71f:	00 
    c720:	48 89 84 24 a0 03 00 	mov    %rax,0x3a0(%rsp)
    c727:	00 
    c728:	48 8d b4 24 88 03 00 	lea    0x388(%rsp),%rsi
    c72f:	00 
    c730:	e8 4b f5 ff ff       	callq  bc80 <_ZN4core3fmt9Formatter19pad_formatted_parts17h064a65cf2af3d8ffE>
    c735:	48 81 c4 28 06 00 00 	add    $0x628,%rsp
    c73c:	5b                   	pop    %rbx
    c73d:	41 5c                	pop    %r12
    c73f:	41 5d                	pop    %r13
    c741:	41 5e                	pop    %r14
    c743:	41 5f                	pop    %r15
    c745:	5d                   	pop    %rbp
    c746:	c3                   	retq   
    c747:	41 81 fe 40 42 0f 00 	cmp    $0xf4240,%r14d
    c74e:	73 3d                	jae    c78d <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x61d>
    c750:	4c 89 e7             	mov    %r12,%rdi
    c753:	41 81 fe a0 86 01 00 	cmp    $0x186a0,%r14d
    c75a:	b9 10 27 00 00       	mov    $0x2710,%ecx
    c75f:	41 bb a0 86 01 00    	mov    $0x186a0,%r11d
    c765:	44 0f 42 d9          	cmovb  %ecx,%r11d
    c769:	b1 05                	mov    $0x5,%cl
    c76b:	eb 18                	jmp    c785 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x615>
    c76d:	41 81 fe e8 03 00 00 	cmp    $0x3e8,%r14d
    c774:	b9 64 00 00 00       	mov    $0x64,%ecx
    c779:	41 bb e8 03 00 00    	mov    $0x3e8,%r11d
    c77f:	44 0f 42 d9          	cmovb  %ecx,%r11d
    c783:	b1 03                	mov    $0x3,%cl
    c785:	80 d9 00             	sbb    $0x0,%cl
    c788:	8b 14 24             	mov    (%rsp),%edx
    c78b:	eb 44                	jmp    c7d1 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x661>
    c78d:	41 81 fe 00 e1 f5 05 	cmp    $0x5f5e100,%r14d
    c794:	8b 14 24             	mov    (%rsp),%edx
    c797:	4c 89 e7             	mov    %r12,%rdi
    c79a:	73 1a                	jae    c7b6 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x646>
    c79c:	41 81 fe 80 96 98 00 	cmp    $0x989680,%r14d
    c7a3:	b9 40 42 0f 00       	mov    $0xf4240,%ecx
    c7a8:	41 bb 80 96 98 00    	mov    $0x989680,%r11d
    c7ae:	44 0f 42 d9          	cmovb  %ecx,%r11d
    c7b2:	b1 07                	mov    $0x7,%cl
    c7b4:	eb 18                	jmp    c7ce <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x65e>
    c7b6:	41 81 fe 00 ca 9a 3b 	cmp    $0x3b9aca00,%r14d
    c7bd:	b9 00 e1 f5 05       	mov    $0x5f5e100,%ecx
    c7c2:	41 bb 00 ca 9a 3b    	mov    $0x3b9aca00,%r11d
    c7c8:	44 0f 42 d9          	cmovb  %ecx,%r11d
    c7cc:	b1 09                	mov    $0x9,%cl
    c7ce:	80 d9 00             	sbb    $0x0,%cl
    c7d1:	48 89 b4 24 00 01 00 	mov    %rsi,0x100(%rsp)
    c7d8:	00 
    c7d9:	48 03 9c 24 18 01 00 	add    0x118(%rsp),%rbx
    c7e0:	00 
    c7e1:	48 89 5c 24 08       	mov    %rbx,0x8(%rsp)
    c7e6:	4d 89 fc             	mov    %r15,%r12
    c7e9:	48 8b 9c 24 38 01 00 	mov    0x138(%rsp),%rbx
    c7f0:	00 
    c7f1:	49 21 dc             	and    %rbx,%r12
    c7f4:	0f b6 f1             	movzbl %cl,%esi
    c7f7:	89 f1                	mov    %esi,%ecx
    c7f9:	29 d1                	sub    %edx,%ecx
    c7fb:	83 c1 01             	add    $0x1,%ecx
    c7fe:	48 89 0c 24          	mov    %rcx,(%rsp)
    c802:	48 03 84 24 20 01 00 	add    0x120(%rsp),%rax
    c809:	00 
    c80a:	48 03 84 24 28 01 00 	add    0x128(%rsp),%rax
    c811:	00 
    c812:	4c 89 ac 24 f0 00 00 	mov    %r13,0xf0(%rsp)
    c819:	00 
    c81a:	4c 01 e8             	add    %r13,%rax
    c81d:	4c 89 bc 24 08 01 00 	mov    %r15,0x108(%rsp)
    c824:	00 
    c825:	49 29 c7             	sub    %rax,%r15
    c828:	49 83 c7 01          	add    $0x1,%r15
    c82c:	4c 89 7c 24 10       	mov    %r15,0x10(%rsp)
    c831:	49 21 df             	and    %rbx,%r15
    c834:	45 31 ed             	xor    %r13d,%r13d
    c837:	bd cd cc cc cc       	mov    $0xcccccccd,%ebp
    c83c:	0f 1f 40 00          	nopl   0x0(%rax)
    c840:	44 89 f0             	mov    %r14d,%eax
    c843:	31 d2                	xor    %edx,%edx
    c845:	41 f7 f3             	div    %r11d
    c848:	41 89 d6             	mov    %edx,%r14d
    c84b:	4c 89 f2             	mov    %r14,%rdx
    c84e:	89 f9                	mov    %edi,%ecx
    c850:	48 d3 e2             	shl    %cl,%rdx
    c853:	04 30                	add    $0x30,%al
    c855:	42 88 44 2c 20       	mov    %al,0x20(%rsp,%r13,1)
    c85a:	4e 8d 14 22          	lea    (%rdx,%r12,1),%r10
    c85e:	48 8b 5c 24 10       	mov    0x10(%rsp),%rbx
    c863:	4c 29 d3             	sub    %r10,%rbx
    c866:	77 3b                	ja     c8a3 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x733>
    c868:	4c 39 ee             	cmp    %r13,%rsi
    c86b:	0f 84 82 01 00 00    	je     c9f3 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x883>
    c871:	49 83 c5 01          	add    $0x1,%r13
    c875:	44 89 d8             	mov    %r11d,%eax
    c878:	48 0f af c5          	imul   %rbp,%rax
    c87c:	48 c1 e8 23          	shr    $0x23,%rax
    c880:	41 83 fb 0a          	cmp    $0xa,%r11d
    c884:	41 89 c3             	mov    %eax,%r11d
    c887:	73 b7                	jae    c840 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x6d0>
    c889:	48 8d 3d 20 ff 02 00 	lea    0x2ff20(%rip),%rdi        # 3c7b0 <str.1>
    c890:	48 8d 15 f1 9c 23 00 	lea    0x239cf1(%rip),%rdx        # 246588 <__init_array_end+0x578>
    c897:	be 19 00 00 00       	mov    $0x19,%esi
    c89c:	e8 0f ab ff ff       	callq  73b0 <_ZN4core9panicking5panic17h6861470adfbddef8E>
    c8a1:	0f 0b                	ud2    
    c8a3:	44 89 de             	mov    %r11d,%esi
    c8a6:	89 f9                	mov    %edi,%ecx
    c8a8:	48 d3 e6             	shl    %cl,%rsi
    c8ab:	4d 8d 75 01          	lea    0x1(%r13),%r14
    c8af:	49 83 fd 11          	cmp    $0x11,%r13
    c8b3:	0f 83 a6 17 00 00    	jae    e05f <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x1eef>
    c8b9:	48 8b bc 24 08 01 00 	mov    0x108(%rsp),%rdi
    c8c0:	00 
    c8c1:	48 2b 7c 24 08       	sub    0x8(%rsp),%rdi
    c8c6:	4c 8d 7f 01          	lea    0x1(%rdi),%r15
    c8ca:	48 83 c7 ff          	add    $0xffffffffffffffff,%rdi
    c8ce:	48 39 f3             	cmp    %rsi,%rbx
    c8d1:	40 0f 92 c5          	setb   %bpl
    c8d5:	4c 39 d7             	cmp    %r10,%rdi
    c8d8:	0f 86 37 02 00 00    	jbe    cb15 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x9a5>
    c8de:	48 39 f3             	cmp    %rsi,%rbx
    c8e1:	0f 82 2e 02 00 00    	jb     cb15 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x9a5>
    c8e7:	49 89 fb             	mov    %rdi,%r11
    c8ea:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
    c8ef:	48 8b 7c 24 38       	mov    0x38(%rsp),%rdi
    c8f4:	48 8d 2c 0f          	lea    (%rdi,%rcx,1),%rbp
    c8f8:	48 03 ac 24 e8 00 00 	add    0xe8(%rsp),%rbp
    c8ff:	00 
    c900:	48 8b 9c 24 00 01 00 	mov    0x100(%rsp),%rbx
    c907:	00 
    c908:	48 01 eb             	add    %rbp,%rbx
    c90b:	48 2b 5c 24 08       	sub    0x8(%rsp),%rbx
    c910:	4a 8d 3c 22          	lea    (%rdx,%r12,1),%rdi
    c914:	48 29 fb             	sub    %rdi,%rbx
    c917:	4c 89 7c 24 08       	mov    %r15,0x8(%rsp)
    c91c:	4c 8b bc 24 30 01 00 	mov    0x130(%rsp),%r15
    c923:	00 
    c924:	4c 89 ff             	mov    %r15,%rdi
    c927:	48 2b bc 24 58 01 00 	sub    0x158(%rsp),%rdi
    c92e:	00 
    c92f:	48 8b 8c 24 60 01 00 	mov    0x160(%rsp),%rcx
    c936:	00 
    c937:	48 0f af f9          	imul   %rcx,%rdi
    c93b:	48 01 ef             	add    %rbp,%rdi
    c93e:	48 2b bc 24 20 01 00 	sub    0x120(%rsp),%rdi
    c945:	00 
    c946:	48 2b bc 24 28 01 00 	sub    0x128(%rsp),%rdi
    c94d:	00 
    c94e:	48 2b bc 24 f0 00 00 	sub    0xf0(%rsp),%rdi
    c955:	00 
    c956:	49 8d 2c 34          	lea    (%r12,%rsi,1),%rbp
    c95a:	48 01 d5             	add    %rdx,%rbp
    c95d:	48 29 ef             	sub    %rbp,%rdi
    c960:	48 8b ac 24 50 01 00 	mov    0x150(%rsp),%rbp
    c967:	00 
    c968:	4c 01 e5             	add    %r12,%rbp
    c96b:	48 03 ac 24 48 01 00 	add    0x148(%rsp),%rbp
    c972:	00 
    c973:	48 03 ac 24 18 01 00 	add    0x118(%rsp),%rbp
    c97a:	00 
    c97b:	4d 29 f8             	sub    %r15,%r8
    c97e:	4c 8b 7c 24 08       	mov    0x8(%rsp),%r15
    c983:	4c 0f af c1          	imul   %rcx,%r8
    c987:	49 01 e8             	add    %rbp,%r8
    c98a:	4c 2b 44 24 38       	sub    0x38(%rsp),%r8
    c98f:	4c 2b 44 24 18       	sub    0x18(%rsp),%r8
    c994:	4c 2b 84 24 e8 00 00 	sub    0xe8(%rsp),%r8
    c99b:	00 
    c99c:	49 01 d0             	add    %rdx,%r8
    c99f:	48 83 c7 02          	add    $0x2,%rdi
    c9a3:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    c9aa:	00 00 00 
    c9ad:	0f 1f 00             	nopl   (%rax)
    c9b0:	49 8d 14 32          	lea    (%r10,%rsi,1),%rdx
    c9b4:	4c 39 da             	cmp    %r11,%rdx
    c9b7:	72 0d                	jb     c9c6 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x856>
    c9b9:	4a 8d 2c 06          	lea    (%rsi,%r8,1),%rbp
    c9bd:	48 39 eb             	cmp    %rbp,%rbx
    c9c0:	0f 82 4d 01 00 00    	jb     cb13 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x9a3>
    c9c6:	04 ff                	add    $0xff,%al
    c9c8:	42 88 44 2c 20       	mov    %al,0x20(%rsp,%r13,1)
    c9cd:	48 29 f7             	sub    %rsi,%rdi
    c9d0:	40 0f 92 c5          	setb   %bpl
    c9d4:	4c 89 d9             	mov    %r11,%rcx
    c9d7:	4c 39 da             	cmp    %r11,%rdx
    c9da:	0f 83 38 01 00 00    	jae    cb18 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x9a8>
    c9e0:	48 29 f3             	sub    %rsi,%rbx
    c9e3:	49 01 f0             	add    %rsi,%r8
    c9e6:	49 89 d2             	mov    %rdx,%r10
    c9e9:	40 84 ed             	test   %bpl,%bpl
    c9ec:	74 c2                	je     c9b0 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x840>
    c9ee:	e9 25 01 00 00       	jmpq   cb18 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x9a8>
    c9f3:	49 83 c5 01          	add    $0x1,%r13
    c9f7:	b8 01 00 00 00       	mov    $0x1,%eax
    c9fc:	4d 89 ee             	mov    %r13,%r14
    c9ff:	4c 8b 9c 24 10 01 00 	mov    0x110(%rsp),%r11
    ca06:	00 
    ca07:	4c 8b 94 24 08 01 00 	mov    0x108(%rsp),%r10
    ca0e:	00 
    ca0f:	4c 8b ac 24 68 01 00 	mov    0x168(%rsp),%r13
    ca16:	00 
    ca17:	48 8b ac 24 38 01 00 	mov    0x138(%rsp),%rbp
    ca1e:	00 
    ca1f:	90                   	nop
    ca20:	49 83 fe 11          	cmp    $0x11,%r14
    ca24:	0f 84 55 15 00 00    	je     df7f <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x1e0f>
    ca2a:	48 89 c3             	mov    %rax,%rbx
    ca2d:	4d 01 e4             	add    %r12,%r12
    ca30:	4b 8d 14 a4          	lea    (%r12,%r12,4),%rdx
    ca34:	4c 89 fe             	mov    %r15,%rsi
    ca37:	4c 01 fe             	add    %r15,%rsi
    ca3a:	4c 8d 3c b6          	lea    (%rsi,%rsi,4),%r15
    ca3e:	48 01 c0             	add    %rax,%rax
    ca41:	48 8d 04 80          	lea    (%rax,%rax,4),%rax
    ca45:	49 89 d4             	mov    %rdx,%r12
    ca48:	49 21 ec             	and    %rbp,%r12
    ca4b:	89 f9                	mov    %edi,%ecx
    ca4d:	48 d3 ea             	shr    %cl,%rdx
    ca50:	8d 4a 30             	lea    0x30(%rdx),%ecx
    ca53:	42 88 4c 34 20       	mov    %cl,0x20(%rsp,%r14,1)
    ca58:	49 83 c6 01          	add    $0x1,%r14
    ca5c:	4c 89 f9             	mov    %r15,%rcx
    ca5f:	4c 29 e1             	sub    %r12,%rcx
    ca62:	76 bc                	jbe    ca20 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x8b0>
    ca64:	4c 2b 54 24 08       	sub    0x8(%rsp),%r10
    ca69:	4c 0f af d0          	imul   %rax,%r10
    ca6d:	4d 8d 04 02          	lea    (%r10,%rax,1),%r8
    ca71:	4c 39 e9             	cmp    %r13,%rcx
    ca74:	40 0f 92 c5          	setb   %bpl
    ca78:	0f 82 d8 00 00 00    	jb     cb56 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x9e6>
    ca7e:	49 29 c2             	sub    %rax,%r10
    ca81:	4c 89 d7             	mov    %r10,%rdi
    ca84:	4c 29 e7             	sub    %r12,%rdi
    ca87:	0f 86 c9 00 00 00    	jbe    cb56 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x9e6>
    ca8d:	80 c2 2f             	add    $0x2f,%dl
    ca90:	48 8d 0c b6          	lea    (%rsi,%rsi,4),%rcx
    ca94:	4b 8d 04 2c          	lea    (%r12,%r13,1),%rax
    ca98:	48 29 c1             	sub    %rax,%rcx
    ca9b:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
    caa0:	48 03 44 24 18       	add    0x18(%rsp),%rax
    caa5:	48 03 84 24 e8 00 00 	add    0xe8(%rsp),%rax
    caac:	00 
    caad:	48 03 84 24 00 01 00 	add    0x100(%rsp),%rax
    cab4:	00 
    cab5:	48 01 c0             	add    %rax,%rax
    cab8:	48 8d 34 80          	lea    (%rax,%rax,4),%rsi
    cabc:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    cac1:	48 01 c0             	add    %rax,%rax
    cac4:	48 8d 04 80          	lea    (%rax,%rax,4),%rax
    cac8:	48 29 f0             	sub    %rsi,%rax
    cacb:	48 0f af c3          	imul   %rbx,%rax
    cacf:	4c 01 e8             	add    %r13,%rax
    cad2:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    cad9:	00 00 00 
    cadc:	0f 1f 40 00          	nopl   0x0(%rax)
    cae0:	4b 8d 34 2c          	lea    (%r12,%r13,1),%rsi
    cae4:	4c 39 d6             	cmp    %r10,%rsi
    cae7:	72 09                	jb     caf2 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x982>
    cae9:	4a 8d 2c 20          	lea    (%rax,%r12,1),%rbp
    caed:	48 39 ef             	cmp    %rbp,%rdi
    caf0:	72 62                	jb     cb54 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x9e4>
    caf2:	42 88 54 34 1f       	mov    %dl,0x1f(%rsp,%r14,1)
    caf7:	4c 29 e9             	sub    %r13,%rcx
    cafa:	40 0f 92 c5          	setb   %bpl
    cafe:	4c 39 d6             	cmp    %r10,%rsi
    cb01:	73 56                	jae    cb59 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x9e9>
    cb03:	80 c2 ff             	add    $0xff,%dl
    cb06:	4c 29 ef             	sub    %r13,%rdi
    cb09:	49 89 f4             	mov    %rsi,%r12
    cb0c:	40 84 ed             	test   %bpl,%bpl
    cb0f:	74 cf                	je     cae0 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x970>
    cb11:	eb 46                	jmp    cb59 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x9e9>
    cb13:	31 ed                	xor    %ebp,%ebp
    cb15:	4c 89 d2             	mov    %r10,%rdx
    cb18:	4c 89 f8             	mov    %r15,%rax
    cb1b:	48 29 d0             	sub    %rdx,%rax
    cb1e:	4c 8b 9c 24 10 01 00 	mov    0x110(%rsp),%r11
    cb25:	00 
    cb26:	76 12                	jbe    cb3a <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x9ca>
    cb28:	40 84 ed             	test   %bpl,%bpl
    cb2b:	75 0d                	jne    cb3a <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x9ca>
    cb2d:	48 01 d6             	add    %rdx,%rsi
    cb30:	4c 29 fe             	sub    %r15,%rsi
    cb33:	72 63                	jb     cb98 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0xa28>
    cb35:	48 39 f0             	cmp    %rsi,%rax
    cb38:	73 5e                	jae    cb98 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0xa28>
    cb3a:	48 83 fa 02          	cmp    $0x2,%rdx
    cb3e:	72 58                	jb     cb98 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0xa28>
    cb40:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    cb45:	48 83 c0 fc          	add    $0xfffffffffffffffc,%rax
    cb49:	48 39 c2             	cmp    %rax,%rdx
    cb4c:	0f 86 8d 12 00 00    	jbe    dddf <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x1c6f>
    cb52:	eb 44                	jmp    cb98 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0xa28>
    cb54:	31 ed                	xor    %ebp,%ebp
    cb56:	4c 89 e6             	mov    %r12,%rsi
    cb59:	4c 89 c0             	mov    %r8,%rax
    cb5c:	48 29 f0             	sub    %rsi,%rax
    cb5f:	76 12                	jbe    cb73 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0xa03>
    cb61:	40 84 ed             	test   %bpl,%bpl
    cb64:	75 0d                	jne    cb73 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0xa03>
    cb66:	49 01 f5             	add    %rsi,%r13
    cb69:	4d 29 c5             	sub    %r8,%r13
    cb6c:	72 2a                	jb     cb98 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0xa28>
    cb6e:	4c 39 e8             	cmp    %r13,%rax
    cb71:	73 25                	jae    cb98 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0xa28>
    cb73:	48 8d 04 9d 00 00 00 	lea    0x0(,%rbx,4),%rax
    cb7a:	00 
    cb7b:	48 8d 04 80          	lea    (%rax,%rax,4),%rax
    cb7f:	48 39 f0             	cmp    %rsi,%rax
    cb82:	77 14                	ja     cb98 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0xa28>
    cb84:	48 c1 e3 03          	shl    $0x3,%rbx
    cb88:	48 8d 04 9b          	lea    (%rbx,%rbx,4),%rax
    cb8c:	49 29 c7             	sub    %rax,%r15
    cb8f:	4c 39 fe             	cmp    %r15,%rsi
    cb92:	0f 86 47 12 00 00    	jbe    dddf <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x1c6f>
    cb98:	48 8b 84 24 70 01 00 	mov    0x170(%rsp),%rax
    cb9f:	00 
    cba0:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
    cba4:	74 0a                	je     cbb0 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0xa40>
    cba6:	48 0f bd c0          	bsr    %rax,%rax
    cbaa:	48 83 f0 3f          	xor    $0x3f,%rax
    cbae:	eb 05                	jmp    cbb5 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0xa45>
    cbb0:	b8 40 00 00 00       	mov    $0x40,%eax
    cbb5:	4d 0f bf fb          	movswq %r11w,%r15
    cbb9:	4c 89 f9             	mov    %r15,%rcx
    cbbc:	48 29 c1             	sub    %rax,%rcx
    cbbf:	48 69 c1 42 4d 10 4d 	imul   $0x4d104d42,%rcx,%rax
    cbc6:	49 bd 80 50 13 44 13 	movabs $0x1344135080,%r13
    cbcd:	00 00 00 
    cbd0:	49 01 c5             	add    %rax,%r13
    cbd3:	49 c1 ed 20          	shr    $0x20,%r13
    cbd7:	44 89 e9             	mov    %r13d,%ecx
    cbda:	66 0f ef c0          	pxor   %xmm0,%xmm0
    cbde:	66 0f 7f 84 24 d0 00 	movdqa %xmm0,0xd0(%rsp)
    cbe5:	00 00 
    cbe7:	66 0f 7f 84 24 c0 00 	movdqa %xmm0,0xc0(%rsp)
    cbee:	00 00 
    cbf0:	66 0f 7f 84 24 b0 00 	movdqa %xmm0,0xb0(%rsp)
    cbf7:	00 00 
    cbf9:	66 0f 7f 84 24 a0 00 	movdqa %xmm0,0xa0(%rsp)
    cc00:	00 00 
    cc02:	66 0f 7f 84 24 90 00 	movdqa %xmm0,0x90(%rsp)
    cc09:	00 00 
    cc0b:	66 0f 7f 84 24 80 00 	movdqa %xmm0,0x80(%rsp)
    cc12:	00 00 
    cc14:	66 0f 7f 44 24 70    	movdqa %xmm0,0x70(%rsp)
    cc1a:	66 0f 7f 44 24 60    	movdqa %xmm0,0x60(%rsp)
    cc20:	66 0f 7f 44 24 50    	movdqa %xmm0,0x50(%rsp)
    cc26:	66 0f 7f 44 24 40    	movdqa %xmm0,0x40(%rsp)
    cc2c:	31 c0                	xor    %eax,%eax
    cc2e:	66 90                	xchg   %ax,%ax
    cc30:	48 83 f8 28          	cmp    $0x28,%rax
    cc34:	0f 84 d6 12 00 00    	je     df10 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x1da0>
    cc3a:	44 89 4c 84 40       	mov    %r9d,0x40(%rsp,%rax,4)
    cc3f:	49 c1 e9 20          	shr    $0x20,%r9
    cc43:	48 83 c0 01          	add    $0x1,%rax
    cc47:	4d 85 c9             	test   %r9,%r9
    cc4a:	75 e4                	jne    cc30 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0xac0>
    cc4c:	48 89 0c 24          	mov    %rcx,(%rsp)
    cc50:	4c 89 dd             	mov    %r11,%rbp
    cc53:	48 89 84 24 90 01 00 	mov    %rax,0x190(%rsp)
    cc5a:	00 
    cc5b:	48 8d bc 24 98 01 00 	lea    0x198(%rsp),%rdi
    cc62:	00 
    cc63:	4c 8d 64 24 40       	lea    0x40(%rsp),%r12
    cc68:	48 8b 1d 61 b2 23 00 	mov    0x23b261(%rip),%rbx        # 247ed0 <memcpy@GLIBC_2.14>
    cc6f:	ba a0 00 00 00       	mov    $0xa0,%edx
    cc74:	4c 89 e6             	mov    %r12,%rsi
    cc77:	ff d3                	callq  *%rbx
    cc79:	66 0f ef c0          	pxor   %xmm0,%xmm0
    cc7d:	66 0f 7f 44 24 40    	movdqa %xmm0,0x40(%rsp)
    cc83:	66 0f 7f 84 24 d0 00 	movdqa %xmm0,0xd0(%rsp)
    cc8a:	00 00 
    cc8c:	66 0f 7f 84 24 c0 00 	movdqa %xmm0,0xc0(%rsp)
    cc93:	00 00 
    cc95:	66 0f 7f 84 24 b0 00 	movdqa %xmm0,0xb0(%rsp)
    cc9c:	00 00 
    cc9e:	66 0f 7f 84 24 a0 00 	movdqa %xmm0,0xa0(%rsp)
    cca5:	00 00 
    cca7:	66 0f 7f 84 24 90 00 	movdqa %xmm0,0x90(%rsp)
    ccae:	00 00 
    ccb0:	66 0f 7f 84 24 80 00 	movdqa %xmm0,0x80(%rsp)
    ccb7:	00 00 
    ccb9:	66 0f 7f 44 24 70    	movdqa %xmm0,0x70(%rsp)
    ccbf:	66 0f 7f 44 24 60    	movdqa %xmm0,0x60(%rsp)
    ccc5:	66 0f 7f 44 24 50    	movdqa %xmm0,0x50(%rsp)
    cccb:	c7 44 24 40 01 00 00 	movl   $0x1,0x40(%rsp)
    ccd2:	00 
    ccd3:	48 c7 84 24 30 04 00 	movq   $0x1,0x430(%rsp)
    ccda:	00 01 00 00 00 
    ccdf:	4c 8d b4 24 38 04 00 	lea    0x438(%rsp),%r14
    cce6:	00 
    cce7:	ba a0 00 00 00       	mov    $0xa0,%edx
    ccec:	4c 89 f7             	mov    %r14,%rdi
    ccef:	4c 89 e6             	mov    %r12,%rsi
    ccf2:	ff d3                	callq  *%rbx
    ccf4:	66 0f ef c0          	pxor   %xmm0,%xmm0
    ccf8:	66 0f 7f 84 24 d0 00 	movdqa %xmm0,0xd0(%rsp)
    ccff:	00 00 
    cd01:	66 0f 7f 84 24 c0 00 	movdqa %xmm0,0xc0(%rsp)
    cd08:	00 00 
    cd0a:	66 0f 7f 84 24 b0 00 	movdqa %xmm0,0xb0(%rsp)
    cd11:	00 00 
    cd13:	66 0f 7f 84 24 a0 00 	movdqa %xmm0,0xa0(%rsp)
    cd1a:	00 00 
    cd1c:	66 0f 7f 84 24 90 00 	movdqa %xmm0,0x90(%rsp)
    cd23:	00 00 
    cd25:	66 0f 7f 84 24 80 00 	movdqa %xmm0,0x80(%rsp)
    cd2c:	00 00 
    cd2e:	66 0f 7f 44 24 70    	movdqa %xmm0,0x70(%rsp)
    cd34:	66 0f 7f 44 24 60    	movdqa %xmm0,0x60(%rsp)
    cd3a:	66 0f 7f 44 24 50    	movdqa %xmm0,0x50(%rsp)
    cd40:	66 0f 7f 44 24 40    	movdqa %xmm0,0x40(%rsp)
    cd46:	31 c0                	xor    %eax,%eax
    cd48:	48 8b 8c 24 f8 00 00 	mov    0xf8(%rsp),%rcx
    cd4f:	00 
    cd50:	48 83 f8 28          	cmp    $0x28,%rax
    cd54:	0f 84 b6 11 00 00    	je     df10 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x1da0>
    cd5a:	89 4c 84 40          	mov    %ecx,0x40(%rsp,%rax,4)
    cd5e:	48 c1 e9 20          	shr    $0x20,%rcx
    cd62:	48 83 c0 01          	add    $0x1,%rax
    cd66:	48 85 c9             	test   %rcx,%rcx
    cd69:	75 e5                	jne    cd50 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0xbe0>
    cd6b:	48 89 84 24 e0 02 00 	mov    %rax,0x2e0(%rsp)
    cd72:	00 
    cd73:	4c 8d a4 24 e8 02 00 	lea    0x2e8(%rsp),%r12
    cd7a:	00 
    cd7b:	48 8d 74 24 40       	lea    0x40(%rsp),%rsi
    cd80:	ba a0 00 00 00       	mov    $0xa0,%edx
    cd85:	4c 89 e7             	mov    %r12,%rdi
    cd88:	ff 15 42 b1 23 00    	callq  *0x23b142(%rip)        # 247ed0 <memcpy@GLIBC_2.14>
    cd8e:	48 c7 84 24 38 02 00 	movq   $0x1,0x238(%rsp)
    cd95:	00 01 00 00 00 
    cd9a:	c7 84 24 40 02 00 00 	movl   $0x1,0x240(%rsp)
    cda1:	01 00 00 00 
    cda5:	66 0f ef c0          	pxor   %xmm0,%xmm0
    cda9:	f3 0f 7f 84 24 44 02 	movdqu %xmm0,0x244(%rsp)
    cdb0:	00 00 
    cdb2:	f3 0f 7f 84 24 54 02 	movdqu %xmm0,0x254(%rsp)
    cdb9:	00 00 
    cdbb:	f3 0f 7f 84 24 64 02 	movdqu %xmm0,0x264(%rsp)
    cdc2:	00 00 
    cdc4:	f3 0f 7f 84 24 74 02 	movdqu %xmm0,0x274(%rsp)
    cdcb:	00 00 
    cdcd:	f3 0f 7f 84 24 84 02 	movdqu %xmm0,0x284(%rsp)
    cdd4:	00 00 
    cdd6:	f3 0f 7f 84 24 94 02 	movdqu %xmm0,0x294(%rsp)
    cddd:	00 00 
    cddf:	f3 0f 7f 84 24 a4 02 	movdqu %xmm0,0x2a4(%rsp)
    cde6:	00 00 
    cde8:	f3 0f 7f 84 24 b4 02 	movdqu %xmm0,0x2b4(%rsp)
    cdef:	00 00 
    cdf1:	f3 0f 7f 84 24 c4 02 	movdqu %xmm0,0x2c4(%rsp)
    cdf8:	00 00 
    cdfa:	f3 0f 7f 84 24 d0 02 	movdqu %xmm0,0x2d0(%rsp)
    ce01:	00 00 
    ce03:	66 85 ed             	test   %bp,%bp
    ce06:	78 2d                	js     ce35 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0xcc5>
    ce08:	48 8d bc 24 90 01 00 	lea    0x190(%rsp),%rdi
    ce0f:	00 
    ce10:	4c 89 fe             	mov    %r15,%rsi
    ce13:	e8 28 ac ff ff       	callq  7a40 <_ZN4core3num6bignum8Big32x408mul_pow217h98a8a86db4c173d2E>
    ce18:	48 8d bc 24 30 04 00 	lea    0x430(%rsp),%rdi
    ce1f:	00 
    ce20:	4c 89 fe             	mov    %r15,%rsi
    ce23:	e8 18 ac ff ff       	callq  7a40 <_ZN4core3num6bignum8Big32x408mul_pow217h98a8a86db4c173d2E>
    ce28:	48 8d bc 24 e0 02 00 	lea    0x2e0(%rsp),%rdi
    ce2f:	00 
    ce30:	4c 89 fe             	mov    %r15,%rsi
    ce33:	eb 0e                	jmp    ce43 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0xcd3>
    ce35:	f7 dd                	neg    %ebp
    ce37:	48 0f bf f5          	movswq %bp,%rsi
    ce3b:	48 8d bc 24 38 02 00 	lea    0x238(%rsp),%rdi
    ce42:	00 
    ce43:	e8 f8 ab ff ff       	callq  7a40 <_ZN4core3num6bignum8Big32x408mul_pow217h98a8a86db4c173d2E>
    ce48:	49 c1 e5 30          	shl    $0x30,%r13
    ce4c:	4c 8b 3c 24          	mov    (%rsp),%r15
    ce50:	66 45 85 ff          	test   %r15w,%r15w
    ce54:	78 0e                	js     ce64 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0xcf4>
    ce56:	49 c1 fd 30          	sar    $0x30,%r13
    ce5a:	48 8d bc 24 38 02 00 	lea    0x238(%rsp),%rdi
    ce61:	00 
    ce62:	eb 2f                	jmp    ce93 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0xd23>
    ce64:	49 f7 dd             	neg    %r13
    ce67:	49 c1 fd 30          	sar    $0x30,%r13
    ce6b:	48 8d bc 24 90 01 00 	lea    0x190(%rsp),%rdi
    ce72:	00 
    ce73:	4c 89 ee             	mov    %r13,%rsi
    ce76:	e8 85 c5 ff ff       	callq  9400 <_ZN4core3num7flt2dec8strategy6dragon9mul_pow1017h05c46b8dc6645da1E>
    ce7b:	48 8d bc 24 30 04 00 	lea    0x430(%rsp),%rdi
    ce82:	00 
    ce83:	4c 89 ee             	mov    %r13,%rsi
    ce86:	e8 75 c5 ff ff       	callq  9400 <_ZN4core3num7flt2dec8strategy6dragon9mul_pow1017h05c46b8dc6645da1E>
    ce8b:	48 8d bc 24 e0 02 00 	lea    0x2e0(%rsp),%rdi
    ce92:	00 
    ce93:	4c 89 ee             	mov    %r13,%rsi
    ce96:	e8 65 c5 ff ff       	callq  9400 <_ZN4core3num7flt2dec8strategy6dragon9mul_pow1017h05c46b8dc6645da1E>
    ce9b:	4c 8b ac 24 90 01 00 	mov    0x190(%rsp),%r13
    cea2:	00 
    cea3:	4c 89 6c 24 40       	mov    %r13,0x40(%rsp)
    cea8:	48 8d 7c 24 48       	lea    0x48(%rsp),%rdi
    cead:	ba a0 00 00 00       	mov    $0xa0,%edx
    ceb2:	48 8d b4 24 98 01 00 	lea    0x198(%rsp),%rsi
    ceb9:	00 
    ceba:	ff 15 10 b0 23 00    	callq  *0x23b010(%rip)        # 247ed0 <memcpy@GLIBC_2.14>
    cec0:	48 8b 84 24 e0 02 00 	mov    0x2e0(%rsp),%rax
    cec7:	00 
    cec8:	49 39 c5             	cmp    %rax,%r13
    cecb:	49 0f 47 c5          	cmova  %r13,%rax
    cecf:	48 83 f8 28          	cmp    $0x28,%rax
    ced3:	0f 87 28 10 00 00    	ja     df01 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x1d91>
    ced9:	31 d2                	xor    %edx,%edx
    cedb:	48 85 c0             	test   %rax,%rax
    cede:	74 0a                	je     ceea <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0xd7a>
    cee0:	48 83 f8 01          	cmp    $0x1,%rax
    cee4:	75 0b                	jne    cef1 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0xd81>
    cee6:	31 c9                	xor    %ecx,%ecx
    cee8:	eb 72                	jmp    cf5c <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0xdec>
    ceea:	31 c0                	xor    %eax,%eax
    ceec:	e9 a0 00 00 00       	jmpq   cf91 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0xe21>
    cef1:	41 89 c0             	mov    %eax,%r8d
    cef4:	41 83 e0 01          	and    $0x1,%r8d
    cef8:	48 89 c7             	mov    %rax,%rdi
    cefb:	4c 29 c7             	sub    %r8,%rdi
    cefe:	31 d2                	xor    %edx,%edx
    cf00:	31 c9                	xor    %ecx,%ecx
    cf02:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    cf09:	00 00 00 
    cf0c:	0f 1f 40 00          	nopl   0x0(%rax)
    cf10:	8b 6c 8c 48          	mov    0x48(%rsp,%rcx,4),%ebp
    cf14:	8b 74 8c 4c          	mov    0x4c(%rsp,%rcx,4),%esi
    cf18:	03 ac 8c e8 02 00 00 	add    0x2e8(%rsp,%rcx,4),%ebp
    cf1f:	0f 92 c3             	setb   %bl
    cf22:	01 d5                	add    %edx,%ebp
    cf24:	0f 92 c2             	setb   %dl
    cf27:	08 da                	or     %bl,%dl
    cf29:	0f b6 d2             	movzbl %dl,%edx
    cf2c:	89 6c 8c 48          	mov    %ebp,0x48(%rsp,%rcx,4)
    cf30:	03 b4 8c ec 02 00 00 	add    0x2ec(%rsp,%rcx,4),%esi
    cf37:	0f 92 c3             	setb   %bl
    cf3a:	01 d6                	add    %edx,%esi
    cf3c:	0f 92 c2             	setb   %dl
    cf3f:	08 da                	or     %bl,%dl
    cf41:	0f b6 d2             	movzbl %dl,%edx
    cf44:	89 74 8c 4c          	mov    %esi,0x4c(%rsp,%rcx,4)
    cf48:	48 83 c1 02          	add    $0x2,%rcx
    cf4c:	48 39 cf             	cmp    %rcx,%rdi
    cf4f:	75 bf                	jne    cf10 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0xda0>
    cf51:	4d 85 c0             	test   %r8,%r8
    cf54:	75 06                	jne    cf5c <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0xdec>
    cf56:	85 d2                	test   %edx,%edx
    cf58:	74 37                	je     cf91 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0xe21>
    cf5a:	eb 1f                	jmp    cf7b <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0xe0b>
    cf5c:	8b 74 8c 48          	mov    0x48(%rsp,%rcx,4),%esi
    cf60:	8b bc 8c e8 02 00 00 	mov    0x2e8(%rsp,%rcx,4),%edi
    cf67:	8d 2c 3e             	lea    (%rsi,%rdi,1),%ebp
    cf6a:	01 d5                	add    %edx,%ebp
    cf6c:	0f 92 c2             	setb   %dl
    cf6f:	89 6c 8c 48          	mov    %ebp,0x48(%rsp,%rcx,4)
    cf73:	01 f7                	add    %esi,%edi
    cf75:	72 04                	jb     cf7b <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0xe0b>
    cf77:	84 d2                	test   %dl,%dl
    cf79:	74 16                	je     cf91 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0xe21>
    cf7b:	48 83 f8 27          	cmp    $0x27,%rax
    cf7f:	0f 87 e4 0f 00 00    	ja     df69 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x1df9>
    cf85:	c7 44 84 48 01 00 00 	movl   $0x1,0x48(%rsp,%rax,4)
    cf8c:	00 
    cf8d:	48 83 c0 01          	add    $0x1,%rax
    cf91:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
    cf96:	48 8b bc 24 38 02 00 	mov    0x238(%rsp),%rdi
    cf9d:	00 
    cf9e:	48 39 c7             	cmp    %rax,%rdi
    cfa1:	48 0f 47 c7          	cmova  %rdi,%rax
    cfa5:	48 83 f8 29          	cmp    $0x29,%rax
    cfa9:	0f 83 52 0f 00 00    	jae    df01 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x1d91>
    cfaf:	48 c1 e0 02          	shl    $0x2,%rax
    cfb3:	48 85 c0             	test   %rax,%rax
    cfb6:	75 15                	jne    cfcd <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0xe5d>
    cfb8:	eb 33                	jmp    cfed <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0xe7d>
    cfba:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    cfc0:	48 83 c0 fc          	add    $0xfffffffffffffffc,%rax
    cfc4:	84 d2                	test   %dl,%dl
    cfc6:	75 2a                	jne    cff2 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0xe82>
    cfc8:	48 85 c0             	test   %rax,%rax
    cfcb:	74 20                	je     cfed <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0xe7d>
    cfcd:	74 35                	je     d004 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0xe94>
    cfcf:	8b 8c 04 3c 02 00 00 	mov    0x23c(%rsp,%rax,1),%ecx
    cfd6:	31 f6                	xor    %esi,%esi
    cfd8:	ba ff 00 00 00       	mov    $0xff,%edx
    cfdd:	3b 4c 04 44          	cmp    0x44(%rsp,%rax,1),%ecx
    cfe1:	0f 95 c1             	setne  %cl
    cfe4:	72 da                	jb     cfc0 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0xe50>
    cfe6:	40 88 ce             	mov    %cl,%sil
    cfe9:	89 f2                	mov    %esi,%edx
    cfeb:	eb d3                	jmp    cfc0 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0xe50>
    cfed:	48 f7 d8             	neg    %rax
    cff0:	18 d2                	sbb    %dl,%dl
    cff2:	3a 94 24 40 01 00 00 	cmp    0x140(%rsp),%dl
    cff9:	7d 09                	jge    d004 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0xe94>
    cffb:	41 83 c7 01          	add    $0x1,%r15d
    cfff:	e9 52 03 00 00       	jmpq   d356 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x11e6>
    d004:	49 83 fd 29          	cmp    $0x29,%r13
    d008:	0f 83 1a 0f 00 00    	jae    df28 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x1db8>
    d00e:	4d 85 ed             	test   %r13,%r13
    d011:	74 3a                	je     d04d <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0xedd>
    d013:	4a 8d 0c ad fc ff ff 	lea    -0x4(,%r13,4),%rcx
    d01a:	ff 
    d01b:	48 89 ce             	mov    %rcx,%rsi
    d01e:	48 c1 ee 02          	shr    $0x2,%rsi
    d022:	48 83 c6 01          	add    $0x1,%rsi
    d026:	89 f0                	mov    %esi,%eax
    d028:	83 e0 03             	and    $0x3,%eax
    d02b:	48 83 f9 0c          	cmp    $0xc,%rcx
    d02f:	0f 83 c6 00 00 00    	jae    d0fb <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0xf8b>
    d035:	31 d2                	xor    %edx,%edx
    d037:	48 8d 8c 24 98 01 00 	lea    0x198(%rsp),%rcx
    d03e:	00 
    d03f:	48 85 c0             	test   %rax,%rax
    d042:	0f 85 24 01 00 00    	jne    d16c <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0xffc>
    d048:	e9 3e 01 00 00       	jmpq   d18b <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x101b>
    d04d:	45 31 ed             	xor    %r13d,%r13d
    d050:	4c 89 ac 24 90 01 00 	mov    %r13,0x190(%rsp)
    d057:	00 
    d058:	48 8b 84 24 30 04 00 	mov    0x430(%rsp),%rax
    d05f:	00 
    d060:	48 83 f8 29          	cmp    $0x29,%rax
    d064:	0f 83 97 0e 00 00    	jae    df01 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x1d91>
    d06a:	48 85 c0             	test   %rax,%rax
    d06d:	74 32                	je     d0a1 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0xf31>
    d06f:	48 8d 14 85 fc ff ff 	lea    -0x4(,%rax,4),%rdx
    d076:	ff 
    d077:	48 89 d6             	mov    %rdx,%rsi
    d07a:	48 c1 ee 02          	shr    $0x2,%rsi
    d07e:	48 83 c6 01          	add    $0x1,%rsi
    d082:	89 f1                	mov    %esi,%ecx
    d084:	83 e1 03             	and    $0x3,%ecx
    d087:	48 83 fa 0c          	cmp    $0xc,%rdx
    d08b:	0f 83 33 01 00 00    	jae    d1c4 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x1054>
    d091:	31 d2                	xor    %edx,%edx
    d093:	48 85 c9             	test   %rcx,%rcx
    d096:	0f 85 98 01 00 00    	jne    d234 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x10c4>
    d09c:	e9 bc 01 00 00       	jmpq   d25d <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x10ed>
    d0a1:	31 c0                	xor    %eax,%eax
    d0a3:	48 89 84 24 30 04 00 	mov    %rax,0x430(%rsp)
    d0aa:	00 
    d0ab:	48 8b 84 24 e0 02 00 	mov    0x2e0(%rsp),%rax
    d0b2:	00 
    d0b3:	48 83 f8 29          	cmp    $0x29,%rax
    d0b7:	0f 83 44 0e 00 00    	jae    df01 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x1d91>
    d0bd:	48 85 c0             	test   %rax,%rax
    d0c0:	74 32                	je     d0f4 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0xf84>
    d0c2:	48 8d 14 85 fc ff ff 	lea    -0x4(,%rax,4),%rdx
    d0c9:	ff 
    d0ca:	48 89 d6             	mov    %rdx,%rsi
    d0cd:	48 c1 ee 02          	shr    $0x2,%rsi
    d0d1:	48 83 c6 01          	add    $0x1,%rsi
    d0d5:	89 f1                	mov    %esi,%ecx
    d0d7:	83 e1 03             	and    $0x3,%ecx
    d0da:	48 83 fa 0c          	cmp    $0xc,%rdx
    d0de:	0f 83 b1 01 00 00    	jae    d295 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x1125>
    d0e4:	31 d2                	xor    %edx,%edx
    d0e6:	48 85 c9             	test   %rcx,%rcx
    d0e9:	0f 85 1d 02 00 00    	jne    d30c <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x119c>
    d0ef:	e9 39 02 00 00       	jmpq   d32d <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x11bd>
    d0f4:	31 c0                	xor    %eax,%eax
    d0f6:	e9 4b 02 00 00       	jmpq   d346 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x11d6>
    d0fb:	48 29 c6             	sub    %rax,%rsi
    d0fe:	31 d2                	xor    %edx,%edx
    d100:	48 8d 8c 24 98 01 00 	lea    0x198(%rsp),%rcx
    d107:	00 
    d108:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    d10f:	00 
    d110:	8b 39                	mov    (%rcx),%edi
    d112:	8b 69 04             	mov    0x4(%rcx),%ebp
    d115:	48 8d 3c bf          	lea    (%rdi,%rdi,4),%rdi
    d119:	48 8d 14 7a          	lea    (%rdx,%rdi,2),%rdx
    d11d:	89 11                	mov    %edx,(%rcx)
    d11f:	48 c1 ea 20          	shr    $0x20,%rdx
    d123:	48 8d 3c ad 00 00 00 	lea    0x0(,%rbp,4),%rdi
    d12a:	00 
    d12b:	48 01 ef             	add    %rbp,%rdi
    d12e:	48 8d 14 7a          	lea    (%rdx,%rdi,2),%rdx
    d132:	89 51 04             	mov    %edx,0x4(%rcx)
    d135:	48 c1 ea 20          	shr    $0x20,%rdx
    d139:	8b 79 08             	mov    0x8(%rcx),%edi
    d13c:	48 8d 3c bf          	lea    (%rdi,%rdi,4),%rdi
    d140:	48 8d 14 7a          	lea    (%rdx,%rdi,2),%rdx
    d144:	89 51 08             	mov    %edx,0x8(%rcx)
    d147:	48 c1 ea 20          	shr    $0x20,%rdx
    d14b:	8b 79 0c             	mov    0xc(%rcx),%edi
    d14e:	48 8d 3c bf          	lea    (%rdi,%rdi,4),%rdi
    d152:	48 8d 14 7a          	lea    (%rdx,%rdi,2),%rdx
    d156:	89 51 0c             	mov    %edx,0xc(%rcx)
    d159:	48 c1 ea 20          	shr    $0x20,%rdx
    d15d:	48 83 c1 10          	add    $0x10,%rcx
    d161:	48 83 c6 fc          	add    $0xfffffffffffffffc,%rsi
    d165:	75 a9                	jne    d110 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0xfa0>
    d167:	48 85 c0             	test   %rax,%rax
    d16a:	74 1f                	je     d18b <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x101b>
    d16c:	31 f6                	xor    %esi,%esi
    d16e:	66 90                	xchg   %ax,%ax
    d170:	8b 3c b1             	mov    (%rcx,%rsi,4),%edi
    d173:	48 8d 3c bf          	lea    (%rdi,%rdi,4),%rdi
    d177:	48 8d 14 7a          	lea    (%rdx,%rdi,2),%rdx
    d17b:	89 14 b1             	mov    %edx,(%rcx,%rsi,4)
    d17e:	48 c1 ea 20          	shr    $0x20,%rdx
    d182:	48 83 c6 01          	add    $0x1,%rsi
    d186:	48 39 f0             	cmp    %rsi,%rax
    d189:	75 e5                	jne    d170 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x1000>
    d18b:	85 d2                	test   %edx,%edx
    d18d:	74 16                	je     d1a5 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x1035>
    d18f:	49 83 fd 27          	cmp    $0x27,%r13
    d193:	0f 87 fc 0d 00 00    	ja     df95 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x1e25>
    d199:	42 89 94 ac 98 01 00 	mov    %edx,0x198(%rsp,%r13,4)
    d1a0:	00 
    d1a1:	49 83 c5 01          	add    $0x1,%r13
    d1a5:	4c 89 ac 24 90 01 00 	mov    %r13,0x190(%rsp)
    d1ac:	00 
    d1ad:	48 8b 84 24 30 04 00 	mov    0x430(%rsp),%rax
    d1b4:	00 
    d1b5:	48 83 f8 29          	cmp    $0x29,%rax
    d1b9:	0f 82 ab fe ff ff    	jb     d06a <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0xefa>
    d1bf:	e9 3d 0d 00 00       	jmpq   df01 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x1d91>
    d1c4:	48 29 ce             	sub    %rcx,%rsi
    d1c7:	31 d2                	xor    %edx,%edx
    d1c9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    d1d0:	41 8b 3e             	mov    (%r14),%edi
    d1d3:	41 8b 6e 04          	mov    0x4(%r14),%ebp
    d1d7:	48 8d 3c bf          	lea    (%rdi,%rdi,4),%rdi
    d1db:	48 8d 14 7a          	lea    (%rdx,%rdi,2),%rdx
    d1df:	41 89 16             	mov    %edx,(%r14)
    d1e2:	48 c1 ea 20          	shr    $0x20,%rdx
    d1e6:	48 8d 3c ad 00 00 00 	lea    0x0(,%rbp,4),%rdi
    d1ed:	00 
    d1ee:	48 01 ef             	add    %rbp,%rdi
    d1f1:	48 8d 14 7a          	lea    (%rdx,%rdi,2),%rdx
    d1f5:	41 89 56 04          	mov    %edx,0x4(%r14)
    d1f9:	48 c1 ea 20          	shr    $0x20,%rdx
    d1fd:	41 8b 7e 08          	mov    0x8(%r14),%edi
    d201:	48 8d 3c bf          	lea    (%rdi,%rdi,4),%rdi
    d205:	48 8d 14 7a          	lea    (%rdx,%rdi,2),%rdx
    d209:	41 89 56 08          	mov    %edx,0x8(%r14)
    d20d:	48 c1 ea 20          	shr    $0x20,%rdx
    d211:	41 8b 7e 0c          	mov    0xc(%r14),%edi
    d215:	48 8d 3c bf          	lea    (%rdi,%rdi,4),%rdi
    d219:	48 8d 14 7a          	lea    (%rdx,%rdi,2),%rdx
    d21d:	41 89 56 0c          	mov    %edx,0xc(%r14)
    d221:	48 c1 ea 20          	shr    $0x20,%rdx
    d225:	49 83 c6 10          	add    $0x10,%r14
    d229:	48 83 c6 fc          	add    $0xfffffffffffffffc,%rsi
    d22d:	75 a1                	jne    d1d0 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x1060>
    d22f:	48 85 c9             	test   %rcx,%rcx
    d232:	74 29                	je     d25d <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x10ed>
    d234:	31 f6                	xor    %esi,%esi
    d236:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    d23d:	00 00 00 
    d240:	41 8b 3c b6          	mov    (%r14,%rsi,4),%edi
    d244:	48 8d 3c bf          	lea    (%rdi,%rdi,4),%rdi
    d248:	48 8d 14 7a          	lea    (%rdx,%rdi,2),%rdx
    d24c:	41 89 14 b6          	mov    %edx,(%r14,%rsi,4)
    d250:	48 c1 ea 20          	shr    $0x20,%rdx
    d254:	48 83 c6 01          	add    $0x1,%rsi
    d258:	48 39 f1             	cmp    %rsi,%rcx
    d25b:	75 e3                	jne    d240 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x10d0>
    d25d:	85 d2                	test   %edx,%edx
    d25f:	74 15                	je     d276 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x1106>
    d261:	48 83 f8 27          	cmp    $0x27,%rax
    d265:	0f 87 fe 0c 00 00    	ja     df69 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x1df9>
    d26b:	89 94 84 38 04 00 00 	mov    %edx,0x438(%rsp,%rax,4)
    d272:	48 83 c0 01          	add    $0x1,%rax
    d276:	48 89 84 24 30 04 00 	mov    %rax,0x430(%rsp)
    d27d:	00 
    d27e:	48 8b 84 24 e0 02 00 	mov    0x2e0(%rsp),%rax
    d285:	00 
    d286:	48 83 f8 29          	cmp    $0x29,%rax
    d28a:	0f 82 2d fe ff ff    	jb     d0bd <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0xf4d>
    d290:	e9 6c 0c 00 00       	jmpq   df01 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x1d91>
    d295:	48 29 ce             	sub    %rcx,%rsi
    d298:	31 d2                	xor    %edx,%edx
    d29a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    d2a0:	41 8b 3c 24          	mov    (%r12),%edi
    d2a4:	41 8b 6c 24 04       	mov    0x4(%r12),%ebp
    d2a9:	48 8d 3c bf          	lea    (%rdi,%rdi,4),%rdi
    d2ad:	48 8d 14 7a          	lea    (%rdx,%rdi,2),%rdx
    d2b1:	41 89 14 24          	mov    %edx,(%r12)
    d2b5:	48 c1 ea 20          	shr    $0x20,%rdx
    d2b9:	48 8d 3c ad 00 00 00 	lea    0x0(,%rbp,4),%rdi
    d2c0:	00 
    d2c1:	48 01 ef             	add    %rbp,%rdi
    d2c4:	48 8d 14 7a          	lea    (%rdx,%rdi,2),%rdx
    d2c8:	41 89 54 24 04       	mov    %edx,0x4(%r12)
    d2cd:	48 c1 ea 20          	shr    $0x20,%rdx
    d2d1:	41 8b 7c 24 08       	mov    0x8(%r12),%edi
    d2d6:	48 8d 3c bf          	lea    (%rdi,%rdi,4),%rdi
    d2da:	48 8d 14 7a          	lea    (%rdx,%rdi,2),%rdx
    d2de:	41 89 54 24 08       	mov    %edx,0x8(%r12)
    d2e3:	48 c1 ea 20          	shr    $0x20,%rdx
    d2e7:	41 8b 7c 24 0c       	mov    0xc(%r12),%edi
    d2ec:	48 8d 3c bf          	lea    (%rdi,%rdi,4),%rdi
    d2f0:	48 8d 14 7a          	lea    (%rdx,%rdi,2),%rdx
    d2f4:	41 89 54 24 0c       	mov    %edx,0xc(%r12)
    d2f9:	48 c1 ea 20          	shr    $0x20,%rdx
    d2fd:	49 83 c4 10          	add    $0x10,%r12
    d301:	48 83 c6 fc          	add    $0xfffffffffffffffc,%rsi
    d305:	75 99                	jne    d2a0 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x1130>
    d307:	48 85 c9             	test   %rcx,%rcx
    d30a:	74 21                	je     d32d <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x11bd>
    d30c:	31 f6                	xor    %esi,%esi
    d30e:	66 90                	xchg   %ax,%ax
    d310:	41 8b 3c b4          	mov    (%r12,%rsi,4),%edi
    d314:	48 8d 3c bf          	lea    (%rdi,%rdi,4),%rdi
    d318:	48 8d 14 7a          	lea    (%rdx,%rdi,2),%rdx
    d31c:	41 89 14 b4          	mov    %edx,(%r12,%rsi,4)
    d320:	48 c1 ea 20          	shr    $0x20,%rdx
    d324:	48 83 c6 01          	add    $0x1,%rsi
    d328:	48 39 f1             	cmp    %rsi,%rcx
    d32b:	75 e3                	jne    d310 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x11a0>
    d32d:	85 d2                	test   %edx,%edx
    d32f:	74 15                	je     d346 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x11d6>
    d331:	48 83 f8 27          	cmp    $0x27,%rax
    d335:	0f 87 2e 0c 00 00    	ja     df69 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x1df9>
    d33b:	89 94 84 e8 02 00 00 	mov    %edx,0x2e8(%rsp,%rax,4)
    d342:	48 83 c0 01          	add    $0x1,%rax
    d346:	48 89 84 24 e0 02 00 	mov    %rax,0x2e0(%rsp)
    d34d:	00 
    d34e:	48 8b bc 24 38 02 00 	mov    0x238(%rsp),%rdi
    d355:	00 
    d356:	4c 89 3c 24          	mov    %r15,(%rsp)
    d35a:	48 8d 9c 24 40 02 00 	lea    0x240(%rsp),%rbx
    d361:	00 
    d362:	48 89 bc 24 80 05 00 	mov    %rdi,0x580(%rsp)
    d369:	00 
    d36a:	48 8d bc 24 88 05 00 	lea    0x588(%rsp),%rdi
    d371:	00 
    d372:	ba a0 00 00 00       	mov    $0xa0,%edx
    d377:	48 89 de             	mov    %rbx,%rsi
    d37a:	48 8b 05 4f ab 23 00 	mov    0x23ab4f(%rip),%rax        # 247ed0 <memcpy@GLIBC_2.14>
    d381:	48 89 c5             	mov    %rax,%rbp
    d384:	ff d0                	callq  *%rax
    d386:	48 8d bc 24 80 05 00 	lea    0x580(%rsp),%rdi
    d38d:	00 
    d38e:	be 01 00 00 00       	mov    $0x1,%esi
    d393:	e8 a8 a6 ff ff       	callq  7a40 <_ZN4core3num6bignum8Big32x408mul_pow217h98a8a86db4c173d2E>
    d398:	48 8b 84 24 38 02 00 	mov    0x238(%rsp),%rax
    d39f:	00 
    d3a0:	48 89 84 24 d8 04 00 	mov    %rax,0x4d8(%rsp)
    d3a7:	00 
    d3a8:	48 8d bc 24 e0 04 00 	lea    0x4e0(%rsp),%rdi
    d3af:	00 
    d3b0:	ba a0 00 00 00       	mov    $0xa0,%edx
    d3b5:	48 89 de             	mov    %rbx,%rsi
    d3b8:	ff d5                	callq  *%rbp
    d3ba:	48 8d bc 24 d8 04 00 	lea    0x4d8(%rsp),%rdi
    d3c1:	00 
    d3c2:	be 02 00 00 00       	mov    $0x2,%esi
    d3c7:	e8 74 a6 ff ff       	callq  7a40 <_ZN4core3num6bignum8Big32x408mul_pow217h98a8a86db4c173d2E>
    d3cc:	48 8b 84 24 38 02 00 	mov    0x238(%rsp),%rax
    d3d3:	00 
    d3d4:	48 89 84 24 88 03 00 	mov    %rax,0x388(%rsp)
    d3db:	00 
    d3dc:	48 8d bc 24 90 03 00 	lea    0x390(%rsp),%rdi
    d3e3:	00 
    d3e4:	ba a0 00 00 00       	mov    $0xa0,%edx
    d3e9:	48 89 de             	mov    %rbx,%rsi
    d3ec:	ff d5                	callq  *%rbp
    d3ee:	48 8d bc 24 88 03 00 	lea    0x388(%rsp),%rdi
    d3f5:	00 
    d3f6:	be 03 00 00 00       	mov    $0x3,%esi
    d3fb:	e8 40 a6 ff ff       	callq  7a40 <_ZN4core3num6bignum8Big32x408mul_pow217h98a8a86db4c173d2E>
    d400:	48 8b 84 24 90 01 00 	mov    0x190(%rsp),%rax
    d407:	00 
    d408:	48 8b bc 24 88 03 00 	mov    0x388(%rsp),%rdi
    d40f:	00 
    d410:	48 39 f8             	cmp    %rdi,%rax
    d413:	48 0f 47 f8          	cmova  %rax,%rdi
    d417:	48 83 ff 28          	cmp    $0x28,%rdi
    d41b:	0f 87 d4 0a 00 00    	ja     def5 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x1d85>
    d421:	45 31 f6             	xor    %r14d,%r14d
    d424:	4d 89 f7             	mov    %r14,%r15
    d427:	48 8d 0c bd 00 00 00 	lea    0x0(,%rdi,4),%rcx
    d42e:	00 
    d42f:	48 85 c9             	test   %rcx,%rcx
    d432:	75 59                	jne    d48d <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x131d>
    d434:	eb 7a                	jmp    d4b0 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x1340>
    d436:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    d43d:	00 00 00 
    d440:	31 c0                	xor    %eax,%eax
    d442:	48 89 84 24 e0 02 00 	mov    %rax,0x2e0(%rsp)
    d449:	00 
    d44a:	48 8b 84 24 90 01 00 	mov    0x190(%rsp),%rax
    d451:	00 
    d452:	48 8b bc 24 88 03 00 	mov    0x388(%rsp),%rdi
    d459:	00 
    d45a:	48 39 f8             	cmp    %rdi,%rax
    d45d:	48 0f 47 f8          	cmova  %rax,%rdi
    d461:	48 83 ff 28          	cmp    $0x28,%rdi
    d465:	0f 87 8a 0a 00 00    	ja     def5 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x1d85>
    d46b:	4d 89 f7             	mov    %r14,%r15
    d46e:	48 8d 0c bd 00 00 00 	lea    0x0(,%rdi,4),%rcx
    d475:	00 
    d476:	48 85 c9             	test   %rcx,%rcx
    d479:	75 12                	jne    d48d <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x131d>
    d47b:	eb 33                	jmp    d4b0 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x1340>
    d47d:	0f 1f 00             	nopl   (%rax)
    d480:	48 83 c1 fc          	add    $0xfffffffffffffffc,%rcx
    d484:	84 d2                	test   %dl,%dl
    d486:	75 2d                	jne    d4b5 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x1345>
    d488:	48 85 c9             	test   %rcx,%rcx
    d48b:	74 23                	je     d4b0 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x1340>
    d48d:	74 2b                	je     d4ba <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x134a>
    d48f:	8b ac 0c 94 01 00 00 	mov    0x194(%rsp,%rcx,1),%ebp
    d496:	31 f6                	xor    %esi,%esi
    d498:	ba ff 00 00 00       	mov    $0xff,%edx
    d49d:	3b ac 0c 8c 03 00 00 	cmp    0x38c(%rsp,%rcx,1),%ebp
    d4a4:	0f 95 c3             	setne  %bl
    d4a7:	72 d7                	jb     d480 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x1310>
    d4a9:	40 88 de             	mov    %bl,%sil
    d4ac:	89 f2                	mov    %esi,%edx
    d4ae:	eb d0                	jmp    d480 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x1310>
    d4b0:	48 f7 d9             	neg    %rcx
    d4b3:	18 d2                	sbb    %dl,%dl
    d4b5:	80 fa 01             	cmp    $0x1,%dl
    d4b8:	77 66                	ja     d520 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x13b0>
    d4ba:	48 85 ff             	test   %rdi,%rdi
    d4bd:	74 46                	je     d505 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x1395>
    d4bf:	b9 01 00 00 00       	mov    $0x1,%ecx
    d4c4:	31 c0                	xor    %eax,%eax
    d4c6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    d4cd:	00 00 00 
    d4d0:	8b b4 84 90 03 00 00 	mov    0x390(%rsp,%rax,4),%esi
    d4d7:	f7 d6                	not    %esi
    d4d9:	03 b4 84 98 01 00 00 	add    0x198(%rsp,%rax,4),%esi
    d4e0:	0f 92 c3             	setb   %bl
    d4e3:	01 ce                	add    %ecx,%esi
    d4e5:	0f 92 c2             	setb   %dl
    d4e8:	08 da                	or     %bl,%dl
    d4ea:	0f b6 ca             	movzbl %dl,%ecx
    d4ed:	89 b4 84 98 01 00 00 	mov    %esi,0x198(%rsp,%rax,4)
    d4f4:	48 83 c0 01          	add    $0x1,%rax
    d4f8:	48 39 c7             	cmp    %rax,%rdi
    d4fb:	75 d3                	jne    d4d0 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x1360>
    d4fd:	84 d2                	test   %dl,%dl
    d4ff:	0f 84 32 0a 00 00    	je     df37 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x1dc7>
    d505:	48 89 bc 24 90 01 00 	mov    %rdi,0x190(%rsp)
    d50c:	00 
    d50d:	41 b0 08             	mov    $0x8,%r8b
    d510:	eb 14                	jmp    d526 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x13b6>
    d512:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    d519:	00 00 00 
    d51c:	0f 1f 40 00          	nopl   0x0(%rax)
    d520:	45 31 c0             	xor    %r8d,%r8d
    d523:	48 89 c7             	mov    %rax,%rdi
    d526:	48 8b ac 24 d8 04 00 	mov    0x4d8(%rsp),%rbp
    d52d:	00 
    d52e:	48 39 ef             	cmp    %rbp,%rdi
    d531:	48 0f 47 ef          	cmova  %rdi,%rbp
    d535:	48 83 fd 29          	cmp    $0x29,%rbp
    d539:	0f 83 a7 09 00 00    	jae    dee6 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x1d76>
    d53f:	48 8d 14 ad 00 00 00 	lea    0x0(,%rbp,4),%rdx
    d546:	00 
    d547:	48 85 d2             	test   %rdx,%rdx
    d54a:	75 12                	jne    d55e <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x13ee>
    d54c:	eb 32                	jmp    d580 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x1410>
    d54e:	66 90                	xchg   %ax,%ax
    d550:	48 83 c2 fc          	add    $0xfffffffffffffffc,%rdx
    d554:	40 84 f6             	test   %sil,%sil
    d557:	75 2d                	jne    d586 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x1416>
    d559:	48 85 d2             	test   %rdx,%rdx
    d55c:	74 22                	je     d580 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x1410>
    d55e:	74 2c                	je     d58c <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x141c>
    d560:	8b 9c 14 94 01 00 00 	mov    0x194(%rsp,%rdx,1),%ebx
    d567:	31 c9                	xor    %ecx,%ecx
    d569:	be ff 00 00 00       	mov    $0xff,%esi
    d56e:	3b 9c 14 dc 04 00 00 	cmp    0x4dc(%rsp,%rdx,1),%ebx
    d575:	0f 95 c3             	setne  %bl
    d578:	72 d6                	jb     d550 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x13e0>
    d57a:	88 d9                	mov    %bl,%cl
    d57c:	89 ce                	mov    %ecx,%esi
    d57e:	eb d0                	jmp    d550 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x13e0>
    d580:	48 f7 da             	neg    %rdx
    d583:	40 18 f6             	sbb    %sil,%sil
    d586:	40 80 fe 01          	cmp    $0x1,%sil
    d58a:	77 64                	ja     d5f0 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x1480>
    d58c:	48 85 ed             	test   %rbp,%rbp
    d58f:	74 44                	je     d5d5 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x1465>
    d591:	be 01 00 00 00       	mov    $0x1,%esi
    d596:	31 d2                	xor    %edx,%edx
    d598:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    d59f:	00 
    d5a0:	8b 8c 94 e0 04 00 00 	mov    0x4e0(%rsp,%rdx,4),%ecx
    d5a7:	f7 d1                	not    %ecx
    d5a9:	03 8c 94 98 01 00 00 	add    0x198(%rsp,%rdx,4),%ecx
    d5b0:	0f 92 c0             	setb   %al
    d5b3:	01 f1                	add    %esi,%ecx
    d5b5:	0f 92 c3             	setb   %bl
    d5b8:	08 c3                	or     %al,%bl
    d5ba:	0f b6 f3             	movzbl %bl,%esi
    d5bd:	89 8c 94 98 01 00 00 	mov    %ecx,0x198(%rsp,%rdx,4)
    d5c4:	48 83 c2 01          	add    $0x1,%rdx
    d5c8:	48 39 ea             	cmp    %rbp,%rdx
    d5cb:	72 d3                	jb     d5a0 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x1430>
    d5cd:	84 db                	test   %bl,%bl
    d5cf:	0f 84 62 09 00 00    	je     df37 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x1dc7>
    d5d5:	48 89 ac 24 90 01 00 	mov    %rbp,0x190(%rsp)
    d5dc:	00 
    d5dd:	41 80 c8 04          	or     $0x4,%r8b
    d5e1:	eb 10                	jmp    d5f3 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x1483>
    d5e3:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    d5ea:	00 00 00 
    d5ed:	0f 1f 00             	nopl   (%rax)
    d5f0:	48 89 fd             	mov    %rdi,%rbp
    d5f3:	48 8b bc 24 80 05 00 	mov    0x580(%rsp),%rdi
    d5fa:	00 
    d5fb:	48 39 fd             	cmp    %rdi,%rbp
    d5fe:	48 0f 47 fd          	cmova  %rbp,%rdi
    d602:	48 83 ff 29          	cmp    $0x29,%rdi
    d606:	0f 83 e9 08 00 00    	jae    def5 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x1d85>
    d60c:	48 8d 14 bd 00 00 00 	lea    0x0(,%rdi,4),%rdx
    d613:	00 
    d614:	48 85 d2             	test   %rdx,%rdx
    d617:	75 15                	jne    d62e <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x14be>
    d619:	eb 35                	jmp    d650 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x14e0>
    d61b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    d620:	48 83 c2 fc          	add    $0xfffffffffffffffc,%rdx
    d624:	40 84 f6             	test   %sil,%sil
    d627:	75 2d                	jne    d656 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x14e6>
    d629:	48 85 d2             	test   %rdx,%rdx
    d62c:	74 22                	je     d650 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x14e0>
    d62e:	74 2c                	je     d65c <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x14ec>
    d630:	8b 84 14 94 01 00 00 	mov    0x194(%rsp,%rdx,1),%eax
    d637:	31 c9                	xor    %ecx,%ecx
    d639:	be ff 00 00 00       	mov    $0xff,%esi
    d63e:	3b 84 14 84 05 00 00 	cmp    0x584(%rsp,%rdx,1),%eax
    d645:	0f 95 c3             	setne  %bl
    d648:	72 d6                	jb     d620 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x14b0>
    d64a:	88 d9                	mov    %bl,%cl
    d64c:	89 ce                	mov    %ecx,%esi
    d64e:	eb d0                	jmp    d620 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x14b0>
    d650:	48 f7 da             	neg    %rdx
    d653:	40 18 f6             	sbb    %sil,%sil
    d656:	40 80 fe 01          	cmp    $0x1,%sil
    d65a:	77 64                	ja     d6c0 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x1550>
    d65c:	48 85 ff             	test   %rdi,%rdi
    d65f:	74 46                	je     d6a7 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x1537>
    d661:	ba 01 00 00 00       	mov    $0x1,%edx
    d666:	31 c0                	xor    %eax,%eax
    d668:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    d66f:	00 
    d670:	8b 8c 84 88 05 00 00 	mov    0x588(%rsp,%rax,4),%ecx
    d677:	f7 d1                	not    %ecx
    d679:	03 8c 84 98 01 00 00 	add    0x198(%rsp,%rax,4),%ecx
    d680:	40 0f 92 c6          	setb   %sil
    d684:	01 d1                	add    %edx,%ecx
    d686:	0f 92 c3             	setb   %bl
    d689:	40 08 f3             	or     %sil,%bl
    d68c:	0f b6 d3             	movzbl %bl,%edx
    d68f:	89 8c 84 98 01 00 00 	mov    %ecx,0x198(%rsp,%rax,4)
    d696:	48 83 c0 01          	add    $0x1,%rax
    d69a:	48 39 f8             	cmp    %rdi,%rax
    d69d:	72 d1                	jb     d670 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x1500>
    d69f:	84 db                	test   %bl,%bl
    d6a1:	0f 84 90 08 00 00    	je     df37 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x1dc7>
    d6a7:	48 89 bc 24 90 01 00 	mov    %rdi,0x190(%rsp)
    d6ae:	00 
    d6af:	41 80 c0 02          	add    $0x2,%r8b
    d6b3:	eb 0e                	jmp    d6c3 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x1553>
    d6b5:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    d6bc:	00 00 00 
    d6bf:	90                   	nop
    d6c0:	48 89 ef             	mov    %rbp,%rdi
    d6c3:	4c 8b b4 24 38 02 00 	mov    0x238(%rsp),%r14
    d6ca:	00 
    d6cb:	4c 39 f7             	cmp    %r14,%rdi
    d6ce:	4d 89 f5             	mov    %r14,%r13
    d6d1:	4c 0f 47 ef          	cmova  %rdi,%r13
    d6d5:	49 83 fd 29          	cmp    $0x29,%r13
    d6d9:	0f 83 49 08 00 00    	jae    df28 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x1db8>
    d6df:	4a 8d 04 ad 00 00 00 	lea    0x0(,%r13,4),%rax
    d6e6:	00 
    d6e7:	48 85 c0             	test   %rax,%rax
    d6ea:	75 11                	jne    d6fd <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x158d>
    d6ec:	eb 32                	jmp    d720 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x15b0>
    d6ee:	66 90                	xchg   %ax,%ax
    d6f0:	48 83 c0 fc          	add    $0xfffffffffffffffc,%rax
    d6f4:	84 d2                	test   %dl,%dl
    d6f6:	75 2d                	jne    d725 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x15b5>
    d6f8:	48 85 c0             	test   %rax,%rax
    d6fb:	74 23                	je     d720 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x15b0>
    d6fd:	74 2b                	je     d72a <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x15ba>
    d6ff:	8b b4 04 94 01 00 00 	mov    0x194(%rsp,%rax,1),%esi
    d706:	31 c9                	xor    %ecx,%ecx
    d708:	ba ff 00 00 00       	mov    $0xff,%edx
    d70d:	3b b4 04 3c 02 00 00 	cmp    0x23c(%rsp,%rax,1),%esi
    d714:	0f 95 c3             	setne  %bl
    d717:	72 d7                	jb     d6f0 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x1580>
    d719:	88 d9                	mov    %bl,%cl
    d71b:	89 ca                	mov    %ecx,%edx
    d71d:	eb d1                	jmp    d6f0 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x1580>
    d71f:	90                   	nop
    d720:	48 f7 d8             	neg    %rax
    d723:	18 d2                	sbb    %dl,%dl
    d725:	80 fa 01             	cmp    $0x1,%dl
    d728:	77 66                	ja     d790 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x1620>
    d72a:	4d 85 ed             	test   %r13,%r13
    d72d:	74 46                	je     d775 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x1605>
    d72f:	ba 01 00 00 00       	mov    $0x1,%edx
    d734:	31 c0                	xor    %eax,%eax
    d736:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    d73d:	00 00 00 
    d740:	8b b4 84 40 02 00 00 	mov    0x240(%rsp,%rax,4),%esi
    d747:	f7 d6                	not    %esi
    d749:	03 b4 84 98 01 00 00 	add    0x198(%rsp,%rax,4),%esi
    d750:	0f 92 c3             	setb   %bl
    d753:	01 d6                	add    %edx,%esi
    d755:	0f 92 c1             	setb   %cl
    d758:	08 d9                	or     %bl,%cl
    d75a:	0f b6 d1             	movzbl %cl,%edx
    d75d:	89 b4 84 98 01 00 00 	mov    %esi,0x198(%rsp,%rax,4)
    d764:	48 83 c0 01          	add    $0x1,%rax
    d768:	4c 39 e8             	cmp    %r13,%rax
    d76b:	72 d3                	jb     d740 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x15d0>
    d76d:	84 c9                	test   %cl,%cl
    d76f:	0f 84 c2 07 00 00    	je     df37 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x1dc7>
    d775:	4c 89 ac 24 90 01 00 	mov    %r13,0x190(%rsp)
    d77c:	00 
    d77d:	41 80 c0 01          	add    $0x1,%r8b
    d781:	49 83 ff 11          	cmp    $0x11,%r15
    d785:	75 16                	jne    d79d <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x162d>
    d787:	e9 c5 07 00 00       	jmpq   df51 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x1de1>
    d78c:	0f 1f 40 00          	nopl   0x0(%rax)
    d790:	49 89 fd             	mov    %rdi,%r13
    d793:	49 83 ff 11          	cmp    $0x11,%r15
    d797:	0f 84 b4 07 00 00    	je     df51 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x1de1>
    d79d:	41 80 c0 30          	add    $0x30,%r8b
    d7a1:	46 88 44 3c 20       	mov    %r8b,0x20(%rsp,%r15,1)
    d7a6:	48 8b bc 24 30 04 00 	mov    0x430(%rsp),%rdi
    d7ad:	00 
    d7ae:	49 39 fd             	cmp    %rdi,%r13
    d7b1:	49 0f 47 fd          	cmova  %r13,%rdi
    d7b5:	48 83 ff 29          	cmp    $0x29,%rdi
    d7b9:	0f 83 36 07 00 00    	jae    def5 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x1d85>
    d7bf:	49 8d 47 01          	lea    0x1(%r15),%rax
    d7c3:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    d7c8:	48 c1 e7 02          	shl    $0x2,%rdi
    d7cc:	48 85 ff             	test   %rdi,%rdi
    d7cf:	75 1d                	jne    d7ee <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x167e>
    d7d1:	eb 4d                	jmp    d820 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x16b0>
    d7d3:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    d7da:	00 00 00 
    d7dd:	0f 1f 00             	nopl   (%rax)
    d7e0:	48 83 c7 fc          	add    $0xfffffffffffffffc,%rdi
    d7e4:	45 84 e4             	test   %r12b,%r12b
    d7e7:	75 4a                	jne    d833 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x16c3>
    d7e9:	48 85 ff             	test   %rdi,%rdi
    d7ec:	74 32                	je     d820 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x16b0>
    d7ee:	74 40                	je     d830 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x16c0>
    d7f0:	8b 8c 3c 94 01 00 00 	mov    0x194(%rsp,%rdi,1),%ecx
    d7f7:	31 c0                	xor    %eax,%eax
    d7f9:	41 bc ff 00 00 00    	mov    $0xff,%r12d
    d7ff:	3b 8c 3c 34 04 00 00 	cmp    0x434(%rsp,%rdi,1),%ecx
    d806:	0f 95 c1             	setne  %cl
    d809:	72 d5                	jb     d7e0 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x1670>
    d80b:	88 c8                	mov    %cl,%al
    d80d:	41 89 c4             	mov    %eax,%r12d
    d810:	eb ce                	jmp    d7e0 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x1670>
    d812:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    d819:	00 00 00 
    d81c:	0f 1f 40 00          	nopl   0x0(%rax)
    d820:	48 f7 df             	neg    %rdi
    d823:	45 18 e4             	sbb    %r12b,%r12b
    d826:	eb 0b                	jmp    d833 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x16c3>
    d828:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    d82f:	00 
    d830:	41 b4 01             	mov    $0x1,%r12b
    d833:	4c 89 6c 24 40       	mov    %r13,0x40(%rsp)
    d838:	ba a0 00 00 00       	mov    $0xa0,%edx
    d83d:	48 8d 7c 24 48       	lea    0x48(%rsp),%rdi
    d842:	48 8d b4 24 98 01 00 	lea    0x198(%rsp),%rsi
    d849:	00 
    d84a:	ff 15 80 a6 23 00    	callq  *0x23a680(%rip)        # 247ed0 <memcpy@GLIBC_2.14>
    d850:	48 8b ac 24 e0 02 00 	mov    0x2e0(%rsp),%rbp
    d857:	00 
    d858:	49 39 ed             	cmp    %rbp,%r13
    d85b:	49 0f 47 ed          	cmova  %r13,%rbp
    d85f:	48 83 fd 28          	cmp    $0x28,%rbp
    d863:	0f 87 7d 06 00 00    	ja     dee6 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x1d76>
    d869:	48 85 ed             	test   %rbp,%rbp
    d86c:	74 12                	je     d880 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x1710>
    d86e:	48 83 fd 01          	cmp    $0x1,%rbp
    d872:	75 1c                	jne    d890 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x1720>
    d874:	31 c9                	xor    %ecx,%ecx
    d876:	31 f6                	xor    %esi,%esi
    d878:	e9 83 00 00 00       	jmpq   d900 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x1790>
    d87d:	0f 1f 00             	nopl   (%rax)
    d880:	31 ed                	xor    %ebp,%ebp
    d882:	e9 b0 00 00 00       	jmpq   d937 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x17c7>
    d887:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    d88e:	00 00 
    d890:	41 89 e8             	mov    %ebp,%r8d
    d893:	41 83 e0 01          	and    $0x1,%r8d
    d897:	48 89 ef             	mov    %rbp,%rdi
    d89a:	4c 29 c7             	sub    %r8,%rdi
    d89d:	31 f6                	xor    %esi,%esi
    d89f:	31 c9                	xor    %ecx,%ecx
    d8a1:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    d8a8:	00 00 00 
    d8ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    d8b0:	8b 5c 8c 48          	mov    0x48(%rsp,%rcx,4),%ebx
    d8b4:	8b 54 8c 4c          	mov    0x4c(%rsp,%rcx,4),%edx
    d8b8:	03 9c 8c e8 02 00 00 	add    0x2e8(%rsp,%rcx,4),%ebx
    d8bf:	41 0f 92 c1          	setb   %r9b
    d8c3:	01 f3                	add    %esi,%ebx
    d8c5:	0f 92 c0             	setb   %al
    d8c8:	44 08 c8             	or     %r9b,%al
    d8cb:	0f b6 c0             	movzbl %al,%eax
    d8ce:	89 5c 8c 48          	mov    %ebx,0x48(%rsp,%rcx,4)
    d8d2:	03 94 8c ec 02 00 00 	add    0x2ec(%rsp,%rcx,4),%edx
    d8d9:	0f 92 c3             	setb   %bl
    d8dc:	01 c2                	add    %eax,%edx
    d8de:	0f 92 c0             	setb   %al
    d8e1:	08 d8                	or     %bl,%al
    d8e3:	0f b6 f0             	movzbl %al,%esi
    d8e6:	89 54 8c 4c          	mov    %edx,0x4c(%rsp,%rcx,4)
    d8ea:	48 83 c1 02          	add    $0x2,%rcx
    d8ee:	48 39 cf             	cmp    %rcx,%rdi
    d8f1:	75 bd                	jne    d8b0 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x1740>
    d8f3:	4d 85 c0             	test   %r8,%r8
    d8f6:	75 08                	jne    d900 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x1790>
    d8f8:	85 f6                	test   %esi,%esi
    d8fa:	74 3b                	je     d937 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x17c7>
    d8fc:	eb 23                	jmp    d921 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x17b1>
    d8fe:	66 90                	xchg   %ax,%ax
    d900:	8b 7c 8c 48          	mov    0x48(%rsp,%rcx,4),%edi
    d904:	8b 9c 8c e8 02 00 00 	mov    0x2e8(%rsp,%rcx,4),%ebx
    d90b:	8d 14 1f             	lea    (%rdi,%rbx,1),%edx
    d90e:	01 f2                	add    %esi,%edx
    d910:	40 0f 92 c6          	setb   %sil
    d914:	89 54 8c 48          	mov    %edx,0x48(%rsp,%rcx,4)
    d918:	01 fb                	add    %edi,%ebx
    d91a:	72 05                	jb     d921 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x17b1>
    d91c:	40 84 f6             	test   %sil,%sil
    d91f:	74 16                	je     d937 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x17c7>
    d921:	48 83 fd 27          	cmp    $0x27,%rbp
    d925:	0f 87 80 06 00 00    	ja     dfab <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x1e3b>
    d92b:	c7 44 ac 48 01 00 00 	movl   $0x1,0x48(%rsp,%rbp,4)
    d932:	00 
    d933:	48 83 c5 01          	add    $0x1,%rbp
    d937:	48 89 6c 24 40       	mov    %rbp,0x40(%rsp)
    d93c:	49 39 ee             	cmp    %rbp,%r14
    d93f:	49 0f 47 ee          	cmova  %r14,%rbp
    d943:	48 83 fd 29          	cmp    $0x29,%rbp
    d947:	0f 83 99 05 00 00    	jae    dee6 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x1d76>
    d94d:	48 c1 e5 02          	shl    $0x2,%rbp
    d951:	48 8b b4 24 40 01 00 	mov    0x140(%rsp),%rsi
    d958:	00 
    d959:	4c 8b 74 24 10       	mov    0x10(%rsp),%r14
    d95e:	48 85 ed             	test   %rbp,%rbp
    d961:	75 1a                	jne    d97d <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x180d>
    d963:	eb 3b                	jmp    d9a0 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x1830>
    d965:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    d96c:	00 00 00 
    d96f:	90                   	nop
    d970:	48 83 c5 fc          	add    $0xfffffffffffffffc,%rbp
    d974:	84 c9                	test   %cl,%cl
    d976:	75 2d                	jne    d9a5 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x1835>
    d978:	48 85 ed             	test   %rbp,%rbp
    d97b:	74 23                	je     d9a0 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x1830>
    d97d:	0f 84 3d 01 00 00    	je     dac0 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x1950>
    d983:	8b 84 2c 3c 02 00 00 	mov    0x23c(%rsp,%rbp,1),%eax
    d98a:	31 d2                	xor    %edx,%edx
    d98c:	b9 ff 00 00 00       	mov    $0xff,%ecx
    d991:	3b 44 2c 44          	cmp    0x44(%rsp,%rbp,1),%eax
    d995:	0f 95 c3             	setne  %bl
    d998:	72 d6                	jb     d970 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x1800>
    d99a:	88 da                	mov    %bl,%dl
    d99c:	89 d1                	mov    %edx,%ecx
    d99e:	eb d0                	jmp    d970 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x1800>
    d9a0:	48 f7 dd             	neg    %rbp
    d9a3:	18 c9                	sbb    %cl,%cl
    d9a5:	41 38 f4             	cmp    %sil,%r12b
    d9a8:	0f 8c 70 03 00 00    	jl     dd1e <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x1bae>
    d9ae:	40 38 f1             	cmp    %sil,%cl
    d9b1:	0f 8c 67 03 00 00    	jl     dd1e <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x1bae>
    d9b7:	49 83 fd 29          	cmp    $0x29,%r13
    d9bb:	0f 83 67 05 00 00    	jae    df28 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x1db8>
    d9c1:	4d 85 ed             	test   %r13,%r13
    d9c4:	74 3a                	je     da00 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x1890>
    d9c6:	4a 8d 0c ad fc ff ff 	lea    -0x4(,%r13,4),%rcx
    d9cd:	ff 
    d9ce:	48 89 ce             	mov    %rcx,%rsi
    d9d1:	48 c1 ee 02          	shr    $0x2,%rsi
    d9d5:	48 83 c6 01          	add    $0x1,%rsi
    d9d9:	89 f0                	mov    %esi,%eax
    d9db:	83 e0 03             	and    $0x3,%eax
    d9de:	48 83 f9 0c          	cmp    $0xc,%rcx
    d9e2:	0f 83 e8 00 00 00    	jae    dad0 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x1960>
    d9e8:	31 d2                	xor    %edx,%edx
    d9ea:	48 8d 8c 24 98 01 00 	lea    0x198(%rsp),%rcx
    d9f1:	00 
    d9f2:	48 85 c0             	test   %rax,%rax
    d9f5:	0f 85 41 01 00 00    	jne    db3c <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x19cc>
    d9fb:	e9 5b 01 00 00       	jmpq   db5b <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x19eb>
    da00:	45 31 ed             	xor    %r13d,%r13d
    da03:	4c 89 ac 24 90 01 00 	mov    %r13,0x190(%rsp)
    da0a:	00 
    da0b:	48 8b 84 24 30 04 00 	mov    0x430(%rsp),%rax
    da12:	00 
    da13:	48 83 f8 29          	cmp    $0x29,%rax
    da17:	0f 83 e4 04 00 00    	jae    df01 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x1d91>
    da1d:	48 85 c0             	test   %rax,%rax
    da20:	74 3e                	je     da60 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x18f0>
    da22:	48 8d 14 85 fc ff ff 	lea    -0x4(,%rax,4),%rdx
    da29:	ff 
    da2a:	48 89 d7             	mov    %rdx,%rdi
    da2d:	48 c1 ef 02          	shr    $0x2,%rdi
    da31:	48 83 c7 01          	add    $0x1,%rdi
    da35:	89 f9                	mov    %edi,%ecx
    da37:	83 e1 03             	and    $0x3,%ecx
    da3a:	48 83 fa 0c          	cmp    $0xc,%rdx
    da3e:	0f 83 5c 01 00 00    	jae    dba0 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x1a30>
    da44:	31 f6                	xor    %esi,%esi
    da46:	48 8d 94 24 38 04 00 	lea    0x438(%rsp),%rdx
    da4d:	00 
    da4e:	48 85 c9             	test   %rcx,%rcx
    da51:	0f 85 b1 01 00 00    	jne    dc08 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x1a98>
    da57:	e9 d0 01 00 00       	jmpq   dc2c <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x1abc>
    da5c:	0f 1f 40 00          	nopl   0x0(%rax)
    da60:	31 c0                	xor    %eax,%eax
    da62:	48 89 84 24 30 04 00 	mov    %rax,0x430(%rsp)
    da69:	00 
    da6a:	48 8b 84 24 e0 02 00 	mov    0x2e0(%rsp),%rax
    da71:	00 
    da72:	48 83 f8 29          	cmp    $0x29,%rax
    da76:	0f 83 85 04 00 00    	jae    df01 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x1d91>
    da7c:	48 85 c0             	test   %rax,%rax
    da7f:	0f 84 bb f9 ff ff    	je     d440 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x12d0>
    da85:	48 8d 14 85 fc ff ff 	lea    -0x4(,%rax,4),%rdx
    da8c:	ff 
    da8d:	48 89 d7             	mov    %rdx,%rdi
    da90:	48 c1 ef 02          	shr    $0x2,%rdi
    da94:	48 83 c7 01          	add    $0x1,%rdi
    da98:	89 f9                	mov    %edi,%ecx
    da9a:	83 e1 03             	and    $0x3,%ecx
    da9d:	48 83 fa 0c          	cmp    $0xc,%rdx
    daa1:	0f 83 c9 01 00 00    	jae    dc70 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x1b00>
    daa7:	31 f6                	xor    %esi,%esi
    daa9:	48 8d 94 24 e8 02 00 	lea    0x2e8(%rsp),%rdx
    dab0:	00 
    dab1:	48 85 c9             	test   %rcx,%rcx
    dab4:	0f 85 1e 02 00 00    	jne    dcd8 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x1b68>
    daba:	e9 3d 02 00 00       	jmpq   dcfc <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x1b8c>
    dabf:	90                   	nop
    dac0:	b1 01                	mov    $0x1,%cl
    dac2:	41 38 f4             	cmp    %sil,%r12b
    dac5:	0f 8d e3 fe ff ff    	jge    d9ae <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x183e>
    dacb:	e9 4e 02 00 00       	jmpq   dd1e <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x1bae>
    dad0:	48 29 c6             	sub    %rax,%rsi
    dad3:	31 d2                	xor    %edx,%edx
    dad5:	48 8d 8c 24 98 01 00 	lea    0x198(%rsp),%rcx
    dadc:	00 
    dadd:	0f 1f 00             	nopl   (%rax)
    dae0:	8b 39                	mov    (%rcx),%edi
    dae2:	8b 69 04             	mov    0x4(%rcx),%ebp
    dae5:	48 8d 3c bf          	lea    (%rdi,%rdi,4),%rdi
    dae9:	48 8d 14 7a          	lea    (%rdx,%rdi,2),%rdx
    daed:	89 11                	mov    %edx,(%rcx)
    daef:	48 c1 ea 20          	shr    $0x20,%rdx
    daf3:	48 8d 3c ad 00 00 00 	lea    0x0(,%rbp,4),%rdi
    dafa:	00 
    dafb:	48 01 ef             	add    %rbp,%rdi
    dafe:	48 8d 14 7a          	lea    (%rdx,%rdi,2),%rdx
    db02:	89 51 04             	mov    %edx,0x4(%rcx)
    db05:	48 c1 ea 20          	shr    $0x20,%rdx
    db09:	8b 79 08             	mov    0x8(%rcx),%edi
    db0c:	48 8d 3c bf          	lea    (%rdi,%rdi,4),%rdi
    db10:	48 8d 14 7a          	lea    (%rdx,%rdi,2),%rdx
    db14:	89 51 08             	mov    %edx,0x8(%rcx)
    db17:	48 c1 ea 20          	shr    $0x20,%rdx
    db1b:	8b 79 0c             	mov    0xc(%rcx),%edi
    db1e:	48 8d 3c bf          	lea    (%rdi,%rdi,4),%rdi
    db22:	48 8d 14 7a          	lea    (%rdx,%rdi,2),%rdx
    db26:	89 51 0c             	mov    %edx,0xc(%rcx)
    db29:	48 c1 ea 20          	shr    $0x20,%rdx
    db2d:	48 83 c1 10          	add    $0x10,%rcx
    db31:	48 83 c6 fc          	add    $0xfffffffffffffffc,%rsi
    db35:	75 a9                	jne    dae0 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x1970>
    db37:	48 85 c0             	test   %rax,%rax
    db3a:	74 1f                	je     db5b <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x19eb>
    db3c:	31 f6                	xor    %esi,%esi
    db3e:	66 90                	xchg   %ax,%ax
    db40:	8b 3c b1             	mov    (%rcx,%rsi,4),%edi
    db43:	48 8d 3c bf          	lea    (%rdi,%rdi,4),%rdi
    db47:	48 8d 14 7a          	lea    (%rdx,%rdi,2),%rdx
    db4b:	89 14 b1             	mov    %edx,(%rcx,%rsi,4)
    db4e:	48 c1 ea 20          	shr    $0x20,%rdx
    db52:	48 83 c6 01          	add    $0x1,%rsi
    db56:	48 39 f0             	cmp    %rsi,%rax
    db59:	75 e5                	jne    db40 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x19d0>
    db5b:	85 d2                	test   %edx,%edx
    db5d:	74 16                	je     db75 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x1a05>
    db5f:	49 83 fd 27          	cmp    $0x27,%r13
    db63:	0f 87 2c 04 00 00    	ja     df95 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x1e25>
    db69:	42 89 94 ac 98 01 00 	mov    %edx,0x198(%rsp,%r13,4)
    db70:	00 
    db71:	49 83 c5 01          	add    $0x1,%r13
    db75:	4c 89 ac 24 90 01 00 	mov    %r13,0x190(%rsp)
    db7c:	00 
    db7d:	48 8b 84 24 30 04 00 	mov    0x430(%rsp),%rax
    db84:	00 
    db85:	48 83 f8 29          	cmp    $0x29,%rax
    db89:	0f 82 8e fe ff ff    	jb     da1d <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x18ad>
    db8f:	e9 6d 03 00 00       	jmpq   df01 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x1d91>
    db94:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    db9b:	00 00 00 
    db9e:	66 90                	xchg   %ax,%ax
    dba0:	48 29 cf             	sub    %rcx,%rdi
    dba3:	31 f6                	xor    %esi,%esi
    dba5:	48 8d 94 24 38 04 00 	lea    0x438(%rsp),%rdx
    dbac:	00 
    dbad:	0f 1f 00             	nopl   (%rax)
    dbb0:	8b 2a                	mov    (%rdx),%ebp
    dbb2:	8b 5a 04             	mov    0x4(%rdx),%ebx
    dbb5:	48 8d 6c ad 00       	lea    0x0(%rbp,%rbp,4),%rbp
    dbba:	48 8d 34 6e          	lea    (%rsi,%rbp,2),%rsi
    dbbe:	89 32                	mov    %esi,(%rdx)
    dbc0:	48 c1 ee 20          	shr    $0x20,%rsi
    dbc4:	48 8d 2c 9b          	lea    (%rbx,%rbx,4),%rbp
    dbc8:	48 8d 34 6e          	lea    (%rsi,%rbp,2),%rsi
    dbcc:	89 72 04             	mov    %esi,0x4(%rdx)
    dbcf:	48 c1 ee 20          	shr    $0x20,%rsi
    dbd3:	8b 6a 08             	mov    0x8(%rdx),%ebp
    dbd6:	48 8d 6c ad 00       	lea    0x0(%rbp,%rbp,4),%rbp
    dbdb:	48 8d 34 6e          	lea    (%rsi,%rbp,2),%rsi
    dbdf:	89 72 08             	mov    %esi,0x8(%rdx)
    dbe2:	48 c1 ee 20          	shr    $0x20,%rsi
    dbe6:	8b 6a 0c             	mov    0xc(%rdx),%ebp
    dbe9:	48 8d 6c ad 00       	lea    0x0(%rbp,%rbp,4),%rbp
    dbee:	48 8d 34 6e          	lea    (%rsi,%rbp,2),%rsi
    dbf2:	89 72 0c             	mov    %esi,0xc(%rdx)
    dbf5:	48 c1 ee 20          	shr    $0x20,%rsi
    dbf9:	48 83 c2 10          	add    $0x10,%rdx
    dbfd:	48 83 c7 fc          	add    $0xfffffffffffffffc,%rdi
    dc01:	75 ad                	jne    dbb0 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x1a40>
    dc03:	48 85 c9             	test   %rcx,%rcx
    dc06:	74 24                	je     dc2c <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x1abc>
    dc08:	31 ff                	xor    %edi,%edi
    dc0a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    dc10:	8b 2c ba             	mov    (%rdx,%rdi,4),%ebp
    dc13:	48 8d 6c ad 00       	lea    0x0(%rbp,%rbp,4),%rbp
    dc18:	48 8d 34 6e          	lea    (%rsi,%rbp,2),%rsi
    dc1c:	89 34 ba             	mov    %esi,(%rdx,%rdi,4)
    dc1f:	48 c1 ee 20          	shr    $0x20,%rsi
    dc23:	48 83 c7 01          	add    $0x1,%rdi
    dc27:	48 39 f9             	cmp    %rdi,%rcx
    dc2a:	75 e4                	jne    dc10 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x1aa0>
    dc2c:	85 f6                	test   %esi,%esi
    dc2e:	74 15                	je     dc45 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x1ad5>
    dc30:	48 83 f8 27          	cmp    $0x27,%rax
    dc34:	0f 87 2f 03 00 00    	ja     df69 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x1df9>
    dc3a:	89 b4 84 38 04 00 00 	mov    %esi,0x438(%rsp,%rax,4)
    dc41:	48 83 c0 01          	add    $0x1,%rax
    dc45:	48 89 84 24 30 04 00 	mov    %rax,0x430(%rsp)
    dc4c:	00 
    dc4d:	48 8b 84 24 e0 02 00 	mov    0x2e0(%rsp),%rax
    dc54:	00 
    dc55:	48 83 f8 29          	cmp    $0x29,%rax
    dc59:	0f 82 1d fe ff ff    	jb     da7c <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x190c>
    dc5f:	e9 9d 02 00 00       	jmpq   df01 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x1d91>
    dc64:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    dc6b:	00 00 00 
    dc6e:	66 90                	xchg   %ax,%ax
    dc70:	48 29 cf             	sub    %rcx,%rdi
    dc73:	31 f6                	xor    %esi,%esi
    dc75:	48 8d 94 24 e8 02 00 	lea    0x2e8(%rsp),%rdx
    dc7c:	00 
    dc7d:	0f 1f 00             	nopl   (%rax)
    dc80:	8b 2a                	mov    (%rdx),%ebp
    dc82:	8b 5a 04             	mov    0x4(%rdx),%ebx
    dc85:	48 8d 6c ad 00       	lea    0x0(%rbp,%rbp,4),%rbp
    dc8a:	48 8d 34 6e          	lea    (%rsi,%rbp,2),%rsi
    dc8e:	89 32                	mov    %esi,(%rdx)
    dc90:	48 c1 ee 20          	shr    $0x20,%rsi
    dc94:	48 8d 2c 9b          	lea    (%rbx,%rbx,4),%rbp
    dc98:	48 8d 34 6e          	lea    (%rsi,%rbp,2),%rsi
    dc9c:	89 72 04             	mov    %esi,0x4(%rdx)
    dc9f:	48 c1 ee 20          	shr    $0x20,%rsi
    dca3:	8b 6a 08             	mov    0x8(%rdx),%ebp
    dca6:	48 8d 6c ad 00       	lea    0x0(%rbp,%rbp,4),%rbp
    dcab:	48 8d 34 6e          	lea    (%rsi,%rbp,2),%rsi
    dcaf:	89 72 08             	mov    %esi,0x8(%rdx)
    dcb2:	48 c1 ee 20          	shr    $0x20,%rsi
    dcb6:	8b 6a 0c             	mov    0xc(%rdx),%ebp
    dcb9:	48 8d 6c ad 00       	lea    0x0(%rbp,%rbp,4),%rbp
    dcbe:	48 8d 34 6e          	lea    (%rsi,%rbp,2),%rsi
    dcc2:	89 72 0c             	mov    %esi,0xc(%rdx)
    dcc5:	48 c1 ee 20          	shr    $0x20,%rsi
    dcc9:	48 83 c2 10          	add    $0x10,%rdx
    dccd:	48 83 c7 fc          	add    $0xfffffffffffffffc,%rdi
    dcd1:	75 ad                	jne    dc80 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x1b10>
    dcd3:	48 85 c9             	test   %rcx,%rcx
    dcd6:	74 24                	je     dcfc <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x1b8c>
    dcd8:	31 ff                	xor    %edi,%edi
    dcda:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    dce0:	8b 2c ba             	mov    (%rdx,%rdi,4),%ebp
    dce3:	48 8d 6c ad 00       	lea    0x0(%rbp,%rbp,4),%rbp
    dce8:	48 8d 34 6e          	lea    (%rsi,%rbp,2),%rsi
    dcec:	89 34 ba             	mov    %esi,(%rdx,%rdi,4)
    dcef:	48 c1 ee 20          	shr    $0x20,%rsi
    dcf3:	48 83 c7 01          	add    $0x1,%rdi
    dcf7:	48 39 f9             	cmp    %rdi,%rcx
    dcfa:	75 e4                	jne    dce0 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x1b70>
    dcfc:	85 f6                	test   %esi,%esi
    dcfe:	0f 84 3e f7 ff ff    	je     d442 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x12d2>
    dd04:	48 83 f8 27          	cmp    $0x27,%rax
    dd08:	0f 87 5b 02 00 00    	ja     df69 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x1df9>
    dd0e:	89 b4 84 e8 02 00 00 	mov    %esi,0x2e8(%rsp,%rax,4)
    dd15:	48 83 c0 01          	add    $0x1,%rax
    dd19:	e9 24 f7 ff ff       	jmpq   d442 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x12d2>
    dd1e:	40 38 f1             	cmp    %sil,%cl
    dd21:	0f 8d b8 00 00 00    	jge    dddf <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x1c6f>
    dd27:	41 38 f4             	cmp    %sil,%r12b
    dd2a:	7d 7c                	jge    dda8 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x1c38>
    dd2c:	48 8d bc 24 90 01 00 	lea    0x190(%rsp),%rdi
    dd33:	00 
    dd34:	be 01 00 00 00       	mov    $0x1,%esi
    dd39:	e8 02 9d ff ff       	callq  7a40 <_ZN4core3num6bignum8Big32x408mul_pow217h98a8a86db4c173d2E>
    dd3e:	48 8b 00             	mov    (%rax),%rax
    dd41:	48 8b bc 24 38 02 00 	mov    0x238(%rsp),%rdi
    dd48:	00 
    dd49:	48 39 f8             	cmp    %rdi,%rax
    dd4c:	48 0f 47 f8          	cmova  %rax,%rdi
    dd50:	48 83 ff 29          	cmp    $0x29,%rdi
    dd54:	0f 83 9b 01 00 00    	jae    def5 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x1d85>
    dd5a:	48 c1 e7 02          	shl    $0x2,%rdi
    dd5e:	48 85 ff             	test   %rdi,%rdi
    dd61:	75 1a                	jne    dd7d <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x1c0d>
    dd63:	eb 3a                	jmp    dd9f <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x1c2f>
    dd65:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    dd6c:	00 00 00 
    dd6f:	90                   	nop
    dd70:	48 83 c7 fc          	add    $0xfffffffffffffffc,%rdi
    dd74:	84 c0                	test   %al,%al
    dd76:	75 2c                	jne    dda4 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x1c34>
    dd78:	48 85 ff             	test   %rdi,%rdi
    dd7b:	74 22                	je     dd9f <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x1c2f>
    dd7d:	74 29                	je     dda8 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x1c38>
    dd7f:	8b 94 3c 94 01 00 00 	mov    0x194(%rsp,%rdi,1),%edx
    dd86:	31 c9                	xor    %ecx,%ecx
    dd88:	b8 ff 00 00 00       	mov    $0xff,%eax
    dd8d:	3b 94 3c 3c 02 00 00 	cmp    0x23c(%rsp,%rdi,1),%edx
    dd94:	0f 95 c2             	setne  %dl
    dd97:	72 d7                	jb     dd70 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x1c00>
    dd99:	88 d1                	mov    %dl,%cl
    dd9b:	89 c8                	mov    %ecx,%eax
    dd9d:	eb d1                	jmp    dd70 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x1c00>
    dd9f:	48 f7 df             	neg    %rdi
    dda2:	18 c0                	sbb    %al,%al
    dda4:	3c 01                	cmp    $0x1,%al
    dda6:	77 37                	ja     dddf <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x1c6f>
    dda8:	48 8d 7c 24 20       	lea    0x20(%rsp),%rdi
    ddad:	be 11 00 00 00       	mov    $0x11,%esi
    ddb2:	4c 89 f2             	mov    %r14,%rdx
    ddb5:	e8 e6 bc ff ff       	callq  9aa0 <_ZN4core3num7flt2dec8round_up17h468b4c0dfea5d943E>
    ddba:	a8 01                	test   $0x1,%al
    ddbc:	74 21                	je     dddf <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x1c6f>
    ddbe:	49 83 fe 10          	cmp    $0x10,%r14
    ddc2:	0f 87 55 03 00 00    	ja     e11d <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x1fad>
    ddc8:	42 88 54 3c 21       	mov    %dl,0x21(%rsp,%r15,1)
    ddcd:	49 83 c7 02          	add    $0x2,%r15
    ddd1:	48 8b 04 24          	mov    (%rsp),%rax
    ddd5:	83 c0 01             	add    $0x1,%eax
    ddd8:	48 89 04 24          	mov    %rax,(%rsp)
    dddc:	4d 89 fe             	mov    %r15,%r14
    dddf:	49 83 fe 12          	cmp    $0x12,%r14
    dde3:	0f 83 76 02 00 00    	jae    e05f <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x1eef>
    dde9:	80 7c 24 20 31       	cmpb   $0x31,0x20(%rsp)
    ddee:	48 8b bc 24 88 01 00 	mov    0x188(%rsp),%rdi
    ddf5:	00 
    ddf6:	4c 8b 84 24 80 01 00 	mov    0x180(%rsp),%r8
    ddfd:	00 
    ddfe:	48 8b 9c 24 78 01 00 	mov    0x178(%rsp),%rbx
    de05:	00 
    de06:	48 8b 0c 24          	mov    (%rsp),%rcx
    de0a:	0f 82 f3 02 00 00    	jb     e103 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x1f93>
    de10:	48 0f bf c1          	movswq %cx,%rax
    de14:	66 85 c9             	test   %cx,%cx
    de17:	7e 61                	jle    de7a <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x1d0a>
    de19:	4c 89 f1             	mov    %r14,%rcx
    de1c:	66 c7 44 24 40 02 00 	movw   $0x2,0x40(%rsp)
    de23:	48 8d 54 24 20       	lea    0x20(%rsp),%rdx
    de28:	48 89 54 24 48       	mov    %rdx,0x48(%rsp)
    de2d:	48 29 c1             	sub    %rax,%rcx
    de30:	0f 86 92 00 00 00    	jbe    dec8 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x1d58>
    de36:	48 89 44 24 50       	mov    %rax,0x50(%rsp)
    de3b:	66 c7 44 24 58 02 00 	movw   $0x2,0x58(%rsp)
    de42:	48 8d 15 d5 f7 02 00 	lea    0x2f7d5(%rip),%rdx        # 3d61e <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0xcbe>
    de49:	48 89 54 24 60       	mov    %rdx,0x60(%rsp)
    de4e:	48 c7 44 24 68 01 00 	movq   $0x1,0x68(%rsp)
    de55:	00 00 
    de57:	48 8d 44 04 20       	lea    0x20(%rsp,%rax,1),%rax
    de5c:	66 c7 44 24 70 02 00 	movw   $0x2,0x70(%rsp)
    de63:	48 89 44 24 78       	mov    %rax,0x78(%rsp)
    de68:	48 89 8c 24 80 00 00 	mov    %rcx,0x80(%rsp)
    de6f:	00 
    de70:	b8 03 00 00 00       	mov    $0x3,%eax
    de75:	e9 89 e8 ff ff       	jmpq   c703 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x593>
    de7a:	48 f7 d8             	neg    %rax
    de7d:	66 c7 44 24 40 02 00 	movw   $0x2,0x40(%rsp)
    de84:	48 8d 0d a2 e9 02 00 	lea    0x2e9a2(%rip),%rcx        # 3c82d <str.1+0x7d>
    de8b:	48 89 4c 24 48       	mov    %rcx,0x48(%rsp)
    de90:	48 c7 44 24 50 02 00 	movq   $0x2,0x50(%rsp)
    de97:	00 00 
    de99:	66 c7 44 24 58 00 00 	movw   $0x0,0x58(%rsp)
    dea0:	48 89 44 24 60       	mov    %rax,0x60(%rsp)
    dea5:	66 c7 44 24 70 02 00 	movw   $0x2,0x70(%rsp)
    deac:	48 8d 44 24 20       	lea    0x20(%rsp),%rax
    deb1:	48 89 44 24 78       	mov    %rax,0x78(%rsp)
    deb6:	4c 89 b4 24 80 00 00 	mov    %r14,0x80(%rsp)
    debd:	00 
    debe:	b8 03 00 00 00       	mov    $0x3,%eax
    dec3:	e9 3b e8 ff ff       	jmpq   c703 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x593>
    dec8:	4c 89 74 24 50       	mov    %r14,0x50(%rsp)
    decd:	4c 29 f0             	sub    %r14,%rax
    ded0:	66 c7 44 24 58 00 00 	movw   $0x0,0x58(%rsp)
    ded7:	48 89 44 24 60       	mov    %rax,0x60(%rsp)
    dedc:	b8 02 00 00 00       	mov    $0x2,%eax
    dee1:	e9 1d e8 ff ff       	jmpq   c703 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E+0x593>
    dee6:	be 28 00 00 00       	mov    $0x28,%esi
    deeb:	48 89 ef             	mov    %rbp,%rdi
    deee:	e8 dd 9c ff ff       	callq  7bd0 <_ZN4core5slice20slice_index_len_fail17h52736412c1ce1871E>
    def3:	0f 0b                	ud2    
    def5:	be 28 00 00 00       	mov    $0x28,%esi
    defa:	e8 d1 9c ff ff       	callq  7bd0 <_ZN4core5slice20slice_index_len_fail17h52736412c1ce1871E>
    deff:	0f 0b                	ud2    
    df01:	be 28 00 00 00       	mov    $0x28,%esi
    df06:	48 89 c7             	mov    %rax,%rdi
    df09:	e8 c2 9c ff ff       	callq  7bd0 <_ZN4core5slice20slice_index_len_fail17h52736412c1ce1871E>
    df0e:	0f 0b                	ud2    
    df10:	48 8d 3d 91 82 23 00 	lea    0x238291(%rip),%rdi        # 2461a8 <__init_array_end+0x198>
    df17:	be 28 00 00 00       	mov    $0x28,%esi
    df1c:	ba 28 00 00 00       	mov    $0x28,%edx
    df21:	e8 da 94 ff ff       	callq  7400 <_ZN4core9panicking18panic_bounds_check17h83121a2515f55ceeE>
    df26:	0f 0b                	ud2    
    df28:	be 28 00 00 00       	mov    $0x28,%esi
    df2d:	4c 89 ef             	mov    %r13,%rdi
    df30:	e8 9b 9c ff ff       	callq  7bd0 <_ZN4core5slice20slice_index_len_fail17h52736412c1ce1871E>
    df35:	0f 0b                	ud2    
    df37:	48 8d 3d 6b e7 02 00 	lea    0x2e76b(%rip),%rdi        # 3c6a9 <_ZN4core3num7flt2dec8strategy6dragon10POW10TO25617haf225b14fd05fa3eE+0x111>
    df3e:	48 8d 15 63 82 23 00 	lea    0x238263(%rip),%rdx        # 2461a8 <__init_array_end+0x198>
    df45:	be 1a 00 00 00       	mov    $0x1a,%esi
    df4a:	e8 61 94 ff ff       	callq  73b0 <_ZN4core9panicking5panic17h6861470adfbddef8E>
    df4f:	0f 0b                	ud2    
    df51:	48 8d 3d b0 84 23 00 	lea    0x2384b0(%rip),%rdi        # 246408 <__init_array_end+0x3f8>
    df58:	be 11 00 00 00       	mov    $0x11,%esi
    df5d:	ba 11 00 00 00       	mov    $0x11,%edx
    df62:	e8 99 94 ff ff       	callq  7400 <_ZN4core9panicking18panic_bounds_check17h83121a2515f55ceeE>
    df67:	0f 0b                	ud2    
    df69:	48 8d 3d 38 82 23 00 	lea    0x238238(%rip),%rdi        # 2461a8 <__init_array_end+0x198>
    df70:	ba 28 00 00 00       	mov    $0x28,%edx
    df75:	48 89 c6             	mov    %rax,%rsi
    df78:	e8 83 94 ff ff       	callq  7400 <_ZN4core9panicking18panic_bounds_check17h83121a2515f55ceeE>
    df7d:	0f 0b                	ud2    
    df7f:	48 8d 3d 1a 86 23 00 	lea    0x23861a(%rip),%rdi        # 2465a0 <__init_array_end+0x590>
    df86:	ba 11 00 00 00       	mov    $0x11,%edx
    df8b:	4c 89 f6             	mov    %r14,%rsi
    df8e:	e8 6d 94 ff ff       	callq  7400 <_ZN4core9panicking18panic_bounds_check17h83121a2515f55ceeE>
    df93:	0f 0b                	ud2    
    df95:	48 8d 3d 0c 82 23 00 	lea    0x23820c(%rip),%rdi        # 2461a8 <__init_array_end+0x198>
    df9c:	ba 28 00 00 00       	mov    $0x28,%edx
    dfa1:	4c 89 ee             	mov    %r13,%rsi
    dfa4:	e8 57 94 ff ff       	callq  7400 <_ZN4core9panicking18panic_bounds_check17h83121a2515f55ceeE>
    dfa9:	0f 0b                	ud2    
    dfab:	48 8d 3d f6 81 23 00 	lea    0x2381f6(%rip),%rdi        # 2461a8 <__init_array_end+0x198>
    dfb2:	ba 28 00 00 00       	mov    $0x28,%edx
    dfb7:	48 89 ee             	mov    %rbp,%rsi
    dfba:	e8 41 94 ff ff       	callq  7400 <_ZN4core9panicking18panic_bounds_check17h83121a2515f55ceeE>
    dfbf:	0f 0b                	ud2    
    dfc1:	48 8d 84 24 e0 02 00 	lea    0x2e0(%rsp),%rax
    dfc8:	00 
    dfc9:	48 89 84 24 38 02 00 	mov    %rax,0x238(%rsp)
    dfd0:	00 
    dfd1:	48 8d 84 24 d8 04 00 	lea    0x4d8(%rsp),%rax
    dfd8:	00 
    dfd9:	48 89 84 24 80 05 00 	mov    %rax,0x580(%rsp)
    dfe0:	00 
    dfe1:	48 8d 84 24 38 02 00 	lea    0x238(%rsp),%rax
    dfe8:	00 
    dfe9:	48 89 84 24 88 03 00 	mov    %rax,0x388(%rsp)
    dff0:	00 
    dff1:	48 8d 05 e8 b1 ff ff 	lea    -0x4e18(%rip),%rax        # 91e0 <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h798e5cbb932f061cE>
    dff8:	48 89 84 24 90 03 00 	mov    %rax,0x390(%rsp)
    dfff:	00 
    e000:	48 8d 8c 24 80 05 00 	lea    0x580(%rsp),%rcx
    e007:	00 
    e008:	48 89 8c 24 98 03 00 	mov    %rcx,0x398(%rsp)
    e00f:	00 
    e010:	48 89 84 24 a0 03 00 	mov    %rax,0x3a0(%rsp)
    e017:	00 
    e018:	48 8d 05 79 8e 23 00 	lea    0x238e79(%rip),%rax        # 246e98 <__init_array_end+0xe88>
    e01f:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
    e024:	48 c7 44 24 48 03 00 	movq   $0x3,0x48(%rsp)
    e02b:	00 00 
    e02d:	48 c7 44 24 50 00 00 	movq   $0x0,0x50(%rsp)
    e034:	00 00 
    e036:	48 8d 84 24 88 03 00 	lea    0x388(%rsp),%rax
    e03d:	00 
    e03e:	48 89 44 24 60       	mov    %rax,0x60(%rsp)
    e043:	48 c7 44 24 68 02 00 	movq   $0x2,0x68(%rsp)
    e04a:	00 00 
    e04c:	48 8d 35 9d 83 23 00 	lea    0x23839d(%rip),%rsi        # 2463f0 <__init_array_end+0x3e0>
    e053:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
    e058:	e8 53 95 ff ff       	callq  75b0 <_ZN4core9panicking9panic_fmt17he168e49e4b05d288E>
    e05d:	0f 0b                	ud2    
    e05f:	be 11 00 00 00       	mov    $0x11,%esi
    e064:	4c 89 f7             	mov    %r14,%rdi
    e067:	e8 64 9b ff ff       	callq  7bd0 <_ZN4core5slice20slice_index_len_fail17h52736412c1ce1871E>
    e06c:	0f 0b                	ud2    
    e06e:	48 8d 3d 8f e5 02 00 	lea    0x2e58f(%rip),%rdi        # 3c604 <_ZN4core3num7flt2dec8strategy6dragon10POW10TO25617haf225b14fd05fa3eE+0x6c>
    e075:	48 8d 15 ac 84 23 00 	lea    0x2384ac(%rip),%rdx        # 246528 <__init_array_end+0x518>
    e07c:	be 1c 00 00 00       	mov    $0x1c,%esi
    e081:	e8 2a 93 ff ff       	callq  73b0 <_ZN4core9panicking5panic17h6861470adfbddef8E>
    e086:	0f 0b                	ud2    
    e088:	48 8d 3d ad e5 02 00 	lea    0x2e5ad(%rip),%rdi        # 3c63c <_ZN4core3num7flt2dec8strategy6dragon10POW10TO25617haf225b14fd05fa3eE+0xa4>
    e08f:	48 8d 15 aa 84 23 00 	lea    0x2384aa(%rip),%rdx        # 246540 <__init_array_end+0x530>
    e096:	be 36 00 00 00       	mov    $0x36,%esi
    e09b:	e8 10 93 ff ff       	callq  73b0 <_ZN4core9panicking5panic17h6861470adfbddef8E>
    e0a0:	0f 0b                	ud2    
    e0a2:	48 8d 3d c9 e5 02 00 	lea    0x2e5c9(%rip),%rdi        # 3c672 <_ZN4core3num7flt2dec8strategy6dragon10POW10TO25617haf225b14fd05fa3eE+0xda>
    e0a9:	48 8d 15 a8 84 23 00 	lea    0x2384a8(%rip),%rdx        # 246558 <__init_array_end+0x548>
    e0b0:	be 37 00 00 00       	mov    $0x37,%esi
    e0b5:	e8 f6 92 ff ff       	callq  73b0 <_ZN4core9panicking5panic17h6861470adfbddef8E>
    e0ba:	0f 0b                	ud2    
    e0bc:	48 8d 3d b5 e6 02 00 	lea    0x2e6b5(%rip),%rdi        # 3c778 <_ZN4core3num7flt2dec8strategy6dragon8TWOPOW1017h0773ad74716bcfbaE+0x6c>
    e0c3:	48 8d 15 a6 84 23 00 	lea    0x2384a6(%rip),%rdx        # 246570 <__init_array_end+0x560>
    e0ca:	be 2d 00 00 00       	mov    $0x2d,%esi
    e0cf:	e8 dc 92 ff ff       	callq  73b0 <_ZN4core9panicking5panic17h6861470adfbddef8E>
    e0d4:	0f 0b                	ud2    
    e0d6:	48 8d 3d ed e3 02 00 	lea    0x2e3ed(%rip),%rdi        # 3c4ca <_ZN4core7unicode12unicode_data15grapheme_extend6BITSET17h68ce7f61ccfa32feE+0xa2a>
    e0dd:	48 8d 15 f4 82 23 00 	lea    0x2382f4(%rip),%rdx        # 2463d8 <__init_array_end+0x3c8>
    e0e4:	be 1d 00 00 00       	mov    $0x1d,%esi
    e0e9:	e8 c2 92 ff ff       	callq  73b0 <_ZN4core9panicking5panic17h6861470adfbddef8E>
    e0ee:	0f 0b                	ud2    
    e0f0:	48 8d 3d 19 84 23 00 	lea    0x238419(%rip),%rdi        # 246510 <__init_array_end+0x500>
    e0f7:	ba 51 00 00 00       	mov    $0x51,%edx
    e0fc:	e8 ff 92 ff ff       	callq  7400 <_ZN4core9panicking18panic_bounds_check17h83121a2515f55ceeE>
    e101:	0f 0b                	ud2    
    e103:	48 8d 3d 04 e7 02 00 	lea    0x2e704(%rip),%rdi        # 3c80e <str.1+0x5e>
    e10a:	48 8d 15 1f 85 23 00 	lea    0x23851f(%rip),%rdx        # 246630 <__init_array_end+0x620>
    e111:	be 1f 00 00 00       	mov    $0x1f,%esi
    e116:	e8 95 92 ff ff       	callq  73b0 <_ZN4core9panicking5panic17h6861470adfbddef8E>
    e11b:	0f 0b                	ud2    
    e11d:	48 8d 3d fc 82 23 00 	lea    0x2382fc(%rip),%rdi        # 246420 <__init_array_end+0x410>
    e124:	ba 11 00 00 00       	mov    $0x11,%edx
    e129:	4c 89 f6             	mov    %r14,%rsi
    e12c:	e8 cf 92 ff ff       	callq  7400 <_ZN4core9panicking18panic_bounds_check17h83121a2515f55ceeE>
    e131:	0f 0b                	ud2    
    e133:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    e13a:	00 00 00 
    e13d:	0f 1f 00             	nopl   (%rax)

000000000000e140 <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE>:
    e140:	55                   	push   %rbp
    e141:	41 57                	push   %r15
    e143:	41 56                	push   %r14
    e145:	41 55                	push   %r13
    e147:	41 54                	push   %r12
    e149:	53                   	push   %rbx
    e14a:	48 81 ec a8 07 00 00 	sub    $0x7a8,%rsp
    e151:	49 89 fe             	mov    %rdi,%r14
    e154:	49 b9 00 00 00 00 00 	movabs $0x10000000000000,%r9
    e15b:	00 10 00 
    e15e:	66 48 0f 7e c3       	movq   %xmm0,%rbx
    e163:	49 89 dd             	mov    %rbx,%r13
    e166:	49 c1 ed 34          	shr    $0x34,%r13
    e16a:	49 8d 79 ff          	lea    -0x1(%r9),%rdi
    e16e:	48 21 df             	and    %rbx,%rdi
    e171:	48 8d 04 3f          	lea    (%rdi,%rdi,1),%rax
    e175:	4a 8d 2c 0f          	lea    (%rdi,%r9,1),%rbp
    e179:	66 41 81 e5 ff 07    	and    $0x7ff,%r13w
    e17f:	48 0f 44 e8          	cmove  %rax,%rbp
    e183:	48 8d 04 5d 00 00 00 	lea    0x0(,%rbx,2),%rax
    e18a:	00 
    e18b:	48 85 c0             	test   %rax,%rax
    e18e:	74 27                	je     e1b7 <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x77>
    e190:	89 e9                	mov    %ebp,%ecx
    e192:	83 e1 01             	and    $0x1,%ecx
    e195:	49 b8 00 00 00 00 00 	movabs $0x7ff0000000000000,%r8
    e19c:	00 f0 7f 
    e19f:	48 89 d8             	mov    %rbx,%rax
    e1a2:	4c 21 c0             	and    %r8,%rax
    e1a5:	74 14                	je     e1bb <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x7b>
    e1a7:	4c 39 c0             	cmp    %r8,%rax
    e1aa:	75 25                	jne    e1d1 <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x91>
    e1ac:	48 85 ff             	test   %rdi,%rdi
    e1af:	0f 94 c1             	sete   %cl
    e1b2:	80 c9 02             	or     $0x2,%cl
    e1b5:	eb 02                	jmp    e1b9 <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x79>
    e1b7:	b1 04                	mov    $0x4,%cl
    e1b9:	eb 47                	jmp    e202 <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0xc2>
    e1bb:	41 81 c5 cd fb ff ff 	add    $0xfffffbcd,%r13d
    e1c2:	80 f1 01             	xor    $0x1,%cl
    e1c5:	b8 01 00 00 00       	mov    $0x1,%eax
    e1ca:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
    e1cf:	eb 31                	jmp    e202 <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0xc2>
    e1d1:	31 c0                	xor    %eax,%eax
    e1d3:	4c 39 cd             	cmp    %r9,%rbp
    e1d6:	48 8d 6c 2d 00       	lea    0x0(%rbp,%rbp,1),%rbp
    e1db:	0f 94 c0             	sete   %al
    e1de:	48 bf 00 00 00 00 00 	movabs $0x40000000000000,%rdi
    e1e5:	00 40 00 
    e1e8:	48 0f 44 ef          	cmove  %rdi,%rbp
    e1ec:	48 8d 78 01          	lea    0x1(%rax),%rdi
    e1f0:	48 89 7c 24 38       	mov    %rdi,0x38(%rsp)
    e1f5:	41 29 c5             	sub    %eax,%r13d
    e1f8:	41 81 c5 cc fb ff ff 	add    $0xfffffbcc,%r13d
    e1ff:	80 f1 01             	xor    $0x1,%cl
    e202:	80 c1 fe             	add    $0xfe,%cl
    e205:	80 f9 03             	cmp    $0x3,%cl
    e208:	0f b6 c1             	movzbl %cl,%eax
    e20b:	bf 03 00 00 00       	mov    $0x3,%edi
    e210:	0f 42 f8             	cmovb  %eax,%edi
    e213:	40 84 ff             	test   %dil,%dil
    e216:	0f 84 83 00 00 00    	je     e29f <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x15f>
    e21c:	40 0f b6 c7          	movzbl %dil,%eax
    e220:	48 83 f8 02          	cmp    $0x2,%rax
    e224:	0f 85 a5 00 00 00    	jne    e2cf <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x18f>
    e22a:	48 8d 3d 07 f2 02 00 	lea    0x2f207(%rip),%rdi        # 3d438 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0xad8>
    e231:	45 31 c0             	xor    %r8d,%r8d
    e234:	40 0f b6 c6          	movzbl %sil,%eax
    e238:	48 8d 0d 61 c4 02 00 	lea    0x2c461(%rip),%rcx        # 3a6a0 <_ZN4core7unicode12unicode_data2cc19BITSET_INDEX_CHUNKS17h8a1f39cd536e9344E+0x1e0>
    e23f:	48 63 04 81          	movslq (%rcx,%rax,4),%rax
    e243:	48 01 c8             	add    %rcx,%rax
    e246:	ff e0                	jmpq   *%rax
    e248:	48 85 db             	test   %rbx,%rbx
    e24b:	48 8d 05 30 f0 02 00 	lea    0x2f030(%rip),%rax        # 3d282 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x922>
    e252:	48 8d 3d df f1 02 00 	lea    0x2f1df(%rip),%rdi        # 3d438 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0xad8>
    e259:	48 0f 48 f8          	cmovs  %rax,%rdi
    e25d:	48 c1 eb 3f          	shr    $0x3f,%rbx
    e261:	49 89 d8             	mov    %rbx,%r8
    e264:	66 c7 44 24 50 02 00 	movw   $0x2,0x50(%rsp)
    e26b:	48 85 d2             	test   %rdx,%rdx
    e26e:	0f 84 ee 02 00 00    	je     e562 <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x422>
    e274:	48 8d 05 b2 e5 02 00 	lea    0x2e5b2(%rip),%rax        # 3c82d <str.1+0x7d>
    e27b:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
    e280:	48 c7 44 24 60 02 00 	movq   $0x2,0x60(%rsp)
    e287:	00 00 
    e289:	66 c7 44 24 68 00 00 	movw   $0x0,0x68(%rsp)
    e290:	48 89 54 24 70       	mov    %rdx,0x70(%rsp)
    e295:	b8 02 00 00 00       	mov    $0x2,%eax
    e29a:	e9 2d 16 00 00       	jmpq   f8cc <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x178c>
    e29f:	66 c7 44 24 50 02 00 	movw   $0x2,0x50(%rsp)
    e2a6:	48 8d 05 25 e6 02 00 	lea    0x2e625(%rip),%rax        # 3c8d2 <str.1+0x122>
    e2ad:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
    e2b2:	48 c7 44 24 60 03 00 	movq   $0x3,0x60(%rsp)
    e2b9:	00 00 
    e2bb:	b8 01 00 00 00       	mov    $0x1,%eax
    e2c0:	48 8d 3d 71 f1 02 00 	lea    0x2f171(%rip),%rdi        # 3d438 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0xad8>
    e2c7:	45 31 c0             	xor    %r8d,%r8d
    e2ca:	e9 fd 15 00 00       	jmpq   f8cc <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x178c>
    e2cf:	40 80 fe 01          	cmp    $0x1,%sil
    e2d3:	41 0f 97 c0          	seta   %r8b
    e2d7:	48 85 db             	test   %rbx,%rbx
    e2da:	0f 98 c0             	sets   %al
    e2dd:	4c 8d 0d 9e ef 02 00 	lea    0x2ef9e(%rip),%r9        # 3d282 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x922>
    e2e4:	48 8d 1d 4d f1 02 00 	lea    0x2f14d(%rip),%rbx        # 3d438 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0xad8>
    e2eb:	49 0f 48 d9          	cmovs  %r9,%rbx
    e2ef:	48 8d 3d 39 e5 02 00 	lea    0x2e539(%rip),%rdi        # 3c82f <str.1+0x7f>
    e2f6:	49 0f 48 f9          	cmovs  %r9,%rdi
    e2fa:	44 08 c0             	or     %r8b,%al
    e2fd:	40 80 fe 02          	cmp    $0x2,%sil
    e301:	48 0f 42 fb          	cmovb  %rbx,%rdi
    e305:	44 0f b6 c0          	movzbl %al,%r8d
    e309:	80 f9 02             	cmp    $0x2,%cl
    e30c:	0f 86 0d 02 00 00    	jbe    e51f <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x3df>
    e312:	66 45 85 ed          	test   %r13w,%r13w
    e316:	48 c7 c0 f4 ff ff ff 	mov    $0xfffffffffffffff4,%rax
    e31d:	41 ba 05 00 00 00    	mov    $0x5,%r10d
    e323:	4c 0f 48 d0          	cmovs  %rax,%r10
    e327:	49 0f bf c5          	movswq %r13w,%rax
    e32b:	48 89 84 24 00 01 00 	mov    %rax,0x100(%rsp)
    e332:	00 
    e333:	4c 0f af d0          	imul   %rax,%r10
    e337:	49 c1 ea 04          	shr    $0x4,%r10
    e33b:	49 8d 72 15          	lea    0x15(%r10),%rsi
    e33f:	48 81 fe 00 04 00 00 	cmp    $0x400,%rsi
    e346:	0f 87 ed 16 00 00    	ja     fa39 <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x18f9>
    e34c:	89 d0                	mov    %edx,%eax
    e34e:	f7 d8                	neg    %eax
    e350:	48 81 fa 00 80 00 00 	cmp    $0x8000,%rdx
    e357:	b9 00 80 00 00       	mov    $0x8000,%ecx
    e35c:	0f 42 c8             	cmovb  %eax,%ecx
    e35f:	89 4c 24 0c          	mov    %ecx,0xc(%rsp)
    e363:	48 85 ed             	test   %rbp,%rbp
    e366:	0f 84 e7 16 00 00    	je     fa53 <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x1913>
    e36c:	48 89 74 24 20       	mov    %rsi,0x20(%rsp)
    e371:	48 89 e8             	mov    %rbp,%rax
    e374:	48 c1 e8 3d          	shr    $0x3d,%rax
    e378:	0f 85 ef 16 00 00    	jne    fa6d <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x192d>
    e37e:	4c 89 44 24 28       	mov    %r8,0x28(%rsp)
    e383:	48 89 7c 24 30       	mov    %rdi,0x30(%rsp)
    e388:	48 89 54 24 10       	mov    %rdx,0x10(%rsp)
    e38d:	4c 89 74 24 18       	mov    %r14,0x18(%rsp)
    e392:	48 89 e8             	mov    %rbp,%rax
    e395:	48 c1 e8 20          	shr    $0x20,%rax
    e399:	48 89 e9             	mov    %rbp,%rcx
    e39c:	48 c1 e1 20          	shl    $0x20,%rcx
    e3a0:	48 85 c0             	test   %rax,%rax
    e3a3:	48 0f 45 cd          	cmovne %rbp,%rcx
    e3a7:	41 8d 45 e0          	lea    -0x20(%r13),%eax
    e3ab:	41 0f 45 c5          	cmovne %r13d,%eax
    e3af:	48 89 ca             	mov    %rcx,%rdx
    e3b2:	48 c1 ea 30          	shr    $0x30,%rdx
    e3b6:	48 89 ce             	mov    %rcx,%rsi
    e3b9:	48 c1 e6 10          	shl    $0x10,%rsi
    e3bd:	48 85 d2             	test   %rdx,%rdx
    e3c0:	48 0f 45 f1          	cmovne %rcx,%rsi
    e3c4:	8d 48 f0             	lea    -0x10(%rax),%ecx
    e3c7:	0f 45 c8             	cmovne %eax,%ecx
    e3ca:	48 89 f0             	mov    %rsi,%rax
    e3cd:	48 c1 e8 38          	shr    $0x38,%rax
    e3d1:	48 89 f2             	mov    %rsi,%rdx
    e3d4:	48 c1 e2 08          	shl    $0x8,%rdx
    e3d8:	48 85 c0             	test   %rax,%rax
    e3db:	48 0f 45 d6          	cmovne %rsi,%rdx
    e3df:	8d 41 f8             	lea    -0x8(%rcx),%eax
    e3e2:	0f 45 c1             	cmovne %ecx,%eax
    e3e5:	48 89 d1             	mov    %rdx,%rcx
    e3e8:	48 c1 e9 3c          	shr    $0x3c,%rcx
    e3ec:	48 89 d6             	mov    %rdx,%rsi
    e3ef:	48 c1 e6 04          	shl    $0x4,%rsi
    e3f3:	48 85 c9             	test   %rcx,%rcx
    e3f6:	48 0f 45 f2          	cmovne %rdx,%rsi
    e3fa:	8d 48 fc             	lea    -0x4(%rax),%ecx
    e3fd:	0f 45 c8             	cmovne %eax,%ecx
    e400:	48 89 f0             	mov    %rsi,%rax
    e403:	48 c1 e8 3e          	shr    $0x3e,%rax
    e407:	4c 8d 1c b5 00 00 00 	lea    0x0(,%rsi,4),%r11
    e40e:	00 
    e40f:	48 85 c0             	test   %rax,%rax
    e412:	4c 0f 45 de          	cmovne %rsi,%r11
    e416:	8d 41 fe             	lea    -0x2(%rcx),%eax
    e419:	0f 45 c1             	cmovne %ecx,%eax
    e41c:	4d 85 db             	test   %r11,%r11
    e41f:	0f 99 c1             	setns  %cl
    e422:	4c 89 db             	mov    %r11,%rbx
    e425:	48 d3 e3             	shl    %cl,%rbx
    e428:	49 c1 fb 3f          	sar    $0x3f,%r11
    e42c:	41 f7 d3             	not    %r11d
    e42f:	41 01 c3             	add    %eax,%r11d
    e432:	b8 a0 ff ff ff       	mov    $0xffffffa0,%eax
    e437:	44 29 d8             	sub    %r11d,%eax
    e43a:	98                   	cwtl   
    e43b:	8d 04 80             	lea    (%rax,%rax,4),%eax
    e43e:	c1 e0 04             	shl    $0x4,%eax
    e441:	05 b0 53 01 00       	add    $0x153b0,%eax
    e446:	48 98                	cltq   
    e448:	48 69 c0 93 c9 4d 7b 	imul   $0x7b4dc993,%rax,%rax
    e44f:	48 89 c1             	mov    %rax,%rcx
    e452:	48 c1 e9 3f          	shr    $0x3f,%rcx
    e456:	48 c1 f8 2a          	sar    $0x2a,%rax
    e45a:	01 c8                	add    %ecx,%eax
    e45c:	48 63 f0             	movslq %eax,%rsi
    e45f:	83 fe 51             	cmp    $0x51,%esi
    e462:	0f 83 1f 16 00 00    	jae    fa87 <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x1947>
    e468:	48 c1 e6 04          	shl    $0x4,%rsi
    e46c:	4c 8d 05 d5 cb 02 00 	lea    0x2cbd5(%rip),%r8        # 3b048 <_ZN4core3num7flt2dec8strategy5grisu12CACHED_POW1017hec9e8afcf9e6cf37E>
    e473:	4a 8b 04 06          	mov    (%rsi,%r8,1),%rax
    e477:	46 0f b7 74 06 0a    	movzwl 0xa(%rsi,%r8,1),%r14d
    e47d:	48 89 df             	mov    %rbx,%rdi
    e480:	48 c1 ef 20          	shr    $0x20,%rdi
    e484:	89 db                	mov    %ebx,%ebx
    e486:	89 c1                	mov    %eax,%ecx
    e488:	48 c1 e8 20          	shr    $0x20,%rax
    e48c:	49 89 c1             	mov    %rax,%r9
    e48f:	4c 0f af cf          	imul   %rdi,%r9
    e493:	48 0f af c3          	imul   %rbx,%rax
    e497:	48 0f af f9          	imul   %rcx,%rdi
    e49b:	48 0f af cb          	imul   %rbx,%rcx
    e49f:	48 c1 e9 20          	shr    $0x20,%rcx
    e4a3:	89 fa                	mov    %edi,%edx
    e4a5:	48 01 ca             	add    %rcx,%rdx
    e4a8:	41 89 c7             	mov    %eax,%r15d
    e4ab:	49 01 d7             	add    %rdx,%r15
    e4ae:	49 81 ef 00 00 00 80 	sub    $0xffffffff80000000,%r15
    e4b5:	48 c1 ef 20          	shr    $0x20,%rdi
    e4b9:	4c 01 cf             	add    %r9,%rdi
    e4bc:	48 c1 e8 20          	shr    $0x20,%rax
    e4c0:	48 01 f8             	add    %rdi,%rax
    e4c3:	49 c1 ef 20          	shr    $0x20,%r15
    e4c7:	49 01 c7             	add    %rax,%r15
    e4ca:	66 46 03 5c 06 08    	add    0x8(%rsi,%r8,1),%r11w
    e4d0:	b8 c0 ff ff ff       	mov    $0xffffffc0,%eax
    e4d5:	44 29 d8             	sub    %r11d,%eax
    e4d8:	4c 0f bf e0          	movswq %ax,%r12
    e4dc:	45 89 e0             	mov    %r12d,%r8d
    e4df:	41 83 e0 3f          	and    $0x3f,%r8d
    e4e3:	4c 89 fa             	mov    %r15,%rdx
    e4e6:	44 89 c1             	mov    %r8d,%ecx
    e4e9:	48 d3 ea             	shr    %cl,%rdx
    e4ec:	41 bb 01 00 00 00    	mov    $0x1,%r11d
    e4f2:	49 d3 e3             	shl    %cl,%r11
    e4f5:	81 fa 10 27 00 00    	cmp    $0x2710,%edx
    e4fb:	0f 83 ad 00 00 00    	jae    e5ae <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x46e>
    e501:	83 fa 64             	cmp    $0x64,%edx
    e504:	0f 83 c5 00 00 00    	jae    e5cf <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x48f>
    e50a:	31 c9                	xor    %ecx,%ecx
    e50c:	83 fa 09             	cmp    $0x9,%edx
    e50f:	0f 97 c1             	seta   %cl
    e512:	44 8d 0c c9          	lea    (%rcx,%rcx,8),%r9d
    e516:	41 83 c1 01          	add    $0x1,%r9d
    e51a:	e9 04 01 00 00       	jmpq   e623 <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x4e3>
    e51f:	66 c7 44 24 50 02 00 	movw   $0x2,0x50(%rsp)
    e526:	48 8d 05 a8 e3 02 00 	lea    0x2e3a8(%rip),%rax        # 3c8d5 <str.1+0x125>
    e52d:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
    e532:	48 c7 44 24 60 03 00 	movq   $0x3,0x60(%rsp)
    e539:	00 00 
    e53b:	b8 01 00 00 00       	mov    $0x1,%eax
    e540:	e9 87 13 00 00       	jmpq   f8cc <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x178c>
    e545:	48 8d 3d e3 e2 02 00 	lea    0x2e2e3(%rip),%rdi        # 3c82f <str.1+0x7f>
    e54c:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    e552:	66 c7 44 24 50 02 00 	movw   $0x2,0x50(%rsp)
    e559:	48 85 d2             	test   %rdx,%rdx
    e55c:	0f 85 12 fd ff ff    	jne    e274 <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x134>
    e562:	48 8d 05 6b ef 02 00 	lea    0x2ef6b(%rip),%rax        # 3d4d4 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0xb74>
    e569:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
    e56e:	48 c7 44 24 60 01 00 	movq   $0x1,0x60(%rsp)
    e575:	00 00 
    e577:	b8 01 00 00 00       	mov    $0x1,%eax
    e57c:	e9 4b 13 00 00       	jmpq   f8cc <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x178c>
    e581:	48 85 db             	test   %rbx,%rbx
    e584:	48 8d 05 f7 ec 02 00 	lea    0x2ecf7(%rip),%rax        # 3d282 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x922>
    e58b:	48 8d 3d 9d e2 02 00 	lea    0x2e29d(%rip),%rdi        # 3c82f <str.1+0x7f>
    e592:	48 0f 48 f8          	cmovs  %rax,%rdi
    e596:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    e59c:	66 c7 44 24 50 02 00 	movw   $0x2,0x50(%rsp)
    e5a3:	48 85 d2             	test   %rdx,%rdx
    e5a6:	0f 85 c8 fc ff ff    	jne    e274 <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x134>
    e5ac:	eb b4                	jmp    e562 <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x422>
    e5ae:	81 fa 40 42 0f 00    	cmp    $0xf4240,%edx
    e5b4:	73 32                	jae    e5e8 <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x4a8>
    e5b6:	81 fa a0 86 01 00    	cmp    $0x186a0,%edx
    e5bc:	b8 10 27 00 00       	mov    $0x2710,%eax
    e5c1:	41 b9 a0 86 01 00    	mov    $0x186a0,%r9d
    e5c7:	44 0f 42 c8          	cmovb  %eax,%r9d
    e5cb:	b1 05                	mov    $0x5,%cl
    e5cd:	eb 51                	jmp    e620 <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x4e0>
    e5cf:	81 fa e8 03 00 00    	cmp    $0x3e8,%edx
    e5d5:	b8 64 00 00 00       	mov    $0x64,%eax
    e5da:	41 b9 e8 03 00 00    	mov    $0x3e8,%r9d
    e5e0:	44 0f 42 c8          	cmovb  %eax,%r9d
    e5e4:	b1 03                	mov    $0x3,%cl
    e5e6:	eb 38                	jmp    e620 <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x4e0>
    e5e8:	81 fa 00 e1 f5 05    	cmp    $0x5f5e100,%edx
    e5ee:	73 19                	jae    e609 <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x4c9>
    e5f0:	81 fa 80 96 98 00    	cmp    $0x989680,%edx
    e5f6:	b8 40 42 0f 00       	mov    $0xf4240,%eax
    e5fb:	41 b9 80 96 98 00    	mov    $0x989680,%r9d
    e601:	44 0f 42 c8          	cmovb  %eax,%r9d
    e605:	b1 07                	mov    $0x7,%cl
    e607:	eb 17                	jmp    e620 <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x4e0>
    e609:	81 fa 00 ca 9a 3b    	cmp    $0x3b9aca00,%edx
    e60f:	b8 00 e1 f5 05       	mov    $0x5f5e100,%eax
    e614:	41 b9 00 ca 9a 3b    	mov    $0x3b9aca00,%r9d
    e61a:	44 0f 42 c8          	cmovb  %eax,%r9d
    e61e:	b1 09                	mov    $0x9,%cl
    e620:	80 d9 00             	sbb    $0x0,%cl
    e623:	0f b6 c9             	movzbl %cl,%ecx
    e626:	89 cb                	mov    %ecx,%ebx
    e628:	44 29 f3             	sub    %r14d,%ebx
    e62b:	89 de                	mov    %ebx,%esi
    e62d:	83 c6 01             	add    $0x1,%esi
    e630:	8b 7c 24 0c          	mov    0xc(%rsp),%edi
    e634:	66 39 fe             	cmp    %di,%si
    e637:	0f 8e ac 00 00 00    	jle    e6e9 <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x5a9>
    e63d:	48 89 9c 24 f8 00 00 	mov    %rbx,0xf8(%rsp)
    e644:	00 
    e645:	4c 89 5c 24 48       	mov    %r11,0x48(%rsp)
    e64a:	4c 89 db             	mov    %r11,%rbx
    e64d:	49 83 c3 ff          	add    $0xffffffffffffffff,%r11
    e651:	4d 21 df             	and    %r11,%r15
    e654:	48 0f bf c6          	movswq %si,%rax
    e658:	48 89 74 24 40       	mov    %rsi,0x40(%rsp)
    e65d:	29 fe                	sub    %edi,%esi
    e65f:	48 0f bf ff          	movswq %di,%rdi
    e663:	48 29 f8             	sub    %rdi,%rax
    e666:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
    e66b:	48 39 f8             	cmp    %rdi,%rax
    e66e:	4c 0f bf f6          	movswq %si,%r14
    e672:	4c 0f 43 f7          	cmovae %rdi,%r14
    e676:	48 f7 d9             	neg    %rcx
    e679:	be 01 00 00 00       	mov    $0x1,%esi
    e67e:	bf cd cc cc cc       	mov    $0xcccccccd,%edi
    e683:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    e68a:	00 00 00 
    e68d:	0f 1f 00             	nopl   (%rax)
    e690:	89 d0                	mov    %edx,%eax
    e692:	31 d2                	xor    %edx,%edx
    e694:	41 f7 f1             	div    %r9d
    e697:	04 30                	add    $0x30,%al
    e699:	88 84 34 a7 03 00 00 	mov    %al,0x3a7(%rsp,%rsi,1)
    e6a0:	49 39 f6             	cmp    %rsi,%r14
    e6a3:	0f 84 eb 00 00 00    	je     e794 <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x654>
    e6a9:	48 8d 04 31          	lea    (%rcx,%rsi,1),%rax
    e6ad:	48 83 f8 01          	cmp    $0x1,%rax
    e6b1:	0f 84 b0 01 00 00    	je     e867 <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x727>
    e6b7:	44 89 c8             	mov    %r9d,%eax
    e6ba:	48 0f af c7          	imul   %rdi,%rax
    e6be:	48 c1 e8 23          	shr    $0x23,%rax
    e6c2:	48 83 c6 01          	add    $0x1,%rsi
    e6c6:	41 83 f9 0a          	cmp    $0xa,%r9d
    e6ca:	41 89 c1             	mov    %eax,%r9d
    e6cd:	73 c1                	jae    e690 <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x550>
    e6cf:	48 8d 3d da e0 02 00 	lea    0x2e0da(%rip),%rdi        # 3c7b0 <str.1>
    e6d6:	48 8d 15 0b 7f 23 00 	lea    0x237f0b(%rip),%rdx        # 2465e8 <__init_array_end+0x5d8>
    e6dd:	be 19 00 00 00       	mov    $0x19,%esi
    e6e2:	e8 c9 8c ff ff       	callq  73b0 <_ZN4core9panicking5panic17h6861470adfbddef8E>
    e6e7:	0f 0b                	ud2    
    e6e9:	48 b9 cd cc cc cc cc 	movabs $0xcccccccccccccccd,%rcx
    e6f0:	cc cc cc 
    e6f3:	4c 89 f8             	mov    %r15,%rax
    e6f6:	48 f7 e1             	mul    %rcx
    e6f9:	44 89 c8             	mov    %r9d,%eax
    e6fc:	44 89 c1             	mov    %r8d,%ecx
    e6ff:	48 d3 e0             	shl    %cl,%rax
    e702:	48 89 c1             	mov    %rax,%rcx
    e705:	4c 29 d9             	sub    %r11,%rcx
    e708:	4c 8b 74 24 18       	mov    0x18(%rsp),%r14
    e70d:	4c 8b 7c 24 10       	mov    0x10(%rsp),%r15
    e712:	48 8b 7c 24 38       	mov    0x38(%rsp),%rdi
    e717:	0f 86 1c 02 00 00    	jbe    e939 <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x7f9>
    e71d:	4c 39 d9             	cmp    %r11,%rcx
    e720:	0f 86 13 02 00 00    	jbe    e939 <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x7f9>
    e726:	48 c1 ea 03          	shr    $0x3,%rdx
    e72a:	48 89 c1             	mov    %rax,%rcx
    e72d:	48 29 d1             	sub    %rdx,%rcx
    e730:	48 39 d1             	cmp    %rdx,%rcx
    e733:	76 1a                	jbe    e74f <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x60f>
    e735:	49 89 f4             	mov    %rsi,%r12
    e738:	48 8d 0c 12          	lea    (%rdx,%rdx,1),%rcx
    e73c:	48 89 c6             	mov    %rax,%rsi
    e73f:	48 29 ce             	sub    %rcx,%rsi
    e742:	4b 8d 0c 1b          	lea    (%r11,%r11,1),%rcx
    e746:	48 39 ce             	cmp    %rcx,%rsi
    e749:	0f 83 c4 11 00 00    	jae    f913 <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x17d3>
    e74f:	4c 29 da             	sub    %r11,%rdx
    e752:	0f 86 e1 01 00 00    	jbe    e939 <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x7f9>
    e758:	48 29 d0             	sub    %rdx,%rax
    e75b:	48 39 d0             	cmp    %rdx,%rax
    e75e:	0f 87 d5 01 00 00    	ja     e939 <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x7f9>
    e764:	44 8d 63 02          	lea    0x2(%rbx),%r12d
    e768:	44 8b 6c 24 0c       	mov    0xc(%rsp),%r13d
    e76d:	66 45 39 ec          	cmp    %r13w,%r12w
    e771:	0f 8e d6 11 00 00    	jle    f94d <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x180d>
    e777:	c6 84 24 a8 03 00 00 	movb   $0x31,0x3a8(%rsp)
    e77e:	31 
    e77f:	41 b9 01 00 00 00    	mov    $0x1,%r9d
    e785:	66 45 39 ec          	cmp    %r13w,%r12w
    e789:	0f 8f cf 0f 00 00    	jg     f75e <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x161e>
    e78f:	e9 42 0f 00 00       	jmpq   f6d6 <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x1596>
    e794:	89 d0                	mov    %edx,%eax
    e796:	44 89 c1             	mov    %r8d,%ecx
    e799:	48 d3 e0             	shl    %cl,%rax
    e79c:	44 89 ca             	mov    %r9d,%edx
    e79f:	48 d3 e2             	shl    %cl,%rdx
    e7a2:	48 89 d1             	mov    %rdx,%rcx
    e7a5:	48 2b 4c 24 48       	sub    0x48(%rsp),%rcx
    e7aa:	0f 86 7b 01 00 00    	jbe    e92b <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x7eb>
    e7b0:	48 3b 4c 24 48       	cmp    0x48(%rsp),%rcx
    e7b5:	0f 86 70 01 00 00    	jbe    e92b <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x7eb>
    e7bb:	4d 89 f1             	mov    %r14,%r9
    e7be:	4c 01 f8             	add    %r15,%rax
    e7c1:	48 89 d1             	mov    %rdx,%rcx
    e7c4:	48 29 c1             	sub    %rax,%rcx
    e7c7:	48 39 c1             	cmp    %rax,%rcx
    e7ca:	48 8b 7c 24 48       	mov    0x48(%rsp),%rdi
    e7cf:	76 17                	jbe    e7e8 <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x6a8>
    e7d1:	48 8d 0c 00          	lea    (%rax,%rax,1),%rcx
    e7d5:	48 89 d6             	mov    %rdx,%rsi
    e7d8:	48 29 ce             	sub    %rcx,%rsi
    e7db:	48 8d 0c 3f          	lea    (%rdi,%rdi,1),%rcx
    e7df:	48 39 ce             	cmp    %rcx,%rsi
    e7e2:	0f 83 42 11 00 00    	jae    f92a <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x17ea>
    e7e8:	48 29 f8             	sub    %rdi,%rax
    e7eb:	0f 86 3a 01 00 00    	jbe    e92b <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x7eb>
    e7f1:	48 29 c2             	sub    %rax,%rdx
    e7f4:	48 39 c2             	cmp    %rax,%rdx
    e7f7:	0f 87 2e 01 00 00    	ja     e92b <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x7eb>
    e7fd:	48 8d bc 24 a8 03 00 	lea    0x3a8(%rsp),%rdi
    e804:	00 
    e805:	48 8b 74 24 20       	mov    0x20(%rsp),%rsi
    e80a:	4c 89 ca             	mov    %r9,%rdx
    e80d:	e8 8e b2 ff ff       	callq  9aa0 <_ZN4core3num7flt2dec8round_up17h468b4c0dfea5d943E>
    e812:	a8 01                	test   $0x1,%al
    e814:	0f 84 5e 11 00 00    	je     f978 <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x1838>
    e81a:	48 8b 84 24 f8 00 00 	mov    0xf8(%rsp),%rax
    e821:	00 
    e822:	44 8d 60 02          	lea    0x2(%rax),%r12d
    e826:	44 8b 6c 24 0c       	mov    0xc(%rsp),%r13d
    e82b:	66 45 39 ec          	cmp    %r13w,%r12w
    e82f:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    e834:	4c 8b 7c 24 10       	mov    0x10(%rsp),%r15
    e839:	0f 8e 4d 11 00 00    	jle    f98c <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x184c>
    e83f:	4d 89 f1             	mov    %r14,%r9
    e842:	4c 3b 74 24 20       	cmp    0x20(%rsp),%r14
    e847:	73 0c                	jae    e855 <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x715>
    e849:	42 88 94 0c a8 03 00 	mov    %dl,0x3a8(%rsp,%r9,1)
    e850:	00 
    e851:	49 83 c1 01          	add    $0x1,%r9
    e855:	49 89 c6             	mov    %rax,%r14
    e858:	66 45 39 ec          	cmp    %r13w,%r12w
    e85c:	0f 8f fc 0e 00 00    	jg     f75e <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x161e>
    e862:	e9 6f 0e 00 00       	jmpq   f6d6 <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x1596>
    e867:	41 83 c4 ff          	add    $0xffffffff,%r12d
    e86b:	41 83 e4 3f          	and    $0x3f,%r12d
    e86f:	48 c7 c7 ec ff ff ff 	mov    $0xffffffffffffffec,%rdi
    e876:	4c 29 d7             	sub    %r10,%rdi
    e879:	ba 01 00 00 00       	mov    $0x1,%edx
    e87e:	4d 89 f1             	mov    %r14,%r9
    e881:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    e888:	00 00 00 
    e88b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    e890:	48 89 d0             	mov    %rdx,%rax
    e893:	44 89 e1             	mov    %r12d,%ecx
    e896:	48 d3 ea             	shr    %cl,%rdx
    e899:	48 85 d2             	test   %rdx,%rdx
    e89c:	0f 85 89 00 00 00    	jne    e92b <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x7eb>
    e8a2:	48 8d 0c 37          	lea    (%rdi,%rsi,1),%rcx
    e8a6:	48 83 f9 01          	cmp    $0x1,%rcx
    e8aa:	0f 84 4c 11 00 00    	je     f9fc <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x18bc>
    e8b0:	4d 01 ff             	add    %r15,%r15
    e8b3:	4b 8d 1c bf          	lea    (%r15,%r15,4),%rbx
    e8b7:	48 8d 0c 00          	lea    (%rax,%rax,1),%rcx
    e8bb:	48 8d 14 89          	lea    (%rcx,%rcx,4),%rdx
    e8bf:	49 89 df             	mov    %rbx,%r15
    e8c2:	4d 21 df             	and    %r11,%r15
    e8c5:	44 89 c1             	mov    %r8d,%ecx
    e8c8:	48 d3 eb             	shr    %cl,%rbx
    e8cb:	80 c3 30             	add    $0x30,%bl
    e8ce:	88 9c 34 a8 03 00 00 	mov    %bl,0x3a8(%rsp,%rsi,1)
    e8d5:	48 83 c6 01          	add    $0x1,%rsi
    e8d9:	49 39 f1             	cmp    %rsi,%r9
    e8dc:	75 b2                	jne    e890 <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x750>
    e8de:	48 8b 4c 24 48       	mov    0x48(%rsp),%rcx
    e8e3:	48 29 d1             	sub    %rdx,%rcx
    e8e6:	76 43                	jbe    e92b <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x7eb>
    e8e8:	48 39 d1             	cmp    %rdx,%rcx
    e8eb:	76 3e                	jbe    e92b <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x7eb>
    e8ed:	48 8b 74 24 48       	mov    0x48(%rsp),%rsi
    e8f2:	48 89 f1             	mov    %rsi,%rcx
    e8f5:	4c 29 f9             	sub    %r15,%rcx
    e8f8:	4c 39 f9             	cmp    %r15,%rcx
    e8fb:	76 18                	jbe    e915 <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x7d5>
    e8fd:	4b 8d 0c 3f          	lea    (%r15,%r15,1),%rcx
    e901:	48 29 ce             	sub    %rcx,%rsi
    e904:	48 c1 e0 02          	shl    $0x2,%rax
    e908:	48 8d 04 80          	lea    (%rax,%rax,4),%rax
    e90c:	48 39 c6             	cmp    %rax,%rsi
    e90f:	0f 83 15 10 00 00    	jae    f92a <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x17ea>
    e915:	49 29 d7             	sub    %rdx,%r15
    e918:	76 11                	jbe    e92b <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x7eb>
    e91a:	48 8b 44 24 48       	mov    0x48(%rsp),%rax
    e91f:	4c 29 f8             	sub    %r15,%rax
    e922:	4c 39 f8             	cmp    %r15,%rax
    e925:	0f 86 34 10 00 00    	jbe    f95f <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x181f>
    e92b:	48 8b 7c 24 38       	mov    0x38(%rsp),%rdi
    e930:	48 85 ff             	test   %rdi,%rdi
    e933:	0f 84 42 12 00 00    	je     fb7b <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x1a3b>
    e939:	48 01 ef             	add    %rbp,%rdi
    e93c:	0f 82 58 11 00 00    	jb     fa9a <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x195a>
    e942:	48 83 fd 01          	cmp    $0x1,%rbp
    e946:	0f 82 68 11 00 00    	jb     fab4 <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x1974>
    e94c:	48 89 e8             	mov    %rbp,%rax
    e94f:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
    e953:	74 0a                	je     e95f <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x81f>
    e955:	48 0f bd c0          	bsr    %rax,%rax
    e959:	48 83 f0 3f          	xor    $0x3f,%rax
    e95d:	eb 05                	jmp    e964 <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x824>
    e95f:	b8 40 00 00 00       	mov    $0x40,%eax
    e964:	48 8b 8c 24 00 01 00 	mov    0x100(%rsp),%rcx
    e96b:	00 
    e96c:	48 29 c1             	sub    %rax,%rcx
    e96f:	48 69 c1 42 4d 10 4d 	imul   $0x4d104d42,%rcx,%rax
    e976:	49 bc 80 50 13 44 13 	movabs $0x1344135080,%r12
    e97d:	00 00 00 
    e980:	49 01 c4             	add    %rax,%r12
    e983:	49 c1 ec 20          	shr    $0x20,%r12
    e987:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e98b:	66 0f 7f 84 24 e0 00 	movdqa %xmm0,0xe0(%rsp)
    e992:	00 00 
    e994:	66 0f 7f 84 24 d0 00 	movdqa %xmm0,0xd0(%rsp)
    e99b:	00 00 
    e99d:	66 0f 7f 84 24 c0 00 	movdqa %xmm0,0xc0(%rsp)
    e9a4:	00 00 
    e9a6:	66 0f 7f 84 24 b0 00 	movdqa %xmm0,0xb0(%rsp)
    e9ad:	00 00 
    e9af:	66 0f 7f 84 24 a0 00 	movdqa %xmm0,0xa0(%rsp)
    e9b6:	00 00 
    e9b8:	66 0f 7f 84 24 90 00 	movdqa %xmm0,0x90(%rsp)
    e9bf:	00 00 
    e9c1:	66 0f 7f 84 24 80 00 	movdqa %xmm0,0x80(%rsp)
    e9c8:	00 00 
    e9ca:	66 0f 7f 44 24 70    	movdqa %xmm0,0x70(%rsp)
    e9d0:	66 0f 7f 44 24 60    	movdqa %xmm0,0x60(%rsp)
    e9d6:	66 0f 7f 44 24 50    	movdqa %xmm0,0x50(%rsp)
    e9dc:	31 c0                	xor    %eax,%eax
    e9de:	66 90                	xchg   %ax,%ax
    e9e0:	48 83 f8 28          	cmp    $0x28,%rax
    e9e4:	0f 84 fa 0f 00 00    	je     f9e4 <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x18a4>
    e9ea:	89 6c 84 50          	mov    %ebp,0x50(%rsp,%rax,4)
    e9ee:	48 c1 ed 20          	shr    $0x20,%rbp
    e9f2:	48 83 c0 01          	add    $0x1,%rax
    e9f6:	48 85 ed             	test   %rbp,%rbp
    e9f9:	75 e5                	jne    e9e0 <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x8a0>
    e9fb:	48 89 84 24 08 01 00 	mov    %rax,0x108(%rsp)
    ea02:	00 
    ea03:	48 8d bc 24 10 01 00 	lea    0x110(%rsp),%rdi
    ea0a:	00 
    ea0b:	48 8d 74 24 50       	lea    0x50(%rsp),%rsi
    ea10:	ba a0 00 00 00       	mov    $0xa0,%edx
    ea15:	ff 15 b5 94 23 00    	callq  *0x2394b5(%rip)        # 247ed0 <memcpy@GLIBC_2.14>
    ea1b:	48 c7 84 24 b0 01 00 	movq   $0x1,0x1b0(%rsp)
    ea22:	00 01 00 00 00 
    ea27:	c7 84 24 b8 01 00 00 	movl   $0x1,0x1b8(%rsp)
    ea2e:	01 00 00 00 
    ea32:	66 0f ef c0          	pxor   %xmm0,%xmm0
    ea36:	f3 0f 7f 84 24 bc 01 	movdqu %xmm0,0x1bc(%rsp)
    ea3d:	00 00 
    ea3f:	f3 0f 7f 84 24 cc 01 	movdqu %xmm0,0x1cc(%rsp)
    ea46:	00 00 
    ea48:	f3 0f 7f 84 24 dc 01 	movdqu %xmm0,0x1dc(%rsp)
    ea4f:	00 00 
    ea51:	f3 0f 7f 84 24 ec 01 	movdqu %xmm0,0x1ec(%rsp)
    ea58:	00 00 
    ea5a:	f3 0f 7f 84 24 fc 01 	movdqu %xmm0,0x1fc(%rsp)
    ea61:	00 00 
    ea63:	f3 0f 7f 84 24 0c 02 	movdqu %xmm0,0x20c(%rsp)
    ea6a:	00 00 
    ea6c:	f3 0f 7f 84 24 1c 02 	movdqu %xmm0,0x21c(%rsp)
    ea73:	00 00 
    ea75:	f3 0f 7f 84 24 2c 02 	movdqu %xmm0,0x22c(%rsp)
    ea7c:	00 00 
    ea7e:	f3 0f 7f 84 24 3c 02 	movdqu %xmm0,0x23c(%rsp)
    ea85:	00 00 
    ea87:	f3 0f 7f 84 24 48 02 	movdqu %xmm0,0x248(%rsp)
    ea8e:	00 00 
    ea90:	66 45 85 ed          	test   %r13w,%r13w
    ea94:	78 12                	js     eaa8 <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x968>
    ea96:	48 8d bc 24 08 01 00 	lea    0x108(%rsp),%rdi
    ea9d:	00 
    ea9e:	48 8b b4 24 00 01 00 	mov    0x100(%rsp),%rsi
    eaa5:	00 
    eaa6:	eb 0f                	jmp    eab7 <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x977>
    eaa8:	41 f7 dd             	neg    %r13d
    eaab:	49 0f bf f5          	movswq %r13w,%rsi
    eaaf:	48 8d bc 24 b0 01 00 	lea    0x1b0(%rsp),%rdi
    eab6:	00 
    eab7:	e8 84 8f ff ff       	callq  7a40 <_ZN4core3num6bignum8Big32x408mul_pow217h98a8a86db4c173d2E>
    eabc:	44 8b 6c 24 0c       	mov    0xc(%rsp),%r13d
    eac1:	4c 89 e1             	mov    %r12,%rcx
    eac4:	4c 89 e0             	mov    %r12,%rax
    eac7:	48 c1 e0 30          	shl    $0x30,%rax
    eacb:	48 89 c6             	mov    %rax,%rsi
    eace:	48 f7 de             	neg    %rsi
    ead1:	66 85 c9             	test   %cx,%cx
    ead4:	48 0f 49 f0          	cmovns %rax,%rsi
    ead8:	48 8d 84 24 b0 01 00 	lea    0x1b0(%rsp),%rax
    eadf:	00 
    eae0:	48 8d bc 24 08 01 00 	lea    0x108(%rsp),%rdi
    eae7:	00 
    eae8:	48 0f 49 f8          	cmovns %rax,%rdi
    eaec:	48 c1 fe 30          	sar    $0x30,%rsi
    eaf0:	e8 0b a9 ff ff       	callq  9400 <_ZN4core3num7flt2dec8strategy6dragon9mul_pow1017h05c46b8dc6645da1E>
    eaf5:	48 8b 9c 24 b0 01 00 	mov    0x1b0(%rsp),%rbx
    eafc:	00 
    eafd:	4c 8d bc 24 b8 01 00 	lea    0x1b8(%rsp),%r15
    eb04:	00 
    eb05:	48 89 5c 24 50       	mov    %rbx,0x50(%rsp)
    eb0a:	48 8d 7c 24 58       	lea    0x58(%rsp),%rdi
    eb0f:	ba a0 00 00 00       	mov    $0xa0,%edx
    eb14:	4c 89 fe             	mov    %r15,%rsi
    eb17:	ff 15 b3 93 23 00    	callq  *0x2393b3(%rip)        # 247ed0 <memcpy@GLIBC_2.14>
    eb1d:	48 83 fb 28          	cmp    $0x28,%rbx
    eb21:	0f 87 ae 0e 00 00    	ja     f9d5 <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x1895>
    eb27:	4c 8d b4 24 b8 01 00 	lea    0x1b8(%rsp),%r14
    eb2e:	00 
    eb2f:	48 be 53 5a 9b a0 2f 	movabs $0x44b82fa09b5a53,%rsi
    eb36:	b8 44 00 
    eb39:	4c 8b 5c 24 20       	mov    0x20(%rsp),%r11
    eb3e:	4d 89 d8             	mov    %r11,%r8
    eb41:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    eb48:	00 00 00 
    eb4b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    eb50:	48 85 db             	test   %rbx,%rbx
    eb53:	0f 84 a9 00 00 00    	je     ec02 <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0xac2>
    eb59:	48 8d 2c 9c          	lea    (%rsp,%rbx,4),%rbp
    eb5d:	48 83 c5 58          	add    $0x58,%rbp
    eb61:	48 8d 04 9d fc ff ff 	lea    -0x4(,%rbx,4),%rax
    eb68:	ff 
    eb69:	48 89 c3             	mov    %rax,%rbx
    eb6c:	48 c1 eb 02          	shr    $0x2,%rbx
    eb70:	48 83 c3 01          	add    $0x1,%rbx
    eb74:	41 89 d9             	mov    %ebx,%r9d
    eb77:	41 83 e1 01          	and    $0x1,%r9d
    eb7b:	48 85 c0             	test   %rax,%rax
    eb7e:	0f 84 ac 00 00 00    	je     ec30 <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0xaf0>
    eb84:	4c 29 cb             	sub    %r9,%rbx
    eb87:	31 c0                	xor    %eax,%eax
    eb89:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    eb90:	8b 4d fc             	mov    -0x4(%rbp),%ecx
    eb93:	48 c1 e0 20          	shl    $0x20,%rax
    eb97:	48 09 c8             	or     %rcx,%rax
    eb9a:	48 c1 e8 09          	shr    $0x9,%rax
    eb9e:	48 f7 e6             	mul    %rsi
    eba1:	8b 45 f8             	mov    -0x8(%rbp),%eax
    eba4:	48 c1 ea 0b          	shr    $0xb,%rdx
    eba8:	69 fa 00 ca 9a 3b    	imul   $0x3b9aca00,%edx,%edi
    ebae:	29 f9                	sub    %edi,%ecx
    ebb0:	89 55 fc             	mov    %edx,-0x4(%rbp)
    ebb3:	48 c1 e1 20          	shl    $0x20,%rcx
    ebb7:	48 09 c1             	or     %rax,%rcx
    ebba:	48 89 c8             	mov    %rcx,%rax
    ebbd:	48 c1 e8 09          	shr    $0x9,%rax
    ebc1:	48 f7 e6             	mul    %rsi
    ebc4:	48 c1 ea 0b          	shr    $0xb,%rdx
    ebc8:	48 69 c2 00 ca 9a 3b 	imul   $0x3b9aca00,%rdx,%rax
    ebcf:	48 29 c1             	sub    %rax,%rcx
    ebd2:	89 55 f8             	mov    %edx,-0x8(%rbp)
    ebd5:	48 83 c5 f8          	add    $0xfffffffffffffff8,%rbp
    ebd9:	48 89 c8             	mov    %rcx,%rax
    ebdc:	48 83 c3 fe          	add    $0xfffffffffffffffe,%rbx
    ebe0:	75 ae                	jne    eb90 <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0xa50>
    ebe2:	4d 85 c9             	test   %r9,%r9
    ebe5:	74 1b                	je     ec02 <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0xac2>
    ebe7:	8b 45 fc             	mov    -0x4(%rbp),%eax
    ebea:	48 c1 e1 20          	shl    $0x20,%rcx
    ebee:	48 09 c1             	or     %rax,%rcx
    ebf1:	48 c1 e9 09          	shr    $0x9,%rcx
    ebf5:	48 89 c8             	mov    %rcx,%rax
    ebf8:	48 f7 e6             	mul    %rsi
    ebfb:	48 c1 ea 0b          	shr    $0xb,%rdx
    ebff:	89 55 fc             	mov    %edx,-0x4(%rbp)
    ec02:	49 8d 40 f7          	lea    -0x9(%r8),%rax
    ec06:	48 83 f8 0a          	cmp    $0xa,%rax
    ec0a:	72 2d                	jb     ec39 <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0xaf9>
    ec0c:	48 8b 5c 24 50       	mov    0x50(%rsp),%rbx
    ec11:	49 89 c0             	mov    %rax,%r8
    ec14:	48 83 fb 28          	cmp    $0x28,%rbx
    ec18:	0f 86 32 ff ff ff    	jbe    eb50 <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0xa10>
    ec1e:	e9 b2 0d 00 00       	jmpq   f9d5 <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x1895>
    ec23:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    ec2a:	00 00 00 
    ec2d:	0f 1f 00             	nopl   (%rax)
    ec30:	31 c9                	xor    %ecx,%ecx
    ec32:	4d 85 c9             	test   %r9,%r9
    ec35:	75 b0                	jne    ebe7 <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0xaa7>
    ec37:	eb c9                	jmp    ec02 <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0xac2>
    ec39:	48 8d 05 cc da 02 00 	lea    0x2dacc(%rip),%rax        # 3c70c <_ZN4core3num7flt2dec8strategy6dragon8TWOPOW1017h0773ad74716bcfbaE>
    ec40:	42 8b 74 80 dc       	mov    -0x24(%rax,%r8,4),%esi
    ec45:	48 85 f6             	test   %rsi,%rsi
    ec48:	0f 84 80 0e 00 00    	je     face <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x198e>
    ec4e:	48 8b 7c 24 50       	mov    0x50(%rsp),%rdi
    ec53:	48 83 ff 29          	cmp    $0x29,%rdi
    ec57:	0f 83 c1 0d 00 00    	jae    fa1e <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x18de>
    ec5d:	48 85 ff             	test   %rdi,%rdi
    ec60:	0f 84 8f 00 00 00    	je     ecf5 <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0xbb5>
    ec66:	48 8d 2c bc          	lea    (%rsp,%rdi,4),%rbp
    ec6a:	48 83 c5 58          	add    $0x58,%rbp
    ec6e:	48 8d 04 bd fc ff ff 	lea    -0x4(,%rdi,4),%rax
    ec75:	ff 
    ec76:	48 89 c7             	mov    %rax,%rdi
    ec79:	48 c1 ef 02          	shr    $0x2,%rdi
    ec7d:	48 83 c7 01          	add    $0x1,%rdi
    ec81:	89 fb                	mov    %edi,%ebx
    ec83:	83 e3 01             	and    $0x1,%ebx
    ec86:	48 85 c0             	test   %rax,%rax
    ec89:	0f 84 f1 01 00 00    	je     ee80 <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0xd40>
    ec8f:	48 29 df             	sub    %rbx,%rdi
    ec92:	31 d2                	xor    %edx,%edx
    ec94:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    ec9b:	00 00 00 
    ec9e:	66 90                	xchg   %ax,%ax
    eca0:	8b 4d f8             	mov    -0x8(%rbp),%ecx
    eca3:	8b 45 fc             	mov    -0x4(%rbp),%eax
    eca6:	48 c1 e2 20          	shl    $0x20,%rdx
    ecaa:	48 09 c2             	or     %rax,%rdx
    ecad:	48 89 d0             	mov    %rdx,%rax
    ecb0:	31 d2                	xor    %edx,%edx
    ecb2:	48 f7 f6             	div    %rsi
    ecb5:	89 45 fc             	mov    %eax,-0x4(%rbp)
    ecb8:	48 c1 e2 20          	shl    $0x20,%rdx
    ecbc:	48 09 d1             	or     %rdx,%rcx
    ecbf:	48 89 c8             	mov    %rcx,%rax
    ecc2:	31 d2                	xor    %edx,%edx
    ecc4:	48 f7 f6             	div    %rsi
    ecc7:	89 45 f8             	mov    %eax,-0x8(%rbp)
    ecca:	48 83 c5 f8          	add    $0xfffffffffffffff8,%rbp
    ecce:	48 83 c7 fe          	add    $0xfffffffffffffffe,%rdi
    ecd2:	75 cc                	jne    eca0 <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0xb60>
    ecd4:	48 85 db             	test   %rbx,%rbx
    ecd7:	74 15                	je     ecee <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0xbae>
    ecd9:	8b 45 fc             	mov    -0x4(%rbp),%eax
    ecdc:	48 c1 e2 20          	shl    $0x20,%rdx
    ece0:	48 09 c2             	or     %rax,%rdx
    ece3:	48 89 d0             	mov    %rdx,%rax
    ece6:	31 d2                	xor    %edx,%edx
    ece8:	48 f7 f6             	div    %rsi
    eceb:	89 45 fc             	mov    %eax,-0x4(%rbp)
    ecee:	4c 8b 4c 24 50       	mov    0x50(%rsp),%r9
    ecf3:	eb 03                	jmp    ecf8 <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0xbb8>
    ecf5:	45 31 c9             	xor    %r9d,%r9d
    ecf8:	4c 8b 84 24 08 01 00 	mov    0x108(%rsp),%r8
    ecff:	00 
    ed00:	4d 39 c1             	cmp    %r8,%r9
    ed03:	4d 0f 46 c8          	cmovbe %r8,%r9
    ed07:	49 83 f9 28          	cmp    $0x28,%r9
    ed0b:	0f 87 fe 0c 00 00    	ja     fa0f <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x18cf>
    ed11:	31 f6                	xor    %esi,%esi
    ed13:	4d 85 c9             	test   %r9,%r9
    ed16:	74 0a                	je     ed22 <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0xbe2>
    ed18:	49 83 f9 01          	cmp    $0x1,%r9
    ed1c:	75 0c                	jne    ed2a <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0xbea>
    ed1e:	31 d2                	xor    %edx,%edx
    ed20:	eb 6c                	jmp    ed8e <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0xc4e>
    ed22:	45 31 c9             	xor    %r9d,%r9d
    ed25:	e9 9a 00 00 00       	jmpq   edc4 <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0xc84>
    ed2a:	44 89 cf             	mov    %r9d,%edi
    ed2d:	83 e7 01             	and    $0x1,%edi
    ed30:	4c 89 cd             	mov    %r9,%rbp
    ed33:	48 29 fd             	sub    %rdi,%rbp
    ed36:	31 f6                	xor    %esi,%esi
    ed38:	31 d2                	xor    %edx,%edx
    ed3a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    ed40:	8b 44 94 58          	mov    0x58(%rsp,%rdx,4),%eax
    ed44:	8b 5c 94 5c          	mov    0x5c(%rsp,%rdx,4),%ebx
    ed48:	03 84 94 10 01 00 00 	add    0x110(%rsp,%rdx,4),%eax
    ed4f:	41 0f 92 c2          	setb   %r10b
    ed53:	01 f0                	add    %esi,%eax
    ed55:	0f 92 c1             	setb   %cl
    ed58:	44 08 d1             	or     %r10b,%cl
    ed5b:	0f b6 c9             	movzbl %cl,%ecx
    ed5e:	89 44 94 58          	mov    %eax,0x58(%rsp,%rdx,4)
    ed62:	03 9c 94 14 01 00 00 	add    0x114(%rsp,%rdx,4),%ebx
    ed69:	0f 92 c0             	setb   %al
    ed6c:	01 cb                	add    %ecx,%ebx
    ed6e:	0f 92 c1             	setb   %cl
    ed71:	08 c1                	or     %al,%cl
    ed73:	0f b6 f1             	movzbl %cl,%esi
    ed76:	89 5c 94 5c          	mov    %ebx,0x5c(%rsp,%rdx,4)
    ed7a:	48 83 c2 02          	add    $0x2,%rdx
    ed7e:	48 39 d5             	cmp    %rdx,%rbp
    ed81:	75 bd                	jne    ed40 <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0xc00>
    ed83:	48 85 ff             	test   %rdi,%rdi
    ed86:	75 06                	jne    ed8e <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0xc4e>
    ed88:	85 f6                	test   %esi,%esi
    ed8a:	74 38                	je     edc4 <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0xc84>
    ed8c:	eb 1f                	jmp    edad <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0xc6d>
    ed8e:	8b 7c 94 58          	mov    0x58(%rsp,%rdx,4),%edi
    ed92:	8b 9c 94 10 01 00 00 	mov    0x110(%rsp,%rdx,4),%ebx
    ed99:	8d 04 1f             	lea    (%rdi,%rbx,1),%eax
    ed9c:	01 f0                	add    %esi,%eax
    ed9e:	0f 92 c1             	setb   %cl
    eda1:	89 44 94 58          	mov    %eax,0x58(%rsp,%rdx,4)
    eda5:	01 fb                	add    %edi,%ebx
    eda7:	72 04                	jb     edad <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0xc6d>
    eda9:	84 c9                	test   %cl,%cl
    edab:	74 17                	je     edc4 <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0xc84>
    edad:	49 83 f9 27          	cmp    $0x27,%r9
    edb1:	0f 87 31 0d 00 00    	ja     fae8 <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x19a8>
    edb7:	42 c7 44 8c 58 01 00 	movl   $0x1,0x58(%rsp,%r9,4)
    edbe:	00 00 
    edc0:	49 83 c1 01          	add    $0x1,%r9
    edc4:	4c 89 4c 24 50       	mov    %r9,0x50(%rsp)
    edc9:	48 8b bc 24 b0 01 00 	mov    0x1b0(%rsp),%rdi
    edd0:	00 
    edd1:	49 39 f9             	cmp    %rdi,%r9
    edd4:	49 0f 47 f9          	cmova  %r9,%rdi
    edd8:	48 83 ff 29          	cmp    $0x29,%rdi
    eddc:	0f 83 3c 0c 00 00    	jae    fa1e <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x18de>
    ede2:	48 c1 e7 02          	shl    $0x2,%rdi
    ede6:	48 85 ff             	test   %rdi,%rdi
    ede9:	75 12                	jne    edfd <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0xcbd>
    edeb:	eb 2f                	jmp    ee1c <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0xcdc>
    eded:	0f 1f 00             	nopl   (%rax)
    edf0:	48 83 c7 fc          	add    $0xfffffffffffffffc,%rdi
    edf4:	84 c9                	test   %cl,%cl
    edf6:	75 29                	jne    ee21 <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0xce1>
    edf8:	48 85 ff             	test   %rdi,%rdi
    edfb:	74 1f                	je     ee1c <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0xcdc>
    edfd:	74 27                	je     ee26 <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0xce6>
    edff:	8b 44 3c 54          	mov    0x54(%rsp,%rdi,1),%eax
    ee03:	31 d2                	xor    %edx,%edx
    ee05:	b9 ff 00 00 00       	mov    $0xff,%ecx
    ee0a:	3b 84 3c b4 01 00 00 	cmp    0x1b4(%rsp,%rdi,1),%eax
    ee11:	0f 95 c3             	setne  %bl
    ee14:	72 da                	jb     edf0 <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0xcb0>
    ee16:	88 da                	mov    %bl,%dl
    ee18:	89 d1                	mov    %edx,%ecx
    ee1a:	eb d4                	jmp    edf0 <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0xcb0>
    ee1c:	48 f7 df             	neg    %rdi
    ee1f:	18 c9                	sbb    %cl,%cl
    ee21:	80 f9 02             	cmp    $0x2,%cl
    ee24:	73 15                	jae    ee3b <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0xcfb>
    ee26:	41 83 c4 01          	add    $0x1,%r12d
    ee2a:	b1 01                	mov    $0x1,%cl
    ee2c:	66 45 39 ec          	cmp    %r13w,%r12w
    ee30:	0f 8d 33 01 00 00    	jge    ef69 <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0xe29>
    ee36:	e9 91 06 00 00       	jmpq   f4cc <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x138c>
    ee3b:	49 83 f8 29          	cmp    $0x29,%r8
    ee3f:	0f 83 50 0d 00 00    	jae    fb95 <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x1a55>
    ee45:	4d 85 c0             	test   %r8,%r8
    ee48:	74 46                	je     ee90 <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0xd50>
    ee4a:	48 8d 8c 24 10 01 00 	lea    0x110(%rsp),%rcx
    ee51:	00 
    ee52:	4a 8d 04 85 fc ff ff 	lea    -0x4(,%r8,4),%rax
    ee59:	ff 
    ee5a:	48 89 c7             	mov    %rax,%rdi
    ee5d:	48 c1 ef 02          	shr    $0x2,%rdi
    ee61:	48 83 c7 01          	add    $0x1,%rdi
    ee65:	89 fa                	mov    %edi,%edx
    ee67:	83 e2 03             	and    $0x3,%edx
    ee6a:	48 83 f8 0c          	cmp    $0xc,%rax
    ee6e:	73 3c                	jae    eeac <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0xd6c>
    ee70:	31 f6                	xor    %esi,%esi
    ee72:	48 85 d2             	test   %rdx,%rdx
    ee75:	0f 85 a1 00 00 00    	jne    ef1c <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0xddc>
    ee7b:	e9 bb 00 00 00       	jmpq   ef3b <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0xdfb>
    ee80:	31 d2                	xor    %edx,%edx
    ee82:	48 85 db             	test   %rbx,%rbx
    ee85:	0f 85 4e fe ff ff    	jne    ecd9 <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0xb99>
    ee8b:	e9 5e fe ff ff       	jmpq   ecee <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0xbae>
    ee90:	45 31 c0             	xor    %r8d,%r8d
    ee93:	4c 89 84 24 08 01 00 	mov    %r8,0x108(%rsp)
    ee9a:	00 
    ee9b:	b1 01                	mov    $0x1,%cl
    ee9d:	66 45 39 ec          	cmp    %r13w,%r12w
    eea1:	0f 8c 25 06 00 00    	jl     f4cc <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x138c>
    eea7:	e9 bd 00 00 00       	jmpq   ef69 <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0xe29>
    eeac:	48 29 d7             	sub    %rdx,%rdi
    eeaf:	31 f6                	xor    %esi,%esi
    eeb1:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    eeb8:	00 00 00 
    eebb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    eec0:	8b 01                	mov    (%rcx),%eax
    eec2:	8b 69 04             	mov    0x4(%rcx),%ebp
    eec5:	48 8d 04 80          	lea    (%rax,%rax,4),%rax
    eec9:	48 8d 04 46          	lea    (%rsi,%rax,2),%rax
    eecd:	89 01                	mov    %eax,(%rcx)
    eecf:	48 c1 e8 20          	shr    $0x20,%rax
    eed3:	48 8d 34 ad 00 00 00 	lea    0x0(,%rbp,4),%rsi
    eeda:	00 
    eedb:	48 01 ee             	add    %rbp,%rsi
    eede:	48 8d 04 70          	lea    (%rax,%rsi,2),%rax
    eee2:	89 41 04             	mov    %eax,0x4(%rcx)
    eee5:	48 c1 e8 20          	shr    $0x20,%rax
    eee9:	8b 71 08             	mov    0x8(%rcx),%esi
    eeec:	48 8d 34 b6          	lea    (%rsi,%rsi,4),%rsi
    eef0:	48 8d 04 70          	lea    (%rax,%rsi,2),%rax
    eef4:	89 41 08             	mov    %eax,0x8(%rcx)
    eef7:	48 c1 e8 20          	shr    $0x20,%rax
    eefb:	8b 71 0c             	mov    0xc(%rcx),%esi
    eefe:	48 8d 34 b6          	lea    (%rsi,%rsi,4),%rsi
    ef02:	48 8d 34 70          	lea    (%rax,%rsi,2),%rsi
    ef06:	89 71 0c             	mov    %esi,0xc(%rcx)
    ef09:	48 c1 ee 20          	shr    $0x20,%rsi
    ef0d:	48 83 c1 10          	add    $0x10,%rcx
    ef11:	48 83 c7 fc          	add    $0xfffffffffffffffc,%rdi
    ef15:	75 a9                	jne    eec0 <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0xd80>
    ef17:	48 85 d2             	test   %rdx,%rdx
    ef1a:	74 1f                	je     ef3b <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0xdfb>
    ef1c:	31 ff                	xor    %edi,%edi
    ef1e:	66 90                	xchg   %ax,%ax
    ef20:	8b 04 b9             	mov    (%rcx,%rdi,4),%eax
    ef23:	48 8d 04 80          	lea    (%rax,%rax,4),%rax
    ef27:	48 8d 34 46          	lea    (%rsi,%rax,2),%rsi
    ef2b:	89 34 b9             	mov    %esi,(%rcx,%rdi,4)
    ef2e:	48 c1 ee 20          	shr    $0x20,%rsi
    ef32:	48 83 c7 01          	add    $0x1,%rdi
    ef36:	48 39 fa             	cmp    %rdi,%rdx
    ef39:	75 e5                	jne    ef20 <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0xde0>
    ef3b:	85 f6                	test   %esi,%esi
    ef3d:	74 16                	je     ef55 <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0xe15>
    ef3f:	49 83 f8 27          	cmp    $0x27,%r8
    ef43:	0f 87 7b 0c 00 00    	ja     fbc4 <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x1a84>
    ef49:	42 89 b4 84 10 01 00 	mov    %esi,0x110(%rsp,%r8,4)
    ef50:	00 
    ef51:	49 83 c0 01          	add    $0x1,%r8
    ef55:	4c 89 84 24 08 01 00 	mov    %r8,0x108(%rsp)
    ef5c:	00 
    ef5d:	b1 01                	mov    $0x1,%cl
    ef5f:	66 45 39 ec          	cmp    %r13w,%r12w
    ef63:	0f 8c 63 05 00 00    	jl     f4cc <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x138c>
    ef69:	49 0f bf c4          	movswq %r12w,%rax
    ef6d:	44 89 e2             	mov    %r12d,%edx
    ef70:	44 29 ea             	sub    %r13d,%edx
    ef73:	49 0f bf f5          	movswq %r13w,%rsi
    ef77:	48 29 f0             	sub    %rsi,%rax
    ef7a:	4c 39 d8             	cmp    %r11,%rax
    ef7d:	48 0f bf c2          	movswq %dx,%rax
    ef81:	49 0f 43 c3          	cmovae %r11,%rax
    ef85:	48 85 c0             	test   %rax,%rax
    ef88:	0f 84 3e 05 00 00    	je     f4cc <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x138c>
    ef8e:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
    ef93:	4c 89 64 24 40       	mov    %r12,0x40(%rsp)
    ef98:	48 8b 84 24 b0 01 00 	mov    0x1b0(%rsp),%rax
    ef9f:	00 
    efa0:	48 89 84 24 00 03 00 	mov    %rax,0x300(%rsp)
    efa7:	00 
    efa8:	48 8d bc 24 08 03 00 	lea    0x308(%rsp),%rdi
    efaf:	00 
    efb0:	48 8b 1d 19 8f 23 00 	mov    0x238f19(%rip),%rbx        # 247ed0 <memcpy@GLIBC_2.14>
    efb7:	ba a0 00 00 00       	mov    $0xa0,%edx
    efbc:	4c 89 fe             	mov    %r15,%rsi
    efbf:	ff d3                	callq  *%rbx
    efc1:	48 8d bc 24 00 03 00 	lea    0x300(%rsp),%rdi
    efc8:	00 
    efc9:	be 01 00 00 00       	mov    $0x1,%esi
    efce:	e8 6d 8a ff ff       	callq  7a40 <_ZN4core3num6bignum8Big32x408mul_pow217h98a8a86db4c173d2E>
    efd3:	48 8b 84 24 b0 01 00 	mov    0x1b0(%rsp),%rax
    efda:	00 
    efdb:	48 89 84 24 58 02 00 	mov    %rax,0x258(%rsp)
    efe2:	00 
    efe3:	48 8d bc 24 60 02 00 	lea    0x260(%rsp),%rdi
    efea:	00 
    efeb:	ba a0 00 00 00       	mov    $0xa0,%edx
    eff0:	4c 89 fe             	mov    %r15,%rsi
    eff3:	ff d3                	callq  *%rbx
    eff5:	48 8d bc 24 58 02 00 	lea    0x258(%rsp),%rdi
    effc:	00 
    effd:	be 02 00 00 00       	mov    $0x2,%esi
    f002:	e8 39 8a ff ff       	callq  7a40 <_ZN4core3num6bignum8Big32x408mul_pow217h98a8a86db4c173d2E>
    f007:	48 8b 84 24 b0 01 00 	mov    0x1b0(%rsp),%rax
    f00e:	00 
    f00f:	48 89 44 24 50       	mov    %rax,0x50(%rsp)
    f014:	48 8d 7c 24 58       	lea    0x58(%rsp),%rdi
    f019:	ba a0 00 00 00       	mov    $0xa0,%edx
    f01e:	4c 89 fe             	mov    %r15,%rsi
    f021:	ff d3                	callq  *%rbx
    f023:	48 8d 7c 24 50       	lea    0x50(%rsp),%rdi
    f028:	be 03 00 00 00       	mov    $0x3,%esi
    f02d:	e8 0e 8a ff ff       	callq  7a40 <_ZN4core3num6bignum8Big32x408mul_pow217h98a8a86db4c173d2E>
    f032:	45 31 c0             	xor    %r8d,%r8d
    f035:	4c 8b 8c 24 08 01 00 	mov    0x108(%rsp),%r9
    f03c:	00 
    f03d:	49 83 f9 29          	cmp    $0x29,%r9
    f041:	0f 83 c8 09 00 00    	jae    fa0f <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x18cf>
    f047:	4c 89 c7             	mov    %r8,%rdi
    f04a:	49 83 c0 01          	add    $0x1,%r8
    f04e:	4a 8d 0c 8d 00 00 00 	lea    0x0(,%r9,4),%rcx
    f055:	00 
    f056:	31 c0                	xor    %eax,%eax
    f058:	48 8b 74 24 20       	mov    0x20(%rsp),%rsi
    f05d:	0f 1f 00             	nopl   (%rax)
    f060:	48 39 c1             	cmp    %rax,%rcx
    f063:	0f 84 ab 04 00 00    	je     f514 <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x13d4>
    f069:	83 bc 04 10 01 00 00 	cmpl   $0x0,0x110(%rsp,%rax,1)
    f070:	00 
    f071:	48 8d 40 04          	lea    0x4(%rax),%rax
    f075:	74 e9                	je     f060 <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0xf20>
    f077:	4c 8b 54 24 50       	mov    0x50(%rsp),%r10
    f07c:	4d 39 d1             	cmp    %r10,%r9
    f07f:	4d 0f 47 d1          	cmova  %r9,%r10
    f083:	49 83 fa 29          	cmp    $0x29,%r10
    f087:	0f 83 ce 0a 00 00    	jae    fb5b <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x1a1b>
    f08d:	4a 8d 0c 95 00 00 00 	lea    0x0(,%r10,4),%rcx
    f094:	00 
    f095:	48 85 c9             	test   %rcx,%rcx
    f098:	75 13                	jne    f0ad <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0xf6d>
    f09a:	eb 31                	jmp    f0cd <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0xf8d>
    f09c:	0f 1f 40 00          	nopl   0x0(%rax)
    f0a0:	48 83 c1 fc          	add    $0xfffffffffffffffc,%rcx
    f0a4:	84 db                	test   %bl,%bl
    f0a6:	75 2a                	jne    f0d2 <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0xf92>
    f0a8:	48 85 c9             	test   %rcx,%rcx
    f0ab:	74 20                	je     f0cd <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0xf8d>
    f0ad:	74 28                	je     f0d7 <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0xf97>
    f0af:	8b 84 0c 0c 01 00 00 	mov    0x10c(%rsp,%rcx,1),%eax
    f0b6:	31 ed                	xor    %ebp,%ebp
    f0b8:	bb ff 00 00 00       	mov    $0xff,%ebx
    f0bd:	3b 44 0c 54          	cmp    0x54(%rsp,%rcx,1),%eax
    f0c1:	0f 95 c2             	setne  %dl
    f0c4:	72 da                	jb     f0a0 <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0xf60>
    f0c6:	40 88 d5             	mov    %dl,%bpl
    f0c9:	89 eb                	mov    %ebp,%ebx
    f0cb:	eb d3                	jmp    f0a0 <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0xf60>
    f0cd:	48 f7 d9             	neg    %rcx
    f0d0:	18 db                	sbb    %bl,%bl
    f0d2:	80 fb 02             	cmp    $0x2,%bl
    f0d5:	73 58                	jae    f12f <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0xfef>
    f0d7:	4d 85 d2             	test   %r10,%r10
    f0da:	74 46                	je     f122 <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0xfe2>
    f0dc:	bd 01 00 00 00       	mov    $0x1,%ebp
    f0e1:	31 c0                	xor    %eax,%eax
    f0e3:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    f0ea:	00 00 00 
    f0ed:	0f 1f 00             	nopl   (%rax)
    f0f0:	8b 54 84 58          	mov    0x58(%rsp,%rax,4),%edx
    f0f4:	f7 d2                	not    %edx
    f0f6:	03 94 84 10 01 00 00 	add    0x110(%rsp,%rax,4),%edx
    f0fd:	0f 92 c1             	setb   %cl
    f100:	01 ea                	add    %ebp,%edx
    f102:	0f 92 c3             	setb   %bl
    f105:	08 cb                	or     %cl,%bl
    f107:	0f b6 eb             	movzbl %bl,%ebp
    f10a:	89 94 84 10 01 00 00 	mov    %edx,0x110(%rsp,%rax,4)
    f111:	48 83 c0 01          	add    $0x1,%rax
    f115:	4c 39 d0             	cmp    %r10,%rax
    f118:	72 d6                	jb     f0f0 <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0xfb0>
    f11a:	84 db                	test   %bl,%bl
    f11c:	0f 84 dc 09 00 00    	je     fafe <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x19be>
    f122:	4c 89 94 24 08 01 00 	mov    %r10,0x108(%rsp)
    f129:	00 
    f12a:	41 b3 08             	mov    $0x8,%r11b
    f12d:	eb 06                	jmp    f135 <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0xff5>
    f12f:	45 31 db             	xor    %r11d,%r11d
    f132:	4d 89 ca             	mov    %r9,%r10
    f135:	4c 8b 8c 24 58 02 00 	mov    0x258(%rsp),%r9
    f13c:	00 
    f13d:	4d 39 ca             	cmp    %r9,%r10
    f140:	4d 0f 47 ca          	cmova  %r10,%r9
    f144:	49 83 f9 29          	cmp    $0x29,%r9
    f148:	0f 83 c1 08 00 00    	jae    fa0f <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x18cf>
    f14e:	4a 8d 2c 8d 00 00 00 	lea    0x0(,%r9,4),%rbp
    f155:	00 
    f156:	48 85 ed             	test   %rbp,%rbp
    f159:	75 12                	jne    f16d <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x102d>
    f15b:	eb 32                	jmp    f18f <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x104f>
    f15d:	0f 1f 00             	nopl   (%rax)
    f160:	48 83 c5 fc          	add    $0xfffffffffffffffc,%rbp
    f164:	84 d2                	test   %dl,%dl
    f166:	75 2c                	jne    f194 <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x1054>
    f168:	48 85 ed             	test   %rbp,%rbp
    f16b:	74 22                	je     f18f <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x104f>
    f16d:	74 2a                	je     f199 <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x1059>
    f16f:	8b 84 2c 0c 01 00 00 	mov    0x10c(%rsp,%rbp,1),%eax
    f176:	31 db                	xor    %ebx,%ebx
    f178:	ba ff 00 00 00       	mov    $0xff,%edx
    f17d:	3b 84 2c 5c 02 00 00 	cmp    0x25c(%rsp,%rbp,1),%eax
    f184:	0f 95 c0             	setne  %al
    f187:	72 d7                	jb     f160 <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x1020>
    f189:	88 c3                	mov    %al,%bl
    f18b:	89 da                	mov    %ebx,%edx
    f18d:	eb d1                	jmp    f160 <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x1020>
    f18f:	48 f7 dd             	neg    %rbp
    f192:	18 d2                	sbb    %dl,%dl
    f194:	80 fa 01             	cmp    $0x1,%dl
    f197:	77 5a                	ja     f1f3 <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x10b3>
    f199:	4d 85 c9             	test   %r9,%r9
    f19c:	74 47                	je     f1e5 <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x10a5>
    f19e:	bd 01 00 00 00       	mov    $0x1,%ebp
    f1a3:	31 c9                	xor    %ecx,%ecx
    f1a5:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    f1ac:	00 00 00 
    f1af:	90                   	nop
    f1b0:	8b 84 8c 60 02 00 00 	mov    0x260(%rsp,%rcx,4),%eax
    f1b7:	f7 d0                	not    %eax
    f1b9:	03 84 8c 10 01 00 00 	add    0x110(%rsp,%rcx,4),%eax
    f1c0:	0f 92 c2             	setb   %dl
    f1c3:	01 e8                	add    %ebp,%eax
    f1c5:	0f 92 c3             	setb   %bl
    f1c8:	08 d3                	or     %dl,%bl
    f1ca:	0f b6 eb             	movzbl %bl,%ebp
    f1cd:	89 84 8c 10 01 00 00 	mov    %eax,0x110(%rsp,%rcx,4)
    f1d4:	48 83 c1 01          	add    $0x1,%rcx
    f1d8:	4c 39 c9             	cmp    %r9,%rcx
    f1db:	72 d3                	jb     f1b0 <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x1070>
    f1dd:	84 db                	test   %bl,%bl
    f1df:	0f 84 19 09 00 00    	je     fafe <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x19be>
    f1e5:	4c 89 8c 24 08 01 00 	mov    %r9,0x108(%rsp)
    f1ec:	00 
    f1ed:	41 80 cb 04          	or     $0x4,%r11b
    f1f1:	eb 03                	jmp    f1f6 <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x10b6>
    f1f3:	4d 89 d1             	mov    %r10,%r9
    f1f6:	4c 8b 94 24 00 03 00 	mov    0x300(%rsp),%r10
    f1fd:	00 
    f1fe:	4d 39 d1             	cmp    %r10,%r9
    f201:	4d 0f 47 d1          	cmova  %r9,%r10
    f205:	49 83 fa 29          	cmp    $0x29,%r10
    f209:	0f 83 4c 09 00 00    	jae    fb5b <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x1a1b>
    f20f:	4a 8d 2c 95 00 00 00 	lea    0x0(,%r10,4),%rbp
    f216:	00 
    f217:	48 85 ed             	test   %rbp,%rbp
    f21a:	75 11                	jne    f22d <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x10ed>
    f21c:	eb 31                	jmp    f24f <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x110f>
    f21e:	66 90                	xchg   %ax,%ax
    f220:	48 83 c5 fc          	add    $0xfffffffffffffffc,%rbp
    f224:	84 db                	test   %bl,%bl
    f226:	75 2c                	jne    f254 <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x1114>
    f228:	48 85 ed             	test   %rbp,%rbp
    f22b:	74 22                	je     f24f <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x110f>
    f22d:	74 2a                	je     f259 <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x1119>
    f22f:	8b 84 2c 0c 01 00 00 	mov    0x10c(%rsp,%rbp,1),%eax
    f236:	31 d2                	xor    %edx,%edx
    f238:	bb ff 00 00 00       	mov    $0xff,%ebx
    f23d:	3b 84 2c 04 03 00 00 	cmp    0x304(%rsp,%rbp,1),%eax
    f244:	0f 95 c0             	setne  %al
    f247:	72 d7                	jb     f220 <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x10e0>
    f249:	88 c2                	mov    %al,%dl
    f24b:	89 d3                	mov    %edx,%ebx
    f24d:	eb d1                	jmp    f220 <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x10e0>
    f24f:	48 f7 dd             	neg    %rbp
    f252:	18 db                	sbb    %bl,%bl
    f254:	80 fb 01             	cmp    $0x1,%bl
    f257:	77 5a                	ja     f2b3 <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x1173>
    f259:	4d 85 d2             	test   %r10,%r10
    f25c:	74 47                	je     f2a5 <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x1165>
    f25e:	bd 01 00 00 00       	mov    $0x1,%ebp
    f263:	31 c0                	xor    %eax,%eax
    f265:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    f26c:	00 00 00 
    f26f:	90                   	nop
    f270:	8b 94 84 08 03 00 00 	mov    0x308(%rsp,%rax,4),%edx
    f277:	f7 d2                	not    %edx
    f279:	03 94 84 10 01 00 00 	add    0x110(%rsp,%rax,4),%edx
    f280:	0f 92 c1             	setb   %cl
    f283:	01 ea                	add    %ebp,%edx
    f285:	0f 92 c3             	setb   %bl
    f288:	08 cb                	or     %cl,%bl
    f28a:	0f b6 eb             	movzbl %bl,%ebp
    f28d:	89 94 84 10 01 00 00 	mov    %edx,0x110(%rsp,%rax,4)
    f294:	48 83 c0 01          	add    $0x1,%rax
    f298:	4c 39 d0             	cmp    %r10,%rax
    f29b:	72 d3                	jb     f270 <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x1130>
    f29d:	84 db                	test   %bl,%bl
    f29f:	0f 84 59 08 00 00    	je     fafe <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x19be>
    f2a5:	4c 89 94 24 08 01 00 	mov    %r10,0x108(%rsp)
    f2ac:	00 
    f2ad:	41 80 c3 02          	add    $0x2,%r11b
    f2b1:	eb 03                	jmp    f2b6 <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x1176>
    f2b3:	4d 89 ca             	mov    %r9,%r10
    f2b6:	4c 8b 8c 24 b0 01 00 	mov    0x1b0(%rsp),%r9
    f2bd:	00 
    f2be:	4d 39 ca             	cmp    %r9,%r10
    f2c1:	4d 0f 47 ca          	cmova  %r10,%r9
    f2c5:	49 83 f9 29          	cmp    $0x29,%r9
    f2c9:	0f 83 40 07 00 00    	jae    fa0f <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x18cf>
    f2cf:	4a 8d 2c 8d 00 00 00 	lea    0x0(,%r9,4),%rbp
    f2d6:	00 
    f2d7:	48 85 ed             	test   %rbp,%rbp
    f2da:	75 11                	jne    f2ed <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x11ad>
    f2dc:	eb 31                	jmp    f30f <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x11cf>
    f2de:	66 90                	xchg   %ax,%ax
    f2e0:	48 83 c5 fc          	add    $0xfffffffffffffffc,%rbp
    f2e4:	84 db                	test   %bl,%bl
    f2e6:	75 2c                	jne    f314 <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x11d4>
    f2e8:	48 85 ed             	test   %rbp,%rbp
    f2eb:	74 22                	je     f30f <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x11cf>
    f2ed:	74 2a                	je     f319 <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x11d9>
    f2ef:	8b 84 2c 0c 01 00 00 	mov    0x10c(%rsp,%rbp,1),%eax
    f2f6:	31 d2                	xor    %edx,%edx
    f2f8:	bb ff 00 00 00       	mov    $0xff,%ebx
    f2fd:	3b 84 2c b4 01 00 00 	cmp    0x1b4(%rsp,%rbp,1),%eax
    f304:	0f 95 c0             	setne  %al
    f307:	72 d7                	jb     f2e0 <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x11a0>
    f309:	88 c2                	mov    %al,%dl
    f30b:	89 d3                	mov    %edx,%ebx
    f30d:	eb d1                	jmp    f2e0 <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x11a0>
    f30f:	48 f7 dd             	neg    %rbp
    f312:	18 db                	sbb    %bl,%bl
    f314:	80 fb 01             	cmp    $0x1,%bl
    f317:	77 62                	ja     f37b <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x123b>
    f319:	4d 85 c9             	test   %r9,%r9
    f31c:	74 47                	je     f365 <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x1225>
    f31e:	bd 01 00 00 00       	mov    $0x1,%ebp
    f323:	31 c9                	xor    %ecx,%ecx
    f325:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    f32c:	00 00 00 
    f32f:	90                   	nop
    f330:	8b 84 8c b8 01 00 00 	mov    0x1b8(%rsp,%rcx,4),%eax
    f337:	f7 d0                	not    %eax
    f339:	03 84 8c 10 01 00 00 	add    0x110(%rsp,%rcx,4),%eax
    f340:	0f 92 c2             	setb   %dl
    f343:	01 e8                	add    %ebp,%eax
    f345:	0f 92 c3             	setb   %bl
    f348:	08 d3                	or     %dl,%bl
    f34a:	0f b6 eb             	movzbl %bl,%ebp
    f34d:	89 84 8c 10 01 00 00 	mov    %eax,0x110(%rsp,%rcx,4)
    f354:	48 83 c1 01          	add    $0x1,%rcx
    f358:	4c 39 c9             	cmp    %r9,%rcx
    f35b:	72 d3                	jb     f330 <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x11f0>
    f35d:	84 db                	test   %bl,%bl
    f35f:	0f 84 99 07 00 00    	je     fafe <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x19be>
    f365:	4c 89 8c 24 08 01 00 	mov    %r9,0x108(%rsp)
    f36c:	00 
    f36d:	41 80 c3 01          	add    $0x1,%r11b
    f371:	48 39 f7             	cmp    %rsi,%rdi
    f374:	75 11                	jne    f387 <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x1247>
    f376:	e9 ef 07 00 00       	jmpq   fb6a <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x1a2a>
    f37b:	4d 89 d1             	mov    %r10,%r9
    f37e:	48 39 f7             	cmp    %rsi,%rdi
    f381:	0f 84 e3 07 00 00    	je     fb6a <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x1a2a>
    f387:	41 80 c3 30          	add    $0x30,%r11b
    f38b:	44 88 9c 3c a8 03 00 	mov    %r11b,0x3a8(%rsp,%rdi,1)
    f392:	00 
    f393:	49 83 f9 29          	cmp    $0x29,%r9
    f397:	0f 83 72 06 00 00    	jae    fa0f <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x18cf>
    f39d:	4d 85 c9             	test   %r9,%r9
    f3a0:	74 36                	je     f3d8 <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x1298>
    f3a2:	4a 8d 04 8d fc ff ff 	lea    -0x4(,%r9,4),%rax
    f3a9:	ff 
    f3aa:	48 89 c1             	mov    %rax,%rcx
    f3ad:	48 c1 e9 02          	shr    $0x2,%rcx
    f3b1:	48 83 c1 01          	add    $0x1,%rcx
    f3b5:	89 cd                	mov    %ecx,%ebp
    f3b7:	83 e5 03             	and    $0x3,%ebp
    f3ba:	48 83 f8 0c          	cmp    $0xc,%rax
    f3be:	73 33                	jae    f3f3 <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x12b3>
    f3c0:	31 ff                	xor    %edi,%edi
    f3c2:	48 8d b4 24 10 01 00 	lea    0x110(%rsp),%rsi
    f3c9:	00 
    f3ca:	48 85 ed             	test   %rbp,%rbp
    f3cd:	0f 85 82 00 00 00    	jne    f455 <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x1315>
    f3d3:	e9 a3 00 00 00       	jmpq   f47b <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x133b>
    f3d8:	45 31 c9             	xor    %r9d,%r9d
    f3db:	4c 89 8c 24 08 01 00 	mov    %r9,0x108(%rsp)
    f3e2:	00 
    f3e3:	4c 3b 44 24 38       	cmp    0x38(%rsp),%r8
    f3e8:	0f 85 4f fc ff ff    	jne    f03d <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0xefd>
    f3ee:	e9 b5 00 00 00       	jmpq   f4a8 <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x1368>
    f3f3:	48 29 e9             	sub    %rbp,%rcx
    f3f6:	31 ff                	xor    %edi,%edi
    f3f8:	48 8d b4 24 10 01 00 	lea    0x110(%rsp),%rsi
    f3ff:	00 
    f400:	8b 06                	mov    (%rsi),%eax
    f402:	8b 56 04             	mov    0x4(%rsi),%edx
    f405:	48 8d 04 80          	lea    (%rax,%rax,4),%rax
    f409:	48 8d 04 47          	lea    (%rdi,%rax,2),%rax
    f40d:	89 06                	mov    %eax,(%rsi)
    f40f:	48 c1 e8 20          	shr    $0x20,%rax
    f413:	48 8d 14 92          	lea    (%rdx,%rdx,4),%rdx
    f417:	48 8d 04 50          	lea    (%rax,%rdx,2),%rax
    f41b:	89 46 04             	mov    %eax,0x4(%rsi)
    f41e:	48 c1 e8 20          	shr    $0x20,%rax
    f422:	8b 56 08             	mov    0x8(%rsi),%edx
    f425:	48 8d 14 92          	lea    (%rdx,%rdx,4),%rdx
    f429:	48 8d 04 50          	lea    (%rax,%rdx,2),%rax
    f42d:	89 46 08             	mov    %eax,0x8(%rsi)
    f430:	48 c1 e8 20          	shr    $0x20,%rax
    f434:	8b 56 0c             	mov    0xc(%rsi),%edx
    f437:	48 8d 14 92          	lea    (%rdx,%rdx,4),%rdx
    f43b:	48 8d 3c 50          	lea    (%rax,%rdx,2),%rdi
    f43f:	89 7e 0c             	mov    %edi,0xc(%rsi)
    f442:	48 c1 ef 20          	shr    $0x20,%rdi
    f446:	48 83 c6 10          	add    $0x10,%rsi
    f44a:	48 83 c1 fc          	add    $0xfffffffffffffffc,%rcx
    f44e:	75 b0                	jne    f400 <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x12c0>
    f450:	48 85 ed             	test   %rbp,%rbp
    f453:	74 26                	je     f47b <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x133b>
    f455:	31 c9                	xor    %ecx,%ecx
    f457:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    f45e:	00 00 
    f460:	8b 04 8e             	mov    (%rsi,%rcx,4),%eax
    f463:	48 8d 04 80          	lea    (%rax,%rax,4),%rax
    f467:	48 8d 3c 47          	lea    (%rdi,%rax,2),%rdi
    f46b:	89 3c 8e             	mov    %edi,(%rsi,%rcx,4)
    f46e:	48 c1 ef 20          	shr    $0x20,%rdi
    f472:	48 83 c1 01          	add    $0x1,%rcx
    f476:	48 39 cd             	cmp    %rcx,%rbp
    f479:	75 e5                	jne    f460 <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x1320>
    f47b:	85 ff                	test   %edi,%edi
    f47d:	74 16                	je     f495 <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x1355>
    f47f:	49 83 f9 27          	cmp    $0x27,%r9
    f483:	0f 87 5f 06 00 00    	ja     fae8 <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x19a8>
    f489:	42 89 bc 8c 10 01 00 	mov    %edi,0x110(%rsp,%r9,4)
    f490:	00 
    f491:	49 83 c1 01          	add    $0x1,%r9
    f495:	4c 89 8c 24 08 01 00 	mov    %r9,0x108(%rsp)
    f49c:	00 
    f49d:	4c 3b 44 24 38       	cmp    0x38(%rsp),%r8
    f4a2:	0f 85 95 fb ff ff    	jne    f03d <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0xefd>
    f4a8:	31 c9                	xor    %ecx,%ecx
    f4aa:	4c 8b 5c 24 20       	mov    0x20(%rsp),%r11
    f4af:	4c 8b 64 24 40       	mov    0x40(%rsp),%r12
    f4b4:	4c 8b 4c 24 38       	mov    0x38(%rsp),%r9
    f4b9:	48 8b 84 24 b0 01 00 	mov    0x1b0(%rsp),%rax
    f4c0:	00 
    f4c1:	48 83 f8 29          	cmp    $0x29,%rax
    f4c5:	72 1a                	jb     f4e1 <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x13a1>
    f4c7:	e9 5e 05 00 00       	jmpq   fa2a <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x18ea>
    f4cc:	45 31 c9             	xor    %r9d,%r9d
    f4cf:	48 8b 84 24 b0 01 00 	mov    0x1b0(%rsp),%rax
    f4d6:	00 
    f4d7:	48 83 f8 29          	cmp    $0x29,%rax
    f4db:	0f 83 49 05 00 00    	jae    fa2a <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x18ea>
    f4e1:	48 85 c0             	test   %rax,%rax
    f4e4:	74 7b                	je     f561 <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x1421>
    f4e6:	48 8d 34 85 fc ff ff 	lea    -0x4(,%rax,4),%rsi
    f4ed:	ff 
    f4ee:	48 89 f7             	mov    %rsi,%rdi
    f4f1:	48 c1 ef 02          	shr    $0x2,%rdi
    f4f5:	48 83 c7 01          	add    $0x1,%rdi
    f4f9:	89 fa                	mov    %edi,%edx
    f4fb:	83 e2 03             	and    $0x3,%edx
    f4fe:	48 83 fe 0c          	cmp    $0xc,%rsi
    f502:	73 64                	jae    f568 <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x1428>
    f504:	31 f6                	xor    %esi,%esi
    f506:	48 85 d2             	test   %rdx,%rdx
    f509:	0f 85 bc 00 00 00    	jne    f5cb <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x148b>
    f50f:	e9 dc 00 00 00       	jmpq   f5f0 <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x14b0>
    f514:	4c 8b 4c 24 38       	mov    0x38(%rsp),%r9
    f519:	49 39 f9             	cmp    %rdi,%r9
    f51c:	0f 82 82 06 00 00    	jb     fba4 <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x1a64>
    f522:	49 39 f1             	cmp    %rsi,%r9
    f525:	4c 8b 7c 24 10       	mov    0x10(%rsp),%r15
    f52a:	4c 8b 74 24 18       	mov    0x18(%rsp),%r14
    f52f:	0f 87 e8 05 00 00    	ja     fb1d <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x19dd>
    f535:	4c 89 ca             	mov    %r9,%rdx
    f538:	48 29 fa             	sub    %rdi,%rdx
    f53b:	74 1a                	je     f557 <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x1417>
    f53d:	48 01 e7             	add    %rsp,%rdi
    f540:	48 81 c7 a8 03 00 00 	add    $0x3a8,%rdi
    f547:	be 30 00 00 00       	mov    $0x30,%esi
    f54c:	ff 15 fe 88 23 00    	callq  *0x2388fe(%rip)        # 247e50 <memset@GLIBC_2.2.5>
    f552:	4c 8b 4c 24 38       	mov    0x38(%rsp),%r9
    f557:	4c 8b 64 24 40       	mov    0x40(%rsp),%r12
    f55c:	e9 f3 01 00 00       	jmpq   f754 <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x1614>
    f561:	31 c0                	xor    %eax,%eax
    f563:	e9 ad 00 00 00       	jmpq   f615 <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x14d5>
    f568:	48 29 d7             	sub    %rdx,%rdi
    f56b:	31 f6                	xor    %esi,%esi
    f56d:	0f 1f 00             	nopl   (%rax)
    f570:	41 8b 2e             	mov    (%r14),%ebp
    f573:	41 8b 5e 04          	mov    0x4(%r14),%ebx
    f577:	48 8d 6c ad 00       	lea    0x0(%rbp,%rbp,4),%rbp
    f57c:	48 01 f5             	add    %rsi,%rbp
    f57f:	41 89 2e             	mov    %ebp,(%r14)
    f582:	48 c1 ed 20          	shr    $0x20,%rbp
    f586:	48 8d 34 9b          	lea    (%rbx,%rbx,4),%rsi
    f58a:	48 01 ee             	add    %rbp,%rsi
    f58d:	41 89 76 04          	mov    %esi,0x4(%r14)
    f591:	48 c1 ee 20          	shr    $0x20,%rsi
    f595:	41 8b 6e 08          	mov    0x8(%r14),%ebp
    f599:	48 8d 6c ad 00       	lea    0x0(%rbp,%rbp,4),%rbp
    f59e:	48 01 f5             	add    %rsi,%rbp
    f5a1:	41 89 6e 08          	mov    %ebp,0x8(%r14)
    f5a5:	48 c1 ed 20          	shr    $0x20,%rbp
    f5a9:	41 8b 76 0c          	mov    0xc(%r14),%esi
    f5ad:	48 8d 34 b6          	lea    (%rsi,%rsi,4),%rsi
    f5b1:	48 01 ee             	add    %rbp,%rsi
    f5b4:	41 89 76 0c          	mov    %esi,0xc(%r14)
    f5b8:	48 c1 ee 20          	shr    $0x20,%rsi
    f5bc:	49 83 c6 10          	add    $0x10,%r14
    f5c0:	48 83 c7 fc          	add    $0xfffffffffffffffc,%rdi
    f5c4:	75 aa                	jne    f570 <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x1430>
    f5c6:	48 85 d2             	test   %rdx,%rdx
    f5c9:	74 25                	je     f5f0 <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x14b0>
    f5cb:	31 ff                	xor    %edi,%edi
    f5cd:	0f 1f 00             	nopl   (%rax)
    f5d0:	41 8b 2c be          	mov    (%r14,%rdi,4),%ebp
    f5d4:	48 8d 6c ad 00       	lea    0x0(%rbp,%rbp,4),%rbp
    f5d9:	48 01 f5             	add    %rsi,%rbp
    f5dc:	48 89 ee             	mov    %rbp,%rsi
    f5df:	48 c1 ee 20          	shr    $0x20,%rsi
    f5e3:	41 89 2c be          	mov    %ebp,(%r14,%rdi,4)
    f5e7:	48 83 c7 01          	add    $0x1,%rdi
    f5eb:	48 39 fa             	cmp    %rdi,%rdx
    f5ee:	75 e0                	jne    f5d0 <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x1490>
    f5f0:	85 f6                	test   %esi,%esi
    f5f2:	74 21                	je     f615 <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x14d5>
    f5f4:	48 83 f8 27          	cmp    $0x27,%rax
    f5f8:	4c 8b 7c 24 10       	mov    0x10(%rsp),%r15
    f5fd:	4c 8b 74 24 18       	mov    0x18(%rsp),%r14
    f602:	0f 87 a6 05 00 00    	ja     fbae <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x1a6e>
    f608:	89 b4 84 b8 01 00 00 	mov    %esi,0x1b8(%rsp,%rax,4)
    f60f:	48 83 c0 01          	add    $0x1,%rax
    f613:	eb 0a                	jmp    f61f <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x14df>
    f615:	4c 8b 7c 24 10       	mov    0x10(%rsp),%r15
    f61a:	4c 8b 74 24 18       	mov    0x18(%rsp),%r14
    f61f:	48 89 84 24 b0 01 00 	mov    %rax,0x1b0(%rsp)
    f626:	00 
    f627:	48 8b 94 24 08 01 00 	mov    0x108(%rsp),%rdx
    f62e:	00 
    f62f:	48 39 c2             	cmp    %rax,%rdx
    f632:	48 0f 47 c2          	cmova  %rdx,%rax
    f636:	48 83 f8 29          	cmp    $0x29,%rax
    f63a:	0f 83 ea 03 00 00    	jae    fa2a <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x18ea>
    f640:	48 c1 e0 02          	shl    $0x2,%rax
    f644:	48 85 c0             	test   %rax,%rax
    f647:	75 14                	jne    f65d <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x151d>
    f649:	eb 35                	jmp    f680 <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x1540>
    f64b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    f650:	48 83 c0 fc          	add    $0xfffffffffffffffc,%rax
    f654:	84 d2                	test   %dl,%dl
    f656:	75 4e                	jne    f6a6 <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x1566>
    f658:	48 85 c0             	test   %rax,%rax
    f65b:	74 23                	je     f680 <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x1540>
    f65d:	74 50                	je     f6af <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x156f>
    f65f:	8b bc 04 0c 01 00 00 	mov    0x10c(%rsp,%rax,1),%edi
    f666:	31 f6                	xor    %esi,%esi
    f668:	ba ff 00 00 00       	mov    $0xff,%edx
    f66d:	3b bc 04 b4 01 00 00 	cmp    0x1b4(%rsp,%rax,1),%edi
    f674:	0f 95 c3             	setne  %bl
    f677:	72 d7                	jb     f650 <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x1510>
    f679:	40 88 de             	mov    %bl,%sil
    f67c:	89 f2                	mov    %esi,%edx
    f67e:	eb d0                	jmp    f650 <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x1510>
    f680:	0f 85 ce 00 00 00    	jne    f754 <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x1614>
    f686:	84 c9                	test   %cl,%cl
    f688:	75 25                	jne    f6af <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x156f>
    f68a:	49 8d 71 ff          	lea    -0x1(%r9),%rsi
    f68e:	4c 39 de             	cmp    %r11,%rsi
    f691:	0f 83 43 05 00 00    	jae    fbda <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x1a9a>
    f697:	f6 84 34 a8 03 00 00 	testb  $0x1,0x3a8(%rsp,%rsi,1)
    f69e:	01 
    f69f:	75 0e                	jne    f6af <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x156f>
    f6a1:	e9 ae 00 00 00       	jmpq   f754 <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x1614>
    f6a6:	80 fa 01             	cmp    $0x1,%dl
    f6a9:	0f 85 a5 00 00 00    	jne    f754 <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x1614>
    f6af:	48 8d bc 24 a8 03 00 	lea    0x3a8(%rsp),%rdi
    f6b6:	00 
    f6b7:	4c 89 de             	mov    %r11,%rsi
    f6ba:	4c 89 cb             	mov    %r9,%rbx
    f6bd:	4c 89 ca             	mov    %r9,%rdx
    f6c0:	e8 db a3 ff ff       	callq  9aa0 <_ZN4core3num7flt2dec8round_up17h468b4c0dfea5d943E>
    f6c5:	a8 01                	test   $0x1,%al
    f6c7:	75 63                	jne    f72c <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x15ec>
    f6c9:	49 89 d9             	mov    %rbx,%r9
    f6cc:	66 45 39 ec          	cmp    %r13w,%r12w
    f6d0:	0f 8f 88 00 00 00    	jg     f75e <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x161e>
    f6d6:	66 c7 44 24 50 02 00 	movw   $0x2,0x50(%rsp)
    f6dd:	4d 85 ff             	test   %r15,%r15
    f6e0:	74 2b                	je     f70d <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x15cd>
    f6e2:	48 8d 05 44 d1 02 00 	lea    0x2d144(%rip),%rax        # 3c82d <str.1+0x7d>
    f6e9:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
    f6ee:	48 c7 44 24 60 02 00 	movq   $0x2,0x60(%rsp)
    f6f5:	00 00 
    f6f7:	66 c7 44 24 68 00 00 	movw   $0x0,0x68(%rsp)
    f6fe:	4c 89 7c 24 70       	mov    %r15,0x70(%rsp)
    f703:	b8 02 00 00 00       	mov    $0x2,%eax
    f708:	e9 b5 01 00 00       	jmpq   f8c2 <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x1782>
    f70d:	48 8d 05 c0 dd 02 00 	lea    0x2ddc0(%rip),%rax        # 3d4d4 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0xb74>
    f714:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
    f719:	48 c7 44 24 60 01 00 	movq   $0x1,0x60(%rsp)
    f720:	00 00 
    f722:	b8 01 00 00 00       	mov    $0x1,%eax
    f727:	e9 96 01 00 00       	jmpq   f8c2 <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x1782>
    f72c:	41 83 c4 01          	add    $0x1,%r12d
    f730:	66 45 39 ec          	cmp    %r13w,%r12w
    f734:	7e 93                	jle    f6c9 <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x1589>
    f736:	49 89 d9             	mov    %rbx,%r9
    f739:	48 3b 5c 24 20       	cmp    0x20(%rsp),%rbx
    f73e:	73 14                	jae    f754 <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x1614>
    f740:	42 88 94 0c a8 03 00 	mov    %dl,0x3a8(%rsp,%r9,1)
    f747:	00 
    f748:	49 83 c1 01          	add    $0x1,%r9
    f74c:	66 45 39 ec          	cmp    %r13w,%r12w
    f750:	7f 0c                	jg     f75e <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x161e>
    f752:	eb 82                	jmp    f6d6 <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x1596>
    f754:	66 45 39 ec          	cmp    %r13w,%r12w
    f758:	0f 8e 78 ff ff ff    	jle    f6d6 <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x1596>
    f75e:	49 81 f9 01 04 00 00 	cmp    $0x401,%r9
    f765:	0f 83 ad 03 00 00    	jae    fb18 <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x19d8>
    f76b:	4d 85 c9             	test   %r9,%r9
    f76e:	0f 84 b3 03 00 00    	je     fb27 <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x19e7>
    f774:	80 bc 24 a8 03 00 00 	cmpb   $0x31,0x3a8(%rsp)
    f77b:	31 
    f77c:	0f 82 bf 03 00 00    	jb     fb41 <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x1a01>
    f782:	49 0f bf cc          	movswq %r12w,%rcx
    f786:	66 45 85 e4          	test   %r12w,%r12w
    f78a:	7e 76                	jle    f802 <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x16c2>
    f78c:	4c 89 ca             	mov    %r9,%rdx
    f78f:	66 c7 44 24 50 02 00 	movw   $0x2,0x50(%rsp)
    f796:	48 8d 84 24 a8 03 00 	lea    0x3a8(%rsp),%rax
    f79d:	00 
    f79e:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
    f7a3:	48 29 ca             	sub    %rcx,%rdx
    f7a6:	0f 86 bd 00 00 00    	jbe    f869 <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x1729>
    f7ac:	48 89 4c 24 60       	mov    %rcx,0x60(%rsp)
    f7b1:	66 c7 44 24 68 02 00 	movw   $0x2,0x68(%rsp)
    f7b8:	48 8d 05 5f de 02 00 	lea    0x2de5f(%rip),%rax        # 3d61e <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0xcbe>
    f7bf:	48 89 44 24 70       	mov    %rax,0x70(%rsp)
    f7c4:	48 c7 44 24 78 01 00 	movq   $0x1,0x78(%rsp)
    f7cb:	00 00 
    f7cd:	48 8d 84 0c a8 03 00 	lea    0x3a8(%rsp,%rcx,1),%rax
    f7d4:	00 
    f7d5:	66 c7 84 24 80 00 00 	movw   $0x2,0x80(%rsp)
    f7dc:	00 02 00 
    f7df:	48 89 84 24 88 00 00 	mov    %rax,0x88(%rsp)
    f7e6:	00 
    f7e7:	48 89 94 24 90 00 00 	mov    %rdx,0x90(%rsp)
    f7ee:	00 
    f7ef:	b8 03 00 00 00       	mov    $0x3,%eax
    f7f4:	4c 39 fa             	cmp    %r15,%rdx
    f7f7:	0f 83 c5 00 00 00    	jae    f8c2 <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x1782>
    f7fd:	4d 29 cf             	sub    %r9,%r15
    f800:	eb 62                	jmp    f864 <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x1724>
    f802:	48 89 ca             	mov    %rcx,%rdx
    f805:	48 f7 da             	neg    %rdx
    f808:	66 c7 44 24 50 02 00 	movw   $0x2,0x50(%rsp)
    f80f:	48 8d 05 17 d0 02 00 	lea    0x2d017(%rip),%rax        # 3c82d <str.1+0x7d>
    f816:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
    f81b:	48 c7 44 24 60 02 00 	movq   $0x2,0x60(%rsp)
    f822:	00 00 
    f824:	66 c7 44 24 68 00 00 	movw   $0x0,0x68(%rsp)
    f82b:	48 89 54 24 70       	mov    %rdx,0x70(%rsp)
    f830:	66 c7 84 24 80 00 00 	movw   $0x2,0x80(%rsp)
    f837:	00 02 00 
    f83a:	48 8d 84 24 a8 03 00 	lea    0x3a8(%rsp),%rax
    f841:	00 
    f842:	48 89 84 24 88 00 00 	mov    %rax,0x88(%rsp)
    f849:	00 
    f84a:	4c 89 8c 24 90 00 00 	mov    %r9,0x90(%rsp)
    f851:	00 
    f852:	b8 03 00 00 00       	mov    $0x3,%eax
    f857:	4d 39 f9             	cmp    %r15,%r9
    f85a:	73 66                	jae    f8c2 <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x1782>
    f85c:	4d 29 cf             	sub    %r9,%r15
    f85f:	49 39 d7             	cmp    %rdx,%r15
    f862:	76 5e                	jbe    f8c2 <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x1782>
    f864:	49 01 cf             	add    %rcx,%r15
    f867:	eb 42                	jmp    f8ab <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x176b>
    f869:	4c 89 4c 24 60       	mov    %r9,0x60(%rsp)
    f86e:	4c 29 c9             	sub    %r9,%rcx
    f871:	66 c7 44 24 68 00 00 	movw   $0x0,0x68(%rsp)
    f878:	48 89 4c 24 70       	mov    %rcx,0x70(%rsp)
    f87d:	4d 85 ff             	test   %r15,%r15
    f880:	0f 84 7d fe ff ff    	je     f703 <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x15c3>
    f886:	66 c7 84 24 80 00 00 	movw   $0x2,0x80(%rsp)
    f88d:	00 02 00 
    f890:	48 8d 05 87 dd 02 00 	lea    0x2dd87(%rip),%rax        # 3d61e <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0xcbe>
    f897:	48 89 84 24 88 00 00 	mov    %rax,0x88(%rsp)
    f89e:	00 
    f89f:	48 c7 84 24 90 00 00 	movq   $0x1,0x90(%rsp)
    f8a6:	00 01 00 00 00 
    f8ab:	66 c7 84 24 98 00 00 	movw   $0x0,0x98(%rsp)
    f8b2:	00 00 00 
    f8b5:	4c 89 bc 24 a0 00 00 	mov    %r15,0xa0(%rsp)
    f8bc:	00 
    f8bd:	b8 04 00 00 00       	mov    $0x4,%eax
    f8c2:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
    f8c7:	4c 8b 44 24 28       	mov    0x28(%rsp),%r8
    f8cc:	48 89 bc 24 58 02 00 	mov    %rdi,0x258(%rsp)
    f8d3:	00 
    f8d4:	4c 89 84 24 60 02 00 	mov    %r8,0x260(%rsp)
    f8db:	00 
    f8dc:	48 8d 4c 24 50       	lea    0x50(%rsp),%rcx
    f8e1:	48 89 8c 24 68 02 00 	mov    %rcx,0x268(%rsp)
    f8e8:	00 
    f8e9:	48 89 84 24 70 02 00 	mov    %rax,0x270(%rsp)
    f8f0:	00 
    f8f1:	48 8d b4 24 58 02 00 	lea    0x258(%rsp),%rsi
    f8f8:	00 
    f8f9:	4c 89 f7             	mov    %r14,%rdi
    f8fc:	e8 7f c3 ff ff       	callq  bc80 <_ZN4core3fmt9Formatter19pad_formatted_parts17h064a65cf2af3d8ffE>
    f901:	48 81 c4 a8 07 00 00 	add    $0x7a8,%rsp
    f908:	5b                   	pop    %rbx
    f909:	41 5c                	pop    %r12
    f90b:	41 5d                	pop    %r13
    f90d:	41 5e                	pop    %r14
    f90f:	41 5f                	pop    %r15
    f911:	5d                   	pop    %rbp
    f912:	c3                   	retq   
    f913:	45 31 c9             	xor    %r9d,%r9d
    f916:	44 8b 6c 24 0c       	mov    0xc(%rsp),%r13d
    f91b:	66 45 39 ec          	cmp    %r13w,%r12w
    f91f:	0f 8f 39 fe ff ff    	jg     f75e <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x161e>
    f925:	e9 ac fd ff ff       	jmpq   f6d6 <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x1596>
    f92a:	4c 8b 74 24 18       	mov    0x18(%rsp),%r14
    f92f:	4c 8b 7c 24 10       	mov    0x10(%rsp),%r15
    f934:	44 8b 6c 24 0c       	mov    0xc(%rsp),%r13d
    f939:	4c 8b 64 24 40       	mov    0x40(%rsp),%r12
    f93e:	66 45 39 ec          	cmp    %r13w,%r12w
    f942:	0f 8f 16 fe ff ff    	jg     f75e <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x161e>
    f948:	e9 89 fd ff ff       	jmpq   f6d6 <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x1596>
    f94d:	45 31 c9             	xor    %r9d,%r9d
    f950:	66 45 39 ec          	cmp    %r13w,%r12w
    f954:	0f 8f 04 fe ff ff    	jg     f75e <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x161e>
    f95a:	e9 77 fd ff ff       	jmpq   f6d6 <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x1596>
    f95f:	48 8d bc 24 a8 03 00 	lea    0x3a8(%rsp),%rdi
    f966:	00 
    f967:	48 8b 74 24 20       	mov    0x20(%rsp),%rsi
    f96c:	4c 89 ca             	mov    %r9,%rdx
    f96f:	e8 2c a1 ff ff       	callq  9aa0 <_ZN4core3num7flt2dec8round_up17h468b4c0dfea5d943E>
    f974:	a8 01                	test   $0x1,%al
    f976:	75 29                	jne    f9a1 <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x1861>
    f978:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    f97d:	4c 8b 7c 24 10       	mov    0x10(%rsp),%r15
    f982:	44 8b 6c 24 0c       	mov    0xc(%rsp),%r13d
    f987:	4c 8b 64 24 40       	mov    0x40(%rsp),%r12
    f98c:	4d 89 f1             	mov    %r14,%r9
    f98f:	49 89 c6             	mov    %rax,%r14
    f992:	66 45 39 ec          	cmp    %r13w,%r12w
    f996:	0f 8f c2 fd ff ff    	jg     f75e <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x161e>
    f99c:	e9 35 fd ff ff       	jmpq   f6d6 <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x1596>
    f9a1:	48 8b 84 24 f8 00 00 	mov    0xf8(%rsp),%rax
    f9a8:	00 
    f9a9:	44 8d 60 02          	lea    0x2(%rax),%r12d
    f9ad:	44 8b 6c 24 0c       	mov    0xc(%rsp),%r13d
    f9b2:	66 45 39 ec          	cmp    %r13w,%r12w
    f9b6:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    f9bb:	4c 8b 7c 24 10       	mov    0x10(%rsp),%r15
    f9c0:	7e ca                	jle    f98c <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x184c>
    f9c2:	4d 89 f1             	mov    %r14,%r9
    f9c5:	4c 3b 74 24 20       	cmp    0x20(%rsp),%r14
    f9ca:	0f 82 79 ee ff ff    	jb     e849 <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x709>
    f9d0:	e9 80 ee ff ff       	jmpq   e855 <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE+0x715>
    f9d5:	be 28 00 00 00       	mov    $0x28,%esi
    f9da:	48 89 df             	mov    %rbx,%rdi
    f9dd:	e8 ee 81 ff ff       	callq  7bd0 <_ZN4core5slice20slice_index_len_fail17h52736412c1ce1871E>
    f9e2:	0f 0b                	ud2    
    f9e4:	48 8d 3d bd 67 23 00 	lea    0x2367bd(%rip),%rdi        # 2461a8 <__init_array_end+0x198>
    f9eb:	be 28 00 00 00       	mov    $0x28,%esi
    f9f0:	ba 28 00 00 00       	mov    $0x28,%edx
    f9f5:	e8 06 7a ff ff       	callq  7400 <_ZN4core9panicking18panic_bounds_check17h83121a2515f55ceeE>
    f9fa:	0f 0b                	ud2    
    f9fc:	48 8d 3d fd 6b 23 00 	lea    0x236bfd(%rip),%rdi        # 246600 <__init_array_end+0x5f0>
    fa03:	48 8b 54 24 20       	mov    0x20(%rsp),%rdx
    fa08:	e8 f3 79 ff ff       	callq  7400 <_ZN4core9panicking18panic_bounds_check17h83121a2515f55ceeE>
    fa0d:	0f 0b                	ud2    
    fa0f:	be 28 00 00 00       	mov    $0x28,%esi
    fa14:	4c 89 cf             	mov    %r9,%rdi
    fa17:	e8 b4 81 ff ff       	callq  7bd0 <_ZN4core5slice20slice_index_len_fail17h52736412c1ce1871E>
    fa1c:	0f 0b                	ud2    
    fa1e:	be 28 00 00 00       	mov    $0x28,%esi
    fa23:	e8 a8 81 ff ff       	callq  7bd0 <_ZN4core5slice20slice_index_len_fail17h52736412c1ce1871E>
    fa28:	0f 0b                	ud2    
    fa2a:	be 28 00 00 00       	mov    $0x28,%esi
    fa2f:	48 89 c7             	mov    %rax,%rdi
    fa32:	e8 99 81 ff ff       	callq  7bd0 <_ZN4core5slice20slice_index_len_fail17h52736412c1ce1871E>
    fa37:	0f 0b                	ud2    
    fa39:	48 8d 3d 98 ce 02 00 	lea    0x2ce98(%rip),%rdi        # 3c8d8 <str.1+0x128>
    fa40:	48 8d 15 51 6d 23 00 	lea    0x236d51(%rip),%rdx        # 246798 <__init_array_end+0x788>
    fa47:	be 25 00 00 00       	mov    $0x25,%esi
    fa4c:	e8 5f 79 ff ff       	callq  73b0 <_ZN4core9panicking5panic17h6861470adfbddef8E>
    fa51:	0f 0b                	ud2    
    fa53:	48 8d 3d aa cb 02 00 	lea    0x2cbaa(%rip),%rdi        # 3c604 <_ZN4core3num7flt2dec8strategy6dragon10POW10TO25617haf225b14fd05fa3eE+0x6c>
    fa5a:	48 8d 15 57 6b 23 00 	lea    0x236b57(%rip),%rdx        # 2465b8 <__init_array_end+0x5a8>
    fa61:	be 1c 00 00 00       	mov    $0x1c,%esi
    fa66:	e8 45 79 ff ff       	callq  73b0 <_ZN4core9panicking5panic17h6861470adfbddef8E>
    fa6b:	0f 0b                	ud2    
    fa6d:	48 8d 3d 55 cd 02 00 	lea    0x2cd55(%rip),%rdi        # 3c7c9 <str.1+0x19>
    fa74:	48 8d 15 55 6b 23 00 	lea    0x236b55(%rip),%rdx        # 2465d0 <__init_array_end+0x5c0>
    fa7b:	be 24 00 00 00       	mov    $0x24,%esi
    fa80:	e8 2b 79 ff ff       	callq  73b0 <_ZN4core9panicking5panic17h6861470adfbddef8E>
    fa85:	0f 0b                	ud2    
    fa87:	48 8d 3d 82 6a 23 00 	lea    0x236a82(%rip),%rdi        # 246510 <__init_array_end+0x500>
    fa8e:	ba 51 00 00 00       	mov    $0x51,%edx
    fa93:	e8 68 79 ff ff       	callq  7400 <_ZN4core9panicking18panic_bounds_check17h83121a2515f55ceeE>
    fa98:	0f 0b                	ud2    
    fa9a:	48 8d 3d 9b cb 02 00 	lea    0x2cb9b(%rip),%rdi        # 3c63c <_ZN4core3num7flt2dec8strategy6dragon10POW10TO25617haf225b14fd05fa3eE+0xa4>
    faa1:	48 8d 15 08 6a 23 00 	lea    0x236a08(%rip),%rdx        # 2464b0 <__init_array_end+0x4a0>
    faa8:	be 36 00 00 00       	mov    $0x36,%esi
    faad:	e8 fe 78 ff ff       	callq  73b0 <_ZN4core9panicking5panic17h6861470adfbddef8E>
    fab2:	0f 0b                	ud2    
    fab4:	48 8d 3d b7 cb 02 00 	lea    0x2cbb7(%rip),%rdi        # 3c672 <_ZN4core3num7flt2dec8strategy6dragon10POW10TO25617haf225b14fd05fa3eE+0xda>
    fabb:	48 8d 15 06 6a 23 00 	lea    0x236a06(%rip),%rdx        # 2464c8 <__init_array_end+0x4b8>
    fac2:	be 37 00 00 00       	mov    $0x37,%esi
    fac7:	e8 e4 78 ff ff       	callq  73b0 <_ZN4core9panicking5panic17h6861470adfbddef8E>
    facc:	0f 0b                	ud2    
    face:	48 8d 3d 5f cc 02 00 	lea    0x2cc5f(%rip),%rdi        # 3c734 <_ZN4core3num7flt2dec8strategy6dragon8TWOPOW1017h0773ad74716bcfbaE+0x28>
    fad5:	48 8d 15 cc 66 23 00 	lea    0x2366cc(%rip),%rdx        # 2461a8 <__init_array_end+0x198>
    fadc:	be 1b 00 00 00       	mov    $0x1b,%esi
    fae1:	e8 ca 78 ff ff       	callq  73b0 <_ZN4core9panicking5panic17h6861470adfbddef8E>
    fae6:	0f 0b                	ud2    
    fae8:	48 8d 3d b9 66 23 00 	lea    0x2366b9(%rip),%rdi        # 2461a8 <__init_array_end+0x198>
    faef:	ba 28 00 00 00       	mov    $0x28,%edx
    faf4:	4c 89 ce             	mov    %r9,%rsi
    faf7:	e8 04 79 ff ff       	callq  7400 <_ZN4core9panicking18panic_bounds_check17h83121a2515f55ceeE>
    fafc:	0f 0b                	ud2    
    fafe:	48 8d 3d a4 cb 02 00 	lea    0x2cba4(%rip),%rdi        # 3c6a9 <_ZN4core3num7flt2dec8strategy6dragon10POW10TO25617haf225b14fd05fa3eE+0x111>
    fb05:	48 8d 15 9c 66 23 00 	lea    0x23669c(%rip),%rdx        # 2461a8 <__init_array_end+0x198>
    fb0c:	be 1a 00 00 00       	mov    $0x1a,%esi
    fb11:	e8 9a 78 ff ff       	callq  73b0 <_ZN4core9panicking5panic17h6861470adfbddef8E>
    fb16:	0f 0b                	ud2    
    fb18:	be 00 04 00 00       	mov    $0x400,%esi
    fb1d:	4c 89 cf             	mov    %r9,%rdi
    fb20:	e8 ab 80 ff ff       	callq  7bd0 <_ZN4core5slice20slice_index_len_fail17h52736412c1ce1871E>
    fb25:	0f 0b                	ud2    
    fb27:	48 8d 3d bf cc 02 00 	lea    0x2ccbf(%rip),%rdi        # 3c7ed <str.1+0x3d>
    fb2e:	48 8d 15 e3 6a 23 00 	lea    0x236ae3(%rip),%rdx        # 246618 <__init_array_end+0x608>
    fb35:	be 21 00 00 00       	mov    $0x21,%esi
    fb3a:	e8 71 78 ff ff       	callq  73b0 <_ZN4core9panicking5panic17h6861470adfbddef8E>
    fb3f:	0f 0b                	ud2    
    fb41:	48 8d 3d c6 cc 02 00 	lea    0x2ccc6(%rip),%rdi        # 3c80e <str.1+0x5e>
    fb48:	48 8d 15 e1 6a 23 00 	lea    0x236ae1(%rip),%rdx        # 246630 <__init_array_end+0x620>
    fb4f:	be 1f 00 00 00       	mov    $0x1f,%esi
    fb54:	e8 57 78 ff ff       	callq  73b0 <_ZN4core9panicking5panic17h6861470adfbddef8E>
    fb59:	0f 0b                	ud2    
    fb5b:	be 28 00 00 00       	mov    $0x28,%esi
    fb60:	4c 89 d7             	mov    %r10,%rdi
    fb63:	e8 68 80 ff ff       	callq  7bd0 <_ZN4core5slice20slice_index_len_fail17h52736412c1ce1871E>
    fb68:	0f 0b                	ud2    
    fb6a:	48 8d 3d 6f 69 23 00 	lea    0x23696f(%rip),%rdi        # 2464e0 <__init_array_end+0x4d0>
    fb71:	48 89 f2             	mov    %rsi,%rdx
    fb74:	e8 87 78 ff ff       	callq  7400 <_ZN4core9panicking18panic_bounds_check17h83121a2515f55ceeE>
    fb79:	0f 0b                	ud2    
    fb7b:	48 8d 3d 9e ca 02 00 	lea    0x2ca9e(%rip),%rdi        # 3c620 <_ZN4core3num7flt2dec8strategy6dragon10POW10TO25617haf225b14fd05fa3eE+0x88>
    fb82:	48 8d 15 0f 69 23 00 	lea    0x23690f(%rip),%rdx        # 246498 <__init_array_end+0x488>
    fb89:	be 1c 00 00 00       	mov    $0x1c,%esi
    fb8e:	e8 1d 78 ff ff       	callq  73b0 <_ZN4core9panicking5panic17h6861470adfbddef8E>
    fb93:	0f 0b                	ud2    
    fb95:	be 28 00 00 00       	mov    $0x28,%esi
    fb9a:	4c 89 c7             	mov    %r8,%rdi
    fb9d:	e8 2e 80 ff ff       	callq  7bd0 <_ZN4core5slice20slice_index_len_fail17h52736412c1ce1871E>
    fba2:	0f 0b                	ud2    
    fba4:	4c 89 ce             	mov    %r9,%rsi
    fba7:	e8 a4 80 ff ff       	callq  7c50 <_ZN4core5slice22slice_index_order_fail17h7bcf2f94ba9e06deE>
    fbac:	0f 0b                	ud2    
    fbae:	48 8d 3d f3 65 23 00 	lea    0x2365f3(%rip),%rdi        # 2461a8 <__init_array_end+0x198>
    fbb5:	ba 28 00 00 00       	mov    $0x28,%edx
    fbba:	48 89 c6             	mov    %rax,%rsi
    fbbd:	e8 3e 78 ff ff       	callq  7400 <_ZN4core9panicking18panic_bounds_check17h83121a2515f55ceeE>
    fbc2:	0f 0b                	ud2    
    fbc4:	48 8d 3d dd 65 23 00 	lea    0x2365dd(%rip),%rdi        # 2461a8 <__init_array_end+0x198>
    fbcb:	ba 28 00 00 00       	mov    $0x28,%edx
    fbd0:	4c 89 c6             	mov    %r8,%rsi
    fbd3:	e8 28 78 ff ff       	callq  7400 <_ZN4core9panicking18panic_bounds_check17h83121a2515f55ceeE>
    fbd8:	0f 0b                	ud2    
    fbda:	48 8d 3d 17 69 23 00 	lea    0x236917(%rip),%rdi        # 2464f8 <__init_array_end+0x4e8>
    fbe1:	4c 89 da             	mov    %r11,%rdx
    fbe4:	e8 17 78 ff ff       	callq  7400 <_ZN4core9panicking18panic_bounds_check17h83121a2515f55ceeE>
    fbe9:	0f 0b                	ud2    
    fbeb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000fbf0 <_ZN4core3fmt5float52_$LT$impl$u20$core..fmt..Display$u20$for$u20$f64$GT$3fmt17hb0a21601b08973cbE>:
    fbf0:	48 89 f0             	mov    %rsi,%rax
    fbf3:	f2 0f 10 07          	movsd  (%rdi),%xmm0
    fbf7:	8a 4e 30             	mov    0x30(%rsi),%cl
    fbfa:	00 c9                	add    %cl,%cl
    fbfc:	80 e1 02             	and    $0x2,%cl
    fbff:	48 83 7e 10 01       	cmpq   $0x1,0x10(%rsi)
    fc04:	75 0f                	jne    fc15 <_ZN4core3fmt5float52_$LT$impl$u20$core..fmt..Display$u20$for$u20$f64$GT$3fmt17hb0a21601b08973cbE+0x25>
    fc06:	48 8b 50 18          	mov    0x18(%rax),%rdx
    fc0a:	0f b6 f1             	movzbl %cl,%esi
    fc0d:	48 89 c7             	mov    %rax,%rdi
    fc10:	e9 2b e5 ff ff       	jmpq   e140 <_ZN4core3fmt5float29float_to_decimal_common_exact17hf0c9a3ad0eb5f97aE>
    fc15:	0f b6 f1             	movzbl %cl,%esi
    fc18:	48 89 c7             	mov    %rax,%rdi
    fc1b:	e9 50 c5 ff ff       	jmpq   c170 <_ZN4core3fmt5float32float_to_decimal_common_shortest17ha561e5bd96ada6f3E>

000000000000fc20 <_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$i32$GT$3fmt17h96181bf4e3064f5cE>:
    fc20:	53                   	push   %rbx
    fc21:	48 83 ec 30          	sub    $0x30,%rsp
    fc25:	49 89 f2             	mov    %rsi,%r10
    fc28:	48 63 37             	movslq (%rdi),%rsi
    fc2b:	48 89 f1             	mov    %rsi,%rcx
    fc2e:	48 f7 d9             	neg    %rcx
    fc31:	48 0f 4c ce          	cmovl  %rsi,%rcx
    fc35:	41 bb 27 00 00 00    	mov    $0x27,%r11d
    fc3b:	48 81 f9 10 27 00 00 	cmp    $0x2710,%rcx
    fc42:	0f 82 b2 00 00 00    	jb     fcfa <_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$i32$GT$3fmt17h96181bf4e3064f5cE+0xda>
    fc48:	41 bb 27 00 00 00    	mov    $0x27,%r11d
    fc4e:	49 b8 4b 59 86 38 d6 	movabs $0x346dc5d63886594b,%r8
    fc55:	c5 6d 34 
    fc58:	4c 8d 0d 0b ba 02 00 	lea    0x2ba0b(%rip),%r9        # 3b66a <_ZN4core3str15UTF8_CHAR_WIDTH17h639c7c3d8ce7e983E+0x112>
    fc5f:	90                   	nop
    fc60:	48 89 c8             	mov    %rcx,%rax
    fc63:	49 f7 e0             	mul    %r8
    fc66:	48 c1 ea 0b          	shr    $0xb,%rdx
    fc6a:	69 c2 10 27 00 00    	imul   $0x2710,%edx,%eax
    fc70:	89 cf                	mov    %ecx,%edi
    fc72:	29 c7                	sub    %eax,%edi
    fc74:	0f b7 c7             	movzwl %di,%eax
    fc77:	c1 e8 02             	shr    $0x2,%eax
    fc7a:	69 c0 7b 14 00 00    	imul   $0x147b,%eax,%eax
    fc80:	c1 e8 11             	shr    $0x11,%eax
    fc83:	6b d8 64             	imul   $0x64,%eax,%ebx
    fc86:	29 df                	sub    %ebx,%edi
    fc88:	0f b7 ff             	movzwl %di,%edi
    fc8b:	41 0f b7 04 41       	movzwl (%r9,%rax,2),%eax
    fc90:	66 42 89 44 1c 05    	mov    %ax,0x5(%rsp,%r11,1)
    fc96:	41 0f b7 04 79       	movzwl (%r9,%rdi,2),%eax
    fc9b:	66 42 89 44 1c 07    	mov    %ax,0x7(%rsp,%r11,1)
    fca1:	49 83 c3 fc          	add    $0xfffffffffffffffc,%r11
    fca5:	48 81 f9 ff e0 f5 05 	cmp    $0x5f5e0ff,%rcx
    fcac:	48 89 d1             	mov    %rdx,%rcx
    fcaf:	77 af                	ja     fc60 <_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$i32$GT$3fmt17h96181bf4e3064f5cE+0x40>
    fcb1:	48 83 fa 63          	cmp    $0x63,%rdx
    fcb5:	76 2f                	jbe    fce6 <_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$i32$GT$3fmt17h96181bf4e3064f5cE+0xc6>
    fcb7:	0f b7 c2             	movzwl %dx,%eax
    fcba:	c1 e8 02             	shr    $0x2,%eax
    fcbd:	69 c0 7b 14 00 00    	imul   $0x147b,%eax,%eax
    fcc3:	c1 e8 11             	shr    $0x11,%eax
    fcc6:	6b c8 64             	imul   $0x64,%eax,%ecx
    fcc9:	29 ca                	sub    %ecx,%edx
    fccb:	0f b7 ca             	movzwl %dx,%ecx
    fcce:	48 8d 15 95 b9 02 00 	lea    0x2b995(%rip),%rdx        # 3b66a <_ZN4core3str15UTF8_CHAR_WIDTH17h639c7c3d8ce7e983E+0x112>
    fcd5:	0f b7 0c 4a          	movzwl (%rdx,%rcx,2),%ecx
    fcd9:	66 42 89 4c 1c 07    	mov    %cx,0x7(%rsp,%r11,1)
    fcdf:	49 83 c3 fe          	add    $0xfffffffffffffffe,%r11
    fce3:	48 89 c2             	mov    %rax,%rdx
    fce6:	48 83 fa 0a          	cmp    $0xa,%rdx
    fcea:	7d 19                	jge    fd05 <_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$i32$GT$3fmt17h96181bf4e3064f5cE+0xe5>
    fcec:	80 c2 30             	add    $0x30,%dl
    fcef:	42 88 54 1c 08       	mov    %dl,0x8(%rsp,%r11,1)
    fcf4:	49 83 c3 ff          	add    $0xffffffffffffffff,%r11
    fcf8:	eb 20                	jmp    fd1a <_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$i32$GT$3fmt17h96181bf4e3064f5cE+0xfa>
    fcfa:	48 89 ca             	mov    %rcx,%rdx
    fcfd:	48 83 fa 63          	cmp    $0x63,%rdx
    fd01:	77 b4                	ja     fcb7 <_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$i32$GT$3fmt17h96181bf4e3064f5cE+0x97>
    fd03:	eb e1                	jmp    fce6 <_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$i32$GT$3fmt17h96181bf4e3064f5cE+0xc6>
    fd05:	48 8d 05 5e b9 02 00 	lea    0x2b95e(%rip),%rax        # 3b66a <_ZN4core3str15UTF8_CHAR_WIDTH17h639c7c3d8ce7e983E+0x112>
    fd0c:	0f b7 04 50          	movzwl (%rax,%rdx,2),%eax
    fd10:	66 42 89 44 1c 07    	mov    %ax,0x7(%rsp,%r11,1)
    fd16:	49 83 c3 fe          	add    $0xfffffffffffffffe,%r11
    fd1a:	4e 8d 04 1c          	lea    (%rsp,%r11,1),%r8
    fd1e:	49 83 c0 09          	add    $0x9,%r8
    fd22:	41 b9 27 00 00 00    	mov    $0x27,%r9d
    fd28:	4d 29 d9             	sub    %r11,%r9
    fd2b:	f7 d6                	not    %esi
    fd2d:	c1 ee 1f             	shr    $0x1f,%esi
    fd30:	48 8d 15 01 d7 02 00 	lea    0x2d701(%rip),%rdx        # 3d438 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0xad8>
    fd37:	4c 89 d7             	mov    %r10,%rdi
    fd3a:	31 c9                	xor    %ecx,%ecx
    fd3c:	e8 af 78 ff ff       	callq  75f0 <_ZN4core3fmt9Formatter12pad_integral17hc55c32e78eb96054E>
    fd41:	48 83 c4 30          	add    $0x30,%rsp
    fd45:	5b                   	pop    %rbx
    fd46:	c3                   	retq   
    fd47:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    fd4e:	00 00 

000000000000fd50 <_ZN57_$LT$core..str..Utf8Error$u20$as$u20$core..fmt..Debug$GT$3fmt17h6bb724f7fa16023dE>:
    fd50:	41 56                	push   %r14
    fd52:	53                   	push   %rbx
    fd53:	48 83 ec 18          	sub    $0x18,%rsp
    fd57:	48 89 f3             	mov    %rsi,%rbx
    fd5a:	49 89 fe             	mov    %rdi,%r14
    fd5d:	48 8b 7e 20          	mov    0x20(%rsi),%rdi
    fd61:	48 8b 46 28          	mov    0x28(%rsi),%rax
    fd65:	48 8d 35 d1 cb 02 00 	lea    0x2cbd1(%rip),%rsi        # 3c93d <str.1+0x18d>
    fd6c:	ba 09 00 00 00       	mov    $0x9,%edx
    fd71:	ff 50 18             	callq  *0x18(%rax)
    fd74:	48 89 1c 24          	mov    %rbx,(%rsp)
    fd78:	88 44 24 08          	mov    %al,0x8(%rsp)
    fd7c:	c6 44 24 09 00       	movb   $0x0,0x9(%rsp)
    fd81:	4c 89 74 24 10       	mov    %r14,0x10(%rsp)
    fd86:	49 8d 5e 08          	lea    0x8(%r14),%rbx
    fd8a:	48 8d 35 b5 cb 02 00 	lea    0x2cbb5(%rip),%rsi        # 3c946 <str.1+0x196>
    fd91:	4c 8d 05 c0 69 23 00 	lea    0x2369c0(%rip),%r8        # 246758 <__init_array_end+0x748>
    fd98:	49 89 e6             	mov    %rsp,%r14
    fd9b:	48 8d 4c 24 10       	lea    0x10(%rsp),%rcx
    fda0:	ba 0b 00 00 00       	mov    $0xb,%edx
    fda5:	4c 89 f7             	mov    %r14,%rdi
    fda8:	e8 33 a3 ff ff       	callq  a0e0 <_ZN4core3fmt8builders11DebugStruct5field17h12f9df3a6de8af04E>
    fdad:	48 89 5c 24 10       	mov    %rbx,0x10(%rsp)
    fdb2:	48 8d 35 98 cb 02 00 	lea    0x2cb98(%rip),%rsi        # 3c951 <str.1+0x1a1>
    fdb9:	4c 8d 05 f0 69 23 00 	lea    0x2369f0(%rip),%r8        # 2467b0 <__init_array_end+0x7a0>
    fdc0:	48 8d 4c 24 10       	lea    0x10(%rsp),%rcx
    fdc5:	ba 09 00 00 00       	mov    $0x9,%edx
    fdca:	4c 89 f7             	mov    %r14,%rdi
    fdcd:	e8 0e a3 ff ff       	callq  a0e0 <_ZN4core3fmt8builders11DebugStruct5field17h12f9df3a6de8af04E>
    fdd2:	80 7c 24 09 00       	cmpb   $0x0,0x9(%rsp)
    fdd7:	8a 44 24 08          	mov    0x8(%rsp),%al
    fddb:	74 3c                	je     fe19 <_ZN57_$LT$core..str..Utf8Error$u20$as$u20$core..fmt..Debug$GT$3fmt17h6bb724f7fa16023dE+0xc9>
    fddd:	84 c0                	test   %al,%al
    fddf:	b0 01                	mov    $0x1,%al
    fde1:	75 32                	jne    fe15 <_ZN57_$LT$core..str..Utf8Error$u20$as$u20$core..fmt..Debug$GT$3fmt17h6bb724f7fa16023dE+0xc5>
    fde3:	48 8b 04 24          	mov    (%rsp),%rax
    fde7:	f6 40 30 04          	testb  $0x4,0x30(%rax)
    fdeb:	48 8b 78 20          	mov    0x20(%rax),%rdi
    fdef:	48 8b 40 28          	mov    0x28(%rax),%rax
    fdf3:	48 8b 40 18          	mov    0x18(%rax),%rax
    fdf7:	75 0e                	jne    fe07 <_ZN57_$LT$core..str..Utf8Error$u20$as$u20$core..fmt..Debug$GT$3fmt17h6bb724f7fa16023dE+0xb7>
    fdf9:	48 8d 35 51 ca 02 00 	lea    0x2ca51(%rip),%rsi        # 3c851 <str.1+0xa1>
    fe00:	ba 02 00 00 00       	mov    $0x2,%edx
    fe05:	eb 0c                	jmp    fe13 <_ZN57_$LT$core..str..Utf8Error$u20$as$u20$core..fmt..Debug$GT$3fmt17h6bb724f7fa16023dE+0xc3>
    fe07:	48 8d 35 d5 d3 02 00 	lea    0x2d3d5(%rip),%rsi        # 3d1e3 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x883>
    fe0e:	ba 01 00 00 00       	mov    $0x1,%edx
    fe13:	ff d0                	callq  *%rax
    fe15:	88 44 24 08          	mov    %al,0x8(%rsp)
    fe19:	48 83 c4 18          	add    $0x18,%rsp
    fe1d:	5b                   	pop    %rbx
    fe1e:	41 5e                	pop    %r14
    fe20:	c3                   	retq   
    fe21:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    fe28:	00 00 00 
    fe2b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000fe30 <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hf5792b34f8b180b3E>:
    fe30:	41 56                	push   %r14
    fe32:	53                   	push   %rbx
    fe33:	48 83 ec 68          	sub    $0x68,%rsp
    fe37:	49 89 f6             	mov    %rsi,%r14
    fe3a:	48 8b 1f             	mov    (%rdi),%rbx
    fe3d:	80 3b 01             	cmpb   $0x1,(%rbx)
    fe40:	75 2e                	jne    fe70 <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hf5792b34f8b180b3E+0x40>
    fe42:	48 83 c3 01          	add    $0x1,%rbx
    fe46:	49 8b 7e 20          	mov    0x20(%r14),%rdi
    fe4a:	49 8b 46 28          	mov    0x28(%r14),%rax
    fe4e:	48 8d 35 0f c6 02 00 	lea    0x2c60f(%rip),%rsi        # 3c464 <_ZN4core7unicode12unicode_data15grapheme_extend6BITSET17h68ce7f61ccfa32feE+0x9c4>
    fe55:	ba 04 00 00 00       	mov    $0x4,%edx
    fe5a:	ff 50 18             	callq  *0x18(%rax)
    fe5d:	48 89 5c 24 08       	mov    %rbx,0x8(%rsp)
    fe62:	84 c0                	test   %al,%al
    fe64:	74 2b                	je     fe91 <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hf5792b34f8b180b3E+0x61>
    fe66:	b0 01                	mov    $0x1,%al
    fe68:	48 83 c4 68          	add    $0x68,%rsp
    fe6c:	5b                   	pop    %rbx
    fe6d:	41 5e                	pop    %r14
    fe6f:	c3                   	retq   
    fe70:	49 8b 7e 20          	mov    0x20(%r14),%rdi
    fe74:	49 8b 46 28          	mov    0x28(%r14),%rax
    fe78:	48 8b 40 18          	mov    0x18(%rax),%rax
    fe7c:	48 8d 35 e5 c5 02 00 	lea    0x2c5e5(%rip),%rsi        # 3c468 <_ZN4core7unicode12unicode_data15grapheme_extend6BITSET17h68ce7f61ccfa32feE+0x9c8>
    fe83:	ba 04 00 00 00       	mov    $0x4,%edx
    fe88:	48 83 c4 68          	add    $0x68,%rsp
    fe8c:	5b                   	pop    %rbx
    fe8d:	41 5e                	pop    %r14
    fe8f:	ff e0                	jmpq   *%rax
    fe91:	41 f6 46 30 04       	testb  $0x4,0x30(%r14)
    fe96:	49 8b 7e 20          	mov    0x20(%r14),%rdi
    fe9a:	49 8b 46 28          	mov    0x28(%r14),%rax
    fe9e:	48 8b 40 18          	mov    0x18(%rax),%rax
    fea2:	75 2c                	jne    fed0 <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hf5792b34f8b180b3E+0xa0>
    fea4:	48 8d 35 d4 d2 02 00 	lea    0x2d2d4(%rip),%rsi        # 3d17f <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x81f>
    feab:	ba 01 00 00 00       	mov    $0x1,%edx
    feb0:	ff d0                	callq  *%rax
    feb2:	84 c0                	test   %al,%al
    feb4:	75 b0                	jne    fe66 <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hf5792b34f8b180b3E+0x36>
    feb6:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
    febb:	4c 89 f6             	mov    %r14,%rsi
    febe:	e8 fd ba ff ff       	callq  b9c0 <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hfa2aab2d446ee9a4E>
    fec3:	89 c1                	mov    %eax,%ecx
    fec5:	b0 01                	mov    $0x1,%al
    fec7:	84 c9                	test   %cl,%cl
    fec9:	75 9d                	jne    fe68 <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hf5792b34f8b180b3E+0x38>
    fecb:	e9 a8 00 00 00       	jmpq   ff78 <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hf5792b34f8b180b3E+0x148>
    fed0:	48 8d 35 7c c9 02 00 	lea    0x2c97c(%rip),%rsi        # 3c853 <str.1+0xa3>
    fed7:	ba 02 00 00 00       	mov    $0x2,%edx
    fedc:	ff d0                	callq  *%rax
    fede:	84 c0                	test   %al,%al
    fee0:	75 84                	jne    fe66 <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hf5792b34f8b180b3E+0x36>
    fee2:	41 8b 46 30          	mov    0x30(%r14),%eax
    fee6:	c6 44 24 07 01       	movb   $0x1,0x7(%rsp)
    feeb:	41 0f 10 46 20       	movups 0x20(%r14),%xmm0
    fef0:	0f 29 44 24 50       	movaps %xmm0,0x50(%rsp)
    fef5:	48 8d 4c 24 07       	lea    0x7(%rsp),%rcx
    fefa:	48 89 4c 24 60       	mov    %rcx,0x60(%rsp)
    feff:	41 8b 4e 34          	mov    0x34(%r14),%ecx
    ff03:	41 8a 56 38          	mov    0x38(%r14),%dl
    ff07:	41 0f 10 06          	movups (%r14),%xmm0
    ff0b:	41 0f 10 4e 10       	movups 0x10(%r14),%xmm1
    ff10:	89 44 24 40          	mov    %eax,0x40(%rsp)
    ff14:	89 4c 24 44          	mov    %ecx,0x44(%rsp)
    ff18:	88 54 24 48          	mov    %dl,0x48(%rsp)
    ff1c:	0f 29 44 24 10       	movaps %xmm0,0x10(%rsp)
    ff21:	0f 29 4c 24 20       	movaps %xmm1,0x20(%rsp)
    ff26:	48 8d 44 24 50       	lea    0x50(%rsp),%rax
    ff2b:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
    ff30:	48 8d 05 61 67 23 00 	lea    0x236761(%rip),%rax        # 246698 <__init_array_end+0x688>
    ff37:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
    ff3c:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
    ff41:	48 8d 74 24 10       	lea    0x10(%rsp),%rsi
    ff46:	e8 75 ba ff ff       	callq  b9c0 <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hfa2aab2d446ee9a4E>
    ff4b:	84 c0                	test   %al,%al
    ff4d:	0f 85 13 ff ff ff    	jne    fe66 <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hf5792b34f8b180b3E+0x36>
    ff53:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
    ff58:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
    ff5d:	48 8d 35 eb c8 02 00 	lea    0x2c8eb(%rip),%rsi        # 3c84f <str.1+0x9f>
    ff64:	ba 02 00 00 00       	mov    $0x2,%edx
    ff69:	ff 50 18             	callq  *0x18(%rax)
    ff6c:	89 c1                	mov    %eax,%ecx
    ff6e:	b0 01                	mov    $0x1,%al
    ff70:	84 c9                	test   %cl,%cl
    ff72:	0f 85 f0 fe ff ff    	jne    fe68 <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hf5792b34f8b180b3E+0x38>
    ff78:	49 8b 7e 20          	mov    0x20(%r14),%rdi
    ff7c:	49 8b 46 28          	mov    0x28(%r14),%rax
    ff80:	48 8d 35 39 d9 02 00 	lea    0x2d939(%rip),%rsi        # 3d8c0 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0xf60>
    ff87:	ba 01 00 00 00       	mov    $0x1,%edx
    ff8c:	ff 50 18             	callq  *0x18(%rax)
    ff8f:	48 83 c4 68          	add    $0x68,%rsp
    ff93:	5b                   	pop    %rbx
    ff94:	41 5e                	pop    %r14
    ff96:	c3                   	retq   
    ff97:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    ff9e:	00 00 

000000000000ffa0 <_ZN73_$LT$crossbeam_epoch..internal..Bag$u20$as$u20$core..default..Default$GT$7default17h06d0746c5d364cb6E>:
        SealedBag { epoch, bag: self }
    }
}

impl Default for Bag {
    fn default() -> Self {
    ffa0:	48 81 ec 00 06 00 00 	sub    $0x600,%rsp
        // TODO: [no_op; MAX_OBJECTS] syntax blocked by https://github.com/rust-lang/rust/issues/49147
        #[cfg(not(feature = "sanitize"))]
        return Bag { len: 0, deferreds:
    ffa7:	48 8d 05 92 09 00 00 	lea    0x992(%rip),%rax        # 10940 <_ZN15crossbeam_epoch8deferred8Deferred3new4call17h05a0da60be9227f7E>
    ffae:	48 89 07             	mov    %rax,(%rdi)
    ffb1:	c5 f8 10 84 24 e8 05 	vmovups 0x5e8(%rsp),%xmm0
    ffb8:	00 00 
    ffba:	c5 f8 11 47 08       	vmovups %xmm0,0x8(%rdi)
    ffbf:	48 8b 8c 24 f8 05 00 	mov    0x5f8(%rsp),%rcx
    ffc6:	00 
    ffc7:	48 89 4f 18          	mov    %rcx,0x18(%rdi)
    ffcb:	48 89 47 20          	mov    %rax,0x20(%rdi)
    ffcf:	c5 f8 10 84 24 d0 05 	vmovups 0x5d0(%rsp),%xmm0
    ffd6:	00 00 
    ffd8:	c5 f8 11 47 28       	vmovups %xmm0,0x28(%rdi)
    ffdd:	48 8b 8c 24 e0 05 00 	mov    0x5e0(%rsp),%rcx
    ffe4:	00 
    ffe5:	48 89 4f 38          	mov    %rcx,0x38(%rdi)
    ffe9:	48 89 47 40          	mov    %rax,0x40(%rdi)
    ffed:	c5 f8 10 84 24 b8 05 	vmovups 0x5b8(%rsp),%xmm0
    fff4:	00 00 
    fff6:	c5 f8 11 47 48       	vmovups %xmm0,0x48(%rdi)
    fffb:	48 8b 8c 24 c8 05 00 	mov    0x5c8(%rsp),%rcx
   10002:	00 
   10003:	48 89 4f 58          	mov    %rcx,0x58(%rdi)
   10007:	48 89 47 60          	mov    %rax,0x60(%rdi)
   1000b:	c5 f8 10 84 24 a0 05 	vmovups 0x5a0(%rsp),%xmm0
   10012:	00 00 
   10014:	c5 f8 11 47 68       	vmovups %xmm0,0x68(%rdi)
   10019:	48 8b 8c 24 b0 05 00 	mov    0x5b0(%rsp),%rcx
   10020:	00 
   10021:	48 89 4f 78          	mov    %rcx,0x78(%rdi)
   10025:	48 89 87 80 00 00 00 	mov    %rax,0x80(%rdi)
   1002c:	c5 f8 10 84 24 88 05 	vmovups 0x588(%rsp),%xmm0
   10033:	00 00 
   10035:	c5 f8 11 87 88 00 00 	vmovups %xmm0,0x88(%rdi)
   1003c:	00 
   1003d:	48 8b 8c 24 98 05 00 	mov    0x598(%rsp),%rcx
   10044:	00 
   10045:	48 89 8f 98 00 00 00 	mov    %rcx,0x98(%rdi)
   1004c:	48 89 87 a0 00 00 00 	mov    %rax,0xa0(%rdi)
   10053:	48 8b 8c 24 80 05 00 	mov    0x580(%rsp),%rcx
   1005a:	00 
   1005b:	48 89 8f b8 00 00 00 	mov    %rcx,0xb8(%rdi)
   10062:	c5 f8 10 84 24 70 05 	vmovups 0x570(%rsp),%xmm0
   10069:	00 00 
   1006b:	c5 f8 11 87 a8 00 00 	vmovups %xmm0,0xa8(%rdi)
   10072:	00 
   10073:	48 89 87 c0 00 00 00 	mov    %rax,0xc0(%rdi)
   1007a:	48 8b 8c 24 68 05 00 	mov    0x568(%rsp),%rcx
   10081:	00 
   10082:	48 89 8f d8 00 00 00 	mov    %rcx,0xd8(%rdi)
   10089:	c5 f8 10 84 24 58 05 	vmovups 0x558(%rsp),%xmm0
   10090:	00 00 
   10092:	c5 f8 11 87 c8 00 00 	vmovups %xmm0,0xc8(%rdi)
   10099:	00 
   1009a:	48 89 87 e0 00 00 00 	mov    %rax,0xe0(%rdi)
   100a1:	48 8b 8c 24 50 05 00 	mov    0x550(%rsp),%rcx
   100a8:	00 
   100a9:	48 89 8f f8 00 00 00 	mov    %rcx,0xf8(%rdi)
   100b0:	c5 f8 10 84 24 40 05 	vmovups 0x540(%rsp),%xmm0
   100b7:	00 00 
   100b9:	c5 f8 11 87 e8 00 00 	vmovups %xmm0,0xe8(%rdi)
   100c0:	00 
   100c1:	48 89 87 00 01 00 00 	mov    %rax,0x100(%rdi)
   100c8:	48 8b 8c 24 38 05 00 	mov    0x538(%rsp),%rcx
   100cf:	00 
   100d0:	48 89 8f 18 01 00 00 	mov    %rcx,0x118(%rdi)
   100d7:	c5 f8 10 84 24 28 05 	vmovups 0x528(%rsp),%xmm0
   100de:	00 00 
   100e0:	c5 f8 11 87 08 01 00 	vmovups %xmm0,0x108(%rdi)
   100e7:	00 
   100e8:	48 89 87 20 01 00 00 	mov    %rax,0x120(%rdi)
   100ef:	48 8b 8c 24 20 05 00 	mov    0x520(%rsp),%rcx
   100f6:	00 
   100f7:	48 89 8f 38 01 00 00 	mov    %rcx,0x138(%rdi)
   100fe:	c5 f8 10 84 24 10 05 	vmovups 0x510(%rsp),%xmm0
   10105:	00 00 
   10107:	c5 f8 11 87 28 01 00 	vmovups %xmm0,0x128(%rdi)
   1010e:	00 
   1010f:	48 89 87 40 01 00 00 	mov    %rax,0x140(%rdi)
   10116:	48 8b 8c 24 08 05 00 	mov    0x508(%rsp),%rcx
   1011d:	00 
   1011e:	48 89 8f 58 01 00 00 	mov    %rcx,0x158(%rdi)
   10125:	c5 f8 10 84 24 f8 04 	vmovups 0x4f8(%rsp),%xmm0
   1012c:	00 00 
   1012e:	c5 f8 11 87 48 01 00 	vmovups %xmm0,0x148(%rdi)
   10135:	00 
   10136:	48 89 87 60 01 00 00 	mov    %rax,0x160(%rdi)
   1013d:	c5 f8 10 84 24 e0 04 	vmovups 0x4e0(%rsp),%xmm0
   10144:	00 00 
   10146:	c5 f8 11 87 68 01 00 	vmovups %xmm0,0x168(%rdi)
   1014d:	00 
   1014e:	48 8b 8c 24 f0 04 00 	mov    0x4f0(%rsp),%rcx
   10155:	00 
   10156:	48 89 8f 78 01 00 00 	mov    %rcx,0x178(%rdi)
   1015d:	48 89 87 80 01 00 00 	mov    %rax,0x180(%rdi)
   10164:	48 8b 8c 24 d8 04 00 	mov    0x4d8(%rsp),%rcx
   1016b:	00 
   1016c:	48 89 8f 98 01 00 00 	mov    %rcx,0x198(%rdi)
   10173:	c5 f8 10 84 24 c8 04 	vmovups 0x4c8(%rsp),%xmm0
   1017a:	00 00 
   1017c:	c5 f8 11 87 88 01 00 	vmovups %xmm0,0x188(%rdi)
   10183:	00 
   10184:	48 89 87 a0 01 00 00 	mov    %rax,0x1a0(%rdi)
   1018b:	48 8b 8c 24 c0 04 00 	mov    0x4c0(%rsp),%rcx
   10192:	00 
   10193:	48 89 8f b8 01 00 00 	mov    %rcx,0x1b8(%rdi)
   1019a:	c5 f8 10 84 24 b0 04 	vmovups 0x4b0(%rsp),%xmm0
   101a1:	00 00 
   101a3:	c5 f8 11 87 a8 01 00 	vmovups %xmm0,0x1a8(%rdi)
   101aa:	00 
   101ab:	48 89 87 c0 01 00 00 	mov    %rax,0x1c0(%rdi)
   101b2:	48 8b 8c 24 a8 04 00 	mov    0x4a8(%rsp),%rcx
   101b9:	00 
   101ba:	48 89 8f d8 01 00 00 	mov    %rcx,0x1d8(%rdi)
   101c1:	c5 f8 10 84 24 98 04 	vmovups 0x498(%rsp),%xmm0
   101c8:	00 00 
   101ca:	c5 f8 11 87 c8 01 00 	vmovups %xmm0,0x1c8(%rdi)
   101d1:	00 
   101d2:	48 89 87 e0 01 00 00 	mov    %rax,0x1e0(%rdi)
   101d9:	48 8b 8c 24 90 04 00 	mov    0x490(%rsp),%rcx
   101e0:	00 
   101e1:	48 89 8f f8 01 00 00 	mov    %rcx,0x1f8(%rdi)
   101e8:	c5 f8 10 84 24 80 04 	vmovups 0x480(%rsp),%xmm0
   101ef:	00 00 
   101f1:	c5 f8 11 87 e8 01 00 	vmovups %xmm0,0x1e8(%rdi)
   101f8:	00 
   101f9:	48 89 87 00 02 00 00 	mov    %rax,0x200(%rdi)
   10200:	48 8b 8c 24 78 04 00 	mov    0x478(%rsp),%rcx
   10207:	00 
   10208:	48 89 8f 18 02 00 00 	mov    %rcx,0x218(%rdi)
   1020f:	c5 f8 10 84 24 68 04 	vmovups 0x468(%rsp),%xmm0
   10216:	00 00 
   10218:	c5 f8 11 87 08 02 00 	vmovups %xmm0,0x208(%rdi)
   1021f:	00 
   10220:	48 89 87 20 02 00 00 	mov    %rax,0x220(%rdi)
   10227:	48 8b 8c 24 60 04 00 	mov    0x460(%rsp),%rcx
   1022e:	00 
   1022f:	48 89 8f 38 02 00 00 	mov    %rcx,0x238(%rdi)
   10236:	c5 f8 10 84 24 50 04 	vmovups 0x450(%rsp),%xmm0
   1023d:	00 00 
   1023f:	c5 f8 11 87 28 02 00 	vmovups %xmm0,0x228(%rdi)
   10246:	00 
   10247:	48 89 87 40 02 00 00 	mov    %rax,0x240(%rdi)
   1024e:	48 8b 8c 24 48 04 00 	mov    0x448(%rsp),%rcx
   10255:	00 
   10256:	48 89 8f 58 02 00 00 	mov    %rcx,0x258(%rdi)
   1025d:	c5 f8 10 84 24 38 04 	vmovups 0x438(%rsp),%xmm0
   10264:	00 00 
   10266:	c5 f8 11 87 48 02 00 	vmovups %xmm0,0x248(%rdi)
   1026d:	00 
   1026e:	48 89 87 60 02 00 00 	mov    %rax,0x260(%rdi)
   10275:	48 8b 8c 24 30 04 00 	mov    0x430(%rsp),%rcx
   1027c:	00 
   1027d:	48 89 8f 78 02 00 00 	mov    %rcx,0x278(%rdi)
   10284:	c5 f8 10 84 24 20 04 	vmovups 0x420(%rsp),%xmm0
   1028b:	00 00 
   1028d:	c5 f8 11 87 68 02 00 	vmovups %xmm0,0x268(%rdi)
   10294:	00 
   10295:	48 89 87 80 02 00 00 	mov    %rax,0x280(%rdi)
   1029c:	c5 f8 10 84 24 08 04 	vmovups 0x408(%rsp),%xmm0
   102a3:	00 00 
   102a5:	c5 f8 11 87 88 02 00 	vmovups %xmm0,0x288(%rdi)
   102ac:	00 
   102ad:	48 8b 8c 24 18 04 00 	mov    0x418(%rsp),%rcx
   102b4:	00 
   102b5:	48 89 8f 98 02 00 00 	mov    %rcx,0x298(%rdi)
   102bc:	48 89 87 a0 02 00 00 	mov    %rax,0x2a0(%rdi)
   102c3:	48 8b 8c 24 00 04 00 	mov    0x400(%rsp),%rcx
   102ca:	00 
   102cb:	48 89 8f b8 02 00 00 	mov    %rcx,0x2b8(%rdi)
   102d2:	c5 f8 10 84 24 f0 03 	vmovups 0x3f0(%rsp),%xmm0
   102d9:	00 00 
   102db:	c5 f8 11 87 a8 02 00 	vmovups %xmm0,0x2a8(%rdi)
   102e2:	00 
   102e3:	48 89 87 c0 02 00 00 	mov    %rax,0x2c0(%rdi)
   102ea:	48 8b 8c 24 e8 03 00 	mov    0x3e8(%rsp),%rcx
   102f1:	00 
   102f2:	48 89 8f d8 02 00 00 	mov    %rcx,0x2d8(%rdi)
   102f9:	c5 f8 10 84 24 d8 03 	vmovups 0x3d8(%rsp),%xmm0
   10300:	00 00 
   10302:	c5 f8 11 87 c8 02 00 	vmovups %xmm0,0x2c8(%rdi)
   10309:	00 
   1030a:	48 89 87 e0 02 00 00 	mov    %rax,0x2e0(%rdi)
   10311:	48 8b 8c 24 d0 03 00 	mov    0x3d0(%rsp),%rcx
   10318:	00 
   10319:	48 89 8f f8 02 00 00 	mov    %rcx,0x2f8(%rdi)
   10320:	c5 f8 10 84 24 c0 03 	vmovups 0x3c0(%rsp),%xmm0
   10327:	00 00 
   10329:	c5 f8 11 87 e8 02 00 	vmovups %xmm0,0x2e8(%rdi)
   10330:	00 
   10331:	48 89 87 00 03 00 00 	mov    %rax,0x300(%rdi)
   10338:	48 8b 8c 24 b8 03 00 	mov    0x3b8(%rsp),%rcx
   1033f:	00 
   10340:	48 89 8f 18 03 00 00 	mov    %rcx,0x318(%rdi)
   10347:	c5 f8 10 84 24 a8 03 	vmovups 0x3a8(%rsp),%xmm0
   1034e:	00 00 
   10350:	c5 f8 11 87 08 03 00 	vmovups %xmm0,0x308(%rdi)
   10357:	00 
   10358:	48 89 87 20 03 00 00 	mov    %rax,0x320(%rdi)
   1035f:	48 8b 8c 24 a0 03 00 	mov    0x3a0(%rsp),%rcx
   10366:	00 
   10367:	48 89 8f 38 03 00 00 	mov    %rcx,0x338(%rdi)
   1036e:	c5 f8 10 84 24 90 03 	vmovups 0x390(%rsp),%xmm0
   10375:	00 00 
   10377:	c5 f8 11 87 28 03 00 	vmovups %xmm0,0x328(%rdi)
   1037e:	00 
   1037f:	48 89 87 40 03 00 00 	mov    %rax,0x340(%rdi)
   10386:	48 8b 8c 24 88 03 00 	mov    0x388(%rsp),%rcx
   1038d:	00 
   1038e:	48 89 8f 58 03 00 00 	mov    %rcx,0x358(%rdi)
   10395:	c5 f8 10 84 24 78 03 	vmovups 0x378(%rsp),%xmm0
   1039c:	00 00 
   1039e:	c5 f8 11 87 48 03 00 	vmovups %xmm0,0x348(%rdi)
   103a5:	00 
   103a6:	48 89 87 60 03 00 00 	mov    %rax,0x360(%rdi)
   103ad:	48 8b 8c 24 70 03 00 	mov    0x370(%rsp),%rcx
   103b4:	00 
   103b5:	48 89 8f 78 03 00 00 	mov    %rcx,0x378(%rdi)
   103bc:	c5 f8 10 84 24 60 03 	vmovups 0x360(%rsp),%xmm0
   103c3:	00 00 
   103c5:	c5 f8 11 87 68 03 00 	vmovups %xmm0,0x368(%rdi)
   103cc:	00 
   103cd:	48 89 87 80 03 00 00 	mov    %rax,0x380(%rdi)
   103d4:	48 8b 8c 24 58 03 00 	mov    0x358(%rsp),%rcx
   103db:	00 
   103dc:	48 89 8f 98 03 00 00 	mov    %rcx,0x398(%rdi)
   103e3:	c5 f8 10 84 24 48 03 	vmovups 0x348(%rsp),%xmm0
   103ea:	00 00 
   103ec:	c5 f8 11 87 88 03 00 	vmovups %xmm0,0x388(%rdi)
   103f3:	00 
   103f4:	48 89 87 a0 03 00 00 	mov    %rax,0x3a0(%rdi)
   103fb:	c5 f8 10 84 24 30 03 	vmovups 0x330(%rsp),%xmm0
   10402:	00 00 
   10404:	c5 f8 11 87 a8 03 00 	vmovups %xmm0,0x3a8(%rdi)
   1040b:	00 
   1040c:	48 8b 8c 24 40 03 00 	mov    0x340(%rsp),%rcx
   10413:	00 
   10414:	48 89 8f b8 03 00 00 	mov    %rcx,0x3b8(%rdi)
   1041b:	48 89 87 c0 03 00 00 	mov    %rax,0x3c0(%rdi)
   10422:	48 8b 8c 24 28 03 00 	mov    0x328(%rsp),%rcx
   10429:	00 
   1042a:	48 89 8f d8 03 00 00 	mov    %rcx,0x3d8(%rdi)
   10431:	c5 f8 10 84 24 18 03 	vmovups 0x318(%rsp),%xmm0
   10438:	00 00 
   1043a:	c5 f8 11 87 c8 03 00 	vmovups %xmm0,0x3c8(%rdi)
   10441:	00 
   10442:	48 89 87 e0 03 00 00 	mov    %rax,0x3e0(%rdi)
   10449:	48 8b 8c 24 10 03 00 	mov    0x310(%rsp),%rcx
   10450:	00 
   10451:	48 89 8f f8 03 00 00 	mov    %rcx,0x3f8(%rdi)
   10458:	c5 f8 10 84 24 00 03 	vmovups 0x300(%rsp),%xmm0
   1045f:	00 00 
   10461:	c5 f8 11 87 e8 03 00 	vmovups %xmm0,0x3e8(%rdi)
   10468:	00 
   10469:	48 89 87 00 04 00 00 	mov    %rax,0x400(%rdi)
   10470:	48 8b 8c 24 f8 02 00 	mov    0x2f8(%rsp),%rcx
   10477:	00 
   10478:	48 89 8f 18 04 00 00 	mov    %rcx,0x418(%rdi)
   1047f:	c5 f8 10 84 24 e8 02 	vmovups 0x2e8(%rsp),%xmm0
   10486:	00 00 
   10488:	c5 f8 11 87 08 04 00 	vmovups %xmm0,0x408(%rdi)
   1048f:	00 
   10490:	48 89 87 20 04 00 00 	mov    %rax,0x420(%rdi)
   10497:	48 8b 8c 24 e0 02 00 	mov    0x2e0(%rsp),%rcx
   1049e:	00 
   1049f:	48 89 8f 38 04 00 00 	mov    %rcx,0x438(%rdi)
   104a6:	c5 f8 10 84 24 d0 02 	vmovups 0x2d0(%rsp),%xmm0
   104ad:	00 00 
   104af:	c5 f8 11 87 28 04 00 	vmovups %xmm0,0x428(%rdi)
   104b6:	00 
   104b7:	48 89 87 40 04 00 00 	mov    %rax,0x440(%rdi)
   104be:	48 8b 8c 24 c8 02 00 	mov    0x2c8(%rsp),%rcx
   104c5:	00 
   104c6:	48 89 8f 58 04 00 00 	mov    %rcx,0x458(%rdi)
   104cd:	c5 f8 10 84 24 b8 02 	vmovups 0x2b8(%rsp),%xmm0
   104d4:	00 00 
   104d6:	c5 f8 11 87 48 04 00 	vmovups %xmm0,0x448(%rdi)
   104dd:	00 
   104de:	48 89 87 60 04 00 00 	mov    %rax,0x460(%rdi)
   104e5:	48 8b 8c 24 b0 02 00 	mov    0x2b0(%rsp),%rcx
   104ec:	00 
   104ed:	48 89 8f 78 04 00 00 	mov    %rcx,0x478(%rdi)
   104f4:	c5 f8 10 84 24 a0 02 	vmovups 0x2a0(%rsp),%xmm0
   104fb:	00 00 
   104fd:	c5 f8 11 87 68 04 00 	vmovups %xmm0,0x468(%rdi)
   10504:	00 
   10505:	48 89 87 80 04 00 00 	mov    %rax,0x480(%rdi)
   1050c:	48 8b 8c 24 98 02 00 	mov    0x298(%rsp),%rcx
   10513:	00 
   10514:	48 89 8f 98 04 00 00 	mov    %rcx,0x498(%rdi)
   1051b:	c5 f8 10 84 24 88 02 	vmovups 0x288(%rsp),%xmm0
   10522:	00 00 
   10524:	c5 f8 11 87 88 04 00 	vmovups %xmm0,0x488(%rdi)
   1052b:	00 
   1052c:	48 89 87 a0 04 00 00 	mov    %rax,0x4a0(%rdi)
   10533:	48 8b 8c 24 80 02 00 	mov    0x280(%rsp),%rcx
   1053a:	00 
   1053b:	48 89 8f b8 04 00 00 	mov    %rcx,0x4b8(%rdi)
   10542:	c5 f8 10 84 24 70 02 	vmovups 0x270(%rsp),%xmm0
   10549:	00 00 
   1054b:	c5 f8 11 87 a8 04 00 	vmovups %xmm0,0x4a8(%rdi)
   10552:	00 
   10553:	48 89 87 c0 04 00 00 	mov    %rax,0x4c0(%rdi)
   1055a:	c5 f8 10 84 24 58 02 	vmovups 0x258(%rsp),%xmm0
   10561:	00 00 
   10563:	c5 f8 11 87 c8 04 00 	vmovups %xmm0,0x4c8(%rdi)
   1056a:	00 
   1056b:	48 8b 8c 24 68 02 00 	mov    0x268(%rsp),%rcx
   10572:	00 
   10573:	48 89 8f d8 04 00 00 	mov    %rcx,0x4d8(%rdi)
   1057a:	48 89 87 e0 04 00 00 	mov    %rax,0x4e0(%rdi)
   10581:	48 8b 8c 24 50 02 00 	mov    0x250(%rsp),%rcx
   10588:	00 
   10589:	48 89 8f f8 04 00 00 	mov    %rcx,0x4f8(%rdi)
   10590:	c5 f8 10 84 24 40 02 	vmovups 0x240(%rsp),%xmm0
   10597:	00 00 
   10599:	c5 f8 11 87 e8 04 00 	vmovups %xmm0,0x4e8(%rdi)
   105a0:	00 
   105a1:	48 89 87 00 05 00 00 	mov    %rax,0x500(%rdi)
   105a8:	48 8b 8c 24 38 02 00 	mov    0x238(%rsp),%rcx
   105af:	00 
   105b0:	48 89 8f 18 05 00 00 	mov    %rcx,0x518(%rdi)
   105b7:	c5 f8 10 84 24 28 02 	vmovups 0x228(%rsp),%xmm0
   105be:	00 00 
   105c0:	c5 f8 11 87 08 05 00 	vmovups %xmm0,0x508(%rdi)
   105c7:	00 
   105c8:	48 89 87 20 05 00 00 	mov    %rax,0x520(%rdi)
   105cf:	48 8b 8c 24 20 02 00 	mov    0x220(%rsp),%rcx
   105d6:	00 
   105d7:	48 89 8f 38 05 00 00 	mov    %rcx,0x538(%rdi)
   105de:	c5 f8 10 84 24 10 02 	vmovups 0x210(%rsp),%xmm0
   105e5:	00 00 
   105e7:	c5 f8 11 87 28 05 00 	vmovups %xmm0,0x528(%rdi)
   105ee:	00 
   105ef:	48 89 87 40 05 00 00 	mov    %rax,0x540(%rdi)
   105f6:	48 8b 8c 24 08 02 00 	mov    0x208(%rsp),%rcx
   105fd:	00 
   105fe:	48 89 8f 58 05 00 00 	mov    %rcx,0x558(%rdi)
   10605:	c5 f8 10 84 24 f8 01 	vmovups 0x1f8(%rsp),%xmm0
   1060c:	00 00 
   1060e:	c5 f8 11 87 48 05 00 	vmovups %xmm0,0x548(%rdi)
   10615:	00 
   10616:	48 89 87 60 05 00 00 	mov    %rax,0x560(%rdi)
   1061d:	48 8b 8c 24 f0 01 00 	mov    0x1f0(%rsp),%rcx
   10624:	00 
   10625:	48 89 8f 78 05 00 00 	mov    %rcx,0x578(%rdi)
   1062c:	c5 f8 10 84 24 e0 01 	vmovups 0x1e0(%rsp),%xmm0
   10633:	00 00 
   10635:	c5 f8 11 87 68 05 00 	vmovups %xmm0,0x568(%rdi)
   1063c:	00 
   1063d:	48 89 87 80 05 00 00 	mov    %rax,0x580(%rdi)
   10644:	48 8b 8c 24 d8 01 00 	mov    0x1d8(%rsp),%rcx
   1064b:	00 
   1064c:	48 89 8f 98 05 00 00 	mov    %rcx,0x598(%rdi)
   10653:	c5 f8 10 84 24 c8 01 	vmovups 0x1c8(%rsp),%xmm0
   1065a:	00 00 
   1065c:	c5 f8 11 87 88 05 00 	vmovups %xmm0,0x588(%rdi)
   10663:	00 
   10664:	48 89 87 a0 05 00 00 	mov    %rax,0x5a0(%rdi)
   1066b:	48 8b 8c 24 c0 01 00 	mov    0x1c0(%rsp),%rcx
   10672:	00 
   10673:	48 89 8f b8 05 00 00 	mov    %rcx,0x5b8(%rdi)
   1067a:	c5 f8 10 84 24 b0 01 	vmovups 0x1b0(%rsp),%xmm0
   10681:	00 00 
   10683:	c5 f8 11 87 a8 05 00 	vmovups %xmm0,0x5a8(%rdi)
   1068a:	00 
   1068b:	48 89 87 c0 05 00 00 	mov    %rax,0x5c0(%rdi)
   10692:	48 8b 8c 24 a8 01 00 	mov    0x1a8(%rsp),%rcx
   10699:	00 
   1069a:	48 89 8f d8 05 00 00 	mov    %rcx,0x5d8(%rdi)
   106a1:	c5 f8 10 84 24 98 01 	vmovups 0x198(%rsp),%xmm0
   106a8:	00 00 
   106aa:	c5 f8 11 87 c8 05 00 	vmovups %xmm0,0x5c8(%rdi)
   106b1:	00 
   106b2:	48 89 87 e0 05 00 00 	mov    %rax,0x5e0(%rdi)
   106b9:	c5 f8 10 84 24 80 01 	vmovups 0x180(%rsp),%xmm0
   106c0:	00 00 
   106c2:	c5 f8 11 87 e8 05 00 	vmovups %xmm0,0x5e8(%rdi)
   106c9:	00 
   106ca:	48 8b 8c 24 90 01 00 	mov    0x190(%rsp),%rcx
   106d1:	00 
   106d2:	48 89 8f f8 05 00 00 	mov    %rcx,0x5f8(%rdi)
   106d9:	48 89 87 00 06 00 00 	mov    %rax,0x600(%rdi)
   106e0:	48 8b 8c 24 78 01 00 	mov    0x178(%rsp),%rcx
   106e7:	00 
   106e8:	48 89 8f 18 06 00 00 	mov    %rcx,0x618(%rdi)
   106ef:	c5 f8 10 84 24 68 01 	vmovups 0x168(%rsp),%xmm0
   106f6:	00 00 
   106f8:	c5 f8 11 87 08 06 00 	vmovups %xmm0,0x608(%rdi)
   106ff:	00 
   10700:	48 89 87 20 06 00 00 	mov    %rax,0x620(%rdi)
   10707:	48 8b 8c 24 60 01 00 	mov    0x160(%rsp),%rcx
   1070e:	00 
   1070f:	48 89 8f 38 06 00 00 	mov    %rcx,0x638(%rdi)
   10716:	c5 f8 10 84 24 50 01 	vmovups 0x150(%rsp),%xmm0
   1071d:	00 00 
   1071f:	c5 f8 11 87 28 06 00 	vmovups %xmm0,0x628(%rdi)
   10726:	00 
   10727:	48 89 87 40 06 00 00 	mov    %rax,0x640(%rdi)
   1072e:	48 8b 8c 24 48 01 00 	mov    0x148(%rsp),%rcx
   10735:	00 
   10736:	48 89 8f 58 06 00 00 	mov    %rcx,0x658(%rdi)
   1073d:	c5 f8 10 84 24 38 01 	vmovups 0x138(%rsp),%xmm0
   10744:	00 00 
   10746:	c5 f8 11 87 48 06 00 	vmovups %xmm0,0x648(%rdi)
   1074d:	00 
   1074e:	48 89 87 60 06 00 00 	mov    %rax,0x660(%rdi)
   10755:	48 8b 8c 24 30 01 00 	mov    0x130(%rsp),%rcx
   1075c:	00 
   1075d:	48 89 8f 78 06 00 00 	mov    %rcx,0x678(%rdi)
   10764:	c5 f8 10 84 24 20 01 	vmovups 0x120(%rsp),%xmm0
   1076b:	00 00 
   1076d:	c5 f8 11 87 68 06 00 	vmovups %xmm0,0x668(%rdi)
   10774:	00 
   10775:	48 89 87 80 06 00 00 	mov    %rax,0x680(%rdi)
   1077c:	48 8b 8c 24 18 01 00 	mov    0x118(%rsp),%rcx
   10783:	00 
   10784:	48 89 8f 98 06 00 00 	mov    %rcx,0x698(%rdi)
   1078b:	c5 f8 10 84 24 08 01 	vmovups 0x108(%rsp),%xmm0
   10792:	00 00 
   10794:	c5 f8 11 87 88 06 00 	vmovups %xmm0,0x688(%rdi)
   1079b:	00 
   1079c:	48 89 87 a0 06 00 00 	mov    %rax,0x6a0(%rdi)
   107a3:	48 8b 8c 24 00 01 00 	mov    0x100(%rsp),%rcx
   107aa:	00 
   107ab:	48 89 8f b8 06 00 00 	mov    %rcx,0x6b8(%rdi)
   107b2:	c5 f8 10 84 24 f0 00 	vmovups 0xf0(%rsp),%xmm0
   107b9:	00 00 
   107bb:	c5 f8 11 87 a8 06 00 	vmovups %xmm0,0x6a8(%rdi)
   107c2:	00 
   107c3:	48 89 87 c0 06 00 00 	mov    %rax,0x6c0(%rdi)
   107ca:	48 8b 8c 24 e8 00 00 	mov    0xe8(%rsp),%rcx
   107d1:	00 
   107d2:	48 89 8f d8 06 00 00 	mov    %rcx,0x6d8(%rdi)
   107d9:	c5 f8 10 84 24 d8 00 	vmovups 0xd8(%rsp),%xmm0
   107e0:	00 00 
   107e2:	c5 f8 11 87 c8 06 00 	vmovups %xmm0,0x6c8(%rdi)
   107e9:	00 
   107ea:	48 89 87 e0 06 00 00 	mov    %rax,0x6e0(%rdi)
   107f1:	48 8b 8c 24 d0 00 00 	mov    0xd0(%rsp),%rcx
   107f8:	00 
   107f9:	48 89 8f f8 06 00 00 	mov    %rcx,0x6f8(%rdi)
   10800:	c5 f8 10 84 24 c0 00 	vmovups 0xc0(%rsp),%xmm0
   10807:	00 00 
   10809:	c5 f8 11 87 e8 06 00 	vmovups %xmm0,0x6e8(%rdi)
   10810:	00 
   10811:	48 89 87 00 07 00 00 	mov    %rax,0x700(%rdi)
   10818:	c5 f8 10 84 24 a8 00 	vmovups 0xa8(%rsp),%xmm0
   1081f:	00 00 
   10821:	c5 f8 11 87 08 07 00 	vmovups %xmm0,0x708(%rdi)
   10828:	00 
   10829:	48 8b 8c 24 b8 00 00 	mov    0xb8(%rsp),%rcx
   10830:	00 
   10831:	48 89 8f 18 07 00 00 	mov    %rcx,0x718(%rdi)
   10838:	48 89 87 20 07 00 00 	mov    %rax,0x720(%rdi)
   1083f:	48 8b 8c 24 a0 00 00 	mov    0xa0(%rsp),%rcx
   10846:	00 
   10847:	48 89 8f 38 07 00 00 	mov    %rcx,0x738(%rdi)
   1084e:	c5 f8 10 84 24 90 00 	vmovups 0x90(%rsp),%xmm0
   10855:	00 00 
   10857:	c5 f8 11 87 28 07 00 	vmovups %xmm0,0x728(%rdi)
   1085e:	00 
   1085f:	48 89 87 40 07 00 00 	mov    %rax,0x740(%rdi)
   10866:	48 8b 8c 24 88 00 00 	mov    0x88(%rsp),%rcx
   1086d:	00 
   1086e:	48 89 8f 58 07 00 00 	mov    %rcx,0x758(%rdi)
   10875:	c5 f8 10 44 24 78    	vmovups 0x78(%rsp),%xmm0
   1087b:	c5 f8 11 87 48 07 00 	vmovups %xmm0,0x748(%rdi)
   10882:	00 
   10883:	48 89 87 60 07 00 00 	mov    %rax,0x760(%rdi)
   1088a:	48 8b 4c 24 70       	mov    0x70(%rsp),%rcx
   1088f:	48 89 8f 78 07 00 00 	mov    %rcx,0x778(%rdi)
   10896:	c5 f8 10 44 24 60    	vmovups 0x60(%rsp),%xmm0
   1089c:	c5 f8 11 87 68 07 00 	vmovups %xmm0,0x768(%rdi)
   108a3:	00 
   108a4:	48 89 87 80 07 00 00 	mov    %rax,0x780(%rdi)
   108ab:	48 8b 4c 24 58       	mov    0x58(%rsp),%rcx
   108b0:	48 89 8f 98 07 00 00 	mov    %rcx,0x798(%rdi)
   108b7:	c5 f8 10 44 24 48    	vmovups 0x48(%rsp),%xmm0
   108bd:	c5 f8 11 87 88 07 00 	vmovups %xmm0,0x788(%rdi)
   108c4:	00 
   108c5:	48 89 87 a0 07 00 00 	mov    %rax,0x7a0(%rdi)
   108cc:	48 8b 4c 24 40       	mov    0x40(%rsp),%rcx
   108d1:	48 89 8f b8 07 00 00 	mov    %rcx,0x7b8(%rdi)
   108d8:	c5 f8 10 44 24 30    	vmovups 0x30(%rsp),%xmm0
   108de:	c5 f8 11 87 a8 07 00 	vmovups %xmm0,0x7a8(%rdi)
   108e5:	00 
   108e6:	48 89 87 c0 07 00 00 	mov    %rax,0x7c0(%rdi)
   108ed:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
   108f2:	48 89 8f d8 07 00 00 	mov    %rcx,0x7d8(%rdi)
   108f9:	c5 f8 10 44 24 18    	vmovups 0x18(%rsp),%xmm0
   108ff:	c5 f8 11 87 c8 07 00 	vmovups %xmm0,0x7c8(%rdi)
   10906:	00 
   10907:	48 89 87 e0 07 00 00 	mov    %rax,0x7e0(%rdi)
   1090e:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   10913:	48 89 87 f8 07 00 00 	mov    %rax,0x7f8(%rdi)
   1091a:	c5 f8 10 04 24       	vmovups (%rsp),%xmm0
   1091f:	c5 f8 11 87 e8 07 00 	vmovups %xmm0,0x7e8(%rdi)
   10926:	00 
   10927:	48 c7 87 00 08 00 00 	movq   $0x0,0x800(%rdi)
   1092e:	00 00 00 00 
             Deferred::new(no_op_func), Deferred::new(no_op_func), Deferred::new(no_op_func), Deferred::new(no_op_func),
             Deferred::new(no_op_func), Deferred::new(no_op_func), Deferred::new(no_op_func), Deferred::new(no_op_func)]
        };
        #[cfg(feature = "sanitize")]
        return Bag { len: 0, deferreds: [Deferred::new(no_op_func), Deferred::new(no_op_func), Deferred::new(no_op_func), Deferred::new(no_op_func)] };
    }
   10932:	48 81 c4 00 06 00 00 	add    $0x600,%rsp
   10939:	c3                   	retq   
   1093a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000010940 <_ZN15crossbeam_epoch8deferred8Deferred3new4call17h05a0da60be9227f7E>:
                ptr::write(&mut data as *mut Data as *mut F, f);

                unsafe fn call<F: FnOnce()>(raw: *mut u8) {
                    let f: F = ptr::read(raw as *mut F);
                    f();
                }
   10940:	c3                   	retq   
   10941:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   10948:	00 00 00 
   1094b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000010950 <_ZN15crossbeam_epoch5guard5Guard5flush17hdb3eebcd28944394E>:
    /// }
    /// guard.flush();
    /// ```
    ///
    /// [`unprotected`]: fn.unprotected.html
    pub fn flush(&self) {
   10950:	55                   	push   %rbp
   10951:	41 57                	push   %r15
   10953:	41 56                	push   %r14
   10955:	41 55                	push   %r13
   10957:	41 54                	push   %r12
   10959:	53                   	push   %rbx
   1095a:	b8 18 10 00 00       	mov    $0x1018,%eax
   1095f:	e8 34 8b 02 00       	callq  39498 <__rust_probestack>
   10964:	48 29 c4             	sub    %rax,%rsp
        if let Some(local) = unsafe { self.local.as_ref() } {
   10967:	4c 8b 3f             	mov    (%rdi),%r15
   1096a:	4d 85 ff             	test   %r15,%r15
   1096d:	0f 84 9e 01 00 00    	je     10b11 <_ZN15crossbeam_epoch5guard5Guard5flush17hdb3eebcd28944394E+0x1c1>
   10973:	49 89 fe             	mov    %rdi,%r14
        self.len == 0
   10976:	49 83 bf 18 08 00 00 	cmpq   $0x0,0x818(%r15)
   1097d:	00 
    }

    pub fn flush(&self, guard: &Guard) {
        let bag = unsafe { &mut *self.bag.get() };

        if !bag.is_empty() {
   1097e:	0f 84 6c 01 00 00    	je     10af0 <_ZN15crossbeam_epoch5guard5Guard5flush17hdb3eebcd28944394E+0x1a0>
            self.global().push_bag(bag, guard);
   10984:	49 8b 5f 10          	mov    0x10(%r15),%rbx
   10988:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
        Self::default()
   1098d:	e8 0e f6 ff ff       	callq  ffa0 <_ZN73_$LT$crossbeam_epoch..internal..Bag$u20$as$u20$core..default..Default$GT$7default17h06d0746c5d364cb6E>
   10992:	49 8d 47 18          	lea    0x18(%r15),%rax
   10996:	b9 60 00 00 00       	mov    $0x60,%ecx
   1099b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   109a0:	c5 fc 10 44 08 a0    	vmovups -0x60(%rax,%rcx,1),%ymm0
   109a6:	c5 fc 10 4c 0c a8    	vmovups -0x58(%rsp,%rcx,1),%ymm1
   109ac:	c5 fc 11 4c 08 a0    	vmovups %ymm1,-0x60(%rax,%rcx,1)
   109b2:	c5 fc 11 44 0c a8    	vmovups %ymm0,-0x58(%rsp,%rcx,1)
   109b8:	c5 fc 10 44 08 c0    	vmovups -0x40(%rax,%rcx,1),%ymm0
   109be:	c5 fc 10 4c 0c c8    	vmovups -0x38(%rsp,%rcx,1),%ymm1
   109c4:	c5 fc 11 4c 08 c0    	vmovups %ymm1,-0x40(%rax,%rcx,1)
   109ca:	c5 fc 11 44 0c c8    	vmovups %ymm0,-0x38(%rsp,%rcx,1)
   109d0:	c5 fc 10 44 08 e0    	vmovups -0x20(%rax,%rcx,1),%ymm0
   109d6:	c5 fc 10 4c 0c e8    	vmovups -0x18(%rsp,%rcx,1),%ymm1
   109dc:	c5 fc 11 4c 08 e0    	vmovups %ymm1,-0x20(%rax,%rcx,1)
   109e2:	c5 fc 11 44 0c e8    	vmovups %ymm0,-0x18(%rsp,%rcx,1)
   109e8:	c5 fc 10 04 08       	vmovups (%rax,%rcx,1),%ymm0
   109ed:	c5 fc 10 4c 0c 08    	vmovups 0x8(%rsp,%rcx,1),%ymm1
   109f3:	c5 fc 11 0c 08       	vmovups %ymm1,(%rax,%rcx,1)
   109f8:	c5 fc 11 44 0c 08    	vmovups %ymm0,0x8(%rsp,%rcx,1)
   109fe:	48 8d 91 80 00 00 00 	lea    0x80(%rcx),%rdx
   10a05:	48 83 c1 40          	add    $0x40,%rcx
   10a09:	48 81 f9 09 08 00 00 	cmp    $0x809,%rcx
   10a10:	48 89 d1             	mov    %rdx,%rcx
   10a13:	72 8b                	jb     109a0 <_ZN15crossbeam_epoch5guard5Guard5flush17hdb3eebcd28944394E+0x50>
   10a15:	49 8b 87 18 08 00 00 	mov    0x818(%r15),%rax
   10a1c:	48 8b 8c 24 08 08 00 	mov    0x808(%rsp),%rcx
   10a23:	00 
   10a24:	49 89 8f 18 08 00 00 	mov    %rcx,0x818(%r15)
   10a2b:	48 89 84 24 08 08 00 	mov    %rax,0x808(%rsp)
   10a32:	00 
   10a33:	4c 8d a4 24 10 08 00 	lea    0x810(%rsp),%r12
   10a3a:	00 
   10a3b:	48 8d 74 24 08       	lea    0x8(%rsp),%rsi
   10a40:	48 8b 2d 89 74 23 00 	mov    0x237489(%rip),%rbp        # 247ed0 <memcpy@GLIBC_2.14>
   10a47:	ba 08 08 00 00       	mov    $0x808,%edx
   10a4c:	4c 89 e7             	mov    %r12,%rdi
   10a4f:	c5 f8 77             	vzeroupper 
   10a52:	ff d5                	callq  *%rbp
   10a54:	0f ae f0             	mfence 
   10a57:	4c 8b ab 80 01 00 00 	mov    0x180(%rbx),%r13
   10a5e:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
    /// use crossbeam_epoch::Owned;
    ///
    /// let o = Owned::new(1234);
    /// ```
    pub fn new(value: T) -> Owned<T> {
        Self::from(Box::new(value))
   10a63:	ba 08 08 00 00       	mov    $0x808,%edx
   10a68:	4c 89 e6             	mov    %r12,%rsi
   10a6b:	ff d5                	callq  *%rbp
   10a6d:	bf 18 08 00 00       	mov    $0x818,%edi
   10a72:	ff 15 90 74 23 00    	callq  *0x237490(%rip)        # 247f08 <malloc@GLIBC_2.2.5>
   10a78:	48 85 c0             	test   %rax,%rax
   10a7b:	0f 84 a2 00 00 00    	je     10b23 <_ZN15crossbeam_epoch5guard5Guard5flush17hdb3eebcd28944394E+0x1d3>
   10a81:	49 89 c4             	mov    %rax,%r12
   10a84:	4c 89 28             	mov    %r13,(%rax)
   10a87:	48 89 c7             	mov    %rax,%rdi
   10a8a:	48 83 c7 08          	add    $0x8,%rdi
   10a8e:	48 8d 74 24 08       	lea    0x8(%rsp),%rsi
   10a93:	ba 08 08 00 00       	mov    $0x808,%edx
   10a98:	ff 15 32 74 23 00    	callq  *0x237432(%rip)        # 247ed0 <memcpy@GLIBC_2.14>
   10a9e:	49 c7 84 24 10 08 00 	movq   $0x0,0x810(%r12)
   10aa5:	00 00 00 00 00 
   10aaa:	eb 10                	jmp    10abc <_ZN15crossbeam_epoch5guard5Guard5flush17hdb3eebcd28944394E+0x16c>
   10aac:	0f 1f 40 00          	nopl   0x0(%rax)
   10ab0:	48 89 c8             	mov    %rcx,%rax
   10ab3:	f0 48 0f b1 b3 00 01 	lock cmpxchg %rsi,0x100(%rbx)
   10aba:	00 00 
   10abc:	48 8b 8b 00 01 00 00 	mov    0x100(%rbx),%rcx
    let raw = (data & !low_bits::<T>()) as *mut T;
   10ac3:	48 89 ca             	mov    %rcx,%rdx
   10ac6:	48 83 e2 f8          	and    $0xfffffffffffffff8,%rdx
   10aca:	48 8b b2 10 08 00 00 	mov    0x810(%rdx),%rsi
   10ad1:	48 83 fe 07          	cmp    $0x7,%rsi
    #[inline(always)]
    fn push_internal(&self, onto: Shared<Node<T>>, new: Shared<Node<T>>, guard: &Guard) -> bool {
        // is `onto` the actual tail?
        let o = unsafe { onto.deref() };
        let next = o.next.load(Acquire, guard);
        if unsafe { next.as_ref().is_some() } {
   10ad5:	77 d9                	ja     10ab0 <_ZN15crossbeam_epoch5guard5Guard5flush17hdb3eebcd28944394E+0x160>
   10ad7:	31 c0                	xor    %eax,%eax
   10ad9:	f0 4c 0f b1 a2 10 08 	lock cmpxchg %r12,0x810(%rdx)
   10ae0:	00 00 
   10ae2:	75 d8                	jne    10abc <_ZN15crossbeam_epoch5guard5Guard5flush17hdb3eebcd28944394E+0x16c>
   10ae4:	48 89 c8             	mov    %rcx,%rax
   10ae7:	f0 4c 0f b1 a3 00 01 	lock cmpxchg %r12,0x100(%rbx)
   10aee:	00 00 
        }

        self.global().collect(guard);
   10af0:	49 8b 7f 10          	mov    0x10(%r15),%rdi
   10af4:	48 83 ef 80          	sub    $0xffffffffffffff80,%rdi
   10af8:	4c 89 f6             	mov    %r14,%rsi
   10afb:	48 81 c4 18 10 00 00 	add    $0x1018,%rsp
   10b02:	5b                   	pop    %rbx
   10b03:	41 5c                	pop    %r12
   10b05:	41 5d                	pop    %r13
   10b07:	41 5e                	pop    %r14
   10b09:	41 5f                	pop    %r15
   10b0b:	5d                   	pop    %rbp
   10b0c:	e9 2f 00 00 00       	jmpq   10b40 <_ZN15crossbeam_epoch8internal6Global7collect17h831494d6c7d86e73E>
            local.flush(self);
        }
    }
   10b11:	48 81 c4 18 10 00 00 	add    $0x1018,%rsp
   10b18:	5b                   	pop    %rbx
   10b19:	41 5c                	pop    %r12
   10b1b:	41 5d                	pop    %r13
   10b1d:	41 5e                	pop    %r14
   10b1f:	41 5f                	pop    %r15
   10b21:	5d                   	pop    %rbp
   10b22:	c3                   	retq   
   10b23:	bf 18 08 00 00       	mov    $0x818,%edi
   10b28:	be 08 00 00 00       	mov    $0x8,%esi
   10b2d:	e8 8e 49 ff ff       	callq  54c0 <_ZN5alloc5alloc18handle_alloc_error17hf7bb8682f6c8b1d7E>
   10b32:	0f 0b                	ud2    
   10b34:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   10b3b:	00 00 00 
   10b3e:	66 90                	xchg   %ax,%ax

0000000000010b40 <_ZN15crossbeam_epoch8internal6Global7collect17h831494d6c7d86e73E>:
    pub fn collect(&self, guard: &Guard) {
   10b40:	55                   	push   %rbp
   10b41:	48 89 e5             	mov    %rsp,%rbp
   10b44:	41 57                	push   %r15
   10b46:	41 56                	push   %r14
   10b48:	41 55                	push   %r13
   10b4a:	41 54                	push   %r12
   10b4c:	53                   	push   %rbx
   10b4d:	48 83 e4 e0          	and    $0xffffffffffffffe0,%rsp
   10b51:	b8 a0 10 00 00       	mov    $0x10a0,%eax
   10b56:	e8 3d 89 02 00       	callq  39498 <__rust_probestack>
   10b5b:	48 29 c4             	sub    %rax,%rsp
   10b5e:	49 89 fe             	mov    %rdi,%r14
   10b61:	48 89 34 24          	mov    %rsi,(%rsp)
        let global_epoch = self.try_advance(guard);
   10b65:	e8 16 02 00 00       	callq  10d80 <_ZN15crossbeam_epoch8internal6Global11try_advance17he434f08b5ff41e43E>
   10b6a:	49 89 c0             	mov    %rax,%r8
   10b6d:	31 db                	xor    %ebx,%ebx
   10b6f:	4c 8d 3d ca fd ff ff 	lea    -0x236(%rip),%r15        # 10940 <_ZN15crossbeam_epoch8deferred8Deferred3new4call17h05a0da60be9227f7E>
   10b76:	4c 89 44 24 08       	mov    %r8,0x8(%rsp)
   10b7b:	eb 1a                	jmp    10b97 <_ZN15crossbeam_epoch8internal6Global7collect17h831494d6c7d86e73E+0x57>
   10b7d:	0f 1f 00             	nopl   (%rax)
   10b80:	48 8b 5c 24 18       	mov    0x18(%rsp),%rbx
   10b85:	48 ff c3             	inc    %rbx
   10b88:	48 83 fb 08          	cmp    $0x8,%rbx
   10b8c:	4c 8b 44 24 08       	mov    0x8(%rsp),%r8
   10b91:	0f 84 97 01 00 00    	je     10d2e <_ZN15crossbeam_epoch8internal6Global7collect17h831494d6c7d86e73E+0x1ee>
   10b97:	49 8b 0e             	mov    (%r14),%rcx
   10b9a:	48 89 cf             	mov    %rcx,%rdi
   10b9d:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
   10ba1:	48 8b 97 10 08 00 00 	mov    0x810(%rdi),%rdx
    {
        let head = self.head.load(Acquire, guard);
        let h = unsafe { head.deref() };
        let next = h.next.load(Acquire, guard);
        match unsafe { next.as_ref() } {
            Some(n) if condition(&n.data) => unsafe {
   10ba8:	49 89 d4             	mov    %rdx,%r12
   10bab:	49 83 e4 f8          	and    $0xfffffffffffffff8,%r12
   10baf:	48 89 5c 24 18       	mov    %rbx,0x18(%rsp)
   10bb4:	74 42                	je     10bf8 <_ZN15crossbeam_epoch8internal6Global7collect17h831494d6c7d86e73E+0xb8>
   10bb6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   10bbd:	00 00 00 
   10bc0:	49 8b 04 24          	mov    (%r12),%rax
    /// / 2)`, so the returned distance will be in the same interval.
    pub fn wrapping_sub(self, rhs: Self) -> isize {
        // The result is the same with `(self.data & !1).wrapping_sub(rhs.data & !1) as isize >> 1`,
        // because the possible difference of LSB in `(self.data & !1).wrapping_sub(rhs.data & !1)`
        // will be ignored in the shift operation.
        self.data.wrapping_sub(rhs.data & !1) as isize >> 1
   10bc4:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
   10bc8:	4c 89 c6             	mov    %r8,%rsi
   10bcb:	48 29 c6             	sub    %rax,%rsi
        global_epoch.wrapping_sub(self.epoch) >= 2
   10bce:	48 83 fe 04          	cmp    $0x4,%rsi
   10bd2:	7c 24                	jl     10bf8 <_ZN15crossbeam_epoch8internal6Global7collect17h831494d6c7d86e73E+0xb8>
   10bd4:	48 89 c8             	mov    %rcx,%rax
   10bd7:	f0 49 0f b1 16       	lock cmpxchg %rdx,(%r14)
   10bdc:	74 32                	je     10c10 <_ZN15crossbeam_epoch8internal6Global7collect17h831494d6c7d86e73E+0xd0>
   10bde:	49 8b 0e             	mov    (%r14),%rcx
   10be1:	48 89 cf             	mov    %rcx,%rdi
   10be4:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
   10be8:	48 8b 97 10 08 00 00 	mov    0x810(%rdi),%rdx
   10bef:	49 89 d4             	mov    %rdx,%r12
   10bf2:	49 83 e4 f8          	and    $0xfffffffffffffff8,%r12
   10bf6:	75 c8                	jne    10bc0 <_ZN15crossbeam_epoch8internal6Global7collect17h831494d6c7d86e73E+0x80>
   10bf8:	45 31 ed             	xor    %r13d,%r13d
   10bfb:	4c 8b 25 ce 72 23 00 	mov    0x2372ce(%rip),%r12        # 247ed0 <memcpy@GLIBC_2.14>
   10c02:	eb 70                	jmp    10c74 <_ZN15crossbeam_epoch8internal6Global7collect17h831494d6c7d86e73E+0x134>
   10c04:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   10c0b:	00 00 00 
   10c0e:	66 90                	xchg   %ax,%ax
   10c10:	48 8b 04 24          	mov    (%rsp),%rax
        if let Some(local) = self.local.as_ref() {
   10c14:	48 8b 00             	mov    (%rax),%rax
   10c17:	48 85 c0             	test   %rax,%rax
   10c1a:	74 23                	je     10c3f <_ZN15crossbeam_epoch8internal6Global7collect17h831494d6c7d86e73E+0xff>

                Deferred {
   10c1c:	48 8d 15 3d 03 00 00 	lea    0x33d(%rip),%rdx        # 10f60 <_ZN15crossbeam_epoch8deferred8Deferred3new4call17h8007d1b692d73d14E>
   10c23:	48 89 54 24 20       	mov    %rdx,0x20(%rsp)
   10c28:	48 89 4c 24 28       	mov    %rcx,0x28(%rsp)
            local.defer(Deferred::new(move || drop(f())), self);
   10c2d:	48 89 c7             	mov    %rax,%rdi
   10c30:	48 8d 74 24 20       	lea    0x20(%rsp),%rsi
   10c35:	c5 f8 77             	vzeroupper 
   10c38:	e8 33 03 00 00       	callq  10f70 <_ZN15crossbeam_epoch8internal5Local5defer17hb03f4139d4e20a39E>
   10c3d:	eb 09                	jmp    10c48 <_ZN15crossbeam_epoch8internal6Global7collect17h831494d6c7d86e73E+0x108>
   10c3f:	c5 f8 77             	vzeroupper 
   10c42:	ff 15 30 71 23 00    	callq  *0x237130(%rip)        # 247d78 <free@GLIBC_2.2.5>
   10c48:	49 8b 04 24          	mov    (%r12),%rax
   10c4c:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   10c51:	4d 8b 6c 24 08       	mov    0x8(%r12),%r13
   10c56:	49 83 c4 10          	add    $0x10,%r12
   10c5a:	ba 00 08 00 00       	mov    $0x800,%edx
   10c5f:	48 8d bc 24 78 08 00 	lea    0x878(%rsp),%rdi
   10c66:	00 
   10c67:	4c 89 e6             	mov    %r12,%rsi
   10c6a:	4c 8b 25 5f 72 23 00 	mov    0x23725f(%rip),%r12        # 247ed0 <memcpy@GLIBC_2.14>
   10c71:	41 ff d4             	callq  *%r12
   10c74:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    where
        T: Sync,
        F: Fn(&T) -> bool,
    {
        loop {
            if let Ok(head) = self.pop_if_internal(&condition, guard) {
   10c79:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
   10c7e:	4c 89 6c 24 70       	mov    %r13,0x70(%rsp)
   10c83:	ba 00 08 00 00       	mov    $0x800,%edx
   10c88:	48 8d 7c 24 78       	lea    0x78(%rsp),%rdi
   10c8d:	48 8d 9c 24 78 08 00 	lea    0x878(%rsp),%rbx
   10c94:	00 
   10c95:	48 89 de             	mov    %rbx,%rsi
   10c98:	c5 f8 77             	vzeroupper 
   10c9b:	41 ff d4             	callq  *%r12
                None => break,
   10c9e:	4d 85 ed             	test   %r13,%r13
   10ca1:	0f 84 87 00 00 00    	je     10d2e <_ZN15crossbeam_epoch8internal6Global7collect17h831494d6c7d86e73E+0x1ee>
                Some(sealed_bag) => drop(sealed_bag),
   10ca7:	ba 10 08 00 00       	mov    $0x810,%edx
   10cac:	48 89 df             	mov    %rbx,%rdi
   10caf:	48 8d 74 24 68       	lea    0x68(%rsp),%rsi
   10cb4:	41 ff d4             	callq  *%r12
        for deferred in &mut self.deferreds[..self.len] {
   10cb7:	4c 8b a4 24 80 10 00 	mov    0x1080(%rsp),%r12
   10cbe:	00 
   10cbf:	49 83 fc 41          	cmp    $0x41,%r12
   10cc3:	73 7b                	jae    10d40 <_ZN15crossbeam_epoch8internal6Global7collect17h831494d6c7d86e73E+0x200>
   10cc5:	49 c1 e4 05          	shl    $0x5,%r12
   10cc9:	4c 8d 6c 24 28       	lea    0x28(%rsp),%r13
   10cce:	0f 84 ac fe ff ff    	je     10b80 <_ZN15crossbeam_epoch8internal6Global7collect17h831494d6c7d86e73E+0x40>
   10cd4:	31 db                	xor    %ebx,%ebx
   10cd6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   10cdd:	00 00 00 
            let owned_deferred = mem::replace(deferred, no_op);
   10ce0:	c4 c3 f1 22 c7 00    	vpinsrq $0x0,%r15,%xmm1,%xmm0
   10ce6:	c4 e3 75 02 c0 0f    	vpblendd $0xf,%ymm0,%ymm1,%ymm0
   10cec:	c5 fc 10 8c 1c 80 08 	vmovups 0x880(%rsp,%rbx,1),%ymm1
   10cf3:	00 00 
    }

    /// Calls the function.
    #[inline]
    pub fn call(mut self) {
        let call = self.call;
   10cf5:	48 8b 84 1c 80 08 00 	mov    0x880(%rsp,%rbx,1),%rax
   10cfc:	00 
   10cfd:	c5 fe 7f 84 1c 80 08 	vmovdqu %ymm0,0x880(%rsp,%rbx,1)
   10d04:	00 00 
   10d06:	c5 fc 29 4c 24 40    	vmovaps %ymm1,0x40(%rsp)
            owned_deferred.call();
   10d0c:	c5 fc 29 4c 24 20    	vmovaps %ymm1,0x20(%rsp)
        unsafe { call(&mut self.data as *mut Data as *mut u8) };
   10d12:	4c 89 ef             	mov    %r13,%rdi
   10d15:	c5 f8 77             	vzeroupper 
   10d18:	ff d0                	callq  *%rax
   10d1a:	48 83 c3 20          	add    $0x20,%rbx
   10d1e:	49 39 dc             	cmp    %rbx,%r12
   10d21:	c5 fc 28 4c 24 40    	vmovaps 0x40(%rsp),%ymm1
   10d27:	75 b7                	jne    10ce0 <_ZN15crossbeam_epoch8internal6Global7collect17h831494d6c7d86e73E+0x1a0>
   10d29:	e9 52 fe ff ff       	jmpq   10b80 <_ZN15crossbeam_epoch8internal6Global7collect17h831494d6c7d86e73E+0x40>
    }
   10d2e:	48 8d 65 d8          	lea    -0x28(%rbp),%rsp
   10d32:	5b                   	pop    %rbx
   10d33:	41 5c                	pop    %r12
   10d35:	41 5d                	pop    %r13
   10d37:	41 5e                	pop    %r14
   10d39:	41 5f                	pop    %r15
   10d3b:	5d                   	pop    %rbp
   10d3c:	c5 f8 77             	vzeroupper 
   10d3f:	c3                   	retq   
   10d40:	be 40 00 00 00       	mov    $0x40,%esi
   10d45:	4c 89 e7             	mov    %r12,%rdi
   10d48:	e8 83 6e ff ff       	callq  7bd0 <_ZN4core5slice20slice_index_len_fail17h52736412c1ce1871E>
   10d4d:	0f 0b                	ud2    
   10d4f:	48 89 c3             	mov    %rax,%rbx
        }
   10d52:	48 83 7c 24 70 00    	cmpq   $0x0,0x70(%rsp)
   10d58:	74 0d                	je     10d67 <_ZN15crossbeam_epoch8internal6Global7collect17h831494d6c7d86e73E+0x227>
   10d5a:	eb 15                	jmp    10d71 <_ZN15crossbeam_epoch8internal6Global7collect17h831494d6c7d86e73E+0x231>
   10d5c:	48 89 c3             	mov    %rax,%rbx
   10d5f:	48 83 7c 24 70 00    	cmpq   $0x0,0x70(%rsp)
   10d65:	75 0a                	jne    10d71 <_ZN15crossbeam_epoch8internal6Global7collect17h831494d6c7d86e73E+0x231>
   10d67:	48 8d 7c 24 68       	lea    0x68(%rsp),%rdi
   10d6c:	e8 9f 04 00 00       	callq  11210 <_ZN4core3ptr13drop_in_place17h4ad1cdf779f9ef0cE>
   10d71:	48 89 df             	mov    %rbx,%rdi
   10d74:	e8 27 33 ff ff       	callq  40a0 <_Unwind_Resume@plt>
   10d79:	0f 0b                	ud2    
   10d7b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000010d80 <_ZN15crossbeam_epoch8internal6Global11try_advance17he434f08b5ff41e43E>:
    pub fn try_advance(&self, guard: &Guard) -> Epoch {
   10d80:	55                   	push   %rbp
   10d81:	48 89 e5             	mov    %rsp,%rbp
   10d84:	41 57                	push   %r15
   10d86:	41 56                	push   %r14
   10d88:	41 55                	push   %r13
   10d8a:	41 54                	push   %r12
   10d8c:	53                   	push   %rbx
   10d8d:	48 83 e4 e0          	and    $0xffffffffffffffe0,%rsp
   10d91:	48 81 ec a0 00 00 00 	sub    $0xa0,%rsp
   10d98:	49 89 f7             	mov    %rsi,%r15
   10d9b:	48 8b 87 00 01 00 00 	mov    0x100(%rdi),%rax
   10da2:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   10da7:	0f ae f0             	mfence 
        for local in self.locals.iter(&guard) {
   10daa:	48 8d 8f 80 01 00 00 	lea    0x180(%rdi),%rcx
   10db1:	48 89 7c 24 28       	mov    %rdi,0x28(%rsp)
   10db6:	48 8b 87 80 01 00 00 	mov    0x180(%rdi),%rax
   10dbd:	48 89 4c 24 20       	mov    %rcx,0x20(%rsp)
   10dc2:	48 89 cb             	mov    %rcx,%rbx
   10dc5:	48 89 74 24 30       	mov    %rsi,0x30(%rsp)

impl<'g, T: 'g, C: IsElement<T>> Iterator for Iter<'g, T, C> {
    type Item = Result<&'g T, IterError>;

    fn next(&mut self) -> Option<Self::Item> {
        while let Some(c) = unsafe { self.curr.as_ref() } {
   10dca:	49 89 c6             	mov    %rax,%r14
   10dcd:	49 83 e6 f8          	and    $0xfffffffffffffff8,%r14
   10dd1:	0f 84 2d 01 00 00    	je     10f04 <_ZN15crossbeam_epoch8internal6Global11try_advance17he434f08b5ff41e43E+0x184>
   10dd7:	49 89 c4             	mov    %rax,%r12
   10dda:	48 89 5c 24 38       	mov    %rbx,0x38(%rsp)
   10ddf:	eb 36                	jmp    10e17 <_ZN15crossbeam_epoch8internal6Global11try_advance17he434f08b5ff41e43E+0x97>
   10de1:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   10de8:	00 00 00 
   10deb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
                Deferred {
   10df0:	48 8d 05 c9 04 00 00 	lea    0x4c9(%rip),%rax        # 112c0 <_ZN15crossbeam_epoch8deferred8Deferred3new4call17haf9b85e224345c98E>
   10df7:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
   10dfc:	4c 89 64 24 48       	mov    %r12,0x48(%rsp)
   10e01:	48 8d 74 24 40       	lea    0x40(%rsp),%rsi
   10e06:	e8 65 01 00 00       	callq  10f70 <_ZN15crossbeam_epoch8internal5Local5defer17hb03f4139d4e20a39E>
   10e0b:	4d 89 f4             	mov    %r14,%r12
   10e0e:	4d 85 f6             	test   %r14,%r14
   10e11:	0f 84 ed 00 00 00    	je     10f04 <_ZN15crossbeam_epoch8internal6Global11try_advance17he434f08b5ff41e43E+0x184>
   10e17:	49 8b 06             	mov    (%r14),%rax
    let tag = data & low_bits::<T>();
   10e1a:	89 c1                	mov    %eax,%ecx
   10e1c:	83 e1 07             	and    $0x7,%ecx
            let succ = c.next.load(Acquire, self.guard);

            if succ.tag() == 1 {
   10e1f:	48 83 f9 01          	cmp    $0x1,%rcx
   10e23:	0f 85 b7 00 00 00    	jne    10ee0 <_ZN15crossbeam_epoch8internal6Global11try_advance17he434f08b5ff41e43E+0x160>
    (data & !low_bits::<T>()) | (tag & low_bits::<T>())
   10e29:	49 89 c6             	mov    %rax,%r14
   10e2c:	49 83 e6 f8          	and    $0xfffffffffffffff8,%r14
   10e30:	4c 89 e0             	mov    %r12,%rax
   10e33:	f0 4c 0f b1 33       	lock cmpxchg %r14,(%rbx)
   10e38:	0f 85 dd 00 00 00    	jne    10f1b <_ZN15crossbeam_epoch8internal6Global11try_advance17he434f08b5ff41e43E+0x19b>
    let raw = (data & !low_bits::<T>()) as *mut T;
   10e3e:	49 83 e4 f8          	and    $0xfffffffffffffff8,%r12
        if let Some(local) = self.local.as_ref() {
   10e42:	49 8b 3f             	mov    (%r15),%rdi
   10e45:	48 85 ff             	test   %rdi,%rdi
   10e48:	75 a6                	jne    10df0 <_ZN15crossbeam_epoch8internal6Global11try_advance17he434f08b5ff41e43E+0x70>
        for deferred in &mut self.deferreds[..self.len] {
   10e4a:	4d 8b bc 24 18 08 00 	mov    0x818(%r12),%r15
   10e51:	00 
   10e52:	49 83 ff 41          	cmp    $0x41,%r15
   10e56:	0f 83 db 00 00 00    	jae    10f37 <_ZN15crossbeam_epoch8internal6Global11try_advance17he434f08b5ff41e43E+0x1b7>
   10e5c:	49 c1 e7 05          	shl    $0x5,%r15
   10e60:	74 56                	je     10eb8 <_ZN15crossbeam_epoch8internal6Global11try_advance17he434f08b5ff41e43E+0x138>
   10e62:	49 8d 5c 24 18       	lea    0x18(%r12),%rbx
   10e67:	45 31 ed             	xor    %r13d,%r13d
   10e6a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
            let owned_deferred = mem::replace(deferred, no_op);
   10e70:	48 8d 05 c9 fa ff ff 	lea    -0x537(%rip),%rax        # 10940 <_ZN15crossbeam_epoch8deferred8Deferred3new4call17h05a0da60be9227f7E>
   10e77:	c4 e3 f1 22 c0 00    	vpinsrq $0x0,%rax,%xmm1,%xmm0
   10e7d:	c4 e3 75 02 c0 0f    	vpblendd $0xf,%ymm0,%ymm1,%ymm0
   10e83:	c4 a1 7c 10 0c 2b    	vmovups (%rbx,%r13,1),%ymm1
        let call = self.call;
   10e89:	4a 8b 04 2b          	mov    (%rbx,%r13,1),%rax
   10e8d:	c4 a1 7e 7f 04 2b    	vmovdqu %ymm0,(%rbx,%r13,1)
   10e93:	c5 fc 29 4c 24 60    	vmovaps %ymm1,0x60(%rsp)
            owned_deferred.call();
   10e99:	c5 fc 29 4c 24 40    	vmovaps %ymm1,0x40(%rsp)
        unsafe { call(&mut self.data as *mut Data as *mut u8) };
   10e9f:	48 8d 7c 24 48       	lea    0x48(%rsp),%rdi
   10ea4:	c5 f8 77             	vzeroupper 
   10ea7:	ff d0                	callq  *%rax
   10ea9:	49 83 c5 20          	add    $0x20,%r13
   10ead:	4d 39 ef             	cmp    %r13,%r15
   10eb0:	c5 fc 28 4c 24 60    	vmovaps 0x60(%rsp),%ymm1
   10eb6:	75 b8                	jne    10e70 <_ZN15crossbeam_epoch8internal6Global11try_advance17he434f08b5ff41e43E+0xf0>
   10eb8:	4c 89 e7             	mov    %r12,%rdi
   10ebb:	c5 f8 77             	vzeroupper 
   10ebe:	ff 15 b4 6e 23 00    	callq  *0x236eb4(%rip)        # 247d78 <free@GLIBC_2.2.5>
   10ec4:	4c 8b 7c 24 30       	mov    0x30(%rsp),%r15
   10ec9:	48 8b 5c 24 38       	mov    0x38(%rsp),%rbx
   10ece:	4d 89 f4             	mov    %r14,%r12
        while let Some(c) = unsafe { self.curr.as_ref() } {
   10ed1:	4d 85 f6             	test   %r14,%r14
   10ed4:	0f 85 3d ff ff ff    	jne    10e17 <_ZN15crossbeam_epoch8internal6Global11try_advance17he434f08b5ff41e43E+0x97>
   10eda:	eb 28                	jmp    10f04 <_ZN15crossbeam_epoch8internal6Global11try_advance17he434f08b5ff41e43E+0x184>
   10edc:	0f 1f 40 00          	nopl   0x0(%rax)
   10ee0:	49 8b 4e 08          	mov    0x8(%r14),%rcx
        for local in self.locals.iter(&guard) {
   10ee4:	4c 89 f3             	mov    %r14,%rbx
    }

    /// Returns `true` if the epoch is marked as pinned.
    #[inline]
    pub fn is_pinned(self) -> bool {
        (self.data & 1) == 1
   10ee7:	f6 c1 01             	test   $0x1,%cl
                    if local_epoch.is_pinned() && local_epoch.unpinned() != global_epoch {
   10eea:	0f 84 da fe ff ff    	je     10dca <_ZN15crossbeam_epoch8internal6Global11try_advance17he434f08b5ff41e43E+0x4a>
   10ef0:	48 83 e1 fe          	and    $0xfffffffffffffffe,%rcx
        for local in self.locals.iter(&guard) {
   10ef4:	4c 89 f3             	mov    %r14,%rbx
                    if local_epoch.is_pinned() && local_epoch.unpinned() != global_epoch {
   10ef7:	48 3b 4c 24 18       	cmp    0x18(%rsp),%rcx
   10efc:	0f 84 c8 fe ff ff    	je     10dca <_ZN15crossbeam_epoch8internal6Global11try_advance17he434f08b5ff41e43E+0x4a>
   10f02:	eb 1f                	jmp    10f23 <_ZN15crossbeam_epoch8internal6Global11try_advance17he434f08b5ff41e43E+0x1a3>
   10f04:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   10f09:	48 83 c0 02          	add    $0x2,%rax
   10f0d:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
   10f12:	48 89 81 00 01 00 00 	mov    %rax,0x100(%rcx)
   10f19:	eb 0d                	jmp    10f28 <_ZN15crossbeam_epoch8internal6Global11try_advance17he434f08b5ff41e43E+0x1a8>
   10f1b:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
   10f20:	48 8b 00             	mov    (%rax),%rax
   10f23:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    }
   10f28:	48 8d 65 d8          	lea    -0x28(%rbp),%rsp
   10f2c:	5b                   	pop    %rbx
   10f2d:	41 5c                	pop    %r12
   10f2f:	41 5d                	pop    %r13
   10f31:	41 5e                	pop    %r14
   10f33:	41 5f                	pop    %r15
   10f35:	5d                   	pop    %rbp
   10f36:	c3                   	retq   
   10f37:	be 40 00 00 00       	mov    $0x40,%esi
   10f3c:	4c 89 ff             	mov    %r15,%rdi
   10f3f:	e8 8c 6c ff ff       	callq  7bd0 <_ZN4core5slice20slice_index_len_fail17h52736412c1ce1871E>
   10f44:	0f 0b                	ud2    
   10f46:	eb 00                	jmp    10f48 <_ZN15crossbeam_epoch8internal6Global11try_advance17he434f08b5ff41e43E+0x1c8>
   10f48:	48 89 c3             	mov    %rax,%rbx
   10f4b:	4c 89 e7             	mov    %r12,%rdi
   10f4e:	e8 5d 03 00 00       	callq  112b0 <_ZN5alloc5alloc8box_free17h434babe390d9f9d5E>
   10f53:	48 89 df             	mov    %rbx,%rdi
   10f56:	e8 45 31 ff ff       	callq  40a0 <_Unwind_Resume@plt>
   10f5b:	0f 0b                	ud2    
   10f5d:	0f 1f 00             	nopl   (%rax)

0000000000010f60 <_ZN15crossbeam_epoch8deferred8Deferred3new4call17h8007d1b692d73d14E>:
                    let f: F = ptr::read(raw as *mut F);
   10f60:	48 8b 3f             	mov    (%rdi),%rdi
   10f63:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
   10f67:	ff 25 0b 6e 23 00    	jmpq   *0x236e0b(%rip)        # 247d78 <free@GLIBC_2.2.5>
   10f6d:	0f 1f 00             	nopl   (%rax)

0000000000010f70 <_ZN15crossbeam_epoch8internal5Local5defer17hb03f4139d4e20a39E>:
    pub unsafe fn defer(&self, mut deferred: Deferred, guard: &Guard) {
   10f70:	55                   	push   %rbp
   10f71:	41 57                	push   %r15
   10f73:	41 56                	push   %r14
   10f75:	41 55                	push   %r13
   10f77:	41 54                	push   %r12
   10f79:	53                   	push   %rbx
   10f7a:	b8 78 10 00 00       	mov    $0x1078,%eax
   10f7f:	e8 14 85 02 00       	callq  39498 <__rust_probestack>
   10f84:	48 29 c4             	sub    %rax,%rsp
   10f87:	48 89 fb             	mov    %rdi,%rbx
        let bag = &mut *self.bag.get();
   10f8a:	48 8d 6f 18          	lea    0x18(%rdi),%rbp
        while let Err(d) = bag.try_push(deferred) {
   10f8e:	48 8b 0e             	mov    (%rsi),%rcx
   10f91:	48 8b 46 18          	mov    0x18(%rsi),%rax
   10f95:	48 89 44 24 70       	mov    %rax,0x70(%rsp)
   10f9a:	48 89 34 24          	mov    %rsi,(%rsp)
   10f9e:	c5 f8 10 46 08       	vmovups 0x8(%rsi),%xmm0
   10fa3:	c5 f8 29 44 24 60    	vmovaps %xmm0,0x60(%rsp)
        if self.len < MAX_OBJECTS {
   10fa9:	48 8b 87 18 08 00 00 	mov    0x818(%rdi),%rax
   10fb0:	48 83 f8 40          	cmp    $0x40,%rax
   10fb4:	0f 82 06 02 00 00    	jb     111c0 <_ZN15crossbeam_epoch8internal5Local5defer17hb03f4139d4e20a39E+0x250>
   10fba:	48 8b 04 24          	mov    (%rsp),%rax
   10fbe:	48 83 c0 08          	add    $0x8,%rax
   10fc2:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   10fc7:	4c 8d 7c 24 60       	lea    0x60(%rsp),%r15
   10fcc:	4c 8b 2d fd 6e 23 00 	mov    0x236efd(%rip),%r13        # 247ed0 <memcpy@GLIBC_2.14>
   10fd3:	48 89 4c 24 18       	mov    %rcx,0x18(%rsp)
   10fd8:	48 89 5c 24 08       	mov    %rbx,0x8(%rsp)
   10fdd:	0f 1f 00             	nopl   (%rax)
            Err(deferred)
   10fe0:	48 8b 44 24 70       	mov    0x70(%rsp),%rax
   10fe5:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   10fea:	c5 f8 28 44 24 60    	vmovaps 0x60(%rsp),%xmm0
   10ff0:	c5 f8 29 44 24 20    	vmovaps %xmm0,0x20(%rsp)
   10ff6:	48 85 c9             	test   %rcx,%rcx
        while let Err(d) = bag.try_push(deferred) {
   10ff9:	0f 84 e7 01 00 00    	je     111e6 <_ZN15crossbeam_epoch8internal5Local5defer17hb03f4139d4e20a39E+0x276>
   10fff:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
   11004:	48 89 44 24 50       	mov    %rax,0x50(%rsp)
   11009:	c5 f8 28 44 24 20    	vmovaps 0x20(%rsp),%xmm0
   1100f:	c5 f8 29 44 24 40    	vmovaps %xmm0,0x40(%rsp)
            self.global().push_bag(bag, guard);
   11015:	4c 8b 63 10          	mov    0x10(%rbx),%r12
        Self::default()
   11019:	4c 89 ff             	mov    %r15,%rdi
   1101c:	e8 7f ef ff ff       	callq  ffa0 <_ZN73_$LT$crossbeam_epoch..internal..Bag$u20$as$u20$core..default..Default$GT$7default17h06d0746c5d364cb6E>
   11021:	b8 60 00 00 00       	mov    $0x60,%eax
   11026:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1102d:	00 00 00 
   11030:	c5 fc 10 44 05 a0    	vmovups -0x60(%rbp,%rax,1),%ymm0
   11036:	c5 fc 10 0c 04       	vmovups (%rsp,%rax,1),%ymm1
   1103b:	c5 fc 11 4c 05 a0    	vmovups %ymm1,-0x60(%rbp,%rax,1)
   11041:	c5 fc 11 04 04       	vmovups %ymm0,(%rsp,%rax,1)
   11046:	c5 fc 10 44 05 c0    	vmovups -0x40(%rbp,%rax,1),%ymm0
   1104c:	c5 fc 10 4c 04 20    	vmovups 0x20(%rsp,%rax,1),%ymm1
   11052:	c5 fc 11 4c 05 c0    	vmovups %ymm1,-0x40(%rbp,%rax,1)
   11058:	c5 fc 11 44 04 20    	vmovups %ymm0,0x20(%rsp,%rax,1)
   1105e:	c5 fc 10 44 05 e0    	vmovups -0x20(%rbp,%rax,1),%ymm0
   11064:	c5 fc 10 4c 04 40    	vmovups 0x40(%rsp,%rax,1),%ymm1
   1106a:	c5 fc 11 4c 05 e0    	vmovups %ymm1,-0x20(%rbp,%rax,1)
   11070:	c5 fc 11 44 04 40    	vmovups %ymm0,0x40(%rsp,%rax,1)
   11076:	c5 fc 10 44 05 00    	vmovups 0x0(%rbp,%rax,1),%ymm0
   1107c:	c5 fc 10 4c 04 60    	vmovups 0x60(%rsp,%rax,1),%ymm1
   11082:	c5 fc 11 4c 05 00    	vmovups %ymm1,0x0(%rbp,%rax,1)
   11088:	c5 fc 11 44 04 60    	vmovups %ymm0,0x60(%rsp,%rax,1)
   1108e:	48 8d 88 80 00 00 00 	lea    0x80(%rax),%rcx
   11095:	48 83 c0 40          	add    $0x40,%rax
   11099:	48 3d 09 08 00 00    	cmp    $0x809,%rax
   1109f:	48 89 c8             	mov    %rcx,%rax
   110a2:	72 8c                	jb     11030 <_ZN15crossbeam_epoch8internal5Local5defer17hb03f4139d4e20a39E+0xc0>
   110a4:	48 8b 83 18 08 00 00 	mov    0x818(%rbx),%rax
   110ab:	48 8b 8c 24 60 08 00 	mov    0x860(%rsp),%rcx
   110b2:	00 
   110b3:	48 89 8b 18 08 00 00 	mov    %rcx,0x818(%rbx)
   110ba:	48 89 84 24 60 08 00 	mov    %rax,0x860(%rsp)
   110c1:	00 
   110c2:	ba 08 08 00 00       	mov    $0x808,%edx
   110c7:	48 8d 9c 24 70 08 00 	lea    0x870(%rsp),%rbx
   110ce:	00 
   110cf:	48 89 df             	mov    %rbx,%rdi
   110d2:	4c 89 fe             	mov    %r15,%rsi
   110d5:	c5 f8 77             	vzeroupper 
   110d8:	41 ff d5             	callq  *%r13
   110db:	0f ae f0             	mfence 
   110de:	4d 8b b4 24 80 01 00 	mov    0x180(%r12),%r14
   110e5:	00 
        Self::from(Box::new(value))
   110e6:	ba 08 08 00 00       	mov    $0x808,%edx
   110eb:	4c 89 ff             	mov    %r15,%rdi
   110ee:	48 89 de             	mov    %rbx,%rsi
   110f1:	41 ff d5             	callq  *%r13
   110f4:	bf 18 08 00 00       	mov    $0x818,%edi
   110f9:	ff 15 09 6e 23 00    	callq  *0x236e09(%rip)        # 247f08 <malloc@GLIBC_2.2.5>
   110ff:	48 85 c0             	test   %rax,%rax
   11102:	0f 84 f0 00 00 00    	je     111f8 <_ZN15crossbeam_epoch8internal5Local5defer17hb03f4139d4e20a39E+0x288>
   11108:	48 89 c3             	mov    %rax,%rbx
   1110b:	4c 89 30             	mov    %r14,(%rax)
   1110e:	48 89 c7             	mov    %rax,%rdi
   11111:	48 83 c7 08          	add    $0x8,%rdi
   11115:	ba 08 08 00 00       	mov    $0x808,%edx
   1111a:	4c 89 fe             	mov    %r15,%rsi
   1111d:	41 ff d5             	callq  *%r13
   11120:	48 c7 83 10 08 00 00 	movq   $0x0,0x810(%rbx)
   11127:	00 00 00 00 
   1112b:	eb 10                	jmp    1113d <_ZN15crossbeam_epoch8internal5Local5defer17hb03f4139d4e20a39E+0x1cd>
   1112d:	0f 1f 00             	nopl   (%rax)
   11130:	48 89 c8             	mov    %rcx,%rax
   11133:	f0 49 0f b1 b4 24 00 	lock cmpxchg %rsi,0x100(%r12)
   1113a:	01 00 00 
   1113d:	49 8b 8c 24 00 01 00 	mov    0x100(%r12),%rcx
   11144:	00 
    let raw = (data & !low_bits::<T>()) as *mut T;
   11145:	48 89 ca             	mov    %rcx,%rdx
   11148:	48 83 e2 f8          	and    $0xfffffffffffffff8,%rdx
   1114c:	48 8b b2 10 08 00 00 	mov    0x810(%rdx),%rsi
   11153:	48 83 fe 07          	cmp    $0x7,%rsi
        if unsafe { next.as_ref().is_some() } {
   11157:	77 d7                	ja     11130 <_ZN15crossbeam_epoch8internal5Local5defer17hb03f4139d4e20a39E+0x1c0>
   11159:	31 c0                	xor    %eax,%eax
   1115b:	f0 48 0f b1 9a 10 08 	lock cmpxchg %rbx,0x810(%rdx)
   11162:	00 00 
   11164:	75 d7                	jne    1113d <_ZN15crossbeam_epoch8internal5Local5defer17hb03f4139d4e20a39E+0x1cd>
   11166:	48 89 c8             	mov    %rcx,%rax
   11169:	f0 49 0f b1 9c 24 00 	lock cmpxchg %rbx,0x100(%r12)
   11170:	01 00 00 
   11173:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
   11178:	48 8b 04 24          	mov    (%rsp),%rax
            deferred = d;
   1117c:	48 89 08             	mov    %rcx,(%rax)
   1117f:	48 8b 44 24 50       	mov    0x50(%rsp),%rax
   11184:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
   11189:	48 89 42 10          	mov    %rax,0x10(%rdx)
   1118d:	c5 f8 28 44 24 40    	vmovaps 0x40(%rsp),%xmm0
   11193:	c5 f8 11 02          	vmovups %xmm0,(%rdx)
        while let Err(d) = bag.try_push(deferred) {
   11197:	48 8b 42 10          	mov    0x10(%rdx),%rax
   1119b:	48 89 44 24 70       	mov    %rax,0x70(%rsp)
   111a0:	c5 f8 10 02          	vmovups (%rdx),%xmm0
   111a4:	c5 f8 29 44 24 60    	vmovaps %xmm0,0x60(%rsp)
   111aa:	48 8b 5c 24 08       	mov    0x8(%rsp),%rbx
        if self.len < MAX_OBJECTS {
   111af:	48 8b 83 18 08 00 00 	mov    0x818(%rbx),%rax
   111b6:	48 83 f8 40          	cmp    $0x40,%rax
   111ba:	0f 83 20 fe ff ff    	jae    10fe0 <_ZN15crossbeam_epoch8internal5Local5defer17hb03f4139d4e20a39E+0x70>
            self.deferreds[self.len] = deferred;
   111c0:	48 c1 e0 05          	shl    $0x5,%rax
   111c4:	48 89 4c 05 00       	mov    %rcx,0x0(%rbp,%rax,1)
   111c9:	c5 f8 28 44 24 60    	vmovaps 0x60(%rsp),%xmm0
   111cf:	c5 f8 11 44 05 08    	vmovups %xmm0,0x8(%rbp,%rax,1)
   111d5:	48 8b 4c 24 70       	mov    0x70(%rsp),%rcx
   111da:	48 89 4c 05 18       	mov    %rcx,0x18(%rbp,%rax,1)
            self.len += 1;
   111df:	48 ff 83 18 08 00 00 	incq   0x818(%rbx)
    }
   111e6:	48 81 c4 78 10 00 00 	add    $0x1078,%rsp
   111ed:	5b                   	pop    %rbx
   111ee:	41 5c                	pop    %r12
   111f0:	41 5d                	pop    %r13
   111f2:	41 5e                	pop    %r14
   111f4:	41 5f                	pop    %r15
   111f6:	5d                   	pop    %rbp
   111f7:	c3                   	retq   
   111f8:	bf 18 08 00 00       	mov    $0x818,%edi
   111fd:	be 08 00 00 00       	mov    $0x8,%esi
   11202:	e8 b9 42 ff ff       	callq  54c0 <_ZN5alloc5alloc18handle_alloc_error17hf7bb8682f6c8b1d7E>
   11207:	0f 0b                	ud2    
   11209:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000011210 <_ZN4core3ptr13drop_in_place17h4ad1cdf779f9ef0cE>:
   11210:	55                   	push   %rbp
   11211:	48 89 e5             	mov    %rsp,%rbp
   11214:	41 57                	push   %r15
   11216:	41 56                	push   %r14
   11218:	41 55                	push   %r13
   1121a:	41 54                	push   %r12
   1121c:	53                   	push   %rbx
   1121d:	48 83 e4 e0          	and    $0xffffffffffffffe0,%rsp
   11221:	48 83 ec 60          	sub    $0x60,%rsp
   11225:	48 83 7f 08 00       	cmpq   $0x0,0x8(%rdi)
   1122a:	74 64                	je     11290 <_ZN4core3ptr13drop_in_place17h4ad1cdf779f9ef0cE+0x80>
   1122c:	49 89 fc             	mov    %rdi,%r12
        for deferred in &mut self.deferreds[..self.len] {
   1122f:	4c 8b b7 08 08 00 00 	mov    0x808(%rdi),%r14
   11236:	49 83 fe 41          	cmp    $0x41,%r14
   1123a:	73 63                	jae    1129f <_ZN4core3ptr13drop_in_place17h4ad1cdf779f9ef0cE+0x8f>
   1123c:	49 c1 e6 05          	shl    $0x5,%r14
   11240:	74 4e                	je     11290 <_ZN4core3ptr13drop_in_place17h4ad1cdf779f9ef0cE+0x80>
   11242:	4c 8d 7c 24 28       	lea    0x28(%rsp),%r15
   11247:	31 db                	xor    %ebx,%ebx
   11249:	4c 8d 2d f0 f6 ff ff 	lea    -0x910(%rip),%r13        # 10940 <_ZN15crossbeam_epoch8deferred8Deferred3new4call17h05a0da60be9227f7E>
   11250:	c5 fd 6f 0c 24       	vmovdqa (%rsp),%ymm1
            let owned_deferred = mem::replace(deferred, no_op);
   11255:	c4 c3 f1 22 c5 00    	vpinsrq $0x0,%r13,%xmm1,%xmm0
   1125b:	c4 e3 75 02 c0 0f    	vpblendd $0xf,%ymm0,%ymm1,%ymm0
   11261:	c4 c1 7c 10 4c 1c 08 	vmovups 0x8(%r12,%rbx,1),%ymm1
        let call = self.call;
   11268:	49 8b 44 1c 08       	mov    0x8(%r12,%rbx,1),%rax
   1126d:	c4 c1 7e 7f 44 1c 08 	vmovdqu %ymm0,0x8(%r12,%rbx,1)
   11274:	c5 fc 29 0c 24       	vmovaps %ymm1,(%rsp)
            owned_deferred.call();
   11279:	c5 fc 29 4c 24 20    	vmovaps %ymm1,0x20(%rsp)
        unsafe { call(&mut self.data as *mut Data as *mut u8) };
   1127f:	4c 89 ff             	mov    %r15,%rdi
   11282:	c5 f8 77             	vzeroupper 
   11285:	ff d0                	callq  *%rax
   11287:	48 83 c3 20          	add    $0x20,%rbx
   1128b:	49 39 de             	cmp    %rbx,%r14
   1128e:	75 c0                	jne    11250 <_ZN4core3ptr13drop_in_place17h4ad1cdf779f9ef0cE+0x40>
   11290:	48 8d 65 d8          	lea    -0x28(%rbp),%rsp
   11294:	5b                   	pop    %rbx
   11295:	41 5c                	pop    %r12
   11297:	41 5d                	pop    %r13
   11299:	41 5e                	pop    %r14
   1129b:	41 5f                	pop    %r15
   1129d:	5d                   	pop    %rbp
   1129e:	c3                   	retq   
   1129f:	be 40 00 00 00       	mov    $0x40,%esi
   112a4:	4c 89 f7             	mov    %r14,%rdi
   112a7:	e8 24 69 ff ff       	callq  7bd0 <_ZN4core5slice20slice_index_len_fail17h52736412c1ce1871E>
   112ac:	0f 0b                	ud2    
   112ae:	66 90                	xchg   %ax,%ax

00000000000112b0 <_ZN5alloc5alloc8box_free17h434babe390d9f9d5E>:
   112b0:	ff 25 c2 6a 23 00    	jmpq   *0x236ac2(%rip)        # 247d78 <free@GLIBC_2.2.5>
   112b6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   112bd:	00 00 00 

00000000000112c0 <_ZN15crossbeam_epoch8deferred8Deferred3new4call17haf9b85e224345c98E>:
                unsafe fn call<F: FnOnce()>(raw: *mut u8) {
   112c0:	55                   	push   %rbp
   112c1:	48 89 e5             	mov    %rsp,%rbp
   112c4:	41 57                	push   %r15
   112c6:	41 56                	push   %r14
   112c8:	41 55                	push   %r13
   112ca:	41 54                	push   %r12
   112cc:	53                   	push   %rbx
   112cd:	48 83 e4 e0          	and    $0xffffffffffffffe0,%rsp
   112d1:	48 83 ec 60          	sub    $0x60,%rsp
                    let f: F = ptr::read(raw as *mut F);
   112d5:	4c 8b 27             	mov    (%rdi),%r12
   112d8:	49 83 e4 f8          	and    $0xfffffffffffffff8,%r12
        for deferred in &mut self.deferreds[..self.len] {
   112dc:	4d 8b b4 24 18 08 00 	mov    0x818(%r12),%r14
   112e3:	00 
   112e4:	49 83 fe 41          	cmp    $0x41,%r14
   112e8:	73 71                	jae    1135b <_ZN15crossbeam_epoch8deferred8Deferred3new4call17haf9b85e224345c98E+0x9b>
   112ea:	49 c1 e6 05          	shl    $0x5,%r14
   112ee:	74 50                	je     11340 <_ZN15crossbeam_epoch8deferred8Deferred3new4call17haf9b85e224345c98E+0x80>
   112f0:	4c 8d 7c 24 28       	lea    0x28(%rsp),%r15
   112f5:	31 db                	xor    %ebx,%ebx
   112f7:	4c 8d 2d 42 f6 ff ff 	lea    -0x9be(%rip),%r13        # 10940 <_ZN15crossbeam_epoch8deferred8Deferred3new4call17h05a0da60be9227f7E>
   112fe:	66 90                	xchg   %ax,%ax
            let owned_deferred = mem::replace(deferred, no_op);
   11300:	c4 c3 f1 22 c5 00    	vpinsrq $0x0,%r13,%xmm1,%xmm0
   11306:	c4 e3 75 02 c0 0f    	vpblendd $0xf,%ymm0,%ymm1,%ymm0
   1130c:	c4 c1 7c 10 4c 1c 18 	vmovups 0x18(%r12,%rbx,1),%ymm1
        let call = self.call;
   11313:	49 8b 44 1c 18       	mov    0x18(%r12,%rbx,1),%rax
   11318:	c4 c1 7e 7f 44 1c 18 	vmovdqu %ymm0,0x18(%r12,%rbx,1)
   1131f:	c5 fc 29 0c 24       	vmovaps %ymm1,(%rsp)
            owned_deferred.call();
   11324:	c5 fc 29 4c 24 20    	vmovaps %ymm1,0x20(%rsp)
        unsafe { call(&mut self.data as *mut Data as *mut u8) };
   1132a:	4c 89 ff             	mov    %r15,%rdi
   1132d:	c5 f8 77             	vzeroupper 
   11330:	ff d0                	callq  *%rax
   11332:	48 83 c3 20          	add    $0x20,%rbx
   11336:	49 39 de             	cmp    %rbx,%r14
   11339:	c5 fc 28 0c 24       	vmovaps (%rsp),%ymm1
   1133e:	75 c0                	jne    11300 <_ZN15crossbeam_epoch8deferred8Deferred3new4call17haf9b85e224345c98E+0x40>
   11340:	4c 89 e7             	mov    %r12,%rdi
   11343:	c5 f8 77             	vzeroupper 
   11346:	ff 15 2c 6a 23 00    	callq  *0x236a2c(%rip)        # 247d78 <free@GLIBC_2.2.5>
                }
   1134c:	48 8d 65 d8          	lea    -0x28(%rbp),%rsp
   11350:	5b                   	pop    %rbx
   11351:	41 5c                	pop    %r12
   11353:	41 5d                	pop    %r13
   11355:	41 5e                	pop    %r14
   11357:	41 5f                	pop    %r15
   11359:	5d                   	pop    %rbp
   1135a:	c3                   	retq   
   1135b:	be 40 00 00 00       	mov    $0x40,%esi
   11360:	4c 89 f7             	mov    %r14,%rdi
   11363:	e8 68 68 ff ff       	callq  7bd0 <_ZN4core5slice20slice_index_len_fail17h52736412c1ce1871E>
   11368:	0f 0b                	ud2    
   1136a:	eb 00                	jmp    1136c <_ZN15crossbeam_epoch8deferred8Deferred3new4call17haf9b85e224345c98E+0xac>
   1136c:	49 89 c6             	mov    %rax,%r14
   1136f:	4c 89 e7             	mov    %r12,%rdi
   11372:	e8 39 ff ff ff       	callq  112b0 <_ZN5alloc5alloc8box_free17h434babe390d9f9d5E>
   11377:	4c 89 f7             	mov    %r14,%rdi
   1137a:	e8 21 2d ff ff       	callq  40a0 <_Unwind_Resume@plt>
   1137f:	0f 0b                	ud2    
   11381:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   11388:	00 00 00 
   1138b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000011390 <_ZN15crossbeam_epoch8internal5Local8finalize17hb072c1707f33cb8dE>:
        }
    }

    /// Removes the `Local` from the global linked list.
    #[cold]
    fn finalize(&self) {
   11390:	55                   	push   %rbp
   11391:	41 57                	push   %r15
   11393:	41 56                	push   %r14
   11395:	41 55                	push   %r13
   11397:	41 54                	push   %r12
   11399:	53                   	push   %rbx
   1139a:	b8 18 10 00 00       	mov    $0x1018,%eax
   1139f:	e8 f4 80 02 00       	callq  39498 <__rust_probestack>
   113a4:	48 29 c4             	sub    %rax,%rsp
   113a7:	48 c7 87 28 08 00 00 	movq   $0x1,0x828(%rdi)
   113ae:	01 00 00 00 
        let guard = Guard { local: self };
   113b2:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
        let guard_count = self.guard_count.get();
   113b7:	48 8b 87 20 08 00 00 	mov    0x820(%rdi),%rax
   113be:	48 89 c1             	mov    %rax,%rcx
   113c1:	48 ff c1             	inc    %rcx
   113c4:	0f 84 3a 02 00 00    	je     11604 <_ZN15crossbeam_epoch8internal5Local8finalize17hb072c1707f33cb8dE+0x274>
   113ca:	49 89 ff             	mov    %rdi,%r15
   113cd:	48 89 8f 20 08 00 00 	mov    %rcx,0x820(%rdi)
        if guard_count == 0 {
   113d4:	48 85 c0             	test   %rax,%rax
   113d7:	75 3f                	jne    11418 <_ZN15crossbeam_epoch8internal5Local8finalize17hb072c1707f33cb8dE+0x88>
            let global_epoch = self.global().epoch.load(Ordering::Relaxed);
   113d9:	49 8b 47 10          	mov    0x10(%r15),%rax
   113dd:	48 8b 88 80 01 00 00 	mov    0x180(%rax),%rcx

    /// Returns the same epoch, but marked as pinned.
    #[inline]
    pub fn pinned(self) -> Epoch {
        Epoch {
            data: self.data | 1,
   113e4:	48 83 c9 01          	or     $0x1,%rcx
   113e8:	31 c0                	xor    %eax,%eax
   113ea:	f0 49 0f b1 4f 08    	lock cmpxchg %rcx,0x8(%r15)
            let count = self.pin_count.get();
   113f0:	49 8b 87 30 08 00 00 	mov    0x830(%r15),%rax
   113f7:	48 8d 48 01          	lea    0x1(%rax),%rcx
   113fb:	49 89 8f 30 08 00 00 	mov    %rcx,0x830(%r15)
            if count.0 % Self::PINNINGS_BETWEEN_COLLECT == 0 {
   11402:	a8 7f                	test   $0x7f,%al
   11404:	75 12                	jne    11418 <_ZN15crossbeam_epoch8internal5Local8finalize17hb072c1707f33cb8dE+0x88>
                self.global().collect(&guard);
   11406:	49 8b 7f 10          	mov    0x10(%r15),%rdi
   1140a:	48 83 ef 80          	sub    $0xffffffffffffff80,%rdi
   1140e:	48 8d 74 24 08       	lea    0x8(%rsp),%rsi
   11413:	e8 28 f7 ff ff       	callq  10b40 <_ZN15crossbeam_epoch8internal6Global7collect17h831494d6c7d86e73E>
        guard
   11418:	4c 8b 74 24 08       	mov    0x8(%rsp),%r14
        self.handle_count.set(1);
        unsafe {
            // Pin and move the local bag into the global queue. It's important that `push_bag`
            // doesn't defer destruction on any new garbage.
            let guard = &self.pin();
            self.global().push_bag(&mut *self.bag.get(), guard);
   1141d:	49 8b 5f 10          	mov    0x10(%r15),%rbx
   11421:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
        Self::default()
   11426:	e8 75 eb ff ff       	callq  ffa0 <_ZN73_$LT$crossbeam_epoch..internal..Bag$u20$as$u20$core..default..Default$GT$7default17h06d0746c5d364cb6E>
   1142b:	49 8d 47 18          	lea    0x18(%r15),%rax
   1142f:	b9 60 00 00 00       	mov    $0x60,%ecx
   11434:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1143b:	00 00 00 
   1143e:	66 90                	xchg   %ax,%ax
   11440:	c5 fc 10 44 08 a0    	vmovups -0x60(%rax,%rcx,1),%ymm0
   11446:	c5 fc 10 4c 0c a8    	vmovups -0x58(%rsp,%rcx,1),%ymm1
   1144c:	c5 fc 11 4c 08 a0    	vmovups %ymm1,-0x60(%rax,%rcx,1)
   11452:	c5 fc 11 44 0c a8    	vmovups %ymm0,-0x58(%rsp,%rcx,1)
   11458:	c5 fc 10 44 08 c0    	vmovups -0x40(%rax,%rcx,1),%ymm0
   1145e:	c5 fc 10 4c 0c c8    	vmovups -0x38(%rsp,%rcx,1),%ymm1
   11464:	c5 fc 11 4c 08 c0    	vmovups %ymm1,-0x40(%rax,%rcx,1)
   1146a:	c5 fc 11 44 0c c8    	vmovups %ymm0,-0x38(%rsp,%rcx,1)
   11470:	c5 fc 10 44 08 e0    	vmovups -0x20(%rax,%rcx,1),%ymm0
   11476:	c5 fc 10 4c 0c e8    	vmovups -0x18(%rsp,%rcx,1),%ymm1
   1147c:	c5 fc 11 4c 08 e0    	vmovups %ymm1,-0x20(%rax,%rcx,1)
   11482:	c5 fc 11 44 0c e8    	vmovups %ymm0,-0x18(%rsp,%rcx,1)
   11488:	c5 fc 10 04 08       	vmovups (%rax,%rcx,1),%ymm0
   1148d:	c5 fc 10 4c 0c 08    	vmovups 0x8(%rsp,%rcx,1),%ymm1
   11493:	c5 fc 11 0c 08       	vmovups %ymm1,(%rax,%rcx,1)
   11498:	c5 fc 11 44 0c 08    	vmovups %ymm0,0x8(%rsp,%rcx,1)
   1149e:	48 8d 91 80 00 00 00 	lea    0x80(%rcx),%rdx
   114a5:	48 83 c1 40          	add    $0x40,%rcx
   114a9:	48 81 f9 09 08 00 00 	cmp    $0x809,%rcx
   114b0:	48 89 d1             	mov    %rdx,%rcx
   114b3:	72 8b                	jb     11440 <_ZN15crossbeam_epoch8internal5Local8finalize17hb072c1707f33cb8dE+0xb0>
   114b5:	49 8b 87 18 08 00 00 	mov    0x818(%r15),%rax
   114bc:	48 8b 8c 24 08 08 00 	mov    0x808(%rsp),%rcx
   114c3:	00 
   114c4:	49 89 8f 18 08 00 00 	mov    %rcx,0x818(%r15)
   114cb:	48 89 84 24 08 08 00 	mov    %rax,0x808(%rsp)
   114d2:	00 
   114d3:	4c 8d a4 24 10 08 00 	lea    0x810(%rsp),%r12
   114da:	00 
   114db:	48 8d 74 24 08       	lea    0x8(%rsp),%rsi
   114e0:	48 8b 2d e9 69 23 00 	mov    0x2369e9(%rip),%rbp        # 247ed0 <memcpy@GLIBC_2.14>
   114e7:	ba 08 08 00 00       	mov    $0x808,%edx
   114ec:	4c 89 e7             	mov    %r12,%rdi
   114ef:	c5 f8 77             	vzeroupper 
   114f2:	ff d5                	callq  *%rbp
   114f4:	0f ae f0             	mfence 
   114f7:	4c 8b ab 80 01 00 00 	mov    0x180(%rbx),%r13
   114fe:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
        Self::from(Box::new(value))
   11503:	ba 08 08 00 00       	mov    $0x808,%edx
   11508:	4c 89 e6             	mov    %r12,%rsi
   1150b:	ff d5                	callq  *%rbp
   1150d:	bf 18 08 00 00       	mov    $0x818,%edi
   11512:	ff 15 f0 69 23 00    	callq  *0x2369f0(%rip)        # 247f08 <malloc@GLIBC_2.2.5>
   11518:	48 85 c0             	test   %rax,%rax
   1151b:	0f 84 fd 00 00 00    	je     1161e <_ZN15crossbeam_epoch8internal5Local8finalize17hb072c1707f33cb8dE+0x28e>
   11521:	49 89 c4             	mov    %rax,%r12
   11524:	4c 89 28             	mov    %r13,(%rax)
   11527:	48 89 c7             	mov    %rax,%rdi
   1152a:	48 83 c7 08          	add    $0x8,%rdi
   1152e:	48 8d 74 24 08       	lea    0x8(%rsp),%rsi
   11533:	ba 08 08 00 00       	mov    $0x808,%edx
   11538:	ff 15 92 69 23 00    	callq  *0x236992(%rip)        # 247ed0 <memcpy@GLIBC_2.14>
   1153e:	49 c7 84 24 10 08 00 	movq   $0x0,0x810(%r12)
   11545:	00 00 00 00 00 
   1154a:	eb 10                	jmp    1155c <_ZN15crossbeam_epoch8internal5Local8finalize17hb072c1707f33cb8dE+0x1cc>
   1154c:	0f 1f 40 00          	nopl   0x0(%rax)
   11550:	48 89 c8             	mov    %rcx,%rax
   11553:	f0 48 0f b1 b3 00 01 	lock cmpxchg %rsi,0x100(%rbx)
   1155a:	00 00 
   1155c:	48 8b 8b 00 01 00 00 	mov    0x100(%rbx),%rcx
    let raw = (data & !low_bits::<T>()) as *mut T;
   11563:	48 89 ca             	mov    %rcx,%rdx
   11566:	48 83 e2 f8          	and    $0xfffffffffffffff8,%rdx
   1156a:	48 8b b2 10 08 00 00 	mov    0x810(%rdx),%rsi
   11571:	48 83 fe 07          	cmp    $0x7,%rsi
   11575:	77 d9                	ja     11550 <_ZN15crossbeam_epoch8internal5Local8finalize17hb072c1707f33cb8dE+0x1c0>
   11577:	31 c0                	xor    %eax,%eax
   11579:	f0 4c 0f b1 a2 10 08 	lock cmpxchg %r12,0x810(%rdx)
   11580:	00 00 
   11582:	75 d8                	jne    1155c <_ZN15crossbeam_epoch8internal5Local8finalize17hb072c1707f33cb8dE+0x1cc>
   11584:	48 89 c8             	mov    %rcx,%rax
   11587:	f0 4c 0f b1 a3 00 01 	lock cmpxchg %r12,0x100(%rbx)
   1158e:	00 00 
}

impl Drop for Guard {
    #[inline]
    fn drop(&mut self) {
        if let Some(local) = unsafe { self.local.as_ref() } {
   11590:	4d 85 f6             	test   %r14,%r14
   11593:	74 2a                	je     115bf <_ZN15crossbeam_epoch8internal5Local8finalize17hb072c1707f33cb8dE+0x22f>
        let guard_count = self.guard_count.get();
   11595:	49 8b 86 20 08 00 00 	mov    0x820(%r14),%rax
        self.guard_count.set(guard_count - 1);
   1159c:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
   115a0:	49 89 8e 20 08 00 00 	mov    %rcx,0x820(%r14)
        if guard_count == 1 {
   115a7:	48 83 f8 01          	cmp    $0x1,%rax
   115ab:	75 12                	jne    115bf <_ZN15crossbeam_epoch8internal5Local8finalize17hb072c1707f33cb8dE+0x22f>
   115ad:	49 c7 46 08 00 00 00 	movq   $0x0,0x8(%r14)
   115b4:	00 
            if self.handle_count.get() == 0 {
   115b5:	49 83 be 28 08 00 00 	cmpq   $0x0,0x828(%r14)
   115bc:	00 
   115bd:	74 3b                	je     115fa <_ZN15crossbeam_epoch8internal5Local8finalize17hb072c1707f33cb8dE+0x26a>
   115bf:	49 c7 87 28 08 00 00 	movq   $0x0,0x828(%r15)
   115c6:	00 00 00 00 
   115ca:	49 8b 47 10          	mov    0x10(%r15),%rax
   115ce:	f0 49 83 0f 01       	lock orq $0x1,(%r15)
   115d3:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   115d8:	f0 48 ff 08          	lock decq (%rax)
   115dc:	75 0a                	jne    115e8 <_ZN15crossbeam_epoch8internal5Local8finalize17hb072c1707f33cb8dE+0x258>
   115de:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   115e3:	e8 68 00 00 00       	callq  11650 <_ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17hd358c60921c1ca5dE>
            // Finally, drop the reference to the global. Note that this might be the last reference
            // to the `Global`. If so, the global data will be destroyed and all deferred functions
            // in its queue will be executed.
            drop(collector);
        }
    }
   115e8:	48 81 c4 18 10 00 00 	add    $0x1018,%rsp
   115ef:	5b                   	pop    %rbx
   115f0:	41 5c                	pop    %r12
   115f2:	41 5d                	pop    %r13
   115f4:	41 5e                	pop    %r14
   115f6:	41 5f                	pop    %r15
   115f8:	5d                   	pop    %rbp
   115f9:	c3                   	retq   
                self.finalize();
   115fa:	4c 89 f7             	mov    %r14,%rdi
   115fd:	e8 8e fd ff ff       	callq  11390 <_ZN15crossbeam_epoch8internal5Local8finalize17hb072c1707f33cb8dE>
   11602:	eb bb                	jmp    115bf <_ZN15crossbeam_epoch8internal5Local8finalize17hb072c1707f33cb8dE+0x22f>
   11604:	48 8d 3d 16 bd 02 00 	lea    0x2bd16(%rip),%rdi        # 3d321 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x9c1>
   1160b:	48 8d 15 06 55 23 00 	lea    0x235506(%rip),%rdx        # 246b18 <__init_array_end+0xb08>
   11612:	be 2b 00 00 00       	mov    $0x2b,%esi
   11617:	e8 94 5d ff ff       	callq  73b0 <_ZN4core9panicking5panic17h6861470adfbddef8E>
   1161c:	0f 0b                	ud2    
   1161e:	bf 18 08 00 00       	mov    $0x818,%edi
   11623:	be 08 00 00 00       	mov    $0x8,%esi
   11628:	e8 93 3e ff ff       	callq  54c0 <_ZN5alloc5alloc18handle_alloc_error17hf7bb8682f6c8b1d7E>
   1162d:	0f 0b                	ud2    
   1162f:	48 89 c3             	mov    %rax,%rbx
   11632:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
    }
   11637:	e8 94 3f 00 00       	callq  155d0 <_ZN4core3ptr13drop_in_place17h45b938d697250b2cE>
   1163c:	48 89 df             	mov    %rbx,%rdi
   1163f:	e8 5c 2a ff ff       	callq  40a0 <_Unwind_Resume@plt>
   11644:	0f 0b                	ud2    
   11646:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1164d:	00 00 00 

0000000000011650 <_ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17hd358c60921c1ca5dE>:
   11650:	55                   	push   %rbp
   11651:	48 89 e5             	mov    %rsp,%rbp
   11654:	41 57                	push   %r15
   11656:	41 56                	push   %r14
   11658:	41 55                	push   %r13
   1165a:	41 54                	push   %r12
   1165c:	53                   	push   %rbx
   1165d:	48 83 e4 e0          	and    $0xffffffffffffffe0,%rsp
   11661:	48 81 ec e0 00 00 00 	sub    $0xe0,%rsp
   11668:	48 89 7c 24 18       	mov    %rdi,0x18(%rsp)
   1166d:	48 8b 07             	mov    (%rdi),%rax
   11670:	48 8b 88 00 02 00 00 	mov    0x200(%rax),%rcx
   11677:	48 83 e8 80          	sub    $0xffffffffffffff80,%rax
   1167b:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
            while let Some(c) = curr.as_ref() {
   11680:	48 83 e1 f8          	and    $0xfffffffffffffff8,%rcx
   11684:	0f 84 d0 00 00 00    	je     1175a <_ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17hd358c60921c1ca5dE+0x10a>
   1168a:	4c 8d 6c 24 48       	lea    0x48(%rsp),%r13
   1168f:	4c 8d 3d aa f2 ff ff 	lea    -0xd56(%rip),%r15        # 10940 <_ZN15crossbeam_epoch8deferred8Deferred3new4call17h05a0da60be9227f7E>
   11696:	eb 25                	jmp    116bd <_ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17hd358c60921c1ca5dE+0x6d>
   11698:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1169f:	00 
   116a0:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   116a5:	c5 f8 77             	vzeroupper 
   116a8:	ff 15 ca 66 23 00    	callq  *0x2366ca(%rip)        # 247d78 <free@GLIBC_2.2.5>
   116ae:	48 8b 4c 24 20       	mov    0x20(%rsp),%rcx
   116b3:	48 83 e1 f8          	and    $0xfffffffffffffff8,%rcx
   116b7:	0f 84 9d 00 00 00    	je     1175a <_ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17hd358c60921c1ca5dE+0x10a>
   116bd:	48 8b 11             	mov    (%rcx),%rdx
    let tag = data & low_bits::<T>();
   116c0:	89 d0                	mov    %edx,%eax
   116c2:	83 e0 07             	and    $0x7,%eax
                assert_eq!(succ.tag(), 1);
   116c5:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   116ca:	48 83 f8 01          	cmp    $0x1,%rax
   116ce:	0f 85 b7 00 00 00    	jne    1178b <_ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17hd358c60921c1ca5dE+0x13b>
   116d4:	48 89 54 24 20       	mov    %rdx,0x20(%rsp)
   116d9:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
        for deferred in &mut self.deferreds[..self.len] {
   116de:	48 8b 99 18 08 00 00 	mov    0x818(%rcx),%rbx
   116e5:	48 83 fb 41          	cmp    $0x41,%rbx
   116e9:	0f 83 2a 01 00 00    	jae    11819 <_ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17hd358c60921c1ca5dE+0x1c9>
   116ef:	48 c1 e3 05          	shl    $0x5,%rbx
   116f3:	74 ab                	je     116a0 <_ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17hd358c60921c1ca5dE+0x50>
   116f5:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   116fa:	4c 8d 70 18          	lea    0x18(%rax),%r14
   116fe:	45 31 e4             	xor    %r12d,%r12d
   11701:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   11708:	00 00 00 
   1170b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
            let owned_deferred = mem::replace(deferred, no_op);
   11710:	c4 c3 f1 22 c7 00    	vpinsrq $0x0,%r15,%xmm1,%xmm0
   11716:	c4 e3 75 02 c0 0f    	vpblendd $0xf,%ymm0,%ymm1,%ymm0
   1171c:	c4 81 7c 10 0c 26    	vmovups (%r14,%r12,1),%ymm1
        let call = self.call;
   11722:	4b 8b 04 26          	mov    (%r14,%r12,1),%rax
   11726:	c4 81 7e 7f 04 26    	vmovdqu %ymm0,(%r14,%r12,1)
   1172c:	c5 fc 29 8c 24 a0 00 	vmovaps %ymm1,0xa0(%rsp)
   11733:	00 00 
            owned_deferred.call();
   11735:	c5 fc 29 4c 24 40    	vmovaps %ymm1,0x40(%rsp)
        unsafe { call(&mut self.data as *mut Data as *mut u8) };
   1173b:	4c 89 ef             	mov    %r13,%rdi
   1173e:	c5 f8 77             	vzeroupper 
   11741:	ff d0                	callq  *%rax
   11743:	49 83 c4 20          	add    $0x20,%r12
   11747:	4c 39 e3             	cmp    %r12,%rbx
   1174a:	c5 fc 28 8c 24 a0 00 	vmovaps 0xa0(%rsp),%ymm1
   11751:	00 00 
   11753:	75 bb                	jne    11710 <_ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17hd358c60921c1ca5dE+0xc0>
   11755:	e9 46 ff ff ff       	jmpq   116a0 <_ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17hd358c60921c1ca5dE+0x50>
   1175a:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
   1175f:	e8 fc 02 00 00       	callq  11a60 <_ZN4core3ptr13drop_in_place17hf4f0b07f5d8cadadE>
   11764:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
   11769:	48 8b 01             	mov    (%rcx),%rax
   1176c:	f0 48 ff 48 08       	lock decq 0x8(%rax)
   11771:	75 09                	jne    1177c <_ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17hd358c60921c1ca5dE+0x12c>
   11773:	48 8b 39             	mov    (%rcx),%rdi
   11776:	ff 15 fc 65 23 00    	callq  *0x2365fc(%rip)        # 247d78 <free@GLIBC_2.2.5>
   1177c:	48 8d 65 d8          	lea    -0x28(%rbp),%rsp
   11780:	5b                   	pop    %rbx
   11781:	41 5c                	pop    %r12
   11783:	41 5d                	pop    %r13
   11785:	41 5e                	pop    %r14
   11787:	41 5f                	pop    %r15
   11789:	5d                   	pop    %rbp
   1178a:	c3                   	retq   
   1178b:	48 8d 44 24 28       	lea    0x28(%rsp),%rax
   11790:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   11795:	48 8d 05 44 8f 02 00 	lea    0x28f44(%rip),%rax        # 3a6e0 <_ZN4core7unicode12unicode_data2cc19BITSET_INDEX_CHUNKS17h8a1f39cd536e9344E+0x220>
   1179c:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   117a1:	48 8d 44 24 30       	lea    0x30(%rsp),%rax
   117a6:	48 89 84 24 80 00 00 	mov    %rax,0x80(%rsp)
   117ad:	00 
   117ae:	48 8d 05 9b 00 00 00 	lea    0x9b(%rip),%rax        # 11850 <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h6fb50afae341f287E>
   117b5:	48 89 84 24 88 00 00 	mov    %rax,0x88(%rsp)
   117bc:	00 
   117bd:	48 8d 4c 24 38       	lea    0x38(%rsp),%rcx
   117c2:	48 89 8c 24 90 00 00 	mov    %rcx,0x90(%rsp)
   117c9:	00 
   117ca:	48 89 84 24 98 00 00 	mov    %rax,0x98(%rsp)
   117d1:	00 
   117d2:	48 8d 05 bf 56 23 00 	lea    0x2356bf(%rip),%rax        # 246e98 <__init_array_end+0xe88>
   117d9:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
   117de:	48 c7 44 24 48 03 00 	movq   $0x3,0x48(%rsp)
   117e5:	00 00 
   117e7:	48 c7 44 24 50 00 00 	movq   $0x0,0x50(%rsp)
   117ee:	00 00 
   117f0:	48 8d 84 24 80 00 00 	lea    0x80(%rsp),%rax
   117f7:	00 
   117f8:	48 89 44 24 60       	mov    %rax,0x60(%rsp)
   117fd:	48 c7 44 24 68 02 00 	movq   $0x2,0x68(%rsp)
   11804:	00 00 
   11806:	48 8d 35 c3 4f 23 00 	lea    0x234fc3(%rip),%rsi        # 2467d0 <__init_array_end+0x7c0>
   1180d:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
   11812:	e8 c9 21 01 00       	callq  239e0 <_ZN3std9panicking15begin_panic_fmt17h7fd3ef9bf535b4d1E>
   11817:	eb 0d                	jmp    11826 <_ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17hd358c60921c1ca5dE+0x1d6>
   11819:	be 40 00 00 00       	mov    $0x40,%esi
   1181e:	48 89 df             	mov    %rbx,%rdi
   11821:	e8 aa 63 ff ff       	callq  7bd0 <_ZN4core5slice20slice_index_len_fail17h52736412c1ce1871E>
   11826:	0f 0b                	ud2    
   11828:	eb 05                	jmp    1182f <_ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17hd358c60921c1ca5dE+0x1df>
   1182a:	48 89 c3             	mov    %rax,%rbx
   1182d:	eb 0d                	jmp    1183c <_ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17hd358c60921c1ca5dE+0x1ec>
   1182f:	48 89 c3             	mov    %rax,%rbx
   11832:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   11837:	e8 74 fa ff ff       	callq  112b0 <_ZN5alloc5alloc8box_free17h434babe390d9f9d5E>
   1183c:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
   11841:	e8 1a 02 00 00       	callq  11a60 <_ZN4core3ptr13drop_in_place17hf4f0b07f5d8cadadE>
   11846:	48 89 df             	mov    %rbx,%rdi
   11849:	e8 52 28 ff ff       	callq  40a0 <_Unwind_Resume@plt>
   1184e:	0f 0b                	ud2    

0000000000011850 <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h6fb50afae341f287E>:
   11850:	48 81 ec 88 00 00 00 	sub    $0x88,%rsp
   11857:	49 89 f2             	mov    %rsi,%r10
   1185a:	48 8b 07             	mov    (%rdi),%rax
   1185d:	8b 56 30             	mov    0x30(%rsi),%edx
   11860:	f6 c2 10             	test   $0x10,%dl
   11863:	0f 85 d7 00 00 00    	jne    11940 <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h6fb50afae341f287E+0xf0>
   11869:	48 8b 08             	mov    (%rax),%rcx
   1186c:	f6 c2 20             	test   $0x20,%dl
   1186f:	0f 85 19 01 00 00    	jne    1198e <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h6fb50afae341f287E+0x13e>
   11875:	41 bb 27 00 00 00    	mov    $0x27,%r11d
   1187b:	48 81 f9 10 27 00 00 	cmp    $0x2710,%rcx
   11882:	0f 82 76 01 00 00    	jb     119fe <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h6fb50afae341f287E+0x1ae>
   11888:	41 bb 27 00 00 00    	mov    $0x27,%r11d
   1188e:	49 b8 4b 59 86 38 d6 	movabs $0x346dc5d63886594b,%r8
   11895:	c5 6d 34 
   11898:	4c 8d 0d cb 9d 02 00 	lea    0x29dcb(%rip),%r9        # 3b66a <_ZN4core3str15UTF8_CHAR_WIDTH17h639c7c3d8ce7e983E+0x112>
   1189f:	90                   	nop
   118a0:	48 89 c8             	mov    %rcx,%rax
   118a3:	49 f7 e0             	mul    %r8
   118a6:	48 c1 ea 0b          	shr    $0xb,%rdx
   118aa:	69 c2 10 27 00 00    	imul   $0x2710,%edx,%eax
   118b0:	89 ce                	mov    %ecx,%esi
   118b2:	29 c6                	sub    %eax,%esi
   118b4:	0f b7 c6             	movzwl %si,%eax
   118b7:	c1 e8 02             	shr    $0x2,%eax
   118ba:	69 c0 7b 14 00 00    	imul   $0x147b,%eax,%eax
   118c0:	c1 e8 11             	shr    $0x11,%eax
   118c3:	6b f8 64             	imul   $0x64,%eax,%edi
   118c6:	29 fe                	sub    %edi,%esi
   118c8:	0f b7 f6             	movzwl %si,%esi
   118cb:	41 0f b7 04 41       	movzwl (%r9,%rax,2),%eax
   118d0:	66 42 89 44 1c 04    	mov    %ax,0x4(%rsp,%r11,1)
   118d6:	41 0f b7 04 71       	movzwl (%r9,%rsi,2),%eax
   118db:	66 42 89 44 1c 06    	mov    %ax,0x6(%rsp,%r11,1)
   118e1:	49 83 c3 fc          	add    $0xfffffffffffffffc,%r11
   118e5:	48 81 f9 ff e0 f5 05 	cmp    $0x5f5e0ff,%rcx
   118ec:	48 89 d1             	mov    %rdx,%rcx
   118ef:	77 af                	ja     118a0 <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h6fb50afae341f287E+0x50>
   118f1:	48 83 fa 63          	cmp    $0x63,%rdx
   118f5:	7e 2f                	jle    11926 <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h6fb50afae341f287E+0xd6>
   118f7:	0f b7 c2             	movzwl %dx,%eax
   118fa:	c1 e8 02             	shr    $0x2,%eax
   118fd:	69 c0 7b 14 00 00    	imul   $0x147b,%eax,%eax
   11903:	c1 e8 11             	shr    $0x11,%eax
   11906:	6b c8 64             	imul   $0x64,%eax,%ecx
   11909:	29 ca                	sub    %ecx,%edx
   1190b:	0f b7 ca             	movzwl %dx,%ecx
   1190e:	48 8d 15 55 9d 02 00 	lea    0x29d55(%rip),%rdx        # 3b66a <_ZN4core3str15UTF8_CHAR_WIDTH17h639c7c3d8ce7e983E+0x112>
   11915:	0f b7 0c 4a          	movzwl (%rdx,%rcx,2),%ecx
   11919:	66 42 89 4c 1c 06    	mov    %cx,0x6(%rsp,%r11,1)
   1191f:	49 83 c3 fe          	add    $0xfffffffffffffffe,%r11
   11923:	48 89 c2             	mov    %rax,%rdx
   11926:	48 83 fa 0a          	cmp    $0xa,%rdx
   1192a:	0f 8d e0 00 00 00    	jge    11a10 <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h6fb50afae341f287E+0x1c0>
   11930:	80 c2 30             	add    $0x30,%dl
   11933:	42 88 54 1c 07       	mov    %dl,0x7(%rsp,%r11,1)
   11938:	49 ff cb             	dec    %r11
   1193b:	e9 e5 00 00 00       	jmpq   11a25 <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h6fb50afae341f287E+0x1d5>
   11940:	48 8b 08             	mov    (%rax),%rcx
   11943:	4c 8d 84 24 88 00 00 	lea    0x88(%rsp),%r8
   1194a:	00 
   1194b:	45 31 c9             	xor    %r9d,%r9d
   1194e:	48 89 c8             	mov    %rcx,%rax
   11951:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   11958:	00 00 00 
   1195b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   11960:	48 c1 e8 04          	shr    $0x4,%rax
   11964:	80 e1 0f             	and    $0xf,%cl
   11967:	8d 51 30             	lea    0x30(%rcx),%edx
   1196a:	8d 71 57             	lea    0x57(%rcx),%esi
   1196d:	80 f9 0a             	cmp    $0xa,%cl
   11970:	0f b6 ca             	movzbl %dl,%ecx
   11973:	40 0f b6 d6          	movzbl %sil,%edx
   11977:	0f 42 d1             	cmovb  %ecx,%edx
   1197a:	41 88 50 ff          	mov    %dl,-0x1(%r8)
   1197e:	49 ff c8             	dec    %r8
   11981:	49 ff c1             	inc    %r9
   11984:	48 89 c1             	mov    %rax,%rcx
   11987:	48 85 c0             	test   %rax,%rax
   1198a:	75 d4                	jne    11960 <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h6fb50afae341f287E+0x110>
   1198c:	eb 3e                	jmp    119cc <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h6fb50afae341f287E+0x17c>
   1198e:	4c 8d 84 24 88 00 00 	lea    0x88(%rsp),%r8
   11995:	00 
   11996:	45 31 c9             	xor    %r9d,%r9d
   11999:	48 89 c8             	mov    %rcx,%rax
   1199c:	0f 1f 40 00          	nopl   0x0(%rax)
   119a0:	48 c1 e8 04          	shr    $0x4,%rax
   119a4:	80 e1 0f             	and    $0xf,%cl
   119a7:	8d 51 30             	lea    0x30(%rcx),%edx
   119aa:	8d 71 37             	lea    0x37(%rcx),%esi
   119ad:	80 f9 0a             	cmp    $0xa,%cl
   119b0:	0f b6 ca             	movzbl %dl,%ecx
   119b3:	40 0f b6 d6          	movzbl %sil,%edx
   119b7:	0f 42 d1             	cmovb  %ecx,%edx
   119ba:	41 88 50 ff          	mov    %dl,-0x1(%r8)
   119be:	49 ff c8             	dec    %r8
   119c1:	49 ff c1             	inc    %r9
   119c4:	48 89 c1             	mov    %rax,%rcx
   119c7:	48 85 c0             	test   %rax,%rax
   119ca:	75 d4                	jne    119a0 <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h6fb50afae341f287E+0x150>
   119cc:	bf 80 00 00 00       	mov    $0x80,%edi
   119d1:	4c 29 cf             	sub    %r9,%rdi
   119d4:	48 81 ff 81 00 00 00 	cmp    $0x81,%rdi
   119db:	73 77                	jae    11a54 <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h6fb50afae341f287E+0x204>
   119dd:	48 8d 15 12 b8 02 00 	lea    0x2b812(%rip),%rdx        # 3d1f6 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x896>
   119e4:	b9 02 00 00 00       	mov    $0x2,%ecx
   119e9:	4c 89 d7             	mov    %r10,%rdi
   119ec:	be 01 00 00 00       	mov    $0x1,%esi
   119f1:	e8 fa 5b ff ff       	callq  75f0 <_ZN4core3fmt9Formatter12pad_integral17hc55c32e78eb96054E>
   119f6:	48 81 c4 88 00 00 00 	add    $0x88,%rsp
   119fd:	c3                   	retq   
   119fe:	48 89 ca             	mov    %rcx,%rdx
   11a01:	48 83 fa 63          	cmp    $0x63,%rdx
   11a05:	0f 8f ec fe ff ff    	jg     118f7 <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h6fb50afae341f287E+0xa7>
   11a0b:	e9 16 ff ff ff       	jmpq   11926 <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h6fb50afae341f287E+0xd6>
   11a10:	48 8d 05 53 9c 02 00 	lea    0x29c53(%rip),%rax        # 3b66a <_ZN4core3str15UTF8_CHAR_WIDTH17h639c7c3d8ce7e983E+0x112>
   11a17:	0f b7 04 50          	movzwl (%rax,%rdx,2),%eax
   11a1b:	66 42 89 44 1c 06    	mov    %ax,0x6(%rsp,%r11,1)
   11a21:	49 83 c3 fe          	add    $0xfffffffffffffffe,%r11
   11a25:	4e 8d 04 1c          	lea    (%rsp,%r11,1),%r8
   11a29:	49 83 c0 08          	add    $0x8,%r8
   11a2d:	41 b9 27 00 00 00    	mov    $0x27,%r9d
   11a33:	4d 29 d9             	sub    %r11,%r9
   11a36:	48 8d 15 fb b9 02 00 	lea    0x2b9fb(%rip),%rdx        # 3d438 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0xad8>
   11a3d:	4c 89 d7             	mov    %r10,%rdi
   11a40:	be 01 00 00 00       	mov    $0x1,%esi
   11a45:	31 c9                	xor    %ecx,%ecx
   11a47:	e8 a4 5b ff ff       	callq  75f0 <_ZN4core3fmt9Formatter12pad_integral17hc55c32e78eb96054E>
   11a4c:	48 81 c4 88 00 00 00 	add    $0x88,%rsp
   11a53:	c3                   	retq   
   11a54:	be 80 00 00 00       	mov    $0x80,%esi
   11a59:	e8 f2 61 ff ff       	callq  7c50 <_ZN4core5slice22slice_index_order_fail17h7bcf2f94ba9e06deE>
   11a5e:	0f 0b                	ud2    

0000000000011a60 <_ZN4core3ptr13drop_in_place17hf4f0b07f5d8cadadE>:
   11a60:	55                   	push   %rbp
   11a61:	48 89 e5             	mov    %rsp,%rbp
   11a64:	41 57                	push   %r15
   11a66:	41 56                	push   %r14
   11a68:	41 55                	push   %r13
   11a6a:	41 54                	push   %r12
   11a6c:	53                   	push   %rbx
   11a6d:	48 83 e4 e0          	and    $0xffffffffffffffe0,%rsp
   11a71:	b8 80 10 00 00       	mov    $0x1080,%eax
   11a76:	e8 1d 7a 02 00       	callq  39498 <__rust_probestack>
   11a7b:	48 29 c4             	sub    %rax,%rsp
   11a7e:	49 89 fd             	mov    %rdi,%r13
   11a81:	4c 8d bc 24 68 08 00 	lea    0x868(%rsp),%r15
   11a88:	00 
   11a89:	4c 8d 25 b0 ee ff ff 	lea    -0x1150(%rip),%r12        # 10940 <_ZN15crossbeam_epoch8deferred8Deferred3new4call17h05a0da60be9227f7E>
   11a90:	eb 0e                	jmp    11aa0 <_ZN4core3ptr13drop_in_place17hf4f0b07f5d8cadadE+0x40>
   11a92:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
   11a97:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   11a9e:	00 00 
   11aa0:	49 8b 45 00          	mov    0x0(%r13),%rax
    let raw = (data & !low_bits::<T>()) as *mut T;
   11aa4:	48 89 c7             	mov    %rax,%rdi
   11aa7:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
   11aab:	48 8b 8f 10 08 00 00 	mov    0x810(%rdi),%rcx
            Some(n) => unsafe {
   11ab2:	48 89 cb             	mov    %rcx,%rbx
   11ab5:	48 83 e3 f8          	and    $0xfffffffffffffff8,%rbx
   11ab9:	74 54                	je     11b0f <_ZN4core3ptr13drop_in_place17hf4f0b07f5d8cadadE+0xaf>
   11abb:	f0 49 0f b1 4d 00    	lock cmpxchg %rcx,0x0(%r13)
   11ac1:	75 dd                	jne    11aa0 <_ZN4core3ptr13drop_in_place17hf4f0b07f5d8cadadE+0x40>
   11ac3:	ff 15 af 62 23 00    	callq  *0x2362af(%rip)        # 247d78 <free@GLIBC_2.2.5>
   11ac9:	48 8b 03             	mov    (%rbx),%rax
   11acc:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   11ad1:	48 8b 43 08          	mov    0x8(%rbx),%rax
   11ad5:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   11ada:	48 83 c3 10          	add    $0x10,%rbx
   11ade:	ba 00 08 00 00       	mov    $0x800,%edx
   11ae3:	4c 8d b4 24 60 08 00 	lea    0x860(%rsp),%r14
   11aea:	00 
   11aeb:	4c 89 f7             	mov    %r14,%rdi
   11aee:	48 89 de             	mov    %rbx,%rsi
   11af1:	4c 8b 35 d8 63 23 00 	mov    0x2363d8(%rip),%r14        # 247ed0 <memcpy@GLIBC_2.14>
   11af8:	41 ff d6             	callq  *%r14
   11afb:	48 8d b4 24 60 08 00 	lea    0x860(%rsp),%rsi
   11b02:	00 
   11b03:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
   11b08:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
   11b0d:	eb 14                	jmp    11b23 <_ZN4core3ptr13drop_in_place17hf4f0b07f5d8cadadE+0xc3>
   11b0f:	31 c0                	xor    %eax,%eax
   11b11:	4c 8d b4 24 60 08 00 	lea    0x860(%rsp),%r14
   11b18:	00 
   11b19:	4c 89 f6             	mov    %r14,%rsi
   11b1c:	4c 8b 35 ad 63 23 00 	mov    0x2363ad(%rip),%r14        # 247ed0 <memcpy@GLIBC_2.14>
   11b23:	48 89 54 24 18       	mov    %rdx,0x18(%rsp)
            if let Ok(head) = self.pop_internal(guard) {
   11b28:	48 89 54 24 50       	mov    %rdx,0x50(%rsp)
   11b2d:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
   11b32:	ba 00 08 00 00       	mov    $0x800,%edx
   11b37:	48 8d 7c 24 60       	lea    0x60(%rsp),%rdi
   11b3c:	48 89 c3             	mov    %rax,%rbx
   11b3f:	41 ff d6             	callq  *%r14
impl<T> Drop for Queue<T> {
    fn drop(&mut self) {
        unsafe {
            let guard = &unprotected();

            while let Some(_) = self.try_pop(guard) {}
   11b42:	48 85 db             	test   %rbx,%rbx
   11b45:	74 71                	je     11bb8 <_ZN4core3ptr13drop_in_place17hf4f0b07f5d8cadadE+0x158>
        for deferred in &mut self.deferreds[..self.len] {
   11b47:	4c 8b b4 24 58 08 00 	mov    0x858(%rsp),%r14
   11b4e:	00 
   11b4f:	49 83 fe 41          	cmp    $0x41,%r14
   11b53:	0f 83 7c 00 00 00    	jae    11bd5 <_ZN4core3ptr13drop_in_place17hf4f0b07f5d8cadadE+0x175>
   11b59:	49 c1 e6 05          	shl    $0x5,%r14
   11b5d:	0f 84 2f ff ff ff    	je     11a92 <_ZN4core3ptr13drop_in_place17hf4f0b07f5d8cadadE+0x32>
   11b63:	31 db                	xor    %ebx,%ebx
   11b65:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   11b6c:	00 00 00 
   11b6f:	90                   	nop
   11b70:	c5 fd 6f 4c 24 20    	vmovdqa 0x20(%rsp),%ymm1
            let owned_deferred = mem::replace(deferred, no_op);
   11b76:	c4 c3 f1 22 c4 00    	vpinsrq $0x0,%r12,%xmm1,%xmm0
   11b7c:	c4 e3 75 02 c0 0f    	vpblendd $0xf,%ymm0,%ymm1,%ymm0
   11b82:	c5 fc 10 4c 1c 58    	vmovups 0x58(%rsp,%rbx,1),%ymm1
        let call = self.call;
   11b88:	48 8b 44 1c 58       	mov    0x58(%rsp,%rbx,1),%rax
   11b8d:	c5 fe 7f 44 1c 58    	vmovdqu %ymm0,0x58(%rsp,%rbx,1)
   11b93:	c5 fc 29 4c 24 20    	vmovaps %ymm1,0x20(%rsp)
            owned_deferred.call();
   11b99:	c5 fc 29 8c 24 60 08 	vmovaps %ymm1,0x860(%rsp)
   11ba0:	00 00 
        unsafe { call(&mut self.data as *mut Data as *mut u8) };
   11ba2:	4c 89 ff             	mov    %r15,%rdi
   11ba5:	c5 f8 77             	vzeroupper 
   11ba8:	ff d0                	callq  *%rax
   11baa:	48 83 c3 20          	add    $0x20,%rbx
   11bae:	49 39 de             	cmp    %rbx,%r14
   11bb1:	75 bd                	jne    11b70 <_ZN4core3ptr13drop_in_place17hf4f0b07f5d8cadadE+0x110>
   11bb3:	e9 da fe ff ff       	jmpq   11a92 <_ZN4core3ptr13drop_in_place17hf4f0b07f5d8cadadE+0x32>
   11bb8:	49 8b 7d 00          	mov    0x0(%r13),%rdi
   11bbc:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
   11bc0:	ff 15 b2 61 23 00    	callq  *0x2361b2(%rip)        # 247d78 <free@GLIBC_2.2.5>
   11bc6:	48 8d 65 d8          	lea    -0x28(%rbp),%rsp
   11bca:	5b                   	pop    %rbx
   11bcb:	41 5c                	pop    %r12
   11bcd:	41 5d                	pop    %r13
   11bcf:	41 5e                	pop    %r14
   11bd1:	41 5f                	pop    %r15
   11bd3:	5d                   	pop    %rbp
   11bd4:	c3                   	retq   
   11bd5:	be 40 00 00 00       	mov    $0x40,%esi
   11bda:	4c 89 f7             	mov    %r14,%rdi
   11bdd:	e8 ee 5f ff ff       	callq  7bd0 <_ZN4core5slice20slice_index_len_fail17h52736412c1ce1871E>
   11be2:	0f 0b                	ud2    
   11be4:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   11beb:	00 00 00 
   11bee:	66 90                	xchg   %ax,%ax

0000000000011bf0 <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17hbbf99553f11ae255E>:
   11bf0:	41 56                	push   %r14
   11bf2:	53                   	push   %rbx
   11bf3:	48 81 ec 88 09 00 00 	sub    $0x988,%rsp
   11bfa:	48 8b 0f             	mov    (%rdi),%rcx
   11bfd:	48 8b 01             	mov    (%rcx),%rax
   11c00:	48 c7 01 00 00 00 00 	movq   $0x0,(%rcx)
   11c07:	48 85 c0             	test   %rax,%rax
   11c0a:	0f 84 79 02 00 00    	je     11e89 <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17hbbf99553f11ae255E+0x299>
    pub fn get<F>(&'static self, f: F) -> &T
    where
        F: FnOnce() -> T,
    {
        self.1.call_once(|| {
            self.0.set(Some(f()));
   11c10:	4c 8b 30             	mov    (%rax),%r14
   11c13:	bf 18 08 00 00       	mov    $0x818,%edi
   11c18:	ff 15 ea 62 23 00    	callq  *0x2362ea(%rip)        # 247f08 <malloc@GLIBC_2.2.5>
   11c1e:	48 85 c0             	test   %rax,%rax
   11c21:	0f 84 7c 02 00 00    	je     11ea3 <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17hbbf99553f11ae255E+0x2b3>
   11c27:	48 89 c3             	mov    %rax,%rbx
   11c2a:	48 8d b4 24 78 01 00 	lea    0x178(%rsp),%rsi
   11c31:	00 
   11c32:	ba 10 08 00 00       	mov    $0x810,%edx
   11c37:	48 89 c7             	mov    %rax,%rdi
   11c3a:	ff 15 90 62 23 00    	callq  *0x236290(%rip)        # 247ed0 <memcpy@GLIBC_2.14>
   11c40:	48 c7 83 10 08 00 00 	movq   $0x0,0x810(%rbx)
   11c47:	00 00 00 00 
            q
   11c4b:	c5 fc 10 84 24 78 01 	vmovups 0x178(%rsp),%ymm0
   11c52:	00 00 
   11c54:	c5 fc 10 8c 24 b8 01 	vmovups 0x1b8(%rsp),%ymm1
   11c5b:	00 00 
   11c5d:	c5 fc 10 94 24 d0 01 	vmovups 0x1d0(%rsp),%ymm2
   11c64:	00 00 
   11c66:	c5 fc 11 94 24 d8 00 	vmovups %ymm2,0xd8(%rsp)
   11c6d:	00 00 
   11c6f:	c5 fc 11 8c 24 c0 00 	vmovups %ymm1,0xc0(%rsp)
   11c76:	00 00 
   11c78:	c5 fc 10 8c 24 98 01 	vmovups 0x198(%rsp),%ymm1
   11c7f:	00 00 
   11c81:	c5 fc 11 8c 24 a0 00 	vmovups %ymm1,0xa0(%rsp)
   11c88:	00 00 
   11c8a:	c5 fc 11 84 24 80 00 	vmovups %ymm0,0x80(%rsp)
   11c91:	00 00 
   11c93:	c5 fc 10 84 24 00 01 	vmovups 0x100(%rsp),%ymm0
   11c9a:	00 00 
   11c9c:	c5 fc 10 8c 24 40 01 	vmovups 0x140(%rsp),%ymm1
   11ca3:	00 00 
   11ca5:	c5 fc 10 94 24 58 01 	vmovups 0x158(%rsp),%ymm2
   11cac:	00 00 
   11cae:	c5 fc 11 54 24 58    	vmovups %ymm2,0x58(%rsp)
   11cb4:	c5 fc 11 4c 24 40    	vmovups %ymm1,0x40(%rsp)
   11cba:	c5 fc 10 8c 24 20 01 	vmovups 0x120(%rsp),%ymm1
   11cc1:	00 00 
   11cc3:	c5 fc 11 4c 24 20    	vmovups %ymm1,0x20(%rsp)
   11cc9:	c5 fc 11 04 24       	vmovups %ymm0,(%rsp)
   11cce:	48 c7 84 24 78 01 00 	movq   $0x0,0x178(%rsp)
   11cd5:	00 00 00 00 00 
   11cda:	48 8d bc 24 78 01 00 	lea    0x178(%rsp),%rdi
   11ce1:	00 
   11ce2:	be 80 00 00 00       	mov    $0x80,%esi
   11ce7:	ba 80 02 00 00       	mov    $0x280,%edx
   11cec:	c5 f8 77             	vzeroupper 
   11cef:	ff 15 ab 62 23 00    	callq  *0x2362ab(%rip)        # 247fa0 <posix_memalign@GLIBC_2.2.5>
   11cf5:	48 8b 8c 24 78 01 00 	mov    0x178(%rsp),%rcx
   11cfc:	00 
   11cfd:	48 85 c9             	test   %rcx,%rcx
   11d00:	0f 84 72 01 00 00    	je     11e78 <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17hbbf99553f11ae255E+0x288>
   11d06:	85 c0                	test   %eax,%eax
   11d08:	0f 85 6a 01 00 00    	jne    11e78 <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17hbbf99553f11ae255E+0x288>
   11d0e:	c5 f8 28 05 ba 86 02 	vmovaps 0x286ba(%rip),%xmm0        # 3a3d0 <_fini+0x8c>
   11d15:	00 
   11d16:	c5 f8 29 01          	vmovaps %xmm0,(%rcx)
   11d1a:	48 89 99 80 00 00 00 	mov    %rbx,0x80(%rcx)
   11d21:	c5 fc 10 84 24 80 00 	vmovups 0x80(%rsp),%ymm0
   11d28:	00 00 
   11d2a:	c5 fc 10 8c 24 a0 00 	vmovups 0xa0(%rsp),%ymm1
   11d31:	00 00 
   11d33:	c5 fc 10 94 24 c0 00 	vmovups 0xc0(%rsp),%ymm2
   11d3a:	00 00 
   11d3c:	c5 fc 10 9c 24 d8 00 	vmovups 0xd8(%rsp),%ymm3
   11d43:	00 00 
   11d45:	c5 fc 11 81 88 00 00 	vmovups %ymm0,0x88(%rcx)
   11d4c:	00 
   11d4d:	c5 fc 11 89 a8 00 00 	vmovups %ymm1,0xa8(%rcx)
   11d54:	00 
   11d55:	c5 fc 11 91 c8 00 00 	vmovups %ymm2,0xc8(%rcx)
   11d5c:	00 
   11d5d:	c5 fc 11 99 e0 00 00 	vmovups %ymm3,0xe0(%rcx)
   11d64:	00 
   11d65:	48 89 99 00 01 00 00 	mov    %rbx,0x100(%rcx)
   11d6c:	c5 fc 10 04 24       	vmovups (%rsp),%ymm0
   11d71:	c5 fc 10 4c 24 20    	vmovups 0x20(%rsp),%ymm1
   11d77:	c5 fc 10 54 24 40    	vmovups 0x40(%rsp),%ymm2
   11d7d:	c5 fc 10 5c 24 58    	vmovups 0x58(%rsp),%ymm3
   11d83:	c5 fc 11 81 08 01 00 	vmovups %ymm0,0x108(%rcx)
   11d8a:	00 
   11d8b:	c5 fc 11 89 28 01 00 	vmovups %ymm1,0x128(%rcx)
   11d92:	00 
   11d93:	c5 fc 11 91 48 01 00 	vmovups %ymm2,0x148(%rcx)
   11d9a:	00 
   11d9b:	c5 fc 11 99 60 01 00 	vmovups %ymm3,0x160(%rcx)
   11da2:	00 
   11da3:	48 c7 81 80 01 00 00 	movq   $0x0,0x180(%rcx)
   11daa:	00 00 00 00 
   11dae:	c5 fc 10 84 24 78 01 	vmovups 0x178(%rsp),%ymm0
   11db5:	00 00 
   11db7:	c5 fc 10 8c 24 98 01 	vmovups 0x198(%rsp),%ymm1
   11dbe:	00 00 
   11dc0:	c5 fc 10 94 24 b8 01 	vmovups 0x1b8(%rsp),%ymm2
   11dc7:	00 00 
   11dc9:	c5 fc 10 9c 24 d0 01 	vmovups 0x1d0(%rsp),%ymm3
   11dd0:	00 00 
   11dd2:	c5 fc 11 81 88 01 00 	vmovups %ymm0,0x188(%rcx)
   11dd9:	00 
   11dda:	c5 fc 11 89 a8 01 00 	vmovups %ymm1,0x1a8(%rcx)
   11de1:	00 
   11de2:	c5 fc 11 91 c8 01 00 	vmovups %ymm2,0x1c8(%rcx)
   11de9:	00 
   11dea:	c5 fc 11 99 e0 01 00 	vmovups %ymm3,0x1e0(%rcx)
   11df1:	00 
   11df2:	48 c7 81 00 02 00 00 	movq   $0x0,0x200(%rcx)
   11df9:	00 00 00 00 
   11dfd:	c5 fc 10 84 24 00 01 	vmovups 0x100(%rsp),%ymm0
   11e04:	00 00 
   11e06:	c5 fc 10 8c 24 20 01 	vmovups 0x120(%rsp),%ymm1
   11e0d:	00 00 
   11e0f:	c5 fc 10 94 24 40 01 	vmovups 0x140(%rsp),%ymm2
   11e16:	00 00 
   11e18:	c5 fc 10 9c 24 58 01 	vmovups 0x158(%rsp),%ymm3
   11e1f:	00 00 
   11e21:	c5 fc 11 99 60 02 00 	vmovups %ymm3,0x260(%rcx)
   11e28:	00 
   11e29:	c5 fc 11 91 48 02 00 	vmovups %ymm2,0x248(%rcx)
   11e30:	00 
   11e31:	c5 fc 11 89 28 02 00 	vmovups %ymm1,0x228(%rcx)
   11e38:	00 
   11e39:	c5 fc 11 81 08 02 00 	vmovups %ymm0,0x208(%rcx)
   11e40:	00 
   11e41:	49 8b 06             	mov    (%r14),%rax
   11e44:	49 89 0e             	mov    %rcx,(%r14)
   11e47:	48 89 84 24 78 01 00 	mov    %rax,0x178(%rsp)
   11e4e:	00 
   11e4f:	48 85 c0             	test   %rax,%rax
   11e52:	74 16                	je     11e6a <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17hbbf99553f11ae255E+0x27a>
   11e54:	f0 48 ff 08          	lock decq (%rax)
   11e58:	75 10                	jne    11e6a <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17hbbf99553f11ae255E+0x27a>
   11e5a:	48 8d bc 24 78 01 00 	lea    0x178(%rsp),%rdi
   11e61:	00 
   11e62:	c5 f8 77             	vzeroupper 
   11e65:	e8 e6 f7 ff ff       	callq  11650 <_ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17hd358c60921c1ca5dE>
   11e6a:	48 81 c4 88 09 00 00 	add    $0x988,%rsp
   11e71:	5b                   	pop    %rbx
   11e72:	41 5e                	pop    %r14
   11e74:	c5 f8 77             	vzeroupper 
   11e77:	c3                   	retq   
   11e78:	bf 80 02 00 00       	mov    $0x280,%edi
   11e7d:	be 80 00 00 00       	mov    $0x80,%esi
   11e82:	e8 39 36 ff ff       	callq  54c0 <_ZN5alloc5alloc18handle_alloc_error17hf7bb8682f6c8b1d7E>
   11e87:	0f 0b                	ud2    
   11e89:	48 8d 3d 91 b4 02 00 	lea    0x2b491(%rip),%rdi        # 3d321 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x9c1>
   11e90:	48 8d 15 19 4e 23 00 	lea    0x234e19(%rip),%rdx        # 246cb0 <__init_array_end+0xca0>
   11e97:	be 2b 00 00 00       	mov    $0x2b,%esi
   11e9c:	e8 0f 55 ff ff       	callq  73b0 <_ZN4core9panicking5panic17h6861470adfbddef8E>
   11ea1:	0f 0b                	ud2    
   11ea3:	bf 18 08 00 00       	mov    $0x818,%edi
   11ea8:	be 08 00 00 00       	mov    $0x8,%esi
   11ead:	e8 0e 36 ff ff       	callq  54c0 <_ZN5alloc5alloc18handle_alloc_error17hf7bb8682f6c8b1d7E>
   11eb2:	0f 0b                	ud2    
   11eb4:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   11ebb:	00 00 00 
   11ebe:	66 90                	xchg   %ax,%ax

0000000000011ec0 <_ZN4core3ops8function6FnOnce40call_once$u7b$$u7b$vtable.shim$u7d$$u7d$17h693b81e72a8e603bE>:
   11ec0:	50                   	push   %rax
   11ec1:	48 8b 07             	mov    (%rdi),%rax
   11ec4:	48 89 04 24          	mov    %rax,(%rsp)
   11ec8:	48 89 e7             	mov    %rsp,%rdi
   11ecb:	e8 20 fd ff ff       	callq  11bf0 <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17hbbf99553f11ae255E>
   11ed0:	58                   	pop    %rax
   11ed1:	c3                   	retq   
   11ed2:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   11ed9:	00 00 00 
   11edc:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000011ee0 <_ZN3std6thread5local4fast12Key$LT$T$GT$14try_initialize17hf8b754cf35e0a20aE>:
   11ee0:	41 56                	push   %r14
   11ee2:	53                   	push   %rbx
   11ee3:	b8 18 10 00 00       	mov    $0x1018,%eax
   11ee8:	e8 ab 75 02 00       	callq  39498 <__rust_probestack>
   11eed:	48 29 c4             	sub    %rax,%rsp
   11ef0:	64 8a 04 25 f0 fe ff 	mov    %fs:0xfffffffffffffef0,%al
   11ef7:	ff 
   11ef8:	84 c0                	test   %al,%al
   11efa:	74 11                	je     11f0d <_ZN3std6thread5local4fast12Key$LT$T$GT$14try_initialize17hf8b754cf35e0a20aE+0x2d>
   11efc:	3c 01                	cmp    $0x1,%al
   11efe:	74 62                	je     11f62 <_ZN3std6thread5local4fast12Key$LT$T$GT$14try_initialize17hf8b754cf35e0a20aE+0x82>
   11f00:	31 c0                	xor    %eax,%eax
   11f02:	48 81 c4 18 10 00 00 	add    $0x1018,%rsp
   11f09:	5b                   	pop    %rbx
   11f0a:	41 5e                	pop    %r14
   11f0c:	c3                   	retq   
   11f0d:	48 83 3d cb 5e 23 00 	cmpq   $0x0,0x235ecb(%rip)        # 247de0 <__cxa_thread_atexit_impl@GLIBC_2.18>
   11f14:	00 
   11f15:	74 26                	je     11f3d <_ZN3std6thread5local4fast12Key$LT$T$GT$14try_initialize17hf8b754cf35e0a20aE+0x5d>
   11f17:	64 48 8b 04 25 00 00 	mov    %fs:0x0,%rax
   11f1e:	00 00 
   11f20:	48 8d b0 e0 fe ff ff 	lea    -0x120(%rax),%rsi
   11f27:	48 8d 3d c2 01 00 00 	lea    0x1c2(%rip),%rdi        # 120f0 <_ZN3std6thread5local4fast13destroy_value17hfa15348d2f6b806cE>
   11f2e:	48 8d 15 e3 60 23 00 	lea    0x2360e3(%rip),%rdx        # 248018 <_rust_extern_with_linkage___dso_handle>
   11f35:	ff 15 a5 5e 23 00    	callq  *0x235ea5(%rip)        # 247de0 <__cxa_thread_atexit_impl@GLIBC_2.18>
   11f3b:	eb 1c                	jmp    11f59 <_ZN3std6thread5local4fast12Key$LT$T$GT$14try_initialize17hf8b754cf35e0a20aE+0x79>
   11f3d:	64 48 8b 04 25 00 00 	mov    %fs:0x0,%rax
   11f44:	00 00 
   11f46:	48 8d b8 e0 fe ff ff 	lea    -0x120(%rax),%rdi
   11f4d:	48 8d 35 9c 01 00 00 	lea    0x19c(%rip),%rsi        # 120f0 <_ZN3std6thread5local4fast13destroy_value17hfa15348d2f6b806cE>
   11f54:	e8 e7 55 01 00       	callq  27540 <_ZN3std10sys_common12thread_local22register_dtor_fallback17h1a2314bd3431add0E>
   11f59:	64 c6 04 25 f0 fe ff 	movb   $0x1,%fs:0xfffffffffffffef0
   11f60:	ff 01 
   11f62:	48 8d 05 f7 60 23 00 	lea    0x2360f7(%rip),%rax        # 248060 <_ZN79_$LT$crossbeam_epoch..default..COLLECTOR$u20$as$u20$core..ops..deref..Deref$GT$5deref11__stability4LAZY17h2c7e93b6d170d00fE>
   11f69:	48 89 04 24          	mov    %rax,(%rsp)
   11f6d:	48 8b 05 f4 60 23 00 	mov    0x2360f4(%rip),%rax        # 248068 <_ZN79_$LT$crossbeam_epoch..default..COLLECTOR$u20$as$u20$core..ops..deref..Deref$GT$5deref11__stability4LAZY17h2c7e93b6d170d00fE+0x8>
   11f74:	48 83 f8 03          	cmp    $0x3,%rax
   11f78:	0f 85 11 01 00 00    	jne    1208f <_ZN3std6thread5local4fast12Key$LT$T$GT$14try_initialize17hf8b754cf35e0a20aE+0x1af>
        });

        // `self.0` is guaranteed to be `Some` by this point
        // The `Once` will catch and propagate panics
        unsafe {
            match *self.0.as_ptr() {
   11f7e:	48 8b 04 24          	mov    (%rsp),%rax
        }
    }

    /// Registers a new handle for the collector.
    pub fn register(&self) -> LocalHandle {
        Local::register(self)
   11f82:	4c 8b 30             	mov    (%rax),%r14
   11f85:	f0 49 ff 06          	lock incq (%r14)
   11f89:	0f 8e 41 01 00 00    	jle    120d0 <_ZN3std6thread5local4fast12Key$LT$T$GT$14try_initialize17hf8b754cf35e0a20aE+0x1f0>
   11f8f:	48 8d 9c 24 10 08 00 	lea    0x810(%rsp),%rbx
   11f96:	00 
        Self::default()
   11f97:	48 89 df             	mov    %rbx,%rdi
   11f9a:	e8 01 e0 ff ff       	callq  ffa0 <_ZN73_$LT$crossbeam_epoch..internal..Bag$u20$as$u20$core..default..Default$GT$7default17h06d0746c5d364cb6E>
   11f9f:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
        Self::from(Box::new(value))
   11fa4:	ba 08 08 00 00       	mov    $0x808,%edx
   11fa9:	48 89 de             	mov    %rbx,%rsi
   11fac:	ff 15 1e 5f 23 00    	callq  *0x235f1e(%rip)        # 247ed0 <memcpy@GLIBC_2.14>
   11fb2:	bf 38 08 00 00       	mov    $0x838,%edi
   11fb7:	ff 15 4b 5f 23 00    	callq  *0x235f4b(%rip)        # 247f08 <malloc@GLIBC_2.2.5>
   11fbd:	48 85 c0             	test   %rax,%rax
   11fc0:	0f 84 15 01 00 00    	je     120db <_ZN3std6thread5local4fast12Key$LT$T$GT$14try_initialize17hf8b754cf35e0a20aE+0x1fb>
   11fc6:	48 89 c3             	mov    %rax,%rbx
   11fc9:	c5 f8 57 c0          	vxorps %xmm0,%xmm0,%xmm0
   11fcd:	c5 f8 11 00          	vmovups %xmm0,(%rax)
   11fd1:	4c 89 70 10          	mov    %r14,0x10(%rax)
   11fd5:	48 8d 78 18          	lea    0x18(%rax),%rdi
   11fd9:	48 8d 74 24 08       	lea    0x8(%rsp),%rsi
   11fde:	ba 08 08 00 00       	mov    $0x808,%edx
   11fe3:	ff 15 e7 5e 23 00    	callq  *0x235ee7(%rip)        # 247ed0 <memcpy@GLIBC_2.14>
   11fe9:	c5 f8 28 05 1f 84 02 	vmovaps 0x2841f(%rip),%xmm0        # 3a410 <_fini+0xcc>
   11ff0:	00 
   11ff1:	c5 f8 11 83 20 08 00 	vmovups %xmm0,0x820(%rbx)
   11ff8:	00 
   11ff9:	48 c7 83 30 08 00 00 	movq   $0x0,0x830(%rbx)
   12000:	00 00 00 00 
    let raw = (data & !low_bits::<T>()) as *mut T;
   12004:	48 83 e3 f8          	and    $0xfffffffffffffff8,%rbx
   12008:	49 8b 86 00 02 00 00 	mov    0x200(%r14),%rax
   1200f:	90                   	nop
   12010:	48 89 03             	mov    %rax,(%rbx)
   12013:	f0 49 0f b1 9e 00 02 	lock cmpxchg %rbx,0x200(%r14)
   1201a:	00 00 
   1201c:	75 f2                	jne    12010 <_ZN3std6thread5local4fast12Key$LT$T$GT$14try_initialize17hf8b754cf35e0a20aE+0x130>
   1201e:	64 48 8b 04 25 00 00 	mov    %fs:0x0,%rax
   12025:	00 00 
   12027:	64 48 8b 3c 25 e8 fe 	mov    %fs:0xfffffffffffffee8,%rdi
   1202e:	ff ff 
   12030:	64 48 83 3c 25 e0 fe 	cmpq   $0x0,%fs:0xfffffffffffffee0
   12037:	ff ff 00 
   1203a:	64 48 c7 04 25 e0 fe 	movq   $0x1,%fs:0xfffffffffffffee0
   12041:	ff ff 01 00 00 00 
   12047:	64 48 89 1c 25 e8 fe 	mov    %rbx,%fs:0xfffffffffffffee8
   1204e:	ff ff 
   12050:	74 2b                	je     1207d <_ZN3std6thread5local4fast12Key$LT$T$GT$14try_initialize17hf8b754cf35e0a20aE+0x19d>
        let handle_count = self.handle_count.get();
   12052:	48 8b 87 28 08 00 00 	mov    0x828(%rdi),%rax
        self.handle_count.set(handle_count - 1);
   12059:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
   1205d:	48 89 8f 28 08 00 00 	mov    %rcx,0x828(%rdi)
        if guard_count == 0 && handle_count == 1 {
   12064:	48 83 bf 20 08 00 00 	cmpq   $0x0,0x820(%rdi)
   1206b:	00 
   1206c:	75 06                	jne    12074 <_ZN3std6thread5local4fast12Key$LT$T$GT$14try_initialize17hf8b754cf35e0a20aE+0x194>
   1206e:	48 83 f8 01          	cmp    $0x1,%rax
   12072:	74 60                	je     120d4 <_ZN3std6thread5local4fast12Key$LT$T$GT$14try_initialize17hf8b754cf35e0a20aE+0x1f4>
   12074:	64 48 8b 04 25 00 00 	mov    %fs:0x0,%rax
   1207b:	00 00 
   1207d:	48 8d 80 e8 fe ff ff 	lea    -0x118(%rax),%rax
   12084:	48 81 c4 18 10 00 00 	add    $0x1018,%rsp
   1208b:	5b                   	pop    %rbx
   1208c:	41 5e                	pop    %r14
   1208e:	c3                   	retq   
   1208f:	48 89 e0             	mov    %rsp,%rax
   12092:	48 89 84 24 10 08 00 	mov    %rax,0x810(%rsp)
   12099:	00 
   1209a:	48 8d 84 24 10 08 00 	lea    0x810(%rsp),%rax
   120a1:	00 
   120a2:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   120a7:	48 8d 3d ba 5f 23 00 	lea    0x235fba(%rip),%rdi        # 248068 <_ZN79_$LT$crossbeam_epoch..default..COLLECTOR$u20$as$u20$core..ops..deref..Deref$GT$5deref11__stability4LAZY17h2c7e93b6d170d00fE+0x8>
   120ae:	48 8d 15 33 47 23 00 	lea    0x234733(%rip),%rdx        # 2467e8 <__init_array_end+0x7d8>
   120b5:	48 8d 74 24 08       	lea    0x8(%rsp),%rsi
   120ba:	e8 d1 91 01 00       	callq  2b290 <_ZN3std4sync4once4Once10call_inner17hfabbd1bc15485aefE>
   120bf:	48 8b 04 24          	mov    (%rsp),%rax
   120c3:	4c 8b 30             	mov    (%rax),%r14
   120c6:	f0 49 ff 06          	lock incq (%r14)
   120ca:	0f 8f bf fe ff ff    	jg     11f8f <_ZN3std6thread5local4fast12Key$LT$T$GT$14try_initialize17hf8b754cf35e0a20aE+0xaf>
   120d0:	0f 0b                	ud2    
   120d2:	0f 0b                	ud2    
            self.finalize();
   120d4:	e8 b7 f2 ff ff       	callq  11390 <_ZN15crossbeam_epoch8internal5Local8finalize17hb072c1707f33cb8dE>
   120d9:	eb 99                	jmp    12074 <_ZN3std6thread5local4fast12Key$LT$T$GT$14try_initialize17hf8b754cf35e0a20aE+0x194>
   120db:	bf 38 08 00 00       	mov    $0x838,%edi
   120e0:	be 08 00 00 00       	mov    $0x8,%esi
   120e5:	e8 d6 33 ff ff       	callq  54c0 <_ZN5alloc5alloc18handle_alloc_error17hf7bb8682f6c8b1d7E>
   120ea:	0f 0b                	ud2    
   120ec:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000120f0 <_ZN3std6thread5local4fast13destroy_value17hfa15348d2f6b806cE>:
   120f0:	48 89 f8             	mov    %rdi,%rax
   120f3:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
   120f7:	48 83 38 00          	cmpq   $0x0,(%rax)
   120fb:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   12102:	c6 40 10 02          	movb   $0x2,0x10(%rax)
   12106:	74 27                	je     1212f <_ZN3std6thread5local4fast13destroy_value17hfa15348d2f6b806cE+0x3f>
        let handle_count = self.handle_count.get();
   12108:	48 8b 87 28 08 00 00 	mov    0x828(%rdi),%rax
        self.handle_count.set(handle_count - 1);
   1210f:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
   12113:	48 89 8f 28 08 00 00 	mov    %rcx,0x828(%rdi)
        if guard_count == 0 && handle_count == 1 {
   1211a:	48 83 bf 20 08 00 00 	cmpq   $0x0,0x820(%rdi)
   12121:	00 
   12122:	75 0b                	jne    1212f <_ZN3std6thread5local4fast13destroy_value17hfa15348d2f6b806cE+0x3f>
   12124:	48 83 f8 01          	cmp    $0x1,%rax
   12128:	75 05                	jne    1212f <_ZN3std6thread5local4fast13destroy_value17hfa15348d2f6b806cE+0x3f>
            self.finalize();
   1212a:	e9 61 f2 ff ff       	jmpq   11390 <_ZN15crossbeam_epoch8internal5Local8finalize17hb072c1707f33cb8dE>
   1212f:	c3                   	retq   

0000000000012130 <_ZN13num_perf_demo8mul_test17h9955734a3be41a12E>:
    }

    return sum;
}

pub fn mul_test(n: usize) -> (f64, f64) {
   12130:	55                   	push   %rbp
   12131:	48 89 e5             	mov    %rsp,%rbp
   12134:	41 57                	push   %r15
   12136:	41 56                	push   %r14
   12138:	41 55                	push   %r13
   1213a:	41 54                	push   %r12
   1213c:	53                   	push   %rbx
   1213d:	48 83 e4 e0          	and    $0xffffffffffffffe0,%rsp
   12141:	48 81 ec e0 03 00 00 	sub    $0x3e0,%rsp
   12148:	49 89 fd             	mov    %rdi,%r13
   1214b:	48 8d bc 24 40 01 00 	lea    0x140(%rsp),%rdi
   12152:	00 
   12153:	c5 fb 10 05 55 85 02 	vmovsd 0x28555(%rip),%xmm0        # 3a6b0 <_ZN4core7unicode12unicode_data2cc19BITSET_INDEX_CHUNKS17h8a1f39cd536e9344E+0x1f0>
   1215a:	00 

    // Make data.
    let A: Vec<f64> = make_mat_with_data(n, 1.0);
   1215b:	4c 89 ee             	mov    %r13,%rsi
   1215e:	e8 7d 0e 00 00       	callq  12fe0 <_ZN13num_perf_demo18make_mat_with_data17hbaffe87874e429bcE>
   12163:	48 8d bc 24 58 01 00 	lea    0x158(%rsp),%rdi
   1216a:	00 
   1216b:	c5 fa 7e 05 45 85 02 	vmovq  0x28545(%rip),%xmm0        # 3a6b8 <_ZN4core7unicode12unicode_data2cc19BITSET_INDEX_CHUNKS17h8a1f39cd536e9344E+0x1f8>
   12172:	00 
    let B: Vec<f64> = make_mat_with_data(n, 3.0);
   12173:	4c 89 ee             	mov    %r13,%rsi
   12176:	e8 65 0e 00 00       	callq  12fe0 <_ZN13num_perf_demo18make_mat_with_data17hbaffe87874e429bcE>
   1217b:	c5 f9 ef c0          	vpxor  %xmm0,%xmm0,%xmm0
   1217f:	c5 f9 7f 84 24 90 00 	vmovdqa %xmm0,0x90(%rsp)
   12186:	00 00 
   12188:	48 8d b4 24 90 00 00 	lea    0x90(%rsp),%rsi
   1218f:	00 
   12190:	bf 01 00 00 00       	mov    $0x1,%edi
   12195:	ff 15 75 5d 23 00    	callq  *0x235d75(%rip)        # 247f10 <clock_gettime@GLIBC_2.2.5>
   1219b:	83 f8 ff             	cmp    $0xffffffff,%eax
   1219e:	0f 84 e7 0b 00 00    	je     12d8b <_ZN13num_perf_demo8mul_test17h9955734a3be41a12E+0xc5b>
   121a4:	c5 f8 28 84 24 90 00 	vmovaps 0x90(%rsp),%xmm0
   121ab:	00 00 
   121ad:	c5 f8 29 84 24 70 01 	vmovaps %xmm0,0x170(%rsp)
   121b4:	00 00 

    let timer = Instant::now();

    // Array multiplication.
    let C: Vec<f64> = mat_mul(n, A, B);
   121b6:	48 8b 84 24 50 01 00 	mov    0x150(%rsp),%rax
   121bd:	00 
   121be:	48 89 84 24 10 01 00 	mov    %rax,0x110(%rsp)
   121c5:	00 
   121c6:	c5 f8 10 84 24 40 01 	vmovups 0x140(%rsp),%xmm0
   121cd:	00 00 
   121cf:	c5 f8 29 84 24 00 01 	vmovaps %xmm0,0x100(%rsp)
   121d6:	00 00 
   121d8:	48 8b 84 24 68 01 00 	mov    0x168(%rsp),%rax
   121df:	00 
   121e0:	48 89 84 24 30 01 00 	mov    %rax,0x130(%rsp)
   121e7:	00 
   121e8:	c5 fa 6f 84 24 58 01 	vmovdqu 0x158(%rsp),%xmm0
   121ef:	00 00 
   121f1:	c5 f9 7f 84 24 20 01 	vmovdqa %xmm0,0x120(%rsp)
   121f8:	00 00 
   121fa:	48 c7 84 24 e8 00 00 	movq   $0x8,0xe8(%rsp)
   12201:	00 08 00 00 00 
   12206:	c5 f9 ef c0          	vpxor  %xmm0,%xmm0,%xmm0
   1220a:	c5 fa 7f 84 24 f0 00 	vmovdqu %xmm0,0xf0(%rsp)
   12211:	00 00 
   12213:	4c 89 ac 24 c8 00 00 	mov    %r13,0xc8(%rsp)
   1221a:	00 
    len: usize,
}

impl<'c, T: Send + 'c> Collect<'c, T> {
    fn new(vec: &'c mut Vec<T>, len: usize) -> Self {
        Collect {
   1221b:	48 c7 44 24 50 00 00 	movq   $0x0,0x50(%rsp)
   12222:	00 00 
   12224:	48 8d 84 24 e8 00 00 	lea    0xe8(%rsp),%rax
   1222b:	00 
   1222c:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
   12231:	4c 89 6c 24 60       	mov    %r13,0x60(%rsp)
    pi.drive_unindexed(collect.as_consumer());
   12236:	48 c7 84 24 90 00 00 	movq   $0x0,0x90(%rsp)
   1223d:	00 00 00 00 00 
   12242:	4c 89 ac 24 98 00 00 	mov    %r13,0x98(%rsp)
   12249:	00 
   1224a:	48 8d 84 24 c8 00 00 	lea    0xc8(%rsp),%rax
   12251:	00 
   12252:	48 89 84 24 a0 00 00 	mov    %rax,0xa0(%rsp)
   12259:	00 
   1225a:	48 8d 84 24 20 01 00 	lea    0x120(%rsp),%rax
   12261:	00 
   12262:	48 89 84 24 a8 00 00 	mov    %rax,0xa8(%rsp)
   12269:	00 
   1226a:	4d 85 ed             	test   %r13,%r13
   1226d:	74 57                	je     122c6 <_ZN13num_perf_demo8mul_test17h9955734a3be41a12E+0x196>
   1226f:	b9 18 00 00 00       	mov    $0x18,%ecx
   12274:	31 db                	xor    %ebx,%ebx
   12276:	4c 89 e8             	mov    %r13,%rax
   12279:	48 f7 e1             	mul    %rcx
   1227c:	49 89 c7             	mov    %rax,%r15
   1227f:	0f 91 c0             	setno  %al
   12282:	0f 80 66 0c 00 00    	jo     12eee <_ZN13num_perf_demo8mul_test17h9955734a3be41a12E+0xdbe>
   12288:	88 c3                	mov    %al,%bl
   1228a:	48 c1 e3 03          	shl    $0x3,%rbx
   1228e:	4c 39 fb             	cmp    %r15,%rbx
   12291:	76 3b                	jbe    122ce <_ZN13num_perf_demo8mul_test17h9955734a3be41a12E+0x19e>
   12293:	48 c7 44 24 20 00 00 	movq   $0x0,0x20(%rsp)
   1229a:	00 00 
   1229c:	48 8d 7c 24 20       	lea    0x20(%rsp),%rdi
   122a1:	be 08 00 00 00       	mov    $0x8,%esi
   122a6:	4c 89 fa             	mov    %r15,%rdx
   122a9:	ff 15 f1 5c 23 00    	callq  *0x235cf1(%rip)        # 247fa0 <posix_memalign@GLIBC_2.2.5>
   122af:	85 c0                	test   %eax,%eax
   122b1:	0f 85 2a 0c 00 00    	jne    12ee1 <_ZN13num_perf_demo8mul_test17h9955734a3be41a12E+0xdb1>
   122b7:	4c 8b 64 24 20       	mov    0x20(%rsp),%r12
   122bc:	4d 85 e4             	test   %r12,%r12
   122bf:	75 22                	jne    122e3 <_ZN13num_perf_demo8mul_test17h9955734a3be41a12E+0x1b3>
   122c1:	e9 1b 0c 00 00       	jmpq   12ee1 <_ZN13num_perf_demo8mul_test17h9955734a3be41a12E+0xdb1>
   122c6:	41 bc 08 00 00 00    	mov    $0x8,%r12d
   122cc:	eb 25                	jmp    122f3 <_ZN13num_perf_demo8mul_test17h9955734a3be41a12E+0x1c3>
   122ce:	4c 89 ff             	mov    %r15,%rdi
   122d1:	ff 15 31 5c 23 00    	callq  *0x235c31(%rip)        # 247f08 <malloc@GLIBC_2.2.5>
   122d7:	49 89 c4             	mov    %rax,%r12
   122da:	4d 85 e4             	test   %r12,%r12
   122dd:	0f 84 fe 0b 00 00    	je     12ee1 <_ZN13num_perf_demo8mul_test17h9955734a3be41a12E+0xdb1>
   122e3:	4c 89 a4 24 e8 00 00 	mov    %r12,0xe8(%rsp)
   122ea:	00 
   122eb:	4c 89 ac 24 f0 00 00 	mov    %r13,0xf0(%rsp)
   122f2:	00 
    fn drive_unindexed<C>(self, consumer: C) -> C::Result
    where
        C: UnindexedConsumer<Self::Item>,
    {
        let consumer1 = MapConsumer::new(consumer, &self.map_op);
        self.base.drive_unindexed(consumer1)
   122f3:	c5 f9 6f 84 24 90 00 	vmovdqa 0x90(%rsp),%xmm0
   122fa:	00 00 
            {
                bridge(self, consumer)
            }

            fn len(&self) -> usize {
                self.range.len()
   122fc:	c4 c3 f9 16 c6 01    	vpextrq $0x1,%xmm0,%r14
   12302:	c4 c1 f9 7e c7       	vmovq  %xmm0,%r15
   12307:	31 db                	xor    %ebx,%ebx
   12309:	4c 89 f0             	mov    %r14,%rax
   1230c:	4c 29 f8             	sub    %r15,%rax
   1230f:	48 0f 43 d8          	cmovae %rax,%rbx
   12313:	64 48 83 3c 25 00 ff 	cmpq   $0x1,%fs:0xffffffffffffff00
   1231a:	ff ff 01 
   1231d:	75 16                	jne    12335 <_ZN13num_perf_demo8mul_test17h9955734a3be41a12E+0x205>
   1231f:	64 48 8b 04 25 08 ff 	mov    %fs:0xffffffffffffff08,%rax
   12326:	ff ff 
   12328:	48 85 c0             	test   %rax,%rax
    /// is better than `Registry::current().num_threads()` because it
    /// avoids incrementing the `Arc`.
    pub(super) fn current_num_threads() -> usize {
        unsafe {
            let worker_thread = WorkerThread::current();
            if worker_thread.is_null() {
   1232b:	74 1c                	je     12349 <_ZN13num_perf_demo8mul_test17h9955734a3be41a12E+0x219>
                global_registry().num_threads()
            } else {
                (*worker_thread).registry.num_threads()
   1232d:	48 05 30 01 00 00    	add    $0x130,%rax
   12333:	eb 19                	jmp    1234e <_ZN13num_perf_demo8mul_test17h9955734a3be41a12E+0x21e>
   12335:	b8 01 00 00 00       	mov    $0x1,%eax
   1233a:	c4 e1 f9 6e c0       	vmovq  %rax,%xmm0
   1233f:	64 c5 f9 7f 04 25 00 	vmovdqa %xmm0,%fs:0xffffffffffffff00
   12346:	ff ff ff 
                global_registry().num_threads()
   12349:	e8 42 84 00 00       	callq  1a790 <_ZN10rayon_core8registry15global_registry17h06f27f4bfc0c217dE>
   1234e:	48 8d 8c 24 a0 00 00 	lea    0xa0(%rsp),%rcx
   12355:	00 
   12356:	48 8b 00             	mov    (%rax),%rax
   12359:	48 8b 90 90 01 00 00 	mov    0x190(%rax),%rdx

        // Divide the given length by the max working length to get the minimum
        // number of splits we need to get under that max.  This rounds down,
        // but the splitter actually gives `next_power_of_two()` pieces anyway.
        // e.g. len 12345 / max 100 = 123 min_splits -> 128 pieces.
        let min_splits = len / cmp::max(max, 1);
   12360:	31 c0                	xor    %eax,%eax
   12362:	48 83 fb ff          	cmp    $0xffffffffffffffff,%rbx
   12366:	0f 94 c0             	sete   %al

        // Only update the value if it's not splitting enough already.
        if min_splits > splitter.inner.splits {
   12369:	48 39 c2             	cmp    %rax,%rdx
   1236c:	48 0f 42 d0          	cmovb  %rax,%rdx
   12370:	48 8d 44 24 50       	lea    0x50(%rsp),%rax
   12375:	48 89 84 24 b0 00 00 	mov    %rax,0xb0(%rsp)
   1237c:	00 
where
    P: Producer,
    C: Consumer<P::Item>,
{
    let splitter = LengthSplitter::new(producer.min_len(), producer.max_len(), len);
    return helper(len, false, splitter, producer, consumer);
   1237d:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   12382:	4c 89 64 24 28       	mov    %r12,0x28(%rsp)
   12387:	4c 89 6c 24 30       	mov    %r13,0x30(%rsp)
   1238c:	48 89 4c 24 38       	mov    %rcx,0x38(%rsp)
   12391:	48 8d 44 24 20       	lea    0x20(%rsp),%rax
   12396:	48 89 04 24          	mov    %rax,(%rsp)
   1239a:	b9 01 00 00 00       	mov    $0x1,%ecx
   1239f:	48 89 df             	mov    %rbx,%rdi
   123a2:	31 f6                	xor    %esi,%esi
   123a4:	4d 89 f8             	mov    %r15,%r8
   123a7:	4d 89 f1             	mov    %r14,%r9
   123aa:	e8 41 0e 00 00       	callq  131f0 <_ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17h8086494bb7307e60E>
    collect.complete();
   123af:	48 8b 44 24 60       	mov    0x60(%rsp),%rax
   123b4:	48 89 84 24 80 00 00 	mov    %rax,0x80(%rsp)
   123bb:	00 
   123bc:	c5 fa 6f 44 24 50    	vmovdqu 0x50(%rsp),%xmm0
   123c2:	c5 f9 7f 44 24 70    	vmovdqa %xmm0,0x70(%rsp)
   123c8:	48 8b 44 24 70       	mov    0x70(%rsp),%rax
            // total writes occurred. Since we know that the consumer
            // cannot have escaped from `drive` (by parametricity,
            // essentially), we know that any stores that will happen,
            // have happened. Unless some code is buggy, that means we
            // should have seen `len` total writes.
            let actual_writes = self.writes.load(Ordering::Relaxed);
   123cd:	48 89 84 24 38 01 00 	mov    %rax,0x138(%rsp)
   123d4:	00 
            assert!(
                actual_writes == self.len,
   123d5:	48 3b 84 24 80 00 00 	cmp    0x80(%rsp),%rax
   123dc:	00 
            assert!(
   123dd:	0f 85 f4 09 00 00    	jne    12dd7 <_ZN13num_perf_demo8mul_test17h9955734a3be41a12E+0xca7>
                "expected {} total writes, but got {}",
                self.len,
                actual_writes
            );
            let new_len = self.vec.len() + self.len;
   123e3:	48 8b 4c 24 78       	mov    0x78(%rsp),%rcx
   123e8:	48 01 41 10          	add    %rax,0x10(%rcx)
    I: IntoParallelIterator,
    C: ParallelExtend<I::Item> + Default,
{
    let mut collection = C::default();
    collection.par_extend(par_iter);
    collection
   123ec:	c5 fa 6f 84 24 e8 00 	vmovdqu 0xe8(%rsp),%xmm0
   123f3:	00 00 
   123f5:	c5 f9 7f 44 24 50    	vmovdqa %xmm0,0x50(%rsp)
   123fb:	48 8b 84 24 f8 00 00 	mov    0xf8(%rsp),%rax
   12402:	00 
   12403:	48 89 44 24 60       	mov    %rax,0x60(%rsp)
    let mut C = make_mat_empty(n);
   12408:	4c 8b b4 24 c8 00 00 	mov    0xc8(%rsp),%r14
   1240f:	00 
    let mut v: Vec<f64> = Vec::with_capacity(n * n);
   12410:	4d 89 f7             	mov    %r14,%r15
   12413:	4d 0f af fe          	imul   %r14,%r15
   12417:	41 bc 08 00 00 00    	mov    $0x8,%r12d
   1241d:	4c 89 f8             	mov    %r15,%rax
   12420:	49 f7 e4             	mul    %r12
   12423:	0f 80 2f 0a 00 00    	jo     12e58 <_ZN13num_perf_demo8mul_test17h9955734a3be41a12E+0xd28>
   12429:	48 89 c3             	mov    %rax,%rbx
   1242c:	48 85 c0             	test   %rax,%rax
   1242f:	74 15                	je     12446 <_ZN13num_perf_demo8mul_test17h9955734a3be41a12E+0x316>
   12431:	48 89 df             	mov    %rbx,%rdi
   12434:	ff 15 ce 5a 23 00    	callq  *0x235ace(%rip)        # 247f08 <malloc@GLIBC_2.2.5>
   1243a:	48 85 c0             	test   %rax,%rax
   1243d:	0f 84 b5 0a 00 00    	je     12ef8 <_ZN13num_perf_demo8mul_test17h9955734a3be41a12E+0xdc8>
   12443:	49 89 c4             	mov    %rax,%r12
    v
   12446:	4c 89 64 24 70       	mov    %r12,0x70(%rsp)
   1244b:	4c 89 7c 24 78       	mov    %r15,0x78(%rsp)
   12450:	4c 89 bc 24 80 00 00 	mov    %r15,0x80(%rsp)
   12457:	00 
    /// array.par_chunks_mut(2)
    ///      .for_each(|slice| slice.reverse());
    /// assert_eq!(array, [2, 1, 4, 3, 5]);
    /// ```
    fn par_chunks_mut(&mut self, chunk_size: usize) -> ChunksMut<'_, T> {
        assert!(chunk_size != 0, "chunk_size must not be zero");
   12458:	4d 85 f6             	test   %r14,%r14
   1245b:	0f 84 01 0a 00 00    	je     12e62 <_ZN13num_perf_demo8mul_test17h9955734a3be41a12E+0xd32>
        .for_each(|(j, c)| {
   12461:	48 8d 44 24 50       	lea    0x50(%rsp),%rax
   12466:	48 89 84 24 90 00 00 	mov    %rax,0x90(%rsp)
   1246d:	00 
   1246e:	48 8d 84 24 c8 00 00 	lea    0xc8(%rsp),%rax
   12475:	00 
   12476:	48 89 84 24 98 00 00 	mov    %rax,0x98(%rsp)
   1247d:	00 
   1247e:	48 8d 84 24 00 01 00 	lea    0x100(%rsp),%rax
   12485:	00 
   12486:	48 89 84 24 a0 00 00 	mov    %rax,0xa0(%rsp)
   1248d:	00 
/// Divide `n` by `divisor`, and round up to the nearest integer
/// if not evenly divisable.
#[inline]
pub(super) fn div_round_up(n: usize, divisor: usize) -> usize {
    debug_assert!(divisor != 0, "Division by zero!");
    if n == 0 {
   1248e:	4d 85 ff             	test   %r15,%r15
   12491:	74 29                	je     124bc <_ZN13num_perf_demo8mul_test17h9955734a3be41a12E+0x38c>
        0
    } else {
        (n - 1) / divisor + 1
   12493:	49 8d 47 ff          	lea    -0x1(%r15),%rax
   12497:	48 89 c1             	mov    %rax,%rcx
   1249a:	4c 09 f1             	or     %r14,%rcx
   1249d:	48 c1 e9 20          	shr    $0x20,%rcx
   124a1:	74 3d                	je     124e0 <_ZN13num_perf_demo8mul_test17h9955734a3be41a12E+0x3b0>
   124a3:	31 d2                	xor    %edx,%edx
   124a5:	49 f7 f6             	div    %r14
   124a8:	48 89 c3             	mov    %rax,%rbx
   124ab:	48 ff c3             	inc    %rbx
   124ae:	64 48 83 3c 25 00 ff 	cmpq   $0x1,%fs:0xffffffffffffff00
   124b5:	ff ff 01 
   124b8:	75 10                	jne    124ca <_ZN13num_perf_demo8mul_test17h9955734a3be41a12E+0x39a>
   124ba:	eb 3a                	jmp    124f6 <_ZN13num_perf_demo8mul_test17h9955734a3be41a12E+0x3c6>
   124bc:	31 db                	xor    %ebx,%ebx
   124be:	64 48 83 3c 25 00 ff 	cmpq   $0x1,%fs:0xffffffffffffff00
   124c5:	ff ff 01 
   124c8:	74 2c                	je     124f6 <_ZN13num_perf_demo8mul_test17h9955734a3be41a12E+0x3c6>
   124ca:	b8 01 00 00 00       	mov    $0x1,%eax
   124cf:	c4 e1 f9 6e c0       	vmovq  %rax,%xmm0
   124d4:	64 c5 f9 7f 04 25 00 	vmovdqa %xmm0,%fs:0xffffffffffffff00
   124db:	ff ff ff 
   124de:	eb 2c                	jmp    1250c <_ZN13num_perf_demo8mul_test17h9955734a3be41a12E+0x3dc>
   124e0:	31 d2                	xor    %edx,%edx
   124e2:	41 f7 f6             	div    %r14d
   124e5:	89 c3                	mov    %eax,%ebx
   124e7:	48 ff c3             	inc    %rbx
   124ea:	64 48 83 3c 25 00 ff 	cmpq   $0x1,%fs:0xffffffffffffff00
   124f1:	ff ff 01 
   124f4:	75 d4                	jne    124ca <_ZN13num_perf_demo8mul_test17h9955734a3be41a12E+0x39a>
   124f6:	64 48 8b 04 25 08 ff 	mov    %fs:0xffffffffffffff08,%rax
   124fd:	ff ff 
   124ff:	48 85 c0             	test   %rax,%rax
            if worker_thread.is_null() {
   12502:	74 08                	je     1250c <_ZN13num_perf_demo8mul_test17h9955734a3be41a12E+0x3dc>
                (*worker_thread).registry.num_threads()
   12504:	48 05 30 01 00 00    	add    $0x130,%rax
   1250a:	eb 05                	jmp    12511 <_ZN13num_perf_demo8mul_test17h9955734a3be41a12E+0x3e1>
                global_registry().num_threads()
   1250c:	e8 7f 82 00 00       	callq  1a790 <_ZN10rayon_core8registry15global_registry17h06f27f4bfc0c217dE>
   12511:	48 8b 00             	mov    (%rax),%rax
   12514:	48 8b 90 90 01 00 00 	mov    0x190(%rax),%rdx
   1251b:	4c 89 74 24 20       	mov    %r14,0x20(%rsp)
   12520:	4c 89 64 24 28       	mov    %r12,0x28(%rsp)
   12525:	4c 89 7c 24 30       	mov    %r15,0x30(%rsp)
   1252a:	48 c7 44 24 38 00 00 	movq   $0x0,0x38(%rsp)
   12531:	00 00 
   12533:	4c 8d 44 24 20       	lea    0x20(%rsp),%r8
   12538:	4c 8d 8c 24 90 00 00 	lea    0x90(%rsp),%r9
   1253f:	00 
   12540:	b9 01 00 00 00       	mov    $0x1,%ecx
   12545:	48 89 df             	mov    %rbx,%rdi
   12548:	be 00 00 00 00       	mov    $0x0,%esi
   1254d:	e8 ae 10 00 00       	callq  13600 <_ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17h265c7cdb70ee0755E>
    return C;
   12552:	c5 f8 10 44 24 70    	vmovups 0x70(%rsp),%xmm0
   12558:	c5 f8 29 84 24 90 00 	vmovaps %xmm0,0x90(%rsp)
   1255f:	00 00 
   12561:	48 8b 84 24 80 00 00 	mov    0x80(%rsp),%rax
   12568:	00 
   12569:	48 89 84 24 a0 00 00 	mov    %rax,0xa0(%rsp)
   12570:	00 
   12571:	48 8b 44 24 60       	mov    0x60(%rsp),%rax
   12576:	48 85 c0             	test   %rax,%rax
   12579:	74 46                	je     125c1 <_ZN13num_perf_demo8mul_test17h9955734a3be41a12E+0x491>
   1257b:	4c 8b 64 24 50       	mov    0x50(%rsp),%r12
   12580:	48 c1 e0 03          	shl    $0x3,%rax
   12584:	4c 8d 3c 40          	lea    (%rax,%rax,2),%r15
   12588:	31 db                	xor    %ebx,%ebx
   1258a:	4c 8b 35 e7 57 23 00 	mov    0x2357e7(%rip),%r14        # 247d78 <free@GLIBC_2.2.5>
   12591:	49 83 7c 1c 08 00    	cmpq   $0x0,0x8(%r12,%rbx,1)
   12597:	75 18                	jne    125b1 <_ZN13num_perf_demo8mul_test17h9955734a3be41a12E+0x481>
   12599:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   125a0:	48 83 c3 18          	add    $0x18,%rbx
   125a4:	49 39 df             	cmp    %rbx,%r15
   125a7:	74 18                	je     125c1 <_ZN13num_perf_demo8mul_test17h9955734a3be41a12E+0x491>
   125a9:	49 83 7c 1c 08 00    	cmpq   $0x0,0x8(%r12,%rbx,1)
   125af:	74 ef                	je     125a0 <_ZN13num_perf_demo8mul_test17h9955734a3be41a12E+0x470>
   125b1:	49 8b 3c 1c          	mov    (%r12,%rbx,1),%rdi
   125b5:	41 ff d6             	callq  *%r14
   125b8:	48 83 c3 18          	add    $0x18,%rbx
   125bc:	49 39 df             	cmp    %rbx,%r15
   125bf:	75 e8                	jne    125a9 <_ZN13num_perf_demo8mul_test17h9955734a3be41a12E+0x479>
   125c1:	48 83 7c 24 58 00    	cmpq   $0x0,0x58(%rsp)
   125c7:	74 0b                	je     125d4 <_ZN13num_perf_demo8mul_test17h9955734a3be41a12E+0x4a4>
   125c9:	48 8b 7c 24 50       	mov    0x50(%rsp),%rdi
   125ce:	ff 15 a4 57 23 00    	callq  *0x2357a4(%rip)        # 247d78 <free@GLIBC_2.2.5>
   125d4:	48 83 bc 24 28 01 00 	cmpq   $0x0,0x128(%rsp)
   125db:	00 00 
   125dd:	74 0e                	je     125ed <_ZN13num_perf_demo8mul_test17h9955734a3be41a12E+0x4bd>
   125df:	48 8b bc 24 20 01 00 	mov    0x120(%rsp),%rdi
   125e6:	00 
   125e7:	ff 15 8b 57 23 00    	callq  *0x23578b(%rip)        # 247d78 <free@GLIBC_2.2.5>
   125ed:	48 83 bc 24 08 01 00 	cmpq   $0x0,0x108(%rsp)
   125f4:	00 00 
   125f6:	74 0e                	je     12606 <_ZN13num_perf_demo8mul_test17h9955734a3be41a12E+0x4d6>
   125f8:	48 8b bc 24 00 01 00 	mov    0x100(%rsp),%rdi
   125ff:	00 
   12600:	ff 15 72 57 23 00    	callq  *0x235772(%rip)        # 247d78 <free@GLIBC_2.2.5>

    // Sum elements.
    let sum = mat_elem_sum(n, C) / ((n * n) as f64);
   12606:	48 8b 84 24 a0 00 00 	mov    0xa0(%rsp),%rax
   1260d:	00 
   1260e:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   12613:	c5 f9 28 84 24 90 00 	vmovapd 0x90(%rsp),%xmm0
   1261a:	00 00 
   1261c:	c5 f9 29 44 24 20    	vmovapd %xmm0,0x20(%rsp)
   12622:	4d 85 ed             	test   %r13,%r13
   12625:	0f 84 f9 02 00 00    	je     12924 <_ZN13num_perf_demo8mul_test17h9955734a3be41a12E+0x7f4>
   1262b:	4c 8b 54 24 20       	mov    0x20(%rsp),%r10
   12630:	48 8b 74 24 30       	mov    0x30(%rsp),%rsi
   12635:	4c 89 e8             	mov    %r13,%rax
   12638:	48 83 e8 04          	sub    $0x4,%rax
   1263c:	48 89 84 24 e0 00 00 	mov    %rax,0xe0(%rsp)
   12643:	00 
   12644:	4c 89 94 24 b0 00 00 	mov    %r10,0xb0(%rsp)
   1264b:	00 
   1264c:	0f 83 db 02 00 00    	jae    1292d <_ZN13num_perf_demo8mul_test17h9955734a3be41a12E+0x7fd>
   12652:	49 8d 7d 04          	lea    0x4(%r13),%rdi
   12656:	49 8d 45 ff          	lea    -0x1(%r13),%rax
   1265a:	48 89 84 24 d0 00 00 	mov    %rax,0xd0(%rsp)
   12661:	00 
   12662:	45 89 ec             	mov    %r13d,%r12d
   12665:	41 83 e4 07          	and    $0x7,%r12d
   12669:	4d 89 eb             	mov    %r13,%r11
   1266c:	4d 29 e3             	sub    %r12,%r11
   1266f:	49 8d 52 38          	lea    0x38(%r10),%rdx
   12673:	4e 8d 3c ed 00 00 00 	lea    0x0(,%r13,8),%r15
   1267a:	00 
   1267b:	45 89 ee             	mov    %r13d,%r14d
   1267e:	41 f7 de             	neg    %r14d
   12681:	b8 04 00 00 00       	mov    $0x4,%eax
   12686:	44 29 e8             	sub    %r13d,%eax
   12689:	89 44 24 1c          	mov    %eax,0x1c(%rsp)
   1268d:	c5 f9 57 c0          	vxorpd %xmm0,%xmm0,%xmm0
   12691:	45 31 c9             	xor    %r9d,%r9d
   12694:	c5 f1 ef c9          	vpxor  %xmm1,%xmm1,%xmm1
   12698:	c5 d1 57 ed          	vxorpd %xmm5,%xmm5,%xmm5
   1269c:	eb 3e                	jmp    126dc <_ZN13num_perf_demo8mul_test17h9955734a3be41a12E+0x5ac>
   1269e:	66 90                	xchg   %ax,%ax
   126a0:	49 ff c1             	inc    %r9
        impl crate::ops::Add for $id {
            type Output = Self;
            #[inline]
            fn add(self, other: Self) -> Self {
                use crate::llvm::simd_add;
                unsafe { Simd(simd_add(self.0, other.0)) }
   126a3:	c5 ed 58 d1          	vaddpd %ymm1,%ymm2,%ymm2
            #[inline]
            pub fn sum(self) -> $elem_ty {
                #[cfg(not(target_arch = "aarch64"))]
                {
                    use crate::llvm::simd_reduce_add_ordered;
                    unsafe { simd_reduce_add_ordered(self.0, 0 as $elem_ty) }
   126a7:	c5 eb 58 d8          	vaddsd %xmm0,%xmm2,%xmm3
   126ab:	c4 e3 79 05 e2 01    	vpermilpd $0x1,%xmm2,%xmm4
   126b1:	c5 e3 58 dc          	vaddsd %xmm4,%xmm3,%xmm3
   126b5:	c4 e3 7d 19 d2 01    	vextractf128 $0x1,%ymm2,%xmm2
   126bb:	c5 e3 58 da          	vaddsd %xmm2,%xmm3,%xmm3
   126bf:	c4 e3 79 05 d2 01    	vpermilpd $0x1,%xmm2,%xmm2
   126c5:	c5 e3 58 d2          	vaddsd %xmm2,%xmm3,%xmm2
   126c9:	c5 d3 58 ea          	vaddsd %xmm2,%xmm5,%xmm5
   126cd:	4c 01 fa             	add    %r15,%rdx
   126d0:	4d 01 fa             	add    %r15,%r10
   126d3:	4d 39 e9             	cmp    %r13,%r9
   126d6:	0f 84 5c 05 00 00    	je     12c38 <_ZN13num_perf_demo8mul_test17h9955734a3be41a12E+0xb08>
        sum += &mat[i * n .. i * n + n].simd_iter(f64s(0.0))
   126dc:	4c 89 c8             	mov    %r9,%rax
   126df:	49 0f af c5          	imul   %r13,%rax
   126e3:	48 89 c1             	mov    %rax,%rcx
   126e6:	4c 01 e9             	add    %r13,%rcx
   126e9:	0f 82 60 06 00 00    	jb     12d4f <_ZN13num_perf_demo8mul_test17h9955734a3be41a12E+0xc1f>
   126ef:	48 39 ce             	cmp    %rcx,%rsi
   126f2:	0f 82 4a 06 00 00    	jb     12d42 <_ZN13num_perf_demo8mul_test17h9955734a3be41a12E+0xc12>
   126f8:	49 83 fd 04          	cmp    $0x4,%r13
    fn end(&mut self) -> Option<(Self::Vector, usize)> {
        if self.scalar_pos() < self.scalar_len() {
            let mut ret = self.default();
            let empty_amt = self.width() - (self.scalar_len() - self.scalar_pos());
            // Right-align the partial vector to ensure the load is vectorized
            if self.width() < self.scalar_len() {
   126fc:	76 52                	jbe    12750 <_ZN13num_perf_demo8mul_test17h9955734a3be41a12E+0x620>
   126fe:	48 81 ff 80 00 00 00 	cmp    $0x80,%rdi
   12705:	0f 87 71 06 00 00    	ja     12d7c <_ZN13num_perf_demo8mul_test17h9955734a3be41a12E+0xc4c>
   1270b:	48 83 ff 7c          	cmp    $0x7c,%rdi
            ///
            /// If `slice.len() < Self::lanes()`.
            #[inline]
            pub fn from_slice_unaligned(slice: &[$elem_ty]) -> Self {
                unsafe {
                    assert!(slice.len() >= $elem_count);
   1270f:	0f 87 4a 06 00 00    	ja     12d5f <_ZN13num_perf_demo8mul_test17h9955734a3be41a12E+0xc2f>
   12715:	48 8b 8c 24 b0 00 00 	mov    0xb0(%rsp),%rcx
   1271c:	00 
   1271d:	48 8d 04 c1          	lea    (%rcx,%rax,8),%rax
   12721:	48 8d 0d 22 a3 02 00 	lea    0x2a322(%rip),%rcx        # 3ca4a <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0xea>
   12728:	c4 a1 7e 6f 54 e9 20 	vmovdqu 0x20(%rcx,%r13,8),%ymm2
   1272f:	48 8b 8c 24 e0 00 00 	mov    0xe0(%rsp),%rcx
   12736:	00 
   12737:	c4 e3 75 4c 14 c8 20 	vpblendvb %ymm2,(%rax,%rcx,8),%ymm1,%ymm2
   1273e:	e9 5d ff ff ff       	jmpq   126a0 <_ZN13num_perf_demo8mul_test17h9955734a3be41a12E+0x570>
   12743:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1274a:	00 00 00 
   1274d:	0f 1f 00             	nopl   (%rax)
   12750:	48 83 bc 24 d0 00 00 	cmpq   $0x7,0xd0(%rsp)
   12757:	00 07 
   12759:	73 15                	jae    12770 <_ZN13num_perf_demo8mul_test17h9955734a3be41a12E+0x640>
   1275b:	c5 e9 ef d2          	vpxor  %xmm2,%xmm2,%xmm2
   1275f:	31 c0                	xor    %eax,%eax
   12761:	4d 85 e4             	test   %r12,%r12
   12764:	0f 85 79 01 00 00    	jne    128e3 <_ZN13num_perf_demo8mul_test17h9955734a3be41a12E+0x7b3>
   1276a:	e9 31 ff ff ff       	jmpq   126a0 <_ZN13num_perf_demo8mul_test17h9955734a3be41a12E+0x570>
   1276f:	90                   	nop
   12770:	c5 e8 57 d2          	vxorps %xmm2,%xmm2,%xmm2
   12774:	31 c0                	xor    %eax,%eax
   12776:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1277d:	00 00 00 
                self,
                index: usize,
                new_value: $elem_ty,
            ) -> Self {
                use crate::llvm::simd_insert;
                Simd(simd_insert(self.0, index as u32, new_value as $ielem_ty))
   12780:	41 8d 0c 06          	lea    (%r14,%rax,1),%ecx
   12784:	83 c1 04             	add    $0x4,%ecx
   12787:	c5 fc 29 94 24 a0 01 	vmovaps %ymm2,0x1a0(%rsp)
   1278e:	00 00 
   12790:	83 e1 03             	and    $0x3,%ecx
                *self.get_unchecked(offset)
   12793:	c5 fb 10 54 c2 c8    	vmovsd -0x38(%rdx,%rax,8),%xmm2
   12799:	c5 fb 10 5c c2 d0    	vmovsd -0x30(%rdx,%rax,8),%xmm3
   1279f:	c5 fb 11 94 cc a0 01 	vmovsd %xmm2,0x1a0(%rsp,%rcx,8)
   127a6:	00 00 
   127a8:	c5 fc 28 94 24 a0 01 	vmovaps 0x1a0(%rsp),%ymm2
   127af:	00 00 
   127b1:	c5 fc 29 94 24 c0 01 	vmovaps %ymm2,0x1c0(%rsp)
   127b8:	00 00 
   127ba:	41 8d 0c 06          	lea    (%r14,%rax,1),%ecx
   127be:	83 c1 05             	add    $0x5,%ecx
   127c1:	83 e1 03             	and    $0x3,%ecx
   127c4:	c5 fb 11 9c cc c0 01 	vmovsd %xmm3,0x1c0(%rsp,%rcx,8)
   127cb:	00 00 
   127cd:	c5 fc 28 94 24 c0 01 	vmovaps 0x1c0(%rsp),%ymm2
   127d4:	00 00 
   127d6:	c5 fb 10 5c c2 d8    	vmovsd -0x28(%rdx,%rax,8),%xmm3
   127dc:	41 8d 0c 06          	lea    (%r14,%rax,1),%ecx
   127e0:	83 c1 06             	add    $0x6,%ecx
   127e3:	c5 fc 29 94 24 e0 01 	vmovaps %ymm2,0x1e0(%rsp)
   127ea:	00 00 
   127ec:	83 e1 03             	and    $0x3,%ecx
   127ef:	c5 fb 11 9c cc e0 01 	vmovsd %xmm3,0x1e0(%rsp,%rcx,8)
   127f6:	00 00 
   127f8:	c5 fc 28 94 24 e0 01 	vmovaps 0x1e0(%rsp),%ymm2
   127ff:	00 00 
   12801:	c5 fb 10 5c c2 e0    	vmovsd -0x20(%rdx,%rax,8),%xmm3
   12807:	41 8d 0c 06          	lea    (%r14,%rax,1),%ecx
   1280b:	83 c1 ff             	add    $0xffffffff,%ecx
   1280e:	c5 fc 29 94 24 00 02 	vmovaps %ymm2,0x200(%rsp)
   12815:	00 00 
   12817:	83 e1 03             	and    $0x3,%ecx
   1281a:	c5 fb 11 9c cc 00 02 	vmovsd %xmm3,0x200(%rsp,%rcx,8)
   12821:	00 00 
   12823:	c5 fc 28 94 24 00 02 	vmovaps 0x200(%rsp),%ymm2
   1282a:	00 00 
   1282c:	c5 fb 10 5c c2 e8    	vmovsd -0x18(%rdx,%rax,8),%xmm3
   12832:	c5 fc 29 94 24 20 02 	vmovaps %ymm2,0x220(%rsp)
   12839:	00 00 
   1283b:	41 8d 1c 06          	lea    (%r14,%rax,1),%ebx
   1283f:	83 c3 08             	add    $0x8,%ebx
   12842:	83 e3 03             	and    $0x3,%ebx
   12845:	c5 fb 11 9c dc 20 02 	vmovsd %xmm3,0x220(%rsp,%rbx,8)
   1284c:	00 00 
   1284e:	c5 fc 28 94 24 20 02 	vmovaps 0x220(%rsp),%ymm2
   12855:	00 00 
   12857:	c5 fb 10 5c c2 f0    	vmovsd -0x10(%rdx,%rax,8),%xmm3
   1285d:	41 8d 1c 06          	lea    (%r14,%rax,1),%ebx
   12861:	83 c3 09             	add    $0x9,%ebx
   12864:	c5 fc 29 94 24 40 02 	vmovaps %ymm2,0x240(%rsp)
   1286b:	00 00 
   1286d:	83 e3 03             	and    $0x3,%ebx
   12870:	c5 fb 11 9c dc 40 02 	vmovsd %xmm3,0x240(%rsp,%rbx,8)
   12877:	00 00 
   12879:	c5 fc 28 94 24 40 02 	vmovaps 0x240(%rsp),%ymm2
   12880:	00 00 
   12882:	c5 fb 10 5c c2 f8    	vmovsd -0x8(%rdx,%rax,8),%xmm3
   12888:	41 8d 1c 06          	lea    (%r14,%rax,1),%ebx
   1288c:	83 c3 0a             	add    $0xa,%ebx
   1288f:	c5 fc 29 94 24 60 02 	vmovaps %ymm2,0x260(%rsp)
   12896:	00 00 
   12898:	83 e3 03             	and    $0x3,%ebx
   1289b:	c5 fb 11 9c dc 60 02 	vmovsd %xmm3,0x260(%rsp,%rbx,8)
   128a2:	00 00 
   128a4:	c5 fc 28 94 24 60 02 	vmovaps 0x260(%rsp),%ymm2
   128ab:	00 00 
   128ad:	c5 fb 10 1c c2       	vmovsd (%rdx,%rax,8),%xmm3
   128b2:	48 83 c0 08          	add    $0x8,%rax
   128b6:	c5 fc 29 94 24 80 02 	vmovaps %ymm2,0x280(%rsp)
   128bd:	00 00 
   128bf:	c5 fb 11 9c cc 80 02 	vmovsd %xmm3,0x280(%rsp,%rcx,8)
   128c6:	00 00 
   128c8:	c5 fd 6f 94 24 80 02 	vmovdqa 0x280(%rsp),%ymm2
   128cf:	00 00 
   128d1:	49 39 c3             	cmp    %rax,%r11
   128d4:	0f 85 a6 fe ff ff    	jne    12780 <_ZN13num_perf_demo8mul_test17h9955734a3be41a12E+0x650>
   128da:	4d 85 e4             	test   %r12,%r12
   128dd:	0f 84 bd fd ff ff    	je     126a0 <_ZN13num_perf_demo8mul_test17h9955734a3be41a12E+0x570>
   128e3:	4d 8d 04 c2          	lea    (%r10,%rax,8),%r8
   128e7:	03 44 24 1c          	add    0x1c(%rsp),%eax
   128eb:	31 c9                	xor    %ecx,%ecx
   128ed:	0f 1f 00             	nopl   (%rax)
   128f0:	c4 c1 7b 10 1c c8    	vmovsd (%r8,%rcx,8),%xmm3
   128f6:	8d 1c 08             	lea    (%rax,%rcx,1),%ebx
   128f9:	c5 fd 7f 94 24 80 01 	vmovdqa %ymm2,0x180(%rsp)
   12900:	00 00 
   12902:	83 e3 03             	and    $0x3,%ebx
   12905:	c5 fb 11 9c dc 80 01 	vmovsd %xmm3,0x180(%rsp,%rbx,8)
   1290c:	00 00 
   1290e:	c5 fd 6f 94 24 80 01 	vmovdqa 0x180(%rsp),%ymm2
   12915:	00 00 
   12917:	48 ff c1             	inc    %rcx
   1291a:	49 39 cc             	cmp    %rcx,%r12
   1291d:	75 d1                	jne    128f0 <_ZN13num_perf_demo8mul_test17h9955734a3be41a12E+0x7c0>
   1291f:	e9 7c fd ff ff       	jmpq   126a0 <_ZN13num_perf_demo8mul_test17h9955734a3be41a12E+0x570>
   12924:	c5 d1 57 ed          	vxorpd %xmm5,%xmm5,%xmm5
   12928:	e9 0b 03 00 00       	jmpq   12c38 <_ZN13num_perf_demo8mul_test17h9955734a3be41a12E+0xb08>
   1292d:	4d 8d 4a 20          	lea    0x20(%r10),%r9
   12931:	4a 8d 04 ed 00 00 00 	lea    0x0(,%r13,8),%rax
   12938:	00 
   12939:	48 89 84 24 d0 00 00 	mov    %rax,0xd0(%rsp)
   12940:	00 
   12941:	41 bb 0c 00 00 00    	mov    $0xc,%r11d
   12947:	45 29 eb             	sub    %r13d,%r11d
   1294a:	44 89 e8             	mov    %r13d,%eax
   1294d:	f7 d8                	neg    %eax
   1294f:	89 44 24 1c          	mov    %eax,0x1c(%rsp)
   12953:	c5 f9 57 c0          	vxorpd %xmm0,%xmm0,%xmm0
   12957:	45 31 f6             	xor    %r14d,%r14d
   1295a:	c5 f1 ef c9          	vpxor  %xmm1,%xmm1,%xmm1
   1295e:	c5 d1 57 ed          	vxorpd %xmm5,%xmm5,%xmm5
   12962:	eb 47                	jmp    129ab <_ZN13num_perf_demo8mul_test17h9955734a3be41a12E+0x87b>
   12964:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1296b:	00 00 00 
   1296e:	66 90                	xchg   %ax,%ax
   12970:	c5 ed 58 d3          	vaddpd %ymm3,%ymm2,%ymm2
   12974:	c5 eb 58 d8          	vaddsd %xmm0,%xmm2,%xmm3
   12978:	c4 e3 79 05 e2 01    	vpermilpd $0x1,%xmm2,%xmm4
   1297e:	c5 e3 58 dc          	vaddsd %xmm4,%xmm3,%xmm3
   12982:	c4 e3 7d 19 d2 01    	vextractf128 $0x1,%ymm2,%xmm2
   12988:	c5 e3 58 da          	vaddsd %xmm2,%xmm3,%xmm3
   1298c:	c4 e3 79 05 d2 01    	vpermilpd $0x1,%xmm2,%xmm2
   12992:	c5 e3 58 d2          	vaddsd %xmm2,%xmm3,%xmm2
   12996:	c5 d3 58 ea          	vaddsd %xmm2,%xmm5,%xmm5
   1299a:	4c 03 8c 24 d0 00 00 	add    0xd0(%rsp),%r9
   129a1:	00 
   129a2:	4d 39 ee             	cmp    %r13,%r14
   129a5:	0f 84 8d 02 00 00    	je     12c38 <_ZN13num_perf_demo8mul_test17h9955734a3be41a12E+0xb08>
   129ab:	4c 89 f0             	mov    %r14,%rax
   129ae:	49 0f af c5          	imul   %r13,%rax
   129b2:	48 89 c1             	mov    %rax,%rcx
   129b5:	4c 01 e9             	add    %r13,%rcx
   129b8:	0f 82 91 03 00 00    	jb     12d4f <_ZN13num_perf_demo8mul_test17h9955734a3be41a12E+0xc1f>
   129be:	48 39 ce             	cmp    %rcx,%rsi
   129c1:	0f 82 7b 03 00 00    	jb     12d42 <_ZN13num_perf_demo8mul_test17h9955734a3be41a12E+0xc12>
   129c7:	49 ff c6             	inc    %r14
   129ca:	48 8b 8c 24 b0 00 00 	mov    0xb0(%rsp),%rcx
   129d1:	00 
   129d2:	4c 8d 04 c1          	lea    (%rcx,%rax,8),%r8
   129d6:	b9 04 00 00 00       	mov    $0x4,%ecx
   129db:	c5 e9 57 d2          	vxorpd %xmm2,%xmm2,%xmm2
   129df:	8b 44 24 1c          	mov    0x1c(%rsp),%eax
   129e3:	45 89 df             	mov    %r11d,%r15d
   129e6:	4c 89 cb             	mov    %r9,%rbx
   129e9:	31 ff                	xor    %edi,%edi
   129eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   129f0:	4c 39 ef             	cmp    %r13,%rdi
   129f3:	0f 87 3c 03 00 00    	ja     12d35 <_ZN13num_perf_demo8mul_test17h9955734a3be41a12E+0xc05>
   129f9:	49 89 cc             	mov    %rcx,%r12
   129fc:	49 89 da             	mov    %rbx,%r10
   129ff:	44 89 fa             	mov    %r15d,%edx
   12a02:	c4 c1 6d 58 14 f8    	vaddpd (%r8,%rdi,8),%ymm2,%ymm2
        if self.position + self.width() <= self.scalar_len() {
   12a08:	48 83 c1 04          	add    $0x4,%rcx
   12a0c:	48 83 c3 20          	add    $0x20,%rbx
   12a10:	44 8d 7a 08          	lea    0x8(%rdx),%r15d
   12a14:	83 c0 04             	add    $0x4,%eax
   12a17:	4c 89 e7             	mov    %r12,%rdi
   12a1a:	4c 39 e9             	cmp    %r13,%rcx
   12a1d:	76 d1                	jbe    129f0 <_ZN13num_perf_demo8mul_test17h9955734a3be41a12E+0x8c0>
        if self.scalar_pos() < self.scalar_len() {
   12a1f:	4c 89 e1             	mov    %r12,%rcx
   12a22:	4c 29 e9             	sub    %r13,%rcx
   12a25:	0f 83 49 ff ff ff    	jae    12974 <_ZN13num_perf_demo8mul_test17h9955734a3be41a12E+0x844>
   12a2b:	49 83 fd 04          	cmp    $0x4,%r13
            if self.width() < self.scalar_len() {
   12a2f:	76 3f                	jbe    12a70 <_ZN13num_perf_demo8mul_test17h9955734a3be41a12E+0x940>

            #[inline(always)]
            fn partition_mask(off: usize) -> Self {
                debug_assert!(off <= Self::WIDTH);
                debug_assert!(off * Self::Scalar::SIZE <= 64);
                Self::load(unsafe { transmute(&PART_MASK[..]) }, 64 / Self::Scalar::SIZE - off)
   12a31:	bf 04 00 00 00       	mov    $0x4,%edi
   12a36:	48 29 cf             	sub    %rcx,%rdi
   12a39:	48 81 ff 81 00 00 00 	cmp    $0x81,%rdi
   12a40:	0f 83 36 03 00 00    	jae    12d7c <_ZN13num_perf_demo8mul_test17h9955734a3be41a12E+0xc4c>
   12a46:	48 83 ff 7d          	cmp    $0x7d,%rdi
   12a4a:	0f 83 0f 03 00 00    	jae    12d5f <_ZN13num_perf_demo8mul_test17h9955734a3be41a12E+0xc2f>
   12a50:	48 8d 05 f3 9f 02 00 	lea    0x29ff3(%rip),%rax        # 3ca4a <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0xea>
   12a57:	c5 fe 6f 1c f8       	vmovdqu (%rax,%rdi,8),%ymm3
   12a5c:	48 8b 84 24 e0 00 00 	mov    0xe0(%rsp),%rax
   12a63:	00 
   12a64:	c4 c3 75 4c 1c c0 30 	vpblendvb %ymm3,(%r8,%rax,8),%ymm1,%ymm3
   12a6b:	e9 00 ff ff ff       	jmpq   12970 <_ZN13num_perf_demo8mul_test17h9955734a3be41a12E+0x840>
   12a70:	45 89 e8             	mov    %r13d,%r8d
   12a73:	45 29 e0             	sub    %r12d,%r8d
   12a76:	4c 89 e1             	mov    %r12,%rcx
   12a79:	48 f7 d1             	not    %rcx
   12a7c:	4c 01 e9             	add    %r13,%rcx
   12a7f:	c5 e1 ef db          	vpxor  %xmm3,%xmm3,%xmm3
   12a83:	49 83 e0 07          	and    $0x7,%r8
   12a87:	74 3a                	je     12ac3 <_ZN13num_perf_demo8mul_test17h9955734a3be41a12E+0x993>
   12a89:	4c 89 c7             	mov    %r8,%rdi
   12a8c:	0f 1f 40 00          	nopl   0x0(%rax)
                *self.get_unchecked(offset)
   12a90:	c4 c1 7b 10 22       	vmovsd (%r10),%xmm4
   12a95:	c5 fd 7f 9c 24 a0 03 	vmovdqa %ymm3,0x3a0(%rsp)
   12a9c:	00 00 
   12a9e:	89 d3                	mov    %edx,%ebx
   12aa0:	83 e3 03             	and    $0x3,%ebx
   12aa3:	c5 fb 11 a4 dc a0 03 	vmovsd %xmm4,0x3a0(%rsp,%rbx,8)
   12aaa:	00 00 
   12aac:	c5 fd 6f 9c 24 a0 03 	vmovdqa 0x3a0(%rsp),%ymm3
   12ab3:	00 00 
   12ab5:	49 83 c2 08          	add    $0x8,%r10
   12ab9:	ff c2                	inc    %edx
   12abb:	48 ff cf             	dec    %rdi
   12abe:	75 d0                	jne    12a90 <_ZN13num_perf_demo8mul_test17h9955734a3be41a12E+0x960>
   12ac0:	4d 01 c4             	add    %r8,%r12
   12ac3:	48 83 f9 07          	cmp    $0x7,%rcx
   12ac7:	0f 82 a3 fe ff ff    	jb     12970 <_ZN13num_perf_demo8mul_test17h9955734a3be41a12E+0x840>
   12acd:	4d 89 e8             	mov    %r13,%r8
   12ad0:	4d 29 e0             	sub    %r12,%r8
   12ad3:	44 01 e0             	add    %r12d,%eax
   12ad6:	4b 8d 0c e1          	lea    (%r9,%r12,8),%rcx
   12ada:	31 db                	xor    %ebx,%ebx
   12adc:	0f 1f 40 00          	nopl   0x0(%rax)
   12ae0:	8d 14 18             	lea    (%rax,%rbx,1),%edx
   12ae3:	83 c2 04             	add    $0x4,%edx
   12ae6:	c5 fd 7f 9c 24 a0 02 	vmovdqa %ymm3,0x2a0(%rsp)
   12aed:	00 00 
   12aef:	83 e2 03             	and    $0x3,%edx
   12af2:	c5 fb 10 5c d9 e0    	vmovsd -0x20(%rcx,%rbx,8),%xmm3
   12af8:	c5 fb 10 64 d9 e8    	vmovsd -0x18(%rcx,%rbx,8),%xmm4
   12afe:	c5 fb 11 9c d4 a0 02 	vmovsd %xmm3,0x2a0(%rsp,%rdx,8)
   12b05:	00 00 
   12b07:	c5 fc 28 9c 24 a0 02 	vmovaps 0x2a0(%rsp),%ymm3
   12b0e:	00 00 
   12b10:	c5 fc 29 9c 24 c0 02 	vmovaps %ymm3,0x2c0(%rsp)
   12b17:	00 00 
   12b19:	8d 14 18             	lea    (%rax,%rbx,1),%edx
   12b1c:	83 c2 05             	add    $0x5,%edx
   12b1f:	83 e2 03             	and    $0x3,%edx
   12b22:	c5 fb 11 a4 d4 c0 02 	vmovsd %xmm4,0x2c0(%rsp,%rdx,8)
   12b29:	00 00 
   12b2b:	c5 fc 28 9c 24 c0 02 	vmovaps 0x2c0(%rsp),%ymm3
   12b32:	00 00 
   12b34:	c5 fb 10 64 d9 f0    	vmovsd -0x10(%rcx,%rbx,8),%xmm4
   12b3a:	8d 14 18             	lea    (%rax,%rbx,1),%edx
   12b3d:	83 c2 06             	add    $0x6,%edx
   12b40:	c5 fc 29 9c 24 e0 02 	vmovaps %ymm3,0x2e0(%rsp)
   12b47:	00 00 
   12b49:	83 e2 03             	and    $0x3,%edx
   12b4c:	c5 fb 11 a4 d4 e0 02 	vmovsd %xmm4,0x2e0(%rsp,%rdx,8)
   12b53:	00 00 
   12b55:	c5 fc 28 9c 24 e0 02 	vmovaps 0x2e0(%rsp),%ymm3
   12b5c:	00 00 
   12b5e:	c5 fb 10 64 d9 f8    	vmovsd -0x8(%rcx,%rbx,8),%xmm4
   12b64:	8d 14 18             	lea    (%rax,%rbx,1),%edx
   12b67:	83 c2 ff             	add    $0xffffffff,%edx
   12b6a:	c5 fc 29 9c 24 00 03 	vmovaps %ymm3,0x300(%rsp)
   12b71:	00 00 
   12b73:	83 e2 03             	and    $0x3,%edx
   12b76:	c5 fb 11 a4 d4 00 03 	vmovsd %xmm4,0x300(%rsp,%rdx,8)
   12b7d:	00 00 
   12b7f:	c5 fc 28 9c 24 00 03 	vmovaps 0x300(%rsp),%ymm3
   12b86:	00 00 
   12b88:	c5 fb 10 24 d9       	vmovsd (%rcx,%rbx,8),%xmm4
   12b8d:	c5 fc 29 9c 24 20 03 	vmovaps %ymm3,0x320(%rsp)
   12b94:	00 00 
   12b96:	8d 3c 18             	lea    (%rax,%rbx,1),%edi
   12b99:	83 c7 08             	add    $0x8,%edi
   12b9c:	83 e7 03             	and    $0x3,%edi
   12b9f:	c5 fb 11 a4 fc 20 03 	vmovsd %xmm4,0x320(%rsp,%rdi,8)
   12ba6:	00 00 
   12ba8:	c5 fc 28 9c 24 20 03 	vmovaps 0x320(%rsp),%ymm3
   12baf:	00 00 
   12bb1:	c5 fb 10 64 d9 08    	vmovsd 0x8(%rcx,%rbx,8),%xmm4
   12bb7:	8d 3c 18             	lea    (%rax,%rbx,1),%edi
   12bba:	83 c7 09             	add    $0x9,%edi
   12bbd:	c5 fc 29 9c 24 40 03 	vmovaps %ymm3,0x340(%rsp)
   12bc4:	00 00 
   12bc6:	83 e7 03             	and    $0x3,%edi
   12bc9:	c5 fb 11 a4 fc 40 03 	vmovsd %xmm4,0x340(%rsp,%rdi,8)
   12bd0:	00 00 
   12bd2:	c5 fc 28 9c 24 40 03 	vmovaps 0x340(%rsp),%ymm3
   12bd9:	00 00 
   12bdb:	c5 fb 10 64 d9 10    	vmovsd 0x10(%rcx,%rbx,8),%xmm4
   12be1:	8d 3c 18             	lea    (%rax,%rbx,1),%edi
   12be4:	83 c7 0a             	add    $0xa,%edi
   12be7:	c5 fc 29 9c 24 60 03 	vmovaps %ymm3,0x360(%rsp)
   12bee:	00 00 
   12bf0:	83 e7 03             	and    $0x3,%edi
   12bf3:	c5 fb 11 a4 fc 60 03 	vmovsd %xmm4,0x360(%rsp,%rdi,8)
   12bfa:	00 00 
   12bfc:	c5 fc 28 9c 24 60 03 	vmovaps 0x360(%rsp),%ymm3
   12c03:	00 00 
   12c05:	c5 fb 10 64 d9 18    	vmovsd 0x18(%rcx,%rbx,8),%xmm4
   12c0b:	c5 fc 29 9c 24 80 03 	vmovaps %ymm3,0x380(%rsp)
   12c12:	00 00 
   12c14:	c5 fb 11 a4 d4 80 03 	vmovsd %xmm4,0x380(%rsp,%rdx,8)
   12c1b:	00 00 
   12c1d:	c5 fd 6f 9c 24 80 03 	vmovdqa 0x380(%rsp),%ymm3
   12c24:	00 00 
   12c26:	48 83 c3 08          	add    $0x8,%rbx
   12c2a:	49 39 d8             	cmp    %rbx,%r8
   12c2d:	0f 85 ad fe ff ff    	jne    12ae0 <_ZN13num_perf_demo8mul_test17h9955734a3be41a12E+0x9b0>
   12c33:	e9 38 fd ff ff       	jmpq   12970 <_ZN13num_perf_demo8mul_test17h9955734a3be41a12E+0x840>
   12c38:	c5 f9 29 ac 24 b0 00 	vmovapd %xmm5,0xb0(%rsp)
   12c3f:	00 00 
   12c41:	48 83 7c 24 28 00    	cmpq   $0x0,0x28(%rsp)
   12c47:	74 0e                	je     12c57 <_ZN13num_perf_demo8mul_test17h9955734a3be41a12E+0xb27>
   12c49:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
   12c4e:	c5 f8 77             	vzeroupper 
   12c51:	ff 15 21 51 23 00    	callq  *0x235121(%rip)        # 247d78 <free@GLIBC_2.2.5>
   12c57:	c5 f9 57 c0          	vxorpd %xmm0,%xmm0,%xmm0
   12c5b:	c5 f9 29 44 24 70    	vmovapd %xmm0,0x70(%rsp)
   12c61:	48 8d 74 24 70       	lea    0x70(%rsp),%rsi
   12c66:	bf 01 00 00 00       	mov    $0x1,%edi
   12c6b:	c5 f8 77             	vzeroupper 
   12c6e:	ff 15 9c 52 23 00    	callq  *0x23529c(%rip)        # 247f10 <clock_gettime@GLIBC_2.2.5>
   12c74:	83 f8 ff             	cmp    $0xffffffff,%eax
   12c77:	0f 84 fb 01 00 00    	je     12e78 <_ZN13num_perf_demo8mul_test17h9955734a3be41a12E+0xd48>
   12c7d:	c5 f8 28 44 24 70    	vmovaps 0x70(%rsp),%xmm0
   12c83:	c5 f8 29 44 24 50    	vmovaps %xmm0,0x50(%rsp)
   12c89:	c5 f9 28 84 24 70 01 	vmovapd 0x170(%rsp),%xmm0
   12c90:	00 00 
   12c92:	c5 f9 29 44 24 70    	vmovapd %xmm0,0x70(%rsp)
   12c98:	48 8d 7c 24 20       	lea    0x20(%rsp),%rdi
   12c9d:	48 8d 74 24 50       	lea    0x50(%rsp),%rsi
   12ca2:	48 8d 54 24 70       	lea    0x70(%rsp),%rdx
   12ca7:	e8 54 83 01 00       	callq  2b000 <_ZN3std3sys4unix4time8Timespec12sub_timespec17h7b26ddd705c1fdd5E>
   12cac:	48 83 7c 24 20 01    	cmpq   $0x1,0x20(%rsp)
   12cb2:	0f 84 0c 02 00 00    	je     12ec4 <_ZN13num_perf_demo8mul_test17h9955734a3be41a12E+0xd94>
   12cb8:	b8 00 ca 9a 3b       	mov    $0x3b9aca00,%eax
   12cbd:	48 f7 64 24 28       	mulq   0x28(%rsp)
    let sum = mat_elem_sum(n, C) / ((n * n) as f64);
   12cc2:	4d 0f af ed          	imul   %r13,%r13
   12cc6:	c4 c1 f9 6e c5       	vmovq  %r13,%xmm0
   12ccb:	c5 f9 62 05 4d 77 02 	vpunpckldq 0x2774d(%rip),%xmm0,%xmm0        # 3a420 <_fini+0xdc>
   12cd2:	00 
   12cd3:	c5 f9 5c 05 55 77 02 	vsubpd 0x27755(%rip),%xmm0,%xmm0        # 3a430 <_fini+0xec>
   12cda:	00 
   12cdb:	8b 7c 24 30          	mov    0x30(%rsp),%edi
   12cdf:	c5 f9 7c c0          	vhaddpd %xmm0,%xmm0,%xmm0
   12ce3:	c5 f9 29 84 24 d0 00 	vmovapd %xmm0,0xd0(%rsp)
   12cea:	00 00 
   12cec:	48 01 c7             	add    %rax,%rdi
   12cef:	48 83 d2 00          	adc    $0x0,%rdx

    let time_s = timer.elapsed().as_nanos() as f64 / 1.0e9;
   12cf3:	48 89 d6             	mov    %rdx,%rsi
   12cf6:	ff 15 c4 51 23 00    	callq  *0x2351c4(%rip)        # 247ec0 <_GLOBAL_OFFSET_TABLE_+0x1d0>
   12cfc:	c5 f9 28 8c 24 b0 00 	vmovapd 0xb0(%rsp),%xmm1
   12d03:	00 00 
    let sum = mat_elem_sum(n, C) / ((n * n) as f64);
   12d05:	c5 f1 14 c0          	vunpcklpd %xmm0,%xmm1,%xmm0
   12d09:	c5 f9 28 8c 24 d0 00 	vmovapd 0xd0(%rsp),%xmm1
   12d10:	00 00 
   12d12:	c4 e3 71 0d 0d 24 77 	vblendpd $0x2,0x27724(%rip),%xmm1,%xmm1        # 3a440 <_fini+0xfc>
   12d19:	02 00 02 
   12d1c:	c5 f9 5e c1          	vdivpd %xmm1,%xmm0,%xmm0

    (sum, time_s)
   12d20:	c4 e3 79 05 c8 01    	vpermilpd $0x1,%xmm0,%xmm1
   12d26:	48 8d 65 d8          	lea    -0x28(%rbp),%rsp
   12d2a:	5b                   	pop    %rbx
   12d2b:	41 5c                	pop    %r12
   12d2d:	41 5d                	pop    %r13
   12d2f:	41 5e                	pop    %r14
   12d31:	41 5f                	pop    %r15
   12d33:	5d                   	pop    %rbp
   12d34:	c3                   	retq   
   12d35:	4c 89 ee             	mov    %r13,%rsi
   12d38:	c5 f8 77             	vzeroupper 
   12d3b:	e8 10 4f ff ff       	callq  7c50 <_ZN4core5slice22slice_index_order_fail17h7bcf2f94ba9e06deE>
   12d40:	0f 0b                	ud2    
   12d42:	48 89 cf             	mov    %rcx,%rdi
   12d45:	c5 f8 77             	vzeroupper 
   12d48:	e8 83 4e ff ff       	callq  7bd0 <_ZN4core5slice20slice_index_len_fail17h52736412c1ce1871E>
   12d4d:	eb f1                	jmp    12d40 <_ZN13num_perf_demo8mul_test17h9955734a3be41a12E+0xc10>
   12d4f:	48 89 c7             	mov    %rax,%rdi
   12d52:	48 89 ce             	mov    %rcx,%rsi
   12d55:	c5 f8 77             	vzeroupper 
   12d58:	e8 f3 4e ff ff       	callq  7c50 <_ZN4core5slice22slice_index_order_fail17h7bcf2f94ba9e06deE>
   12d5d:	eb e1                	jmp    12d40 <_ZN13num_perf_demo8mul_test17h9955734a3be41a12E+0xc10>
   12d5f:	48 8d 3d 64 9d 02 00 	lea    0x29d64(%rip),%rdi        # 3caca <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x16a>
   12d66:	48 8d 15 6b 45 23 00 	lea    0x23456b(%rip),%rdx        # 2472d8 <__init_array_end+0x12c8>
   12d6d:	be 22 00 00 00       	mov    $0x22,%esi
   12d72:	c5 f8 77             	vzeroupper 
   12d75:	e8 36 46 ff ff       	callq  73b0 <_ZN4core9panicking5panic17h6861470adfbddef8E>
   12d7a:	eb c4                	jmp    12d40 <_ZN13num_perf_demo8mul_test17h9955734a3be41a12E+0xc10>
   12d7c:	be 80 00 00 00       	mov    $0x80,%esi
   12d81:	c5 f8 77             	vzeroupper 
   12d84:	e8 c7 4e ff ff       	callq  7c50 <_ZN4core5slice22slice_index_order_fail17h7bcf2f94ba9e06deE>
   12d89:	eb b5                	jmp    12d40 <_ZN13num_perf_demo8mul_test17h9955734a3be41a12E+0xc10>
   12d8b:	ff 15 0f 50 23 00    	callq  *0x23500f(%rip)        # 247da0 <__errno_location@GLIBC_2.2.5>
   12d91:	8b 00                	mov    (%rax),%eax
   12d93:	c6 44 24 20 00       	movb   $0x0,0x20(%rsp)
   12d98:	0f b7 4c 24 50       	movzwl 0x50(%rsp),%ecx
   12d9d:	66 89 4c 24 21       	mov    %cx,0x21(%rsp)
   12da2:	8a 4c 24 52          	mov    0x52(%rsp),%cl
   12da6:	88 4c 24 23          	mov    %cl,0x23(%rsp)
   12daa:	89 44 24 24          	mov    %eax,0x24(%rsp)
   12dae:	48 8d 3d 0c ab 02 00 	lea    0x2ab0c(%rip),%rdi        # 3d8c1 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0xf61>
   12db5:	48 8d 0d a4 49 23 00 	lea    0x2349a4(%rip),%rcx        # 247760 <__init_array_end+0x1750>
   12dbc:	4c 8d 05 bd 49 23 00 	lea    0x2349bd(%rip),%r8        # 247780 <__init_array_end+0x1770>
   12dc3:	48 8d 54 24 20       	lea    0x20(%rsp),%rdx
   12dc8:	be 2b 00 00 00       	mov    $0x2b,%esi
   12dcd:	e8 8e 6e ff ff       	callq  9c60 <_ZN4core6option18expect_none_failed17he0fec195c6e4c2ecE>
   12dd2:	e9 69 ff ff ff       	jmpq   12d40 <_ZN13num_perf_demo8mul_test17h9955734a3be41a12E+0xc10>
   12dd7:	48 8d 84 24 80 00 00 	lea    0x80(%rsp),%rax
   12dde:	00 
   12ddf:	48 89 84 24 90 00 00 	mov    %rax,0x90(%rsp)
   12de6:	00 
   12de7:	48 8d 05 92 46 ff ff 	lea    -0xb96e(%rip),%rax        # 7480 <_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$u64$GT$3fmt17h29103e8b1c853837E>
   12dee:	48 89 84 24 98 00 00 	mov    %rax,0x98(%rsp)
   12df5:	00 
   12df6:	48 8d 8c 24 38 01 00 	lea    0x138(%rsp),%rcx
   12dfd:	00 
   12dfe:	48 89 8c 24 a0 00 00 	mov    %rcx,0xa0(%rsp)
   12e05:	00 
   12e06:	48 89 84 24 a8 00 00 	mov    %rax,0xa8(%rsp)
   12e0d:	00 
   12e0e:	48 8d 05 3b 3a 23 00 	lea    0x233a3b(%rip),%rax        # 246850 <__init_array_end+0x840>
   12e15:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   12e1a:	48 c7 44 24 28 02 00 	movq   $0x2,0x28(%rsp)
   12e21:	00 00 
   12e23:	48 c7 44 24 30 00 00 	movq   $0x0,0x30(%rsp)
   12e2a:	00 00 
   12e2c:	48 8d 84 24 90 00 00 	lea    0x90(%rsp),%rax
   12e33:	00 
   12e34:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
   12e39:	48 c7 44 24 48 02 00 	movq   $0x2,0x48(%rsp)
   12e40:	00 00 
   12e42:	48 8d 35 27 3a 23 00 	lea    0x233a27(%rip),%rsi        # 246870 <__init_array_end+0x860>
   12e49:	48 8d 7c 24 20       	lea    0x20(%rsp),%rdi
   12e4e:	e8 8d 0b 01 00       	callq  239e0 <_ZN3std9panicking15begin_panic_fmt17h7fd3ef9bf535b4d1E>
   12e53:	e9 e8 fe ff ff       	jmpq   12d40 <_ZN13num_perf_demo8mul_test17h9955734a3be41a12E+0xc10>
   12e58:	e8 63 07 00 00       	callq  135c0 <_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$11allocate_in28_$u7b$$u7b$closure$u7d$$u7d$17h571564fc3a49ddd9E>
   12e5d:	e9 de fe ff ff       	jmpq   12d40 <_ZN13num_perf_demo8mul_test17h9955734a3be41a12E+0xc10>
   12e62:	48 8d 3d 83 9c 02 00 	lea    0x29c83(%rip),%rdi        # 3caec <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x18c>
   12e69:	be 1b 00 00 00       	mov    $0x1b,%esi
   12e6e:	e8 5d 07 00 00       	callq  135d0 <_ZN3std9panicking11begin_panic17he6f0f18d5c7f3243E>
   12e73:	e9 c8 fe ff ff       	jmpq   12d40 <_ZN13num_perf_demo8mul_test17h9955734a3be41a12E+0xc10>
   12e78:	ff 15 22 4f 23 00    	callq  *0x234f22(%rip)        # 247da0 <__errno_location@GLIBC_2.2.5>
   12e7e:	8b 00                	mov    (%rax),%eax
   12e80:	c6 44 24 20 00       	movb   $0x0,0x20(%rsp)
   12e85:	0f b7 4c 24 50       	movzwl 0x50(%rsp),%ecx
   12e8a:	66 89 4c 24 21       	mov    %cx,0x21(%rsp)
   12e8f:	8a 4c 24 52          	mov    0x52(%rsp),%cl
   12e93:	88 4c 24 23          	mov    %cl,0x23(%rsp)
   12e97:	89 44 24 24          	mov    %eax,0x24(%rsp)
   12e9b:	48 8d 3d 1f aa 02 00 	lea    0x2aa1f(%rip),%rdi        # 3d8c1 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0xf61>
   12ea2:	48 8d 0d b7 48 23 00 	lea    0x2348b7(%rip),%rcx        # 247760 <__init_array_end+0x1750>
   12ea9:	4c 8d 05 d0 48 23 00 	lea    0x2348d0(%rip),%r8        # 247780 <__init_array_end+0x1770>
   12eb0:	48 8d 54 24 20       	lea    0x20(%rsp),%rdx
   12eb5:	be 2b 00 00 00       	mov    $0x2b,%esi
   12eba:	e8 a1 6d ff ff       	callq  9c60 <_ZN4core6option18expect_none_failed17he0fec195c6e4c2ecE>
   12ebf:	e9 7c fe ff ff       	jmpq   12d40 <_ZN13num_perf_demo8mul_test17h9955734a3be41a12E+0xc10>
   12ec4:	48 8d 3d 2e ad 02 00 	lea    0x2ad2e(%rip),%rdi        # 3dbf9 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x1299>
   12ecb:	48 8d 15 c6 48 23 00 	lea    0x2348c6(%rip),%rdx        # 247798 <__init_array_end+0x1788>
   12ed2:	be 23 00 00 00       	mov    $0x23,%esi
   12ed7:	e8 14 6d ff ff       	callq  9bf0 <_ZN4core6option13expect_failed17h76ad4c74f3ea7214E>
   12edc:	e9 5f fe ff ff       	jmpq   12d40 <_ZN13num_perf_demo8mul_test17h9955734a3be41a12E+0xc10>
   12ee1:	4c 89 ff             	mov    %r15,%rdi
   12ee4:	48 89 de             	mov    %rbx,%rsi
   12ee7:	e8 d4 25 ff ff       	callq  54c0 <_ZN5alloc5alloc18handle_alloc_error17hf7bb8682f6c8b1d7E>
   12eec:	0f 0b                	ud2    
   12eee:	e8 dd 25 ff ff       	callq  54d0 <_ZN5alloc7raw_vec17capacity_overflow17h9be7d3ce681ac1a6E>
   12ef3:	e9 48 fe ff ff       	jmpq   12d40 <_ZN13num_perf_demo8mul_test17h9955734a3be41a12E+0xc10>
   12ef8:	be 08 00 00 00       	mov    $0x8,%esi
   12efd:	48 89 df             	mov    %rbx,%rdi
   12f00:	e8 bb 25 ff ff       	callq  54c0 <_ZN5alloc5alloc18handle_alloc_error17hf7bb8682f6c8b1d7E>
   12f05:	0f 0b                	ud2    
   12f07:	48 89 c3             	mov    %rax,%rbx
   12f0a:	48 8d 7c 24 20       	lea    0x20(%rsp),%rdi
   12f0f:	e8 9c 51 01 00       	callq  280b0 <_ZN4core3ptr13drop_in_place17h0756a94afff92eb4E>
   12f14:	e9 b2 00 00 00       	jmpq   12fcb <_ZN13num_perf_demo8mul_test17h9955734a3be41a12E+0xe9b>
   12f19:	48 89 c3             	mov    %rax,%rbx
   12f1c:	e9 83 00 00 00       	jmpq   12fa4 <_ZN13num_perf_demo8mul_test17h9955734a3be41a12E+0xe74>
   12f21:	eb 6e                	jmp    12f91 <_ZN13num_perf_demo8mul_test17h9955734a3be41a12E+0xe61>
   12f23:	48 89 c3             	mov    %rax,%rbx
   12f26:	48 8d 7c 24 20       	lea    0x20(%rsp),%rdi
   12f2b:	e8 80 51 01 00       	callq  280b0 <_ZN4core3ptr13drop_in_place17h0756a94afff92eb4E>
   12f30:	48 8d bc 24 58 01 00 	lea    0x158(%rsp),%rdi
   12f37:	00 
   12f38:	e8 03 02 00 00       	callq  13140 <_ZN4core3ptr13drop_in_place17h755e731680b8f8beE>
   12f3d:	eb 2c                	jmp    12f6b <_ZN13num_perf_demo8mul_test17h9955734a3be41a12E+0xe3b>
   12f3f:	48 89 c3             	mov    %rax,%rbx
   12f42:	eb ec                	jmp    12f30 <_ZN13num_perf_demo8mul_test17h9955734a3be41a12E+0xe00>
   12f44:	48 89 c3             	mov    %rax,%rbx
   12f47:	48 8d 7c 24 20       	lea    0x20(%rsp),%rdi
}
   12f4c:	e8 ef 01 00 00       	callq  13140 <_ZN4core3ptr13drop_in_place17h755e731680b8f8beE>
   12f51:	48 89 df             	mov    %rbx,%rdi
   12f54:	e8 47 11 ff ff       	callq  40a0 <_Unwind_Resume@plt>
   12f59:	0f 0b                	ud2    
   12f5b:	48 89 c3             	mov    %rax,%rbx
   12f5e:	48 89 df             	mov    %rbx,%rdi
   12f61:	e8 3a 11 ff ff       	callq  40a0 <_Unwind_Resume@plt>
   12f66:	0f 0b                	ud2    
   12f68:	48 89 c3             	mov    %rax,%rbx
   12f6b:	48 8d bc 24 40 01 00 	lea    0x140(%rsp),%rdi
   12f72:	00 
   12f73:	e8 c8 01 00 00       	callq  13140 <_ZN4core3ptr13drop_in_place17h755e731680b8f8beE>
   12f78:	48 89 df             	mov    %rbx,%rdi
   12f7b:	e8 20 11 ff ff       	callq  40a0 <_Unwind_Resume@plt>
   12f80:	0f 0b                	ud2    
   12f82:	48 89 c3             	mov    %rax,%rbx
   12f85:	48 8d 7c 24 70       	lea    0x70(%rsp),%rdi
}
   12f8a:	e8 b1 01 00 00       	callq  13140 <_ZN4core3ptr13drop_in_place17h755e731680b8f8beE>
   12f8f:	eb 13                	jmp    12fa4 <_ZN13num_perf_demo8mul_test17h9955734a3be41a12E+0xe74>
   12f91:	48 89 c3             	mov    %rax,%rbx
   12f94:	48 8d 84 24 e8 00 00 	lea    0xe8(%rsp),%rax
   12f9b:	00 
   12f9c:	48 89 84 24 b0 00 00 	mov    %rax,0xb0(%rsp)
   12fa3:	00 
   12fa4:	48 8b bc 24 b0 00 00 	mov    0xb0(%rsp),%rdi
   12fab:	00 
   12fac:	e8 af 01 00 00       	callq  13160 <_ZN4core3ptr13drop_in_place17hc60da5e2e42bbe89E>
   12fb1:	48 8d bc 24 20 01 00 	lea    0x120(%rsp),%rdi
   12fb8:	00 
   12fb9:	e8 82 01 00 00       	callq  13140 <_ZN4core3ptr13drop_in_place17h755e731680b8f8beE>
   12fbe:	48 8d bc 24 00 01 00 	lea    0x100(%rsp),%rdi
   12fc5:	00 
   12fc6:	e8 75 01 00 00       	callq  13140 <_ZN4core3ptr13drop_in_place17h755e731680b8f8beE>
   12fcb:	48 89 df             	mov    %rbx,%rdi
   12fce:	e8 cd 10 ff ff       	callq  40a0 <_Unwind_Resume@plt>
   12fd3:	0f 0b                	ud2    
   12fd5:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   12fdc:	00 00 00 
   12fdf:	90                   	nop

0000000000012fe0 <_ZN13num_perf_demo18make_mat_with_data17hbaffe87874e429bcE>:
pub fn make_mat_with_data(n: usize, s: f64) -> Vec<f64> {
   12fe0:	41 57                	push   %r15
   12fe2:	41 56                	push   %r14
   12fe4:	41 54                	push   %r12
   12fe6:	53                   	push   %rbx
   12fe7:	48 83 ec 28          	sub    $0x28,%rsp
    let mut v: Vec<f64> = Vec::with_capacity(n * n);
   12feb:	49 89 f7             	mov    %rsi,%r15
   12fee:	4c 0f af fe          	imul   %rsi,%r15
   12ff2:	b9 08 00 00 00       	mov    $0x8,%ecx
   12ff7:	4c 89 f8             	mov    %r15,%rax
   12ffa:	48 f7 e1             	mul    %rcx
   12ffd:	0f 80 02 01 00 00    	jo     13105 <_ZN13num_perf_demo18make_mat_with_data17hbaffe87874e429bcE+0x125>
   13003:	48 89 f3             	mov    %rsi,%rbx
   13006:	49 89 fe             	mov    %rdi,%r14
   13009:	49 89 c4             	mov    %rax,%r12
   1300c:	48 85 c0             	test   %rax,%rax
   1300f:	74 21                	je     13032 <_ZN13num_perf_demo18make_mat_with_data17hbaffe87874e429bcE+0x52>
   13011:	c5 fb 11 44 24 20    	vmovsd %xmm0,0x20(%rsp)
   13017:	4c 89 e7             	mov    %r12,%rdi
   1301a:	ff 15 e8 4e 23 00    	callq  *0x234ee8(%rip)        # 247f08 <malloc@GLIBC_2.2.5>
   13020:	48 85 c0             	test   %rax,%rax
   13023:	0f 84 e3 00 00 00    	je     1310c <_ZN13num_perf_demo18make_mat_with_data17hbaffe87874e429bcE+0x12c>
   13029:	48 89 c1             	mov    %rax,%rcx
   1302c:	c5 fb 10 44 24 20    	vmovsd 0x20(%rsp),%xmm0
    v
   13032:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
   13037:	4c 89 7c 24 10       	mov    %r15,0x10(%rsp)
   1303c:	4c 89 7c 24 18       	mov    %r15,0x18(%rsp)
   13041:	48 85 db             	test   %rbx,%rbx
   13044:	0f 84 84 00 00 00    	je     130ce <_ZN13num_perf_demo18make_mat_with_data17hbaffe87874e429bcE+0xee>
   1304a:	4c 8d 04 dd 00 00 00 	lea    0x0(,%rbx,8),%r8
   13051:	00 
   13052:	31 d2                	xor    %edx,%edx
   13054:	c5 f9 6f 2d c4 73 02 	vmovdqa 0x273c4(%rip),%xmm5        # 3a420 <_fini+0xdc>
   1305b:	00 
   1305c:	c5 f9 28 0d cc 73 02 	vmovapd 0x273cc(%rip),%xmm1        # 3a430 <_fini+0xec>
   13063:	00 
   13064:	c5 fb 10 15 44 76 02 	vmovsd 0x27644(%rip),%xmm2        # 3a6b0 <_ZN4core7unicode12unicode_data2cc19BITSET_INDEX_CHUNKS17h8a1f39cd536e9344E+0x1f0>
   1306b:	00 
   1306c:	31 ff                	xor    %edi,%edi
   1306e:	66 90                	xchg   %ax,%ax
   13070:	c4 e1 f9 6e df       	vmovq  %rdi,%xmm3
   13075:	48 ff c7             	inc    %rdi
   13078:	c5 e1 62 dd          	vpunpckldq %xmm5,%xmm3,%xmm3
   1307c:	c5 e1 5c d9          	vsubpd %xmm1,%xmm3,%xmm3
   13080:	c5 e1 7c db          	vhaddpd %xmm3,%xmm3,%xmm3
   13084:	c5 e3 59 db          	vmulsd %xmm3,%xmm3,%xmm3
   13088:	31 c0                	xor    %eax,%eax
   1308a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   13090:	48 8d 34 02          	lea    (%rdx,%rax,1),%rsi
   13094:	49 39 f7             	cmp    %rsi,%r15
   13097:	76 5b                	jbe    130f4 <_ZN13num_perf_demo18make_mat_with_data17hbaffe87874e429bcE+0x114>
            let jd = j as f64;
   13099:	c4 e1 f9 6e e0       	vmovq  %rax,%xmm4
   1309e:	c5 d9 62 e5          	vpunpckldq %xmm5,%xmm4,%xmm4
   130a2:	c5 d9 5c e1          	vsubpd %xmm1,%xmm4,%xmm4
   130a6:	c5 d9 7c e4          	vhaddpd %xmm4,%xmm4,%xmm4
            mat[i * n + j] = (id * id) / (jd + 1.0 + s);
   130aa:	c5 db 58 e2          	vaddsd %xmm2,%xmm4,%xmm4
   130ae:	c5 db 58 e0          	vaddsd %xmm0,%xmm4,%xmm4
   130b2:	c5 e3 5e e4          	vdivsd %xmm4,%xmm3,%xmm4
   130b6:	c5 fb 11 24 c1       	vmovsd %xmm4,(%rcx,%rax,8)
   130bb:	48 ff c0             	inc    %rax
   130be:	48 39 c3             	cmp    %rax,%rbx
   130c1:	75 cd                	jne    13090 <_ZN13num_perf_demo18make_mat_with_data17hbaffe87874e429bcE+0xb0>
   130c3:	48 01 da             	add    %rbx,%rdx
   130c6:	4c 01 c1             	add    %r8,%rcx
   130c9:	48 39 df             	cmp    %rbx,%rdi
   130cc:	75 a2                	jne    13070 <_ZN13num_perf_demo18make_mat_with_data17hbaffe87874e429bcE+0x90>
    return mat;
   130ce:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   130d3:	49 89 46 10          	mov    %rax,0x10(%r14)
   130d7:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   130dc:	49 89 06             	mov    %rax,(%r14)
   130df:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   130e4:	49 89 46 08          	mov    %rax,0x8(%r14)
}
   130e8:	48 83 c4 28          	add    $0x28,%rsp
   130ec:	5b                   	pop    %rbx
   130ed:	41 5c                	pop    %r12
   130ef:	41 5e                	pop    %r14
   130f1:	41 5f                	pop    %r15
   130f3:	c3                   	retq   
   130f4:	48 8d 3d bd 38 23 00 	lea    0x2338bd(%rip),%rdi        # 2469b8 <__init_array_end+0x9a8>
   130fb:	4c 89 fa             	mov    %r15,%rdx
   130fe:	e8 fd 42 ff ff       	callq  7400 <_ZN4core9panicking18panic_bounds_check17h83121a2515f55ceeE>
   13103:	0f 0b                	ud2    
   13105:	e8 b6 04 00 00       	callq  135c0 <_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$11allocate_in28_$u7b$$u7b$closure$u7d$$u7d$17h571564fc3a49ddd9E>
   1310a:	0f 0b                	ud2    
   1310c:	be 08 00 00 00       	mov    $0x8,%esi
   13111:	4c 89 e7             	mov    %r12,%rdi
   13114:	e8 a7 23 ff ff       	callq  54c0 <_ZN5alloc5alloc18handle_alloc_error17hf7bb8682f6c8b1d7E>
   13119:	0f 0b                	ud2    
   1311b:	48 89 c3             	mov    %rax,%rbx
   1311e:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   13123:	e8 18 00 00 00       	callq  13140 <_ZN4core3ptr13drop_in_place17h755e731680b8f8beE>
   13128:	48 89 df             	mov    %rbx,%rdi
   1312b:	e8 70 0f ff ff       	callq  40a0 <_Unwind_Resume@plt>
   13130:	0f 0b                	ud2    
   13132:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   13139:	00 00 00 
   1313c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000013140 <_ZN4core3ptr13drop_in_place17h755e731680b8f8beE>:
   13140:	48 83 7f 08 00       	cmpq   $0x0,0x8(%rdi)
   13145:	74 09                	je     13150 <_ZN4core3ptr13drop_in_place17h755e731680b8f8beE+0x10>
   13147:	48 8b 3f             	mov    (%rdi),%rdi
   1314a:	ff 25 28 4c 23 00    	jmpq   *0x234c28(%rip)        # 247d78 <free@GLIBC_2.2.5>
   13150:	c3                   	retq   
   13151:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   13158:	00 00 00 
   1315b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000013160 <_ZN4core3ptr13drop_in_place17hc60da5e2e42bbe89E>:
   13160:	41 57                	push   %r15
   13162:	41 56                	push   %r14
   13164:	41 55                	push   %r13
   13166:	41 54                	push   %r12
   13168:	53                   	push   %rbx
   13169:	49 89 fe             	mov    %rdi,%r14
   1316c:	48 8b 47 10          	mov    0x10(%rdi),%rax
   13170:	48 85 c0             	test   %rax,%rax
   13173:	74 4c                	je     131c1 <_ZN4core3ptr13drop_in_place17hc60da5e2e42bbe89E+0x61>
   13175:	4d 8b 26             	mov    (%r14),%r12
   13178:	48 c1 e0 03          	shl    $0x3,%rax
   1317c:	4c 8d 3c 40          	lea    (%rax,%rax,2),%r15
   13180:	31 db                	xor    %ebx,%ebx
   13182:	4c 8b 2d ef 4b 23 00 	mov    0x234bef(%rip),%r13        # 247d78 <free@GLIBC_2.2.5>
   13189:	49 83 7c 1c 08 00    	cmpq   $0x0,0x8(%r12,%rbx,1)
   1318f:	75 20                	jne    131b1 <_ZN4core3ptr13drop_in_place17hc60da5e2e42bbe89E+0x51>
   13191:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   13198:	00 00 00 
   1319b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   131a0:	48 83 c3 18          	add    $0x18,%rbx
   131a4:	49 39 df             	cmp    %rbx,%r15
   131a7:	74 18                	je     131c1 <_ZN4core3ptr13drop_in_place17hc60da5e2e42bbe89E+0x61>
   131a9:	49 83 7c 1c 08 00    	cmpq   $0x0,0x8(%r12,%rbx,1)
   131af:	74 ef                	je     131a0 <_ZN4core3ptr13drop_in_place17hc60da5e2e42bbe89E+0x40>
   131b1:	49 8b 3c 1c          	mov    (%r12,%rbx,1),%rdi
   131b5:	41 ff d5             	callq  *%r13
   131b8:	48 83 c3 18          	add    $0x18,%rbx
   131bc:	49 39 df             	cmp    %rbx,%r15
   131bf:	75 e8                	jne    131a9 <_ZN4core3ptr13drop_in_place17hc60da5e2e42bbe89E+0x49>
   131c1:	49 83 7e 08 00       	cmpq   $0x0,0x8(%r14)
   131c6:	74 12                	je     131da <_ZN4core3ptr13drop_in_place17hc60da5e2e42bbe89E+0x7a>
   131c8:	49 8b 3e             	mov    (%r14),%rdi
   131cb:	5b                   	pop    %rbx
   131cc:	41 5c                	pop    %r12
   131ce:	41 5d                	pop    %r13
   131d0:	41 5e                	pop    %r14
   131d2:	41 5f                	pop    %r15
   131d4:	ff 25 9e 4b 23 00    	jmpq   *0x234b9e(%rip)        # 247d78 <free@GLIBC_2.2.5>
   131da:	5b                   	pop    %rbx
   131db:	41 5c                	pop    %r12
   131dd:	41 5d                	pop    %r13
   131df:	41 5e                	pop    %r14
   131e1:	41 5f                	pop    %r15
   131e3:	c3                   	retq   
   131e4:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   131eb:	00 00 00 
   131ee:	66 90                	xchg   %ax,%ax

00000000000131f0 <_ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17h8086494bb7307e60E>:

    fn helper<P, C>(
   131f0:	55                   	push   %rbp
   131f1:	41 57                	push   %r15
   131f3:	41 56                	push   %r14
   131f5:	41 55                	push   %r13
   131f7:	41 54                	push   %r12
   131f9:	53                   	push   %rbx
   131fa:	48 81 ec c8 00 00 00 	sub    $0xc8,%rsp
   13201:	4d 89 ce             	mov    %r9,%r14
   13204:	4c 89 44 24 08       	mov    %r8,0x8(%rsp)
   13209:	48 89 fb             	mov    %rdi,%rbx
   1320c:	4c 8b a4 24 00 01 00 	mov    0x100(%rsp),%r12
   13213:	00 
   13214:	48 89 7c 24 18       	mov    %rdi,0x18(%rsp)
   13219:	48 89 54 24 28       	mov    %rdx,0x28(%rsp)
   1321e:	48 89 4c 24 30       	mov    %rcx,0x30(%rsp)
        len / 2 >= self.min && self.inner.try_split(stolen)
   13223:	48 d1 eb             	shr    %rbx
   13226:	48 39 cb             	cmp    %rcx,%rbx
   13229:	0f 83 a3 00 00 00    	jae    132d2 <_ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17h8086494bb7307e60E+0xe2>
                    )
                },
            );
            reducer.reduce(left_result, right_result)
        } else {
            producer.fold_with(consumer.into_folder()).complete()
   1322f:	49 8b 04 24          	mov    (%r12),%rax
   13233:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   13238:	48 8b 6c 24 08       	mov    0x8(%rsp),%rbp
   1323d:	4c 29 f5             	sub    %r14,%rbp
   13240:	0f 83 b3 00 00 00    	jae    132f9 <_ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17h8086494bb7307e60E+0x109>
   13246:	4d 8b 6c 24 08       	mov    0x8(%r12),%r13
   1324b:	49 8b 44 24 10       	mov    0x10(%r12),%rax
   13250:	4d 8b 64 24 18       	mov    0x18(%r12),%r12
   13255:	48 c1 e0 03          	shl    $0x3,%rax
   13259:	4c 8d 3c 40          	lea    (%rax,%rax,2),%r15
   1325d:	45 31 f6             	xor    %r14d,%r14d
   13260:	31 db                	xor    %ebx,%ebx
   13262:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   13269:	00 00 00 
   1326c:	0f 1f 40 00          	nopl   0x0(%rax)
   13270:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   13275:	48 8d 14 18          	lea    (%rax,%rbx,1),%rdx
   13279:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
   1327e:	4c 89 e6             	mov    %r12,%rsi
   13281:	e8 0a 30 00 00       	callq  16290 <_ZN4core3ops8function5impls71_$LT$impl$u20$core..ops..function..FnMut$LT$A$GT$$u20$for$u20$$RF$F$GT$8call_mut17h16d4b4cde6b00bc1E>
   13286:	48 8b 44 24 40       	mov    0x40(%rsp),%rax
        for item in iter {
   1328b:	48 85 c0             	test   %rax,%rax
   1328e:	74 6b                	je     132fb <_ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17h8086494bb7307e60E+0x10b>
   13290:	c5 f8 10 44 24 48    	vmovups 0x48(%rsp),%xmm0
            self = self.consume(item);
   13296:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
   1329b:	c5 f8 11 44 24 48    	vmovups %xmm0,0x48(%rsp)
   132a1:	4d 39 f7             	cmp    %r14,%r15
   132a4:	0f 84 8a 02 00 00    	je     13534 <_ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17h8086494bb7307e60E+0x344>
   132aa:	48 8b 44 24 50       	mov    0x50(%rsp),%rax
   132af:	4b 89 44 35 10       	mov    %rax,0x10(%r13,%r14,1)
   132b4:	c5 fa 6f 44 24 40    	vmovdqu 0x40(%rsp),%xmm0
   132ba:	c4 81 7a 7f 44 35 00 	vmovdqu %xmm0,0x0(%r13,%r14,1)
            .expect("too many values pushed to consumer");
        unsafe {
            ptr::write(head, item);
        }

        self.local_writes += 1;
   132c1:	48 ff c3             	inc    %rbx
   132c4:	49 83 c6 18          	add    $0x18,%r14
   132c8:	48 89 e8             	mov    %rbp,%rax
   132cb:	48 01 d8             	add    %rbx,%rax
   132ce:	75 a0                	jne    13270 <_ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17h8086494bb7307e60E+0x80>
   132d0:	eb 29                	jmp    132fb <_ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17h8086494bb7307e60E+0x10b>
        if stolen {
   132d2:	40 84 f6             	test   %sil,%sil
   132d5:	74 32                	je     13309 <_ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17h8086494bb7307e60E+0x119>
   132d7:	64 48 83 3c 25 00 ff 	cmpq   $0x1,%fs:0xffffffffffffff00
   132de:	ff ff 01 
   132e1:	75 34                	jne    13317 <_ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17h8086494bb7307e60E+0x127>
   132e3:	64 48 8b 04 25 08 ff 	mov    %fs:0xffffffffffffff08,%rax
   132ea:	ff ff 
   132ec:	48 85 c0             	test   %rax,%rax
            if worker_thread.is_null() {
   132ef:	74 3a                	je     1332b <_ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17h8086494bb7307e60E+0x13b>
                (*worker_thread).registry.num_threads()
   132f1:	48 05 30 01 00 00    	add    $0x130,%rax
   132f7:	eb 44                	jmp    1333d <_ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17h8086494bb7307e60E+0x14d>
   132f9:	31 db                	xor    %ebx,%ebx
   132fb:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   13300:	f0 48 01 18          	lock add %rbx,(%rax)
   13304:	e9 19 02 00 00       	jmpq   13522 <_ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17h8086494bb7307e60E+0x332>
        } else if splits > 0 {
   13309:	48 85 d2             	test   %rdx,%rdx
   1330c:	0f 84 1d ff ff ff    	je     1322f <_ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17h8086494bb7307e60E+0x3f>
            self.splits /= 2;
   13312:	48 d1 ea             	shr    %rdx
   13315:	eb 3a                	jmp    13351 <_ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17h8086494bb7307e60E+0x161>
   13317:	b8 01 00 00 00       	mov    $0x1,%eax
   1331c:	c4 e1 f9 6e c0       	vmovq  %rax,%xmm0
   13321:	64 c5 f9 7f 04 25 00 	vmovdqa %xmm0,%fs:0xffffffffffffff00
   13328:	ff ff ff 
                global_registry().num_threads()
   1332b:	e8 60 74 00 00       	callq  1a790 <_ZN10rayon_core8registry15global_registry17h06f27f4bfc0c217dE>
            self.splits = cmp::max(crate::current_num_threads(), self.splits / 2);
   13330:	48 8b 54 24 28       	mov    0x28(%rsp),%rdx
            let mid = len / 2;
   13335:	48 8b 5c 24 18       	mov    0x18(%rsp),%rbx
   1333a:	48 d1 eb             	shr    %rbx
   1333d:	48 8b 00             	mov    (%rax),%rax
   13340:	48 8b 80 90 01 00 00 	mov    0x190(%rax),%rax
            self.splits = cmp::max(crate::current_num_threads(), self.splits / 2);
   13347:	48 d1 ea             	shr    %rdx
   1334a:	48 39 d0             	cmp    %rdx,%rax
   1334d:	48 0f 47 d0          	cmova  %rax,%rdx
   13351:	48 89 54 24 28       	mov    %rdx,0x28(%rsp)
            let mid = len / 2;
   13356:	48 89 5c 24 38       	mov    %rbx,0x38(%rsp)
   1335b:	31 c0                	xor    %eax,%eax
   1335d:	4c 89 f1             	mov    %r14,%rcx
   13360:	48 2b 4c 24 08       	sub    0x8(%rsp),%rcx
   13365:	48 0f 43 c1          	cmovae %rcx,%rax
            fn into_iter(self) -> Self::IntoIter {
                self.range
            }

            fn split_at(self, index: usize) -> (Self, Self) {
                assert!(index <= self.range.len());
   13369:	48 39 d8             	cmp    %rbx,%rax
   1336c:	0f 82 dc 01 00 00    	jb     1354e <_ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17h8086494bb7307e60E+0x35e>
            let (left_consumer, right_consumer, reducer) = consumer.split_at(mid);
   13372:	49 8b 6c 24 10       	mov    0x10(%r12),%rbp
   13377:	48 29 dd             	sub    %rbx,%rbp
   1337a:	0f 82 d5 01 00 00    	jb     13555 <_ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17h8086494bb7307e60E+0x365>
   13380:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   13385:	4c 8d 2c 03          	lea    (%rbx,%rax,1),%r13
   13389:	49 8b 04 24          	mov    (%r12),%rax
   1338d:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   13392:	4d 8b 7c 24 08       	mov    0x8(%r12),%r15
   13397:	4d 8b 64 24 18       	mov    0x18(%r12),%r12
   1339c:	48 8d 04 5b          	lea    (%rbx,%rbx,2),%rax
   133a0:	49 8d 04 c7          	lea    (%r15,%rax,8),%rax
   133a4:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   133a9:	64 48 83 3c 25 00 ff 	cmpq   $0x1,%fs:0xffffffffffffff00
   133b0:	ff ff 01 
   133b3:	0f 85 b1 00 00 00    	jne    1346a <_ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17h8086494bb7307e60E+0x27a>
   133b9:	64 48 8b 34 25 08 ff 	mov    %fs:0xffffffffffffff08,%rsi
   133c0:	ff ff 
   133c2:	48 85 f6             	test   %rsi,%rsi
    OP: FnOnce(&WorkerThread, bool) -> R + Send,
    R: Send,
{
    unsafe {
        let owner_thread = WorkerThread::current();
        if !owner_thread.is_null() {
   133c5:	0f 84 b3 00 00 00    	je     1347e <_ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17h8086494bb7307e60E+0x28e>
   133cb:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
   133d0:	48 8d 44 24 18       	lea    0x18(%rsp),%rax
            // Perfectly valid to give them a `&T`: this is the
            // current thread, so we know the data structure won't be
            // invalidated until we return.
            op(&*owner_thread, false)
   133d5:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
   133da:	4c 8d 44 24 38       	lea    0x38(%rsp),%r8
   133df:	4c 89 44 24 48       	mov    %r8,0x48(%rsp)
   133e4:	48 8d 4c 24 28       	lea    0x28(%rsp),%rcx
   133e9:	48 89 4c 24 50       	mov    %rcx,0x50(%rsp)
   133ee:	4c 89 6c 24 58       	mov    %r13,0x58(%rsp)
   133f3:	4c 89 74 24 60       	mov    %r14,0x60(%rsp)
   133f8:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
   133fd:	48 89 54 24 68       	mov    %rdx,0x68(%rsp)
   13402:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
   13407:	48 89 44 24 70       	mov    %rax,0x70(%rsp)
   1340c:	48 89 6c 24 78       	mov    %rbp,0x78(%rsp)
   13411:	4c 89 a4 24 80 00 00 	mov    %r12,0x80(%rsp)
   13418:	00 
   13419:	4c 89 84 24 88 00 00 	mov    %r8,0x88(%rsp)
   13420:	00 
   13421:	48 89 8c 24 90 00 00 	mov    %rcx,0x90(%rsp)
   13428:	00 
   13429:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   1342e:	48 89 84 24 98 00 00 	mov    %rax,0x98(%rsp)
   13435:	00 
   13436:	4c 89 ac 24 a0 00 00 	mov    %r13,0xa0(%rsp)
   1343d:	00 
   1343e:	48 89 94 24 a8 00 00 	mov    %rdx,0xa8(%rsp)
   13445:	00 
   13446:	4c 89 bc 24 b0 00 00 	mov    %r15,0xb0(%rsp)
   1344d:	00 
   1344e:	48 89 9c 24 b8 00 00 	mov    %rbx,0xb8(%rsp)
   13455:	00 
   13456:	4c 89 a4 24 c0 00 00 	mov    %r12,0xc0(%rsp)
   1345d:	00 
   1345e:	31 d2                	xor    %edx,%edx
   13460:	e8 4b 29 00 00       	callq  15db0 <_ZN10rayon_core4join12join_context28_$u7b$$u7b$closure$u7d$$u7d$17h580ded3148edaa3eE>
   13465:	e9 b8 00 00 00       	jmpq   13522 <_ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17h8086494bb7307e60E+0x332>
   1346a:	b8 01 00 00 00       	mov    $0x1,%eax
   1346f:	c4 e1 f9 6e c0       	vmovq  %rax,%xmm0
   13474:	64 c5 f9 7f 04 25 00 	vmovdqa %xmm0,%fs:0xffffffffffffff00
   1347b:	ff ff ff 
        } else {
            global_registry().in_worker_cold(op)
   1347e:	e8 0d 73 00 00       	callq  1a790 <_ZN10rayon_core8registry15global_registry17h06f27f4bfc0c217dE>
   13483:	48 8b 38             	mov    (%rax),%rdi
   13486:	48 83 ef 80          	sub    $0xffffffffffffff80,%rdi
   1348a:	48 8d 74 24 40       	lea    0x40(%rsp),%rsi
   1348f:	48 8d 44 24 18       	lea    0x18(%rsp),%rax
   13494:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
   13499:	4c 8d 44 24 38       	lea    0x38(%rsp),%r8
   1349e:	4c 89 44 24 48       	mov    %r8,0x48(%rsp)
   134a3:	48 8d 4c 24 28       	lea    0x28(%rsp),%rcx
   134a8:	48 89 4c 24 50       	mov    %rcx,0x50(%rsp)
   134ad:	4c 89 6c 24 58       	mov    %r13,0x58(%rsp)
   134b2:	4c 89 74 24 60       	mov    %r14,0x60(%rsp)
   134b7:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
   134bc:	48 89 54 24 68       	mov    %rdx,0x68(%rsp)
   134c1:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
   134c6:	48 89 44 24 70       	mov    %rax,0x70(%rsp)
   134cb:	48 89 6c 24 78       	mov    %rbp,0x78(%rsp)
   134d0:	4c 89 a4 24 80 00 00 	mov    %r12,0x80(%rsp)
   134d7:	00 
   134d8:	4c 89 84 24 88 00 00 	mov    %r8,0x88(%rsp)
   134df:	00 
   134e0:	48 89 8c 24 90 00 00 	mov    %rcx,0x90(%rsp)
   134e7:	00 
   134e8:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   134ed:	48 89 84 24 98 00 00 	mov    %rax,0x98(%rsp)
   134f4:	00 
   134f5:	4c 89 ac 24 a0 00 00 	mov    %r13,0xa0(%rsp)
   134fc:	00 
   134fd:	48 89 94 24 a8 00 00 	mov    %rdx,0xa8(%rsp)
   13504:	00 
   13505:	4c 89 bc 24 b0 00 00 	mov    %r15,0xb0(%rsp)
   1350c:	00 
   1350d:	48 89 9c 24 b8 00 00 	mov    %rbx,0xb8(%rsp)
   13514:	00 
   13515:	4c 89 a4 24 c0 00 00 	mov    %r12,0xc0(%rsp)
   1351c:	00 
   1351d:	e8 5e 26 00 00       	callq  15b80 <_ZN10rayon_core8registry8Registry14in_worker_cold17h1440de4dcd6654a7E>
        }
    }
   13522:	48 81 c4 c8 00 00 00 	add    $0xc8,%rsp
   13529:	5b                   	pop    %rbx
   1352a:	41 5c                	pop    %r12
   1352c:	41 5d                	pop    %r13
   1352e:	41 5e                	pop    %r14
   13530:	41 5f                	pop    %r15
   13532:	5d                   	pop    %rbp
   13533:	c3                   	retq   
   13534:	48 8d 3d 9d 97 02 00 	lea    0x2979d(%rip),%rdi        # 3ccd8 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x378>
   1353b:	48 8d 15 5e 34 23 00 	lea    0x23345e(%rip),%rdx        # 2469a0 <__init_array_end+0x990>
   13542:	be 22 00 00 00       	mov    $0x22,%esi
   13547:	e8 a4 66 ff ff       	callq  9bf0 <_ZN4core6option13expect_failed17h76ad4c74f3ea7214E>
   1354c:	0f 0b                	ud2    
   1354e:	e8 7d 39 00 00       	callq  16ed0 <_ZN3std9panicking11begin_panic17h949da488e1115dd1E>
   13553:	eb f7                	jmp    1354c <_ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17h8086494bb7307e60E+0x35c>
   13555:	48 8d 3d 60 97 02 00 	lea    0x29760(%rip),%rdi        # 3ccbc <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x35c>
   1355c:	48 8d 15 5d 33 23 00 	lea    0x23335d(%rip),%rdx        # 2468c0 <__init_array_end+0x8b0>
   13563:	be 1c 00 00 00       	mov    $0x1c,%esi
   13568:	e8 43 3e ff ff       	callq  73b0 <_ZN4core9panicking5panic17h6861470adfbddef8E>
   1356d:	eb dd                	jmp    1354c <_ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17h8086494bb7307e60E+0x35c>
   1356f:	48 89 c3             	mov    %rax,%rbx
   13572:	48 89 df             	mov    %rbx,%rdi
   13575:	e8 26 0b ff ff       	callq  40a0 <_Unwind_Resume@plt>
   1357a:	0f 0b                	ud2    
   1357c:	48 89 c3             	mov    %rax,%rbx
   1357f:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
        self
    }
   13584:	e8 b7 fb ff ff       	callq  13140 <_ZN4core3ptr13drop_in_place17h755e731680b8f8beE>
   13589:	48 89 df             	mov    %rbx,%rdi
   1358c:	e8 0f 0b ff ff       	callq  40a0 <_Unwind_Resume@plt>
   13591:	0f 0b                	ud2    
   13593:	48 89 c3             	mov    %rax,%rbx
   13596:	48 89 df             	mov    %rbx,%rdi
   13599:	e8 02 0b ff ff       	callq  40a0 <_Unwind_Resume@plt>
   1359e:	0f 0b                	ud2    
   135a0:	48 89 c3             	mov    %rax,%rbx
   135a3:	48 89 df             	mov    %rbx,%rdi
   135a6:	e8 f5 0a ff ff       	callq  40a0 <_Unwind_Resume@plt>
   135ab:	0f 0b                	ud2    
   135ad:	48 89 c3             	mov    %rax,%rbx
   135b0:	48 89 df             	mov    %rbx,%rdi
   135b3:	e8 e8 0a ff ff       	callq  40a0 <_Unwind_Resume@plt>
   135b8:	0f 0b                	ud2    
   135ba:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000000135c0 <_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$11allocate_in28_$u7b$$u7b$closure$u7d$$u7d$17h571564fc3a49ddd9E>:
   135c0:	50                   	push   %rax
   135c1:	e8 0a 1f ff ff       	callq  54d0 <_ZN5alloc7raw_vec17capacity_overflow17h9be7d3ce681ac1a6E>
   135c6:	0f 0b                	ud2    
   135c8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   135cf:	00 

00000000000135d0 <_ZN3std9panicking11begin_panic17he6f0f18d5c7f3243E>:
   135d0:	48 83 ec 18          	sub    $0x18,%rsp
   135d4:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
   135d9:	48 89 74 24 10       	mov    %rsi,0x10(%rsp)
   135de:	48 8d 35 73 33 23 00 	lea    0x233373(%rip),%rsi        # 246958 <__init_array_end+0x948>
   135e5:	48 8d 0d 54 33 23 00 	lea    0x233354(%rip),%rcx        # 246940 <__init_array_end+0x930>
   135ec:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   135f1:	31 d2                	xor    %edx,%edx
   135f3:	e8 88 04 01 00       	callq  23a80 <_ZN3std9panicking20rust_panic_with_hook17h7de8cfa1730f3618E>
   135f8:	0f 0b                	ud2    
   135fa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000013600 <_ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17h265c7cdb70ee0755E>:
    fn helper<P, C>(
   13600:	55                   	push   %rbp
   13601:	48 89 e5             	mov    %rsp,%rbp
   13604:	41 57                	push   %r15
   13606:	41 56                	push   %r14
   13608:	41 55                	push   %r13
   1360a:	41 54                	push   %r12
   1360c:	53                   	push   %rbx
   1360d:	48 83 e4 e0          	and    $0xffffffffffffffe0,%rsp
   13611:	48 81 ec 80 03 00 00 	sub    $0x380,%rsp
   13618:	4d 89 ce             	mov    %r9,%r14
   1361b:	4d 89 c7             	mov    %r8,%r15
   1361e:	48 89 fb             	mov    %rdi,%rbx
   13621:	48 89 7c 24 40       	mov    %rdi,0x40(%rsp)
   13626:	48 89 54 24 60       	mov    %rdx,0x60(%rsp)
   1362b:	48 89 4c 24 68       	mov    %rcx,0x68(%rsp)
        len / 2 >= self.min && self.inner.try_split(stolen)
   13630:	48 d1 eb             	shr    %rbx
   13633:	48 39 cb             	cmp    %rcx,%rbx
   13636:	73 3b                	jae    13673 <_ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17h265c7cdb70ee0755E+0x73>
            producer.fold_with(consumer.into_folder()).complete()
   13638:	49 8b 0f             	mov    (%r15),%rcx
   1363b:	48 85 c9             	test   %rcx,%rcx
   1363e:	0f 84 b4 0a 00 00    	je     140f8 <_ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17h265c7cdb70ee0755E+0xaf8>
   13644:	4d 8b 57 08          	mov    0x8(%r15),%r10
   13648:	49 8b 57 10          	mov    0x10(%r15),%rdx
   1364c:	49 8b 47 18          	mov    0x18(%r15),%rax
   13650:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   13655:	48 89 d0             	mov    %rdx,%rax
   13658:	48 85 d2             	test   %rdx,%rdx
   1365b:	74 5a                	je     136b7 <_ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17h265c7cdb70ee0755E+0xb7>
   1365d:	48 89 c2             	mov    %rax,%rdx
   13660:	48 09 ca             	or     %rcx,%rdx
   13663:	48 89 c7             	mov    %rax,%rdi
   13666:	48 c1 ea 20          	shr    $0x20,%rdx
   1366a:	74 62                	je     136ce <_ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17h265c7cdb70ee0755E+0xce>
   1366c:	31 d2                	xor    %edx,%edx
   1366e:	48 f7 f1             	div    %rcx
   13671:	eb 5f                	jmp    136d2 <_ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17h265c7cdb70ee0755E+0xd2>
        if stolen {
   13673:	40 84 f6             	test   %sil,%sil
   13676:	74 2d                	je     136a5 <_ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17h265c7cdb70ee0755E+0xa5>
   13678:	64 48 83 3c 25 00 ff 	cmpq   $0x1,%fs:0xffffffffffffff00
   1367f:	ff ff 01 
   13682:	0f 85 88 07 00 00    	jne    13e10 <_ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17h265c7cdb70ee0755E+0x810>
   13688:	64 48 8b 04 25 08 ff 	mov    %fs:0xffffffffffffff08,%rax
   1368f:	ff ff 
   13691:	48 85 c0             	test   %rax,%rax
            if worker_thread.is_null() {
   13694:	0f 84 8a 07 00 00    	je     13e24 <_ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17h265c7cdb70ee0755E+0x824>
                (*worker_thread).registry.num_threads()
   1369a:	48 05 30 01 00 00    	add    $0x130,%rax
   136a0:	e9 91 07 00 00       	jmpq   13e36 <_ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17h265c7cdb70ee0755E+0x836>
        } else if splits > 0 {
   136a5:	48 85 d2             	test   %rdx,%rdx
   136a8:	74 8e                	je     13638 <_ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17h265c7cdb70ee0755E+0x38>
   136aa:	4c 89 74 24 18       	mov    %r14,0x18(%rsp)
            self.splits /= 2;
   136af:	48 d1 ea             	shr    %rdx
   136b2:	e9 98 07 00 00       	jmpq   13e4f <_ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17h265c7cdb70ee0755E+0x84f>
   136b7:	48 89 c7             	mov    %rax,%rdi
   136ba:	31 d2                	xor    %edx,%edx
   136bc:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
        //
        // However, we should to use a precise end to the range, otherwise
        // reversing the iterator may have to walk back a long ways before
        // `Zip::next_back` can produce anything.
        let base = self.base.into_iter();
        let end = self.offset + base.len();
   136c1:	48 01 c2             	add    %rax,%rdx
   136c4:	48 39 d0             	cmp    %rdx,%rax
   136c7:	72 25                	jb     136ee <_ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17h265c7cdb70ee0755E+0xee>
   136c9:	e9 3f 09 00 00       	jmpq   1400d <_ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17h265c7cdb70ee0755E+0xa0d>
   136ce:	31 d2                	xor    %edx,%edx
   136d0:	f7 f1                	div    %ecx
   136d2:	48 83 fa 01          	cmp    $0x1,%rdx
   136d6:	48 83 d8 ff          	sbb    $0xffffffffffffffff,%rax
   136da:	48 89 c2             	mov    %rax,%rdx
   136dd:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   136e2:	48 01 c2             	add    %rax,%rdx
   136e5:	48 39 d0             	cmp    %rdx,%rax
   136e8:	0f 83 1f 09 00 00    	jae    1400d <_ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17h265c7cdb70ee0755E+0xa0d>
   136ee:	48 89 d0             	mov    %rdx,%rax
   136f1:	49 8b 16             	mov    (%r14),%rdx
   136f4:	48 89 54 24 48       	mov    %rdx,0x48(%rsp)
   136f9:	4d 8b 46 08          	mov    0x8(%r14),%r8
   136fd:	4d 8b 6e 10          	mov    0x10(%r14),%r13
   13701:	c5 f9 ef c0          	vpxor  %xmm0,%xmm0,%xmm0
   13705:	c5 f1 57 c9          	vxorpd %xmm1,%xmm1,%xmm1
   13709:	4c 89 84 24 08 01 00 	mov    %r8,0x108(%rsp)
   13710:	00 
   13711:	4c 89 6c 24 50       	mov    %r13,0x50(%rsp)
   13716:	48 89 8c 24 f8 00 00 	mov    %rcx,0xf8(%rsp)
   1371d:	00 
   1371e:	48 89 84 24 f0 00 00 	mov    %rax,0xf0(%rsp)
   13725:	00 
   13726:	48 85 ff             	test   %rdi,%rdi
   13729:	75 4e                	jne    13779 <_ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17h265c7cdb70ee0755E+0x179>
   1372b:	e9 dd 08 00 00       	jmpq   1400d <_ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17h265c7cdb70ee0755E+0xa0d>
   13730:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   13735:	48 89 c1             	mov    %rax,%rcx
   13738:	48 ff c1             	inc    %rcx
   1373b:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
   13740:	4d 8d 14 c2          	lea    (%r10,%rax,8),%r10
   13744:	48 8b bc 24 00 01 00 	mov    0x100(%rsp),%rdi
   1374b:	00 
   1374c:	48 29 c7             	sub    %rax,%rdi
   1374f:	48 89 c8             	mov    %rcx,%rax
   13752:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
   13757:	48 8b 84 24 f0 00 00 	mov    0xf0(%rsp),%rax
   1375e:	00 
   1375f:	48 39 c1             	cmp    %rax,%rcx
   13762:	48 8b 8c 24 f8 00 00 	mov    0xf8(%rsp),%rcx
   13769:	00 
   1376a:	0f 84 9d 08 00 00    	je     1400d <_ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17h265c7cdb70ee0755E+0xa0d>
   13770:	48 85 ff             	test   %rdi,%rdi
   13773:	0f 84 94 08 00 00    	je     1400d <_ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17h265c7cdb70ee0755E+0xa0d>
   13779:	48 39 cf             	cmp    %rcx,%rdi
   1377c:	48 89 fb             	mov    %rdi,%rbx
   1377f:	48 0f 47 d9          	cmova  %rcx,%rbx
   13783:	48 89 5c 24 30       	mov    %rbx,0x30(%rsp)
   13788:	48 8b 4c 24 48       	mov    0x48(%rsp),%rcx
   1378d:	48 8b 49 10          	mov    0x10(%rcx),%rcx
   13791:	48 3b 4c 24 10       	cmp    0x10(%rsp),%rcx
   13796:	0f 86 40 09 00 00    	jbe    140dc <_ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17h265c7cdb70ee0755E+0xadc>
   1379c:	48 89 bc 24 00 01 00 	mov    %rdi,0x100(%rsp)
   137a3:	00 
            for i in 0 .. n {
   137a4:	49 8b 00             	mov    (%r8),%rax
   137a7:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   137ac:	48 85 c0             	test   %rax,%rax
   137af:	0f 84 7b ff ff ff    	je     13730 <_ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17h265c7cdb70ee0755E+0x130>
   137b5:	48 8b 44 24 48       	mov    0x48(%rsp),%rax
   137ba:	48 8b 00             	mov    (%rax),%rax
   137bd:	48 8b 4c 24 10       	mov    0x10(%rsp),%rcx
   137c2:	48 8d 0c 49          	lea    (%rcx,%rcx,2),%rcx
   137c6:	4c 8d 24 c8          	lea    (%rax,%rcx,8),%r12
   137ca:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
   137cf:	48 8d 40 01          	lea    0x1(%rax),%rax
   137d3:	48 89 84 24 18 01 00 	mov    %rax,0x118(%rsp)
   137da:	00 
   137db:	b8 01 00 00 00       	mov    $0x1,%eax
   137e0:	4c 8b 4c 24 18       	mov    0x18(%rsp),%r9
   137e5:	4c 89 c9             	mov    %r9,%rcx
   137e8:	31 ff                	xor    %edi,%edi
   137ea:	31 d2                	xor    %edx,%edx
   137ec:	4c 89 94 24 10 01 00 	mov    %r10,0x110(%rsp)
   137f3:	00 
   137f4:	4c 89 64 24 38       	mov    %r12,0x38(%rsp)
   137f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   13800:	49 8b 5d 10          	mov    0x10(%r13),%rbx
   13804:	48 39 cb             	cmp    %rcx,%rbx
   13807:	0f 82 48 08 00 00    	jb     14055 <_ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17h265c7cdb70ee0755E+0xa55>
   1380d:	48 89 c6             	mov    %rax,%rsi
   13810:	4d 8b 74 24 10       	mov    0x10(%r12),%r14
macro_rules! impl_iter_zip {
    (($($a:tt),*), ($($b:tt),*), ($($n:tt),*)) => (
        impl<$($a),*> IntoSIMDZip for ($($a),*) where $($a : SIMDIterator + UnsafeIterator),* {
            #[inline(always)]
            fn zip(self) -> Zip<Self> {
                if $(self.0.len() != self.$n.len())||* {
   13815:	4c 89 f0             	mov    %r14,%rax
   13818:	4c 31 c8             	xor    %r9,%rax
   1381b:	48 83 f8 04          	cmp    $0x4,%rax
   1381f:	0f 83 1a 08 00 00    	jae    1403f <_ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17h265c7cdb70ee0755E+0xa3f>
   13825:	4d 89 d7             	mov    %r10,%r15
   13828:	48 89 54 24 20       	mov    %rdx,0x20(%rsp)
   1382d:	48 89 74 24 28       	mov    %rsi,0x28(%rsp)
   13832:	4c 89 e2             	mov    %r12,%rdx
   13835:	4d 8b 1c 24          	mov    (%r12),%r11
   13839:	49 8b 4d 00          	mov    0x0(%r13),%rcx
   1383d:	4c 8d 24 f9          	lea    (%rcx,%rdi,8),%r12
   13841:	c5 e9 57 d2          	vxorpd %xmm2,%xmm2,%xmm2
        if self.position + self.width() <= self.scalar_len() {
   13845:	49 83 fe 04          	cmp    $0x4,%r14
   13849:	73 15                	jae    13860 <_ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17h265c7cdb70ee0755E+0x260>
        impl<$($a),*> SIMDZippedIterator for Zip<($($a),*)>
            where $($a : SIMDIterator + UnsafeIterator),* {

            #[inline(always)]
            fn end(&mut self) -> Option<(Self::Vectors, usize)> {
                let pos = self.iters.0.scalar_pos();
   1384b:	45 31 d2             	xor    %r10d,%r10d
   1384e:	4c 89 e8             	mov    %r13,%rax
        if self.scalar_pos() < self.scalar_len() {
   13851:	4d 89 d5             	mov    %r10,%r13
   13854:	4d 29 f5             	sub    %r14,%r13
   13857:	72 54                	jb     138ad <_ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17h265c7cdb70ee0755E+0x2ad>
   13859:	e9 a2 00 00 00       	jmpq   13900 <_ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17h265c7cdb70ee0755E+0x300>
   1385e:	66 90                	xchg   %ax,%ax
   13860:	31 db                	xor    %ebx,%ebx
   13862:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   13869:	00 00 00 
   1386c:	0f 1f 40 00          	nopl   0x0(%rax)
   13870:	49 39 de             	cmp    %rbx,%r14
   13873:	0f 82 b6 07 00 00    	jb     1402f <_ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17h265c7cdb70ee0755E+0xa2f>
   13879:	49 39 d9             	cmp    %rbx,%r9
   1387c:	0f 82 9d 07 00 00    	jb     1401f <_ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17h265c7cdb70ee0755E+0xa1f>
   13882:	c4 c1 7d 10 1c db    	vmovupd (%r11,%rbx,8),%ymm3
        impl crate::ops::Mul for $id {
            type Output = Self;
            #[inline]
            fn mul(self, other: Self) -> Self {
                use crate::llvm::simd_mul;
                unsafe { Simd(simd_mul(self.0, other.0)) }
   13888:	c4 c1 65 59 1c dc    	vmulpd (%r12,%rbx,8),%ymm3,%ymm3
                unsafe { Simd(simd_add(self.0, other.0)) }
   1388e:	c5 ed 58 d3          	vaddpd %ymm3,%ymm2,%ymm2
        if self.position + self.width() <= self.scalar_len() {
   13892:	4c 8d 53 04          	lea    0x4(%rbx),%r10
   13896:	48 83 c3 08          	add    $0x8,%rbx
   1389a:	4c 39 f3             	cmp    %r14,%rbx
   1389d:	4c 89 d3             	mov    %r10,%rbx
   138a0:	76 ce                	jbe    13870 <_ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17h265c7cdb70ee0755E+0x270>
   138a2:	4c 89 e8             	mov    %r13,%rax
        if self.scalar_pos() < self.scalar_len() {
   138a5:	4d 89 d5             	mov    %r10,%r13
   138a8:	4d 29 f5             	sub    %r14,%r13
   138ab:	73 53                	jae    13900 <_ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17h265c7cdb70ee0755E+0x300>
            if self.width() < self.scalar_len() {
   138ad:	49 83 fe 04          	cmp    $0x4,%r14
   138b1:	48 89 4c 24 58       	mov    %rcx,0x58(%rsp)
   138b6:	76 78                	jbe    13930 <_ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17h265c7cdb70ee0755E+0x330>
   138b8:	bb 04 00 00 00       	mov    $0x4,%ebx
   138bd:	4c 29 eb             	sub    %r13,%rbx
   138c0:	48 81 fb 81 00 00 00 	cmp    $0x81,%rbx
   138c7:	0f 83 b1 07 00 00    	jae    1407e <_ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17h265c7cdb70ee0755E+0xa7e>
   138cd:	48 83 fb 7d          	cmp    $0x7d,%rbx
   138d1:	0f 83 b9 07 00 00    	jae    14090 <_ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17h265c7cdb70ee0755E+0xa90>
   138d7:	48 8d 05 6c 91 02 00 	lea    0x2916c(%rip),%rax        # 3ca4a <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0xea>
   138de:	c5 fe 6f 1c d8       	vmovdqu (%rax,%rbx,8),%ymm3
   138e3:	c4 83 7d 4c 5c f3 e0 	vpblendvb %ymm3,-0x20(%r11,%r14,8),%ymm0,%ymm3
   138ea:	30 
    unsafe fn end_unchecked(&mut self, offset: usize, empty_amt: usize) -> Self::Vector {
        debug_assert!(offset < self.scalar_len());
        let mut ret = self.default();
        debug_assert_eq!(empty_amt, self.width() - (self.scalar_len() - offset));
        // Right-align the partial vector to ensure the load is vectorized
        if self.width() < self.scalar_len() {
   138eb:	49 83 f9 04          	cmp    $0x4,%r9
   138ef:	0f 87 22 02 00 00    	ja     13b17 <_ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17h265c7cdb70ee0755E+0x517>
   138f5:	e9 66 02 00 00       	jmpq   13b60 <_ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17h265c7cdb70ee0755E+0x560>
   138fa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   13900:	49 89 c5             	mov    %rax,%r13
   13903:	4d 89 fa             	mov    %r15,%r10
   13906:	49 89 d4             	mov    %rdx,%r12
   13909:	48 8b 74 24 28       	mov    0x28(%rsp),%rsi
                c[i] = (
   1390e:	48 3b b4 24 18 01 00 	cmp    0x118(%rsp),%rsi
   13915:	00 
   13916:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
   1391b:	0f 85 8f 04 00 00    	jne    13db0 <_ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17h265c7cdb70ee0755E+0x7b0>
   13921:	e9 3f 07 00 00       	jmpq   14065 <_ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17h265c7cdb70ee0755E+0xa65>
   13926:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1392d:	00 00 00 
   13930:	45 89 f0             	mov    %r14d,%r8d
   13933:	45 29 d0             	sub    %r10d,%r8d
   13936:	4d 89 d7             	mov    %r10,%r15
   13939:	49 f7 d7             	not    %r15
   1393c:	4d 01 f7             	add    %r14,%r15
   1393f:	49 83 e0 07          	and    $0x7,%r8
   13943:	74 57                	je     1399c <_ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17h265c7cdb70ee0755E+0x39c>
   13945:	4b 8d 0c d3          	lea    (%r11,%r10,8),%rcx
   13949:	43 8d 14 12          	lea    (%r10,%r10,1),%edx
   1394d:	44 29 f2             	sub    %r14d,%edx
   13950:	83 c2 04             	add    $0x4,%edx
   13953:	c5 e1 57 db          	vxorpd %xmm3,%xmm3,%xmm3
   13957:	31 db                	xor    %ebx,%ebx
   13959:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
                *self.get_unchecked(offset)
   13960:	c5 fa 7e 24 d9       	vmovq  (%rcx,%rbx,8),%xmm4
   13965:	8d 04 1a             	lea    (%rdx,%rbx,1),%eax
   13968:	c5 fd 29 9c 24 40 03 	vmovapd %ymm3,0x340(%rsp)
   1396f:	00 00 
   13971:	83 e0 03             	and    $0x3,%eax
   13974:	c5 f9 d6 a4 c4 40 03 	vmovq  %xmm4,0x340(%rsp,%rax,8)
   1397b:	00 00 
   1397d:	c5 fd 28 9c 24 40 03 	vmovapd 0x340(%rsp),%ymm3
   13984:	00 00 
   13986:	48 ff c3             	inc    %rbx
   13989:	49 39 d8             	cmp    %rbx,%r8
   1398c:	75 d2                	jne    13960 <_ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17h265c7cdb70ee0755E+0x360>
   1398e:	4d 01 d0             	add    %r10,%r8
   13991:	49 83 ff 07          	cmp    $0x7,%r15
   13995:	73 16                	jae    139ad <_ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17h265c7cdb70ee0755E+0x3ad>
   13997:	e9 75 01 00 00       	jmpq   13b11 <_ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17h265c7cdb70ee0755E+0x511>
   1399c:	c5 e1 57 db          	vxorpd %xmm3,%xmm3,%xmm3
   139a0:	4d 89 d0             	mov    %r10,%r8
   139a3:	49 83 ff 07          	cmp    $0x7,%r15
   139a7:	0f 82 64 01 00 00    	jb     13b11 <_ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17h265c7cdb70ee0755E+0x511>
   139ad:	4d 89 f7             	mov    %r14,%r15
   139b0:	4d 29 c7             	sub    %r8,%r15
   139b3:	4b 8d 04 c3          	lea    (%r11,%r8,8),%rax
   139b7:	48 83 c0 38          	add    $0x38,%rax
   139bb:	4d 01 d0             	add    %r10,%r8
   139be:	4d 29 f0             	sub    %r14,%r8
   139c1:	49 83 c0 04          	add    $0x4,%r8
   139c5:	31 db                	xor    %ebx,%ebx
   139c7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   139ce:	00 00 
   139d0:	49 8d 14 18          	lea    (%r8,%rbx,1),%rdx
   139d4:	c5 fd 29 9c 24 40 02 	vmovapd %ymm3,0x240(%rsp)
   139db:	00 00 
   139dd:	89 d1                	mov    %edx,%ecx
   139df:	83 e1 03             	and    $0x3,%ecx
   139e2:	c5 fb 10 5c d8 c8    	vmovsd -0x38(%rax,%rbx,8),%xmm3
   139e8:	c5 fb 10 64 d8 d0    	vmovsd -0x30(%rax,%rbx,8),%xmm4
   139ee:	c5 fb 11 9c cc 40 02 	vmovsd %xmm3,0x240(%rsp,%rcx,8)
   139f5:	00 00 
   139f7:	c5 fc 28 9c 24 40 02 	vmovaps 0x240(%rsp),%ymm3
   139fe:	00 00 
   13a00:	c5 fc 29 9c 24 60 02 	vmovaps %ymm3,0x260(%rsp)
   13a07:	00 00 
   13a09:	8d 4a 01             	lea    0x1(%rdx),%ecx
   13a0c:	83 e1 03             	and    $0x3,%ecx
   13a0f:	c5 fb 11 a4 cc 60 02 	vmovsd %xmm4,0x260(%rsp,%rcx,8)
   13a16:	00 00 
   13a18:	c5 fc 28 9c 24 60 02 	vmovaps 0x260(%rsp),%ymm3
   13a1f:	00 00 
   13a21:	c5 fb 10 64 d8 d8    	vmovsd -0x28(%rax,%rbx,8),%xmm4
   13a27:	8d 4a 02             	lea    0x2(%rdx),%ecx
   13a2a:	c5 fc 29 9c 24 80 02 	vmovaps %ymm3,0x280(%rsp)
   13a31:	00 00 
   13a33:	83 e1 03             	and    $0x3,%ecx
   13a36:	c5 fb 11 a4 cc 80 02 	vmovsd %xmm4,0x280(%rsp,%rcx,8)
   13a3d:	00 00 
   13a3f:	c5 fc 28 9c 24 80 02 	vmovaps 0x280(%rsp),%ymm3
   13a46:	00 00 
   13a48:	c5 fb 10 64 d8 e0    	vmovsd -0x20(%rax,%rbx,8),%xmm4
   13a4e:	8d 4a ff             	lea    -0x1(%rdx),%ecx
   13a51:	c5 fc 29 9c 24 a0 02 	vmovaps %ymm3,0x2a0(%rsp)
   13a58:	00 00 
   13a5a:	83 e1 03             	and    $0x3,%ecx
   13a5d:	c5 fb 11 a4 cc a0 02 	vmovsd %xmm4,0x2a0(%rsp,%rcx,8)
   13a64:	00 00 
   13a66:	c5 fc 28 9c 24 a0 02 	vmovaps 0x2a0(%rsp),%ymm3
   13a6d:	00 00 
   13a6f:	c5 fb 10 64 d8 e8    	vmovsd -0x18(%rax,%rbx,8),%xmm4
   13a75:	c5 fc 29 9c 24 c0 02 	vmovaps %ymm3,0x2c0(%rsp)
   13a7c:	00 00 
   13a7e:	8d 72 04             	lea    0x4(%rdx),%esi
   13a81:	83 e6 03             	and    $0x3,%esi
   13a84:	c5 fb 11 a4 f4 c0 02 	vmovsd %xmm4,0x2c0(%rsp,%rsi,8)
   13a8b:	00 00 
   13a8d:	c5 fc 28 9c 24 c0 02 	vmovaps 0x2c0(%rsp),%ymm3
   13a94:	00 00 
   13a96:	c5 fb 10 64 d8 f0    	vmovsd -0x10(%rax,%rbx,8),%xmm4
   13a9c:	8d 72 05             	lea    0x5(%rdx),%esi
   13a9f:	c5 fc 29 9c 24 e0 02 	vmovaps %ymm3,0x2e0(%rsp)
   13aa6:	00 00 
   13aa8:	83 e6 03             	and    $0x3,%esi
   13aab:	c5 fb 11 a4 f4 e0 02 	vmovsd %xmm4,0x2e0(%rsp,%rsi,8)
   13ab2:	00 00 
   13ab4:	c5 fc 28 9c 24 e0 02 	vmovaps 0x2e0(%rsp),%ymm3
   13abb:	00 00 
   13abd:	c5 fb 10 64 d8 f8    	vmovsd -0x8(%rax,%rbx,8),%xmm4
   13ac3:	83 c2 06             	add    $0x6,%edx
   13ac6:	c5 fc 29 9c 24 00 03 	vmovaps %ymm3,0x300(%rsp)
   13acd:	00 00 
   13acf:	83 e2 03             	and    $0x3,%edx
   13ad2:	c5 fb 11 a4 d4 00 03 	vmovsd %xmm4,0x300(%rsp,%rdx,8)
   13ad9:	00 00 
   13adb:	c5 fc 28 9c 24 00 03 	vmovaps 0x300(%rsp),%ymm3
   13ae2:	00 00 
   13ae4:	c5 fa 7e 24 d8       	vmovq  (%rax,%rbx,8),%xmm4
   13ae9:	c5 fc 29 9c 24 20 03 	vmovaps %ymm3,0x320(%rsp)
   13af0:	00 00 
   13af2:	c5 f9 d6 a4 cc 20 03 	vmovq  %xmm4,0x320(%rsp,%rcx,8)
   13af9:	00 00 
   13afb:	c5 fd 28 9c 24 20 03 	vmovapd 0x320(%rsp),%ymm3
   13b02:	00 00 
   13b04:	48 83 c3 08          	add    $0x8,%rbx
   13b08:	49 39 df             	cmp    %rbx,%r15
   13b0b:	0f 85 bf fe ff ff    	jne    139d0 <_ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17h265c7cdb70ee0755E+0x3d0>
        if self.width() < self.scalar_len() {
   13b11:	49 83 f9 04          	cmp    $0x4,%r9
   13b15:	76 49                	jbe    13b60 <_ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17h265c7cdb70ee0755E+0x560>
   13b17:	bf 04 00 00 00       	mov    $0x4,%edi
   13b1c:	4c 29 ef             	sub    %r13,%rdi
   13b1f:	48 81 ff 81 00 00 00 	cmp    $0x81,%rdi
   13b26:	4c 8b 6c 24 50       	mov    0x50(%rsp),%r13
   13b2b:	48 8b 4c 24 38       	mov    0x38(%rsp),%rcx
   13b30:	0f 83 77 05 00 00    	jae    140ad <_ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17h265c7cdb70ee0755E+0xaad>
   13b36:	48 83 ff 7d          	cmp    $0x7d,%rdi
   13b3a:	0f 83 7c 05 00 00    	jae    140bc <_ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17h265c7cdb70ee0755E+0xabc>
   13b40:	48 8d 05 03 8f 02 00 	lea    0x28f03(%rip),%rax        # 3ca4a <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0xea>
   13b47:	c5 fe 6f 24 f8       	vmovdqu (%rax,%rdi,8),%ymm4
   13b4c:	c4 83 7d 4c 64 cc e0 	vpblendvb %ymm4,-0x20(%r12,%r9,8),%ymm0,%ymm4
   13b53:	40 
   13b54:	49 89 cc             	mov    %rcx,%r12
   13b57:	e9 24 02 00 00       	jmpq   13d80 <_ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17h265c7cdb70ee0755E+0x780>
   13b5c:	0f 1f 40 00          	nopl   0x0(%rax)
   13b60:	c5 d9 ef e4          	vpxor  %xmm4,%xmm4,%xmm4
   13b64:	4d 39 d1             	cmp    %r10,%r9
   13b67:	4c 8b 6c 24 50       	mov    0x50(%rsp),%r13
   13b6c:	4c 8b 64 24 38       	mov    0x38(%rsp),%r12
   13b71:	0f 86 09 02 00 00    	jbe    13d80 <_ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17h265c7cdb70ee0755E+0x780>
   13b77:	44 89 ca             	mov    %r9d,%edx
   13b7a:	44 29 d2             	sub    %r10d,%edx
   13b7d:	4d 89 d0             	mov    %r10,%r8
   13b80:	49 f7 d0             	not    %r8
   13b83:	4d 01 c8             	add    %r9,%r8
   13b86:	48 83 e2 07          	and    $0x7,%rdx
   13b8a:	74 65                	je     13bf1 <_ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17h265c7cdb70ee0755E+0x5f1>
   13b8c:	4a 8d 04 17          	lea    (%rdi,%r10,1),%rax
   13b90:	48 8b 4c 24 58       	mov    0x58(%rsp),%rcx
   13b95:	48 8d 0c c1          	lea    (%rcx,%rax,8),%rcx
   13b99:	43 8d 1c 12          	lea    (%r10,%r10,1),%ebx
   13b9d:	44 29 f3             	sub    %r14d,%ebx
   13ba0:	83 c3 04             	add    $0x4,%ebx
   13ba3:	c5 d9 ef e4          	vpxor  %xmm4,%xmm4,%xmm4
   13ba7:	31 c0                	xor    %eax,%eax
   13ba9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
                *self.get_unchecked(offset)
   13bb0:	c5 fb 10 2c c1       	vmovsd (%rcx,%rax,8),%xmm5
   13bb5:	8d 34 03             	lea    (%rbx,%rax,1),%esi
   13bb8:	c5 fd 7f a4 24 20 02 	vmovdqa %ymm4,0x220(%rsp)
   13bbf:	00 00 
   13bc1:	83 e6 03             	and    $0x3,%esi
   13bc4:	c5 fb 11 ac f4 20 02 	vmovsd %xmm5,0x220(%rsp,%rsi,8)
   13bcb:	00 00 
   13bcd:	c5 fd 6f a4 24 20 02 	vmovdqa 0x220(%rsp),%ymm4
   13bd4:	00 00 
   13bd6:	48 ff c0             	inc    %rax
   13bd9:	48 39 c2             	cmp    %rax,%rdx
   13bdc:	75 d2                	jne    13bb0 <_ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17h265c7cdb70ee0755E+0x5b0>
   13bde:	4c 01 d2             	add    %r10,%rdx
   13be1:	49 83 f8 07          	cmp    $0x7,%r8
   13be5:	4c 8b 64 24 38       	mov    0x38(%rsp),%r12
   13bea:	73 1b                	jae    13c07 <_ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17h265c7cdb70ee0755E+0x607>
   13bec:	e9 8f 01 00 00       	jmpq   13d80 <_ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17h265c7cdb70ee0755E+0x780>
   13bf1:	c5 d9 ef e4          	vpxor  %xmm4,%xmm4,%xmm4
   13bf5:	4c 89 d2             	mov    %r10,%rdx
   13bf8:	49 83 f8 07          	cmp    $0x7,%r8
   13bfc:	4c 8b 64 24 38       	mov    0x38(%rsp),%r12
   13c01:	0f 82 79 01 00 00    	jb     13d80 <_ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17h265c7cdb70ee0755E+0x780>
   13c07:	49 29 d1             	sub    %rdx,%r9
   13c0a:	48 01 d7             	add    %rdx,%rdi
   13c0d:	48 8b 44 24 58       	mov    0x58(%rsp),%rax
   13c12:	48 8d 04 f8          	lea    (%rax,%rdi,8),%rax
   13c16:	48 83 c0 38          	add    $0x38,%rax
   13c1a:	49 01 d2             	add    %rdx,%r10
   13c1d:	4d 29 f2             	sub    %r14,%r10
   13c20:	49 83 c2 04          	add    $0x4,%r10
   13c24:	31 c9                	xor    %ecx,%ecx
   13c26:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   13c2d:	00 00 00 
   13c30:	49 8d 14 0a          	lea    (%r10,%rcx,1),%rdx
   13c34:	c5 fd 7f a4 24 20 01 	vmovdqa %ymm4,0x120(%rsp)
   13c3b:	00 00 
   13c3d:	89 d6                	mov    %edx,%esi
   13c3f:	83 e6 03             	and    $0x3,%esi
   13c42:	c5 fb 10 64 c8 c8    	vmovsd -0x38(%rax,%rcx,8),%xmm4
   13c48:	c5 fb 10 6c c8 d0    	vmovsd -0x30(%rax,%rcx,8),%xmm5
   13c4e:	c5 fb 11 a4 f4 20 01 	vmovsd %xmm4,0x120(%rsp,%rsi,8)
   13c55:	00 00 
   13c57:	c5 fc 28 a4 24 20 01 	vmovaps 0x120(%rsp),%ymm4
   13c5e:	00 00 
   13c60:	c5 fc 29 a4 24 40 01 	vmovaps %ymm4,0x140(%rsp)
   13c67:	00 00 
   13c69:	8d 72 01             	lea    0x1(%rdx),%esi
   13c6c:	83 e6 03             	and    $0x3,%esi
   13c6f:	c5 fb 11 ac f4 40 01 	vmovsd %xmm5,0x140(%rsp,%rsi,8)
   13c76:	00 00 
   13c78:	c5 fc 28 a4 24 40 01 	vmovaps 0x140(%rsp),%ymm4
   13c7f:	00 00 
   13c81:	c5 fb 10 6c c8 d8    	vmovsd -0x28(%rax,%rcx,8),%xmm5
   13c87:	8d 72 02             	lea    0x2(%rdx),%esi
   13c8a:	c5 fc 29 a4 24 60 01 	vmovaps %ymm4,0x160(%rsp)
   13c91:	00 00 
   13c93:	83 e6 03             	and    $0x3,%esi
   13c96:	c5 fb 11 ac f4 60 01 	vmovsd %xmm5,0x160(%rsp,%rsi,8)
   13c9d:	00 00 
   13c9f:	c5 fc 28 a4 24 60 01 	vmovaps 0x160(%rsp),%ymm4
   13ca6:	00 00 
   13ca8:	c5 fb 10 6c c8 e0    	vmovsd -0x20(%rax,%rcx,8),%xmm5
   13cae:	8d 7a ff             	lea    -0x1(%rdx),%edi
   13cb1:	c5 fc 29 a4 24 80 01 	vmovaps %ymm4,0x180(%rsp)
   13cb8:	00 00 
   13cba:	83 e7 03             	and    $0x3,%edi
   13cbd:	c5 fb 11 ac fc 80 01 	vmovsd %xmm5,0x180(%rsp,%rdi,8)
   13cc4:	00 00 
   13cc6:	c5 fc 28 a4 24 80 01 	vmovaps 0x180(%rsp),%ymm4
   13ccd:	00 00 
   13ccf:	c5 fb 10 6c c8 e8    	vmovsd -0x18(%rax,%rcx,8),%xmm5
   13cd5:	c5 fc 29 a4 24 a0 01 	vmovaps %ymm4,0x1a0(%rsp)
   13cdc:	00 00 
   13cde:	8d 72 04             	lea    0x4(%rdx),%esi
   13ce1:	83 e6 03             	and    $0x3,%esi
   13ce4:	c5 fb 11 ac f4 a0 01 	vmovsd %xmm5,0x1a0(%rsp,%rsi,8)
   13ceb:	00 00 
   13ced:	c5 fc 28 a4 24 a0 01 	vmovaps 0x1a0(%rsp),%ymm4
   13cf4:	00 00 
   13cf6:	c5 fb 10 6c c8 f0    	vmovsd -0x10(%rax,%rcx,8),%xmm5
   13cfc:	8d 72 05             	lea    0x5(%rdx),%esi
   13cff:	c5 fc 29 a4 24 c0 01 	vmovaps %ymm4,0x1c0(%rsp)
   13d06:	00 00 
   13d08:	83 e6 03             	and    $0x3,%esi
   13d0b:	c5 fb 11 ac f4 c0 01 	vmovsd %xmm5,0x1c0(%rsp,%rsi,8)
   13d12:	00 00 
   13d14:	c5 fc 28 a4 24 c0 01 	vmovaps 0x1c0(%rsp),%ymm4
   13d1b:	00 00 
   13d1d:	c5 fb 10 6c c8 f8    	vmovsd -0x8(%rax,%rcx,8),%xmm5
   13d23:	83 c2 06             	add    $0x6,%edx
   13d26:	c5 fc 29 a4 24 e0 01 	vmovaps %ymm4,0x1e0(%rsp)
   13d2d:	00 00 
   13d2f:	83 e2 03             	and    $0x3,%edx
   13d32:	c5 fb 11 ac d4 e0 01 	vmovsd %xmm5,0x1e0(%rsp,%rdx,8)
   13d39:	00 00 
   13d3b:	c5 fc 28 a4 24 e0 01 	vmovaps 0x1e0(%rsp),%ymm4
   13d42:	00 00 
   13d44:	c5 fb 10 2c c8       	vmovsd (%rax,%rcx,8),%xmm5
   13d49:	c5 fc 29 a4 24 00 02 	vmovaps %ymm4,0x200(%rsp)
   13d50:	00 00 
   13d52:	c5 fb 11 ac fc 00 02 	vmovsd %xmm5,0x200(%rsp,%rdi,8)
   13d59:	00 00 
   13d5b:	c5 fd 6f a4 24 00 02 	vmovdqa 0x200(%rsp),%ymm4
   13d62:	00 00 
   13d64:	48 83 c1 08          	add    $0x8,%rcx
   13d68:	49 39 c9             	cmp    %rcx,%r9
   13d6b:	0f 85 bf fe ff ff    	jne    13c30 <_ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17h265c7cdb70ee0755E+0x630>
   13d71:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   13d78:	00 00 00 
   13d7b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
                unsafe { Simd(simd_mul(self.0, other.0)) }
   13d80:	c5 e5 59 dc          	vmulpd %ymm4,%ymm3,%ymm3
                unsafe { Simd(simd_add(self.0, other.0)) }
   13d84:	c5 ed 58 d3          	vaddpd %ymm3,%ymm2,%ymm2
   13d88:	4c 8b 94 24 10 01 00 	mov    0x110(%rsp),%r10
   13d8f:	00 
   13d90:	4c 8b 84 24 08 01 00 	mov    0x108(%rsp),%r8
   13d97:	00 
   13d98:	48 8b 74 24 28       	mov    0x28(%rsp),%rsi
   13d9d:	48 3b b4 24 18 01 00 	cmp    0x118(%rsp),%rsi
   13da4:	00 
   13da5:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
   13daa:	0f 84 b5 02 00 00    	je     14065 <_ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17h265c7cdb70ee0755E+0xa65>
   13db0:	c5 eb 58 d9          	vaddsd %xmm1,%xmm2,%xmm3
   13db4:	c4 e3 79 05 e2 01    	vpermilpd $0x1,%xmm2,%xmm4
   13dba:	c5 e3 58 dc          	vaddsd %xmm4,%xmm3,%xmm3
   13dbe:	c4 e3 7d 19 d2 01    	vextractf128 $0x1,%ymm2,%xmm2
   13dc4:	c5 e3 58 da          	vaddsd %xmm2,%xmm3,%xmm3
   13dc8:	c4 e3 79 05 d2 01    	vpermilpd $0x1,%xmm2,%xmm2
   13dce:	c5 e3 58 d2          	vaddsd %xmm2,%xmm3,%xmm2
   13dd2:	c4 c1 7b 11 14 c2    	vmovsd %xmm2,(%r10,%rax,8)
   13dd8:	48 3b 74 24 18       	cmp    0x18(%rsp),%rsi
   13ddd:	0f 84 4d f9 ff ff    	je     13730 <_ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17h265c7cdb70ee0755E+0x130>
                let ni = i * n;
   13de3:	4d 8b 08             	mov    (%r8),%r9
   13de6:	48 8d 46 01          	lea    0x1(%rsi),%rax
   13dea:	4c 89 cf             	mov    %r9,%rdi
   13ded:	48 0f af fe          	imul   %rsi,%rdi
                    A[ni .. (ni + n)].simd_iter(f64s(0.0)),
   13df1:	48 89 f9             	mov    %rdi,%rcx
   13df4:	48 89 f2             	mov    %rsi,%rdx
   13df7:	4c 01 c9             	add    %r9,%rcx
   13dfa:	0f 83 00 fa ff ff    	jae    13800 <_ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17h265c7cdb70ee0755E+0x200>
   13e00:	48 89 ce             	mov    %rcx,%rsi
   13e03:	c5 f8 77             	vzeroupper 
   13e06:	e8 45 3e ff ff       	callq  7c50 <_ZN4core5slice22slice_index_order_fail17h7bcf2f94ba9e06deE>
   13e0b:	e9 2d 02 00 00       	jmpq   1403d <_ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17h265c7cdb70ee0755E+0xa3d>
   13e10:	b8 01 00 00 00       	mov    $0x1,%eax
   13e15:	c4 e1 f9 6e c0       	vmovq  %rax,%xmm0
   13e1a:	64 c5 f9 7f 04 25 00 	vmovdqa %xmm0,%fs:0xffffffffffffff00
   13e21:	ff ff ff 
                global_registry().num_threads()
   13e24:	e8 67 69 00 00       	callq  1a790 <_ZN10rayon_core8registry15global_registry17h06f27f4bfc0c217dE>
            self.splits = cmp::max(crate::current_num_threads(), self.splits / 2);
   13e29:	48 8b 54 24 60       	mov    0x60(%rsp),%rdx
            let mid = len / 2;
   13e2e:	48 8b 5c 24 40       	mov    0x40(%rsp),%rbx
   13e33:	48 d1 eb             	shr    %rbx
   13e36:	4c 89 74 24 18       	mov    %r14,0x18(%rsp)
   13e3b:	48 8b 00             	mov    (%rax),%rax
   13e3e:	48 8b 80 90 01 00 00 	mov    0x190(%rax),%rax
            self.splits = cmp::max(crate::current_num_threads(), self.splits / 2);
   13e45:	48 d1 ea             	shr    %rdx
   13e48:	48 39 d0             	cmp    %rdx,%rax
   13e4b:	48 0f 47 d0          	cmova  %rax,%rdx
   13e4f:	48 89 54 24 60       	mov    %rdx,0x60(%rsp)
            let mid = len / 2;
   13e54:	48 89 5c 24 70       	mov    %rbx,0x70(%rsp)
            let (left_producer, right_producer) = producer.split_at(mid);
   13e59:	4d 8b 37             	mov    (%r15),%r14
   13e5c:	49 8b 47 08          	mov    0x8(%r15),%rax
   13e60:	4d 8b 67 10          	mov    0x10(%r15),%r12
    fn into_iter(self) -> Self::IntoIter {
        self.slice.chunks_mut(self.chunk_size)
    }

    fn split_at(self, index: usize) -> (Self, Self) {
        let elem_index = cmp::min(index * self.chunk_size, self.slice.len());
   13e64:	4d 89 f5             	mov    %r14,%r13
   13e67:	4c 0f af eb          	imul   %rbx,%r13
   13e6b:	4d 39 e5             	cmp    %r12,%r13
   13e6e:	4d 0f 47 ec          	cmova  %r12,%r13
   13e72:	4d 8b 7f 18          	mov    0x18(%r15),%r15
   13e76:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   13e7b:	4a 8d 04 e8          	lea    (%rax,%r13,8),%rax
   13e7f:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   13e84:	4d 29 ec             	sub    %r13,%r12
                base: left,
                offset: self.offset,
            },
            EnumerateProducer {
                base: right,
                offset: self.offset + index,
   13e87:	4c 01 fb             	add    %r15,%rbx
   13e8a:	64 48 83 3c 25 00 ff 	cmpq   $0x1,%fs:0xffffffffffffff00
   13e91:	ff ff 01 
   13e94:	0f 85 b6 00 00 00    	jne    13f50 <_ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17h265c7cdb70ee0755E+0x950>
   13e9a:	64 48 8b 34 25 08 ff 	mov    %fs:0xffffffffffffff08,%rsi
   13ea1:	ff ff 
   13ea3:	48 85 f6             	test   %rsi,%rsi
        if !owner_thread.is_null() {
   13ea6:	0f 84 b8 00 00 00    	je     13f64 <_ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17h265c7cdb70ee0755E+0x964>
   13eac:	48 8d 7c 24 78       	lea    0x78(%rsp),%rdi
   13eb1:	48 8d 44 24 40       	lea    0x40(%rsp),%rax
            op(&*owner_thread, false)
   13eb6:	48 89 44 24 78       	mov    %rax,0x78(%rsp)
   13ebb:	48 8d 44 24 70       	lea    0x70(%rsp),%rax
   13ec0:	48 89 84 24 80 00 00 	mov    %rax,0x80(%rsp)
   13ec7:	00 
   13ec8:	48 8d 4c 24 60       	lea    0x60(%rsp),%rcx
   13ecd:	48 89 8c 24 88 00 00 	mov    %rcx,0x88(%rsp)
   13ed4:	00 
   13ed5:	4c 89 b4 24 90 00 00 	mov    %r14,0x90(%rsp)
   13edc:	00 
   13edd:	48 8b 54 24 20       	mov    0x20(%rsp),%rdx
   13ee2:	48 89 94 24 98 00 00 	mov    %rdx,0x98(%rsp)
   13ee9:	00 
   13eea:	4c 89 a4 24 a0 00 00 	mov    %r12,0xa0(%rsp)
   13ef1:	00 
   13ef2:	48 89 9c 24 a8 00 00 	mov    %rbx,0xa8(%rsp)
   13ef9:	00 
   13efa:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
   13eff:	48 89 94 24 b0 00 00 	mov    %rdx,0xb0(%rsp)
   13f06:	00 
   13f07:	48 89 84 24 b8 00 00 	mov    %rax,0xb8(%rsp)
   13f0e:	00 
   13f0f:	48 89 8c 24 c0 00 00 	mov    %rcx,0xc0(%rsp)
   13f16:	00 
   13f17:	4c 89 b4 24 c8 00 00 	mov    %r14,0xc8(%rsp)
   13f1e:	00 
   13f1f:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
   13f24:	48 89 84 24 d0 00 00 	mov    %rax,0xd0(%rsp)
   13f2b:	00 
   13f2c:	4c 89 ac 24 d8 00 00 	mov    %r13,0xd8(%rsp)
   13f33:	00 
   13f34:	4c 89 bc 24 e0 00 00 	mov    %r15,0xe0(%rsp)
   13f3b:	00 
   13f3c:	48 89 94 24 e8 00 00 	mov    %rdx,0xe8(%rsp)
   13f43:	00 
   13f44:	31 d2                	xor    %edx,%edx
   13f46:	e8 05 04 00 00       	callq  14350 <_ZN10rayon_core4join12join_context28_$u7b$$u7b$closure$u7d$$u7d$17ha74c7762bad17d4fE>
   13f4b:	e9 bd 00 00 00       	jmpq   1400d <_ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17h265c7cdb70ee0755E+0xa0d>
   13f50:	b8 01 00 00 00       	mov    $0x1,%eax
   13f55:	c4 e1 f9 6e c0       	vmovq  %rax,%xmm0
   13f5a:	64 c5 f9 7f 04 25 00 	vmovdqa %xmm0,%fs:0xffffffffffffff00
   13f61:	ff ff ff 
            global_registry().in_worker_cold(op)
   13f64:	e8 27 68 00 00       	callq  1a790 <_ZN10rayon_core8registry15global_registry17h06f27f4bfc0c217dE>
   13f69:	48 8b 38             	mov    (%rax),%rdi
   13f6c:	48 83 ef 80          	sub    $0xffffffffffffff80,%rdi
   13f70:	48 8d 74 24 78       	lea    0x78(%rsp),%rsi
   13f75:	48 8d 44 24 40       	lea    0x40(%rsp),%rax
   13f7a:	48 89 44 24 78       	mov    %rax,0x78(%rsp)
   13f7f:	48 8d 44 24 70       	lea    0x70(%rsp),%rax
   13f84:	48 89 84 24 80 00 00 	mov    %rax,0x80(%rsp)
   13f8b:	00 
   13f8c:	48 8d 4c 24 60       	lea    0x60(%rsp),%rcx
   13f91:	48 89 8c 24 88 00 00 	mov    %rcx,0x88(%rsp)
   13f98:	00 
   13f99:	4c 89 b4 24 90 00 00 	mov    %r14,0x90(%rsp)
   13fa0:	00 
   13fa1:	48 8b 54 24 20       	mov    0x20(%rsp),%rdx
   13fa6:	48 89 94 24 98 00 00 	mov    %rdx,0x98(%rsp)
   13fad:	00 
   13fae:	4c 89 a4 24 a0 00 00 	mov    %r12,0xa0(%rsp)
   13fb5:	00 
   13fb6:	48 89 9c 24 a8 00 00 	mov    %rbx,0xa8(%rsp)
   13fbd:	00 
   13fbe:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
   13fc3:	48 89 94 24 b0 00 00 	mov    %rdx,0xb0(%rsp)
   13fca:	00 
   13fcb:	48 89 84 24 b8 00 00 	mov    %rax,0xb8(%rsp)
   13fd2:	00 
   13fd3:	48 89 8c 24 c0 00 00 	mov    %rcx,0xc0(%rsp)
   13fda:	00 
   13fdb:	4c 89 b4 24 c8 00 00 	mov    %r14,0xc8(%rsp)
   13fe2:	00 
   13fe3:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
   13fe8:	48 89 84 24 d0 00 00 	mov    %rax,0xd0(%rsp)
   13fef:	00 
   13ff0:	4c 89 ac 24 d8 00 00 	mov    %r13,0xd8(%rsp)
   13ff7:	00 
   13ff8:	4c 89 bc 24 e0 00 00 	mov    %r15,0xe0(%rsp)
   13fff:	00 
   14000:	48 89 94 24 e8 00 00 	mov    %rdx,0xe8(%rsp)
   14007:	00 
   14008:	e8 33 01 00 00       	callq  14140 <_ZN10rayon_core8registry8Registry14in_worker_cold17hbb6ef549199d0f25E>
    }
   1400d:	48 8d 65 d8          	lea    -0x28(%rbp),%rsp
   14011:	5b                   	pop    %rbx
   14012:	41 5c                	pop    %r12
   14014:	41 5d                	pop    %r13
   14016:	41 5e                	pop    %r14
   14018:	41 5f                	pop    %r15
   1401a:	5d                   	pop    %rbp
   1401b:	c5 f8 77             	vzeroupper 
   1401e:	c3                   	retq   
   1401f:	48 89 df             	mov    %rbx,%rdi
   14022:	4c 89 ce             	mov    %r9,%rsi
   14025:	c5 f8 77             	vzeroupper 
   14028:	e8 23 3c ff ff       	callq  7c50 <_ZN4core5slice22slice_index_order_fail17h7bcf2f94ba9e06deE>
   1402d:	eb 0e                	jmp    1403d <_ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17h265c7cdb70ee0755E+0xa3d>
   1402f:	48 89 df             	mov    %rbx,%rdi
   14032:	4c 89 f6             	mov    %r14,%rsi
   14035:	c5 f8 77             	vzeroupper 
   14038:	e8 13 3c ff ff       	callq  7c50 <_ZN4core5slice22slice_index_order_fail17h7bcf2f94ba9e06deE>
   1403d:	0f 0b                	ud2    
   1403f:	48 8d 3d e2 8a 02 00 	lea    0x28ae2(%rip),%rdi        # 3cb28 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x1c8>
   14046:	be 2e 00 00 00       	mov    $0x2e,%esi
   1404b:	c5 f8 77             	vzeroupper 
   1404e:	e8 7d f5 ff ff       	callq  135d0 <_ZN3std9panicking11begin_panic17he6f0f18d5c7f3243E>
   14053:	eb e8                	jmp    1403d <_ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17h265c7cdb70ee0755E+0xa3d>
   14055:	48 89 cf             	mov    %rcx,%rdi
   14058:	48 89 de             	mov    %rbx,%rsi
   1405b:	c5 f8 77             	vzeroupper 
   1405e:	e8 6d 3b ff ff       	callq  7bd0 <_ZN4core5slice20slice_index_len_fail17h52736412c1ce1871E>
   14063:	eb d8                	jmp    1403d <_ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17h265c7cdb70ee0755E+0xa3d>
                c[i] = (
   14065:	48 8d 3d 6c 28 23 00 	lea    0x23286c(%rip),%rdi        # 2468d8 <__init_array_end+0x8c8>
   1406c:	48 8b 54 24 30       	mov    0x30(%rsp),%rdx
   14071:	48 89 d6             	mov    %rdx,%rsi
   14074:	c5 f8 77             	vzeroupper 
   14077:	e8 84 33 ff ff       	callq  7400 <_ZN4core9panicking18panic_bounds_check17h83121a2515f55ceeE>
   1407c:	eb bf                	jmp    1403d <_ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17h265c7cdb70ee0755E+0xa3d>
   1407e:	be 80 00 00 00       	mov    $0x80,%esi
   14083:	48 89 df             	mov    %rbx,%rdi
   14086:	c5 f8 77             	vzeroupper 
   14089:	e8 c2 3b ff ff       	callq  7c50 <_ZN4core5slice22slice_index_order_fail17h7bcf2f94ba9e06deE>
   1408e:	eb ad                	jmp    1403d <_ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17h265c7cdb70ee0755E+0xa3d>
   14090:	48 8d 3d 33 8a 02 00 	lea    0x28a33(%rip),%rdi        # 3caca <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x16a>
   14097:	48 8d 15 3a 32 23 00 	lea    0x23323a(%rip),%rdx        # 2472d8 <__init_array_end+0x12c8>
   1409e:	be 22 00 00 00       	mov    $0x22,%esi
   140a3:	c5 f8 77             	vzeroupper 
   140a6:	e8 05 33 ff ff       	callq  73b0 <_ZN4core9panicking5panic17h6861470adfbddef8E>
   140ab:	eb 90                	jmp    1403d <_ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17h265c7cdb70ee0755E+0xa3d>
   140ad:	be 80 00 00 00       	mov    $0x80,%esi
   140b2:	c5 f8 77             	vzeroupper 
   140b5:	e8 96 3b ff ff       	callq  7c50 <_ZN4core5slice22slice_index_order_fail17h7bcf2f94ba9e06deE>
   140ba:	eb 81                	jmp    1403d <_ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17h265c7cdb70ee0755E+0xa3d>
   140bc:	48 8d 3d 07 8a 02 00 	lea    0x28a07(%rip),%rdi        # 3caca <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x16a>
   140c3:	48 8d 15 0e 32 23 00 	lea    0x23320e(%rip),%rdx        # 2472d8 <__init_array_end+0x12c8>
   140ca:	be 22 00 00 00       	mov    $0x22,%esi
   140cf:	c5 f8 77             	vzeroupper 
   140d2:	e8 d9 32 ff ff       	callq  73b0 <_ZN4core9panicking5panic17h6861470adfbddef8E>
   140d7:	e9 61 ff ff ff       	jmpq   1403d <_ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17h265c7cdb70ee0755E+0xa3d>
   140dc:	48 8d 3d 1d 2a 23 00 	lea    0x232a1d(%rip),%rdi        # 246b00 <__init_array_end+0xaf0>
   140e3:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
   140e8:	48 89 ca             	mov    %rcx,%rdx
   140eb:	c5 f8 77             	vzeroupper 
   140ee:	e8 0d 33 ff ff       	callq  7400 <_ZN4core9panicking18panic_bounds_check17h83121a2515f55ceeE>
   140f3:	e9 45 ff ff ff       	jmpq   1403d <_ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17h265c7cdb70ee0755E+0xa3d>
   140f8:	48 8d 3d 08 8a 02 00 	lea    0x28a08(%rip),%rdi        # 3cb07 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x1a7>
   140ff:	48 8d 15 ba 27 23 00 	lea    0x2327ba(%rip),%rdx        # 2468c0 <__init_array_end+0x8b0>
   14106:	be 21 00 00 00       	mov    $0x21,%esi
   1410b:	e8 a0 32 ff ff       	callq  73b0 <_ZN4core9panicking5panic17h6861470adfbddef8E>
   14110:	e9 28 ff ff ff       	jmpq   1403d <_ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17h265c7cdb70ee0755E+0xa3d>
   14115:	48 89 c7             	mov    %rax,%rdi
   14118:	e8 83 ff fe ff       	callq  40a0 <_Unwind_Resume@plt>
   1411d:	0f 0b                	ud2    
   1411f:	48 89 c7             	mov    %rax,%rdi
   14122:	e8 79 ff fe ff       	callq  40a0 <_Unwind_Resume@plt>
   14127:	0f 0b                	ud2    
   14129:	48 89 c7             	mov    %rax,%rdi
   1412c:	e8 6f ff fe ff       	callq  40a0 <_Unwind_Resume@plt>
   14131:	0f 0b                	ud2    
   14133:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1413a:	00 00 00 
   1413d:	0f 1f 00             	nopl   (%rax)

0000000000014140 <_ZN10rayon_core8registry8Registry14in_worker_cold17hbb6ef549199d0f25E>:
    unsafe fn in_worker_cold<OP, R>(&self, op: OP) -> R
   14140:	53                   	push   %rbx
   14141:	48 81 ec d0 01 00 00 	sub    $0x1d0,%rsp
   14148:	48 89 fb             	mov    %rdi,%rbx
   1414b:	c5 fc 10 06          	vmovups (%rsi),%ymm0
   1414f:	c5 fc 10 4e 20       	vmovups 0x20(%rsi),%ymm1
   14154:	c5 fc 10 56 40       	vmovups 0x40(%rsi),%ymm2
   14159:	c5 fc 10 5e 58       	vmovups 0x58(%rsi),%ymm3
   1415e:	c5 fc 11 9c 24 a8 01 	vmovups %ymm3,0x1a8(%rsp)
   14165:	00 00 
   14167:	c5 fc 11 94 24 90 01 	vmovups %ymm2,0x190(%rsp)
   1416e:	00 00 
   14170:	c5 fc 11 8c 24 70 01 	vmovups %ymm1,0x170(%rsp)
   14177:	00 00 
   14179:	c5 fc 11 84 24 50 01 	vmovups %ymm0,0x150(%rsp)
   14180:	00 00 
   14182:	64 48 83 3c 25 20 ff 	cmpq   $0x0,%fs:0xffffffffffffff20
   14189:	ff ff 00 
   1418c:	0f 84 15 01 00 00    	je     142a7 <_ZN10rayon_core8registry8Registry14in_worker_cold17hbb6ef549199d0f25E+0x167>
   14192:	64 48 8b 04 25 00 00 	mov    %fs:0x0,%rax
   14199:	00 00 
   1419b:	48 8d 80 20 ff ff ff 	lea    -0xe0(%rax),%rax
    L: Latch + Sync,
    F: FnOnce(bool) -> R + Send,
    R: Send,
{
    pub(super) fn new(func: F, latch: L) -> StackJob<L, F, R> {
        StackJob {
   141a2:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   141a7:	c5 fc 10 84 24 50 01 	vmovups 0x150(%rsp),%ymm0
   141ae:	00 00 
   141b0:	c5 fc 10 8c 24 70 01 	vmovups 0x170(%rsp),%ymm1
   141b7:	00 00 
   141b9:	c5 fc 10 94 24 90 01 	vmovups 0x190(%rsp),%ymm2
   141c0:	00 00 
   141c2:	c5 fc 10 9c 24 a8 01 	vmovups 0x1a8(%rsp),%ymm3
   141c9:	00 00 
   141cb:	c5 fc 11 44 24 20    	vmovups %ymm0,0x20(%rsp)
   141d1:	c5 fc 11 4c 24 40    	vmovups %ymm1,0x40(%rsp)
   141d7:	c5 fc 11 54 24 60    	vmovups %ymm2,0x60(%rsp)
   141dd:	c5 fc 11 5c 24 78    	vmovups %ymm3,0x78(%rsp)
   141e3:	48 c7 84 24 98 00 00 	movq   $0x0,0x98(%rsp)
   141ea:	00 00 00 00 00 
   141ef:	48 8d 44 24 18       	lea    0x18(%rsp),%rax
            self.inject(&[job.as_job_ref()]);
   141f4:	48 89 84 24 b0 00 00 	mov    %rax,0xb0(%rsp)
   141fb:	00 
   141fc:	48 8d 05 6d 14 00 00 	lea    0x146d(%rip),%rax        # 15670 <_ZN83_$LT$rayon_core..job..StackJob$LT$L$C$F$C$R$GT$$u20$as$u20$rayon_core..job..Job$GT$7execute17h2860a331ecebd953E>
   14203:	48 89 84 24 b8 00 00 	mov    %rax,0xb8(%rsp)
   1420a:	00 
   1420b:	48 8d b4 24 b0 00 00 	lea    0xb0(%rsp),%rsi
   14212:	00 
   14213:	48 89 df             	mov    %rbx,%rdi
   14216:	c5 f8 77             	vzeroupper 
   14219:	e8 b2 95 00 00       	callq  1d7d0 <_ZN10rayon_core8registry8Registry6inject17h8bda028524c76acfE>
            job.latch.wait_and_reset(); // Make sure we can use the same latch again next time.
   1421e:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
   14223:	e8 c8 48 00 00       	callq  18af0 <_ZN10rayon_core5latch9LockLatch14wait_and_reset17hdc8f700ff47d9cbaE>
            job.into_result()
   14228:	c5 fc 10 84 24 90 00 	vmovups 0x90(%rsp),%ymm0
   1422f:	00 00 
   14231:	c5 fc 11 84 24 28 01 	vmovups %ymm0,0x128(%rsp)
   14238:	00 00 
   1423a:	c5 fc 10 44 24 18    	vmovups 0x18(%rsp),%ymm0
   14240:	c5 fc 10 4c 24 58    	vmovups 0x58(%rsp),%ymm1
   14246:	c5 fc 10 54 24 78    	vmovups 0x78(%rsp),%ymm2
   1424c:	c5 fc 11 94 24 10 01 	vmovups %ymm2,0x110(%rsp)
   14253:	00 00 
   14255:	c5 fc 11 8c 24 f0 00 	vmovups %ymm1,0xf0(%rsp)
   1425c:	00 00 
   1425e:	c5 fc 10 4c 24 38    	vmovups 0x38(%rsp),%ymm1
   14264:	c5 fc 11 8c 24 d0 00 	vmovups %ymm1,0xd0(%rsp)
   1426b:	00 00 
   1426d:	c5 fc 11 84 24 b0 00 	vmovups %ymm0,0xb0(%rsp)
   14274:	00 00 
    pub(super) unsafe fn run_inline(self, stolen: bool) -> R {
        self.func.into_inner().unwrap()(stolen)
    }

    pub(super) unsafe fn into_result(self) -> R {
        self.result.into_inner().into_return_value()
   14276:	c5 f8 28 84 24 30 01 	vmovaps 0x130(%rsp),%xmm0
   1427d:	00 00 
   1427f:	c5 f8 29 04 24       	vmovaps %xmm0,(%rsp)
   14284:	48 8b 84 24 40 01 00 	mov    0x140(%rsp),%rax
   1428b:	00 
   1428c:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    /// its JobResult is populated) into its return value.
    ///
    /// NB. This will panic if the job panicked.
    pub(super) fn into_return_value(self) -> T {
        match self {
            JobResult::None => unreachable!(),
   14291:	48 8b 04 24          	mov    (%rsp),%rax
   14295:	48 83 f8 01          	cmp    $0x1,%rax
   14299:	75 46                	jne    142e1 <_ZN10rayon_core8registry8Registry14in_worker_cold17hbb6ef549199d0f25E+0x1a1>
    }
   1429b:	48 81 c4 d0 01 00 00 	add    $0x1d0,%rsp
   142a2:	5b                   	pop    %rbx
   142a3:	c5 f8 77             	vzeroupper 
   142a6:	c3                   	retq   
   142a7:	c5 f8 77             	vzeroupper 
   142aa:	e8 81 98 00 00       	callq  1db30 <_ZN3std6thread5local4fast12Key$LT$T$GT$14try_initialize17h279f24b71f56ef81E>
   142af:	48 85 c0             	test   %rax,%rax
   142b2:	0f 85 ea fe ff ff    	jne    141a2 <_ZN10rayon_core8registry8Registry14in_worker_cold17hbb6ef549199d0f25E+0x62>
   142b8:	48 8d 3d 01 94 02 00 	lea    0x29401(%rip),%rdi        # 3d6c0 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0xd60>
   142bf:	48 8d 0d c2 25 23 00 	lea    0x2325c2(%rip),%rcx        # 246888 <__init_array_end+0x878>
   142c6:	4c 8d 05 db 25 23 00 	lea    0x2325db(%rip),%r8        # 2468a8 <__init_array_end+0x898>
   142cd:	48 8d 94 24 b0 00 00 	lea    0xb0(%rsp),%rdx
   142d4:	00 
   142d5:	be 46 00 00 00       	mov    $0x46,%esi
   142da:	e8 81 59 ff ff       	callq  9c60 <_ZN4core6option18expect_none_failed17he0fec195c6e4c2ecE>
   142df:	0f 0b                	ud2    
   142e1:	48 85 c0             	test   %rax,%rax
   142e4:	74 14                	je     142fa <_ZN10rayon_core8registry8Registry14in_worker_cold17hbb6ef549199d0f25E+0x1ba>
            JobResult::Ok(x) => x,
            JobResult::Panic(x) => unwind::resume_unwinding(x),
   142e6:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   142eb:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
   142f0:	c5 f8 77             	vzeroupper 
   142f3:	e8 38 38 00 00       	callq  17b30 <_ZN10rayon_core6unwind16resume_unwinding17h10c44a275a145090E>
   142f8:	eb 14                	jmp    1430e <_ZN10rayon_core8registry8Registry14in_worker_cold17hbb6ef549199d0f25E+0x1ce>
   142fa:	48 8d 3d 20 93 02 00 	lea    0x29320(%rip),%rdi        # 3d621 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0xcc1>
   14301:	be 28 00 00 00       	mov    $0x28,%esi
   14306:	c5 f8 77             	vzeroupper 
   14309:	e8 c2 f2 ff ff       	callq  135d0 <_ZN3std9panicking11begin_panic17he6f0f18d5c7f3243E>
   1430e:	0f 0b                	ud2    
   14310:	48 89 c3             	mov    %rax,%rbx
   14313:	48 89 e7             	mov    %rsp,%rdi
        }
    }
   14316:	e8 a5 11 00 00       	callq  154c0 <_ZN4core3ptr13drop_in_place17h60456c2b44f09701E>
   1431b:	eb 1a                	jmp    14337 <_ZN10rayon_core8registry8Registry14in_worker_cold17hbb6ef549199d0f25E+0x1f7>
   1431d:	48 89 c3             	mov    %rax,%rbx
   14320:	48 89 df             	mov    %rbx,%rdi
   14323:	e8 78 fd fe ff       	callq  40a0 <_Unwind_Resume@plt>
   14328:	0f 0b                	ud2    
   1432a:	48 89 c3             	mov    %rax,%rbx
   1432d:	48 8d 7c 24 18       	lea    0x18(%rsp),%rdi
        })
   14332:	e8 c9 15 00 00       	callq  15900 <_ZN4core3ptr13drop_in_place17heb5e53c56f2c7aa8E>
   14337:	48 89 df             	mov    %rbx,%rdi
   1433a:	e8 61 fd fe ff       	callq  40a0 <_Unwind_Resume@plt>
   1433f:	0f 0b                	ud2    
   14341:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   14348:	00 00 00 
   1434b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000014350 <_ZN10rayon_core4join12join_context28_$u7b$$u7b$closure$u7d$$u7d$17ha74c7762bad17d4fE>:
    #[inline]
    fn call_b<R>(f: impl FnOnce(FnContext) -> R) -> impl FnOnce(bool) -> R {
        move |migrated| f(FnContext::new(migrated))
    }

    registry::in_worker(|worker_thread, injected| unsafe {
   14350:	55                   	push   %rbp
   14351:	41 57                	push   %r15
   14353:	41 56                	push   %r14
   14355:	41 55                	push   %r13
   14357:	41 54                	push   %r12
   14359:	53                   	push   %rbx
   1435a:	48 81 ec 18 01 00 00 	sub    $0x118,%rsp
   14361:	41 89 d6             	mov    %edx,%r14d
   14364:	48 89 f3             	mov    %rsi,%rbx
   14367:	49 89 fd             	mov    %rdi,%r13
        });

        // Create virtual wrapper for task b; this all has to be
        // done here so that the stack frame can keep it all live
        // long enough.
        let job_b = StackJob::new(call_b(oper_b), SpinLatch::new());
   1436a:	c5 fe 6f 07          	vmovdqu (%rdi),%ymm0
   1436e:	c5 fc 10 4f 20       	vmovups 0x20(%rdi),%ymm1
   14373:	c5 fc 11 8c 24 b0 00 	vmovups %ymm1,0xb0(%rsp)
   1437a:	00 00 
   1437c:	c5 fe 7f 84 24 90 00 	vmovdqu %ymm0,0x90(%rsp)
   14383:	00 00 
        StackJob {
   14385:	c6 84 24 e8 00 00 00 	movb   $0x0,0xe8(%rsp)
   1438c:	00 
   1438d:	48 c7 84 24 d0 00 00 	movq   $0x0,0xd0(%rsp)
   14394:	00 00 00 00 00 
    /// w.push(1);
    /// w.push(2);
    /// ```
    pub fn push(&self, task: T) {
        // Load the back index, front index, and buffer.
        let b = self.inner.back.load(Ordering::Relaxed);
   14399:	48 8b 86 00 01 00 00 	mov    0x100(%rsi),%rax
   143a0:	48 8b a8 08 01 00 00 	mov    0x108(%rax),%rbp
   143a7:	48 8b 80 00 01 00 00 	mov    0x100(%rax),%rax
        let f = self.inner.front.load(Ordering::Acquire);
        let mut buffer = self.buffer.get();
   143ae:	48 8b b6 10 01 00 00 	mov    0x110(%rsi),%rsi
   143b5:	48 89 e9             	mov    %rbp,%rcx
   143b8:	48 29 c1             	sub    %rax,%rcx

        // Calculate the length of the queue.
        let len = b.wrapping_sub(f);

        // Is the queue full?
        if len >= buffer.cap as isize {
   143bb:	48 39 f1             	cmp    %rsi,%rcx
   143be:	7c 19                	jl     143d9 <_ZN10rayon_core4join12join_context28_$u7b$$u7b$closure$u7d$$u7d$17ha74c7762bad17d4fE+0x89>
   143c0:	48 8d bb 00 01 00 00 	lea    0x100(%rbx),%rdi
            // Yes. Grow the underlying buffer.
            unsafe {
                self.resize(2 * buffer.cap);
   143c7:	48 01 f6             	add    %rsi,%rsi
   143ca:	c5 f8 77             	vzeroupper 
   143cd:	e8 ee 05 00 00       	callq  149c0 <_ZN15crossbeam_deque15Worker$LT$T$GT$6resize17hf7c4d42bebcabf15E>
            }
            buffer = self.buffer.get();
   143d2:	48 8b b3 10 01 00 00 	mov    0x110(%rbx),%rsi
   143d9:	48 8b 83 08 01 00 00 	mov    0x108(%rbx),%rax
        self.ptr.offset(index & (self.cap - 1) as isize)
   143e0:	48 ff ce             	dec    %rsi
   143e3:	48 21 ee             	and    %rbp,%rsi
   143e6:	48 c1 e6 04          	shl    $0x4,%rsi
   143ea:	4c 8d bc 24 90 00 00 	lea    0x90(%rsp),%r15
   143f1:	00 
   143f2:	4c 89 3c 30          	mov    %r15,(%rax,%rsi,1)
   143f6:	4c 8d 25 e3 03 00 00 	lea    0x3e3(%rip),%r12        # 147e0 <_ZN83_$LT$rayon_core..job..StackJob$LT$L$C$F$C$R$GT$$u20$as$u20$rayon_core..job..Job$GT$7execute17h175f731f2da1fe1dE>
   143fd:	4c 89 64 30 08       	mov    %r12,0x8(%rax,%rsi,1)

        // Increment the back index.
        //
        // This ordering could be `Relaxed`, but then thread sanitizer would falsely report data
        // races because it doesn't understand fences.
        self.inner.back.store(b.wrapping_add(1), Ordering::Release);
   14402:	48 8b 83 00 01 00 00 	mov    0x100(%rbx),%rax
   14409:	48 ff c5             	inc    %rbp
   1440c:	48 89 a8 08 01 00 00 	mov    %rbp,0x108(%rax)
        self.registry.sleep.tickle(self.index);
   14413:	48 8b bb 30 01 00 00 	mov    0x130(%rbx),%rdi
   1441a:	48 8b 87 98 01 00 00 	mov    0x198(%rdi),%rax
        // As described in README.md, this load must be SeqCst so as to ensure that:
        // - if anyone is sleepy or asleep, we *definitely* see that now (and not eventually);
        // - if anyone after us becomes sleepy or asleep, they see memory events that
        //   precede the call to `tickle()`, even though we did not do a write.
        let old_state = self.state.load(Ordering::SeqCst);
        if old_state != AWAKE {
   14421:	48 85 c0             	test   %rax,%rax
   14424:	74 0f                	je     14435 <_ZN10rayon_core4join12join_context28_$u7b$$u7b$closure$u7d$$u7d$17ha74c7762bad17d4fE+0xe5>
   14426:	48 81 c7 98 01 00 00 	add    $0x198,%rdi
            self.tickle_cold(worker_index);
   1442d:	c5 f8 77             	vzeroupper 
   14430:	e8 3b 3c 00 00       	callq  18070 <_ZN10rayon_core5sleep5Sleep11tickle_cold17h334403ad3bddecd8E>
   14435:	49 8b 45 40          	mov    0x40(%r13),%rax
   14439:	49 8b 4d 48          	mov    0x48(%r13),%rcx
   1443d:	4d 8b 4d 70          	mov    0x70(%r13),%r9
                        mid,
   14441:	48 8b 38             	mov    (%rax),%rdi
                        splitter,
   14444:	48 8b 11             	mov    (%rcx),%rdx
   14447:	48 8b 49 08          	mov    0x8(%rcx),%rcx
                        left_producer,
   1444b:	c4 c1 7e 6f 45 50    	vmovdqu 0x50(%r13),%ymm0
   14451:	c5 fe 7f 44 24 30    	vmovdqu %ymm0,0x30(%rsp)
                    helper(
   14457:	41 0f b6 ee          	movzbl %r14b,%ebp
   1445b:	4c 8d 44 24 30       	lea    0x30(%rsp),%r8
   14460:	89 ee                	mov    %ebp,%esi
   14462:	c5 f8 77             	vzeroupper 
   14465:	e8 96 f1 ff ff       	callq  13600 <_ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17h265c7cdb70ee0755E>
        let job_b_ref = job_b.as_job_ref();
        worker_thread.push(job_b_ref);

        // Execute task a; hopefully b gets stolen in the meantime.
        let status_a = unwind::halt_unwinding(call_a(oper_a, injected));
   1446a:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
   14471:	00 
   14472:	4c 8d b4 24 e8 00 00 	lea    0xe8(%rsp),%r14
   14479:	00 
   1447a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   14480:	0f b6 84 24 e8 00 00 	movzbl 0xe8(%rsp),%eax
   14487:	00 
   14488:	84 c0                	test   %al,%al
        // Now that task A has finished, try to pop job B from the
        // local stack.  It may already have been popped by job A; it
        // may also have been stolen. There may also be some tasks
        // pushed on top of it in the stack, and we will have to pop
        // those off to get to it.
        while !job_b.latch.probe() {
   1448a:	75 5a                	jne    144e6 <_ZN10rayon_core4join12join_context28_$u7b$$u7b$closure$u7d$$u7d$17ha74c7762bad17d4fE+0x196>
            if let Some(job) = worker_thread.take_local_job() {
   1448c:	48 89 df             	mov    %rbx,%rdi
   1448f:	e8 5c 0b 00 00       	callq  14ff0 <_ZN10rayon_core8registry12WorkerThread14take_local_job17h6acdab09e45847e8E>
   14494:	48 85 d2             	test   %rdx,%rdx
   14497:	74 34                	je     144cd <_ZN10rayon_core4join12join_context28_$u7b$$u7b$closure$u7d$$u7d$17ha74c7762bad17d4fE+0x17d>
    pointer: *const (),
   14499:	4c 39 f8             	cmp    %r15,%rax
    execute_fn: unsafe fn(*const ()),
   1449c:	75 09                	jne    144a7 <_ZN10rayon_core4join12join_context28_$u7b$$u7b$closure$u7d$$u7d$17ha74c7762bad17d4fE+0x157>
   1449e:	4c 39 e2             	cmp    %r12,%rdx
   144a1:	0f 84 b3 00 00 00    	je     1455a <_ZN10rayon_core4join12join_context28_$u7b$$u7b$closure$u7d$$u7d$17ha74c7762bad17d4fE+0x20a>
        (self.execute_fn)(self.pointer)
   144a7:	48 89 c7             	mov    %rax,%rdi
   144aa:	ff d2                	callq  *%rdx
        self.registry.sleep.tickle(self.index);
   144ac:	48 8b bb 30 01 00 00 	mov    0x130(%rbx),%rdi
   144b3:	48 8b 87 98 01 00 00 	mov    0x198(%rdi),%rax
        if old_state != AWAKE {
   144ba:	48 85 c0             	test   %rax,%rax
   144bd:	74 c1                	je     14480 <_ZN10rayon_core4join12join_context28_$u7b$$u7b$closure$u7d$$u7d$17ha74c7762bad17d4fE+0x130>
   144bf:	48 81 c7 98 01 00 00 	add    $0x198,%rdi
            self.tickle_cold(worker_index);
   144c6:	e8 a5 3b 00 00       	callq  18070 <_ZN10rayon_core5sleep5Sleep11tickle_cold17h334403ad3bddecd8E>
   144cb:	eb b3                	jmp    14480 <_ZN10rayon_core4join12join_context28_$u7b$$u7b$closure$u7d$$u7d$17ha74c7762bad17d4fE+0x130>
   144cd:	8a 84 24 e8 00 00 00 	mov    0xe8(%rsp),%al
   144d4:	84 c0                	test   %al,%al
        if !latch.probe() {
   144d6:	75 0e                	jne    144e6 <_ZN10rayon_core4join12join_context28_$u7b$$u7b$closure$u7d$$u7d$17ha74c7762bad17d4fE+0x196>
   144d8:	40 b5 01             	mov    $0x1,%bpl
            self.wait_until_cold(latch);
   144db:	48 89 df             	mov    %rbx,%rdi
   144de:	4c 89 f6             	mov    %r14,%rsi
   144e1:	e8 7a 0c 00 00       	callq  15160 <_ZN10rayon_core8registry12WorkerThread15wait_until_cold17h2e02f3e12907157bE>
                debug_assert!(job_b.latch.probe());
                break;
            }
        }

        (result_a, job_b.into_result())
   144e6:	c5 fc 10 84 24 90 00 	vmovups 0x90(%rsp),%ymm0
   144ed:	00 00 
   144ef:	c5 fc 10 8c 24 d0 00 	vmovups 0xd0(%rsp),%ymm1
   144f6:	00 00 
   144f8:	c5 fc 11 4c 24 70    	vmovups %ymm1,0x70(%rsp)
   144fe:	c5 fc 10 8c 24 b0 00 	vmovups 0xb0(%rsp),%ymm1
   14505:	00 00 
   14507:	c5 fc 11 4c 24 50    	vmovups %ymm1,0x50(%rsp)
   1450d:	c5 fc 11 44 24 30    	vmovups %ymm0,0x30(%rsp)
        self.result.into_inner().into_return_value()
   14513:	c5 f9 6f 44 24 70    	vmovdqa 0x70(%rsp),%xmm0
   14519:	c5 f9 7f 44 24 10    	vmovdqa %xmm0,0x10(%rsp)
   1451f:	48 8b 84 24 80 00 00 	mov    0x80(%rsp),%rax
   14526:	00 
   14527:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
            JobResult::None => unreachable!(),
   1452c:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   14531:	48 83 f8 01          	cmp    $0x1,%rax
   14535:	0f 85 08 01 00 00    	jne    14643 <_ZN10rayon_core4join12join_context28_$u7b$$u7b$closure$u7d$$u7d$17ha74c7762bad17d4fE+0x2f3>
    })
   1453b:	48 8b 2c 24          	mov    (%rsp),%rbp
   1453f:	48 85 ed             	test   %rbp,%rbp
   14542:	0f 84 e6 00 00 00    	je     1462e <_ZN10rayon_core4join12join_context28_$u7b$$u7b$closure$u7d$$u7d$17ha74c7762bad17d4fE+0x2de>
   14548:	48 8b 5c 24 08       	mov    0x8(%rsp),%rbx
   1454d:	48 89 ef             	mov    %rbp,%rdi
   14550:	c5 f8 77             	vzeroupper 
   14553:	ff 13                	callq  *(%rbx)
   14555:	e9 c4 00 00 00       	jmpq   1461e <_ZN10rayon_core4join12join_context28_$u7b$$u7b$closure$u7d$$u7d$17ha74c7762bad17d4fE+0x2ce>
                    let result_b = job_b.run_inline(injected);
   1455a:	c5 fc 10 84 24 90 00 	vmovups 0x90(%rsp),%ymm0
   14561:	00 00 
   14563:	c5 fc 10 8c 24 d0 00 	vmovups 0xd0(%rsp),%ymm1
   1456a:	00 00 
   1456c:	c5 fc 11 4c 24 70    	vmovups %ymm1,0x70(%rsp)
   14572:	c5 fc 10 8c 24 b0 00 	vmovups 0xb0(%rsp),%ymm1
   14579:	00 00 
   1457b:	c5 fc 11 4c 24 50    	vmovups %ymm1,0x50(%rsp)
   14581:	c5 fc 11 44 24 30    	vmovups %ymm0,0x30(%rsp)
        self.func.into_inner().unwrap()(stolen)
   14587:	48 8b 54 24 30       	mov    0x30(%rsp),%rdx
   1458c:	48 8b 4c 24 38       	mov    0x38(%rsp),%rcx
   14591:	48 8b 44 24 40       	mov    0x40(%rsp),%rax
   14596:	c5 fe 6f 44 24 48    	vmovdqu 0x48(%rsp),%ymm0
   1459c:	c5 fe 7f 44 24 10    	vmovdqu %ymm0,0x10(%rsp)
   145a2:	48 85 d2             	test   %rdx,%rdx
   145a5:	0f 84 cd 00 00 00    	je     14678 <_ZN10rayon_core4join12join_context28_$u7b$$u7b$closure$u7d$$u7d$17ha74c7762bad17d4fE+0x328>
   145ab:	4c 8b 4c 24 68       	mov    0x68(%rsp),%r9
   145b0:	c5 fe 6f 44 24 10    	vmovdqu 0x10(%rsp),%ymm0
   145b6:	c5 fe 7f 84 24 f0 00 	vmovdqu %ymm0,0xf0(%rsp)
   145bd:	00 00 
                        len - mid,
   145bf:	48 8b 3a             	mov    (%rdx),%rdi
   145c2:	48 2b 39             	sub    (%rcx),%rdi
                        splitter,
   145c5:	48 8b 10             	mov    (%rax),%rdx
   145c8:	48 8b 48 08          	mov    0x8(%rax),%rcx
                        right_producer,
   145cc:	c5 fe 7f 44 24 10    	vmovdqu %ymm0,0x10(%rsp)
   145d2:	4c 8d 44 24 10       	lea    0x10(%rsp),%r8
                    helper(
   145d7:	89 ee                	mov    %ebp,%esi
   145d9:	c5 f8 77             	vzeroupper 
   145dc:	e8 1f f0 ff ff       	callq  13600 <_ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17h265c7cdb70ee0755E>
   145e1:	48 83 7c 24 70 02    	cmpq   $0x2,0x70(%rsp)
   145e7:	72 22                	jb     1460b <_ZN10rayon_core4join12join_context28_$u7b$$u7b$closure$u7d$$u7d$17ha74c7762bad17d4fE+0x2bb>
   145e9:	48 8b 6c 24 78       	mov    0x78(%rsp),%rbp
   145ee:	48 8b 9c 24 80 00 00 	mov    0x80(%rsp),%rbx
   145f5:	00 
   145f6:	48 89 ef             	mov    %rbp,%rdi
   145f9:	ff 13                	callq  *(%rbx)
   145fb:	48 83 7b 08 00       	cmpq   $0x0,0x8(%rbx)
   14600:	74 09                	je     1460b <_ZN10rayon_core4join12join_context28_$u7b$$u7b$closure$u7d$$u7d$17ha74c7762bad17d4fE+0x2bb>
   14602:	48 89 ef             	mov    %rbp,%rdi
   14605:	ff 15 6d 37 23 00    	callq  *0x23376d(%rip)        # 247d78 <free@GLIBC_2.2.5>
    })
   1460b:	48 8b 2c 24          	mov    (%rsp),%rbp
   1460f:	48 85 ed             	test   %rbp,%rbp
   14612:	74 1a                	je     1462e <_ZN10rayon_core4join12join_context28_$u7b$$u7b$closure$u7d$$u7d$17ha74c7762bad17d4fE+0x2de>
   14614:	48 8b 5c 24 08       	mov    0x8(%rsp),%rbx
   14619:	48 89 ef             	mov    %rbp,%rdi
   1461c:	ff 13                	callq  *(%rbx)
   1461e:	48 83 7b 08 00       	cmpq   $0x0,0x8(%rbx)
   14623:	74 09                	je     1462e <_ZN10rayon_core4join12join_context28_$u7b$$u7b$closure$u7d$$u7d$17ha74c7762bad17d4fE+0x2de>
   14625:	48 89 ef             	mov    %rbp,%rdi
   14628:	ff 15 4a 37 23 00    	callq  *0x23374a(%rip)        # 247d78 <free@GLIBC_2.2.5>
   1462e:	48 81 c4 18 01 00 00 	add    $0x118,%rsp
   14635:	5b                   	pop    %rbx
   14636:	41 5c                	pop    %r12
   14638:	41 5d                	pop    %r13
   1463a:	41 5e                	pop    %r14
   1463c:	41 5f                	pop    %r15
   1463e:	5d                   	pop    %rbp
   1463f:	c5 f8 77             	vzeroupper 
   14642:	c3                   	retq   
            JobResult::None => unreachable!(),
   14643:	48 85 c0             	test   %rax,%rax
   14646:	74 17                	je     1465f <_ZN10rayon_core4join12join_context28_$u7b$$u7b$closure$u7d$$u7d$17ha74c7762bad17d4fE+0x30f>
            JobResult::Panic(x) => unwind::resume_unwinding(x),
   14648:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
   1464d:	48 8b 74 24 20       	mov    0x20(%rsp),%rsi
   14652:	c5 f8 77             	vzeroupper 
   14655:	e8 d6 34 00 00       	callq  17b30 <_ZN10rayon_core6unwind16resume_unwinding17h10c44a275a145090E>
   1465a:	e9 24 01 00 00       	jmpq   14783 <_ZN10rayon_core4join12join_context28_$u7b$$u7b$closure$u7d$$u7d$17ha74c7762bad17d4fE+0x433>
   1465f:	48 8d 3d bb 8f 02 00 	lea    0x28fbb(%rip),%rdi        # 3d621 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0xcc1>
   14666:	be 28 00 00 00       	mov    $0x28,%esi
   1466b:	c5 f8 77             	vzeroupper 
   1466e:	e8 5d ef ff ff       	callq  135d0 <_ZN3std9panicking11begin_panic17he6f0f18d5c7f3243E>
   14673:	e9 0b 01 00 00       	jmpq   14783 <_ZN10rayon_core4join12join_context28_$u7b$$u7b$closure$u7d$$u7d$17ha74c7762bad17d4fE+0x433>
   14678:	48 8d 3d a2 8c 02 00 	lea    0x28ca2(%rip),%rdi        # 3d321 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x9c1>
   1467f:	48 8d 15 6a 22 23 00 	lea    0x23226a(%rip),%rdx        # 2468f0 <__init_array_end+0x8e0>
   14686:	be 2b 00 00 00       	mov    $0x2b,%esi
   1468b:	c5 f8 77             	vzeroupper 
   1468e:	e8 1d 2d ff ff       	callq  73b0 <_ZN4core9panicking5panic17h6861470adfbddef8E>
   14693:	e9 eb 00 00 00       	jmpq   14783 <_ZN10rayon_core4join12join_context28_$u7b$$u7b$closure$u7d$$u7d$17ha74c7762bad17d4fE+0x433>
   14698:	49 89 c6             	mov    %rax,%r14
   1469b:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
    }
   146a0:	e8 1b 0e 00 00       	callq  154c0 <_ZN4core3ptr13drop_in_place17h60456c2b44f09701E>
   146a5:	eb 14                	jmp    146bb <_ZN10rayon_core4join12join_context28_$u7b$$u7b$closure$u7d$$u7d$17ha74c7762bad17d4fE+0x36b>
   146a7:	49 89 c6             	mov    %rax,%r14
   146aa:	eb 0f                	jmp    146bb <_ZN10rayon_core4join12join_context28_$u7b$$u7b$closure$u7d$$u7d$17ha74c7762bad17d4fE+0x36b>
   146ac:	49 89 c6             	mov    %rax,%r14
   146af:	48 8b 73 08          	mov    0x8(%rbx),%rsi
   146b3:	48 89 ef             	mov    %rbp,%rdi
   146b6:	e8 85 34 00 00       	callq  17b40 <_ZN5alloc5alloc8box_free17h16551760f718b115E>
   146bb:	31 ed                	xor    %ebp,%ebp
   146bd:	48 83 3c 24 00       	cmpq   $0x0,(%rsp)
   146c2:	0f 84 dc 00 00 00    	je     147a4 <_ZN10rayon_core4join12join_context28_$u7b$$u7b$closure$u7d$$u7d$17ha74c7762bad17d4fE+0x454>
   146c8:	e9 e6 00 00 00       	jmpq   147b3 <_ZN10rayon_core4join12join_context28_$u7b$$u7b$closure$u7d$$u7d$17ha74c7762bad17d4fE+0x463>
   146cd:	eb 27                	jmp    146f6 <_ZN10rayon_core4join12join_context28_$u7b$$u7b$closure$u7d$$u7d$17ha74c7762bad17d4fE+0x3a6>
   146cf:	49 89 c6             	mov    %rax,%r14
   146d2:	31 ed                	xor    %ebp,%ebp
    }
   146d4:	48 8d 7c 24 70       	lea    0x70(%rsp),%rdi
   146d9:	e8 82 0d 00 00       	callq  15460 <_ZN4core3ptr13drop_in_place17h5f711884206bbba6E>
   146de:	e9 ba 00 00 00       	jmpq   1479d <_ZN10rayon_core4join12join_context28_$u7b$$u7b$closure$u7d$$u7d$17ha74c7762bad17d4fE+0x44d>
   146e3:	49 89 c6             	mov    %rax,%r14
   146e6:	48 83 3c 24 00       	cmpq   $0x0,(%rsp)
   146eb:	0f 84 b3 00 00 00    	je     147a4 <_ZN10rayon_core4join12join_context28_$u7b$$u7b$closure$u7d$$u7d$17ha74c7762bad17d4fE+0x454>
   146f1:	e9 bd 00 00 00       	jmpq   147b3 <_ZN10rayon_core4join12join_context28_$u7b$$u7b$closure$u7d$$u7d$17ha74c7762bad17d4fE+0x463>
   146f6:	49 89 c6             	mov    %rax,%r14
   146f9:	48 8b 73 08          	mov    0x8(%rbx),%rsi
   146fd:	48 89 ef             	mov    %rbp,%rdi
   14700:	e8 3b 34 00 00       	callq  17b40 <_ZN5alloc5alloc8box_free17h16551760f718b115E>
   14705:	31 ed                	xor    %ebp,%ebp
   14707:	40 84 ed             	test   %bpl,%bpl
   1470a:	0f 84 99 00 00 00    	je     147a9 <_ZN10rayon_core4join12join_context28_$u7b$$u7b$closure$u7d$$u7d$17ha74c7762bad17d4fE+0x459>
   14710:	e9 ab 00 00 00       	jmpq   147c0 <_ZN10rayon_core4join12join_context28_$u7b$$u7b$closure$u7d$$u7d$17ha74c7762bad17d4fE+0x470>
   14715:	48 8b 68 40          	mov    0x40(%rax),%rbp
   14719:	4c 8b 70 48          	mov    0x48(%rax),%r14
   1471d:	48 89 c7             	mov    %rax,%rdi
   14720:	ff 15 52 36 23 00    	callq  *0x233652(%rip)        # 247d78 <free@GLIBC_2.2.5>
   14726:	64 48 83 3c 25 a0 ff 	cmpq   $0x1,%fs:0xffffffffffffffa0
   1472d:	ff ff 01 
   14730:	75 0e                	jne    14740 <_ZN10rayon_core4join12join_context28_$u7b$$u7b$closure$u7d$$u7d$17ha74c7762bad17d4fE+0x3f0>
   14732:	64 48 8b 04 25 a8 ff 	mov    %fs:0xffffffffffffffa8,%rax
   14739:	ff ff 
   1473b:	48 ff c8             	dec    %rax
   1473e:	eb 1b                	jmp    1475b <_ZN10rayon_core4join12join_context28_$u7b$$u7b$closure$u7d$$u7d$17ha74c7762bad17d4fE+0x40b>
   14740:	b8 01 00 00 00       	mov    $0x1,%eax
   14745:	c4 e1 f9 6e c0       	vmovq  %rax,%xmm0
   1474a:	64 c5 f9 7f 04 25 a0 	vmovdqa %xmm0,%fs:0xffffffffffffffa0
   14751:	ff ff ff 
   14754:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
   1475b:	64 48 89 04 25 a8 ff 	mov    %rax,%fs:0xffffffffffffffa8
   14762:	ff ff 
        let status_a = unwind::halt_unwinding(call_a(oper_a, injected));
   14764:	48 89 2c 24          	mov    %rbp,(%rsp)
   14768:	4c 89 74 24 08       	mov    %r14,0x8(%rsp)
            Err(err) => join_recover_from_panic(worker_thread, &job_b.latch, err),
   1476d:	48 8d b4 24 e8 00 00 	lea    0xe8(%rsp),%rsi
   14774:	00 
   14775:	48 89 df             	mov    %rbx,%rdi
   14778:	48 89 ea             	mov    %rbp,%rdx
   1477b:	4c 89 f1             	mov    %r14,%rcx
   1477e:	e8 8d 30 00 00       	callq  17810 <_ZN10rayon_core4join23join_recover_from_panic17ha9b7937957cd79f2E>
   14783:	0f 0b                	ud2    
   14785:	49 89 c6             	mov    %rax,%r14
   14788:	eb 36                	jmp    147c0 <_ZN10rayon_core4join12join_context28_$u7b$$u7b$closure$u7d$$u7d$17ha74c7762bad17d4fE+0x470>
   1478a:	49 89 c6             	mov    %rax,%r14
   1478d:	40 b5 01             	mov    $0x1,%bpl
    })
   14790:	40 84 ed             	test   %bpl,%bpl
   14793:	74 14                	je     147a9 <_ZN10rayon_core4join12join_context28_$u7b$$u7b$closure$u7d$$u7d$17ha74c7762bad17d4fE+0x459>
   14795:	eb 29                	jmp    147c0 <_ZN10rayon_core4join12join_context28_$u7b$$u7b$closure$u7d$$u7d$17ha74c7762bad17d4fE+0x470>
   14797:	49 89 c6             	mov    %rax,%r14
   1479a:	40 b5 01             	mov    $0x1,%bpl
   1479d:	48 83 3c 24 00       	cmpq   $0x0,(%rsp)
   147a2:	75 0f                	jne    147b3 <_ZN10rayon_core4join12join_context28_$u7b$$u7b$closure$u7d$$u7d$17ha74c7762bad17d4fE+0x463>
   147a4:	40 84 ed             	test   %bpl,%bpl
   147a7:	75 17                	jne    147c0 <_ZN10rayon_core4join12join_context28_$u7b$$u7b$closure$u7d$$u7d$17ha74c7762bad17d4fE+0x470>
   147a9:	4c 89 f7             	mov    %r14,%rdi
   147ac:	e8 ef f8 fe ff       	callq  40a0 <_Unwind_Resume@plt>
   147b1:	0f 0b                	ud2    
   147b3:	48 89 e7             	mov    %rsp,%rdi
   147b6:	e8 c5 0d 00 00       	callq  15580 <_ZN4core3ptr13drop_in_place17h3afc1bf79a8187c4E>
   147bb:	40 84 ed             	test   %bpl,%bpl
   147be:	74 e9                	je     147a9 <_ZN10rayon_core4join12join_context28_$u7b$$u7b$closure$u7d$$u7d$17ha74c7762bad17d4fE+0x459>
   147c0:	48 8d bc 24 90 00 00 	lea    0x90(%rsp),%rdi
   147c7:	00 
   147c8:	e8 53 0d 00 00       	callq  15520 <_ZN4core3ptr13drop_in_place17h89be93c4906ce112E>
   147cd:	4c 89 f7             	mov    %r14,%rdi
   147d0:	e8 cb f8 fe ff       	callq  40a0 <_Unwind_Resume@plt>
   147d5:	0f 0b                	ud2    
   147d7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   147de:	00 00 

00000000000147e0 <_ZN83_$LT$rayon_core..job..StackJob$LT$L$C$F$C$R$GT$$u20$as$u20$rayon_core..job..Job$GT$7execute17h175f731f2da1fe1dE>:
    unsafe fn execute(this: *const Self) {
   147e0:	55                   	push   %rbp
   147e1:	41 57                	push   %r15
   147e3:	41 56                	push   %r14
   147e5:	41 55                	push   %r13
   147e7:	41 54                	push   %r12
   147e9:	53                   	push   %rbx
   147ea:	48 83 ec 38          	sub    $0x38,%rsp
   147ee:	c5 fe 6f 07          	vmovdqu (%rdi),%ymm0
   147f2:	c5 f0 57 c9          	vxorps %xmm1,%xmm1,%xmm1
   147f6:	48 8b 07             	mov    (%rdi),%rax
   147f9:	c5 fc 11 0f          	vmovups %ymm1,(%rdi)
   147fd:	48 85 c0             	test   %rax,%rax
   14800:	0f 84 cf 00 00 00    	je     148d5 <_ZN83_$LT$rayon_core..job..StackJob$LT$L$C$F$C$R$GT$$u20$as$u20$rayon_core..job..Job$GT$7execute17h175f731f2da1fe1dE+0xf5>
   14806:	48 89 fb             	mov    %rdi,%rbx
                        right_producer,
   14809:	c5 f8 10 4f 20       	vmovups 0x20(%rdi),%xmm1
   1480e:	c5 fa 6f 57 30       	vmovdqu 0x30(%rdi),%xmm2
   14813:	c4 e3 f9 16 c1 01    	vpextrq $0x1,%xmm0,%rcx
   14819:	c4 e3 7d 39 c0 01    	vextracti128 $0x1,%ymm0,%xmm0
                        len - mid,
   1481f:	48 8b 38             	mov    (%rax),%rdi
   14822:	48 2b 39             	sub    (%rcx),%rdi
   14825:	c4 e1 f9 7e c0       	vmovq  %xmm0,%rax
                        splitter,
   1482a:	48 8b 10             	mov    (%rax),%rdx
   1482d:	48 8b 48 08          	mov    0x8(%rax),%rcx
                        right_producer,
   14831:	c4 e3 f9 16 44 24 18 	vpextrq $0x1,%xmm0,0x18(%rsp)
   14838:	01 
   14839:	c4 c3 f9 16 d1 01    	vpextrq $0x1,%xmm2,%r9
   1483f:	c5 f9 d6 54 24 30    	vmovq  %xmm2,0x30(%rsp)
   14845:	c5 f8 11 4c 24 20    	vmovups %xmm1,0x20(%rsp)
   1484b:	4c 8d 44 24 18       	lea    0x18(%rsp),%r8
                    helper(
   14850:	be 01 00 00 00       	mov    $0x1,%esi
   14855:	c5 f8 77             	vzeroupper 
   14858:	e8 a3 ed ff ff       	callq  13600 <_ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17h265c7cdb70ee0755E>
        (*this.result.get()) = match unwind::halt_unwinding(call(func)) {
   1485d:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
   14864:	00 00 
   14866:	41 bd 01 00 00 00    	mov    $0x1,%r13d
   1486c:	41 b4 01             	mov    $0x1,%r12b
   1486f:	45 31 f6             	xor    %r14d,%r14d
   14872:	31 ed                	xor    %ebp,%ebp
   14874:	48 83 7b 40 02       	cmpq   $0x2,0x40(%rbx)
   14879:	72 1f                	jb     1489a <_ZN83_$LT$rayon_core..job..StackJob$LT$L$C$F$C$R$GT$$u20$as$u20$rayon_core..job..Job$GT$7execute17h175f731f2da1fe1dE+0xba>
   1487b:	48 8b 7b 48          	mov    0x48(%rbx),%rdi
   1487f:	48 8b 43 50          	mov    0x50(%rbx),%rax
   14883:	ff 10                	callq  *(%rax)
   14885:	48 8b 43 50          	mov    0x50(%rbx),%rax
   14889:	48 83 78 08 00       	cmpq   $0x0,0x8(%rax)
   1488e:	74 0a                	je     1489a <_ZN83_$LT$rayon_core..job..StackJob$LT$L$C$F$C$R$GT$$u20$as$u20$rayon_core..job..Job$GT$7execute17h175f731f2da1fe1dE+0xba>
   14890:	48 8b 7b 48          	mov    0x48(%rbx),%rdi
   14894:	ff 15 de 34 23 00    	callq  *0x2334de(%rip)        # 247d78 <free@GLIBC_2.2.5>
   1489a:	4c 89 6b 40          	mov    %r13,0x40(%rbx)
   1489e:	4c 89 73 48          	mov    %r14,0x48(%rbx)
   148a2:	4c 89 7b 50          	mov    %r15,0x50(%rbx)
        };
   148a6:	44 08 e5             	or     %r12b,%bpl
   148a9:	75 16                	jne    148c1 <_ZN83_$LT$rayon_core..job..StackJob$LT$L$C$F$C$R$GT$$u20$as$u20$rayon_core..job..Job$GT$7execute17h175f731f2da1fe1dE+0xe1>
   148ab:	4c 89 f7             	mov    %r14,%rdi
   148ae:	41 ff 17             	callq  *(%r15)
   148b1:	49 83 7f 08 00       	cmpq   $0x0,0x8(%r15)
   148b6:	74 09                	je     148c1 <_ZN83_$LT$rayon_core..job..StackJob$LT$L$C$F$C$R$GT$$u20$as$u20$rayon_core..job..Job$GT$7execute17h175f731f2da1fe1dE+0xe1>
   148b8:	4c 89 f7             	mov    %r14,%rdi
   148bb:	ff 15 b7 34 23 00    	callq  *0x2334b7(%rip)        # 247d78 <free@GLIBC_2.2.5>
   148c1:	b0 01                	mov    $0x1,%al
   148c3:	86 43 58             	xchg   %al,0x58(%rbx)
    }
   148c6:	48 83 c4 38          	add    $0x38,%rsp
   148ca:	5b                   	pop    %rbx
   148cb:	41 5c                	pop    %r12
   148cd:	41 5d                	pop    %r13
   148cf:	41 5e                	pop    %r14
   148d1:	41 5f                	pop    %r15
   148d3:	5d                   	pop    %rbp
   148d4:	c3                   	retq   
   148d5:	48 8d 3d 45 8a 02 00 	lea    0x28a45(%rip),%rdi        # 3d321 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x9c1>
   148dc:	48 8d 15 25 20 23 00 	lea    0x232025(%rip),%rdx        # 246908 <__init_array_end+0x8f8>
   148e3:	be 2b 00 00 00       	mov    $0x2b,%esi
   148e8:	c5 f8 77             	vzeroupper 
   148eb:	e8 c0 2a ff ff       	callq  73b0 <_ZN4core9panicking5panic17h6861470adfbddef8E>
   148f0:	0f 0b                	ud2    
   148f2:	e8 f9 3a 00 00       	callq  183f0 <_ZN4core3ptr13drop_in_place17hc443eae86009dba0E>
   148f7:	0f 0b                	ud2    
   148f9:	49 8b 77 08          	mov    0x8(%r15),%rsi
   148fd:	4c 89 f7             	mov    %r14,%rdi
   14900:	e8 3b 32 00 00       	callq  17b40 <_ZN5alloc5alloc8box_free17h16551760f718b115E>
   14905:	e8 e6 3a 00 00       	callq  183f0 <_ZN4core3ptr13drop_in_place17hc443eae86009dba0E>
   1490a:	0f 0b                	ud2    
   1490c:	48 8b 7b 48          	mov    0x48(%rbx),%rdi
   14910:	48 8b 43 50          	mov    0x50(%rbx),%rax
   14914:	48 8b 70 08          	mov    0x8(%rax),%rsi
   14918:	e8 23 32 00 00       	callq  17b40 <_ZN5alloc5alloc8box_free17h16551760f718b115E>
        (*this.result.get()) = match unwind::halt_unwinding(call(func)) {
   1491d:	4c 89 6b 40          	mov    %r13,0x40(%rbx)
   14921:	4c 89 73 48          	mov    %r14,0x48(%rbx)
   14925:	4c 89 7b 50          	mov    %r15,0x50(%rbx)
        };
   14929:	44 08 e5             	or     %r12b,%bpl
   1492c:	74 07                	je     14935 <_ZN83_$LT$rayon_core..job..StackJob$LT$L$C$F$C$R$GT$$u20$as$u20$rayon_core..job..Job$GT$7execute17h175f731f2da1fe1dE+0x155>
    }
   1492e:	e8 bd 3a 00 00       	callq  183f0 <_ZN4core3ptr13drop_in_place17hc443eae86009dba0E>
   14933:	0f 0b                	ud2    
   14935:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
        };
   1493a:	e8 41 0c 00 00       	callq  15580 <_ZN4core3ptr13drop_in_place17h3afc1bf79a8187c4E>
    }
   1493f:	e8 ac 3a 00 00       	callq  183f0 <_ZN4core3ptr13drop_in_place17hc443eae86009dba0E>
   14944:	0f 0b                	ud2    
   14946:	4c 8b 70 40          	mov    0x40(%rax),%r14
   1494a:	4c 8b 78 48          	mov    0x48(%rax),%r15
   1494e:	48 89 c7             	mov    %rax,%rdi
   14951:	ff 15 21 34 23 00    	callq  *0x233421(%rip)        # 247d78 <free@GLIBC_2.2.5>
   14957:	64 48 83 3c 25 a0 ff 	cmpq   $0x1,%fs:0xffffffffffffffa0
   1495e:	ff ff 01 
   14961:	75 0e                	jne    14971 <_ZN83_$LT$rayon_core..job..StackJob$LT$L$C$F$C$R$GT$$u20$as$u20$rayon_core..job..Job$GT$7execute17h175f731f2da1fe1dE+0x191>
   14963:	64 48 8b 04 25 a8 ff 	mov    %fs:0xffffffffffffffa8,%rax
   1496a:	ff ff 
   1496c:	48 ff c8             	dec    %rax
   1496f:	eb 1b                	jmp    1498c <_ZN83_$LT$rayon_core..job..StackJob$LT$L$C$F$C$R$GT$$u20$as$u20$rayon_core..job..Job$GT$7execute17h175f731f2da1fe1dE+0x1ac>
   14971:	b8 01 00 00 00       	mov    $0x1,%eax
   14976:	c4 e1 f9 6e c0       	vmovq  %rax,%xmm0
   1497b:	64 c5 f9 7f 04 25 a0 	vmovdqa %xmm0,%fs:0xffffffffffffffa0
   14982:	ff ff ff 
   14985:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
   1498c:	64 48 89 04 25 a8 ff 	mov    %rax,%fs:0xffffffffffffffa8
   14993:	ff ff 
        (*this.result.get()) = match unwind::halt_unwinding(call(func)) {
   14995:	4c 89 74 24 08       	mov    %r14,0x8(%rsp)
   1499a:	4c 89 7c 24 10       	mov    %r15,0x10(%rsp)
   1499f:	40 b5 01             	mov    $0x1,%bpl
   149a2:	41 bd 02 00 00 00    	mov    $0x2,%r13d
   149a8:	45 31 e4             	xor    %r12d,%r12d
   149ab:	48 83 7b 40 02       	cmpq   $0x2,0x40(%rbx)
   149b0:	0f 83 c5 fe ff ff    	jae    1487b <_ZN83_$LT$rayon_core..job..StackJob$LT$L$C$F$C$R$GT$$u20$as$u20$rayon_core..job..Job$GT$7execute17h175f731f2da1fe1dE+0x9b>
   149b6:	e9 df fe ff ff       	jmpq   1489a <_ZN83_$LT$rayon_core..job..StackJob$LT$L$C$F$C$R$GT$$u20$as$u20$rayon_core..job..Job$GT$7execute17h175f731f2da1fe1dE+0xba>
   149bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000149c0 <_ZN15crossbeam_deque15Worker$LT$T$GT$6resize17hf7c4d42bebcabf15E>:
    unsafe fn resize(&self, new_cap: usize) {
   149c0:	55                   	push   %rbp
   149c1:	41 57                	push   %r15
   149c3:	41 56                	push   %r14
   149c5:	41 55                	push   %r13
   149c7:	41 54                	push   %r12
   149c9:	53                   	push   %rbx
   149ca:	b8 38 10 00 00       	mov    $0x1038,%eax
   149cf:	e8 c4 4a 02 00       	callq  39498 <__rust_probestack>
   149d4:	48 29 c4             	sub    %rax,%rsp
        let b = self.inner.back.load(Ordering::Relaxed);
   149d7:	48 8b 07             	mov    (%rdi),%rax
   149da:	48 8b 98 08 01 00 00 	mov    0x108(%rax),%rbx
   149e1:	48 8b a8 00 01 00 00 	mov    0x100(%rax),%rbp
   149e8:	b9 10 00 00 00       	mov    $0x10,%ecx
   149ed:	48 89 74 24 20       	mov    %rsi,0x20(%rsp)
   149f2:	48 89 f0             	mov    %rsi,%rax
   149f5:	48 f7 e1             	mul    %rcx
   149f8:	0f 80 f4 04 00 00    	jo     14ef2 <_ZN15crossbeam_deque15Worker$LT$T$GT$6resize17hf7c4d42bebcabf15E+0x532>
   149fe:	49 89 c5             	mov    %rax,%r13
   14a01:	4c 8b 77 08          	mov    0x8(%rdi),%r14
   14a05:	48 89 7c 24 18       	mov    %rdi,0x18(%rsp)
   14a0a:	4c 8b 7f 10          	mov    0x10(%rdi),%r15
   14a0e:	48 85 c0             	test   %rax,%rax
   14a11:	74 24                	je     14a37 <_ZN15crossbeam_deque15Worker$LT$T$GT$6resize17hf7c4d42bebcabf15E+0x77>
   14a13:	4c 89 ef             	mov    %r13,%rdi
   14a16:	ff 15 ec 34 23 00    	callq  *0x2334ec(%rip)        # 247f08 <malloc@GLIBC_2.2.5>
   14a1c:	48 85 c0             	test   %rax,%rax
   14a1f:	0f 84 ff 04 00 00    	je     14f24 <_ZN15crossbeam_deque15Worker$LT$T$GT$6resize17hf7c4d42bebcabf15E+0x564>
   14a25:	49 89 c4             	mov    %rax,%r12
        while i != b {
   14a28:	48 39 eb             	cmp    %rbp,%rbx
   14a2b:	4c 8b 6c 24 20       	mov    0x20(%rsp),%r13
   14a30:	75 19                	jne    14a4b <_ZN15crossbeam_deque15Worker$LT$T$GT$6resize17hf7c4d42bebcabf15E+0x8b>
   14a32:	e9 09 01 00 00       	jmpq   14b40 <_ZN15crossbeam_deque15Worker$LT$T$GT$6resize17hf7c4d42bebcabf15E+0x180>
   14a37:	41 bc 08 00 00 00    	mov    $0x8,%r12d
   14a3d:	48 39 eb             	cmp    %rbp,%rbx
   14a40:	4c 8b 6c 24 20       	mov    0x20(%rsp),%r13
   14a45:	0f 84 f5 00 00 00    	je     14b40 <_ZN15crossbeam_deque15Worker$LT$T$GT$6resize17hf7c4d42bebcabf15E+0x180>
   14a4b:	49 ff cf             	dec    %r15
   14a4e:	49 8d 45 ff          	lea    -0x1(%r13),%rax
   14a52:	89 da                	mov    %ebx,%edx
   14a54:	29 ea                	sub    %ebp,%edx
   14a56:	48 89 e9             	mov    %rbp,%rcx
   14a59:	48 f7 d1             	not    %rcx
   14a5c:	48 01 d9             	add    %rbx,%rcx
   14a5f:	48 83 e2 03          	and    $0x3,%rdx
   14a63:	74 33                	je     14a98 <_ZN15crossbeam_deque15Worker$LT$T$GT$6resize17hf7c4d42bebcabf15E+0xd8>
   14a65:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   14a6c:	00 00 00 
   14a6f:	90                   	nop
        self.ptr.offset(index & (self.cap - 1) as isize)
   14a70:	48 89 ee             	mov    %rbp,%rsi
   14a73:	4c 21 fe             	and    %r15,%rsi
   14a76:	48 c1 e6 04          	shl    $0x4,%rsi
   14a7a:	48 89 ef             	mov    %rbp,%rdi
   14a7d:	48 21 c7             	and    %rax,%rdi
   14a80:	48 c1 e7 04          	shl    $0x4,%rdi
   14a84:	c4 c1 78 10 04 36    	vmovups (%r14,%rsi,1),%xmm0
   14a8a:	c4 c1 78 11 04 3c    	vmovups %xmm0,(%r12,%rdi,1)
   14a90:	48 ff c5             	inc    %rbp
        while i != b {
   14a93:	48 ff ca             	dec    %rdx
   14a96:	75 d8                	jne    14a70 <_ZN15crossbeam_deque15Worker$LT$T$GT$6resize17hf7c4d42bebcabf15E+0xb0>
   14a98:	48 83 f9 03          	cmp    $0x3,%rcx
   14a9c:	0f 82 9e 00 00 00    	jb     14b40 <_ZN15crossbeam_deque15Worker$LT$T$GT$6resize17hf7c4d42bebcabf15E+0x180>
   14aa2:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   14aa9:	00 00 00 
   14aac:	0f 1f 40 00          	nopl   0x0(%rax)
        self.ptr.offset(index & (self.cap - 1) as isize)
   14ab0:	48 89 e9             	mov    %rbp,%rcx
   14ab3:	4c 21 f9             	and    %r15,%rcx
   14ab6:	48 c1 e1 04          	shl    $0x4,%rcx
   14aba:	48 89 ea             	mov    %rbp,%rdx
   14abd:	48 21 c2             	and    %rax,%rdx
   14ac0:	48 c1 e2 04          	shl    $0x4,%rdx
   14ac4:	c4 c1 78 10 04 0e    	vmovups (%r14,%rcx,1),%xmm0
   14aca:	c4 c1 78 11 04 14    	vmovups %xmm0,(%r12,%rdx,1)
   14ad0:	48 8d 4d 01          	lea    0x1(%rbp),%rcx
   14ad4:	48 89 ca             	mov    %rcx,%rdx
   14ad7:	4c 21 fa             	and    %r15,%rdx
   14ada:	48 c1 e2 04          	shl    $0x4,%rdx
   14ade:	48 21 c1             	and    %rax,%rcx
   14ae1:	48 c1 e1 04          	shl    $0x4,%rcx
   14ae5:	c4 c1 78 10 04 16    	vmovups (%r14,%rdx,1),%xmm0
   14aeb:	c4 c1 78 11 04 0c    	vmovups %xmm0,(%r12,%rcx,1)
   14af1:	48 8d 4d 02          	lea    0x2(%rbp),%rcx
   14af5:	48 89 ca             	mov    %rcx,%rdx
   14af8:	4c 21 fa             	and    %r15,%rdx
   14afb:	48 c1 e2 04          	shl    $0x4,%rdx
   14aff:	48 21 c1             	and    %rax,%rcx
   14b02:	48 c1 e1 04          	shl    $0x4,%rcx
   14b06:	c4 c1 78 10 04 16    	vmovups (%r14,%rdx,1),%xmm0
   14b0c:	c4 c1 78 11 04 0c    	vmovups %xmm0,(%r12,%rcx,1)
   14b12:	48 8d 4d 03          	lea    0x3(%rbp),%rcx
   14b16:	48 89 ca             	mov    %rcx,%rdx
   14b19:	4c 21 fa             	and    %r15,%rdx
   14b1c:	48 c1 e2 04          	shl    $0x4,%rdx
   14b20:	48 21 c1             	and    %rax,%rcx
   14b23:	48 c1 e1 04          	shl    $0x4,%rcx
   14b27:	c4 c1 78 10 04 16    	vmovups (%r14,%rdx,1),%xmm0
   14b2d:	c4 c1 78 11 04 0c    	vmovups %xmm0,(%r12,%rcx,1)
        while i != b {
   14b33:	48 83 c5 04          	add    $0x4,%rbp
   14b37:	48 39 dd             	cmp    %rbx,%rbp
   14b3a:	0f 85 70 ff ff ff    	jne    14ab0 <_ZN15crossbeam_deque15Worker$LT$T$GT$6resize17hf7c4d42bebcabf15E+0xf0>
   14b40:	64 48 83 3c 25 e0 fe 	cmpq   $0x1,%fs:0xfffffffffffffee0
   14b47:	ff ff 01 
   14b4a:	0f 85 6e 03 00 00    	jne    14ebe <_ZN15crossbeam_deque15Worker$LT$T$GT$6resize17hf7c4d42bebcabf15E+0x4fe>
   14b50:	64 48 8b 04 25 00 00 	mov    %fs:0x0,%rax
   14b57:	00 00 
   14b59:	48 8d 80 e8 fe ff ff 	lea    -0x118(%rax),%rax

impl LocalHandle {
    /// Pins the handle.
    #[inline]
    pub fn pin(&self) -> Guard {
        unsafe { (*self.local).pin() }
   14b60:	48 8b 08             	mov    (%rax),%rcx
        let guard = Guard { local: self };
   14b63:	48 89 4c 24 28       	mov    %rcx,0x28(%rsp)
        let guard_count = self.guard_count.get();
   14b68:	48 8b 81 20 08 00 00 	mov    0x820(%rcx),%rax
   14b6f:	48 89 c2             	mov    %rax,%rdx
   14b72:	48 ff c2             	inc    %rdx
   14b75:	0f 84 8f 03 00 00    	je     14f0a <_ZN15crossbeam_deque15Worker$LT$T$GT$6resize17hf7c4d42bebcabf15E+0x54a>
   14b7b:	48 89 91 20 08 00 00 	mov    %rdx,0x820(%rcx)
        if guard_count == 0 {
   14b82:	48 85 c0             	test   %rax,%rax
   14b85:	75 3f                	jne    14bc6 <_ZN15crossbeam_deque15Worker$LT$T$GT$6resize17hf7c4d42bebcabf15E+0x206>
            let global_epoch = self.global().epoch.load(Ordering::Relaxed);
   14b87:	48 8b 41 10          	mov    0x10(%rcx),%rax
   14b8b:	48 8b 90 80 01 00 00 	mov    0x180(%rax),%rdx
   14b92:	48 83 ca 01          	or     $0x1,%rdx
   14b96:	31 c0                	xor    %eax,%eax
   14b98:	f0 48 0f b1 51 08    	lock cmpxchg %rdx,0x8(%rcx)
            let count = self.pin_count.get();
   14b9e:	48 8b 81 30 08 00 00 	mov    0x830(%rcx),%rax
   14ba5:	48 8d 50 01          	lea    0x1(%rax),%rdx
   14ba9:	48 89 91 30 08 00 00 	mov    %rdx,0x830(%rcx)
            if count.0 % Self::PINNINGS_BETWEEN_COLLECT == 0 {
   14bb0:	a8 7f                	test   $0x7f,%al
   14bb2:	75 12                	jne    14bc6 <_ZN15crossbeam_deque15Worker$LT$T$GT$6resize17hf7c4d42bebcabf15E+0x206>
                self.global().collect(&guard);
   14bb4:	48 8b 79 10          	mov    0x10(%rcx),%rdi
   14bb8:	48 83 ef 80          	sub    $0xffffffffffffff80,%rdi
   14bbc:	48 8d 74 24 28       	lea    0x28(%rsp),%rsi
   14bc1:	e8 7a bf ff ff       	callq  10b40 <_ZN15crossbeam_epoch8internal6Global7collect17h831494d6c7d86e73E>
        guard
   14bc6:	48 8b 5c 24 28       	mov    0x28(%rsp),%rbx
   14bcb:	31 c0                	xor    %eax,%eax
   14bcd:	48 89 04 24          	mov    %rax,(%rsp)
   14bd1:	48 89 5c 24 08       	mov    %rbx,0x8(%rsp)
   14bd6:	48 85 c0             	test   %rax,%rax
   14bd9:	0f 84 99 01 00 00    	je     14d78 <_ZN15crossbeam_deque15Worker$LT$T$GT$6resize17hf7c4d42bebcabf15E+0x3b8>
   14bdf:	48 8d 05 7a 34 23 00 	lea    0x23347a(%rip),%rax        # 248060 <_ZN79_$LT$crossbeam_epoch..default..COLLECTOR$u20$as$u20$core..ops..deref..Deref$GT$5deref11__stability4LAZY17h2c7e93b6d170d00fE>
   14be6:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   14beb:	48 8b 05 76 34 23 00 	mov    0x233476(%rip),%rax        # 248068 <_ZN79_$LT$crossbeam_epoch..default..COLLECTOR$u20$as$u20$core..ops..deref..Deref$GT$5deref11__stability4LAZY17h2c7e93b6d170d00fE+0x8>
   14bf2:	48 83 f8 03          	cmp    $0x3,%rax
   14bf6:	74 32                	je     14c2a <_ZN15crossbeam_deque15Worker$LT$T$GT$6resize17hf7c4d42bebcabf15E+0x26a>
   14bf8:	48 8d 44 24 10       	lea    0x10(%rsp),%rax
   14bfd:	48 89 84 24 30 08 00 	mov    %rax,0x830(%rsp)
   14c04:	00 
   14c05:	48 8d 84 24 30 08 00 	lea    0x830(%rsp),%rax
   14c0c:	00 
   14c0d:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   14c12:	48 8d 3d 4f 34 23 00 	lea    0x23344f(%rip),%rdi        # 248068 <_ZN79_$LT$crossbeam_epoch..default..COLLECTOR$u20$as$u20$core..ops..deref..Deref$GT$5deref11__stability4LAZY17h2c7e93b6d170d00fE+0x8>
   14c19:	48 8d 15 c8 1b 23 00 	lea    0x231bc8(%rip),%rdx        # 2467e8 <__init_array_end+0x7d8>
   14c20:	48 8d 74 24 28       	lea    0x28(%rsp),%rsi
   14c25:	e8 66 66 01 00       	callq  2b290 <_ZN3std4sync4once4Once10call_inner17hfabbd1bc15485aefE>
   14c2a:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
        Local::register(self)
   14c2f:	48 8b 28             	mov    (%rax),%rbp
   14c32:	f0 48 ff 45 00       	lock incq 0x0(%rbp)
   14c37:	0f 8e f6 02 00 00    	jle    14f33 <_ZN15crossbeam_deque15Worker$LT$T$GT$6resize17hf7c4d42bebcabf15E+0x573>
   14c3d:	48 8d 9c 24 30 08 00 	lea    0x830(%rsp),%rbx
   14c44:	00 
        Self::default()
   14c45:	48 89 df             	mov    %rbx,%rdi
   14c48:	e8 53 b3 ff ff       	callq  ffa0 <_ZN73_$LT$crossbeam_epoch..internal..Bag$u20$as$u20$core..default..Default$GT$7default17h06d0746c5d364cb6E>
   14c4d:	48 8d 7c 24 28       	lea    0x28(%rsp),%rdi
        Self::from(Box::new(value))
   14c52:	ba 08 08 00 00       	mov    $0x808,%edx
   14c57:	48 89 de             	mov    %rbx,%rsi
   14c5a:	ff 15 70 32 23 00    	callq  *0x233270(%rip)        # 247ed0 <memcpy@GLIBC_2.14>
   14c60:	bf 38 08 00 00       	mov    $0x838,%edi
   14c65:	ff 15 9d 32 23 00    	callq  *0x23329d(%rip)        # 247f08 <malloc@GLIBC_2.2.5>
   14c6b:	48 85 c0             	test   %rax,%rax
   14c6e:	0f 84 c3 02 00 00    	je     14f37 <_ZN15crossbeam_deque15Worker$LT$T$GT$6resize17hf7c4d42bebcabf15E+0x577>
   14c74:	48 89 c3             	mov    %rax,%rbx
   14c77:	c5 f8 57 c0          	vxorps %xmm0,%xmm0,%xmm0
   14c7b:	c5 f8 11 00          	vmovups %xmm0,(%rax)
   14c7f:	48 89 68 10          	mov    %rbp,0x10(%rax)
   14c83:	48 8d 78 18          	lea    0x18(%rax),%rdi
   14c87:	48 8d 74 24 28       	lea    0x28(%rsp),%rsi
   14c8c:	ba 08 08 00 00       	mov    $0x808,%edx
   14c91:	ff 15 39 32 23 00    	callq  *0x233239(%rip)        # 247ed0 <memcpy@GLIBC_2.14>
   14c97:	c5 f8 28 05 71 57 02 	vmovaps 0x25771(%rip),%xmm0        # 3a410 <_fini+0xcc>
   14c9e:	00 
   14c9f:	c5 f8 11 83 20 08 00 	vmovups %xmm0,0x820(%rbx)
   14ca6:	00 
   14ca7:	48 c7 83 30 08 00 00 	movq   $0x0,0x830(%rbx)
   14cae:	00 00 00 00 
    let raw = (data & !low_bits::<T>()) as *mut T;
   14cb2:	48 83 e3 f8          	and    $0xfffffffffffffff8,%rbx
   14cb6:	48 8b 85 00 02 00 00 	mov    0x200(%rbp),%rax
   14cbd:	0f 1f 00             	nopl   (%rax)
   14cc0:	48 89 03             	mov    %rax,(%rbx)
   14cc3:	f0 48 0f b1 9d 00 02 	lock cmpxchg %rbx,0x200(%rbp)
   14cca:	00 00 
   14ccc:	75 f2                	jne    14cc0 <_ZN15crossbeam_deque15Worker$LT$T$GT$6resize17hf7c4d42bebcabf15E+0x300>
where
    F: FnMut(&LocalHandle) -> R,
{
    HANDLE
        .try_with(|h| f(h))
        .unwrap_or_else(|_| f(&COLLECTOR.register()))
   14cce:	48 89 9c 24 30 08 00 	mov    %rbx,0x830(%rsp)
   14cd5:	00 
        let guard = Guard { local: self };
   14cd6:	48 89 5c 24 28       	mov    %rbx,0x28(%rsp)
        let guard_count = self.guard_count.get();
   14cdb:	48 8b 83 20 08 00 00 	mov    0x820(%rbx),%rax
   14ce2:	48 89 c1             	mov    %rax,%rcx
   14ce5:	48 ff c1             	inc    %rcx
   14ce8:	0f 84 5a 02 00 00    	je     14f48 <_ZN15crossbeam_deque15Worker$LT$T$GT$6resize17hf7c4d42bebcabf15E+0x588>
   14cee:	48 89 8b 20 08 00 00 	mov    %rcx,0x820(%rbx)
        if guard_count == 0 {
   14cf5:	48 85 c0             	test   %rax,%rax
   14cf8:	75 3f                	jne    14d39 <_ZN15crossbeam_deque15Worker$LT$T$GT$6resize17hf7c4d42bebcabf15E+0x379>
            let global_epoch = self.global().epoch.load(Ordering::Relaxed);
   14cfa:	48 8b 43 10          	mov    0x10(%rbx),%rax
   14cfe:	48 8b 88 80 01 00 00 	mov    0x180(%rax),%rcx
   14d05:	48 83 c9 01          	or     $0x1,%rcx
   14d09:	31 c0                	xor    %eax,%eax
   14d0b:	f0 48 0f b1 4b 08    	lock cmpxchg %rcx,0x8(%rbx)
            let count = self.pin_count.get();
   14d11:	48 8b 83 30 08 00 00 	mov    0x830(%rbx),%rax
   14d18:	48 8d 48 01          	lea    0x1(%rax),%rcx
   14d1c:	48 89 8b 30 08 00 00 	mov    %rcx,0x830(%rbx)
            if count.0 % Self::PINNINGS_BETWEEN_COLLECT == 0 {
   14d23:	a8 7f                	test   $0x7f,%al
   14d25:	75 12                	jne    14d39 <_ZN15crossbeam_deque15Worker$LT$T$GT$6resize17hf7c4d42bebcabf15E+0x379>
                self.global().collect(&guard);
   14d27:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
   14d2b:	48 83 ef 80          	sub    $0xffffffffffffff80,%rdi
   14d2f:	48 8d 74 24 28       	lea    0x28(%rsp),%rsi
   14d34:	e8 07 be ff ff       	callq  10b40 <_ZN15crossbeam_epoch8internal6Global7collect17h831494d6c7d86e73E>
        guard
   14d39:	48 8b 5c 24 28       	mov    0x28(%rsp),%rbx

impl Drop for LocalHandle {
    #[inline]
    fn drop(&mut self) {
        unsafe {
            Local::release_handle(&*self.local);
   14d3e:	48 8b bc 24 30 08 00 	mov    0x830(%rsp),%rdi
   14d45:	00 
        let handle_count = self.handle_count.get();
   14d46:	48 8b 87 28 08 00 00 	mov    0x828(%rdi),%rax
        self.handle_count.set(handle_count - 1);
   14d4d:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
   14d51:	48 89 8f 28 08 00 00 	mov    %rcx,0x828(%rdi)
        if guard_count == 0 && handle_count == 1 {
   14d58:	48 83 bf 20 08 00 00 	cmpq   $0x0,0x820(%rdi)
   14d5f:	00 
   14d60:	75 0b                	jne    14d6d <_ZN15crossbeam_deque15Worker$LT$T$GT$6resize17hf7c4d42bebcabf15E+0x3ad>
   14d62:	48 83 f8 01          	cmp    $0x1,%rax
   14d66:	75 05                	jne    14d6d <_ZN15crossbeam_deque15Worker$LT$T$GT$6resize17hf7c4d42bebcabf15E+0x3ad>
            self.finalize();
   14d68:	e8 23 c6 ff ff       	callq  11390 <_ZN15crossbeam_epoch8internal5Local8finalize17hb072c1707f33cb8dE>
   14d6d:	48 83 3c 24 00       	cmpq   $0x0,(%rsp)
   14d72:	0f 84 fc 00 00 00    	je     14e74 <_ZN15crossbeam_deque15Worker$LT$T$GT$6resize17hf7c4d42bebcabf15E+0x4b4>
        let guard = &epoch::pin();
   14d78:	48 89 9c 24 30 08 00 	mov    %rbx,0x830(%rsp)
   14d7f:	00 
   14d80:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   14d85:	4c 89 60 08          	mov    %r12,0x8(%rax)
   14d89:	4c 89 68 10          	mov    %r13,0x10(%rax)
            self.inner
   14d8d:	48 8b 28             	mov    (%rax),%rbp
   14d90:	bf 10 00 00 00       	mov    $0x10,%edi
   14d95:	ff 15 6d 31 23 00    	callq  *0x23316d(%rip)        # 247f08 <malloc@GLIBC_2.2.5>
   14d9b:	48 85 c0             	test   %rax,%rax
   14d9e:	0f 84 55 01 00 00    	je     14ef9 <_ZN15crossbeam_deque15Worker$LT$T$GT$6resize17hf7c4d42bebcabf15E+0x539>
   14da4:	48 89 c3             	mov    %rax,%rbx
   14da7:	4c 89 20             	mov    %r12,(%rax)
   14daa:	4c 89 68 08          	mov    %r13,0x8(%rax)
   14dae:	48 87 9d 80 00 00 00 	xchg   %rbx,0x80(%rbp)
        if let Some(local) = self.local.as_ref() {
   14db5:	48 8b bc 24 30 08 00 	mov    0x830(%rsp),%rdi
   14dbc:	00 
   14dbd:	48 85 ff             	test   %rdi,%rdi
   14dc0:	74 2c                	je     14dee <_ZN15crossbeam_deque15Worker$LT$T$GT$6resize17hf7c4d42bebcabf15E+0x42e>
                Deferred {
   14dc2:	48 8d 05 77 08 00 00 	lea    0x877(%rip),%rax        # 15640 <_ZN15crossbeam_epoch8deferred8Deferred3new4call17h28e4b55e9e6b77c9E>
   14dc9:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   14dce:	48 89 5c 24 30       	mov    %rbx,0x30(%rsp)
   14dd3:	48 8d 74 24 28       	lea    0x28(%rsp),%rsi
            local.defer(Deferred::new(move || drop(f())), self);
   14dd8:	e8 93 c1 ff ff       	callq  10f70 <_ZN15crossbeam_epoch8internal5Local5defer17hb03f4139d4e20a39E>
   14ddd:	48 b8 c0 ff ff ff ff 	movabs $0xfffffffffffffc0,%rax
   14de4:	ff ff 0f 
        if mem::size_of::<T>() * new_cap >= FLUSH_THRESHOLD_BYTES {
   14de7:	49 85 c5             	test   %rax,%r13
   14dea:	75 2e                	jne    14e1a <_ZN15crossbeam_deque15Worker$LT$T$GT$6resize17hf7c4d42bebcabf15E+0x45a>
   14dec:	eb 39                	jmp    14e27 <_ZN15crossbeam_deque15Worker$LT$T$GT$6resize17hf7c4d42bebcabf15E+0x467>
   14dee:	48 83 e3 f8          	and    $0xfffffffffffffff8,%rbx
   14df2:	48 83 7b 08 00       	cmpq   $0x0,0x8(%rbx)
   14df7:	74 09                	je     14e02 <_ZN15crossbeam_deque15Worker$LT$T$GT$6resize17hf7c4d42bebcabf15E+0x442>
   14df9:	48 8b 3b             	mov    (%rbx),%rdi
   14dfc:	ff 15 76 2f 23 00    	callq  *0x232f76(%rip)        # 247d78 <free@GLIBC_2.2.5>
   14e02:	48 89 df             	mov    %rbx,%rdi
   14e05:	ff 15 6d 2f 23 00    	callq  *0x232f6d(%rip)        # 247d78 <free@GLIBC_2.2.5>
   14e0b:	48 b8 c0 ff ff ff ff 	movabs $0xfffffffffffffc0,%rax
   14e12:	ff ff 0f 
   14e15:	49 85 c5             	test   %rax,%r13
   14e18:	74 0d                	je     14e27 <_ZN15crossbeam_deque15Worker$LT$T$GT$6resize17hf7c4d42bebcabf15E+0x467>
   14e1a:	48 8d bc 24 30 08 00 	lea    0x830(%rsp),%rdi
   14e21:	00 
            guard.flush();
   14e22:	e8 29 bb ff ff       	callq  10950 <_ZN15crossbeam_epoch5guard5Guard5flush17hdb3eebcd28944394E>
        if let Some(local) = unsafe { self.local.as_ref() } {
   14e27:	48 8b bc 24 30 08 00 	mov    0x830(%rsp),%rdi
   14e2e:	00 
   14e2f:	48 85 ff             	test   %rdi,%rdi
   14e32:	74 2e                	je     14e62 <_ZN15crossbeam_deque15Worker$LT$T$GT$6resize17hf7c4d42bebcabf15E+0x4a2>
        let guard_count = self.guard_count.get();
   14e34:	48 8b 87 20 08 00 00 	mov    0x820(%rdi),%rax
        self.guard_count.set(guard_count - 1);
   14e3b:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
   14e3f:	48 89 8f 20 08 00 00 	mov    %rcx,0x820(%rdi)
        if guard_count == 1 {
   14e46:	48 83 f8 01          	cmp    $0x1,%rax
   14e4a:	75 16                	jne    14e62 <_ZN15crossbeam_deque15Worker$LT$T$GT$6resize17hf7c4d42bebcabf15E+0x4a2>
   14e4c:	48 c7 47 08 00 00 00 	movq   $0x0,0x8(%rdi)
   14e53:	00 
            if self.handle_count.get() == 0 {
   14e54:	48 83 bf 28 08 00 00 	cmpq   $0x0,0x828(%rdi)
   14e5b:	00 
   14e5c:	0f 84 86 00 00 00    	je     14ee8 <_ZN15crossbeam_deque15Worker$LT$T$GT$6resize17hf7c4d42bebcabf15E+0x528>
    }
   14e62:	48 81 c4 38 10 00 00 	add    $0x1038,%rsp
   14e69:	5b                   	pop    %rbx
   14e6a:	41 5c                	pop    %r12
   14e6c:	41 5d                	pop    %r13
   14e6e:	41 5e                	pop    %r14
   14e70:	41 5f                	pop    %r15
   14e72:	5d                   	pop    %rbp
   14e73:	c3                   	retq   
   14e74:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   14e79:	48 85 ff             	test   %rdi,%rdi
   14e7c:	0f 84 f6 fe ff ff    	je     14d78 <_ZN15crossbeam_deque15Worker$LT$T$GT$6resize17hf7c4d42bebcabf15E+0x3b8>
        let guard_count = self.guard_count.get();
   14e82:	48 8b 87 20 08 00 00 	mov    0x820(%rdi),%rax
        self.guard_count.set(guard_count - 1);
   14e89:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
   14e8d:	48 89 8f 20 08 00 00 	mov    %rcx,0x820(%rdi)
        if guard_count == 1 {
   14e94:	48 83 f8 01          	cmp    $0x1,%rax
   14e98:	0f 85 da fe ff ff    	jne    14d78 <_ZN15crossbeam_deque15Worker$LT$T$GT$6resize17hf7c4d42bebcabf15E+0x3b8>
   14e9e:	48 c7 47 08 00 00 00 	movq   $0x0,0x8(%rdi)
   14ea5:	00 
            if self.handle_count.get() == 0 {
   14ea6:	48 83 bf 28 08 00 00 	cmpq   $0x0,0x828(%rdi)
   14ead:	00 
   14eae:	0f 85 c4 fe ff ff    	jne    14d78 <_ZN15crossbeam_deque15Worker$LT$T$GT$6resize17hf7c4d42bebcabf15E+0x3b8>
                self.finalize();
   14eb4:	e8 d7 c4 ff ff       	callq  11390 <_ZN15crossbeam_epoch8internal5Local8finalize17hb072c1707f33cb8dE>
   14eb9:	e9 ba fe ff ff       	jmpq   14d78 <_ZN15crossbeam_deque15Worker$LT$T$GT$6resize17hf7c4d42bebcabf15E+0x3b8>
   14ebe:	e8 1d d0 ff ff       	callq  11ee0 <_ZN3std6thread5local4fast12Key$LT$T$GT$14try_initialize17hf8b754cf35e0a20aE>
   14ec3:	48 85 c0             	test   %rax,%rax
   14ec6:	0f 85 94 fc ff ff    	jne    14b60 <_ZN15crossbeam_deque15Worker$LT$T$GT$6resize17hf7c4d42bebcabf15E+0x1a0>
   14ecc:	b8 01 00 00 00       	mov    $0x1,%eax
   14ed1:	48 89 04 24          	mov    %rax,(%rsp)
   14ed5:	48 89 5c 24 08       	mov    %rbx,0x8(%rsp)
   14eda:	48 85 c0             	test   %rax,%rax
   14edd:	0f 85 fc fc ff ff    	jne    14bdf <_ZN15crossbeam_deque15Worker$LT$T$GT$6resize17hf7c4d42bebcabf15E+0x21f>
   14ee3:	e9 90 fe ff ff       	jmpq   14d78 <_ZN15crossbeam_deque15Worker$LT$T$GT$6resize17hf7c4d42bebcabf15E+0x3b8>
   14ee8:	e8 a3 c4 ff ff       	callq  11390 <_ZN15crossbeam_epoch8internal5Local8finalize17hb072c1707f33cb8dE>
   14eed:	e9 70 ff ff ff       	jmpq   14e62 <_ZN15crossbeam_deque15Worker$LT$T$GT$6resize17hf7c4d42bebcabf15E+0x4a2>
   14ef2:	e8 c9 e6 ff ff       	callq  135c0 <_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$11allocate_in28_$u7b$$u7b$closure$u7d$$u7d$17h571564fc3a49ddd9E>
   14ef7:	0f 0b                	ud2    
   14ef9:	bf 10 00 00 00       	mov    $0x10,%edi
   14efe:	be 08 00 00 00       	mov    $0x8,%esi
   14f03:	e8 b8 05 ff ff       	callq  54c0 <_ZN5alloc5alloc18handle_alloc_error17hf7bb8682f6c8b1d7E>
   14f08:	0f 0b                	ud2    
   14f0a:	48 8d 3d 10 84 02 00 	lea    0x28410(%rip),%rdi        # 3d321 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x9c1>
   14f11:	48 8d 15 00 1c 23 00 	lea    0x231c00(%rip),%rdx        # 246b18 <__init_array_end+0xb08>
   14f18:	be 2b 00 00 00       	mov    $0x2b,%esi
   14f1d:	e8 8e 24 ff ff       	callq  73b0 <_ZN4core9panicking5panic17h6861470adfbddef8E>
   14f22:	eb 3c                	jmp    14f60 <_ZN15crossbeam_deque15Worker$LT$T$GT$6resize17hf7c4d42bebcabf15E+0x5a0>
   14f24:	be 08 00 00 00       	mov    $0x8,%esi
   14f29:	4c 89 ef             	mov    %r13,%rdi
   14f2c:	e8 8f 05 ff ff       	callq  54c0 <_ZN5alloc5alloc18handle_alloc_error17hf7bb8682f6c8b1d7E>
   14f31:	0f 0b                	ud2    
   14f33:	0f 0b                	ud2    
   14f35:	0f 0b                	ud2    
   14f37:	bf 38 08 00 00       	mov    $0x838,%edi
   14f3c:	be 08 00 00 00       	mov    $0x8,%esi
   14f41:	e8 7a 05 ff ff       	callq  54c0 <_ZN5alloc5alloc18handle_alloc_error17hf7bb8682f6c8b1d7E>
   14f46:	0f 0b                	ud2    
   14f48:	48 8d 3d d2 83 02 00 	lea    0x283d2(%rip),%rdi        # 3d321 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x9c1>
   14f4f:	48 8d 15 c2 1b 23 00 	lea    0x231bc2(%rip),%rdx        # 246b18 <__init_array_end+0xb08>
   14f56:	be 2b 00 00 00       	mov    $0x2b,%esi
   14f5b:	e8 50 24 ff ff       	callq  73b0 <_ZN4core9panicking5panic17h6861470adfbddef8E>
   14f60:	0f 0b                	ud2    
   14f62:	48 89 c3             	mov    %rax,%rbx
   14f65:	48 8d 7c 24 28       	lea    0x28(%rsp),%rdi
    }
   14f6a:	e8 61 06 00 00       	callq  155d0 <_ZN4core3ptr13drop_in_place17h45b938d697250b2cE>
   14f6f:	48 8d bc 24 30 08 00 	lea    0x830(%rsp),%rdi
   14f76:	00 
   14f77:	e8 94 06 00 00       	callq  15610 <_ZN4core3ptr13drop_in_place17h40f816241c0110baE>
   14f7c:	48 83 3c 24 00       	cmpq   $0x0,(%rsp)
   14f81:	74 4a                	je     14fcd <_ZN15crossbeam_deque15Worker$LT$T$GT$6resize17hf7c4d42bebcabf15E+0x60d>
   14f83:	48 89 df             	mov    %rbx,%rdi
   14f86:	e8 15 f1 fe ff       	callq  40a0 <_Unwind_Resume@plt>
   14f8b:	0f 0b                	ud2    
   14f8d:	48 89 c3             	mov    %rax,%rbx
   14f90:	eb dd                	jmp    14f6f <_ZN15crossbeam_deque15Worker$LT$T$GT$6resize17hf7c4d42bebcabf15E+0x5af>
   14f92:	48 89 c3             	mov    %rax,%rbx
   14f95:	48 8d 7c 24 28       	lea    0x28(%rsp),%rdi
   14f9a:	e8 31 06 00 00       	callq  155d0 <_ZN4core3ptr13drop_in_place17h45b938d697250b2cE>
   14f9f:	48 89 df             	mov    %rbx,%rdi
   14fa2:	e8 f9 f0 fe ff       	callq  40a0 <_Unwind_Resume@plt>
   14fa7:	0f 0b                	ud2    
   14fa9:	48 89 c3             	mov    %rax,%rbx
   14fac:	48 8d bc 24 30 08 00 	lea    0x830(%rsp),%rdi
   14fb3:	00 
   14fb4:	e8 17 06 00 00       	callq  155d0 <_ZN4core3ptr13drop_in_place17h45b938d697250b2cE>
   14fb9:	48 89 df             	mov    %rbx,%rdi
   14fbc:	e8 df f0 fe ff       	callq  40a0 <_Unwind_Resume@plt>
   14fc1:	0f 0b                	ud2    
   14fc3:	48 89 c3             	mov    %rax,%rbx
   14fc6:	48 83 3c 24 00       	cmpq   $0x0,(%rsp)
   14fcb:	75 b6                	jne    14f83 <_ZN15crossbeam_deque15Worker$LT$T$GT$6resize17hf7c4d42bebcabf15E+0x5c3>
   14fcd:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   14fd2:	e8 f9 05 00 00       	callq  155d0 <_ZN4core3ptr13drop_in_place17h45b938d697250b2cE>
   14fd7:	48 89 df             	mov    %rbx,%rdi
   14fda:	e8 c1 f0 fe ff       	callq  40a0 <_Unwind_Resume@plt>
   14fdf:	0f 0b                	ud2    
   14fe1:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   14fe8:	00 00 00 
   14feb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000014ff0 <_ZN10rayon_core8registry12WorkerThread14take_local_job17h6acdab09e45847e8E>:
    pub(super) unsafe fn take_local_job(&self) -> Option<JobRef> {
   14ff0:	41 57                	push   %r15
   14ff2:	41 56                	push   %r14
   14ff4:	53                   	push   %rbx
    /// assert_eq!(w.pop(), Some(2));
    /// assert_eq!(w.pop(), None);
    /// ```
    pub fn pop(&self) -> Option<T> {
        // Load the back and front index.
        let b = self.inner.back.load(Ordering::Relaxed);
   14ff5:	48 8b 97 00 01 00 00 	mov    0x100(%rdi),%rdx
   14ffc:	48 8b 8a 08 01 00 00 	mov    0x108(%rdx),%rcx
   15003:	48 8b b2 00 01 00 00 	mov    0x100(%rdx),%rsi
   1500a:	48 89 c8             	mov    %rcx,%rax
   1500d:	48 29 f0             	sub    %rsi,%rax

        // Calculate the length of the queue.
        let len = b.wrapping_sub(f);

        // Is the queue empty?
        if len <= 0 {
   15010:	48 85 c0             	test   %rax,%rax
   15013:	0f 8e 87 00 00 00    	jle    150a0 <_ZN10rayon_core8registry12WorkerThread14take_local_job17h6acdab09e45847e8E+0xb0>
            return None;
        }

        match self.flavor {
            // Pop from the front of the queue.
            Flavor::Fifo => {
   15019:	80 bf 18 01 00 00 01 	cmpb   $0x1,0x118(%rdi)
   15020:	0f 85 82 00 00 00    	jne    150a8 <_ZN10rayon_core8registry12WorkerThread14take_local_job17h6acdab09e45847e8E+0xb8>
   15026:	48 8d 59 ff          	lea    -0x1(%rcx),%rbx
   1502a:	48 89 9a 08 01 00 00 	mov    %rbx,0x108(%rdx)
   15031:	0f ae f0             	mfence 
                self.inner.back.store(b, Ordering::Relaxed);

                atomic::fence(Ordering::SeqCst);

                // Load the front index.
                let f = self.inner.front.load(Ordering::Relaxed);
   15034:	4c 8b 87 00 01 00 00 	mov    0x100(%rdi),%r8
   1503b:	49 8b 80 00 01 00 00 	mov    0x100(%r8),%rax

                // Compute the length after the back index was decremented.
                let len = b.wrapping_sub(f);

                if len < 0 {
   15042:	49 89 da             	mov    %rbx,%r10
   15045:	49 29 c2             	sub    %rax,%r10
   15048:	0f 88 c3 00 00 00    	js     15111 <_ZN10rayon_core8registry12WorkerThread14take_local_job17h6acdab09e45847e8E+0x121>
                    // The queue is empty. Restore the back index to the original task.
                    self.inner.back.store(b.wrapping_add(1), Ordering::Relaxed);
                    None
                } else {
                    // Read the task to be popped.
                    let buffer = self.buffer.get();
   1504e:	4c 8b 8f 08 01 00 00 	mov    0x108(%rdi),%r9
   15055:	48 8b b7 10 01 00 00 	mov    0x110(%rdi),%rsi
        self.ptr.offset(index & (self.cap - 1) as isize)
   1505c:	48 8d 56 ff          	lea    -0x1(%rsi),%rdx
   15060:	48 21 da             	and    %rbx,%rdx
   15063:	48 c1 e2 04          	shl    $0x4,%rdx
   15067:	4d 8b 34 11          	mov    (%r9,%rdx,1),%r14
   1506b:	4d 8b 7c 11 08       	mov    0x8(%r9,%rdx,1),%r15
                    let mut task = unsafe { Some(buffer.read(b)) };

                    // Are we popping the last task from the queue?
                    if len == 0 {
   15070:	4d 85 d2             	test   %r10,%r10
   15073:	0f 84 b7 00 00 00    	je     15130 <_ZN10rayon_core8registry12WorkerThread14take_local_job17h6acdab09e45847e8E+0x140>

                        // Restore the back index to the original task.
                        self.inner.back.store(b.wrapping_add(1), Ordering::Relaxed);
                    } else {
                        // Shrink the buffer if `len` is less than one fourth of the capacity.
                        if buffer.cap > MIN_CAP && len < buffer.cap as isize / 4 {
   15079:	48 83 fe 41          	cmp    $0x41,%rsi
   1507d:	0f 82 ce 00 00 00    	jb     15151 <_ZN10rayon_core8registry12WorkerThread14take_local_job17h6acdab09e45847e8E+0x161>
   15083:	48 89 f0             	mov    %rsi,%rax
   15086:	48 c1 f8 3f          	sar    $0x3f,%rax
   1508a:	48 c1 e8 3e          	shr    $0x3e,%rax
   1508e:	48 01 f0             	add    %rsi,%rax
   15091:	48 c1 f8 02          	sar    $0x2,%rax
   15095:	49 39 c2             	cmp    %rax,%r10
   15098:	0f 8d b3 00 00 00    	jge    15151 <_ZN10rayon_core8registry12WorkerThread14take_local_job17h6acdab09e45847e8E+0x161>
   1509e:	eb 60                	jmp    15100 <_ZN10rayon_core8registry12WorkerThread14take_local_job17h6acdab09e45847e8E+0x110>
   150a0:	45 31 ff             	xor    %r15d,%r15d
   150a3:	e9 a9 00 00 00       	jmpq   15151 <_ZN10rayon_core8registry12WorkerThread14take_local_job17h6acdab09e45847e8E+0x161>
   150a8:	bb 01 00 00 00       	mov    $0x1,%ebx
   150ad:	f0 48 0f c1 9a 00 01 	lock xadd %rbx,0x100(%rdx)
   150b4:	00 00 
   150b6:	48 89 da             	mov    %rbx,%rdx
   150b9:	48 f7 d2             	not    %rdx
                if b.wrapping_sub(new_f) < 0 {
   150bc:	48 01 d1             	add    %rdx,%rcx
   150bf:	78 5c                	js     1511d <_ZN10rayon_core8registry12WorkerThread14take_local_job17h6acdab09e45847e8E+0x12d>
                    let buffer = self.buffer.get();
   150c1:	48 8b 8f 08 01 00 00 	mov    0x108(%rdi),%rcx
   150c8:	48 8b b7 10 01 00 00 	mov    0x110(%rdi),%rsi
        self.ptr.offset(index & (self.cap - 1) as isize)
   150cf:	48 8d 56 ff          	lea    -0x1(%rsi),%rdx
   150d3:	48 21 da             	and    %rbx,%rdx
   150d6:	48 c1 e2 04          	shl    $0x4,%rdx
   150da:	4c 8b 34 11          	mov    (%rcx,%rdx,1),%r14
   150de:	4c 8b 7c 11 08       	mov    0x8(%rcx,%rdx,1),%r15
                    if buffer.cap > MIN_CAP && len <= buffer.cap as isize / 4 {
   150e3:	48 83 fe 41          	cmp    $0x41,%rsi
   150e7:	72 68                	jb     15151 <_ZN10rayon_core8registry12WorkerThread14take_local_job17h6acdab09e45847e8E+0x161>
   150e9:	48 89 f1             	mov    %rsi,%rcx
   150ec:	48 c1 f9 3f          	sar    $0x3f,%rcx
   150f0:	48 c1 e9 3e          	shr    $0x3e,%rcx
   150f4:	48 01 f1             	add    %rsi,%rcx
   150f7:	48 c1 f9 02          	sar    $0x2,%rcx
   150fb:	48 39 c8             	cmp    %rcx,%rax
   150fe:	7f 51                	jg     15151 <_ZN10rayon_core8registry12WorkerThread14take_local_job17h6acdab09e45847e8E+0x161>
   15100:	48 d1 ee             	shr    %rsi
   15103:	48 81 c7 00 01 00 00 	add    $0x100,%rdi
   1510a:	e8 b1 f8 ff ff       	callq  149c0 <_ZN15crossbeam_deque15Worker$LT$T$GT$6resize17hf7c4d42bebcabf15E>
   1510f:	eb 40                	jmp    15151 <_ZN10rayon_core8registry12WorkerThread14take_local_job17h6acdab09e45847e8E+0x161>
   15111:	49 89 88 08 01 00 00 	mov    %rcx,0x108(%r8)
   15118:	45 31 ff             	xor    %r15d,%r15d
   1511b:	eb 34                	jmp    15151 <_ZN10rayon_core8registry12WorkerThread14take_local_job17h6acdab09e45847e8E+0x161>
                    self.inner.front.store(f, Ordering::Relaxed);
   1511d:	48 8b 87 00 01 00 00 	mov    0x100(%rdi),%rax
   15124:	48 89 98 00 01 00 00 	mov    %rbx,0x100(%rax)
   1512b:	45 31 ff             	xor    %r15d,%r15d
   1512e:	eb 21                	jmp    15151 <_ZN10rayon_core8registry12WorkerThread14take_local_job17h6acdab09e45847e8E+0x161>
   15130:	31 d2                	xor    %edx,%edx
   15132:	48 8d 70 01          	lea    0x1(%rax),%rsi
   15136:	f0 49 0f b1 b0 00 01 	lock cmpxchg %rsi,0x100(%r8)
   1513d:	00 00 
                        if self
   1513f:	4c 0f 45 fa          	cmovne %rdx,%r15
                        self.inner.back.store(b.wrapping_add(1), Ordering::Relaxed);
   15143:	48 8b 87 00 01 00 00 	mov    0x100(%rdi),%rax
   1514a:	48 89 88 08 01 00 00 	mov    %rcx,0x108(%rax)
    }
   15151:	4c 89 f0             	mov    %r14,%rax
   15154:	4c 89 fa             	mov    %r15,%rdx
   15157:	5b                   	pop    %rbx
   15158:	41 5e                	pop    %r14
   1515a:	41 5f                	pop    %r15
   1515c:	c3                   	retq   
   1515d:	0f 1f 00             	nopl   (%rax)

0000000000015160 <_ZN10rayon_core8registry12WorkerThread15wait_until_cold17h2e02f3e12907157bE>:
    unsafe fn wait_until_cold<L: LatchProbe + ?Sized>(&self, latch: &L) {
   15160:	55                   	push   %rbp
   15161:	41 57                	push   %r15
   15163:	41 56                	push   %r14
   15165:	41 55                	push   %r13
   15167:	41 54                	push   %r12
   15169:	53                   	push   %rbx
   1516a:	48 83 ec 58          	sub    $0x58,%rsp
   1516e:	8a 06                	mov    (%rsi),%al
   15170:	84 c0                	test   %al,%al
        while !latch.probe() {
   15172:	0f 85 bc 02 00 00    	jne    15434 <_ZN10rayon_core8registry12WorkerThread15wait_until_cold17h2e02f3e12907157bE+0x2d4>
   15178:	49 89 f6             	mov    %rsi,%r14
   1517b:	48 89 fb             	mov    %rdi,%rbx
   1517e:	4c 8d 64 24 08       	lea    0x8(%rsp),%r12
   15183:	45 31 ed             	xor    %r13d,%r13d
   15186:	eb 16                	jmp    1519e <_ZN10rayon_core8registry12WorkerThread15wait_until_cold17h2e02f3e12907157bE+0x3e>
   15188:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1518f:	00 
   15190:	45 31 ed             	xor    %r13d,%r13d
   15193:	41 8a 06             	mov    (%r14),%al
   15196:	84 c0                	test   %al,%al
   15198:	0f 85 71 02 00 00    	jne    1540f <_ZN10rayon_core8registry12WorkerThread15wait_until_cold17h2e02f3e12907157bE+0x2af>
            if let Some(job) = self
   1519e:	48 89 df             	mov    %rbx,%rdi
   151a1:	e8 4a fe ff ff       	callq  14ff0 <_ZN10rayon_core8registry12WorkerThread14take_local_job17h6acdab09e45847e8E>
   151a6:	49 89 d7             	mov    %rdx,%r15
   151a9:	48 85 d2             	test   %rdx,%rdx
   151ac:	74 12                	je     151c0 <_ZN10rayon_core8registry12WorkerThread15wait_until_cold17h2e02f3e12907157bE+0x60>
   151ae:	48 89 c5             	mov    %rax,%rbp
        if yields > ROUNDS_UNTIL_SLEEPY {
   151b1:	49 83 fd 21          	cmp    $0x21,%r13
   151b5:	0f 83 cb 00 00 00    	jae    15286 <_ZN10rayon_core8registry12WorkerThread15wait_until_cold17h2e02f3e12907157bE+0x126>
   151bb:	e9 40 01 00 00       	jmpq   15300 <_ZN10rayon_core8registry12WorkerThread15wait_until_cold17h2e02f3e12907157bE+0x1a0>
   151c0:	48 89 5c 24 08       	mov    %rbx,0x8(%rsp)
        let num_threads = self.registry.thread_infos.len();
   151c5:	48 8b bb 30 01 00 00 	mov    0x130(%rbx),%rdi
   151cc:	48 8b 8f 90 01 00 00 	mov    0x190(%rdi),%rcx
        if num_threads <= 1 {
   151d3:	48 83 f9 01          	cmp    $0x1,%rcx
   151d7:	0f 86 06 01 00 00    	jbe    152e3 <_ZN10rayon_core8registry12WorkerThread15wait_until_cold17h2e02f3e12907157bE+0x183>
            state: Cell::new(seed),
        }
    }

    fn next(&self) -> u64 {
        let mut x = self.state.get();
   151dd:	48 8b 83 28 01 00 00 	mov    0x128(%rbx),%rax
        debug_assert_ne!(x, 0);
        x ^= x >> 12;
   151e4:	48 89 c2             	mov    %rax,%rdx
   151e7:	48 c1 ea 0c          	shr    $0xc,%rdx
   151eb:	48 31 c2             	xor    %rax,%rdx
        x ^= x << 25;
   151ee:	48 89 d6             	mov    %rdx,%rsi
   151f1:	48 c1 e6 19          	shl    $0x19,%rsi
   151f5:	48 31 d6             	xor    %rdx,%rsi
        x ^= x >> 27;
   151f8:	48 89 f0             	mov    %rsi,%rax
   151fb:	48 c1 e8 1b          	shr    $0x1b,%rax
   151ff:	48 31 f0             	xor    %rsi,%rax
   15202:	48 89 83 28 01 00 00 	mov    %rax,0x128(%rbx)
   15209:	48 ba 1d dd 6c 4f 91 	movabs $0x2545f4914f6cdd1d,%rdx
   15210:	f4 45 25 
   15213:	48 0f af c2          	imul   %rdx,%rax
        x.wrapping_mul(0x2545_f491_4f6c_dd1d)
    }

    /// Return a value from `0..n`.
    fn next_usize(&self, n: usize) -> usize {
        (self.next() % n as u64) as usize
   15217:	31 d2                	xor    %edx,%edx
   15219:	48 f7 f1             	div    %rcx
   1521c:	48 89 54 24 20       	mov    %rdx,0x20(%rsp)
   15221:	48 89 4c 24 28       	mov    %rcx,0x28(%rsp)
   15226:	48 c7 44 24 30 00 00 	movq   $0x0,0x30(%rsp)
   1522d:	00 00 
   1522f:	48 89 54 24 38       	mov    %rdx,0x38(%rsp)
   15234:	c6 44 24 40 00       	movb   $0x0,0x40(%rsp)
   15239:	4c 89 64 24 48       	mov    %r12,0x48(%rsp)
   1523e:	4c 89 64 24 50       	mov    %r12,0x50(%rsp)
   15243:	48 8d 44 24 48       	lea    0x48(%rsp),%rax
   15248:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   1524d:	48 8d 44 24 50       	lea    0x50(%rsp),%rax
   15252:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   15257:	48 8d 7c 24 20       	lea    0x20(%rsp),%rdi
   1525c:	48 8d 74 24 10       	lea    0x10(%rsp),%rsi
   15261:	e8 5a 2a 00 00       	callq  17cc0 <_ZN4core4iter6traits8iterator8Iterator8try_fold17he2a1a93294a82a2eE>
   15266:	49 89 d7             	mov    %rdx,%r15
   15269:	48 85 d2             	test   %rdx,%rdx
   1526c:	74 39                	je     152a7 <_ZN10rayon_core8registry12WorkerThread15wait_until_cold17h2e02f3e12907157bE+0x147>
   1526e:	48 89 c5             	mov    %rax,%rbp
   15271:	4d 85 ff             	test   %r15,%r15
   15274:	74 66                	je     152dc <_ZN10rayon_core8registry12WorkerThread15wait_until_cold17h2e02f3e12907157bE+0x17c>
   15276:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1527d:	00 00 00 
   15280:	49 83 fd 21          	cmp    $0x21,%r13
   15284:	72 7a                	jb     15300 <_ZN10rayon_core8registry12WorkerThread15wait_until_cold17h2e02f3e12907157bE+0x1a0>
                yields = self.registry.sleep.work_found(self.index, yields);
   15286:	48 8b bb 30 01 00 00 	mov    0x130(%rbx),%rdi
   1528d:	48 8b 87 98 01 00 00 	mov    0x198(%rdi),%rax
        if old_state != AWAKE {
   15294:	48 85 c0             	test   %rax,%rax
   15297:	74 67                	je     15300 <_ZN10rayon_core8registry12WorkerThread15wait_until_cold17h2e02f3e12907157bE+0x1a0>
   15299:	48 81 c7 98 01 00 00 	add    $0x198,%rdi
            self.tickle_cold(worker_index);
   152a0:	e8 cb 2d 00 00       	callq  18070 <_ZN10rayon_core5sleep5Sleep11tickle_cold17h334403ad3bddecd8E>
   152a5:	eb 59                	jmp    15300 <_ZN10rayon_core8registry12WorkerThread15wait_until_cold17h2e02f3e12907157bE+0x1a0>
   152a7:	8a 44 24 40          	mov    0x40(%rsp),%al
   152ab:	84 c0                	test   %al,%al
   152ad:	74 0e                	je     152bd <_ZN10rayon_core8registry12WorkerThread15wait_until_cold17h2e02f3e12907157bE+0x15d>
   152af:	3c 02                	cmp    $0x2,%al
   152b1:	74 0f                	je     152c2 <_ZN10rayon_core8registry12WorkerThread15wait_until_cold17h2e02f3e12907157bE+0x162>
   152b3:	45 31 ff             	xor    %r15d,%r15d
   152b6:	4d 85 ff             	test   %r15,%r15
   152b9:	75 c5                	jne    15280 <_ZN10rayon_core8registry12WorkerThread15wait_until_cold17h2e02f3e12907157bE+0x120>
   152bb:	eb 1f                	jmp    152dc <_ZN10rayon_core8registry12WorkerThread15wait_until_cold17h2e02f3e12907157bE+0x17c>
   152bd:	c6 44 24 40 02       	movb   $0x2,0x40(%rsp)
   152c2:	48 8d 7c 24 30       	lea    0x30(%rsp),%rdi
   152c7:	48 8d 74 24 10       	lea    0x10(%rsp),%rsi
   152cc:	e8 ef 29 00 00       	callq  17cc0 <_ZN4core4iter6traits8iterator8Iterator8try_fold17he2a1a93294a82a2eE>
   152d1:	48 89 c5             	mov    %rax,%rbp
   152d4:	49 89 d7             	mov    %rdx,%r15
   152d7:	4d 85 ff             	test   %r15,%r15
   152da:	75 a4                	jne    15280 <_ZN10rayon_core8registry12WorkerThread15wait_until_cold17h2e02f3e12907157bE+0x120>
                .or_else(|| self.registry.pop_injected_job(self.index))
   152dc:	48 8b bb 30 01 00 00 	mov    0x130(%rbx),%rdi
   152e3:	48 83 ef 80          	sub    $0xffffffffffffff80,%rdi
        let job = self.injected_jobs.pop().ok();
   152e7:	e8 a4 1c 00 00       	callq  16f90 <_ZN15crossbeam_queue9seg_queue17SegQueue$LT$T$GT$3pop17h021a539f4a1d2f89E>
            if let Some(job) = self
   152ec:	48 85 d2             	test   %rdx,%rdx
   152ef:	74 4b                	je     1533c <_ZN10rayon_core8registry12WorkerThread15wait_until_cold17h2e02f3e12907157bE+0x1dc>
   152f1:	48 89 c5             	mov    %rax,%rbp
   152f4:	49 89 d7             	mov    %rdx,%r15
        if yields > ROUNDS_UNTIL_SLEEPY {
   152f7:	49 83 fd 21          	cmp    $0x21,%r13
   152fb:	73 89                	jae    15286 <_ZN10rayon_core8registry12WorkerThread15wait_until_cold17h2e02f3e12907157bE+0x126>
   152fd:	0f 1f 00             	nopl   (%rax)
        (self.execute_fn)(self.pointer)
   15300:	48 89 ef             	mov    %rbp,%rdi
   15303:	41 ff d7             	callq  *%r15
        self.registry.sleep.tickle(self.index);
   15306:	48 8b bb 30 01 00 00 	mov    0x130(%rbx),%rdi
   1530d:	48 8b 87 98 01 00 00 	mov    0x198(%rdi),%rax
        if old_state != AWAKE {
   15314:	48 85 c0             	test   %rax,%rax
   15317:	0f 84 73 fe ff ff    	je     15190 <_ZN10rayon_core8registry12WorkerThread15wait_until_cold17h2e02f3e12907157bE+0x30>
   1531d:	48 81 c7 98 01 00 00 	add    $0x198,%rdi
            self.tickle_cold(worker_index);
   15324:	e8 47 2d 00 00       	callq  18070 <_ZN10rayon_core5sleep5Sleep11tickle_cold17h334403ad3bddecd8E>
   15329:	45 31 ed             	xor    %r13d,%r13d
   1532c:	41 8a 06             	mov    (%r14),%al
   1532f:	84 c0                	test   %al,%al
        while !latch.probe() {
   15331:	0f 84 67 fe ff ff    	je     1519e <_ZN10rayon_core8registry12WorkerThread15wait_until_cold17h2e02f3e12907157bE+0x3e>
   15337:	e9 d3 00 00 00       	jmpq   1540f <_ZN10rayon_core8registry12WorkerThread15wait_until_cold17h2e02f3e12907157bE+0x2af>
   1533c:	48 8b ab 30 01 00 00 	mov    0x130(%rbx),%rbp
                yields = self.registry.sleep.no_work_found(self.index, yields);
   15343:	b8 98 01 00 00       	mov    $0x198,%eax
   15348:	48 01 c5             	add    %rax,%rbp
        if yields < ROUNDS_UNTIL_SLEEPY {
   1534b:	49 83 fd 20          	cmp    $0x20,%r13
   1534f:	73 19                	jae    1536a <_ZN10rayon_core8registry12WorkerThread15wait_until_cold17h2e02f3e12907157bE+0x20a>
   15351:	ff 15 29 2b 23 00    	callq  *0x232b29(%rip)        # 247e80 <sched_yield@GLIBC_2.2.5>
            yields + 1
   15357:	49 ff c5             	inc    %r13
   1535a:	41 8a 06             	mov    (%r14),%al
   1535d:	84 c0                	test   %al,%al
        while !latch.probe() {
   1535f:	0f 84 39 fe ff ff    	je     1519e <_ZN10rayon_core8registry12WorkerThread15wait_until_cold17h2e02f3e12907157bE+0x3e>
   15365:	e9 a5 00 00 00       	jmpq   1540f <_ZN10rayon_core8registry12WorkerThread15wait_until_cold17h2e02f3e12907157bE+0x2af>
   1536a:	4c 8b bb 20 01 00 00 	mov    0x120(%rbx),%r15
        } else if yields == ROUNDS_UNTIL_SLEEPY {
   15371:	75 3e                	jne    153b1 <_ZN10rayon_core8registry12WorkerThread15wait_until_cold17h2e02f3e12907157bE+0x251>
   15373:	ff 15 07 2b 23 00    	callq  *0x232b07(%rip)        # 247e80 <sched_yield@GLIBC_2.2.5>
   15379:	4b 8d 0c 3f          	lea    (%r15,%r15,1),%rcx
   1537d:	48 83 c1 02          	add    $0x2,%rcx
   15381:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   15388:	00 00 00 
   1538b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   15390:	48 8b 45 00          	mov    0x0(%rbp),%rax
        (state >> 1) != 0
   15394:	48 83 f8 01          	cmp    $0x1,%rax
            let state = self.state.load(Ordering::Acquire);
            log!(GetSleepy {
                worker: worker_index,
                state: state,
            });
            if self.any_worker_is_sleepy(state) {
   15398:	77 49                	ja     153e3 <_ZN10rayon_core8registry12WorkerThread15wait_until_cold17h2e02f3e12907157bE+0x283>
        ((worker_index + 1) << 1) + state
   1539a:	48 8d 14 01          	lea    (%rcx,%rax,1),%rdx
   1539e:	f0 48 0f b1 55 00    	lock cmpxchg %rdx,0x0(%rbp)
   153a4:	41 bd 21 00 00 00    	mov    $0x21,%r13d
                // See the section on "Ensuring Sequentially
                // Consistency" in README.md for more details.
                //
                // The failure ordering doesn't matter since we are
                // about to spin around and do a fresh load.
                if self
   153aa:	75 e4                	jne    15390 <_ZN10rayon_core8registry12WorkerThread15wait_until_cold17h2e02f3e12907157bE+0x230>
   153ac:	e9 e2 fd ff ff       	jmpq   15193 <_ZN10rayon_core8registry12WorkerThread15wait_until_cold17h2e02f3e12907157bE+0x33>
        } else if yields < ROUNDS_UNTIL_ASLEEP {
   153b1:	49 83 fd 40          	cmp    $0x40,%r13
   153b5:	73 3f                	jae    153f6 <_ZN10rayon_core8registry12WorkerThread15wait_until_cold17h2e02f3e12907157bE+0x296>
   153b7:	ff 15 c3 2a 23 00    	callq  *0x232ac3(%rip)        # 247e80 <sched_yield@GLIBC_2.2.5>
   153bd:	48 8b 45 00          	mov    0x0(%rbp),%rax
        (state >> 1) == (worker_index + 1)
   153c1:	48 d1 e8             	shr    %rax
   153c4:	49 ff c7             	inc    %r15
                yields + 1
   153c7:	49 ff c5             	inc    %r13
        (state >> 1) == (worker_index + 1)
   153ca:	4c 39 f8             	cmp    %r15,%rax
            if self.still_sleepy(worker_index) {
   153cd:	b8 00 00 00 00       	mov    $0x0,%eax
   153d2:	4c 0f 45 e8          	cmovne %rax,%r13
   153d6:	41 8a 06             	mov    (%r14),%al
   153d9:	84 c0                	test   %al,%al
   153db:	0f 84 bd fd ff ff    	je     1519e <_ZN10rayon_core8registry12WorkerThread15wait_until_cold17h2e02f3e12907157bE+0x3e>
   153e1:	eb 2c                	jmp    1540f <_ZN10rayon_core8registry12WorkerThread15wait_until_cold17h2e02f3e12907157bE+0x2af>
   153e3:	41 bd 20 00 00 00    	mov    $0x20,%r13d
   153e9:	41 8a 06             	mov    (%r14),%al
   153ec:	84 c0                	test   %al,%al
   153ee:	0f 84 aa fd ff ff    	je     1519e <_ZN10rayon_core8registry12WorkerThread15wait_until_cold17h2e02f3e12907157bE+0x3e>
   153f4:	eb 19                	jmp    1540f <_ZN10rayon_core8registry12WorkerThread15wait_until_cold17h2e02f3e12907157bE+0x2af>
            self.sleep(worker_index);
   153f6:	48 89 ef             	mov    %rbp,%rdi
   153f9:	4c 89 fe             	mov    %r15,%rsi
   153fc:	e8 7f 2d 00 00       	callq  18180 <_ZN10rayon_core5sleep5Sleep5sleep17h0772af2aea612ed1E>
   15401:	45 31 ed             	xor    %r13d,%r13d
   15404:	41 8a 06             	mov    (%r14),%al
   15407:	84 c0                	test   %al,%al
   15409:	0f 84 8f fd ff ff    	je     1519e <_ZN10rayon_core8registry12WorkerThread15wait_until_cold17h2e02f3e12907157bE+0x3e>
        if yields > ROUNDS_UNTIL_SLEEPY {
   1540f:	49 83 fd 21          	cmp    $0x21,%r13
   15413:	72 1f                	jb     15434 <_ZN10rayon_core8registry12WorkerThread15wait_until_cold17h2e02f3e12907157bE+0x2d4>
        self.registry.sleep.work_found(self.index, yields);
   15415:	48 8b bb 30 01 00 00 	mov    0x130(%rbx),%rdi
   1541c:	48 8b 87 98 01 00 00 	mov    0x198(%rdi),%rax
        if old_state != AWAKE {
   15423:	48 85 c0             	test   %rax,%rax
   15426:	74 0c                	je     15434 <_ZN10rayon_core8registry12WorkerThread15wait_until_cold17h2e02f3e12907157bE+0x2d4>
   15428:	48 81 c7 98 01 00 00 	add    $0x198,%rdi
            self.tickle_cold(worker_index);
   1542f:	e8 3c 2c 00 00       	callq  18070 <_ZN10rayon_core5sleep5Sleep11tickle_cold17h334403ad3bddecd8E>
    }
   15434:	48 83 c4 58          	add    $0x58,%rsp
   15438:	5b                   	pop    %rbx
   15439:	41 5c                	pop    %r12
   1543b:	41 5d                	pop    %r13
   1543d:	41 5e                	pop    %r14
   1543f:	41 5f                	pop    %r15
   15441:	5d                   	pop    %rbp
   15442:	c3                   	retq   
   15443:	e8 a8 2f 00 00       	callq  183f0 <_ZN4core3ptr13drop_in_place17hc443eae86009dba0E>
   15448:	0f 0b                	ud2    
   1544a:	e8 a1 2f 00 00       	callq  183f0 <_ZN4core3ptr13drop_in_place17hc443eae86009dba0E>
   1544f:	0f 0b                	ud2    
   15451:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   15458:	00 00 00 
   1545b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000015460 <_ZN4core3ptr13drop_in_place17h5f711884206bbba6E>:
   15460:	41 56                	push   %r14
   15462:	53                   	push   %rbx
   15463:	50                   	push   %rax
   15464:	48 83 3f 02          	cmpq   $0x2,(%rdi)
   15468:	72 29                	jb     15493 <_ZN4core3ptr13drop_in_place17h5f711884206bbba6E+0x33>
   1546a:	48 89 fb             	mov    %rdi,%rbx
   1546d:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
   15471:	48 8b 43 10          	mov    0x10(%rbx),%rax
   15475:	ff 10                	callq  *(%rax)
   15477:	48 8b 43 10          	mov    0x10(%rbx),%rax
   1547b:	48 83 78 08 00       	cmpq   $0x0,0x8(%rax)
   15480:	74 11                	je     15493 <_ZN4core3ptr13drop_in_place17h5f711884206bbba6E+0x33>
   15482:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
   15486:	48 83 c4 08          	add    $0x8,%rsp
   1548a:	5b                   	pop    %rbx
   1548b:	41 5e                	pop    %r14
   1548d:	ff 25 e5 28 23 00    	jmpq   *0x2328e5(%rip)        # 247d78 <free@GLIBC_2.2.5>
   15493:	48 83 c4 08          	add    $0x8,%rsp
   15497:	5b                   	pop    %rbx
   15498:	41 5e                	pop    %r14
   1549a:	c3                   	retq   
   1549b:	49 89 c6             	mov    %rax,%r14
   1549e:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
   154a2:	48 8b 43 10          	mov    0x10(%rbx),%rax
   154a6:	48 8b 70 08          	mov    0x8(%rax),%rsi
   154aa:	e8 91 26 00 00       	callq  17b40 <_ZN5alloc5alloc8box_free17h16551760f718b115E>
   154af:	4c 89 f7             	mov    %r14,%rdi
   154b2:	e8 e9 eb fe ff       	callq  40a0 <_Unwind_Resume@plt>
   154b7:	0f 0b                	ud2    
   154b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000154c0 <_ZN4core3ptr13drop_in_place17h60456c2b44f09701E>:
   154c0:	41 56                	push   %r14
   154c2:	53                   	push   %rbx
   154c3:	50                   	push   %rax
   154c4:	48 83 3f 01          	cmpq   $0x1,(%rdi)
   154c8:	76 29                	jbe    154f3 <_ZN4core3ptr13drop_in_place17h60456c2b44f09701E+0x33>
   154ca:	48 89 fb             	mov    %rdi,%rbx
   154cd:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
   154d1:	48 8b 43 10          	mov    0x10(%rbx),%rax
   154d5:	ff 10                	callq  *(%rax)
   154d7:	48 8b 43 10          	mov    0x10(%rbx),%rax
   154db:	48 83 78 08 00       	cmpq   $0x0,0x8(%rax)
   154e0:	74 11                	je     154f3 <_ZN4core3ptr13drop_in_place17h60456c2b44f09701E+0x33>
   154e2:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
   154e6:	48 83 c4 08          	add    $0x8,%rsp
   154ea:	5b                   	pop    %rbx
   154eb:	41 5e                	pop    %r14
   154ed:	ff 25 85 28 23 00    	jmpq   *0x232885(%rip)        # 247d78 <free@GLIBC_2.2.5>
   154f3:	48 83 c4 08          	add    $0x8,%rsp
   154f7:	5b                   	pop    %rbx
   154f8:	41 5e                	pop    %r14
   154fa:	c3                   	retq   
   154fb:	49 89 c6             	mov    %rax,%r14
   154fe:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
   15502:	48 8b 43 10          	mov    0x10(%rbx),%rax
   15506:	48 8b 70 08          	mov    0x8(%rax),%rsi
   1550a:	e8 31 26 00 00       	callq  17b40 <_ZN5alloc5alloc8box_free17h16551760f718b115E>
   1550f:	4c 89 f7             	mov    %r14,%rdi
   15512:	e8 89 eb fe ff       	callq  40a0 <_Unwind_Resume@plt>
   15517:	0f 0b                	ud2    
   15519:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000015520 <_ZN4core3ptr13drop_in_place17h89be93c4906ce112E>:
   15520:	41 56                	push   %r14
   15522:	53                   	push   %rbx
   15523:	50                   	push   %rax
   15524:	48 83 7f 40 02       	cmpq   $0x2,0x40(%rdi)
   15529:	72 29                	jb     15554 <_ZN4core3ptr13drop_in_place17h89be93c4906ce112E+0x34>
   1552b:	48 89 fb             	mov    %rdi,%rbx
   1552e:	48 8b 7f 48          	mov    0x48(%rdi),%rdi
   15532:	48 8b 43 50          	mov    0x50(%rbx),%rax
   15536:	ff 10                	callq  *(%rax)
   15538:	48 8b 43 50          	mov    0x50(%rbx),%rax
   1553c:	48 83 78 08 00       	cmpq   $0x0,0x8(%rax)
   15541:	74 11                	je     15554 <_ZN4core3ptr13drop_in_place17h89be93c4906ce112E+0x34>
   15543:	48 8b 7b 48          	mov    0x48(%rbx),%rdi
   15547:	48 83 c4 08          	add    $0x8,%rsp
   1554b:	5b                   	pop    %rbx
   1554c:	41 5e                	pop    %r14
   1554e:	ff 25 24 28 23 00    	jmpq   *0x232824(%rip)        # 247d78 <free@GLIBC_2.2.5>
   15554:	48 83 c4 08          	add    $0x8,%rsp
   15558:	5b                   	pop    %rbx
   15559:	41 5e                	pop    %r14
   1555b:	c3                   	retq   
   1555c:	49 89 c6             	mov    %rax,%r14
   1555f:	48 8b 7b 48          	mov    0x48(%rbx),%rdi
   15563:	48 8b 43 50          	mov    0x50(%rbx),%rax
   15567:	48 8b 70 08          	mov    0x8(%rax),%rsi
   1556b:	e8 d0 25 00 00       	callq  17b40 <_ZN5alloc5alloc8box_free17h16551760f718b115E>
   15570:	4c 89 f7             	mov    %r14,%rdi
   15573:	e8 28 eb fe ff       	callq  40a0 <_Unwind_Resume@plt>
   15578:	0f 0b                	ud2    
   1557a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000015580 <_ZN4core3ptr13drop_in_place17h3afc1bf79a8187c4E>:
   15580:	41 56                	push   %r14
   15582:	53                   	push   %rbx
   15583:	50                   	push   %rax
   15584:	48 89 fb             	mov    %rdi,%rbx
   15587:	48 8b 3f             	mov    (%rdi),%rdi
   1558a:	48 8b 43 08          	mov    0x8(%rbx),%rax
   1558e:	ff 10                	callq  *(%rax)
   15590:	48 8b 43 08          	mov    0x8(%rbx),%rax
   15594:	48 83 78 08 00       	cmpq   $0x0,0x8(%rax)
   15599:	74 10                	je     155ab <_ZN4core3ptr13drop_in_place17h3afc1bf79a8187c4E+0x2b>
   1559b:	48 8b 3b             	mov    (%rbx),%rdi
   1559e:	48 83 c4 08          	add    $0x8,%rsp
   155a2:	5b                   	pop    %rbx
   155a3:	41 5e                	pop    %r14
   155a5:	ff 25 cd 27 23 00    	jmpq   *0x2327cd(%rip)        # 247d78 <free@GLIBC_2.2.5>
   155ab:	48 83 c4 08          	add    $0x8,%rsp
   155af:	5b                   	pop    %rbx
   155b0:	41 5e                	pop    %r14
   155b2:	c3                   	retq   
   155b3:	49 89 c6             	mov    %rax,%r14
   155b6:	48 8b 3b             	mov    (%rbx),%rdi
   155b9:	48 8b 43 08          	mov    0x8(%rbx),%rax
   155bd:	48 8b 70 08          	mov    0x8(%rax),%rsi
   155c1:	e8 7a 25 00 00       	callq  17b40 <_ZN5alloc5alloc8box_free17h16551760f718b115E>
   155c6:	4c 89 f7             	mov    %r14,%rdi
   155c9:	e8 d2 ea fe ff       	callq  40a0 <_Unwind_Resume@plt>
   155ce:	0f 0b                	ud2    

00000000000155d0 <_ZN4core3ptr13drop_in_place17h45b938d697250b2cE>:
   155d0:	48 8b 3f             	mov    (%rdi),%rdi
   155d3:	48 85 ff             	test   %rdi,%rdi
   155d6:	74 2a                	je     15602 <_ZN4core3ptr13drop_in_place17h45b938d697250b2cE+0x32>
        let guard_count = self.guard_count.get();
   155d8:	48 8b 87 20 08 00 00 	mov    0x820(%rdi),%rax
        self.guard_count.set(guard_count - 1);
   155df:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
   155e3:	48 89 8f 20 08 00 00 	mov    %rcx,0x820(%rdi)
        if guard_count == 1 {
   155ea:	48 83 f8 01          	cmp    $0x1,%rax
   155ee:	75 12                	jne    15602 <_ZN4core3ptr13drop_in_place17h45b938d697250b2cE+0x32>
   155f0:	48 c7 47 08 00 00 00 	movq   $0x0,0x8(%rdi)
   155f7:	00 
            if self.handle_count.get() == 0 {
   155f8:	48 83 bf 28 08 00 00 	cmpq   $0x0,0x828(%rdi)
   155ff:	00 
   15600:	74 01                	je     15603 <_ZN4core3ptr13drop_in_place17h45b938d697250b2cE+0x33>
   15602:	c3                   	retq   
                self.finalize();
   15603:	e9 88 bd ff ff       	jmpq   11390 <_ZN15crossbeam_epoch8internal5Local8finalize17hb072c1707f33cb8dE>
   15608:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1560f:	00 

0000000000015610 <_ZN4core3ptr13drop_in_place17h40f816241c0110baE>:
   15610:	48 8b 3f             	mov    (%rdi),%rdi
        let handle_count = self.handle_count.get();
   15613:	48 8b 87 28 08 00 00 	mov    0x828(%rdi),%rax
        self.handle_count.set(handle_count - 1);
   1561a:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
   1561e:	48 89 8f 28 08 00 00 	mov    %rcx,0x828(%rdi)
        if guard_count == 0 && handle_count == 1 {
   15625:	48 83 bf 20 08 00 00 	cmpq   $0x0,0x820(%rdi)
   1562c:	00 
   1562d:	75 0b                	jne    1563a <_ZN4core3ptr13drop_in_place17h40f816241c0110baE+0x2a>
   1562f:	48 83 f8 01          	cmp    $0x1,%rax
   15633:	75 05                	jne    1563a <_ZN4core3ptr13drop_in_place17h40f816241c0110baE+0x2a>
            self.finalize();
   15635:	e9 56 bd ff ff       	jmpq   11390 <_ZN15crossbeam_epoch8internal5Local8finalize17hb072c1707f33cb8dE>
   1563a:	c3                   	retq   
   1563b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000015640 <_ZN15crossbeam_epoch8deferred8Deferred3new4call17h28e4b55e9e6b77c9E>:
                unsafe fn call<F: FnOnce()>(raw: *mut u8) {
   15640:	53                   	push   %rbx
                    let f: F = ptr::read(raw as *mut F);
   15641:	48 8b 1f             	mov    (%rdi),%rbx
   15644:	48 83 e3 f8          	and    $0xfffffffffffffff8,%rbx
   15648:	48 83 7b 08 00       	cmpq   $0x0,0x8(%rbx)
   1564d:	74 09                	je     15658 <_ZN15crossbeam_epoch8deferred8Deferred3new4call17h28e4b55e9e6b77c9E+0x18>
   1564f:	48 8b 3b             	mov    (%rbx),%rdi
   15652:	ff 15 20 27 23 00    	callq  *0x232720(%rip)        # 247d78 <free@GLIBC_2.2.5>
   15658:	48 89 df             	mov    %rbx,%rdi
   1565b:	5b                   	pop    %rbx
   1565c:	ff 25 16 27 23 00    	jmpq   *0x232716(%rip)        # 247d78 <free@GLIBC_2.2.5>
   15662:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   15669:	00 00 00 
   1566c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000015670 <_ZN83_$LT$rayon_core..job..StackJob$LT$L$C$F$C$R$GT$$u20$as$u20$rayon_core..job..Job$GT$7execute17h2860a331ecebd953E>:
    unsafe fn execute(this: *const Self) {
   15670:	55                   	push   %rbp
   15671:	41 57                	push   %r15
   15673:	41 56                	push   %r14
   15675:	41 55                	push   %r13
   15677:	41 54                	push   %r12
   15679:	53                   	push   %rbx
   1567a:	48 81 ec c8 00 00 00 	sub    $0xc8,%rsp
   15681:	c5 fe 6f 47 08       	vmovdqu 0x8(%rdi),%ymm0
   15686:	c5 fc 10 4f 28       	vmovups 0x28(%rdi),%ymm1
   1568b:	c5 fc 10 57 48       	vmovups 0x48(%rdi),%ymm2
   15690:	c5 e0 57 db          	vxorps %xmm3,%xmm3,%xmm3
   15694:	48 83 7f 08 00       	cmpq   $0x0,0x8(%rdi)
   15699:	c5 fc 11 5f 08       	vmovups %ymm3,0x8(%rdi)
   1569e:	48 8b 47 78          	mov    0x78(%rdi),%rax
   156a2:	48 89 44 24 60       	mov    %rax,0x60(%rsp)
   156a7:	c5 f8 10 5f 68       	vmovups 0x68(%rdi),%xmm3
   156ac:	c5 f8 29 5c 24 50    	vmovaps %xmm3,0x50(%rsp)
   156b2:	0f 84 22 01 00 00    	je     157da <_ZN83_$LT$rayon_core..job..StackJob$LT$L$C$F$C$R$GT$$u20$as$u20$rayon_core..job..Job$GT$7execute17h2860a331ecebd953E+0x16a>
   156b8:	48 89 fb             	mov    %rdi,%rbx
   156bb:	48 8b 44 24 60       	mov    0x60(%rsp),%rax
   156c0:	c5 f8 28 5c 24 50    	vmovaps 0x50(%rsp),%xmm3
   156c6:	c5 f8 29 5c 24 30    	vmovaps %xmm3,0x30(%rsp)
   156cc:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
            move || func(true)
   156d1:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   156d6:	c5 f8 29 5c 24 10    	vmovaps %xmm3,0x10(%rsp)
   156dc:	64 48 83 3c 25 00 ff 	cmpq   $0x1,%fs:0xffffffffffffff00
   156e3:	ff ff 01 
   156e6:	0f 85 0b 01 00 00    	jne    157f7 <_ZN83_$LT$rayon_core..job..StackJob$LT$L$C$F$C$R$GT$$u20$as$u20$rayon_core..job..Job$GT$7execute17h2860a331ecebd953E+0x187>
   156ec:	64 48 8b 34 25 08 ff 	mov    %fs:0xffffffffffffff08,%rsi
   156f3:	ff ff 
   156f5:	48 85 f6             	test   %rsi,%rsi
                    assert!(injected && !worker_thread.is_null());
   156f8:	0f 84 0d 01 00 00    	je     1580b <_ZN83_$LT$rayon_core..job..StackJob$LT$L$C$F$C$R$GT$$u20$as$u20$rayon_core..job..Job$GT$7execute17h2860a331ecebd953E+0x19b>
                    op(&*worker_thread, true)
   156fe:	c5 fe 7f 44 24 50    	vmovdqu %ymm0,0x50(%rsp)
   15704:	c5 fc 11 4c 24 70    	vmovups %ymm1,0x70(%rsp)
   1570a:	c5 fc 11 94 24 90 00 	vmovups %ymm2,0x90(%rsp)
   15711:	00 00 
   15713:	c5 f9 6f 44 24 10    	vmovdqa 0x10(%rsp),%xmm0
   15719:	c5 fa 7f 84 24 b0 00 	vmovdqu %xmm0,0xb0(%rsp)
   15720:	00 00 
   15722:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
   15727:	48 89 84 24 c0 00 00 	mov    %rax,0xc0(%rsp)
   1572e:	00 
   1572f:	48 8d 7c 24 50       	lea    0x50(%rsp),%rdi
   15734:	ba 01 00 00 00       	mov    $0x1,%edx
   15739:	c5 f8 77             	vzeroupper 
   1573c:	e8 0f ec ff ff       	callq  14350 <_ZN10rayon_core4join12join_context28_$u7b$$u7b$closure$u7d$$u7d$17ha74c7762bad17d4fE>
        (*this.result.get()) = match unwind::halt_unwinding(call(func)) {
   15741:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
   15748:	00 
   15749:	41 bd 01 00 00 00    	mov    $0x1,%r13d
   1574f:	41 b4 01             	mov    $0x1,%r12b
   15752:	45 31 f6             	xor    %r14d,%r14d
   15755:	31 ed                	xor    %ebp,%ebp
   15757:	48 83 bb 80 00 00 00 	cmpq   $0x2,0x80(%rbx)
   1575e:	02 
   1575f:	72 2b                	jb     1578c <_ZN83_$LT$rayon_core..job..StackJob$LT$L$C$F$C$R$GT$$u20$as$u20$rayon_core..job..Job$GT$7execute17h2860a331ecebd953E+0x11c>
   15761:	48 8b bb 88 00 00 00 	mov    0x88(%rbx),%rdi
   15768:	48 8b 83 90 00 00 00 	mov    0x90(%rbx),%rax
   1576f:	ff 10                	callq  *(%rax)
   15771:	48 8b 83 90 00 00 00 	mov    0x90(%rbx),%rax
   15778:	48 83 78 08 00       	cmpq   $0x0,0x8(%rax)
   1577d:	74 0d                	je     1578c <_ZN83_$LT$rayon_core..job..StackJob$LT$L$C$F$C$R$GT$$u20$as$u20$rayon_core..job..Job$GT$7execute17h2860a331ecebd953E+0x11c>
   1577f:	48 8b bb 88 00 00 00 	mov    0x88(%rbx),%rdi
   15786:	ff 15 ec 25 23 00    	callq  *0x2325ec(%rip)        # 247d78 <free@GLIBC_2.2.5>
   1578c:	4c 89 ab 80 00 00 00 	mov    %r13,0x80(%rbx)
   15793:	4c 89 b3 88 00 00 00 	mov    %r14,0x88(%rbx)
   1579a:	4c 89 bb 90 00 00 00 	mov    %r15,0x90(%rbx)
        };
   157a1:	44 08 e5             	or     %r12b,%bpl
   157a4:	40 80 fd 01          	cmp    $0x1,%bpl
   157a8:	74 16                	je     157c0 <_ZN83_$LT$rayon_core..job..StackJob$LT$L$C$F$C$R$GT$$u20$as$u20$rayon_core..job..Job$GT$7execute17h2860a331ecebd953E+0x150>
   157aa:	4c 89 f7             	mov    %r14,%rdi
   157ad:	41 ff 17             	callq  *(%r15)
   157b0:	49 83 7f 08 00       	cmpq   $0x0,0x8(%r15)
   157b5:	74 09                	je     157c0 <_ZN83_$LT$rayon_core..job..StackJob$LT$L$C$F$C$R$GT$$u20$as$u20$rayon_core..job..Job$GT$7execute17h2860a331ecebd953E+0x150>
   157b7:	4c 89 f7             	mov    %r14,%rdi
   157ba:	ff 15 b8 25 23 00    	callq  *0x2325b8(%rip)        # 247d78 <free@GLIBC_2.2.5>
        this.latch.set();
   157c0:	48 8b 3b             	mov    (%rbx),%rdi
   157c3:	e8 a8 01 00 00       	callq  15970 <_ZN50_$LT$$RF$L$u20$as$u20$rayon_core..latch..Latch$GT$3set17h10b7632db15be87dE>
    }
   157c8:	48 81 c4 c8 00 00 00 	add    $0xc8,%rsp
   157cf:	5b                   	pop    %rbx
   157d0:	41 5c                	pop    %r12
   157d2:	41 5d                	pop    %r13
   157d4:	41 5e                	pop    %r14
   157d6:	41 5f                	pop    %r15
   157d8:	5d                   	pop    %rbp
   157d9:	c3                   	retq   
   157da:	48 8d 3d 40 7b 02 00 	lea    0x27b40(%rip),%rdi        # 3d321 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x9c1>
   157e1:	48 8d 15 20 11 23 00 	lea    0x231120(%rip),%rdx        # 246908 <__init_array_end+0x8f8>
   157e8:	be 2b 00 00 00       	mov    $0x2b,%esi
   157ed:	c5 f8 77             	vzeroupper 
   157f0:	e8 bb 1b ff ff       	callq  73b0 <_ZN4core9panicking5panic17h6861470adfbddef8E>
   157f5:	eb 28                	jmp    1581f <_ZN83_$LT$rayon_core..job..StackJob$LT$L$C$F$C$R$GT$$u20$as$u20$rayon_core..job..Job$GT$7execute17h2860a331ecebd953E+0x1af>
   157f7:	b8 01 00 00 00       	mov    $0x1,%eax
   157fc:	c4 e1 f9 6e c0       	vmovq  %rax,%xmm0
   15801:	64 c5 f9 7f 04 25 00 	vmovdqa %xmm0,%fs:0xffffffffffffff00
   15808:	ff ff ff 
   1580b:	48 8d 3d ed 73 02 00 	lea    0x273ed(%rip),%rdi        # 3cbff <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x29f>
   15812:	be 36 00 00 00       	mov    $0x36,%esi
   15817:	c5 f8 77             	vzeroupper 
   1581a:	e8 b1 dd ff ff       	callq  135d0 <_ZN3std9panicking11begin_panic17he6f0f18d5c7f3243E>
   1581f:	0f 0b                	ud2    
   15821:	49 8b 77 08          	mov    0x8(%r15),%rsi
   15825:	4c 89 f7             	mov    %r14,%rdi
   15828:	e8 13 23 00 00       	callq  17b40 <_ZN5alloc5alloc8box_free17h16551760f718b115E>
   1582d:	e8 be 2b 00 00       	callq  183f0 <_ZN4core3ptr13drop_in_place17hc443eae86009dba0E>
   15832:	0f 0b                	ud2    
   15834:	48 8b bb 88 00 00 00 	mov    0x88(%rbx),%rdi
   1583b:	48 8b 83 90 00 00 00 	mov    0x90(%rbx),%rax
   15842:	48 8b 70 08          	mov    0x8(%rax),%rsi
   15846:	e8 f5 22 00 00       	callq  17b40 <_ZN5alloc5alloc8box_free17h16551760f718b115E>
        (*this.result.get()) = match unwind::halt_unwinding(call(func)) {
   1584b:	4c 89 ab 80 00 00 00 	mov    %r13,0x80(%rbx)
   15852:	4c 89 b3 88 00 00 00 	mov    %r14,0x88(%rbx)
   15859:	4c 89 bb 90 00 00 00 	mov    %r15,0x90(%rbx)
        };
   15860:	44 08 e5             	or     %r12b,%bpl
   15863:	75 0f                	jne    15874 <_ZN83_$LT$rayon_core..job..StackJob$LT$L$C$F$C$R$GT$$u20$as$u20$rayon_core..job..Job$GT$7execute17h2860a331ecebd953E+0x204>
   15865:	48 89 e7             	mov    %rsp,%rdi
   15868:	e8 13 fd ff ff       	callq  15580 <_ZN4core3ptr13drop_in_place17h3afc1bf79a8187c4E>
    }
   1586d:	e8 7e 2b 00 00       	callq  183f0 <_ZN4core3ptr13drop_in_place17hc443eae86009dba0E>
   15872:	0f 0b                	ud2    
   15874:	e8 77 2b 00 00       	callq  183f0 <_ZN4core3ptr13drop_in_place17hc443eae86009dba0E>
   15879:	0f 0b                	ud2    
   1587b:	4c 8b 70 40          	mov    0x40(%rax),%r14
   1587f:	4c 8b 78 48          	mov    0x48(%rax),%r15
   15883:	48 89 c7             	mov    %rax,%rdi
   15886:	ff 15 ec 24 23 00    	callq  *0x2324ec(%rip)        # 247d78 <free@GLIBC_2.2.5>
   1588c:	64 48 83 3c 25 a0 ff 	cmpq   $0x1,%fs:0xffffffffffffffa0
   15893:	ff ff 01 
   15896:	75 0e                	jne    158a6 <_ZN83_$LT$rayon_core..job..StackJob$LT$L$C$F$C$R$GT$$u20$as$u20$rayon_core..job..Job$GT$7execute17h2860a331ecebd953E+0x236>
   15898:	64 48 8b 04 25 a8 ff 	mov    %fs:0xffffffffffffffa8,%rax
   1589f:	ff ff 
   158a1:	48 ff c8             	dec    %rax
   158a4:	eb 1b                	jmp    158c1 <_ZN83_$LT$rayon_core..job..StackJob$LT$L$C$F$C$R$GT$$u20$as$u20$rayon_core..job..Job$GT$7execute17h2860a331ecebd953E+0x251>
   158a6:	b8 01 00 00 00       	mov    $0x1,%eax
   158ab:	c4 e1 f9 6e c0       	vmovq  %rax,%xmm0
   158b0:	64 c5 f9 7f 04 25 a0 	vmovdqa %xmm0,%fs:0xffffffffffffffa0
   158b7:	ff ff ff 
   158ba:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
   158c1:	64 48 89 04 25 a8 ff 	mov    %rax,%fs:0xffffffffffffffa8
   158c8:	ff ff 
        (*this.result.get()) = match unwind::halt_unwinding(call(func)) {
   158ca:	4c 89 34 24          	mov    %r14,(%rsp)
   158ce:	4c 89 7c 24 08       	mov    %r15,0x8(%rsp)
   158d3:	40 b5 01             	mov    $0x1,%bpl
   158d6:	41 bd 02 00 00 00    	mov    $0x2,%r13d
   158dc:	45 31 e4             	xor    %r12d,%r12d
   158df:	48 83 bb 80 00 00 00 	cmpq   $0x2,0x80(%rbx)
   158e6:	02 
   158e7:	0f 83 74 fe ff ff    	jae    15761 <_ZN83_$LT$rayon_core..job..StackJob$LT$L$C$F$C$R$GT$$u20$as$u20$rayon_core..job..Job$GT$7execute17h2860a331ecebd953E+0xf1>
   158ed:	e9 9a fe ff ff       	jmpq   1578c <_ZN83_$LT$rayon_core..job..StackJob$LT$L$C$F$C$R$GT$$u20$as$u20$rayon_core..job..Job$GT$7execute17h2860a331ecebd953E+0x11c>
   158f2:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   158f9:	00 00 00 
   158fc:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000015900 <_ZN4core3ptr13drop_in_place17heb5e53c56f2c7aa8E>:
   15900:	41 56                	push   %r14
   15902:	53                   	push   %rbx
   15903:	50                   	push   %rax
   15904:	48 83 bf 80 00 00 00 	cmpq   $0x2,0x80(%rdi)
   1590b:	02 
   1590c:	72 35                	jb     15943 <_ZN4core3ptr13drop_in_place17heb5e53c56f2c7aa8E+0x43>
   1590e:	48 89 fb             	mov    %rdi,%rbx
   15911:	48 8b bf 88 00 00 00 	mov    0x88(%rdi),%rdi
   15918:	48 8b 83 90 00 00 00 	mov    0x90(%rbx),%rax
   1591f:	ff 10                	callq  *(%rax)
   15921:	48 8b 83 90 00 00 00 	mov    0x90(%rbx),%rax
   15928:	48 83 78 08 00       	cmpq   $0x0,0x8(%rax)
   1592d:	74 14                	je     15943 <_ZN4core3ptr13drop_in_place17heb5e53c56f2c7aa8E+0x43>
   1592f:	48 8b bb 88 00 00 00 	mov    0x88(%rbx),%rdi
   15936:	48 83 c4 08          	add    $0x8,%rsp
   1593a:	5b                   	pop    %rbx
   1593b:	41 5e                	pop    %r14
   1593d:	ff 25 35 24 23 00    	jmpq   *0x232435(%rip)        # 247d78 <free@GLIBC_2.2.5>
   15943:	48 83 c4 08          	add    $0x8,%rsp
   15947:	5b                   	pop    %rbx
   15948:	41 5e                	pop    %r14
   1594a:	c3                   	retq   
   1594b:	49 89 c6             	mov    %rax,%r14
   1594e:	48 8b bb 88 00 00 00 	mov    0x88(%rbx),%rdi
   15955:	48 8b 83 90 00 00 00 	mov    0x90(%rbx),%rax
   1595c:	48 8b 70 08          	mov    0x8(%rax),%rsi
   15960:	e8 db 21 00 00       	callq  17b40 <_ZN5alloc5alloc8box_free17h16551760f718b115E>
   15965:	4c 89 f7             	mov    %r14,%rdi
   15968:	e8 33 e7 fe ff       	callq  40a0 <_Unwind_Resume@plt>
   1596d:	0f 0b                	ud2    
   1596f:	90                   	nop

0000000000015970 <_ZN50_$LT$$RF$L$u20$as$u20$rayon_core..latch..Latch$GT$3set17h10b7632db15be87dE>:

impl<'a, L> Latch for &'a L
where
    L: Latch,
{
    fn set(&self) {
   15970:	41 56                	push   %r14
   15972:	53                   	push   %rbx
   15973:	48 83 ec 18          	sub    $0x18,%rsp
   15977:	48 89 fb             	mov    %rdi,%rbx
   1597a:	48 8b 3f             	mov    (%rdi),%rdi
   1597d:	ff 15 5d 26 23 00    	callq  *0x23265d(%rip)        # 247fe0 <pthread_mutex_lock@GLIBC_2.2.5>
   15983:	64 48 83 3c 25 a0 ff 	cmpq   $0x1,%fs:0xffffffffffffffa0
   1598a:	ff ff 01 
   1598d:	75 1e                	jne    159ad <_ZN50_$LT$$RF$L$u20$as$u20$rayon_core..latch..Latch$GT$3set17h10b7632db15be87dE+0x3d>
   1598f:	64 4c 8b 34 25 a8 ff 	mov    %fs:0xffffffffffffffa8,%r14
   15996:	ff ff 
   15998:	64 4c 89 34 25 a8 ff 	mov    %r14,%fs:0xffffffffffffffa8
   1599f:	ff ff 
   159a1:	8a 43 08             	mov    0x8(%rbx),%al
   159a4:	84 c0                	test   %al,%al
   159a6:	74 2c                	je     159d4 <_ZN50_$LT$$RF$L$u20$as$u20$rayon_core..latch..Latch$GT$3set17h10b7632db15be87dE+0x64>
   159a8:	e9 89 00 00 00       	jmpq   15a36 <_ZN50_$LT$$RF$L$u20$as$u20$rayon_core..latch..Latch$GT$3set17h10b7632db15be87dE+0xc6>
   159ad:	b8 01 00 00 00       	mov    $0x1,%eax
   159b2:	c4 e1 f9 6e c0       	vmovq  %rax,%xmm0
   159b7:	64 c5 f9 7f 04 25 a0 	vmovdqa %xmm0,%fs:0xffffffffffffffa0
   159be:	ff ff ff 
   159c1:	45 31 f6             	xor    %r14d,%r14d
   159c4:	64 4c 89 34 25 a8 ff 	mov    %r14,%fs:0xffffffffffffffa8
   159cb:	ff ff 
   159cd:	8a 43 08             	mov    0x8(%rbx),%al
   159d0:	84 c0                	test   %al,%al
   159d2:	75 62                	jne    15a36 <_ZN50_$LT$$RF$L$u20$as$u20$rayon_core..latch..Latch$GT$3set17h10b7632db15be87dE+0xc6>
        *guard = true;
   159d4:	c6 43 09 01          	movb   $0x1,0x9(%rbx)
   159d8:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
   159dc:	ff 15 d6 23 23 00    	callq  *0x2323d6(%rip)        # 247db8 <pthread_cond_broadcast@GLIBC_2.3.2>
   159e2:	4d 85 f6             	test   %r14,%r14
   159e5:	75 3f                	jne    15a26 <_ZN50_$LT$$RF$L$u20$as$u20$rayon_core..latch..Latch$GT$3set17h10b7632db15be87dE+0xb6>
   159e7:	64 48 83 3c 25 a0 ff 	cmpq   $0x1,%fs:0xffffffffffffffa0
   159ee:	ff ff 01 
   159f1:	75 12                	jne    15a05 <_ZN50_$LT$$RF$L$u20$as$u20$rayon_core..latch..Latch$GT$3set17h10b7632db15be87dE+0x95>
   159f3:	64 48 83 3c 25 a8 ff 	cmpq   $0x0,%fs:0xffffffffffffffa8
   159fa:	ff ff 00 
   159fd:	74 27                	je     15a26 <_ZN50_$LT$$RF$L$u20$as$u20$rayon_core..latch..Latch$GT$3set17h10b7632db15be87dE+0xb6>
   159ff:	c6 43 08 01          	movb   $0x1,0x8(%rbx)
   15a03:	eb 21                	jmp    15a26 <_ZN50_$LT$$RF$L$u20$as$u20$rayon_core..latch..Latch$GT$3set17h10b7632db15be87dE+0xb6>
   15a05:	b8 01 00 00 00       	mov    $0x1,%eax
   15a0a:	c4 e1 f9 6e c0       	vmovq  %rax,%xmm0
   15a0f:	64 c5 f9 7f 04 25 a0 	vmovdqa %xmm0,%fs:0xffffffffffffffa0
   15a16:	ff ff ff 
   15a19:	64 48 c7 04 25 a8 ff 	movq   $0x0,%fs:0xffffffffffffffa8
   15a20:	ff ff 00 00 00 00 
   15a26:	48 8b 3b             	mov    (%rbx),%rdi
   15a29:	48 83 c4 18          	add    $0x18,%rsp
   15a2d:	5b                   	pop    %rbx
   15a2e:	41 5e                	pop    %r14
   15a30:	ff 25 c2 24 23 00    	jmpq   *0x2324c2(%rip)        # 247ef8 <pthread_mutex_unlock@GLIBC_2.2.5>
   15a36:	4d 85 f6             	test   %r14,%r14
   15a39:	48 89 5c 24 08       	mov    %rbx,0x8(%rsp)
   15a3e:	0f 95 44 24 10       	setne  0x10(%rsp)
   15a43:	48 8d 3d 77 7e 02 00 	lea    0x27e77(%rip),%rdi        # 3d8c1 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0xf61>
   15a4a:	48 8d 0d cf 0e 23 00 	lea    0x230ecf(%rip),%rcx        # 246920 <__init_array_end+0x910>
   15a51:	4c 8d 05 40 11 23 00 	lea    0x231140(%rip),%r8        # 246b98 <__init_array_end+0xb88>
   15a58:	48 8d 54 24 08       	lea    0x8(%rsp),%rdx
   15a5d:	be 2b 00 00 00       	mov    $0x2b,%esi
   15a62:	e8 f9 41 ff ff       	callq  9c60 <_ZN4core6option18expect_none_failed17he0fec195c6e4c2ecE>
   15a67:	0f 0b                	ud2    
   15a69:	48 89 c3             	mov    %rax,%rbx
   15a6c:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   15a71:	e8 0a 00 00 00       	callq  15a80 <_ZN4core3ptr13drop_in_place17h422d82a10dad7834E>
   15a76:	48 89 df             	mov    %rbx,%rdi
   15a79:	e8 22 e6 fe ff       	callq  40a0 <_Unwind_Resume@plt>
   15a7e:	0f 0b                	ud2    

0000000000015a80 <_ZN4core3ptr13drop_in_place17h422d82a10dad7834E>:
   15a80:	48 8b 07             	mov    (%rdi),%rax
   15a83:	80 7f 08 00          	cmpb   $0x0,0x8(%rdi)
   15a87:	74 09                	je     15a92 <_ZN4core3ptr13drop_in_place17h422d82a10dad7834E+0x12>
   15a89:	48 8b 38             	mov    (%rax),%rdi
   15a8c:	ff 25 66 24 23 00    	jmpq   *0x232466(%rip)        # 247ef8 <pthread_mutex_unlock@GLIBC_2.2.5>
   15a92:	64 48 83 3c 25 a0 ff 	cmpq   $0x1,%fs:0xffffffffffffffa0
   15a99:	ff ff 01 
   15a9c:	75 1c                	jne    15aba <_ZN4core3ptr13drop_in_place17h422d82a10dad7834E+0x3a>
   15a9e:	64 48 83 3c 25 a8 ff 	cmpq   $0x0,%fs:0xffffffffffffffa8
   15aa5:	ff ff 00 
   15aa8:	74 df                	je     15a89 <_ZN4core3ptr13drop_in_place17h422d82a10dad7834E+0x9>
   15aaa:	c6 40 08 01          	movb   $0x1,0x8(%rax)
   15aae:	48 8b 07             	mov    (%rdi),%rax
   15ab1:	48 8b 38             	mov    (%rax),%rdi
   15ab4:	ff 25 3e 24 23 00    	jmpq   *0x23243e(%rip)        # 247ef8 <pthread_mutex_unlock@GLIBC_2.2.5>
   15aba:	b9 01 00 00 00       	mov    $0x1,%ecx
   15abf:	c4 e1 f9 6e c1       	vmovq  %rcx,%xmm0
   15ac4:	64 c5 f9 7f 04 25 a0 	vmovdqa %xmm0,%fs:0xffffffffffffffa0
   15acb:	ff ff ff 
   15ace:	64 48 c7 04 25 a8 ff 	movq   $0x0,%fs:0xffffffffffffffa8
   15ad5:	ff ff 00 00 00 00 
   15adb:	48 8b 38             	mov    (%rax),%rdi
   15ade:	ff 25 14 24 23 00    	jmpq   *0x232414(%rip)        # 247ef8 <pthread_mutex_unlock@GLIBC_2.2.5>
   15ae4:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   15aeb:	00 00 00 
   15aee:	66 90                	xchg   %ax,%ax

0000000000015af0 <_ZN91_$LT$std..panicking..begin_panic..PanicPayload$LT$A$GT$$u20$as$u20$core..panic..BoxMeUp$GT$8take_box17h228453e3483199abE>:
   15af0:	41 56                	push   %r14
   15af2:	53                   	push   %rbx
   15af3:	50                   	push   %rax
   15af4:	48 8b 1f             	mov    (%rdi),%rbx
   15af7:	4c 8b 77 08          	mov    0x8(%rdi),%r14
   15afb:	48 c7 07 00 00 00 00 	movq   $0x0,(%rdi)
   15b02:	48 85 db             	test   %rbx,%rbx
   15b05:	74 26                	je     15b2d <_ZN91_$LT$std..panicking..begin_panic..PanicPayload$LT$A$GT$$u20$as$u20$core..panic..BoxMeUp$GT$8take_box17h228453e3483199abE+0x3d>
   15b07:	bf 10 00 00 00       	mov    $0x10,%edi
   15b0c:	ff 15 f6 23 23 00    	callq  *0x2323f6(%rip)        # 247f08 <malloc@GLIBC_2.2.5>
   15b12:	48 85 c0             	test   %rax,%rax
   15b15:	74 1d                	je     15b34 <_ZN91_$LT$std..panicking..begin_panic..PanicPayload$LT$A$GT$$u20$as$u20$core..panic..BoxMeUp$GT$8take_box17h228453e3483199abE+0x44>
   15b17:	48 89 18             	mov    %rbx,(%rax)
   15b1a:	4c 89 70 08          	mov    %r14,0x8(%rax)
   15b1e:	48 8d 15 5b 0e 23 00 	lea    0x230e5b(%rip),%rdx        # 246980 <__init_array_end+0x970>
   15b25:	48 83 c4 08          	add    $0x8,%rsp
   15b29:	5b                   	pop    %rbx
   15b2a:	41 5e                	pop    %r14
   15b2c:	c3                   	retq   
   15b2d:	e8 ee 32 01 00       	callq  28e20 <_ZN3std7process5abort17he9433c577a649e1aE>
   15b32:	0f 0b                	ud2    
   15b34:	bf 10 00 00 00       	mov    $0x10,%edi
   15b39:	be 08 00 00 00       	mov    $0x8,%esi
   15b3e:	e8 7d f9 fe ff       	callq  54c0 <_ZN5alloc5alloc18handle_alloc_error17hf7bb8682f6c8b1d7E>
   15b43:	0f 0b                	ud2    
   15b45:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   15b4c:	00 00 00 
   15b4f:	90                   	nop

0000000000015b50 <_ZN91_$LT$std..panicking..begin_panic..PanicPayload$LT$A$GT$$u20$as$u20$core..panic..BoxMeUp$GT$3get17h70b115242d9325a4E>:
   15b50:	50                   	push   %rax
   15b51:	48 83 3f 00          	cmpq   $0x0,(%rdi)
   15b55:	74 0c                	je     15b63 <_ZN91_$LT$std..panicking..begin_panic..PanicPayload$LT$A$GT$$u20$as$u20$core..panic..BoxMeUp$GT$3get17h70b115242d9325a4E+0x13>
   15b57:	48 89 f8             	mov    %rdi,%rax
   15b5a:	48 8d 15 1f 0e 23 00 	lea    0x230e1f(%rip),%rdx        # 246980 <__init_array_end+0x970>
   15b61:	59                   	pop    %rcx
   15b62:	c3                   	retq   
   15b63:	e8 b8 32 01 00       	callq  28e20 <_ZN3std7process5abort17he9433c577a649e1aE>
   15b68:	0f 0b                	ud2    
   15b6a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000015b70 <_ZN36_$LT$T$u20$as$u20$core..any..Any$GT$7type_id17h1fb9982f49b719a0E>:
   15b70:	48 b8 64 97 b0 70 d9 	movabs $0x111094d970b09764,%rax
   15b77:	94 10 11 
   15b7a:	c3                   	retq   
   15b7b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000015b80 <_ZN10rayon_core8registry8Registry14in_worker_cold17h1440de4dcd6654a7E>:
    unsafe fn in_worker_cold<OP, R>(&self, op: OP) -> R
   15b80:	53                   	push   %rbx
   15b81:	48 81 ec 00 02 00 00 	sub    $0x200,%rsp
   15b88:	48 89 fb             	mov    %rdi,%rbx
   15b8b:	48 8b 86 80 00 00 00 	mov    0x80(%rsi),%rax
   15b92:	48 89 84 24 40 01 00 	mov    %rax,0x140(%rsp)
   15b99:	00 
   15b9a:	c5 fc 10 06          	vmovups (%rsi),%ymm0
   15b9e:	c5 fc 10 4e 20       	vmovups 0x20(%rsi),%ymm1
   15ba3:	c5 fc 10 56 40       	vmovups 0x40(%rsi),%ymm2
   15ba8:	c5 fc 10 5e 60       	vmovups 0x60(%rsi),%ymm3
   15bad:	c5 fc 11 9c 24 20 01 	vmovups %ymm3,0x120(%rsp)
   15bb4:	00 00 
   15bb6:	c5 fc 11 94 24 00 01 	vmovups %ymm2,0x100(%rsp)
   15bbd:	00 00 
   15bbf:	c5 fc 11 8c 24 e0 00 	vmovups %ymm1,0xe0(%rsp)
   15bc6:	00 00 
   15bc8:	c5 fc 11 84 24 c0 00 	vmovups %ymm0,0xc0(%rsp)
   15bcf:	00 00 
   15bd1:	64 48 83 3c 25 20 ff 	cmpq   $0x0,%fs:0xffffffffffffff20
   15bd8:	ff ff 00 
   15bdb:	0f 84 30 01 00 00    	je     15d11 <_ZN10rayon_core8registry8Registry14in_worker_cold17h1440de4dcd6654a7E+0x191>
   15be1:	64 48 8b 04 25 00 00 	mov    %fs:0x0,%rax
   15be8:	00 00 
   15bea:	48 8d 80 20 ff ff ff 	lea    -0xe0(%rax),%rax
        StackJob {
   15bf1:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   15bf6:	c5 fc 10 84 24 c0 00 	vmovups 0xc0(%rsp),%ymm0
   15bfd:	00 00 
   15bff:	c5 fc 10 8c 24 e0 00 	vmovups 0xe0(%rsp),%ymm1
   15c06:	00 00 
   15c08:	c5 fc 10 94 24 00 01 	vmovups 0x100(%rsp),%ymm2
   15c0f:	00 00 
   15c11:	c5 fc 11 44 24 20    	vmovups %ymm0,0x20(%rsp)
   15c17:	c5 fc 11 4c 24 40    	vmovups %ymm1,0x40(%rsp)
   15c1d:	c5 fc 10 84 24 20 01 	vmovups 0x120(%rsp),%ymm0
   15c24:	00 00 
   15c26:	c5 fc 11 54 24 60    	vmovups %ymm2,0x60(%rsp)
   15c2c:	c5 fc 11 84 24 80 00 	vmovups %ymm0,0x80(%rsp)
   15c33:	00 00 
   15c35:	48 8b 84 24 40 01 00 	mov    0x140(%rsp),%rax
   15c3c:	00 
   15c3d:	48 89 84 24 a0 00 00 	mov    %rax,0xa0(%rsp)
   15c44:	00 
   15c45:	48 c7 84 24 a8 00 00 	movq   $0x0,0xa8(%rsp)
   15c4c:	00 00 00 00 00 
   15c51:	48 8d 44 24 18       	lea    0x18(%rsp),%rax
            self.inject(&[job.as_job_ref()]);
   15c56:	48 89 84 24 50 01 00 	mov    %rax,0x150(%rsp)
   15c5d:	00 
   15c5e:	48 8d 05 7b 09 00 00 	lea    0x97b(%rip),%rax        # 165e0 <_ZN83_$LT$rayon_core..job..StackJob$LT$L$C$F$C$R$GT$$u20$as$u20$rayon_core..job..Job$GT$7execute17h74b7db1694c0feb5E>
   15c65:	48 89 84 24 58 01 00 	mov    %rax,0x158(%rsp)
   15c6c:	00 
   15c6d:	48 8d b4 24 50 01 00 	lea    0x150(%rsp),%rsi
   15c74:	00 
   15c75:	48 89 df             	mov    %rbx,%rdi
   15c78:	c5 f8 77             	vzeroupper 
   15c7b:	e8 50 7b 00 00       	callq  1d7d0 <_ZN10rayon_core8registry8Registry6inject17h8bda028524c76acfE>
            job.latch.wait_and_reset(); // Make sure we can use the same latch again next time.
   15c80:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
   15c85:	e8 66 2e 00 00       	callq  18af0 <_ZN10rayon_core5latch9LockLatch14wait_and_reset17hdc8f700ff47d9cbaE>
            job.into_result()
   15c8a:	48 8b 84 24 b8 00 00 	mov    0xb8(%rsp),%rax
   15c91:	00 
   15c92:	48 89 84 24 f0 01 00 	mov    %rax,0x1f0(%rsp)
   15c99:	00 
   15c9a:	c5 fc 10 84 24 98 00 	vmovups 0x98(%rsp),%ymm0
   15ca1:	00 00 
   15ca3:	c5 fc 11 84 24 d0 01 	vmovups %ymm0,0x1d0(%rsp)
   15caa:	00 00 
   15cac:	c5 fc 10 44 24 18    	vmovups 0x18(%rsp),%ymm0
   15cb2:	c5 fc 10 4c 24 38    	vmovups 0x38(%rsp),%ymm1
   15cb8:	c5 fc 10 54 24 58    	vmovups 0x58(%rsp),%ymm2
   15cbe:	c5 fc 10 5c 24 78    	vmovups 0x78(%rsp),%ymm3
   15cc4:	c5 fc 11 9c 24 b0 01 	vmovups %ymm3,0x1b0(%rsp)
   15ccb:	00 00 
   15ccd:	c5 fc 11 94 24 90 01 	vmovups %ymm2,0x190(%rsp)
   15cd4:	00 00 
   15cd6:	c5 fc 11 8c 24 70 01 	vmovups %ymm1,0x170(%rsp)
   15cdd:	00 00 
   15cdf:	c5 fc 11 84 24 50 01 	vmovups %ymm0,0x150(%rsp)
   15ce6:	00 00 
        self.result.into_inner().into_return_value()
   15ce8:	c5 f8 28 84 24 e0 01 	vmovaps 0x1e0(%rsp),%xmm0
   15cef:	00 00 
   15cf1:	c5 f8 29 04 24       	vmovaps %xmm0,(%rsp)
   15cf6:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
            JobResult::None => unreachable!(),
   15cfb:	48 8b 04 24          	mov    (%rsp),%rax
   15cff:	48 83 f8 01          	cmp    $0x1,%rax
   15d03:	75 46                	jne    15d4b <_ZN10rayon_core8registry8Registry14in_worker_cold17h1440de4dcd6654a7E+0x1cb>
    }
   15d05:	48 81 c4 00 02 00 00 	add    $0x200,%rsp
   15d0c:	5b                   	pop    %rbx
   15d0d:	c5 f8 77             	vzeroupper 
   15d10:	c3                   	retq   
   15d11:	c5 f8 77             	vzeroupper 
   15d14:	e8 17 7e 00 00       	callq  1db30 <_ZN3std6thread5local4fast12Key$LT$T$GT$14try_initialize17h279f24b71f56ef81E>
   15d19:	48 85 c0             	test   %rax,%rax
   15d1c:	0f 85 cf fe ff ff    	jne    15bf1 <_ZN10rayon_core8registry8Registry14in_worker_cold17h1440de4dcd6654a7E+0x71>
   15d22:	48 8d 3d 97 79 02 00 	lea    0x27997(%rip),%rdi        # 3d6c0 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0xd60>
   15d29:	48 8d 0d 58 0b 23 00 	lea    0x230b58(%rip),%rcx        # 246888 <__init_array_end+0x878>
   15d30:	4c 8d 05 71 0b 23 00 	lea    0x230b71(%rip),%r8        # 2468a8 <__init_array_end+0x898>
   15d37:	48 8d 94 24 50 01 00 	lea    0x150(%rsp),%rdx
   15d3e:	00 
   15d3f:	be 46 00 00 00       	mov    $0x46,%esi
   15d44:	e8 17 3f ff ff       	callq  9c60 <_ZN4core6option18expect_none_failed17he0fec195c6e4c2ecE>
   15d49:	0f 0b                	ud2    
   15d4b:	48 85 c0             	test   %rax,%rax
   15d4e:	74 14                	je     15d64 <_ZN10rayon_core8registry8Registry14in_worker_cold17h1440de4dcd6654a7E+0x1e4>
            JobResult::Panic(x) => unwind::resume_unwinding(x),
   15d50:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   15d55:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
   15d5a:	c5 f8 77             	vzeroupper 
   15d5d:	e8 ce 1d 00 00       	callq  17b30 <_ZN10rayon_core6unwind16resume_unwinding17h10c44a275a145090E>
   15d62:	eb 14                	jmp    15d78 <_ZN10rayon_core8registry8Registry14in_worker_cold17h1440de4dcd6654a7E+0x1f8>
   15d64:	48 8d 3d b6 78 02 00 	lea    0x278b6(%rip),%rdi        # 3d621 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0xcc1>
   15d6b:	be 28 00 00 00       	mov    $0x28,%esi
   15d70:	c5 f8 77             	vzeroupper 
   15d73:	e8 58 d8 ff ff       	callq  135d0 <_ZN3std9panicking11begin_panic17he6f0f18d5c7f3243E>
   15d78:	0f 0b                	ud2    
   15d7a:	48 89 c3             	mov    %rax,%rbx
   15d7d:	48 89 e7             	mov    %rsp,%rdi
    }
   15d80:	e8 3b f7 ff ff       	callq  154c0 <_ZN4core3ptr13drop_in_place17h60456c2b44f09701E>
   15d85:	eb 1a                	jmp    15da1 <_ZN10rayon_core8registry8Registry14in_worker_cold17h1440de4dcd6654a7E+0x221>
   15d87:	48 89 c3             	mov    %rax,%rbx
   15d8a:	48 89 df             	mov    %rbx,%rdi
   15d8d:	e8 0e e3 fe ff       	callq  40a0 <_Unwind_Resume@plt>
   15d92:	0f 0b                	ud2    
   15d94:	48 89 c3             	mov    %rax,%rbx
   15d97:	48 8d 7c 24 18       	lea    0x18(%rsp),%rdi
        })
   15d9c:	e8 8f 0a 00 00       	callq  16830 <_ZN4core3ptr13drop_in_place17h8973f97b30af6b98E>
   15da1:	48 89 df             	mov    %rbx,%rdi
   15da4:	e8 f7 e2 fe ff       	callq  40a0 <_Unwind_Resume@plt>
   15da9:	0f 0b                	ud2    
   15dab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000015db0 <_ZN10rayon_core4join12join_context28_$u7b$$u7b$closure$u7d$$u7d$17h580ded3148edaa3eE>:
    registry::in_worker(|worker_thread, injected| unsafe {
   15db0:	55                   	push   %rbp
   15db1:	41 57                	push   %r15
   15db3:	41 56                	push   %r14
   15db5:	41 55                	push   %r13
   15db7:	41 54                	push   %r12
   15db9:	53                   	push   %rbx
   15dba:	48 81 ec 48 01 00 00 	sub    $0x148,%rsp
   15dc1:	41 89 d6             	mov    %edx,%r14d
   15dc4:	48 89 f3             	mov    %rsi,%rbx
   15dc7:	49 89 fd             	mov    %rdi,%r13
        let job_b = StackJob::new(call_b(oper_b), SpinLatch::new());
   15dca:	48 8b 47 40          	mov    0x40(%rdi),%rax
   15dce:	48 89 84 24 f0 00 00 	mov    %rax,0xf0(%rsp)
   15dd5:	00 
   15dd6:	c5 fe 6f 07          	vmovdqu (%rdi),%ymm0
   15dda:	c5 fc 10 4f 20       	vmovups 0x20(%rdi),%ymm1
   15ddf:	c5 fc 11 8c 24 d0 00 	vmovups %ymm1,0xd0(%rsp)
   15de6:	00 00 
   15de8:	c5 fe 7f 84 24 b0 00 	vmovdqu %ymm0,0xb0(%rsp)
   15def:	00 00 
        StackJob {
   15df1:	c6 84 24 10 01 00 00 	movb   $0x0,0x110(%rsp)
   15df8:	00 
   15df9:	48 c7 84 24 f8 00 00 	movq   $0x0,0xf8(%rsp)
   15e00:	00 00 00 00 00 
        let b = self.inner.back.load(Ordering::Relaxed);
   15e05:	48 8b 86 00 01 00 00 	mov    0x100(%rsi),%rax
   15e0c:	48 8b a8 08 01 00 00 	mov    0x108(%rax),%rbp
   15e13:	48 8b 80 00 01 00 00 	mov    0x100(%rax),%rax
        let mut buffer = self.buffer.get();
   15e1a:	48 8b b6 10 01 00 00 	mov    0x110(%rsi),%rsi
   15e21:	48 89 e9             	mov    %rbp,%rcx
   15e24:	48 29 c1             	sub    %rax,%rcx
        if len >= buffer.cap as isize {
   15e27:	48 39 f1             	cmp    %rsi,%rcx
   15e2a:	7c 19                	jl     15e45 <_ZN10rayon_core4join12join_context28_$u7b$$u7b$closure$u7d$$u7d$17h580ded3148edaa3eE+0x95>
   15e2c:	48 8d bb 00 01 00 00 	lea    0x100(%rbx),%rdi
                self.resize(2 * buffer.cap);
   15e33:	48 01 f6             	add    %rsi,%rsi
   15e36:	c5 f8 77             	vzeroupper 
   15e39:	e8 82 eb ff ff       	callq  149c0 <_ZN15crossbeam_deque15Worker$LT$T$GT$6resize17hf7c4d42bebcabf15E>
            buffer = self.buffer.get();
   15e3e:	48 8b b3 10 01 00 00 	mov    0x110(%rbx),%rsi
   15e45:	48 8b 83 08 01 00 00 	mov    0x108(%rbx),%rax
        self.ptr.offset(index & (self.cap - 1) as isize)
   15e4c:	48 ff ce             	dec    %rsi
   15e4f:	48 21 ee             	and    %rbp,%rsi
   15e52:	48 c1 e6 04          	shl    $0x4,%rsi
   15e56:	4c 8d bc 24 b0 00 00 	lea    0xb0(%rsp),%r15
   15e5d:	00 
   15e5e:	4c 89 3c 30          	mov    %r15,(%rax,%rsi,1)
   15e62:	4c 8d 25 27 05 00 00 	lea    0x527(%rip),%r12        # 16390 <_ZN83_$LT$rayon_core..job..StackJob$LT$L$C$F$C$R$GT$$u20$as$u20$rayon_core..job..Job$GT$7execute17h3604b38037f58925E>
   15e69:	4c 89 64 30 08       	mov    %r12,0x8(%rax,%rsi,1)
        self.inner.back.store(b.wrapping_add(1), Ordering::Release);
   15e6e:	48 8b 83 00 01 00 00 	mov    0x100(%rbx),%rax
   15e75:	48 ff c5             	inc    %rbp
   15e78:	48 89 a8 08 01 00 00 	mov    %rbp,0x108(%rax)
        self.registry.sleep.tickle(self.index);
   15e7f:	48 8b bb 30 01 00 00 	mov    0x130(%rbx),%rdi
   15e86:	48 8b 87 98 01 00 00 	mov    0x198(%rdi),%rax
        if old_state != AWAKE {
   15e8d:	48 85 c0             	test   %rax,%rax
   15e90:	74 0f                	je     15ea1 <_ZN10rayon_core4join12join_context28_$u7b$$u7b$closure$u7d$$u7d$17h580ded3148edaa3eE+0xf1>
   15e92:	48 81 c7 98 01 00 00 	add    $0x198,%rdi
            self.tickle_cold(worker_index);
   15e99:	c5 f8 77             	vzeroupper 
   15e9c:	e8 cf 21 00 00       	callq  18070 <_ZN10rayon_core5sleep5Sleep11tickle_cold17h334403ad3bddecd8E>
   15ea1:	49 8b 45 48          	mov    0x48(%r13),%rax
   15ea5:	49 8b 4d 50          	mov    0x50(%r13),%rcx
   15ea9:	4d 8b 45 58          	mov    0x58(%r13),%r8
   15ead:	4d 8b 4d 60          	mov    0x60(%r13),%r9
                        mid,
   15eb1:	48 8b 38             	mov    (%rax),%rdi
                        splitter,
   15eb4:	48 8b 11             	mov    (%rcx),%rdx
   15eb7:	48 8b 49 08          	mov    0x8(%rcx),%rcx
                        left_consumer,
   15ebb:	c4 c1 7e 6f 45 68    	vmovdqu 0x68(%r13),%ymm0
   15ec1:	c5 fe 7f 44 24 40    	vmovdqu %ymm0,0x40(%rsp)
   15ec7:	48 8d 44 24 40       	lea    0x40(%rsp),%rax
                    helper(
   15ecc:	48 89 04 24          	mov    %rax,(%rsp)
   15ed0:	41 0f b6 ee          	movzbl %r14b,%ebp
   15ed4:	89 ee                	mov    %ebp,%esi
   15ed6:	c5 f8 77             	vzeroupper 
   15ed9:	e8 12 d3 ff ff       	callq  131f0 <_ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17h8086494bb7307e60E>
        let status_a = unwind::halt_unwinding(call_a(oper_a, injected));
   15ede:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
   15ee5:	00 00 
   15ee7:	4c 8d b4 24 10 01 00 	lea    0x110(%rsp),%r14
   15eee:	00 
   15eef:	90                   	nop
   15ef0:	0f b6 84 24 10 01 00 	movzbl 0x110(%rsp),%eax
   15ef7:	00 
   15ef8:	84 c0                	test   %al,%al
        while !job_b.latch.probe() {
   15efa:	75 5a                	jne    15f56 <_ZN10rayon_core4join12join_context28_$u7b$$u7b$closure$u7d$$u7d$17h580ded3148edaa3eE+0x1a6>
            if let Some(job) = worker_thread.take_local_job() {
   15efc:	48 89 df             	mov    %rbx,%rdi
   15eff:	e8 ec f0 ff ff       	callq  14ff0 <_ZN10rayon_core8registry12WorkerThread14take_local_job17h6acdab09e45847e8E>
   15f04:	48 85 d2             	test   %rdx,%rdx
   15f07:	74 34                	je     15f3d <_ZN10rayon_core4join12join_context28_$u7b$$u7b$closure$u7d$$u7d$17h580ded3148edaa3eE+0x18d>
    pointer: *const (),
   15f09:	4c 39 f8             	cmp    %r15,%rax
    execute_fn: unsafe fn(*const ()),
   15f0c:	75 09                	jne    15f17 <_ZN10rayon_core4join12join_context28_$u7b$$u7b$closure$u7d$$u7d$17h580ded3148edaa3eE+0x167>
   15f0e:	4c 39 e2             	cmp    %r12,%rdx
   15f11:	0f 84 ca 00 00 00    	je     15fe1 <_ZN10rayon_core4join12join_context28_$u7b$$u7b$closure$u7d$$u7d$17h580ded3148edaa3eE+0x231>
        (self.execute_fn)(self.pointer)
   15f17:	48 89 c7             	mov    %rax,%rdi
   15f1a:	ff d2                	callq  *%rdx
        self.registry.sleep.tickle(self.index);
   15f1c:	48 8b bb 30 01 00 00 	mov    0x130(%rbx),%rdi
   15f23:	48 8b 87 98 01 00 00 	mov    0x198(%rdi),%rax
        if old_state != AWAKE {
   15f2a:	48 85 c0             	test   %rax,%rax
   15f2d:	74 c1                	je     15ef0 <_ZN10rayon_core4join12join_context28_$u7b$$u7b$closure$u7d$$u7d$17h580ded3148edaa3eE+0x140>
   15f2f:	48 81 c7 98 01 00 00 	add    $0x198,%rdi
            self.tickle_cold(worker_index);
   15f36:	e8 35 21 00 00       	callq  18070 <_ZN10rayon_core5sleep5Sleep11tickle_cold17h334403ad3bddecd8E>
   15f3b:	eb b3                	jmp    15ef0 <_ZN10rayon_core4join12join_context28_$u7b$$u7b$closure$u7d$$u7d$17h580ded3148edaa3eE+0x140>
   15f3d:	8a 84 24 10 01 00 00 	mov    0x110(%rsp),%al
   15f44:	84 c0                	test   %al,%al
        if !latch.probe() {
   15f46:	75 0e                	jne    15f56 <_ZN10rayon_core4join12join_context28_$u7b$$u7b$closure$u7d$$u7d$17h580ded3148edaa3eE+0x1a6>
   15f48:	40 b5 01             	mov    $0x1,%bpl
            self.wait_until_cold(latch);
   15f4b:	48 89 df             	mov    %rbx,%rdi
   15f4e:	4c 89 f6             	mov    %r14,%rsi
   15f51:	e8 0a f2 ff ff       	callq  15160 <_ZN10rayon_core8registry12WorkerThread15wait_until_cold17h2e02f3e12907157bE>
        (result_a, job_b.into_result())
   15f56:	48 8b 84 24 10 01 00 	mov    0x110(%rsp),%rax
   15f5d:	00 
   15f5e:	48 89 84 24 a0 00 00 	mov    %rax,0xa0(%rsp)
   15f65:	00 
   15f66:	c5 fc 10 84 24 b0 00 	vmovups 0xb0(%rsp),%ymm0
   15f6d:	00 00 
   15f6f:	c5 fc 10 8c 24 f0 00 	vmovups 0xf0(%rsp),%ymm1
   15f76:	00 00 
   15f78:	c5 fc 11 8c 24 80 00 	vmovups %ymm1,0x80(%rsp)
   15f7f:	00 00 
   15f81:	c5 fc 10 8c 24 d0 00 	vmovups 0xd0(%rsp),%ymm1
   15f88:	00 00 
   15f8a:	c5 fc 11 4c 24 60    	vmovups %ymm1,0x60(%rsp)
   15f90:	c5 fc 11 44 24 40    	vmovups %ymm0,0x40(%rsp)
        self.result.into_inner().into_return_value()
   15f96:	c5 fa 6f 84 24 88 00 	vmovdqu 0x88(%rsp),%xmm0
   15f9d:	00 00 
   15f9f:	c5 f9 7f 44 24 20    	vmovdqa %xmm0,0x20(%rsp)
   15fa5:	48 8b 84 24 98 00 00 	mov    0x98(%rsp),%rax
   15fac:	00 
   15fad:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
            JobResult::None => unreachable!(),
   15fb2:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
   15fb7:	48 83 f8 01          	cmp    $0x1,%rax
   15fbb:	0f 85 2c 01 00 00    	jne    160ed <_ZN10rayon_core4join12join_context28_$u7b$$u7b$closure$u7d$$u7d$17h580ded3148edaa3eE+0x33d>
    })
   15fc1:	48 8b 6c 24 10       	mov    0x10(%rsp),%rbp
   15fc6:	48 85 ed             	test   %rbp,%rbp
   15fc9:	0f 84 09 01 00 00    	je     160d8 <_ZN10rayon_core4join12join_context28_$u7b$$u7b$closure$u7d$$u7d$17h580ded3148edaa3eE+0x328>
   15fcf:	48 8b 5c 24 18       	mov    0x18(%rsp),%rbx
   15fd4:	48 89 ef             	mov    %rbp,%rdi
   15fd7:	c5 f8 77             	vzeroupper 
   15fda:	ff 13                	callq  *(%rbx)
   15fdc:	e9 e7 00 00 00       	jmpq   160c8 <_ZN10rayon_core4join12join_context28_$u7b$$u7b$closure$u7d$$u7d$17h580ded3148edaa3eE+0x318>
                    let result_b = job_b.run_inline(injected);
   15fe1:	48 8b 84 24 10 01 00 	mov    0x110(%rsp),%rax
   15fe8:	00 
   15fe9:	48 89 84 24 a0 00 00 	mov    %rax,0xa0(%rsp)
   15ff0:	00 
   15ff1:	c5 fc 10 84 24 d0 00 	vmovups 0xd0(%rsp),%ymm0
   15ff8:	00 00 
   15ffa:	c5 fc 10 8c 24 f0 00 	vmovups 0xf0(%rsp),%ymm1
   16001:	00 00 
   16003:	c5 fc 11 8c 24 80 00 	vmovups %ymm1,0x80(%rsp)
   1600a:	00 00 
   1600c:	c5 fc 11 44 24 60    	vmovups %ymm0,0x60(%rsp)
   16012:	c5 fc 10 84 24 b0 00 	vmovups 0xb0(%rsp),%ymm0
   16019:	00 00 
   1601b:	c5 fc 11 44 24 40    	vmovups %ymm0,0x40(%rsp)
        self.func.into_inner().unwrap()(stolen)
   16021:	48 8b 54 24 40       	mov    0x40(%rsp),%rdx
   16026:	48 8b 4c 24 48       	mov    0x48(%rsp),%rcx
   1602b:	48 8b 44 24 50       	mov    0x50(%rsp),%rax
   16030:	4c 8b 44 24 58       	mov    0x58(%rsp),%r8
   16035:	4c 8b 4c 24 60       	mov    0x60(%rsp),%r9
   1603a:	c5 fe 6f 44 24 68    	vmovdqu 0x68(%rsp),%ymm0
   16040:	c5 fe 7f 44 24 20    	vmovdqu %ymm0,0x20(%rsp)
   16046:	48 85 d2             	test   %rdx,%rdx
   16049:	0f 84 d3 00 00 00    	je     16122 <_ZN10rayon_core4join12join_context28_$u7b$$u7b$closure$u7d$$u7d$17h580ded3148edaa3eE+0x372>
   1604f:	c5 fe 6f 44 24 20    	vmovdqu 0x20(%rsp),%ymm0
   16055:	c5 fe 7f 84 24 20 01 	vmovdqu %ymm0,0x120(%rsp)
   1605c:	00 00 
                        len - mid,
   1605e:	48 8b 3a             	mov    (%rdx),%rdi
   16061:	48 2b 39             	sub    (%rcx),%rdi
                        splitter,
   16064:	48 8b 10             	mov    (%rax),%rdx
   16067:	48 8b 48 08          	mov    0x8(%rax),%rcx
                        right_consumer,
   1606b:	c5 fe 7f 44 24 20    	vmovdqu %ymm0,0x20(%rsp)
   16071:	48 8d 44 24 20       	lea    0x20(%rsp),%rax
                    helper(
   16076:	48 89 04 24          	mov    %rax,(%rsp)
   1607a:	89 ee                	mov    %ebp,%esi
   1607c:	c5 f8 77             	vzeroupper 
   1607f:	e8 6c d1 ff ff       	callq  131f0 <_ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17h8086494bb7307e60E>
   16084:	48 83 bc 24 88 00 00 	cmpq   $0x2,0x88(%rsp)
   1608b:	00 02 
   1608d:	72 25                	jb     160b4 <_ZN10rayon_core4join12join_context28_$u7b$$u7b$closure$u7d$$u7d$17h580ded3148edaa3eE+0x304>
   1608f:	48 8b ac 24 90 00 00 	mov    0x90(%rsp),%rbp
   16096:	00 
   16097:	48 8b 9c 24 98 00 00 	mov    0x98(%rsp),%rbx
   1609e:	00 
   1609f:	48 89 ef             	mov    %rbp,%rdi
   160a2:	ff 13                	callq  *(%rbx)
   160a4:	48 83 7b 08 00       	cmpq   $0x0,0x8(%rbx)
   160a9:	74 09                	je     160b4 <_ZN10rayon_core4join12join_context28_$u7b$$u7b$closure$u7d$$u7d$17h580ded3148edaa3eE+0x304>
   160ab:	48 89 ef             	mov    %rbp,%rdi
   160ae:	ff 15 c4 1c 23 00    	callq  *0x231cc4(%rip)        # 247d78 <free@GLIBC_2.2.5>
    })
   160b4:	48 8b 6c 24 10       	mov    0x10(%rsp),%rbp
   160b9:	48 85 ed             	test   %rbp,%rbp
   160bc:	74 1a                	je     160d8 <_ZN10rayon_core4join12join_context28_$u7b$$u7b$closure$u7d$$u7d$17h580ded3148edaa3eE+0x328>
   160be:	48 8b 5c 24 18       	mov    0x18(%rsp),%rbx
   160c3:	48 89 ef             	mov    %rbp,%rdi
   160c6:	ff 13                	callq  *(%rbx)
   160c8:	48 83 7b 08 00       	cmpq   $0x0,0x8(%rbx)
   160cd:	74 09                	je     160d8 <_ZN10rayon_core4join12join_context28_$u7b$$u7b$closure$u7d$$u7d$17h580ded3148edaa3eE+0x328>
   160cf:	48 89 ef             	mov    %rbp,%rdi
   160d2:	ff 15 a0 1c 23 00    	callq  *0x231ca0(%rip)        # 247d78 <free@GLIBC_2.2.5>
   160d8:	48 81 c4 48 01 00 00 	add    $0x148,%rsp
   160df:	5b                   	pop    %rbx
   160e0:	41 5c                	pop    %r12
   160e2:	41 5d                	pop    %r13
   160e4:	41 5e                	pop    %r14
   160e6:	41 5f                	pop    %r15
   160e8:	5d                   	pop    %rbp
   160e9:	c5 f8 77             	vzeroupper 
   160ec:	c3                   	retq   
            JobResult::None => unreachable!(),
   160ed:	48 85 c0             	test   %rax,%rax
   160f0:	74 17                	je     16109 <_ZN10rayon_core4join12join_context28_$u7b$$u7b$closure$u7d$$u7d$17h580ded3148edaa3eE+0x359>
            JobResult::Panic(x) => unwind::resume_unwinding(x),
   160f2:	48 8b 7c 24 28       	mov    0x28(%rsp),%rdi
   160f7:	48 8b 74 24 30       	mov    0x30(%rsp),%rsi
   160fc:	c5 f8 77             	vzeroupper 
   160ff:	e8 2c 1a 00 00       	callq  17b30 <_ZN10rayon_core6unwind16resume_unwinding17h10c44a275a145090E>
   16104:	e9 2a 01 00 00       	jmpq   16233 <_ZN10rayon_core4join12join_context28_$u7b$$u7b$closure$u7d$$u7d$17h580ded3148edaa3eE+0x483>
   16109:	48 8d 3d 11 75 02 00 	lea    0x27511(%rip),%rdi        # 3d621 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0xcc1>
   16110:	be 28 00 00 00       	mov    $0x28,%esi
   16115:	c5 f8 77             	vzeroupper 
   16118:	e8 b3 d4 ff ff       	callq  135d0 <_ZN3std9panicking11begin_panic17he6f0f18d5c7f3243E>
   1611d:	e9 11 01 00 00       	jmpq   16233 <_ZN10rayon_core4join12join_context28_$u7b$$u7b$closure$u7d$$u7d$17h580ded3148edaa3eE+0x483>
   16122:	48 8d 3d f8 71 02 00 	lea    0x271f8(%rip),%rdi        # 3d321 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x9c1>
   16129:	48 8d 15 c0 07 23 00 	lea    0x2307c0(%rip),%rdx        # 2468f0 <__init_array_end+0x8e0>
   16130:	be 2b 00 00 00       	mov    $0x2b,%esi
   16135:	c5 f8 77             	vzeroupper 
   16138:	e8 73 12 ff ff       	callq  73b0 <_ZN4core9panicking5panic17h6861470adfbddef8E>
   1613d:	e9 f1 00 00 00       	jmpq   16233 <_ZN10rayon_core4join12join_context28_$u7b$$u7b$closure$u7d$$u7d$17h580ded3148edaa3eE+0x483>
   16142:	49 89 c6             	mov    %rax,%r14
   16145:	48 8d 7c 24 20       	lea    0x20(%rsp),%rdi
    }
   1614a:	e8 71 f3 ff ff       	callq  154c0 <_ZN4core3ptr13drop_in_place17h60456c2b44f09701E>
   1614f:	eb 14                	jmp    16165 <_ZN10rayon_core4join12join_context28_$u7b$$u7b$closure$u7d$$u7d$17h580ded3148edaa3eE+0x3b5>
   16151:	49 89 c6             	mov    %rax,%r14
   16154:	eb 0f                	jmp    16165 <_ZN10rayon_core4join12join_context28_$u7b$$u7b$closure$u7d$$u7d$17h580ded3148edaa3eE+0x3b5>
   16156:	49 89 c6             	mov    %rax,%r14
   16159:	48 8b 73 08          	mov    0x8(%rbx),%rsi
   1615d:	48 89 ef             	mov    %rbp,%rdi
   16160:	e8 db 19 00 00       	callq  17b40 <_ZN5alloc5alloc8box_free17h16551760f718b115E>
   16165:	31 ed                	xor    %ebp,%ebp
   16167:	48 83 7c 24 10 00    	cmpq   $0x0,0x10(%rsp)
   1616d:	0f 84 e2 00 00 00    	je     16255 <_ZN10rayon_core4join12join_context28_$u7b$$u7b$closure$u7d$$u7d$17h580ded3148edaa3eE+0x4a5>
   16173:	e9 ec 00 00 00       	jmpq   16264 <_ZN10rayon_core4join12join_context28_$u7b$$u7b$closure$u7d$$u7d$17h580ded3148edaa3eE+0x4b4>
   16178:	eb 2b                	jmp    161a5 <_ZN10rayon_core4join12join_context28_$u7b$$u7b$closure$u7d$$u7d$17h580ded3148edaa3eE+0x3f5>
   1617a:	49 89 c6             	mov    %rax,%r14
   1617d:	31 ed                	xor    %ebp,%ebp
    }
   1617f:	48 8d bc 24 88 00 00 	lea    0x88(%rsp),%rdi
   16186:	00 
   16187:	e8 d4 f2 ff ff       	callq  15460 <_ZN4core3ptr13drop_in_place17h5f711884206bbba6E>
   1618c:	e9 bc 00 00 00       	jmpq   1624d <_ZN10rayon_core4join12join_context28_$u7b$$u7b$closure$u7d$$u7d$17h580ded3148edaa3eE+0x49d>
   16191:	49 89 c6             	mov    %rax,%r14
   16194:	48 83 7c 24 10 00    	cmpq   $0x0,0x10(%rsp)
   1619a:	0f 84 b5 00 00 00    	je     16255 <_ZN10rayon_core4join12join_context28_$u7b$$u7b$closure$u7d$$u7d$17h580ded3148edaa3eE+0x4a5>
   161a0:	e9 bf 00 00 00       	jmpq   16264 <_ZN10rayon_core4join12join_context28_$u7b$$u7b$closure$u7d$$u7d$17h580ded3148edaa3eE+0x4b4>
   161a5:	49 89 c6             	mov    %rax,%r14
   161a8:	48 8b 73 08          	mov    0x8(%rbx),%rsi
   161ac:	48 89 ef             	mov    %rbp,%rdi
   161af:	e8 8c 19 00 00       	callq  17b40 <_ZN5alloc5alloc8box_free17h16551760f718b115E>
   161b4:	31 ed                	xor    %ebp,%ebp
   161b6:	40 84 ed             	test   %bpl,%bpl
   161b9:	0f 84 9b 00 00 00    	je     1625a <_ZN10rayon_core4join12join_context28_$u7b$$u7b$closure$u7d$$u7d$17h580ded3148edaa3eE+0x4aa>
   161bf:	e9 af 00 00 00       	jmpq   16273 <_ZN10rayon_core4join12join_context28_$u7b$$u7b$closure$u7d$$u7d$17h580ded3148edaa3eE+0x4c3>
   161c4:	48 8b 68 40          	mov    0x40(%rax),%rbp
   161c8:	4c 8b 70 48          	mov    0x48(%rax),%r14
   161cc:	48 89 c7             	mov    %rax,%rdi
   161cf:	ff 15 a3 1b 23 00    	callq  *0x231ba3(%rip)        # 247d78 <free@GLIBC_2.2.5>
   161d5:	64 48 83 3c 25 a0 ff 	cmpq   $0x1,%fs:0xffffffffffffffa0
   161dc:	ff ff 01 
   161df:	75 0e                	jne    161ef <_ZN10rayon_core4join12join_context28_$u7b$$u7b$closure$u7d$$u7d$17h580ded3148edaa3eE+0x43f>
   161e1:	64 48 8b 04 25 a8 ff 	mov    %fs:0xffffffffffffffa8,%rax
   161e8:	ff ff 
   161ea:	48 ff c8             	dec    %rax
   161ed:	eb 1b                	jmp    1620a <_ZN10rayon_core4join12join_context28_$u7b$$u7b$closure$u7d$$u7d$17h580ded3148edaa3eE+0x45a>
   161ef:	b8 01 00 00 00       	mov    $0x1,%eax
   161f4:	c4 e1 f9 6e c0       	vmovq  %rax,%xmm0
   161f9:	64 c5 f9 7f 04 25 a0 	vmovdqa %xmm0,%fs:0xffffffffffffffa0
   16200:	ff ff ff 
   16203:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
   1620a:	64 48 89 04 25 a8 ff 	mov    %rax,%fs:0xffffffffffffffa8
   16211:	ff ff 
        let status_a = unwind::halt_unwinding(call_a(oper_a, injected));
   16213:	48 89 6c 24 10       	mov    %rbp,0x10(%rsp)
   16218:	4c 89 74 24 18       	mov    %r14,0x18(%rsp)
            Err(err) => join_recover_from_panic(worker_thread, &job_b.latch, err),
   1621d:	48 8d b4 24 10 01 00 	lea    0x110(%rsp),%rsi
   16224:	00 
   16225:	48 89 df             	mov    %rbx,%rdi
   16228:	48 89 ea             	mov    %rbp,%rdx
   1622b:	4c 89 f1             	mov    %r14,%rcx
   1622e:	e8 dd 15 00 00       	callq  17810 <_ZN10rayon_core4join23join_recover_from_panic17ha9b7937957cd79f2E>
   16233:	0f 0b                	ud2    
   16235:	49 89 c6             	mov    %rax,%r14
   16238:	eb 39                	jmp    16273 <_ZN10rayon_core4join12join_context28_$u7b$$u7b$closure$u7d$$u7d$17h580ded3148edaa3eE+0x4c3>
   1623a:	49 89 c6             	mov    %rax,%r14
   1623d:	40 b5 01             	mov    $0x1,%bpl
    })
   16240:	40 84 ed             	test   %bpl,%bpl
   16243:	74 15                	je     1625a <_ZN10rayon_core4join12join_context28_$u7b$$u7b$closure$u7d$$u7d$17h580ded3148edaa3eE+0x4aa>
   16245:	eb 2c                	jmp    16273 <_ZN10rayon_core4join12join_context28_$u7b$$u7b$closure$u7d$$u7d$17h580ded3148edaa3eE+0x4c3>
   16247:	49 89 c6             	mov    %rax,%r14
   1624a:	40 b5 01             	mov    $0x1,%bpl
   1624d:	48 83 7c 24 10 00    	cmpq   $0x0,0x10(%rsp)
   16253:	75 0f                	jne    16264 <_ZN10rayon_core4join12join_context28_$u7b$$u7b$closure$u7d$$u7d$17h580ded3148edaa3eE+0x4b4>
   16255:	40 84 ed             	test   %bpl,%bpl
   16258:	75 19                	jne    16273 <_ZN10rayon_core4join12join_context28_$u7b$$u7b$closure$u7d$$u7d$17h580ded3148edaa3eE+0x4c3>
   1625a:	4c 89 f7             	mov    %r14,%rdi
   1625d:	e8 3e de fe ff       	callq  40a0 <_Unwind_Resume@plt>
   16262:	0f 0b                	ud2    
   16264:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
   16269:	e8 12 f3 ff ff       	callq  15580 <_ZN4core3ptr13drop_in_place17h3afc1bf79a8187c4E>
   1626e:	40 84 ed             	test   %bpl,%bpl
   16271:	74 e7                	je     1625a <_ZN10rayon_core4join12join_context28_$u7b$$u7b$closure$u7d$$u7d$17h580ded3148edaa3eE+0x4aa>
   16273:	48 8d bc 24 b0 00 00 	lea    0xb0(%rsp),%rdi
   1627a:	00 
   1627b:	e8 00 03 00 00       	callq  16580 <_ZN4core3ptr13drop_in_place17h08b5e65d9ee77391E>
   16280:	4c 89 f7             	mov    %r14,%rdi
   16283:	e8 18 de fe ff       	callq  40a0 <_Unwind_Resume@plt>
   16288:	0f 0b                	ud2    
   1628a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000016290 <_ZN4core3ops8function5impls71_$LT$impl$u20$core..ops..function..FnMut$LT$A$GT$$u20$for$u20$$RF$F$GT$8call_mut17h16d4b4cde6b00bc1E>:
   16290:	55                   	push   %rbp
   16291:	41 57                	push   %r15
   16293:	41 56                	push   %r14
   16295:	41 55                	push   %r13
   16297:	41 54                	push   %r12
   16299:	53                   	push   %rbx
   1629a:	48 83 ec 18          	sub    $0x18,%rsp
   1629e:	49 89 d7             	mov    %rdx,%r15
        let mut Bc = make_vec_empty(n);
   162a1:	4c 8b 26             	mov    (%rsi),%r12
   162a4:	49 8b 1c 24          	mov    (%r12),%rbx
   162a8:	b9 08 00 00 00       	mov    $0x8,%ecx
   162ad:	48 89 d8             	mov    %rbx,%rax
   162b0:	48 f7 e1             	mul    %rcx
   162b3:	0f 80 a6 00 00 00    	jo     1635f <_ZN4core3ops8function5impls71_$LT$impl$u20$core..ops..function..FnMut$LT$A$GT$$u20$for$u20$$RF$F$GT$8call_mut17h16d4b4cde6b00bc1E+0xcf>
   162b9:	48 89 f5             	mov    %rsi,%rbp
   162bc:	49 89 fe             	mov    %rdi,%r14
   162bf:	49 89 c5             	mov    %rax,%r13
        for m in 0 .. n {
   162c2:	48 89 da             	mov    %rbx,%rdx
   162c5:	48 85 c0             	test   %rax,%rax
   162c8:	74 19                	je     162e3 <_ZN4core3ops8function5impls71_$LT$impl$u20$core..ops..function..FnMut$LT$A$GT$$u20$for$u20$$RF$F$GT$8call_mut17h16d4b4cde6b00bc1E+0x53>
   162ca:	4c 89 ef             	mov    %r13,%rdi
   162cd:	ff 15 35 1c 23 00    	callq  *0x231c35(%rip)        # 247f08 <malloc@GLIBC_2.2.5>
   162d3:	48 85 c0             	test   %rax,%rax
   162d6:	0f 84 8a 00 00 00    	je     16366 <_ZN4core3ops8function5impls71_$LT$impl$u20$core..ops..function..FnMut$LT$A$GT$$u20$for$u20$$RF$F$GT$8call_mut17h16d4b4cde6b00bc1E+0xd6>
   162dc:	48 89 c1             	mov    %rax,%rcx
   162df:	49 8b 14 24          	mov    (%r12),%rdx
    v
   162e3:	48 89 0c 24          	mov    %rcx,(%rsp)
   162e7:	48 89 5c 24 08       	mov    %rbx,0x8(%rsp)
   162ec:	48 89 5c 24 10       	mov    %rbx,0x10(%rsp)
   162f1:	48 85 d2             	test   %rdx,%rdx
   162f4:	74 2d                	je     16323 <_ZN4core3ops8function5impls71_$LT$impl$u20$core..ops..function..FnMut$LT$A$GT$$u20$for$u20$$RF$F$GT$8call_mut17h16d4b4cde6b00bc1E+0x93>
   162f6:	48 8b 75 08          	mov    0x8(%rbp),%rsi
   162fa:	31 ff                	xor    %edi,%edi
   162fc:	0f 1f 40 00          	nopl   0x0(%rax)
   16300:	48 39 fb             	cmp    %rdi,%rbx
   16303:	74 46                	je     1634b <_ZN4core3ops8function5impls71_$LT$impl$u20$core..ops..function..FnMut$LT$A$GT$$u20$for$u20$$RF$F$GT$8call_mut17h16d4b4cde6b00bc1E+0xbb>
   16305:	48 8b 06             	mov    (%rsi),%rax
   16308:	49 8b 2c 24          	mov    (%r12),%rbp
                Bc[m] = *B.get_unchecked(m * n + j);
   1630c:	48 0f af ef          	imul   %rdi,%rbp
   16310:	4c 01 fd             	add    %r15,%rbp
   16313:	48 8b 04 e8          	mov    (%rax,%rbp,8),%rax
   16317:	48 89 04 f9          	mov    %rax,(%rcx,%rdi,8)
   1631b:	48 ff c7             	inc    %rdi
   1631e:	48 39 fa             	cmp    %rdi,%rdx
   16321:	75 dd                	jne    16300 <_ZN4core3ops8function5impls71_$LT$impl$u20$core..ops..function..FnMut$LT$A$GT$$u20$for$u20$$RF$F$GT$8call_mut17h16d4b4cde6b00bc1E+0x70>
        Bc
   16323:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   16328:	49 89 46 10          	mov    %rax,0x10(%r14)
   1632c:	48 8b 04 24          	mov    (%rsp),%rax
   16330:	49 89 06             	mov    %rax,(%r14)
   16333:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   16338:	49 89 46 08          	mov    %rax,0x8(%r14)
   1633c:	48 83 c4 18          	add    $0x18,%rsp
   16340:	5b                   	pop    %rbx
   16341:	41 5c                	pop    %r12
   16343:	41 5d                	pop    %r13
   16345:	41 5e                	pop    %r14
   16347:	41 5f                	pop    %r15
   16349:	5d                   	pop    %rbp
   1634a:	c3                   	retq   
   1634b:	48 8d 3d 66 06 23 00 	lea    0x230666(%rip),%rdi        # 2469b8 <__init_array_end+0x9a8>
   16352:	48 89 de             	mov    %rbx,%rsi
   16355:	48 89 da             	mov    %rbx,%rdx
   16358:	e8 a3 10 ff ff       	callq  7400 <_ZN4core9panicking18panic_bounds_check17h83121a2515f55ceeE>
   1635d:	0f 0b                	ud2    
   1635f:	e8 5c d2 ff ff       	callq  135c0 <_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$11allocate_in28_$u7b$$u7b$closure$u7d$$u7d$17h571564fc3a49ddd9E>
   16364:	0f 0b                	ud2    
   16366:	be 08 00 00 00       	mov    $0x8,%esi
   1636b:	4c 89 ef             	mov    %r13,%rdi
   1636e:	e8 4d f1 fe ff       	callq  54c0 <_ZN5alloc5alloc18handle_alloc_error17hf7bb8682f6c8b1d7E>
   16373:	0f 0b                	ud2    
   16375:	48 89 c3             	mov    %rax,%rbx
   16378:	48 89 e7             	mov    %rsp,%rdi
    }).collect::<Vec<_>>();
   1637b:	e8 c0 cd ff ff       	callq  13140 <_ZN4core3ptr13drop_in_place17h755e731680b8f8beE>
   16380:	48 89 df             	mov    %rbx,%rdi
   16383:	e8 18 dd fe ff       	callq  40a0 <_Unwind_Resume@plt>
   16388:	0f 0b                	ud2    
   1638a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000016390 <_ZN83_$LT$rayon_core..job..StackJob$LT$L$C$F$C$R$GT$$u20$as$u20$rayon_core..job..Job$GT$7execute17h3604b38037f58925E>:
    unsafe fn execute(this: *const Self) {
   16390:	55                   	push   %rbp
   16391:	41 57                	push   %r15
   16393:	41 56                	push   %r14
   16395:	41 55                	push   %r13
   16397:	41 54                	push   %r12
   16399:	53                   	push   %rbx
   1639a:	48 83 ec 38          	sub    $0x38,%rsp
   1639e:	c5 fe 6f 07          	vmovdqu (%rdi),%ymm0
   163a2:	c5 f0 57 c9          	vxorps %xmm1,%xmm1,%xmm1
   163a6:	48 8b 07             	mov    (%rdi),%rax
   163a9:	c5 fc 11 0f          	vmovups %ymm1,(%rdi)
   163ad:	48 85 c0             	test   %rax,%rax
   163b0:	0f 84 d6 00 00 00    	je     1648c <_ZN83_$LT$rayon_core..job..StackJob$LT$L$C$F$C$R$GT$$u20$as$u20$rayon_core..job..Job$GT$7execute17h3604b38037f58925E+0xfc>
   163b6:	48 89 fb             	mov    %rdi,%rbx
   163b9:	4c 8b 4f 20          	mov    0x20(%rdi),%r9
   163bd:	c5 f8 10 4f 38       	vmovups 0x38(%rdi),%xmm1
                        right_consumer,
   163c2:	c5 fa 6f 57 30       	vmovdqu 0x30(%rdi),%xmm2
   163c7:	c4 e3 69 0f 57 20 08 	vpalignr $0x8,0x20(%rdi),%xmm2,%xmm2
   163ce:	c4 e3 f9 16 c1 01    	vpextrq $0x1,%xmm0,%rcx
   163d4:	c4 e3 7d 39 c0 01    	vextracti128 $0x1,%ymm0,%xmm0
   163da:	c4 e1 f9 7e c6       	vmovq  %xmm0,%rsi
   163df:	c4 c3 f9 16 c0 01    	vpextrq $0x1,%xmm0,%r8
                        len - mid,
   163e5:	48 8b 38             	mov    (%rax),%rdi
   163e8:	48 2b 39             	sub    (%rcx),%rdi
                        splitter,
   163eb:	48 8b 16             	mov    (%rsi),%rdx
   163ee:	48 8b 4e 08          	mov    0x8(%rsi),%rcx
                        right_consumer,
   163f2:	c5 fa 7f 54 24 18    	vmovdqu %xmm2,0x18(%rsp)
   163f8:	c5 f8 11 4c 24 28    	vmovups %xmm1,0x28(%rsp)
   163fe:	48 8d 44 24 18       	lea    0x18(%rsp),%rax
                    helper(
   16403:	48 89 04 24          	mov    %rax,(%rsp)
   16407:	be 01 00 00 00       	mov    $0x1,%esi
   1640c:	c5 f8 77             	vzeroupper 
   1640f:	e8 dc cd ff ff       	callq  131f0 <_ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17h8086494bb7307e60E>
        (*this.result.get()) = match unwind::halt_unwinding(call(func)) {
   16414:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
   1641b:	00 00 
   1641d:	41 bd 01 00 00 00    	mov    $0x1,%r13d
   16423:	41 b4 01             	mov    $0x1,%r12b
   16426:	45 31 f6             	xor    %r14d,%r14d
   16429:	31 ed                	xor    %ebp,%ebp
   1642b:	48 83 7b 48 02       	cmpq   $0x2,0x48(%rbx)
   16430:	72 1f                	jb     16451 <_ZN83_$LT$rayon_core..job..StackJob$LT$L$C$F$C$R$GT$$u20$as$u20$rayon_core..job..Job$GT$7execute17h3604b38037f58925E+0xc1>
   16432:	48 8b 7b 50          	mov    0x50(%rbx),%rdi
   16436:	48 8b 43 58          	mov    0x58(%rbx),%rax
   1643a:	ff 10                	callq  *(%rax)
   1643c:	48 8b 43 58          	mov    0x58(%rbx),%rax
   16440:	48 83 78 08 00       	cmpq   $0x0,0x8(%rax)
   16445:	74 0a                	je     16451 <_ZN83_$LT$rayon_core..job..StackJob$LT$L$C$F$C$R$GT$$u20$as$u20$rayon_core..job..Job$GT$7execute17h3604b38037f58925E+0xc1>
   16447:	48 8b 7b 50          	mov    0x50(%rbx),%rdi
   1644b:	ff 15 27 19 23 00    	callq  *0x231927(%rip)        # 247d78 <free@GLIBC_2.2.5>
   16451:	4c 89 6b 48          	mov    %r13,0x48(%rbx)
   16455:	4c 89 73 50          	mov    %r14,0x50(%rbx)
   16459:	4c 89 7b 58          	mov    %r15,0x58(%rbx)
        };
   1645d:	44 08 e5             	or     %r12b,%bpl
   16460:	75 16                	jne    16478 <_ZN83_$LT$rayon_core..job..StackJob$LT$L$C$F$C$R$GT$$u20$as$u20$rayon_core..job..Job$GT$7execute17h3604b38037f58925E+0xe8>
   16462:	4c 89 f7             	mov    %r14,%rdi
   16465:	41 ff 17             	callq  *(%r15)
   16468:	49 83 7f 08 00       	cmpq   $0x0,0x8(%r15)
   1646d:	74 09                	je     16478 <_ZN83_$LT$rayon_core..job..StackJob$LT$L$C$F$C$R$GT$$u20$as$u20$rayon_core..job..Job$GT$7execute17h3604b38037f58925E+0xe8>
   1646f:	4c 89 f7             	mov    %r14,%rdi
   16472:	ff 15 00 19 23 00    	callq  *0x231900(%rip)        # 247d78 <free@GLIBC_2.2.5>
   16478:	b0 01                	mov    $0x1,%al
   1647a:	86 43 60             	xchg   %al,0x60(%rbx)
    }
   1647d:	48 83 c4 38          	add    $0x38,%rsp
   16481:	5b                   	pop    %rbx
   16482:	41 5c                	pop    %r12
   16484:	41 5d                	pop    %r13
   16486:	41 5e                	pop    %r14
   16488:	41 5f                	pop    %r15
   1648a:	5d                   	pop    %rbp
   1648b:	c3                   	retq   
   1648c:	48 8d 3d 8e 6e 02 00 	lea    0x26e8e(%rip),%rdi        # 3d321 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x9c1>
   16493:	48 8d 15 6e 04 23 00 	lea    0x23046e(%rip),%rdx        # 246908 <__init_array_end+0x8f8>
   1649a:	be 2b 00 00 00       	mov    $0x2b,%esi
   1649f:	c5 f8 77             	vzeroupper 
   164a2:	e8 09 0f ff ff       	callq  73b0 <_ZN4core9panicking5panic17h6861470adfbddef8E>
   164a7:	0f 0b                	ud2    
   164a9:	e8 42 1f 00 00       	callq  183f0 <_ZN4core3ptr13drop_in_place17hc443eae86009dba0E>
   164ae:	0f 0b                	ud2    
   164b0:	49 8b 77 08          	mov    0x8(%r15),%rsi
   164b4:	4c 89 f7             	mov    %r14,%rdi
   164b7:	e8 84 16 00 00       	callq  17b40 <_ZN5alloc5alloc8box_free17h16551760f718b115E>
   164bc:	e8 2f 1f 00 00       	callq  183f0 <_ZN4core3ptr13drop_in_place17hc443eae86009dba0E>
   164c1:	0f 0b                	ud2    
   164c3:	48 8b 7b 50          	mov    0x50(%rbx),%rdi
   164c7:	48 8b 43 58          	mov    0x58(%rbx),%rax
   164cb:	48 8b 70 08          	mov    0x8(%rax),%rsi
   164cf:	e8 6c 16 00 00       	callq  17b40 <_ZN5alloc5alloc8box_free17h16551760f718b115E>
        (*this.result.get()) = match unwind::halt_unwinding(call(func)) {
   164d4:	4c 89 6b 48          	mov    %r13,0x48(%rbx)
   164d8:	4c 89 73 50          	mov    %r14,0x50(%rbx)
   164dc:	4c 89 7b 58          	mov    %r15,0x58(%rbx)
        };
   164e0:	44 08 e5             	or     %r12b,%bpl
   164e3:	74 07                	je     164ec <_ZN83_$LT$rayon_core..job..StackJob$LT$L$C$F$C$R$GT$$u20$as$u20$rayon_core..job..Job$GT$7execute17h3604b38037f58925E+0x15c>
    }
   164e5:	e8 06 1f 00 00       	callq  183f0 <_ZN4core3ptr13drop_in_place17hc443eae86009dba0E>
   164ea:	0f 0b                	ud2    
   164ec:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
        };
   164f1:	e8 8a f0 ff ff       	callq  15580 <_ZN4core3ptr13drop_in_place17h3afc1bf79a8187c4E>
    }
   164f6:	e8 f5 1e 00 00       	callq  183f0 <_ZN4core3ptr13drop_in_place17hc443eae86009dba0E>
   164fb:	0f 0b                	ud2    
   164fd:	4c 8b 70 40          	mov    0x40(%rax),%r14
   16501:	4c 8b 78 48          	mov    0x48(%rax),%r15
   16505:	48 89 c7             	mov    %rax,%rdi
   16508:	ff 15 6a 18 23 00    	callq  *0x23186a(%rip)        # 247d78 <free@GLIBC_2.2.5>
   1650e:	64 48 83 3c 25 a0 ff 	cmpq   $0x1,%fs:0xffffffffffffffa0
   16515:	ff ff 01 
   16518:	75 0e                	jne    16528 <_ZN83_$LT$rayon_core..job..StackJob$LT$L$C$F$C$R$GT$$u20$as$u20$rayon_core..job..Job$GT$7execute17h3604b38037f58925E+0x198>
   1651a:	64 48 8b 04 25 a8 ff 	mov    %fs:0xffffffffffffffa8,%rax
   16521:	ff ff 
   16523:	48 ff c8             	dec    %rax
   16526:	eb 1b                	jmp    16543 <_ZN83_$LT$rayon_core..job..StackJob$LT$L$C$F$C$R$GT$$u20$as$u20$rayon_core..job..Job$GT$7execute17h3604b38037f58925E+0x1b3>
   16528:	b8 01 00 00 00       	mov    $0x1,%eax
   1652d:	c4 e1 f9 6e c0       	vmovq  %rax,%xmm0
   16532:	64 c5 f9 7f 04 25 a0 	vmovdqa %xmm0,%fs:0xffffffffffffffa0
   16539:	ff ff ff 
   1653c:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
   16543:	64 48 89 04 25 a8 ff 	mov    %rax,%fs:0xffffffffffffffa8
   1654a:	ff ff 
        (*this.result.get()) = match unwind::halt_unwinding(call(func)) {
   1654c:	4c 89 74 24 08       	mov    %r14,0x8(%rsp)
   16551:	4c 89 7c 24 10       	mov    %r15,0x10(%rsp)
   16556:	40 b5 01             	mov    $0x1,%bpl
   16559:	41 bd 02 00 00 00    	mov    $0x2,%r13d
   1655f:	45 31 e4             	xor    %r12d,%r12d
   16562:	48 83 7b 48 02       	cmpq   $0x2,0x48(%rbx)
   16567:	0f 83 c5 fe ff ff    	jae    16432 <_ZN83_$LT$rayon_core..job..StackJob$LT$L$C$F$C$R$GT$$u20$as$u20$rayon_core..job..Job$GT$7execute17h3604b38037f58925E+0xa2>
   1656d:	e9 df fe ff ff       	jmpq   16451 <_ZN83_$LT$rayon_core..job..StackJob$LT$L$C$F$C$R$GT$$u20$as$u20$rayon_core..job..Job$GT$7execute17h3604b38037f58925E+0xc1>
   16572:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   16579:	00 00 00 
   1657c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000016580 <_ZN4core3ptr13drop_in_place17h08b5e65d9ee77391E>:
   16580:	41 56                	push   %r14
   16582:	53                   	push   %rbx
   16583:	50                   	push   %rax
   16584:	48 83 7f 48 02       	cmpq   $0x2,0x48(%rdi)
   16589:	72 29                	jb     165b4 <_ZN4core3ptr13drop_in_place17h08b5e65d9ee77391E+0x34>
   1658b:	48 89 fb             	mov    %rdi,%rbx
   1658e:	48 8b 7f 50          	mov    0x50(%rdi),%rdi
   16592:	48 8b 43 58          	mov    0x58(%rbx),%rax
   16596:	ff 10                	callq  *(%rax)
   16598:	48 8b 43 58          	mov    0x58(%rbx),%rax
   1659c:	48 83 78 08 00       	cmpq   $0x0,0x8(%rax)
   165a1:	74 11                	je     165b4 <_ZN4core3ptr13drop_in_place17h08b5e65d9ee77391E+0x34>
   165a3:	48 8b 7b 50          	mov    0x50(%rbx),%rdi
   165a7:	48 83 c4 08          	add    $0x8,%rsp
   165ab:	5b                   	pop    %rbx
   165ac:	41 5e                	pop    %r14
   165ae:	ff 25 c4 17 23 00    	jmpq   *0x2317c4(%rip)        # 247d78 <free@GLIBC_2.2.5>
   165b4:	48 83 c4 08          	add    $0x8,%rsp
   165b8:	5b                   	pop    %rbx
   165b9:	41 5e                	pop    %r14
   165bb:	c3                   	retq   
   165bc:	49 89 c6             	mov    %rax,%r14
   165bf:	48 8b 7b 50          	mov    0x50(%rbx),%rdi
   165c3:	48 8b 43 58          	mov    0x58(%rbx),%rax
   165c7:	48 8b 70 08          	mov    0x8(%rax),%rsi
   165cb:	e8 70 15 00 00       	callq  17b40 <_ZN5alloc5alloc8box_free17h16551760f718b115E>
   165d0:	4c 89 f7             	mov    %r14,%rdi
   165d3:	e8 c8 da fe ff       	callq  40a0 <_Unwind_Resume@plt>
   165d8:	0f 0b                	ud2    
   165da:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000000165e0 <_ZN83_$LT$rayon_core..job..StackJob$LT$L$C$F$C$R$GT$$u20$as$u20$rayon_core..job..Job$GT$7execute17h74b7db1694c0feb5E>:
    unsafe fn execute(this: *const Self) {
   165e0:	55                   	push   %rbp
   165e1:	41 57                	push   %r15
   165e3:	41 56                	push   %r14
   165e5:	41 55                	push   %r13
   165e7:	41 54                	push   %r12
   165e9:	53                   	push   %rbx
   165ea:	48 81 ec 98 00 00 00 	sub    $0x98,%rsp
   165f1:	c5 fe 6f 47 08       	vmovdqu 0x8(%rdi),%ymm0
   165f6:	c5 f0 57 c9          	vxorps %xmm1,%xmm1,%xmm1
   165fa:	48 83 7f 08 00       	cmpq   $0x0,0x8(%rdi)
   165ff:	c5 fc 11 4f 08       	vmovups %ymm1,0x8(%rdi)
   16604:	0f 84 06 01 00 00    	je     16710 <_ZN83_$LT$rayon_core..job..StackJob$LT$L$C$F$C$R$GT$$u20$as$u20$rayon_core..job..Job$GT$7execute17h74b7db1694c0feb5E+0x130>
   1660a:	48 89 fb             	mov    %rdi,%rbx
   1660d:	64 48 83 3c 25 00 ff 	cmpq   $0x1,%fs:0xffffffffffffff00
   16614:	ff ff 01 
   16617:	0f 85 10 01 00 00    	jne    1672d <_ZN83_$LT$rayon_core..job..StackJob$LT$L$C$F$C$R$GT$$u20$as$u20$rayon_core..job..Job$GT$7execute17h74b7db1694c0feb5E+0x14d>
   1661d:	64 48 8b 34 25 08 ff 	mov    %fs:0xffffffffffffff08,%rsi
   16624:	ff ff 
   16626:	48 85 f6             	test   %rsi,%rsi
                    assert!(injected && !worker_thread.is_null());
   16629:	0f 84 12 01 00 00    	je     16741 <_ZN83_$LT$rayon_core..job..StackJob$LT$L$C$F$C$R$GT$$u20$as$u20$rayon_core..job..Job$GT$7execute17h74b7db1694c0feb5E+0x161>
   1662f:	48 8b 83 88 00 00 00 	mov    0x88(%rbx),%rax
   16636:	c5 fc 10 4b 28       	vmovups 0x28(%rbx),%ymm1
   1663b:	c5 fc 10 53 48       	vmovups 0x48(%rbx),%ymm2
   16640:	c5 fc 10 5b 68       	vmovups 0x68(%rbx),%ymm3
                    op(&*worker_thread, true)
   16645:	c5 fe 7f 44 24 10    	vmovdqu %ymm0,0x10(%rsp)
   1664b:	c5 fc 11 4c 24 30    	vmovups %ymm1,0x30(%rsp)
   16651:	c5 fc 11 54 24 50    	vmovups %ymm2,0x50(%rsp)
   16657:	c5 fc 11 5c 24 70    	vmovups %ymm3,0x70(%rsp)
   1665d:	48 89 84 24 90 00 00 	mov    %rax,0x90(%rsp)
   16664:	00 
   16665:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
   1666a:	ba 01 00 00 00       	mov    $0x1,%edx
   1666f:	c5 f8 77             	vzeroupper 
   16672:	e8 39 f7 ff ff       	callq  15db0 <_ZN10rayon_core4join12join_context28_$u7b$$u7b$closure$u7d$$u7d$17h580ded3148edaa3eE>
        (*this.result.get()) = match unwind::halt_unwinding(call(func)) {
   16677:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
   1667e:	00 
   1667f:	41 bd 01 00 00 00    	mov    $0x1,%r13d
   16685:	41 b4 01             	mov    $0x1,%r12b
   16688:	45 31 f6             	xor    %r14d,%r14d
   1668b:	31 ed                	xor    %ebp,%ebp
   1668d:	48 83 bb 90 00 00 00 	cmpq   $0x2,0x90(%rbx)
   16694:	02 
   16695:	72 2b                	jb     166c2 <_ZN83_$LT$rayon_core..job..StackJob$LT$L$C$F$C$R$GT$$u20$as$u20$rayon_core..job..Job$GT$7execute17h74b7db1694c0feb5E+0xe2>
   16697:	48 8b bb 98 00 00 00 	mov    0x98(%rbx),%rdi
   1669e:	48 8b 83 a0 00 00 00 	mov    0xa0(%rbx),%rax
   166a5:	ff 10                	callq  *(%rax)
   166a7:	48 8b 83 a0 00 00 00 	mov    0xa0(%rbx),%rax
   166ae:	48 83 78 08 00       	cmpq   $0x0,0x8(%rax)
   166b3:	74 0d                	je     166c2 <_ZN83_$LT$rayon_core..job..StackJob$LT$L$C$F$C$R$GT$$u20$as$u20$rayon_core..job..Job$GT$7execute17h74b7db1694c0feb5E+0xe2>
   166b5:	48 8b bb 98 00 00 00 	mov    0x98(%rbx),%rdi
   166bc:	ff 15 b6 16 23 00    	callq  *0x2316b6(%rip)        # 247d78 <free@GLIBC_2.2.5>
   166c2:	4c 89 ab 90 00 00 00 	mov    %r13,0x90(%rbx)
   166c9:	4c 89 b3 98 00 00 00 	mov    %r14,0x98(%rbx)
   166d0:	4c 89 bb a0 00 00 00 	mov    %r15,0xa0(%rbx)
        };
   166d7:	44 08 e5             	or     %r12b,%bpl
   166da:	40 80 fd 01          	cmp    $0x1,%bpl
   166de:	74 16                	je     166f6 <_ZN83_$LT$rayon_core..job..StackJob$LT$L$C$F$C$R$GT$$u20$as$u20$rayon_core..job..Job$GT$7execute17h74b7db1694c0feb5E+0x116>
   166e0:	4c 89 f7             	mov    %r14,%rdi
   166e3:	41 ff 17             	callq  *(%r15)
   166e6:	49 83 7f 08 00       	cmpq   $0x0,0x8(%r15)
   166eb:	74 09                	je     166f6 <_ZN83_$LT$rayon_core..job..StackJob$LT$L$C$F$C$R$GT$$u20$as$u20$rayon_core..job..Job$GT$7execute17h74b7db1694c0feb5E+0x116>
   166ed:	4c 89 f7             	mov    %r14,%rdi
   166f0:	ff 15 82 16 23 00    	callq  *0x231682(%rip)        # 247d78 <free@GLIBC_2.2.5>
        this.latch.set();
   166f6:	48 8b 3b             	mov    (%rbx),%rdi
   166f9:	e8 72 f2 ff ff       	callq  15970 <_ZN50_$LT$$RF$L$u20$as$u20$rayon_core..latch..Latch$GT$3set17h10b7632db15be87dE>
    }
   166fe:	48 81 c4 98 00 00 00 	add    $0x98,%rsp
   16705:	5b                   	pop    %rbx
   16706:	41 5c                	pop    %r12
   16708:	41 5d                	pop    %r13
   1670a:	41 5e                	pop    %r14
   1670c:	41 5f                	pop    %r15
   1670e:	5d                   	pop    %rbp
   1670f:	c3                   	retq   
   16710:	48 8d 3d 0a 6c 02 00 	lea    0x26c0a(%rip),%rdi        # 3d321 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x9c1>
   16717:	48 8d 15 ea 01 23 00 	lea    0x2301ea(%rip),%rdx        # 246908 <__init_array_end+0x8f8>
   1671e:	be 2b 00 00 00       	mov    $0x2b,%esi
   16723:	c5 f8 77             	vzeroupper 
   16726:	e8 85 0c ff ff       	callq  73b0 <_ZN4core9panicking5panic17h6861470adfbddef8E>
   1672b:	eb 28                	jmp    16755 <_ZN83_$LT$rayon_core..job..StackJob$LT$L$C$F$C$R$GT$$u20$as$u20$rayon_core..job..Job$GT$7execute17h74b7db1694c0feb5E+0x175>
   1672d:	b8 01 00 00 00       	mov    $0x1,%eax
   16732:	c4 e1 f9 6e c0       	vmovq  %rax,%xmm0
   16737:	64 c5 f9 7f 04 25 00 	vmovdqa %xmm0,%fs:0xffffffffffffff00
   1673e:	ff ff ff 
   16741:	48 8d 3d b7 64 02 00 	lea    0x264b7(%rip),%rdi        # 3cbff <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x29f>
   16748:	be 36 00 00 00       	mov    $0x36,%esi
   1674d:	c5 f8 77             	vzeroupper 
   16750:	e8 7b ce ff ff       	callq  135d0 <_ZN3std9panicking11begin_panic17he6f0f18d5c7f3243E>
   16755:	0f 0b                	ud2    
   16757:	49 8b 77 08          	mov    0x8(%r15),%rsi
   1675b:	4c 89 f7             	mov    %r14,%rdi
   1675e:	e8 dd 13 00 00       	callq  17b40 <_ZN5alloc5alloc8box_free17h16551760f718b115E>
   16763:	e8 88 1c 00 00       	callq  183f0 <_ZN4core3ptr13drop_in_place17hc443eae86009dba0E>
   16768:	0f 0b                	ud2    
   1676a:	48 8b bb 98 00 00 00 	mov    0x98(%rbx),%rdi
   16771:	48 8b 83 a0 00 00 00 	mov    0xa0(%rbx),%rax
   16778:	48 8b 70 08          	mov    0x8(%rax),%rsi
   1677c:	e8 bf 13 00 00       	callq  17b40 <_ZN5alloc5alloc8box_free17h16551760f718b115E>
        (*this.result.get()) = match unwind::halt_unwinding(call(func)) {
   16781:	4c 89 ab 90 00 00 00 	mov    %r13,0x90(%rbx)
   16788:	4c 89 b3 98 00 00 00 	mov    %r14,0x98(%rbx)
   1678f:	4c 89 bb a0 00 00 00 	mov    %r15,0xa0(%rbx)
        };
   16796:	44 08 e5             	or     %r12b,%bpl
   16799:	75 0f                	jne    167aa <_ZN83_$LT$rayon_core..job..StackJob$LT$L$C$F$C$R$GT$$u20$as$u20$rayon_core..job..Job$GT$7execute17h74b7db1694c0feb5E+0x1ca>
   1679b:	48 89 e7             	mov    %rsp,%rdi
   1679e:	e8 dd ed ff ff       	callq  15580 <_ZN4core3ptr13drop_in_place17h3afc1bf79a8187c4E>
    }
   167a3:	e8 48 1c 00 00       	callq  183f0 <_ZN4core3ptr13drop_in_place17hc443eae86009dba0E>
   167a8:	0f 0b                	ud2    
   167aa:	e8 41 1c 00 00       	callq  183f0 <_ZN4core3ptr13drop_in_place17hc443eae86009dba0E>
   167af:	0f 0b                	ud2    
   167b1:	4c 8b 70 40          	mov    0x40(%rax),%r14
   167b5:	4c 8b 78 48          	mov    0x48(%rax),%r15
   167b9:	48 89 c7             	mov    %rax,%rdi
   167bc:	ff 15 b6 15 23 00    	callq  *0x2315b6(%rip)        # 247d78 <free@GLIBC_2.2.5>
   167c2:	64 48 83 3c 25 a0 ff 	cmpq   $0x1,%fs:0xffffffffffffffa0
   167c9:	ff ff 01 
   167cc:	75 0e                	jne    167dc <_ZN83_$LT$rayon_core..job..StackJob$LT$L$C$F$C$R$GT$$u20$as$u20$rayon_core..job..Job$GT$7execute17h74b7db1694c0feb5E+0x1fc>
   167ce:	64 48 8b 04 25 a8 ff 	mov    %fs:0xffffffffffffffa8,%rax
   167d5:	ff ff 
   167d7:	48 ff c8             	dec    %rax
   167da:	eb 1b                	jmp    167f7 <_ZN83_$LT$rayon_core..job..StackJob$LT$L$C$F$C$R$GT$$u20$as$u20$rayon_core..job..Job$GT$7execute17h74b7db1694c0feb5E+0x217>
   167dc:	b8 01 00 00 00       	mov    $0x1,%eax
   167e1:	c4 e1 f9 6e c0       	vmovq  %rax,%xmm0
   167e6:	64 c5 f9 7f 04 25 a0 	vmovdqa %xmm0,%fs:0xffffffffffffffa0
   167ed:	ff ff ff 
   167f0:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
   167f7:	64 48 89 04 25 a8 ff 	mov    %rax,%fs:0xffffffffffffffa8
   167fe:	ff ff 
        (*this.result.get()) = match unwind::halt_unwinding(call(func)) {
   16800:	4c 89 34 24          	mov    %r14,(%rsp)
   16804:	4c 89 7c 24 08       	mov    %r15,0x8(%rsp)
   16809:	40 b5 01             	mov    $0x1,%bpl
   1680c:	41 bd 02 00 00 00    	mov    $0x2,%r13d
   16812:	45 31 e4             	xor    %r12d,%r12d
   16815:	48 83 bb 90 00 00 00 	cmpq   $0x2,0x90(%rbx)
   1681c:	02 
   1681d:	0f 83 74 fe ff ff    	jae    16697 <_ZN83_$LT$rayon_core..job..StackJob$LT$L$C$F$C$R$GT$$u20$as$u20$rayon_core..job..Job$GT$7execute17h74b7db1694c0feb5E+0xb7>
   16823:	e9 9a fe ff ff       	jmpq   166c2 <_ZN83_$LT$rayon_core..job..StackJob$LT$L$C$F$C$R$GT$$u20$as$u20$rayon_core..job..Job$GT$7execute17h74b7db1694c0feb5E+0xe2>
   16828:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1682f:	00 

0000000000016830 <_ZN4core3ptr13drop_in_place17h8973f97b30af6b98E>:
   16830:	41 56                	push   %r14
   16832:	53                   	push   %rbx
   16833:	50                   	push   %rax
   16834:	48 83 bf 90 00 00 00 	cmpq   $0x2,0x90(%rdi)
   1683b:	02 
   1683c:	72 35                	jb     16873 <_ZN4core3ptr13drop_in_place17h8973f97b30af6b98E+0x43>
   1683e:	48 89 fb             	mov    %rdi,%rbx
   16841:	48 8b bf 98 00 00 00 	mov    0x98(%rdi),%rdi
   16848:	48 8b 83 a0 00 00 00 	mov    0xa0(%rbx),%rax
   1684f:	ff 10                	callq  *(%rax)
   16851:	48 8b 83 a0 00 00 00 	mov    0xa0(%rbx),%rax
   16858:	48 83 78 08 00       	cmpq   $0x0,0x8(%rax)
   1685d:	74 14                	je     16873 <_ZN4core3ptr13drop_in_place17h8973f97b30af6b98E+0x43>
   1685f:	48 8b bb 98 00 00 00 	mov    0x98(%rbx),%rdi
   16866:	48 83 c4 08          	add    $0x8,%rsp
   1686a:	5b                   	pop    %rbx
   1686b:	41 5e                	pop    %r14
   1686d:	ff 25 05 15 23 00    	jmpq   *0x231505(%rip)        # 247d78 <free@GLIBC_2.2.5>
   16873:	48 83 c4 08          	add    $0x8,%rsp
   16877:	5b                   	pop    %rbx
   16878:	41 5e                	pop    %r14
   1687a:	c3                   	retq   
   1687b:	49 89 c6             	mov    %rax,%r14
   1687e:	48 8b bb 98 00 00 00 	mov    0x98(%rbx),%rdi
   16885:	48 8b 83 a0 00 00 00 	mov    0xa0(%rbx),%rax
   1688c:	48 8b 70 08          	mov    0x8(%rax),%rsi
   16890:	e8 ab 12 00 00       	callq  17b40 <_ZN5alloc5alloc8box_free17h16551760f718b115E>
   16895:	4c 89 f7             	mov    %r14,%rdi
   16898:	e8 03 d8 fe ff       	callq  40a0 <_Unwind_Resume@plt>
   1689d:	0f 0b                	ud2    
   1689f:	90                   	nop

00000000000168a0 <rust_eh_personality>:
   168a0:	55                   	push   %rbp
   168a1:	41 57                	push   %r15
   168a3:	41 56                	push   %r14
   168a5:	41 55                	push   %r13
   168a7:	41 54                	push   %r12
   168a9:	53                   	push   %rbx
   168aa:	48 81 ec 88 00 00 00 	sub    $0x88,%rsp
   168b1:	bb 03 00 00 00       	mov    $0x3,%ebx
   168b6:	83 ff 01             	cmp    $0x1,%edi
   168b9:	0f 85 f6 02 00 00    	jne    16bb5 <rust_eh_personality+0x315>
   168bf:	4d 89 c4             	mov    %r8,%r12
   168c2:	49 89 d5             	mov    %rdx,%r13
   168c5:	41 89 f6             	mov    %esi,%r14d
   168c8:	48 89 4c 24 28       	mov    %rcx,0x28(%rsp)
   168cd:	4c 89 44 24 40       	mov    %r8,0x40(%rsp)
   168d2:	4c 89 c7             	mov    %r8,%rdi
   168d5:	ff 15 ad 15 23 00    	callq  *0x2315ad(%rip)        # 247e88 <_Unwind_GetLanguageSpecificData@GCC_3.0>
   168db:	49 89 c7             	mov    %rax,%r15
   168de:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%rsp)
   168e5:	00 
   168e6:	48 8d 74 24 08       	lea    0x8(%rsp),%rsi
   168eb:	4c 89 e7             	mov    %r12,%rdi
   168ee:	ff 15 74 15 23 00    	callq  *0x231574(%rip)        # 247e68 <_Unwind_GetIPInfo@GCC_4.2.0>
   168f4:	48 89 c5             	mov    %rax,%rbp
   168f7:	83 7c 24 08 01       	cmpl   $0x1,0x8(%rsp)
   168fc:	48 83 dd 00          	sbb    $0x0,%rbp
   16900:	4c 89 e7             	mov    %r12,%rdi
   16903:	ff 15 e7 14 23 00    	callq  *0x2314e7(%rip)        # 247df0 <_Unwind_GetRegionStart@GCC_3.0>
   16909:	48 8d 4c 24 40       	lea    0x40(%rsp),%rcx
   1690e:	48 89 4c 24 48       	mov    %rcx,0x48(%rsp)
   16913:	48 89 4c 24 50       	mov    %rcx,0x50(%rsp)
   16918:	48 89 6c 24 58       	mov    %rbp,0x58(%rsp)
   1691d:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   16922:	48 89 44 24 60       	mov    %rax,0x60(%rsp)
   16927:	48 8d 44 24 48       	lea    0x48(%rsp),%rax
   1692c:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
   16931:	48 8d 05 98 00 23 00 	lea    0x230098(%rip),%rax        # 2469d0 <__init_array_end+0x9c0>
   16938:	48 89 44 24 70       	mov    %rax,0x70(%rsp)
   1693d:	48 8d 44 24 50       	lea    0x50(%rsp),%rax
   16942:	48 89 44 24 78       	mov    %rax,0x78(%rsp)
   16947:	48 8d 05 b2 00 23 00 	lea    0x2300b2(%rip),%rax        # 246a00 <__init_array_end+0x9f0>
   1694e:	48 89 84 24 80 00 00 	mov    %rax,0x80(%rsp)
   16955:	00 
   16956:	4d 85 ff             	test   %r15,%r15
   16959:	74 3f                	je     1699a <rust_eh_personality+0xfa>
   1695b:	48 89 ef             	mov    %rbp,%rdi
   1695e:	41 8a 07             	mov    (%r15),%al
   16961:	49 83 c7 01          	add    $0x1,%r15
   16965:	4c 89 3c 24          	mov    %r15,(%rsp)
   16969:	3c ff                	cmp    $0xff,%al
   1696b:	4c 89 64 24 30       	mov    %r12,0x30(%rsp)
   16970:	44 89 74 24 0c       	mov    %r14d,0xc(%rsp)
   16975:	74 6c                	je     169e3 <rust_eh_personality+0x143>
   16977:	48 89 fb             	mov    %rdi,%rbx
   1697a:	0f b6 d0             	movzbl %al,%edx
   1697d:	48 89 e7             	mov    %rsp,%rdi
   16980:	48 8d 74 24 58       	lea    0x58(%rsp),%rsi
   16985:	e8 46 02 00 00       	callq  16bd0 <_ZN12panic_unwind5dwarf2eh20read_encoded_pointer17hde4e41960577cfbfE>
   1698a:	48 85 c0             	test   %rax,%rax
   1698d:	74 5b                	je     169ea <rust_eh_personality+0x14a>
   1698f:	41 bf 04 00 00 00    	mov    $0x4,%r15d
   16995:	e9 ce 01 00 00       	jmpq   16b68 <rust_eh_personality+0x2c8>
   1699a:	45 31 ff             	xor    %r15d,%r15d
   1699d:	49 83 ff 04          	cmp    $0x4,%r15
   169a1:	0f 84 0e 02 00 00    	je     16bb5 <rust_eh_personality+0x315>
   169a7:	41 f6 c6 01          	test   $0x1,%r14b
   169ab:	75 26                	jne    169d3 <rust_eh_personality+0x133>
   169ad:	49 8d 47 ff          	lea    -0x1(%r15),%rax
   169b1:	48 83 f8 02          	cmp    $0x2,%rax
   169b5:	0f 82 c8 01 00 00    	jb     16b83 <rust_eh_personality+0x2e3>
   169bb:	bb 02 00 00 00       	mov    $0x2,%ebx
   169c0:	4d 85 ff             	test   %r15,%r15
   169c3:	0f 85 ec 01 00 00    	jne    16bb5 <rust_eh_personality+0x315>
   169c9:	bb 08 00 00 00       	mov    $0x8,%ebx
   169ce:	e9 e2 01 00 00       	jmpq   16bb5 <rust_eh_personality+0x315>
   169d3:	48 8d 05 f6 3a 02 00 	lea    0x23af6(%rip),%rax        # 3a4d0 <_ZN4core7unicode12unicode_data2cc19BITSET_INDEX_CHUNKS17h8a1f39cd536e9344E+0x10>
   169da:	42 8b 04 b8          	mov    (%rax,%r15,4),%eax
   169de:	e9 d4 01 00 00       	jmpq   16bb7 <rust_eh_personality+0x317>
   169e3:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
   169e8:	eb 07                	jmp    169f1 <rust_eh_personality+0x151>
   169ea:	4c 8b 3c 24          	mov    (%rsp),%r15
   169ee:	48 89 df             	mov    %rbx,%rdi
   169f1:	41 8a 07             	mov    (%r15),%al
   169f4:	49 83 c7 01          	add    $0x1,%r15
   169f8:	4c 89 3c 24          	mov    %r15,(%rsp)
   169fc:	3c ff                	cmp    $0xff,%al
   169fe:	48 89 54 24 10       	mov    %rdx,0x10(%rsp)
   16a03:	74 19                	je     16a1e <rust_eh_personality+0x17e>
   16a05:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   16a0c:	00 00 00 
   16a0f:	90                   	nop
   16a10:	41 80 3f 00          	cmpb   $0x0,(%r15)
   16a14:	4d 8d 7f 01          	lea    0x1(%r15),%r15
   16a18:	4c 89 3c 24          	mov    %r15,(%rsp)
   16a1c:	78 f2                	js     16a10 <rust_eh_personality+0x170>
   16a1e:	4c 89 6c 24 20       	mov    %r13,0x20(%rsp)
   16a23:	41 8a 07             	mov    (%r15),%al
   16a26:	49 83 c7 01          	add    $0x1,%r15
   16a2a:	4c 89 3c 24          	mov    %r15,(%rsp)
   16a2e:	31 db                	xor    %ebx,%ebx
   16a30:	31 c9                	xor    %ecx,%ecx
   16a32:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   16a39:	00 00 00 
   16a3c:	0f 1f 40 00          	nopl   0x0(%rax)
   16a40:	41 0f b6 17          	movzbl (%r15),%edx
   16a44:	49 83 c7 01          	add    $0x1,%r15
   16a48:	89 d6                	mov    %edx,%esi
   16a4a:	83 e6 7f             	and    $0x7f,%esi
   16a4d:	48 d3 e6             	shl    %cl,%rsi
   16a50:	4c 89 3c 24          	mov    %r15,(%rsp)
   16a54:	48 09 f3             	or     %rsi,%rbx
   16a57:	48 83 c1 07          	add    $0x7,%rcx
   16a5b:	84 d2                	test   %dl,%dl
   16a5d:	78 e1                	js     16a40 <rust_eh_personality+0x1a0>
   16a5f:	4c 01 fb             	add    %r15,%rbx
   16a62:	44 0f b6 e0          	movzbl %al,%r12d
   16a66:	48 89 e5             	mov    %rsp,%rbp
   16a69:	4c 8d 6c 24 58       	lea    0x58(%rsp),%r13
   16a6e:	48 89 7c 24 38       	mov    %rdi,0x38(%rsp)
   16a73:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   16a7a:	00 00 00 
   16a7d:	0f 1f 00             	nopl   (%rax)
   16a80:	49 39 df             	cmp    %rbx,%r15
   16a83:	0f 83 dc 00 00 00    	jae    16b65 <rust_eh_personality+0x2c5>
   16a89:	48 89 ef             	mov    %rbp,%rdi
   16a8c:	4c 89 ee             	mov    %r13,%rsi
   16a8f:	44 89 e2             	mov    %r12d,%edx
   16a92:	e8 39 01 00 00       	callq  16bd0 <_ZN12panic_unwind5dwarf2eh20read_encoded_pointer17hde4e41960577cfbfE>
   16a97:	41 bf 04 00 00 00    	mov    $0x4,%r15d
   16a9d:	48 85 c0             	test   %rax,%rax
   16aa0:	0f 85 bd 00 00 00    	jne    16b63 <rust_eh_personality+0x2c3>
   16aa6:	49 89 d6             	mov    %rdx,%r14
   16aa9:	48 89 ef             	mov    %rbp,%rdi
   16aac:	4c 89 ee             	mov    %r13,%rsi
   16aaf:	44 89 e2             	mov    %r12d,%edx
   16ab2:	e8 19 01 00 00       	callq  16bd0 <_ZN12panic_unwind5dwarf2eh20read_encoded_pointer17hde4e41960577cfbfE>
   16ab7:	48 85 c0             	test   %rax,%rax
   16aba:	0f 85 a3 00 00 00    	jne    16b63 <rust_eh_personality+0x2c3>
   16ac0:	48 89 ef             	mov    %rbp,%rdi
   16ac3:	48 89 d5             	mov    %rdx,%rbp
   16ac6:	44 89 e2             	mov    %r12d,%edx
   16ac9:	4c 89 ee             	mov    %r13,%rsi
   16acc:	e8 ff 00 00 00       	callq  16bd0 <_ZN12panic_unwind5dwarf2eh20read_encoded_pointer17hde4e41960577cfbfE>
   16ad1:	48 85 c0             	test   %rax,%rax
   16ad4:	0f 85 8e 00 00 00    	jne    16b68 <rust_eh_personality+0x2c8>
   16ada:	4c 8b 3c 24          	mov    (%rsp),%r15
   16ade:	31 c0                	xor    %eax,%eax
   16ae0:	31 c9                	xor    %ecx,%ecx
   16ae2:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   16ae9:	00 00 00 
   16aec:	0f 1f 40 00          	nopl   0x0(%rax)
   16af0:	41 0f b6 37          	movzbl (%r15),%esi
   16af4:	49 83 c7 01          	add    $0x1,%r15
   16af8:	89 f7                	mov    %esi,%edi
   16afa:	83 e7 7f             	and    $0x7f,%edi
   16afd:	48 d3 e7             	shl    %cl,%rdi
   16b00:	4c 89 3c 24          	mov    %r15,(%rsp)
   16b04:	48 09 f8             	or     %rdi,%rax
   16b07:	48 83 c1 07          	add    $0x7,%rcx
   16b0b:	40 84 f6             	test   %sil,%sil
   16b0e:	78 e0                	js     16af0 <rust_eh_personality+0x250>
   16b10:	4c 03 74 24 18       	add    0x18(%rsp),%r14
   16b15:	48 8b 7c 24 38       	mov    0x38(%rsp),%rdi
   16b1a:	4c 39 f7             	cmp    %r14,%rdi
   16b1d:	72 46                	jb     16b65 <rust_eh_personality+0x2c5>
   16b1f:	4c 01 f5             	add    %r14,%rbp
   16b22:	48 39 ef             	cmp    %rbp,%rdi
   16b25:	48 89 e5             	mov    %rsp,%rbp
   16b28:	0f 83 52 ff ff ff    	jae    16a80 <rust_eh_personality+0x1e0>
   16b2e:	48 85 d2             	test   %rdx,%rdx
   16b31:	0f 84 92 00 00 00    	je     16bc9 <rust_eh_personality+0x329>
   16b37:	48 b9 54 53 55 52 00 	movabs $0x4d4f5a0052555354,%rcx
   16b3e:	5a 4f 4d 
   16b41:	31 f6                	xor    %esi,%esi
   16b43:	48 39 4c 24 20       	cmp    %rcx,0x20(%rsp)
   16b48:	40 0f 94 c6          	sete   %sil
   16b4c:	48 01 54 24 10       	add    %rdx,0x10(%rsp)
   16b51:	48 01 f6             	add    %rsi,%rsi
   16b54:	48 85 c0             	test   %rax,%rax
   16b57:	41 bf 01 00 00 00    	mov    $0x1,%r15d
   16b5d:	4c 0f 45 fe          	cmovne %rsi,%r15
   16b61:	eb 05                	jmp    16b68 <rust_eh_personality+0x2c8>
   16b63:	eb 03                	jmp    16b68 <rust_eh_personality+0x2c8>
   16b65:	45 31 ff             	xor    %r15d,%r15d
   16b68:	4c 8b 64 24 30       	mov    0x30(%rsp),%r12
   16b6d:	bb 03 00 00 00       	mov    $0x3,%ebx
   16b72:	44 8b 74 24 0c       	mov    0xc(%rsp),%r14d
   16b77:	49 83 ff 04          	cmp    $0x4,%r15
   16b7b:	0f 85 26 fe ff ff    	jne    169a7 <rust_eh_personality+0x107>
   16b81:	eb 32                	jmp    16bb5 <rust_eh_personality+0x315>
   16b83:	48 8b 1d d6 13 23 00 	mov    0x2313d6(%rip),%rbx        # 247f60 <_Unwind_SetGR@GCC_3.0>
   16b8a:	4c 89 e7             	mov    %r12,%rdi
   16b8d:	31 f6                	xor    %esi,%esi
   16b8f:	48 8b 54 24 28       	mov    0x28(%rsp),%rdx
   16b94:	ff d3                	callq  *%rbx
   16b96:	4c 89 e7             	mov    %r12,%rdi
   16b99:	be 01 00 00 00       	mov    $0x1,%esi
   16b9e:	31 d2                	xor    %edx,%edx
   16ba0:	ff d3                	callq  *%rbx
   16ba2:	4c 89 e7             	mov    %r12,%rdi
   16ba5:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
   16baa:	ff 15 38 14 23 00    	callq  *0x231438(%rip)        # 247fe8 <_Unwind_SetIP@GCC_3.0>
   16bb0:	bb 07 00 00 00       	mov    $0x7,%ebx
   16bb5:	89 d8                	mov    %ebx,%eax
   16bb7:	48 81 c4 88 00 00 00 	add    $0x88,%rsp
   16bbe:	5b                   	pop    %rbx
   16bbf:	41 5c                	pop    %r12
   16bc1:	41 5d                	pop    %r13
   16bc3:	41 5e                	pop    %r14
   16bc5:	41 5f                	pop    %r15
   16bc7:	5d                   	pop    %rbp
   16bc8:	c3                   	retq   
   16bc9:	45 31 ff             	xor    %r15d,%r15d
   16bcc:	eb 9a                	jmp    16b68 <rust_eh_personality+0x2c8>
   16bce:	66 90                	xchg   %ax,%ax

0000000000016bd0 <_ZN12panic_unwind5dwarf2eh20read_encoded_pointer17hde4e41960577cfbfE>:
   16bd0:	55                   	push   %rbp
   16bd1:	41 57                	push   %r15
   16bd3:	41 56                	push   %r14
   16bd5:	53                   	push   %rbx
   16bd6:	50                   	push   %rax
   16bd7:	41 89 d6             	mov    %edx,%r14d
   16bda:	41 80 fe 50          	cmp    $0x50,%r14b
   16bde:	74 10                	je     16bf0 <_ZN12panic_unwind5dwarf2eh20read_encoded_pointer17hde4e41960577cfbfE+0x20>
   16be0:	b8 01 00 00 00       	mov    $0x1,%eax
   16be5:	41 80 fe ff          	cmp    $0xff,%r14b
   16be9:	75 22                	jne    16c0d <_ZN12panic_unwind5dwarf2eh20read_encoded_pointer17hde4e41960577cfbfE+0x3d>
   16beb:	e9 5c 01 00 00       	jmpq   16d4c <_ZN12panic_unwind5dwarf2eh20read_encoded_pointer17hde4e41960577cfbfE+0x17c>
   16bf0:	48 8b 07             	mov    (%rdi),%rax
   16bf3:	48 83 c0 07          	add    $0x7,%rax
   16bf7:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
   16bfb:	48 89 07             	mov    %rax,(%rdi)
   16bfe:	48 8b 10             	mov    (%rax),%rdx
   16c01:	48 83 c0 08          	add    $0x8,%rax
   16c05:	48 89 07             	mov    %rax,(%rdi)
   16c08:	e9 3d 01 00 00       	jmpq   16d4a <_ZN12panic_unwind5dwarf2eh20read_encoded_pointer17hde4e41960577cfbfE+0x17a>
   16c0d:	44 89 f1             	mov    %r14d,%ecx
   16c10:	80 e1 0f             	and    $0xf,%cl
   16c13:	80 f9 0c             	cmp    $0xc,%cl
   16c16:	77 d3                	ja     16beb <_ZN12panic_unwind5dwarf2eh20read_encoded_pointer17hde4e41960577cfbfE+0x1b>
   16c18:	0f b6 c9             	movzbl %cl,%ecx
   16c1b:	48 8d 15 26 3b 02 00 	lea    0x23b26(%rip),%rdx        # 3a748 <_ZN4core7unicode12unicode_data2cc19BITSET_INDEX_CHUNKS17h8a1f39cd536e9344E+0x288>
   16c22:	48 63 0c 8a          	movslq (%rdx,%rcx,4),%rcx
   16c26:	48 01 d1             	add    %rdx,%rcx
   16c29:	ff e1                	jmpq   *%rcx
   16c2b:	48 8b 2f             	mov    (%rdi),%rbp
   16c2e:	4c 8b 7d 00          	mov    0x0(%rbp),%r15
   16c32:	48 83 c5 08          	add    $0x8,%rbp
   16c36:	e9 9e 00 00 00       	jmpq   16cd9 <_ZN12panic_unwind5dwarf2eh20read_encoded_pointer17hde4e41960577cfbfE+0x109>
   16c3b:	48 8b 2f             	mov    (%rdi),%rbp
   16c3e:	44 8b 7d 00          	mov    0x0(%rbp),%r15d
   16c42:	e9 8e 00 00 00       	jmpq   16cd5 <_ZN12panic_unwind5dwarf2eh20read_encoded_pointer17hde4e41960577cfbfE+0x105>
   16c47:	48 8b 2f             	mov    (%rdi),%rbp
   16c4a:	45 31 ff             	xor    %r15d,%r15d
   16c4d:	31 c9                	xor    %ecx,%ecx
   16c4f:	90                   	nop
   16c50:	0f b6 5d 00          	movzbl 0x0(%rbp),%ebx
   16c54:	48 83 c5 01          	add    $0x1,%rbp
   16c58:	89 da                	mov    %ebx,%edx
   16c5a:	83 e2 7f             	and    $0x7f,%edx
   16c5d:	48 d3 e2             	shl    %cl,%rdx
   16c60:	48 89 2f             	mov    %rbp,(%rdi)
   16c63:	49 09 d7             	or     %rdx,%r15
   16c66:	48 83 c1 07          	add    $0x7,%rcx
   16c6a:	84 db                	test   %bl,%bl
   16c6c:	78 e2                	js     16c50 <_ZN12panic_unwind5dwarf2eh20read_encoded_pointer17hde4e41960577cfbfE+0x80>
   16c6e:	48 83 f9 3f          	cmp    $0x3f,%rcx
   16c72:	77 68                	ja     16cdc <_ZN12panic_unwind5dwarf2eh20read_encoded_pointer17hde4e41960577cfbfE+0x10c>
   16c74:	80 e3 40             	and    $0x40,%bl
   16c77:	74 63                	je     16cdc <_ZN12panic_unwind5dwarf2eh20read_encoded_pointer17hde4e41960577cfbfE+0x10c>
   16c79:	48 c7 c2 ff ff ff ff 	mov    $0xffffffffffffffff,%rdx
   16c80:	48 d3 e2             	shl    %cl,%rdx
   16c83:	49 09 d7             	or     %rdx,%r15
   16c86:	eb 54                	jmp    16cdc <_ZN12panic_unwind5dwarf2eh20read_encoded_pointer17hde4e41960577cfbfE+0x10c>
   16c88:	48 8b 2f             	mov    (%rdi),%rbp
   16c8b:	4c 0f bf 7d 00       	movswq 0x0(%rbp),%r15
   16c90:	48 83 c5 02          	add    $0x2,%rbp
   16c94:	eb 43                	jmp    16cd9 <_ZN12panic_unwind5dwarf2eh20read_encoded_pointer17hde4e41960577cfbfE+0x109>
   16c96:	48 8b 2f             	mov    (%rdi),%rbp
   16c99:	45 31 ff             	xor    %r15d,%r15d
   16c9c:	31 c9                	xor    %ecx,%ecx
   16c9e:	66 90                	xchg   %ax,%ax
   16ca0:	0f b6 5d 00          	movzbl 0x0(%rbp),%ebx
   16ca4:	48 83 c5 01          	add    $0x1,%rbp
   16ca8:	89 da                	mov    %ebx,%edx
   16caa:	83 e2 7f             	and    $0x7f,%edx
   16cad:	48 d3 e2             	shl    %cl,%rdx
   16cb0:	48 89 2f             	mov    %rbp,(%rdi)
   16cb3:	49 09 d7             	or     %rdx,%r15
   16cb6:	48 83 c1 07          	add    $0x7,%rcx
   16cba:	84 db                	test   %bl,%bl
   16cbc:	78 e2                	js     16ca0 <_ZN12panic_unwind5dwarf2eh20read_encoded_pointer17hde4e41960577cfbfE+0xd0>
   16cbe:	eb 1c                	jmp    16cdc <_ZN12panic_unwind5dwarf2eh20read_encoded_pointer17hde4e41960577cfbfE+0x10c>
   16cc0:	48 8b 2f             	mov    (%rdi),%rbp
   16cc3:	44 0f b7 7d 00       	movzwl 0x0(%rbp),%r15d
   16cc8:	48 83 c5 02          	add    $0x2,%rbp
   16ccc:	eb 0b                	jmp    16cd9 <_ZN12panic_unwind5dwarf2eh20read_encoded_pointer17hde4e41960577cfbfE+0x109>
   16cce:	48 8b 2f             	mov    (%rdi),%rbp
   16cd1:	4c 63 7d 00          	movslq 0x0(%rbp),%r15
   16cd5:	48 83 c5 04          	add    $0x4,%rbp
   16cd9:	48 89 2f             	mov    %rbp,(%rdi)
   16cdc:	44 89 f1             	mov    %r14d,%ecx
   16cdf:	c0 e9 04             	shr    $0x4,%cl
   16ce2:	80 e1 07             	and    $0x7,%cl
   16ce5:	80 f9 04             	cmp    $0x4,%cl
   16ce8:	0f 87 fd fe ff ff    	ja     16beb <_ZN12panic_unwind5dwarf2eh20read_encoded_pointer17hde4e41960577cfbfE+0x1b>
   16cee:	31 d2                	xor    %edx,%edx
   16cf0:	0f b6 c9             	movzbl %cl,%ecx
   16cf3:	48 8d 3d 82 3a 02 00 	lea    0x23a82(%rip),%rdi        # 3a77c <_ZN4core7unicode12unicode_data2cc19BITSET_INDEX_CHUNKS17h8a1f39cd536e9344E+0x2bc>
   16cfa:	48 63 0c 8f          	movslq (%rdi,%rcx,4),%rcx
   16cfe:	48 01 f9             	add    %rdi,%rcx
   16d01:	ff e1                	jmpq   *%rcx
   16d03:	48 89 ea             	mov    %rbp,%rdx
   16d06:	4c 01 fa             	add    %r15,%rdx
   16d09:	45 84 f6             	test   %r14b,%r14b
   16d0c:	79 3c                	jns    16d4a <_ZN12panic_unwind5dwarf2eh20read_encoded_pointer17hde4e41960577cfbfE+0x17a>
   16d0e:	eb 20                	jmp    16d30 <_ZN12panic_unwind5dwarf2eh20read_encoded_pointer17hde4e41960577cfbfE+0x160>
   16d10:	48 8b 7e 10          	mov    0x10(%rsi),%rdi
   16d14:	48 8b 46 18          	mov    0x18(%rsi),%rax
   16d18:	eb 08                	jmp    16d22 <_ZN12panic_unwind5dwarf2eh20read_encoded_pointer17hde4e41960577cfbfE+0x152>
   16d1a:	48 8b 7e 20          	mov    0x20(%rsi),%rdi
   16d1e:	48 8b 46 28          	mov    0x28(%rsi),%rax
   16d22:	ff 50 18             	callq  *0x18(%rax)
   16d25:	48 89 c2             	mov    %rax,%rdx
   16d28:	4c 01 fa             	add    %r15,%rdx
   16d2b:	45 84 f6             	test   %r14b,%r14b
   16d2e:	79 1a                	jns    16d4a <_ZN12panic_unwind5dwarf2eh20read_encoded_pointer17hde4e41960577cfbfE+0x17a>
   16d30:	48 8b 12             	mov    (%rdx),%rdx
   16d33:	eb 15                	jmp    16d4a <_ZN12panic_unwind5dwarf2eh20read_encoded_pointer17hde4e41960577cfbfE+0x17a>
   16d35:	48 8b 56 08          	mov    0x8(%rsi),%rdx
   16d39:	48 85 d2             	test   %rdx,%rdx
   16d3c:	0f 84 a9 fe ff ff    	je     16beb <_ZN12panic_unwind5dwarf2eh20read_encoded_pointer17hde4e41960577cfbfE+0x1b>
   16d42:	4c 01 fa             	add    %r15,%rdx
   16d45:	45 84 f6             	test   %r14b,%r14b
   16d48:	78 e6                	js     16d30 <_ZN12panic_unwind5dwarf2eh20read_encoded_pointer17hde4e41960577cfbfE+0x160>
   16d4a:	31 c0                	xor    %eax,%eax
   16d4c:	48 83 c4 08          	add    $0x8,%rsp
   16d50:	5b                   	pop    %rbx
   16d51:	41 5e                	pop    %r14
   16d53:	41 5f                	pop    %r15
   16d55:	5d                   	pop    %rbp
   16d56:	c3                   	retq   
   16d57:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   16d5e:	00 00 

0000000000016d60 <_ZN12panic_unwind3imp14find_eh_action28_$u7b$$u7b$closure$u7d$$u7d$17h71dce14588c5c7c7E>:
   16d60:	48 8b 07             	mov    (%rdi),%rax
   16d63:	48 8b 38             	mov    (%rax),%rdi
   16d66:	ff 25 e4 11 23 00    	jmpq   *0x2311e4(%rip)        # 247f50 <_Unwind_GetDataRelBase@GCC_3.0>
   16d6c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000016d70 <_ZN4core3ops8function6FnOnce40call_once$u7b$$u7b$vtable.shim$u7d$$u7d$17h55c3a4ef5b460dc9E>:
   16d70:	48 8b 07             	mov    (%rdi),%rax
   16d73:	48 8b 38             	mov    (%rax),%rdi
   16d76:	ff 25 d4 11 23 00    	jmpq   *0x2311d4(%rip)        # 247f50 <_Unwind_GetDataRelBase@GCC_3.0>
   16d7c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000016d80 <_ZN12panic_unwind3imp14find_eh_action28_$u7b$$u7b$closure$u7d$$u7d$17h8c8657c5cd78d3adE>:
   16d80:	48 8b 07             	mov    (%rdi),%rax
   16d83:	48 8b 38             	mov    (%rax),%rdi
   16d86:	ff 25 74 10 23 00    	jmpq   *0x231074(%rip)        # 247e00 <_Unwind_GetTextRelBase@GCC_3.0>
   16d8c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000016d90 <_ZN4core3ops8function6FnOnce40call_once$u7b$$u7b$vtable.shim$u7d$$u7d$17h2057e5cf89126be6E>:
   16d90:	48 8b 07             	mov    (%rdi),%rax
   16d93:	48 8b 38             	mov    (%rax),%rdi
   16d96:	ff 25 64 10 23 00    	jmpq   *0x231064(%rip)        # 247e00 <_Unwind_GetTextRelBase@GCC_3.0>
   16d9c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000016da0 <__rust_start_panic>:
   16da0:	41 56                	push   %r14
   16da2:	53                   	push   %rbx
   16da3:	48 83 ec 38          	sub    $0x38,%rsp
   16da7:	48 8b 07             	mov    (%rdi),%rax
   16daa:	48 8b 4f 08          	mov    0x8(%rdi),%rcx
   16dae:	48 89 c7             	mov    %rax,%rdi
   16db1:	ff 51 18             	callq  *0x18(%rcx)
   16db4:	48 89 c3             	mov    %rax,%rbx
   16db7:	49 89 d6             	mov    %rdx,%r14
   16dba:	0f 57 c0             	xorps  %xmm0,%xmm0
   16dbd:	0f 29 44 24 20       	movaps %xmm0,0x20(%rsp)
   16dc2:	0f 29 44 24 10       	movaps %xmm0,0x10(%rsp)
   16dc7:	0f 29 04 24          	movaps %xmm0,(%rsp)
   16dcb:	bf 50 00 00 00       	mov    $0x50,%edi
   16dd0:	be 08 00 00 00       	mov    $0x8,%esi
   16dd5:	e8 e6 e5 fe ff       	callq  53c0 <__rust_alloc>
   16dda:	48 85 c0             	test   %rax,%rax
   16ddd:	74 4a                	je     16e29 <__rust_start_panic+0x89>
   16ddf:	48 b9 54 53 55 52 00 	movabs $0x4d4f5a0052555354,%rcx
   16de6:	5a 4f 4d 
   16de9:	48 89 08             	mov    %rcx,(%rax)
   16dec:	48 8d 0d 4d 00 00 00 	lea    0x4d(%rip),%rcx        # 16e40 <_ZN12panic_unwind3imp5panic17exception_cleanup17hd831fbef29e345faE>
   16df3:	48 89 48 08          	mov    %rcx,0x8(%rax)
   16df7:	0f 28 04 24          	movaps (%rsp),%xmm0
   16dfb:	0f 28 4c 24 10       	movaps 0x10(%rsp),%xmm1
   16e00:	0f 28 54 24 20       	movaps 0x20(%rsp),%xmm2
   16e05:	0f 11 40 10          	movups %xmm0,0x10(%rax)
   16e09:	0f 11 48 20          	movups %xmm1,0x20(%rax)
   16e0d:	0f 11 50 30          	movups %xmm2,0x30(%rax)
   16e11:	48 89 58 40          	mov    %rbx,0x40(%rax)
   16e15:	4c 89 70 48          	mov    %r14,0x48(%rax)
   16e19:	48 89 c7             	mov    %rax,%rdi
   16e1c:	48 83 c4 38          	add    $0x38,%rsp
   16e20:	5b                   	pop    %rbx
   16e21:	41 5e                	pop    %r14
   16e23:	ff 25 df 0f 23 00    	jmpq   *0x230fdf(%rip)        # 247e08 <_Unwind_RaiseException@GCC_3.0>
   16e29:	bf 50 00 00 00       	mov    $0x50,%edi
   16e2e:	be 08 00 00 00       	mov    $0x8,%esi
   16e33:	e8 88 e6 fe ff       	callq  54c0 <_ZN5alloc5alloc18handle_alloc_error17hf7bb8682f6c8b1d7E>
   16e38:	0f 0b                	ud2    
   16e3a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000016e40 <_ZN12panic_unwind3imp5panic17exception_cleanup17hd831fbef29e345faE>:
   16e40:	50                   	push   %rax
   16e41:	48 89 34 24          	mov    %rsi,(%rsp)
   16e45:	48 89 e7             	mov    %rsp,%rdi
   16e48:	e8 13 00 00 00       	callq  16e60 <_ZN4core3ptr13drop_in_place17h96ff9e70136629f9E>
   16e4d:	e8 7e 54 01 00       	callq  2c2d0 <__rust_drop_panic>
   16e52:	0f 0b                	ud2    
   16e54:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   16e5b:	00 00 00 
   16e5e:	66 90                	xchg   %ax,%ax

0000000000016e60 <_ZN4core3ptr13drop_in_place17h96ff9e70136629f9E>:
   16e60:	41 57                	push   %r15
   16e62:	41 56                	push   %r14
   16e64:	53                   	push   %rbx
   16e65:	49 89 ff             	mov    %rdi,%r15
   16e68:	48 8b 1f             	mov    (%rdi),%rbx
   16e6b:	48 8b 7b 40          	mov    0x40(%rbx),%rdi
   16e6f:	48 8b 43 48          	mov    0x48(%rbx),%rax
   16e73:	ff 10                	callq  *(%rax)
   16e75:	48 8b 43 48          	mov    0x48(%rbx),%rax
   16e79:	48 83 78 08 00       	cmpq   $0x0,0x8(%rax)
   16e7e:	74 09                	je     16e89 <_ZN4core3ptr13drop_in_place17h96ff9e70136629f9E+0x29>
   16e80:	48 8b 7b 40          	mov    0x40(%rbx),%rdi
   16e84:	e8 87 e5 fe ff       	callq  5410 <__rust_dealloc>
   16e89:	49 8b 3f             	mov    (%r15),%rdi
   16e8c:	5b                   	pop    %rbx
   16e8d:	41 5e                	pop    %r14
   16e8f:	41 5f                	pop    %r15
   16e91:	e9 7a e5 fe ff       	jmpq   5410 <__rust_dealloc>
   16e96:	49 89 c6             	mov    %rax,%r14
   16e99:	48 8b 7b 40          	mov    0x40(%rbx),%rdi
   16e9d:	48 8b 43 48          	mov    0x48(%rbx),%rax
   16ea1:	48 8b 70 08          	mov    0x8(%rax),%rsi
   16ea5:	e8 16 00 00 00       	callq  16ec0 <_ZN5alloc5alloc8box_free17hceb329db5a073a31E>
   16eaa:	49 8b 3f             	mov    (%r15),%rdi
   16ead:	e8 7e df 00 00       	callq  24e30 <_ZN5alloc5alloc8box_free17h20e506aa40102463E>
   16eb2:	4c 89 f7             	mov    %r14,%rdi
   16eb5:	e8 e6 d1 fe ff       	callq  40a0 <_Unwind_Resume@plt>
   16eba:	0f 0b                	ud2    
   16ebc:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000016ec0 <_ZN5alloc5alloc8box_free17hceb329db5a073a31E>:
   16ec0:	48 85 f6             	test   %rsi,%rsi
   16ec3:	74 05                	je     16eca <_ZN5alloc5alloc8box_free17hceb329db5a073a31E+0xa>
   16ec5:	e9 46 e5 fe ff       	jmpq   5410 <__rust_dealloc>
   16eca:	c3                   	retq   
   16ecb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000016ed0 <_ZN3std9panicking11begin_panic17h949da488e1115dd1E>:
   16ed0:	48 83 ec 18          	sub    $0x18,%rsp
   16ed4:	48 8d 05 82 5e 02 00 	lea    0x25e82(%rip),%rax        # 3cd5d <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x3fd>
   16edb:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   16ee0:	48 c7 44 24 10 2b 00 	movq   $0x2b,0x10(%rsp)
   16ee7:	00 00 
   16ee9:	48 8d 35 40 fb 22 00 	lea    0x22fb40(%rip),%rsi        # 246a30 <__init_array_end+0xa20>
   16ef0:	48 8d 0d 81 fb 22 00 	lea    0x22fb81(%rip),%rcx        # 246a78 <__init_array_end+0xa68>
   16ef7:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   16efc:	31 d2                	xor    %edx,%edx
   16efe:	e8 7d cb 00 00       	callq  23a80 <_ZN3std9panicking20rust_panic_with_hook17h7de8cfa1730f3618E>
   16f03:	0f 0b                	ud2    
   16f05:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   16f0c:	00 00 00 
   16f0f:	90                   	nop

0000000000016f10 <_ZN91_$LT$std..panicking..begin_panic..PanicPayload$LT$A$GT$$u20$as$u20$core..panic..BoxMeUp$GT$8take_box17he5863c3b798cf650E>:
   16f10:	41 56                	push   %r14
   16f12:	53                   	push   %rbx
   16f13:	50                   	push   %rax
   16f14:	48 8b 1f             	mov    (%rdi),%rbx
   16f17:	4c 8b 77 08          	mov    0x8(%rdi),%r14
   16f1b:	48 c7 07 00 00 00 00 	movq   $0x0,(%rdi)
   16f22:	48 85 db             	test   %rbx,%rbx
   16f25:	74 26                	je     16f4d <_ZN91_$LT$std..panicking..begin_panic..PanicPayload$LT$A$GT$$u20$as$u20$core..panic..BoxMeUp$GT$8take_box17he5863c3b798cf650E+0x3d>
   16f27:	bf 10 00 00 00       	mov    $0x10,%edi
   16f2c:	ff 15 d6 0f 23 00    	callq  *0x230fd6(%rip)        # 247f08 <malloc@GLIBC_2.2.5>
   16f32:	48 85 c0             	test   %rax,%rax
   16f35:	74 1d                	je     16f54 <_ZN91_$LT$std..panicking..begin_panic..PanicPayload$LT$A$GT$$u20$as$u20$core..panic..BoxMeUp$GT$8take_box17he5863c3b798cf650E+0x44>
   16f37:	48 89 18             	mov    %rbx,(%rax)
   16f3a:	4c 89 70 08          	mov    %r14,0x8(%rax)
   16f3e:	48 8d 15 13 fb 22 00 	lea    0x22fb13(%rip),%rdx        # 246a58 <__init_array_end+0xa48>
   16f45:	48 83 c4 08          	add    $0x8,%rsp
   16f49:	5b                   	pop    %rbx
   16f4a:	41 5e                	pop    %r14
   16f4c:	c3                   	retq   
   16f4d:	e8 ce 1e 01 00       	callq  28e20 <_ZN3std7process5abort17he9433c577a649e1aE>
   16f52:	0f 0b                	ud2    
   16f54:	bf 10 00 00 00       	mov    $0x10,%edi
   16f59:	be 08 00 00 00       	mov    $0x8,%esi
   16f5e:	e8 5d e5 fe ff       	callq  54c0 <_ZN5alloc5alloc18handle_alloc_error17hf7bb8682f6c8b1d7E>
   16f63:	0f 0b                	ud2    
   16f65:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   16f6c:	00 00 00 
   16f6f:	90                   	nop

0000000000016f70 <_ZN91_$LT$std..panicking..begin_panic..PanicPayload$LT$A$GT$$u20$as$u20$core..panic..BoxMeUp$GT$3get17h7ee3f47fc7fe600eE>:
   16f70:	50                   	push   %rax
   16f71:	48 83 3f 00          	cmpq   $0x0,(%rdi)
   16f75:	74 0c                	je     16f83 <_ZN91_$LT$std..panicking..begin_panic..PanicPayload$LT$A$GT$$u20$as$u20$core..panic..BoxMeUp$GT$3get17h7ee3f47fc7fe600eE+0x13>
   16f77:	48 89 f8             	mov    %rdi,%rax
   16f7a:	48 8d 15 d7 fa 22 00 	lea    0x22fad7(%rip),%rdx        # 246a58 <__init_array_end+0xa48>
   16f81:	59                   	pop    %rcx
   16f82:	c3                   	retq   
   16f83:	e8 98 1e 01 00       	callq  28e20 <_ZN3std7process5abort17he9433c577a649e1aE>
   16f88:	0f 0b                	ud2    
   16f8a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000016f90 <_ZN15crossbeam_queue9seg_queue17SegQueue$LT$T$GT$3pop17h021a539f4a1d2f89E>:
    ///
    /// q.push(10);
    /// assert_eq!(q.pop(), Ok(10));
    /// assert_eq!(q.pop(), Err(PopError));
    /// ```
    pub fn pop(&self) -> Result<T, PopError> {
   16f90:	55                   	push   %rbp
   16f91:	41 57                	push   %r15
   16f93:	41 56                	push   %r14
   16f95:	41 55                	push   %r13
   16f97:	41 54                	push   %r12
   16f99:	53                   	push   %rbx
   16f9a:	50                   	push   %rax
   16f9b:	48 89 fb             	mov    %rdi,%rbx
   16f9e:	48 8b 07             	mov    (%rdi),%rax
   16fa1:	4c 8b 67 08          	mov    0x8(%rdi),%r12
   16fa5:	41 bd 01 00 00 00    	mov    $0x1,%r13d
   16fab:	31 ed                	xor    %ebp,%ebp
   16fad:	eb 0a                	jmp    16fb9 <_ZN15crossbeam_queue9seg_queue17SegQueue$LT$T$GT$3pop17h021a539f4a1d2f89E+0x29>
   16faf:	90                   	nop
   16fb0:	ff c5                	inc    %ebp
   16fb2:	48 8b 03             	mov    (%rbx),%rax
   16fb5:	4c 8b 63 08          	mov    0x8(%rbx),%r12
        let mut head = self.head.index.load(Ordering::Acquire);
        let mut block = self.head.block.load(Ordering::Acquire);

        loop {
            // Calculate the offset of the index into the block.
            let offset = (head >> SHIFT) % LAP;
   16fb9:	48 89 c1             	mov    %rax,%rcx
   16fbc:	48 d1 e9             	shr    %rcx
   16fbf:	41 89 ce             	mov    %ecx,%r14d
   16fc2:	41 83 e6 1f          	and    $0x1f,%r14d

            // If we reached the end of the block, wait until the next one is installed.
            if offset == BLOCK_CAP {
   16fc6:	49 83 fe 1f          	cmp    $0x1f,%r14
   16fca:	75 34                	jne    17000 <_ZN15crossbeam_queue9seg_queue17SegQueue$LT$T$GT$3pop17h021a539f4a1d2f89E+0x70>
    /// ```
    ///
    /// [`AtomicBool`]: https://doc.rust-lang.org/std/sync/atomic/struct.AtomicBool.html
    #[inline]
    pub fn snooze(&self) {
        if self.step.get() <= SPIN_LIMIT {
   16fcc:	83 fd 07             	cmp    $0x7,%ebp
   16fcf:	0f 83 db 00 00 00    	jae    170b0 <_ZN15crossbeam_queue9seg_queue17SegQueue$LT$T$GT$3pop17h021a539f4a1d2f89E+0x120>
            for _ in 0..1 << self.step.get() {
   16fd5:	89 e8                	mov    %ebp,%eax
   16fd7:	83 e0 1f             	and    $0x1f,%eax
   16fda:	83 f8 1f             	cmp    $0x1f,%eax
   16fdd:	74 d1                	je     16fb0 <_ZN15crossbeam_queue9seg_queue17SegQueue$LT$T$GT$3pop17h021a539f4a1d2f89E+0x20>
   16fdf:	c4 c2 79 f7 c5       	shlx   %eax,%r13d,%eax
   16fe4:	31 c9                	xor    %ecx,%ecx
   16fe6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   16fed:	00 00 00 
   16ff0:	ff c1                	inc    %ecx
   16ff2:	f3 90                	pause  
   16ff4:	39 c1                	cmp    %eax,%ecx
   16ff6:	7c f8                	jl     16ff0 <_ZN15crossbeam_queue9seg_queue17SegQueue$LT$T$GT$3pop17h021a539f4a1d2f89E+0x60>
   16ff8:	e9 a3 00 00 00       	jmpq   170a0 <_ZN15crossbeam_queue9seg_queue17SegQueue$LT$T$GT$3pop17h021a539f4a1d2f89E+0x110>
   16ffd:	0f 1f 00             	nopl   (%rax)
                head = self.head.index.load(Ordering::Acquire);
                block = self.head.block.load(Ordering::Acquire);
                continue;
            }

            let mut new_head = head + (1 << SHIFT);
   17000:	4c 8d 78 02          	lea    0x2(%rax),%r15

            if new_head & HAS_NEXT == 0 {
   17004:	41 f6 c7 01          	test   $0x1,%r15b
   17008:	75 28                	jne    17032 <_ZN15crossbeam_queue9seg_queue17SegQueue$LT$T$GT$3pop17h021a539f4a1d2f89E+0xa2>
   1700a:	0f ae f0             	mfence 
   1700d:	48 8b 93 80 00 00 00 	mov    0x80(%rbx),%rdx
                atomic::fence(Ordering::SeqCst);
                let tail = self.tail.index.load(Ordering::Relaxed);

                // If the tail equals the head, that means the queue is empty.
                if head >> SHIFT == tail >> SHIFT {
   17014:	48 89 d6             	mov    %rdx,%rsi
   17017:	48 d1 ee             	shr    %rsi
   1701a:	48 39 f1             	cmp    %rsi,%rcx
   1701d:	0f 84 1a 01 00 00    	je     1713d <_ZN15crossbeam_queue9seg_queue17SegQueue$LT$T$GT$3pop17h021a539f4a1d2f89E+0x1ad>
                    return Err(PopError);
                }

                // If head and tail are not in the same block, set `HAS_NEXT` in head.
                if (head >> SHIFT) / LAP != (tail >> SHIFT) / LAP {
   17023:	48 31 c2             	xor    %rax,%rdx
   17026:	31 c9                	xor    %ecx,%ecx
   17028:	48 83 fa 3f          	cmp    $0x3f,%rdx
   1702c:	0f 97 c1             	seta   %cl
   1702f:	49 09 cf             	or     %rcx,%r15
   17032:	4d 85 e4             	test   %r12,%r12
                }
            }

            // The block can be null here only if the first push operation is in progress. In that
            // case, just wait until it gets initialized.
            if block.is_null() {
   17035:	74 3c                	je     17073 <_ZN15crossbeam_queue9seg_queue17SegQueue$LT$T$GT$3pop17h021a539f4a1d2f89E+0xe3>
   17037:	f0 4c 0f b1 3b       	lock cmpxchg %r15,(%rbx)
                head,
                new_head,
                Ordering::SeqCst,
                Ordering::Acquire,
            ) {
                Ok(_) => unsafe {
   1703c:	0f 84 82 00 00 00    	je     170c4 <_ZN15crossbeam_queue9seg_queue17SegQueue$LT$T$GT$3pop17h021a539f4a1d2f89E+0x134>
   17042:	4c 8b 63 08          	mov    0x8(%rbx),%r12
   17046:	83 fd 06             	cmp    $0x6,%ebp
        for _ in 0..1 << self.step.get().min(SPIN_LIMIT) {
   17049:	b9 06 00 00 00       	mov    $0x6,%ecx
   1704e:	0f 42 cd             	cmovb  %ebp,%ecx
   17051:	c4 c2 71 f7 cd       	shlx   %ecx,%r13d,%ecx
   17056:	31 d2                	xor    %edx,%edx
   17058:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1705f:	00 
   17060:	ff c2                	inc    %edx
   17062:	f3 90                	pause  
   17064:	39 ca                	cmp    %ecx,%edx
   17066:	7c f8                	jl     17060 <_ZN15crossbeam_queue9seg_queue17SegQueue$LT$T$GT$3pop17h021a539f4a1d2f89E+0xd0>
        if self.step.get() <= SPIN_LIMIT {
   17068:	83 fd 07             	cmp    $0x7,%ebp
   1706b:	83 d5 00             	adc    $0x0,%ebp
   1706e:	e9 46 ff ff ff       	jmpq   16fb9 <_ZN15crossbeam_queue9seg_queue17SegQueue$LT$T$GT$3pop17h021a539f4a1d2f89E+0x29>
        if self.step.get() <= SPIN_LIMIT {
   17073:	83 fd 07             	cmp    $0x7,%ebp
   17076:	73 38                	jae    170b0 <_ZN15crossbeam_queue9seg_queue17SegQueue$LT$T$GT$3pop17h021a539f4a1d2f89E+0x120>
            for _ in 0..1 << self.step.get() {
   17078:	89 e8                	mov    %ebp,%eax
   1707a:	83 e0 1f             	and    $0x1f,%eax
   1707d:	83 f8 1f             	cmp    $0x1f,%eax
   17080:	0f 84 2a ff ff ff    	je     16fb0 <_ZN15crossbeam_queue9seg_queue17SegQueue$LT$T$GT$3pop17h021a539f4a1d2f89E+0x20>
   17086:	c4 c2 79 f7 c5       	shlx   %eax,%r13d,%eax
   1708b:	31 c9                	xor    %ecx,%ecx
   1708d:	0f 1f 00             	nopl   (%rax)
   17090:	ff c1                	inc    %ecx
   17092:	f3 90                	pause  
   17094:	39 c1                	cmp    %eax,%ecx
   17096:	7c f8                	jl     17090 <_ZN15crossbeam_queue9seg_queue17SegQueue$LT$T$GT$3pop17h021a539f4a1d2f89E+0x100>
   17098:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1709f:	00 
   170a0:	83 fd 0a             	cmp    $0xa,%ebp
   170a3:	0f 86 07 ff ff ff    	jbe    16fb0 <_ZN15crossbeam_queue9seg_queue17SegQueue$LT$T$GT$3pop17h021a539f4a1d2f89E+0x20>
   170a9:	e9 04 ff ff ff       	jmpq   16fb2 <_ZN15crossbeam_queue9seg_queue17SegQueue$LT$T$GT$3pop17h021a539f4a1d2f89E+0x22>
   170ae:	66 90                	xchg   %ax,%ax
   170b0:	ff 15 ca 0d 23 00    	callq  *0x230dca(%rip)        # 247e80 <sched_yield@GLIBC_2.2.5>
   170b6:	83 fd 0a             	cmp    $0xa,%ebp
   170b9:	0f 87 f3 fe ff ff    	ja     16fb2 <_ZN15crossbeam_queue9seg_queue17SegQueue$LT$T$GT$3pop17h021a539f4a1d2f89E+0x22>
   170bf:	e9 ec fe ff ff       	jmpq   16fb0 <_ZN15crossbeam_queue9seg_queue17SegQueue$LT$T$GT$3pop17h021a539f4a1d2f89E+0x20>
                    // If we've reached the end of the block, move to the next one.
                    if offset + 1 == BLOCK_CAP {
   170c4:	4d 8d 6e 01          	lea    0x1(%r14),%r13
   170c8:	49 83 fd 1f          	cmp    $0x1f,%r13
   170cc:	0f 85 92 00 00 00    	jne    17164 <_ZN15crossbeam_queue9seg_queue17SegQueue$LT$T$GT$3pop17h021a539f4a1d2f89E+0x1d4>
   170d2:	49 8b 04 24          	mov    (%r12),%rax
   170d6:	48 85 c0             	test   %rax,%rax
            if !next.is_null() {
   170d9:	75 69                	jne    17144 <_ZN15crossbeam_queue9seg_queue17SegQueue$LT$T$GT$3pop17h021a539f4a1d2f89E+0x1b4>
   170db:	31 ed                	xor    %ebp,%ebp
        if self.step.get() <= SPIN_LIMIT {
   170dd:	83 fd 07             	cmp    $0x7,%ebp
   170e0:	72 1e                	jb     17100 <_ZN15crossbeam_queue9seg_queue17SegQueue$LT$T$GT$3pop17h021a539f4a1d2f89E+0x170>
   170e2:	eb 4c                	jmp    17130 <_ZN15crossbeam_queue9seg_queue17SegQueue$LT$T$GT$3pop17h021a539f4a1d2f89E+0x1a0>
   170e4:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   170eb:	00 00 00 
   170ee:	66 90                	xchg   %ax,%ax
            #[cfg(feature = "std")]
            ::std::thread::yield_now();
        }

        if self.step.get() <= YIELD_LIMIT {
            self.step.set(self.step.get() + 1);
   170f0:	ff c5                	inc    %ebp
   170f2:	49 8b 04 24          	mov    (%r12),%rax
   170f6:	48 85 c0             	test   %rax,%rax
   170f9:	75 49                	jne    17144 <_ZN15crossbeam_queue9seg_queue17SegQueue$LT$T$GT$3pop17h021a539f4a1d2f89E+0x1b4>
        if self.step.get() <= SPIN_LIMIT {
   170fb:	83 fd 07             	cmp    $0x7,%ebp
   170fe:	73 30                	jae    17130 <_ZN15crossbeam_queue9seg_queue17SegQueue$LT$T$GT$3pop17h021a539f4a1d2f89E+0x1a0>
            for _ in 0..1 << self.step.get() {
   17100:	89 e8                	mov    %ebp,%eax
   17102:	83 e0 1f             	and    $0x1f,%eax
   17105:	83 f8 1f             	cmp    $0x1f,%eax
   17108:	74 e6                	je     170f0 <_ZN15crossbeam_queue9seg_queue17SegQueue$LT$T$GT$3pop17h021a539f4a1d2f89E+0x160>
   1710a:	b9 01 00 00 00       	mov    $0x1,%ecx
   1710f:	c4 e2 79 f7 c1       	shlx   %eax,%ecx,%eax
   17114:	31 c9                	xor    %ecx,%ecx
   17116:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1711d:	00 00 00 
   17120:	ff c1                	inc    %ecx
   17122:	f3 90                	pause  
   17124:	39 c1                	cmp    %eax,%ecx
   17126:	7c f8                	jl     17120 <_ZN15crossbeam_queue9seg_queue17SegQueue$LT$T$GT$3pop17h021a539f4a1d2f89E+0x190>
        if self.step.get() <= YIELD_LIMIT {
   17128:	83 fd 0a             	cmp    $0xa,%ebp
   1712b:	76 c3                	jbe    170f0 <_ZN15crossbeam_queue9seg_queue17SegQueue$LT$T$GT$3pop17h021a539f4a1d2f89E+0x160>
   1712d:	eb c3                	jmp    170f2 <_ZN15crossbeam_queue9seg_queue17SegQueue$LT$T$GT$3pop17h021a539f4a1d2f89E+0x162>
   1712f:	90                   	nop
   17130:	ff 15 4a 0d 23 00    	callq  *0x230d4a(%rip)        # 247e80 <sched_yield@GLIBC_2.2.5>
   17136:	83 fd 0a             	cmp    $0xa,%ebp
   17139:	77 b7                	ja     170f2 <_ZN15crossbeam_queue9seg_queue17SegQueue$LT$T$GT$3pop17h021a539f4a1d2f89E+0x162>
   1713b:	eb b3                	jmp    170f0 <_ZN15crossbeam_queue9seg_queue17SegQueue$LT$T$GT$3pop17h021a539f4a1d2f89E+0x160>
   1713d:	31 ed                	xor    %ebp,%ebp
   1713f:	e9 99 06 00 00       	jmpq   177dd <_ZN15crossbeam_queue9seg_queue17SegQueue$LT$T$GT$3pop17h021a539f4a1d2f89E+0x84d>
   17144:	49 83 c7 02          	add    $0x2,%r15
   17148:	4c 89 f9             	mov    %r15,%rcx
   1714b:	48 83 e1 fe          	and    $0xfffffffffffffffe,%rcx
   1714f:	48 8b 10             	mov    (%rax),%rdx
                        let next = (*block).wait_next();
                        let mut next_index = (new_head & !HAS_NEXT).wrapping_add(1 << SHIFT);
                        if !(*next).next.load(Ordering::Relaxed).is_null() {
                            next_index |= HAS_NEXT;
   17152:	49 83 cf 01          	or     $0x1,%r15
   17156:	48 85 d2             	test   %rdx,%rdx
                        if !(*next).next.load(Ordering::Relaxed).is_null() {
   17159:	4c 0f 44 f9          	cmove  %rcx,%r15
   1715d:	48 89 43 08          	mov    %rax,0x8(%rbx)
   17161:	4c 89 3b             	mov    %r15,(%rbx)
   17164:	4f 8d 34 76          	lea    (%r14,%r14,2),%r14
   17168:	4b 8d 1c f4          	lea    (%r12,%r14,8),%rbx
   1716c:	48 83 c3 08          	add    $0x8,%rbx
   17170:	4b 8b 44 f4 18       	mov    0x18(%r12,%r14,8),%rax
        while self.state.load(Ordering::Acquire) & WRITE == 0 {
   17175:	a8 01                	test   $0x1,%al
   17177:	75 54                	jne    171cd <_ZN15crossbeam_queue9seg_queue17SegQueue$LT$T$GT$3pop17h021a539f4a1d2f89E+0x23d>
   17179:	31 ed                	xor    %ebp,%ebp
   1717b:	41 bf 01 00 00 00    	mov    $0x1,%r15d
        if self.step.get() <= SPIN_LIMIT {
   17181:	83 fd 07             	cmp    $0x7,%ebp
   17184:	72 19                	jb     1719f <_ZN15crossbeam_queue9seg_queue17SegQueue$LT$T$GT$3pop17h021a539f4a1d2f89E+0x20f>
   17186:	eb 38                	jmp    171c0 <_ZN15crossbeam_queue9seg_queue17SegQueue$LT$T$GT$3pop17h021a539f4a1d2f89E+0x230>
   17188:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1718f:	00 
            self.step.set(self.step.get() + 1);
   17190:	ff c5                	inc    %ebp
   17192:	48 8b 43 10          	mov    0x10(%rbx),%rax
   17196:	a8 01                	test   $0x1,%al
   17198:	75 33                	jne    171cd <_ZN15crossbeam_queue9seg_queue17SegQueue$LT$T$GT$3pop17h021a539f4a1d2f89E+0x23d>
        if self.step.get() <= SPIN_LIMIT {
   1719a:	83 fd 07             	cmp    $0x7,%ebp
   1719d:	73 21                	jae    171c0 <_ZN15crossbeam_queue9seg_queue17SegQueue$LT$T$GT$3pop17h021a539f4a1d2f89E+0x230>
            for _ in 0..1 << self.step.get() {
   1719f:	89 e8                	mov    %ebp,%eax
   171a1:	83 e0 1f             	and    $0x1f,%eax
   171a4:	83 f8 1f             	cmp    $0x1f,%eax
   171a7:	74 e7                	je     17190 <_ZN15crossbeam_queue9seg_queue17SegQueue$LT$T$GT$3pop17h021a539f4a1d2f89E+0x200>
   171a9:	c4 c2 79 f7 c7       	shlx   %eax,%r15d,%eax
   171ae:	31 c9                	xor    %ecx,%ecx
   171b0:	ff c1                	inc    %ecx
   171b2:	f3 90                	pause  
   171b4:	39 c1                	cmp    %eax,%ecx
   171b6:	7c f8                	jl     171b0 <_ZN15crossbeam_queue9seg_queue17SegQueue$LT$T$GT$3pop17h021a539f4a1d2f89E+0x220>
        if self.step.get() <= YIELD_LIMIT {
   171b8:	83 fd 0a             	cmp    $0xa,%ebp
   171bb:	76 d3                	jbe    17190 <_ZN15crossbeam_queue9seg_queue17SegQueue$LT$T$GT$3pop17h021a539f4a1d2f89E+0x200>
   171bd:	eb d3                	jmp    17192 <_ZN15crossbeam_queue9seg_queue17SegQueue$LT$T$GT$3pop17h021a539f4a1d2f89E+0x202>
   171bf:	90                   	nop
   171c0:	ff 15 ba 0c 23 00    	callq  *0x230cba(%rip)        # 247e80 <sched_yield@GLIBC_2.2.5>
   171c6:	83 fd 0a             	cmp    $0xa,%ebp
   171c9:	77 c7                	ja     17192 <_ZN15crossbeam_queue9seg_queue17SegQueue$LT$T$GT$3pop17h021a539f4a1d2f89E+0x202>
   171cb:	eb c3                	jmp    17190 <_ZN15crossbeam_queue9seg_queue17SegQueue$LT$T$GT$3pop17h021a539f4a1d2f89E+0x200>
                    }

                    // Read the value.
                    let slot = (*block).slots.get_unchecked(offset);
                    slot.wait_write();
                    let m = slot.value.get().read();
   171cd:	4c 8b 3b             	mov    (%rbx),%r15
   171d0:	4b 8b 6c f4 10       	mov    0x10(%r12,%r14,8),%rbp
                    if offset + 1 == BLOCK_CAP {
   171d5:	49 83 fd 1f          	cmp    $0x1f,%r13
                    let value = ManuallyDrop::into_inner(m);

                    // Destroy the block if we've reached the end, or if another thread wanted to
                    // destroy but couldn't because we were busy reading from the slot.
                    if offset + 1 == BLOCK_CAP {
   171d9:	0f 85 8b 05 00 00    	jne    1776a <_ZN15crossbeam_queue9seg_queue17SegQueue$LT$T$GT$3pop17h021a539f4a1d2f89E+0x7da>
   171df:	49 8b 44 24 18       	mov    0x18(%r12),%rax
            if slot.state.load(Ordering::Acquire) & READ == 0
   171e4:	a8 02                	test   $0x2,%al
   171e6:	75 20                	jne    17208 <_ZN15crossbeam_queue9seg_queue17SegQueue$LT$T$GT$3pop17h021a539f4a1d2f89E+0x278>
   171e8:	49 8b 44 24 18       	mov    0x18(%r12),%rax
   171ed:	0f 1f 00             	nopl   (%rax)
   171f0:	48 89 c1             	mov    %rax,%rcx
   171f3:	48 83 c9 04          	or     $0x4,%rcx
   171f7:	f0 49 0f b1 4c 24 18 	lock cmpxchg %rcx,0x18(%r12)
   171fe:	75 f0                	jne    171f0 <_ZN15crossbeam_queue9seg_queue17SegQueue$LT$T$GT$3pop17h021a539f4a1d2f89E+0x260>
                && slot.state.fetch_or(DESTROY, Ordering::AcqRel) & READ == 0
   17200:	a8 02                	test   $0x2,%al
            if slot.state.load(Ordering::Acquire) & READ == 0
   17202:	0f 84 d5 05 00 00    	je     177dd <_ZN15crossbeam_queue9seg_queue17SegQueue$LT$T$GT$3pop17h021a539f4a1d2f89E+0x84d>
   17208:	49 8b 44 24 30       	mov    0x30(%r12),%rax
   1720d:	a8 02                	test   $0x2,%al
   1720f:	75 27                	jne    17238 <_ZN15crossbeam_queue9seg_queue17SegQueue$LT$T$GT$3pop17h021a539f4a1d2f89E+0x2a8>
   17211:	49 8b 44 24 30       	mov    0x30(%r12),%rax
   17216:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1721d:	00 00 00 
   17220:	48 89 c1             	mov    %rax,%rcx
   17223:	48 83 c9 04          	or     $0x4,%rcx
   17227:	f0 49 0f b1 4c 24 30 	lock cmpxchg %rcx,0x30(%r12)
   1722e:	75 f0                	jne    17220 <_ZN15crossbeam_queue9seg_queue17SegQueue$LT$T$GT$3pop17h021a539f4a1d2f89E+0x290>
                && slot.state.fetch_or(DESTROY, Ordering::AcqRel) & READ == 0
   17230:	a8 02                	test   $0x2,%al
            if slot.state.load(Ordering::Acquire) & READ == 0
   17232:	0f 84 a5 05 00 00    	je     177dd <_ZN15crossbeam_queue9seg_queue17SegQueue$LT$T$GT$3pop17h021a539f4a1d2f89E+0x84d>
   17238:	49 8b 44 24 48       	mov    0x48(%r12),%rax
   1723d:	a8 02                	test   $0x2,%al
   1723f:	75 27                	jne    17268 <_ZN15crossbeam_queue9seg_queue17SegQueue$LT$T$GT$3pop17h021a539f4a1d2f89E+0x2d8>
   17241:	49 8b 44 24 48       	mov    0x48(%r12),%rax
   17246:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1724d:	00 00 00 
   17250:	48 89 c1             	mov    %rax,%rcx
   17253:	48 83 c9 04          	or     $0x4,%rcx
   17257:	f0 49 0f b1 4c 24 48 	lock cmpxchg %rcx,0x48(%r12)
   1725e:	75 f0                	jne    17250 <_ZN15crossbeam_queue9seg_queue17SegQueue$LT$T$GT$3pop17h021a539f4a1d2f89E+0x2c0>
                && slot.state.fetch_or(DESTROY, Ordering::AcqRel) & READ == 0
   17260:	a8 02                	test   $0x2,%al
            if slot.state.load(Ordering::Acquire) & READ == 0
   17262:	0f 84 75 05 00 00    	je     177dd <_ZN15crossbeam_queue9seg_queue17SegQueue$LT$T$GT$3pop17h021a539f4a1d2f89E+0x84d>
   17268:	49 8b 44 24 60       	mov    0x60(%r12),%rax
   1726d:	a8 02                	test   $0x2,%al
   1726f:	75 27                	jne    17298 <_ZN15crossbeam_queue9seg_queue17SegQueue$LT$T$GT$3pop17h021a539f4a1d2f89E+0x308>
   17271:	49 8b 44 24 60       	mov    0x60(%r12),%rax
   17276:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1727d:	00 00 00 
   17280:	48 89 c1             	mov    %rax,%rcx
   17283:	48 83 c9 04          	or     $0x4,%rcx
   17287:	f0 49 0f b1 4c 24 60 	lock cmpxchg %rcx,0x60(%r12)
   1728e:	75 f0                	jne    17280 <_ZN15crossbeam_queue9seg_queue17SegQueue$LT$T$GT$3pop17h021a539f4a1d2f89E+0x2f0>
                && slot.state.fetch_or(DESTROY, Ordering::AcqRel) & READ == 0
   17290:	a8 02                	test   $0x2,%al
            if slot.state.load(Ordering::Acquire) & READ == 0
   17292:	0f 84 45 05 00 00    	je     177dd <_ZN15crossbeam_queue9seg_queue17SegQueue$LT$T$GT$3pop17h021a539f4a1d2f89E+0x84d>
   17298:	49 8b 44 24 78       	mov    0x78(%r12),%rax
   1729d:	a8 02                	test   $0x2,%al
   1729f:	75 27                	jne    172c8 <_ZN15crossbeam_queue9seg_queue17SegQueue$LT$T$GT$3pop17h021a539f4a1d2f89E+0x338>
   172a1:	49 8b 44 24 78       	mov    0x78(%r12),%rax
   172a6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   172ad:	00 00 00 
   172b0:	48 89 c1             	mov    %rax,%rcx
   172b3:	48 83 c9 04          	or     $0x4,%rcx
   172b7:	f0 49 0f b1 4c 24 78 	lock cmpxchg %rcx,0x78(%r12)
   172be:	75 f0                	jne    172b0 <_ZN15crossbeam_queue9seg_queue17SegQueue$LT$T$GT$3pop17h021a539f4a1d2f89E+0x320>
                && slot.state.fetch_or(DESTROY, Ordering::AcqRel) & READ == 0
   172c0:	a8 02                	test   $0x2,%al
            if slot.state.load(Ordering::Acquire) & READ == 0
   172c2:	0f 84 15 05 00 00    	je     177dd <_ZN15crossbeam_queue9seg_queue17SegQueue$LT$T$GT$3pop17h021a539f4a1d2f89E+0x84d>
   172c8:	49 8b 84 24 90 00 00 	mov    0x90(%r12),%rax
   172cf:	00 
   172d0:	a8 02                	test   $0x2,%al
   172d2:	75 27                	jne    172fb <_ZN15crossbeam_queue9seg_queue17SegQueue$LT$T$GT$3pop17h021a539f4a1d2f89E+0x36b>
   172d4:	49 8b 84 24 90 00 00 	mov    0x90(%r12),%rax
   172db:	00 
   172dc:	0f 1f 40 00          	nopl   0x0(%rax)
   172e0:	48 89 c1             	mov    %rax,%rcx
   172e3:	48 83 c9 04          	or     $0x4,%rcx
   172e7:	f0 49 0f b1 8c 24 90 	lock cmpxchg %rcx,0x90(%r12)
   172ee:	00 00 00 
   172f1:	75 ed                	jne    172e0 <_ZN15crossbeam_queue9seg_queue17SegQueue$LT$T$GT$3pop17h021a539f4a1d2f89E+0x350>
                && slot.state.fetch_or(DESTROY, Ordering::AcqRel) & READ == 0
   172f3:	a8 02                	test   $0x2,%al
            if slot.state.load(Ordering::Acquire) & READ == 0
   172f5:	0f 84 e2 04 00 00    	je     177dd <_ZN15crossbeam_queue9seg_queue17SegQueue$LT$T$GT$3pop17h021a539f4a1d2f89E+0x84d>
   172fb:	49 8b 84 24 a8 00 00 	mov    0xa8(%r12),%rax
   17302:	00 
   17303:	a8 02                	test   $0x2,%al
   17305:	75 24                	jne    1732b <_ZN15crossbeam_queue9seg_queue17SegQueue$LT$T$GT$3pop17h021a539f4a1d2f89E+0x39b>
   17307:	49 8b 84 24 a8 00 00 	mov    0xa8(%r12),%rax
   1730e:	00 
   1730f:	90                   	nop
   17310:	48 89 c1             	mov    %rax,%rcx
   17313:	48 83 c9 04          	or     $0x4,%rcx
   17317:	f0 49 0f b1 8c 24 a8 	lock cmpxchg %rcx,0xa8(%r12)
   1731e:	00 00 00 
   17321:	75 ed                	jne    17310 <_ZN15crossbeam_queue9seg_queue17SegQueue$LT$T$GT$3pop17h021a539f4a1d2f89E+0x380>
                && slot.state.fetch_or(DESTROY, Ordering::AcqRel) & READ == 0
   17323:	a8 02                	test   $0x2,%al
            if slot.state.load(Ordering::Acquire) & READ == 0
   17325:	0f 84 b2 04 00 00    	je     177dd <_ZN15crossbeam_queue9seg_queue17SegQueue$LT$T$GT$3pop17h021a539f4a1d2f89E+0x84d>
   1732b:	49 8b 84 24 c0 00 00 	mov    0xc0(%r12),%rax
   17332:	00 
   17333:	a8 02                	test   $0x2,%al
   17335:	75 24                	jne    1735b <_ZN15crossbeam_queue9seg_queue17SegQueue$LT$T$GT$3pop17h021a539f4a1d2f89E+0x3cb>
   17337:	49 8b 84 24 c0 00 00 	mov    0xc0(%r12),%rax
   1733e:	00 
   1733f:	90                   	nop
   17340:	48 89 c1             	mov    %rax,%rcx
   17343:	48 83 c9 04          	or     $0x4,%rcx
   17347:	f0 49 0f b1 8c 24 c0 	lock cmpxchg %rcx,0xc0(%r12)
   1734e:	00 00 00 
   17351:	75 ed                	jne    17340 <_ZN15crossbeam_queue9seg_queue17SegQueue$LT$T$GT$3pop17h021a539f4a1d2f89E+0x3b0>
                && slot.state.fetch_or(DESTROY, Ordering::AcqRel) & READ == 0
   17353:	a8 02                	test   $0x2,%al
            if slot.state.load(Ordering::Acquire) & READ == 0
   17355:	0f 84 82 04 00 00    	je     177dd <_ZN15crossbeam_queue9seg_queue17SegQueue$LT$T$GT$3pop17h021a539f4a1d2f89E+0x84d>
   1735b:	49 8b 84 24 d8 00 00 	mov    0xd8(%r12),%rax
   17362:	00 
   17363:	a8 02                	test   $0x2,%al
   17365:	75 24                	jne    1738b <_ZN15crossbeam_queue9seg_queue17SegQueue$LT$T$GT$3pop17h021a539f4a1d2f89E+0x3fb>
   17367:	49 8b 84 24 d8 00 00 	mov    0xd8(%r12),%rax
   1736e:	00 
   1736f:	90                   	nop
   17370:	48 89 c1             	mov    %rax,%rcx
   17373:	48 83 c9 04          	or     $0x4,%rcx
   17377:	f0 49 0f b1 8c 24 d8 	lock cmpxchg %rcx,0xd8(%r12)
   1737e:	00 00 00 
   17381:	75 ed                	jne    17370 <_ZN15crossbeam_queue9seg_queue17SegQueue$LT$T$GT$3pop17h021a539f4a1d2f89E+0x3e0>
                && slot.state.fetch_or(DESTROY, Ordering::AcqRel) & READ == 0
   17383:	a8 02                	test   $0x2,%al
            if slot.state.load(Ordering::Acquire) & READ == 0
   17385:	0f 84 52 04 00 00    	je     177dd <_ZN15crossbeam_queue9seg_queue17SegQueue$LT$T$GT$3pop17h021a539f4a1d2f89E+0x84d>
   1738b:	49 8b 84 24 f0 00 00 	mov    0xf0(%r12),%rax
   17392:	00 
   17393:	a8 02                	test   $0x2,%al
   17395:	75 24                	jne    173bb <_ZN15crossbeam_queue9seg_queue17SegQueue$LT$T$GT$3pop17h021a539f4a1d2f89E+0x42b>
   17397:	49 8b 84 24 f0 00 00 	mov    0xf0(%r12),%rax
   1739e:	00 
   1739f:	90                   	nop
   173a0:	48 89 c1             	mov    %rax,%rcx
   173a3:	48 83 c9 04          	or     $0x4,%rcx
   173a7:	f0 49 0f b1 8c 24 f0 	lock cmpxchg %rcx,0xf0(%r12)
   173ae:	00 00 00 
   173b1:	75 ed                	jne    173a0 <_ZN15crossbeam_queue9seg_queue17SegQueue$LT$T$GT$3pop17h021a539f4a1d2f89E+0x410>
                && slot.state.fetch_or(DESTROY, Ordering::AcqRel) & READ == 0
   173b3:	a8 02                	test   $0x2,%al
            if slot.state.load(Ordering::Acquire) & READ == 0
   173b5:	0f 84 22 04 00 00    	je     177dd <_ZN15crossbeam_queue9seg_queue17SegQueue$LT$T$GT$3pop17h021a539f4a1d2f89E+0x84d>
   173bb:	49 8b 84 24 08 01 00 	mov    0x108(%r12),%rax
   173c2:	00 
   173c3:	a8 02                	test   $0x2,%al
   173c5:	75 24                	jne    173eb <_ZN15crossbeam_queue9seg_queue17SegQueue$LT$T$GT$3pop17h021a539f4a1d2f89E+0x45b>
   173c7:	49 8b 84 24 08 01 00 	mov    0x108(%r12),%rax
   173ce:	00 
   173cf:	90                   	nop
   173d0:	48 89 c1             	mov    %rax,%rcx
   173d3:	48 83 c9 04          	or     $0x4,%rcx
   173d7:	f0 49 0f b1 8c 24 08 	lock cmpxchg %rcx,0x108(%r12)
   173de:	01 00 00 
   173e1:	75 ed                	jne    173d0 <_ZN15crossbeam_queue9seg_queue17SegQueue$LT$T$GT$3pop17h021a539f4a1d2f89E+0x440>
                && slot.state.fetch_or(DESTROY, Ordering::AcqRel) & READ == 0
   173e3:	a8 02                	test   $0x2,%al
            if slot.state.load(Ordering::Acquire) & READ == 0
   173e5:	0f 84 f2 03 00 00    	je     177dd <_ZN15crossbeam_queue9seg_queue17SegQueue$LT$T$GT$3pop17h021a539f4a1d2f89E+0x84d>
   173eb:	49 8b 84 24 20 01 00 	mov    0x120(%r12),%rax
   173f2:	00 
   173f3:	a8 02                	test   $0x2,%al
   173f5:	75 23                	jne    1741a <_ZN15crossbeam_queue9seg_queue17SegQueue$LT$T$GT$3pop17h021a539f4a1d2f89E+0x48a>
   173f7:	49 8b 84 24 20 01 00 	mov    0x120(%r12),%rax
   173fe:	00 
   173ff:	48 89 c1             	mov    %rax,%rcx
   17402:	48 83 c9 04          	or     $0x4,%rcx
   17406:	f0 49 0f b1 8c 24 20 	lock cmpxchg %rcx,0x120(%r12)
   1740d:	01 00 00 
   17410:	75 ed                	jne    173ff <_ZN15crossbeam_queue9seg_queue17SegQueue$LT$T$GT$3pop17h021a539f4a1d2f89E+0x46f>
                && slot.state.fetch_or(DESTROY, Ordering::AcqRel) & READ == 0
   17412:	a8 02                	test   $0x2,%al
            if slot.state.load(Ordering::Acquire) & READ == 0
   17414:	0f 84 c3 03 00 00    	je     177dd <_ZN15crossbeam_queue9seg_queue17SegQueue$LT$T$GT$3pop17h021a539f4a1d2f89E+0x84d>
   1741a:	49 8b 84 24 38 01 00 	mov    0x138(%r12),%rax
   17421:	00 
   17422:	a8 02                	test   $0x2,%al
   17424:	75 23                	jne    17449 <_ZN15crossbeam_queue9seg_queue17SegQueue$LT$T$GT$3pop17h021a539f4a1d2f89E+0x4b9>
   17426:	49 8b 84 24 38 01 00 	mov    0x138(%r12),%rax
   1742d:	00 
   1742e:	48 89 c1             	mov    %rax,%rcx
   17431:	48 83 c9 04          	or     $0x4,%rcx
   17435:	f0 49 0f b1 8c 24 38 	lock cmpxchg %rcx,0x138(%r12)
   1743c:	01 00 00 
   1743f:	75 ed                	jne    1742e <_ZN15crossbeam_queue9seg_queue17SegQueue$LT$T$GT$3pop17h021a539f4a1d2f89E+0x49e>
                && slot.state.fetch_or(DESTROY, Ordering::AcqRel) & READ == 0
   17441:	a8 02                	test   $0x2,%al
            if slot.state.load(Ordering::Acquire) & READ == 0
   17443:	0f 84 94 03 00 00    	je     177dd <_ZN15crossbeam_queue9seg_queue17SegQueue$LT$T$GT$3pop17h021a539f4a1d2f89E+0x84d>
   17449:	49 8b 84 24 50 01 00 	mov    0x150(%r12),%rax
   17450:	00 
   17451:	a8 02                	test   $0x2,%al
   17453:	75 23                	jne    17478 <_ZN15crossbeam_queue9seg_queue17SegQueue$LT$T$GT$3pop17h021a539f4a1d2f89E+0x4e8>
   17455:	49 8b 84 24 50 01 00 	mov    0x150(%r12),%rax
   1745c:	00 
   1745d:	48 89 c1             	mov    %rax,%rcx
   17460:	48 83 c9 04          	or     $0x4,%rcx
   17464:	f0 49 0f b1 8c 24 50 	lock cmpxchg %rcx,0x150(%r12)
   1746b:	01 00 00 
   1746e:	75 ed                	jne    1745d <_ZN15crossbeam_queue9seg_queue17SegQueue$LT$T$GT$3pop17h021a539f4a1d2f89E+0x4cd>
                && slot.state.fetch_or(DESTROY, Ordering::AcqRel) & READ == 0
   17470:	a8 02                	test   $0x2,%al
            if slot.state.load(Ordering::Acquire) & READ == 0
   17472:	0f 84 65 03 00 00    	je     177dd <_ZN15crossbeam_queue9seg_queue17SegQueue$LT$T$GT$3pop17h021a539f4a1d2f89E+0x84d>
   17478:	49 8b 84 24 68 01 00 	mov    0x168(%r12),%rax
   1747f:	00 
   17480:	a8 02                	test   $0x2,%al
   17482:	75 23                	jne    174a7 <_ZN15crossbeam_queue9seg_queue17SegQueue$LT$T$GT$3pop17h021a539f4a1d2f89E+0x517>
   17484:	49 8b 84 24 68 01 00 	mov    0x168(%r12),%rax
   1748b:	00 
   1748c:	48 89 c1             	mov    %rax,%rcx
   1748f:	48 83 c9 04          	or     $0x4,%rcx
   17493:	f0 49 0f b1 8c 24 68 	lock cmpxchg %rcx,0x168(%r12)
   1749a:	01 00 00 
   1749d:	75 ed                	jne    1748c <_ZN15crossbeam_queue9seg_queue17SegQueue$LT$T$GT$3pop17h021a539f4a1d2f89E+0x4fc>
                && slot.state.fetch_or(DESTROY, Ordering::AcqRel) & READ == 0
   1749f:	a8 02                	test   $0x2,%al
            if slot.state.load(Ordering::Acquire) & READ == 0
   174a1:	0f 84 36 03 00 00    	je     177dd <_ZN15crossbeam_queue9seg_queue17SegQueue$LT$T$GT$3pop17h021a539f4a1d2f89E+0x84d>
   174a7:	49 8b 84 24 80 01 00 	mov    0x180(%r12),%rax
   174ae:	00 
   174af:	a8 02                	test   $0x2,%al
   174b1:	75 23                	jne    174d6 <_ZN15crossbeam_queue9seg_queue17SegQueue$LT$T$GT$3pop17h021a539f4a1d2f89E+0x546>
   174b3:	49 8b 84 24 80 01 00 	mov    0x180(%r12),%rax
   174ba:	00 
   174bb:	48 89 c1             	mov    %rax,%rcx
   174be:	48 83 c9 04          	or     $0x4,%rcx
   174c2:	f0 49 0f b1 8c 24 80 	lock cmpxchg %rcx,0x180(%r12)
   174c9:	01 00 00 
   174cc:	75 ed                	jne    174bb <_ZN15crossbeam_queue9seg_queue17SegQueue$LT$T$GT$3pop17h021a539f4a1d2f89E+0x52b>
                && slot.state.fetch_or(DESTROY, Ordering::AcqRel) & READ == 0
   174ce:	a8 02                	test   $0x2,%al
            if slot.state.load(Ordering::Acquire) & READ == 0
   174d0:	0f 84 07 03 00 00    	je     177dd <_ZN15crossbeam_queue9seg_queue17SegQueue$LT$T$GT$3pop17h021a539f4a1d2f89E+0x84d>
   174d6:	49 8b 84 24 98 01 00 	mov    0x198(%r12),%rax
   174dd:	00 
   174de:	a8 02                	test   $0x2,%al
   174e0:	75 23                	jne    17505 <_ZN15crossbeam_queue9seg_queue17SegQueue$LT$T$GT$3pop17h021a539f4a1d2f89E+0x575>
   174e2:	49 8b 84 24 98 01 00 	mov    0x198(%r12),%rax
   174e9:	00 
   174ea:	48 89 c1             	mov    %rax,%rcx
   174ed:	48 83 c9 04          	or     $0x4,%rcx
   174f1:	f0 49 0f b1 8c 24 98 	lock cmpxchg %rcx,0x198(%r12)
   174f8:	01 00 00 
   174fb:	75 ed                	jne    174ea <_ZN15crossbeam_queue9seg_queue17SegQueue$LT$T$GT$3pop17h021a539f4a1d2f89E+0x55a>
                && slot.state.fetch_or(DESTROY, Ordering::AcqRel) & READ == 0
   174fd:	a8 02                	test   $0x2,%al
            if slot.state.load(Ordering::Acquire) & READ == 0
   174ff:	0f 84 d8 02 00 00    	je     177dd <_ZN15crossbeam_queue9seg_queue17SegQueue$LT$T$GT$3pop17h021a539f4a1d2f89E+0x84d>
   17505:	49 8b 84 24 b0 01 00 	mov    0x1b0(%r12),%rax
   1750c:	00 
   1750d:	a8 02                	test   $0x2,%al
   1750f:	75 23                	jne    17534 <_ZN15crossbeam_queue9seg_queue17SegQueue$LT$T$GT$3pop17h021a539f4a1d2f89E+0x5a4>
   17511:	49 8b 84 24 b0 01 00 	mov    0x1b0(%r12),%rax
   17518:	00 
   17519:	48 89 c1             	mov    %rax,%rcx
   1751c:	48 83 c9 04          	or     $0x4,%rcx
   17520:	f0 49 0f b1 8c 24 b0 	lock cmpxchg %rcx,0x1b0(%r12)
   17527:	01 00 00 
   1752a:	75 ed                	jne    17519 <_ZN15crossbeam_queue9seg_queue17SegQueue$LT$T$GT$3pop17h021a539f4a1d2f89E+0x589>
                && slot.state.fetch_or(DESTROY, Ordering::AcqRel) & READ == 0
   1752c:	a8 02                	test   $0x2,%al
            if slot.state.load(Ordering::Acquire) & READ == 0
   1752e:	0f 84 a9 02 00 00    	je     177dd <_ZN15crossbeam_queue9seg_queue17SegQueue$LT$T$GT$3pop17h021a539f4a1d2f89E+0x84d>
   17534:	49 8b 84 24 c8 01 00 	mov    0x1c8(%r12),%rax
   1753b:	00 
   1753c:	a8 02                	test   $0x2,%al
   1753e:	75 23                	jne    17563 <_ZN15crossbeam_queue9seg_queue17SegQueue$LT$T$GT$3pop17h021a539f4a1d2f89E+0x5d3>
   17540:	49 8b 84 24 c8 01 00 	mov    0x1c8(%r12),%rax
   17547:	00 
   17548:	48 89 c1             	mov    %rax,%rcx
   1754b:	48 83 c9 04          	or     $0x4,%rcx
   1754f:	f0 49 0f b1 8c 24 c8 	lock cmpxchg %rcx,0x1c8(%r12)
   17556:	01 00 00 
   17559:	75 ed                	jne    17548 <_ZN15crossbeam_queue9seg_queue17SegQueue$LT$T$GT$3pop17h021a539f4a1d2f89E+0x5b8>
                && slot.state.fetch_or(DESTROY, Ordering::AcqRel) & READ == 0
   1755b:	a8 02                	test   $0x2,%al
            if slot.state.load(Ordering::Acquire) & READ == 0
   1755d:	0f 84 7a 02 00 00    	je     177dd <_ZN15crossbeam_queue9seg_queue17SegQueue$LT$T$GT$3pop17h021a539f4a1d2f89E+0x84d>
   17563:	49 8b 84 24 e0 01 00 	mov    0x1e0(%r12),%rax
   1756a:	00 
   1756b:	a8 02                	test   $0x2,%al
   1756d:	75 23                	jne    17592 <_ZN15crossbeam_queue9seg_queue17SegQueue$LT$T$GT$3pop17h021a539f4a1d2f89E+0x602>
   1756f:	49 8b 84 24 e0 01 00 	mov    0x1e0(%r12),%rax
   17576:	00 
   17577:	48 89 c1             	mov    %rax,%rcx
   1757a:	48 83 c9 04          	or     $0x4,%rcx
   1757e:	f0 49 0f b1 8c 24 e0 	lock cmpxchg %rcx,0x1e0(%r12)
   17585:	01 00 00 
   17588:	75 ed                	jne    17577 <_ZN15crossbeam_queue9seg_queue17SegQueue$LT$T$GT$3pop17h021a539f4a1d2f89E+0x5e7>
                && slot.state.fetch_or(DESTROY, Ordering::AcqRel) & READ == 0
   1758a:	a8 02                	test   $0x2,%al
            if slot.state.load(Ordering::Acquire) & READ == 0
   1758c:	0f 84 4b 02 00 00    	je     177dd <_ZN15crossbeam_queue9seg_queue17SegQueue$LT$T$GT$3pop17h021a539f4a1d2f89E+0x84d>
   17592:	49 8b 84 24 f8 01 00 	mov    0x1f8(%r12),%rax
   17599:	00 
   1759a:	a8 02                	test   $0x2,%al
   1759c:	75 23                	jne    175c1 <_ZN15crossbeam_queue9seg_queue17SegQueue$LT$T$GT$3pop17h021a539f4a1d2f89E+0x631>
   1759e:	49 8b 84 24 f8 01 00 	mov    0x1f8(%r12),%rax
   175a5:	00 
   175a6:	48 89 c1             	mov    %rax,%rcx
   175a9:	48 83 c9 04          	or     $0x4,%rcx
   175ad:	f0 49 0f b1 8c 24 f8 	lock cmpxchg %rcx,0x1f8(%r12)
   175b4:	01 00 00 
   175b7:	75 ed                	jne    175a6 <_ZN15crossbeam_queue9seg_queue17SegQueue$LT$T$GT$3pop17h021a539f4a1d2f89E+0x616>
                && slot.state.fetch_or(DESTROY, Ordering::AcqRel) & READ == 0
   175b9:	a8 02                	test   $0x2,%al
            if slot.state.load(Ordering::Acquire) & READ == 0
   175bb:	0f 84 1c 02 00 00    	je     177dd <_ZN15crossbeam_queue9seg_queue17SegQueue$LT$T$GT$3pop17h021a539f4a1d2f89E+0x84d>
   175c1:	49 8b 84 24 10 02 00 	mov    0x210(%r12),%rax
   175c8:	00 
   175c9:	a8 02                	test   $0x2,%al
   175cb:	75 23                	jne    175f0 <_ZN15crossbeam_queue9seg_queue17SegQueue$LT$T$GT$3pop17h021a539f4a1d2f89E+0x660>
   175cd:	49 8b 84 24 10 02 00 	mov    0x210(%r12),%rax
   175d4:	00 
   175d5:	48 89 c1             	mov    %rax,%rcx
   175d8:	48 83 c9 04          	or     $0x4,%rcx
   175dc:	f0 49 0f b1 8c 24 10 	lock cmpxchg %rcx,0x210(%r12)
   175e3:	02 00 00 
   175e6:	75 ed                	jne    175d5 <_ZN15crossbeam_queue9seg_queue17SegQueue$LT$T$GT$3pop17h021a539f4a1d2f89E+0x645>
                && slot.state.fetch_or(DESTROY, Ordering::AcqRel) & READ == 0
   175e8:	a8 02                	test   $0x2,%al
            if slot.state.load(Ordering::Acquire) & READ == 0
   175ea:	0f 84 ed 01 00 00    	je     177dd <_ZN15crossbeam_queue9seg_queue17SegQueue$LT$T$GT$3pop17h021a539f4a1d2f89E+0x84d>
   175f0:	49 8b 84 24 28 02 00 	mov    0x228(%r12),%rax
   175f7:	00 
   175f8:	a8 02                	test   $0x2,%al
   175fa:	75 23                	jne    1761f <_ZN15crossbeam_queue9seg_queue17SegQueue$LT$T$GT$3pop17h021a539f4a1d2f89E+0x68f>
   175fc:	49 8b 84 24 28 02 00 	mov    0x228(%r12),%rax
   17603:	00 
   17604:	48 89 c1             	mov    %rax,%rcx
   17607:	48 83 c9 04          	or     $0x4,%rcx
   1760b:	f0 49 0f b1 8c 24 28 	lock cmpxchg %rcx,0x228(%r12)
   17612:	02 00 00 
   17615:	75 ed                	jne    17604 <_ZN15crossbeam_queue9seg_queue17SegQueue$LT$T$GT$3pop17h021a539f4a1d2f89E+0x674>
                && slot.state.fetch_or(DESTROY, Ordering::AcqRel) & READ == 0
   17617:	a8 02                	test   $0x2,%al
            if slot.state.load(Ordering::Acquire) & READ == 0
   17619:	0f 84 be 01 00 00    	je     177dd <_ZN15crossbeam_queue9seg_queue17SegQueue$LT$T$GT$3pop17h021a539f4a1d2f89E+0x84d>
   1761f:	49 8b 84 24 40 02 00 	mov    0x240(%r12),%rax
   17626:	00 
   17627:	a8 02                	test   $0x2,%al
   17629:	75 23                	jne    1764e <_ZN15crossbeam_queue9seg_queue17SegQueue$LT$T$GT$3pop17h021a539f4a1d2f89E+0x6be>
   1762b:	49 8b 84 24 40 02 00 	mov    0x240(%r12),%rax
   17632:	00 
   17633:	48 89 c1             	mov    %rax,%rcx
   17636:	48 83 c9 04          	or     $0x4,%rcx
   1763a:	f0 49 0f b1 8c 24 40 	lock cmpxchg %rcx,0x240(%r12)
   17641:	02 00 00 
   17644:	75 ed                	jne    17633 <_ZN15crossbeam_queue9seg_queue17SegQueue$LT$T$GT$3pop17h021a539f4a1d2f89E+0x6a3>
                && slot.state.fetch_or(DESTROY, Ordering::AcqRel) & READ == 0
   17646:	a8 02                	test   $0x2,%al
            if slot.state.load(Ordering::Acquire) & READ == 0
   17648:	0f 84 8f 01 00 00    	je     177dd <_ZN15crossbeam_queue9seg_queue17SegQueue$LT$T$GT$3pop17h021a539f4a1d2f89E+0x84d>
   1764e:	49 8b 84 24 58 02 00 	mov    0x258(%r12),%rax
   17655:	00 
   17656:	a8 02                	test   $0x2,%al
   17658:	75 23                	jne    1767d <_ZN15crossbeam_queue9seg_queue17SegQueue$LT$T$GT$3pop17h021a539f4a1d2f89E+0x6ed>
   1765a:	49 8b 84 24 58 02 00 	mov    0x258(%r12),%rax
   17661:	00 
   17662:	48 89 c1             	mov    %rax,%rcx
   17665:	48 83 c9 04          	or     $0x4,%rcx
   17669:	f0 49 0f b1 8c 24 58 	lock cmpxchg %rcx,0x258(%r12)
   17670:	02 00 00 
   17673:	75 ed                	jne    17662 <_ZN15crossbeam_queue9seg_queue17SegQueue$LT$T$GT$3pop17h021a539f4a1d2f89E+0x6d2>
                && slot.state.fetch_or(DESTROY, Ordering::AcqRel) & READ == 0
   17675:	a8 02                	test   $0x2,%al
            if slot.state.load(Ordering::Acquire) & READ == 0
   17677:	0f 84 60 01 00 00    	je     177dd <_ZN15crossbeam_queue9seg_queue17SegQueue$LT$T$GT$3pop17h021a539f4a1d2f89E+0x84d>
   1767d:	49 8b 84 24 70 02 00 	mov    0x270(%r12),%rax
   17684:	00 
   17685:	a8 02                	test   $0x2,%al
   17687:	75 23                	jne    176ac <_ZN15crossbeam_queue9seg_queue17SegQueue$LT$T$GT$3pop17h021a539f4a1d2f89E+0x71c>
   17689:	49 8b 84 24 70 02 00 	mov    0x270(%r12),%rax
   17690:	00 
   17691:	48 89 c1             	mov    %rax,%rcx
   17694:	48 83 c9 04          	or     $0x4,%rcx
   17698:	f0 49 0f b1 8c 24 70 	lock cmpxchg %rcx,0x270(%r12)
   1769f:	02 00 00 
   176a2:	75 ed                	jne    17691 <_ZN15crossbeam_queue9seg_queue17SegQueue$LT$T$GT$3pop17h021a539f4a1d2f89E+0x701>
                && slot.state.fetch_or(DESTROY, Ordering::AcqRel) & READ == 0
   176a4:	a8 02                	test   $0x2,%al
            if slot.state.load(Ordering::Acquire) & READ == 0
   176a6:	0f 84 31 01 00 00    	je     177dd <_ZN15crossbeam_queue9seg_queue17SegQueue$LT$T$GT$3pop17h021a539f4a1d2f89E+0x84d>
   176ac:	49 8b 84 24 88 02 00 	mov    0x288(%r12),%rax
   176b3:	00 
   176b4:	a8 02                	test   $0x2,%al
   176b6:	75 23                	jne    176db <_ZN15crossbeam_queue9seg_queue17SegQueue$LT$T$GT$3pop17h021a539f4a1d2f89E+0x74b>
   176b8:	49 8b 84 24 88 02 00 	mov    0x288(%r12),%rax
   176bf:	00 
   176c0:	48 89 c1             	mov    %rax,%rcx
   176c3:	48 83 c9 04          	or     $0x4,%rcx
   176c7:	f0 49 0f b1 8c 24 88 	lock cmpxchg %rcx,0x288(%r12)
   176ce:	02 00 00 
   176d1:	75 ed                	jne    176c0 <_ZN15crossbeam_queue9seg_queue17SegQueue$LT$T$GT$3pop17h021a539f4a1d2f89E+0x730>
                && slot.state.fetch_or(DESTROY, Ordering::AcqRel) & READ == 0
   176d3:	a8 02                	test   $0x2,%al
            if slot.state.load(Ordering::Acquire) & READ == 0
   176d5:	0f 84 02 01 00 00    	je     177dd <_ZN15crossbeam_queue9seg_queue17SegQueue$LT$T$GT$3pop17h021a539f4a1d2f89E+0x84d>
   176db:	49 8b 84 24 a0 02 00 	mov    0x2a0(%r12),%rax
   176e2:	00 
   176e3:	a8 02                	test   $0x2,%al
   176e5:	75 23                	jne    1770a <_ZN15crossbeam_queue9seg_queue17SegQueue$LT$T$GT$3pop17h021a539f4a1d2f89E+0x77a>
   176e7:	49 8b 84 24 a0 02 00 	mov    0x2a0(%r12),%rax
   176ee:	00 
   176ef:	48 89 c1             	mov    %rax,%rcx
   176f2:	48 83 c9 04          	or     $0x4,%rcx
   176f6:	f0 49 0f b1 8c 24 a0 	lock cmpxchg %rcx,0x2a0(%r12)
   176fd:	02 00 00 
   17700:	75 ed                	jne    176ef <_ZN15crossbeam_queue9seg_queue17SegQueue$LT$T$GT$3pop17h021a539f4a1d2f89E+0x75f>
                && slot.state.fetch_or(DESTROY, Ordering::AcqRel) & READ == 0
   17702:	a8 02                	test   $0x2,%al
            if slot.state.load(Ordering::Acquire) & READ == 0
   17704:	0f 84 d3 00 00 00    	je     177dd <_ZN15crossbeam_queue9seg_queue17SegQueue$LT$T$GT$3pop17h021a539f4a1d2f89E+0x84d>
   1770a:	49 8b 84 24 b8 02 00 	mov    0x2b8(%r12),%rax
   17711:	00 
   17712:	a8 02                	test   $0x2,%al
   17714:	75 23                	jne    17739 <_ZN15crossbeam_queue9seg_queue17SegQueue$LT$T$GT$3pop17h021a539f4a1d2f89E+0x7a9>
   17716:	49 8b 84 24 b8 02 00 	mov    0x2b8(%r12),%rax
   1771d:	00 
   1771e:	48 89 c1             	mov    %rax,%rcx
   17721:	48 83 c9 04          	or     $0x4,%rcx
   17725:	f0 49 0f b1 8c 24 b8 	lock cmpxchg %rcx,0x2b8(%r12)
   1772c:	02 00 00 
   1772f:	75 ed                	jne    1771e <_ZN15crossbeam_queue9seg_queue17SegQueue$LT$T$GT$3pop17h021a539f4a1d2f89E+0x78e>
                && slot.state.fetch_or(DESTROY, Ordering::AcqRel) & READ == 0
   17731:	a8 02                	test   $0x2,%al
            if slot.state.load(Ordering::Acquire) & READ == 0
   17733:	0f 84 a4 00 00 00    	je     177dd <_ZN15crossbeam_queue9seg_queue17SegQueue$LT$T$GT$3pop17h021a539f4a1d2f89E+0x84d>
   17739:	49 8b 84 24 d0 02 00 	mov    0x2d0(%r12),%rax
   17740:	00 
   17741:	a8 02                	test   $0x2,%al
   17743:	0f 85 8b 00 00 00    	jne    177d4 <_ZN15crossbeam_queue9seg_queue17SegQueue$LT$T$GT$3pop17h021a539f4a1d2f89E+0x844>
   17749:	49 8b 84 24 d0 02 00 	mov    0x2d0(%r12),%rax
   17750:	00 
   17751:	48 89 c1             	mov    %rax,%rcx
   17754:	48 83 c9 04          	or     $0x4,%rcx
   17758:	f0 49 0f b1 8c 24 d0 	lock cmpxchg %rcx,0x2d0(%r12)
   1775f:	02 00 00 
   17762:	75 ed                	jne    17751 <_ZN15crossbeam_queue9seg_queue17SegQueue$LT$T$GT$3pop17h021a539f4a1d2f89E+0x7c1>
                && slot.state.fetch_or(DESTROY, Ordering::AcqRel) & READ == 0
   17764:	a8 02                	test   $0x2,%al
   17766:	75 6c                	jne    177d4 <_ZN15crossbeam_queue9seg_queue17SegQueue$LT$T$GT$3pop17h021a539f4a1d2f89E+0x844>
   17768:	eb 73                	jmp    177dd <_ZN15crossbeam_queue9seg_queue17SegQueue$LT$T$GT$3pop17h021a539f4a1d2f89E+0x84d>
   1776a:	48 8b 43 10          	mov    0x10(%rbx),%rax
   1776e:	66 90                	xchg   %ax,%ax
   17770:	48 89 c1             	mov    %rax,%rcx
   17773:	48 83 c9 02          	or     $0x2,%rcx
   17777:	f0 48 0f b1 4b 10    	lock cmpxchg %rcx,0x10(%rbx)
   1777d:	75 f1                	jne    17770 <_ZN15crossbeam_queue9seg_queue17SegQueue$LT$T$GT$3pop17h021a539f4a1d2f89E+0x7e0>
                        Block::destroy(block, 0);
                    } else if slot.state.fetch_or(READ, Ordering::AcqRel) & DESTROY != 0 {
   1777f:	a8 04                	test   $0x4,%al
   17781:	74 5a                	je     177dd <_ZN15crossbeam_queue9seg_queue17SegQueue$LT$T$GT$3pop17h021a539f4a1d2f89E+0x84d>
   17783:	49 83 fd 1d          	cmp    $0x1d,%r13
   17787:	76 10                	jbe    17799 <_ZN15crossbeam_queue9seg_queue17SegQueue$LT$T$GT$3pop17h021a539f4a1d2f89E+0x809>
   17789:	eb 49                	jmp    177d4 <_ZN15crossbeam_queue9seg_queue17SegQueue$LT$T$GT$3pop17h021a539f4a1d2f89E+0x844>
   1778b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   17790:	49 ff c5             	inc    %r13
   17793:	49 83 fd 1e          	cmp    $0x1e,%r13
   17797:	74 3b                	je     177d4 <_ZN15crossbeam_queue9seg_queue17SegQueue$LT$T$GT$3pop17h021a539f4a1d2f89E+0x844>
   17799:	4a 8d 04 6d 00 00 00 	lea    0x0(,%r13,2),%rax
   177a0:	00 
   177a1:	4c 01 e8             	add    %r13,%rax
   177a4:	49 8b 4c c4 18       	mov    0x18(%r12,%rax,8),%rcx
            if slot.state.load(Ordering::Acquire) & READ == 0
   177a9:	f6 c1 02             	test   $0x2,%cl
   177ac:	75 e2                	jne    17790 <_ZN15crossbeam_queue9seg_queue17SegQueue$LT$T$GT$3pop17h021a539f4a1d2f89E+0x800>
   177ae:	49 8d 0c c4          	lea    (%r12,%rax,8),%rcx
   177b2:	48 83 c1 18          	add    $0x18,%rcx
   177b6:	48 8b 01             	mov    (%rcx),%rax
   177b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   177c0:	48 89 c2             	mov    %rax,%rdx
   177c3:	48 83 ca 04          	or     $0x4,%rdx
   177c7:	f0 48 0f b1 11       	lock cmpxchg %rdx,(%rcx)
   177cc:	75 f2                	jne    177c0 <_ZN15crossbeam_queue9seg_queue17SegQueue$LT$T$GT$3pop17h021a539f4a1d2f89E+0x830>
                && slot.state.fetch_or(DESTROY, Ordering::AcqRel) & READ == 0
   177ce:	a8 02                	test   $0x2,%al
            if slot.state.load(Ordering::Acquire) & READ == 0
   177d0:	75 be                	jne    17790 <_ZN15crossbeam_queue9seg_queue17SegQueue$LT$T$GT$3pop17h021a539f4a1d2f89E+0x800>
   177d2:	eb 09                	jmp    177dd <_ZN15crossbeam_queue9seg_queue17SegQueue$LT$T$GT$3pop17h021a539f4a1d2f89E+0x84d>
   177d4:	4c 89 e7             	mov    %r12,%rdi
   177d7:	ff 15 9b 05 23 00    	callq  *0x23059b(%rip)        # 247d78 <free@GLIBC_2.2.5>
                    block = self.head.block.load(Ordering::Acquire);
                    backoff.spin();
                }
            }
        }
    }
   177dd:	4c 89 f8             	mov    %r15,%rax
   177e0:	48 89 ea             	mov    %rbp,%rdx
   177e3:	48 83 c4 08          	add    $0x8,%rsp
   177e7:	5b                   	pop    %rbx
   177e8:	41 5c                	pop    %r12
   177ea:	41 5d                	pop    %r13
   177ec:	41 5e                	pop    %r14
   177ee:	41 5f                	pop    %r15
   177f0:	5d                   	pop    %rbp
   177f1:	c3                   	retq   
   177f2:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   177f9:	00 00 00 
   177fc:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000017800 <_ZN4core3ptr13drop_in_place17h5f042288d0ed39feE>:
   17800:	48 8b 3f             	mov    (%rdi),%rdi
   17803:	48 85 ff             	test   %rdi,%rdi
   17806:	74 06                	je     1780e <_ZN4core3ptr13drop_in_place17h5f042288d0ed39feE+0xe>
   17808:	ff 25 6a 05 23 00    	jmpq   *0x23056a(%rip)        # 247d78 <free@GLIBC_2.2.5>
   1780e:	c3                   	retq   
   1780f:	90                   	nop

0000000000017810 <_ZN10rayon_core4join23join_recover_from_panic17ha9b7937957cd79f2E>:

/// If job A panics, we still cannot return until we are sure that job
/// B is complete. This is because it may contain references into the
/// enclosing stack frame(s).
#[cold] // cold path
unsafe fn join_recover_from_panic(
   17810:	53                   	push   %rbx
   17811:	48 83 ec 10          	sub    $0x10,%rsp
   17815:	48 89 14 24          	mov    %rdx,(%rsp)
   17819:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
   1781e:	8a 06                	mov    (%rsi),%al
   17820:	84 c0                	test   %al,%al
        if !latch.probe() {
   17822:	75 05                	jne    17829 <_ZN10rayon_core4join23join_recover_from_panic17ha9b7937957cd79f2E+0x19>
            self.wait_until_cold(latch);
   17824:	e8 27 00 00 00       	callq  17850 <_ZN10rayon_core8registry12WorkerThread15wait_until_cold17ha3325bd42a997705E>
    worker_thread: &WorkerThread,
    job_b_latch: &SpinLatch,
    err: Box<dyn Any + Send>,
) -> ! {
    worker_thread.wait_until(job_b_latch);
    unwind::resume_unwinding(err)
   17829:	48 8b 3c 24          	mov    (%rsp),%rdi
   1782d:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
   17832:	e8 f9 02 00 00       	callq  17b30 <_ZN10rayon_core6unwind16resume_unwinding17h10c44a275a145090E>
   17837:	0f 0b                	ud2    
   17839:	48 89 c3             	mov    %rax,%rbx
   1783c:	48 89 e7             	mov    %rsp,%rdi
}
   1783f:	e8 3c dd ff ff       	callq  15580 <_ZN4core3ptr13drop_in_place17h3afc1bf79a8187c4E>
   17844:	48 89 df             	mov    %rbx,%rdi
   17847:	e8 54 c8 fe ff       	callq  40a0 <_Unwind_Resume@plt>
   1784c:	0f 0b                	ud2    
   1784e:	66 90                	xchg   %ax,%ax

0000000000017850 <_ZN10rayon_core8registry12WorkerThread15wait_until_cold17ha3325bd42a997705E>:
    unsafe fn wait_until_cold<L: LatchProbe + ?Sized>(&self, latch: &L) {
   17850:	55                   	push   %rbp
   17851:	41 57                	push   %r15
   17853:	41 56                	push   %r14
   17855:	41 55                	push   %r13
   17857:	41 54                	push   %r12
   17859:	53                   	push   %rbx
   1785a:	48 83 ec 58          	sub    $0x58,%rsp
   1785e:	8a 06                	mov    (%rsi),%al
   17860:	84 c0                	test   %al,%al
        while !latch.probe() {
   17862:	0f 85 a6 02 00 00    	jne    17b0e <_ZN10rayon_core8registry12WorkerThread15wait_until_cold17ha3325bd42a997705E+0x2be>
   17868:	49 89 f6             	mov    %rsi,%r14
   1786b:	48 89 fb             	mov    %rdi,%rbx
   1786e:	41 bc 98 01 00 00    	mov    $0x198,%r12d
   17874:	45 31 ed             	xor    %r13d,%r13d
   17877:	eb 15                	jmp    1788e <_ZN10rayon_core8registry12WorkerThread15wait_until_cold17ha3325bd42a997705E+0x3e>
   17879:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   17880:	45 31 ed             	xor    %r13d,%r13d
   17883:	41 8a 06             	mov    (%r14),%al
   17886:	84 c0                	test   %al,%al
   17888:	0f 85 61 02 00 00    	jne    17aef <_ZN10rayon_core8registry12WorkerThread15wait_until_cold17ha3325bd42a997705E+0x29f>
            if let Some(job) = self
   1788e:	48 89 df             	mov    %rbx,%rdi
   17891:	e8 ba 02 00 00       	callq  17b50 <_ZN10rayon_core8registry12WorkerThread14take_local_job17h6acdab09e45847e8E.218>
   17896:	49 89 d7             	mov    %rdx,%r15
   17899:	48 85 d2             	test   %rdx,%rdx
   1789c:	74 12                	je     178b0 <_ZN10rayon_core8registry12WorkerThread15wait_until_cold17ha3325bd42a997705E+0x60>
   1789e:	48 89 c5             	mov    %rax,%rbp
        if yields > ROUNDS_UNTIL_SLEEPY {
   178a1:	49 83 fd 21          	cmp    $0x21,%r13
   178a5:	0f 83 cb 00 00 00    	jae    17976 <_ZN10rayon_core8registry12WorkerThread15wait_until_cold17ha3325bd42a997705E+0x126>
   178ab:	e9 40 01 00 00       	jmpq   179f0 <_ZN10rayon_core8registry12WorkerThread15wait_until_cold17ha3325bd42a997705E+0x1a0>
   178b0:	48 89 5c 24 08       	mov    %rbx,0x8(%rsp)
        let num_threads = self.registry.thread_infos.len();
   178b5:	48 8b bb 30 01 00 00 	mov    0x130(%rbx),%rdi
   178bc:	48 8b 8f 90 01 00 00 	mov    0x190(%rdi),%rcx
        if num_threads <= 1 {
   178c3:	48 83 f9 01          	cmp    $0x1,%rcx
   178c7:	0f 86 fe 00 00 00    	jbe    179cb <_ZN10rayon_core8registry12WorkerThread15wait_until_cold17ha3325bd42a997705E+0x17b>
        let mut x = self.state.get();
   178cd:	48 8b 83 28 01 00 00 	mov    0x128(%rbx),%rax
        x ^= x >> 12;
   178d4:	48 89 c2             	mov    %rax,%rdx
   178d7:	48 c1 ea 0c          	shr    $0xc,%rdx
   178db:	48 31 c2             	xor    %rax,%rdx
        x ^= x << 25;
   178de:	48 89 d6             	mov    %rdx,%rsi
   178e1:	48 c1 e6 19          	shl    $0x19,%rsi
   178e5:	48 31 d6             	xor    %rdx,%rsi
        x ^= x >> 27;
   178e8:	48 89 f0             	mov    %rsi,%rax
   178eb:	48 c1 e8 1b          	shr    $0x1b,%rax
   178ef:	48 31 f0             	xor    %rsi,%rax
   178f2:	48 89 83 28 01 00 00 	mov    %rax,0x128(%rbx)
   178f9:	48 ba 1d dd 6c 4f 91 	movabs $0x2545f4914f6cdd1d,%rdx
   17900:	f4 45 25 
   17903:	48 0f af c2          	imul   %rdx,%rax
        (self.next() % n as u64) as usize
   17907:	31 d2                	xor    %edx,%edx
   17909:	48 f7 f1             	div    %rcx
   1790c:	48 89 54 24 20       	mov    %rdx,0x20(%rsp)
   17911:	48 89 4c 24 28       	mov    %rcx,0x28(%rsp)
   17916:	48 c7 44 24 30 00 00 	movq   $0x0,0x30(%rsp)
   1791d:	00 00 
   1791f:	48 89 54 24 38       	mov    %rdx,0x38(%rsp)
   17924:	c6 44 24 40 00       	movb   $0x0,0x40(%rsp)
   17929:	48 8d 44 24 08       	lea    0x8(%rsp),%rax
   1792e:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
   17933:	48 89 44 24 50       	mov    %rax,0x50(%rsp)
   17938:	48 8d 44 24 48       	lea    0x48(%rsp),%rax
   1793d:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   17942:	48 8d 44 24 50       	lea    0x50(%rsp),%rax
   17947:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   1794c:	48 8d 7c 24 20       	lea    0x20(%rsp),%rdi
   17951:	48 8d 74 24 10       	lea    0x10(%rsp),%rsi
   17956:	e8 65 03 00 00       	callq  17cc0 <_ZN4core4iter6traits8iterator8Iterator8try_fold17he2a1a93294a82a2eE>
   1795b:	49 89 d7             	mov    %rdx,%r15
   1795e:	48 85 d2             	test   %rdx,%rdx
   17961:	74 2c                	je     1798f <_ZN10rayon_core8registry12WorkerThread15wait_until_cold17ha3325bd42a997705E+0x13f>
   17963:	48 89 c5             	mov    %rax,%rbp
   17966:	4d 85 ff             	test   %r15,%r15
   17969:	74 59                	je     179c4 <_ZN10rayon_core8registry12WorkerThread15wait_until_cold17ha3325bd42a997705E+0x174>
   1796b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   17970:	49 83 fd 21          	cmp    $0x21,%r13
   17974:	72 7a                	jb     179f0 <_ZN10rayon_core8registry12WorkerThread15wait_until_cold17ha3325bd42a997705E+0x1a0>
   17976:	48 8b bb 30 01 00 00 	mov    0x130(%rbx),%rdi
   1797d:	4c 01 e7             	add    %r12,%rdi
   17980:	48 8b 07             	mov    (%rdi),%rax
        if old_state != AWAKE {
   17983:	48 85 c0             	test   %rax,%rax
   17986:	74 68                	je     179f0 <_ZN10rayon_core8registry12WorkerThread15wait_until_cold17ha3325bd42a997705E+0x1a0>
            self.tickle_cold(worker_index);
   17988:	e8 e3 06 00 00       	callq  18070 <_ZN10rayon_core5sleep5Sleep11tickle_cold17h334403ad3bddecd8E>
   1798d:	eb 61                	jmp    179f0 <_ZN10rayon_core8registry12WorkerThread15wait_until_cold17ha3325bd42a997705E+0x1a0>
   1798f:	8a 44 24 40          	mov    0x40(%rsp),%al
   17993:	84 c0                	test   %al,%al
   17995:	74 0e                	je     179a5 <_ZN10rayon_core8registry12WorkerThread15wait_until_cold17ha3325bd42a997705E+0x155>
   17997:	3c 02                	cmp    $0x2,%al
   17999:	74 0f                	je     179aa <_ZN10rayon_core8registry12WorkerThread15wait_until_cold17ha3325bd42a997705E+0x15a>
   1799b:	45 31 ff             	xor    %r15d,%r15d
   1799e:	4d 85 ff             	test   %r15,%r15
   179a1:	75 cd                	jne    17970 <_ZN10rayon_core8registry12WorkerThread15wait_until_cold17ha3325bd42a997705E+0x120>
   179a3:	eb 1f                	jmp    179c4 <_ZN10rayon_core8registry12WorkerThread15wait_until_cold17ha3325bd42a997705E+0x174>
   179a5:	c6 44 24 40 02       	movb   $0x2,0x40(%rsp)
   179aa:	48 8d 7c 24 30       	lea    0x30(%rsp),%rdi
   179af:	48 8d 74 24 10       	lea    0x10(%rsp),%rsi
   179b4:	e8 07 03 00 00       	callq  17cc0 <_ZN4core4iter6traits8iterator8Iterator8try_fold17he2a1a93294a82a2eE>
   179b9:	48 89 c5             	mov    %rax,%rbp
   179bc:	49 89 d7             	mov    %rdx,%r15
   179bf:	4d 85 ff             	test   %r15,%r15
   179c2:	75 ac                	jne    17970 <_ZN10rayon_core8registry12WorkerThread15wait_until_cold17ha3325bd42a997705E+0x120>
                .or_else(|| self.registry.pop_injected_job(self.index))
   179c4:	48 8b bb 30 01 00 00 	mov    0x130(%rbx),%rdi
   179cb:	48 83 ef 80          	sub    $0xffffffffffffff80,%rdi
        let job = self.injected_jobs.pop().ok();
   179cf:	e8 bc f5 ff ff       	callq  16f90 <_ZN15crossbeam_queue9seg_queue17SegQueue$LT$T$GT$3pop17h021a539f4a1d2f89E>
            if let Some(job) = self
   179d4:	48 85 d2             	test   %rdx,%rdx
   179d7:	74 53                	je     17a2c <_ZN10rayon_core8registry12WorkerThread15wait_until_cold17ha3325bd42a997705E+0x1dc>
   179d9:	48 89 c5             	mov    %rax,%rbp
   179dc:	49 89 d7             	mov    %rdx,%r15
        if yields > ROUNDS_UNTIL_SLEEPY {
   179df:	49 83 fd 21          	cmp    $0x21,%r13
   179e3:	73 91                	jae    17976 <_ZN10rayon_core8registry12WorkerThread15wait_until_cold17ha3325bd42a997705E+0x126>
   179e5:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   179ec:	00 00 00 
   179ef:	90                   	nop
        (self.execute_fn)(self.pointer)
   179f0:	48 89 ef             	mov    %rbp,%rdi
   179f3:	41 ff d7             	callq  *%r15
        self.registry.sleep.tickle(self.index);
   179f6:	48 8b bb 30 01 00 00 	mov    0x130(%rbx),%rdi
   179fd:	48 8b 87 98 01 00 00 	mov    0x198(%rdi),%rax
        if old_state != AWAKE {
   17a04:	48 85 c0             	test   %rax,%rax
   17a07:	0f 84 73 fe ff ff    	je     17880 <_ZN10rayon_core8registry12WorkerThread15wait_until_cold17ha3325bd42a997705E+0x30>
   17a0d:	48 81 c7 98 01 00 00 	add    $0x198,%rdi
            self.tickle_cold(worker_index);
   17a14:	e8 57 06 00 00       	callq  18070 <_ZN10rayon_core5sleep5Sleep11tickle_cold17h334403ad3bddecd8E>
   17a19:	45 31 ed             	xor    %r13d,%r13d
   17a1c:	41 8a 06             	mov    (%r14),%al
   17a1f:	84 c0                	test   %al,%al
        while !latch.probe() {
   17a21:	0f 84 67 fe ff ff    	je     1788e <_ZN10rayon_core8registry12WorkerThread15wait_until_cold17ha3325bd42a997705E+0x3e>
   17a27:	e9 c3 00 00 00       	jmpq   17aef <_ZN10rayon_core8registry12WorkerThread15wait_until_cold17ha3325bd42a997705E+0x29f>
   17a2c:	48 8b ab 30 01 00 00 	mov    0x130(%rbx),%rbp
                yields = self.registry.sleep.no_work_found(self.index, yields);
   17a33:	4c 01 e5             	add    %r12,%rbp
        if yields < ROUNDS_UNTIL_SLEEPY {
   17a36:	49 83 fd 20          	cmp    $0x20,%r13
   17a3a:	73 19                	jae    17a55 <_ZN10rayon_core8registry12WorkerThread15wait_until_cold17ha3325bd42a997705E+0x205>
   17a3c:	ff 15 3e 04 23 00    	callq  *0x23043e(%rip)        # 247e80 <sched_yield@GLIBC_2.2.5>
            yields + 1
   17a42:	49 ff c5             	inc    %r13
   17a45:	41 8a 06             	mov    (%r14),%al
   17a48:	84 c0                	test   %al,%al
        while !latch.probe() {
   17a4a:	0f 84 3e fe ff ff    	je     1788e <_ZN10rayon_core8registry12WorkerThread15wait_until_cold17ha3325bd42a997705E+0x3e>
   17a50:	e9 9a 00 00 00       	jmpq   17aef <_ZN10rayon_core8registry12WorkerThread15wait_until_cold17ha3325bd42a997705E+0x29f>
   17a55:	4c 8b bb 20 01 00 00 	mov    0x120(%rbx),%r15
        } else if yields == ROUNDS_UNTIL_SLEEPY {
   17a5c:	75 33                	jne    17a91 <_ZN10rayon_core8registry12WorkerThread15wait_until_cold17ha3325bd42a997705E+0x241>
   17a5e:	ff 15 1c 04 23 00    	callq  *0x23041c(%rip)        # 247e80 <sched_yield@GLIBC_2.2.5>
   17a64:	4b 8d 0c 3f          	lea    (%r15,%r15,1),%rcx
   17a68:	48 83 c1 02          	add    $0x2,%rcx
   17a6c:	0f 1f 40 00          	nopl   0x0(%rax)
   17a70:	48 8b 45 00          	mov    0x0(%rbp),%rax
        (state >> 1) != 0
   17a74:	48 83 f8 01          	cmp    $0x1,%rax
            if self.any_worker_is_sleepy(state) {
   17a78:	77 49                	ja     17ac3 <_ZN10rayon_core8registry12WorkerThread15wait_until_cold17ha3325bd42a997705E+0x273>
        ((worker_index + 1) << 1) + state
   17a7a:	48 8d 14 01          	lea    (%rcx,%rax,1),%rdx
   17a7e:	f0 48 0f b1 55 00    	lock cmpxchg %rdx,0x0(%rbp)
   17a84:	41 bd 21 00 00 00    	mov    $0x21,%r13d
                if self
   17a8a:	75 e4                	jne    17a70 <_ZN10rayon_core8registry12WorkerThread15wait_until_cold17ha3325bd42a997705E+0x220>
   17a8c:	e9 f2 fd ff ff       	jmpq   17883 <_ZN10rayon_core8registry12WorkerThread15wait_until_cold17ha3325bd42a997705E+0x33>
        } else if yields < ROUNDS_UNTIL_ASLEEP {
   17a91:	49 83 fd 40          	cmp    $0x40,%r13
   17a95:	73 3f                	jae    17ad6 <_ZN10rayon_core8registry12WorkerThread15wait_until_cold17ha3325bd42a997705E+0x286>
   17a97:	ff 15 e3 03 23 00    	callq  *0x2303e3(%rip)        # 247e80 <sched_yield@GLIBC_2.2.5>
   17a9d:	48 8b 45 00          	mov    0x0(%rbp),%rax
        (state >> 1) == (worker_index + 1)
   17aa1:	48 d1 e8             	shr    %rax
   17aa4:	49 ff c7             	inc    %r15
                yields + 1
   17aa7:	49 ff c5             	inc    %r13
        (state >> 1) == (worker_index + 1)
   17aaa:	4c 39 f8             	cmp    %r15,%rax
            if self.still_sleepy(worker_index) {
   17aad:	b8 00 00 00 00       	mov    $0x0,%eax
   17ab2:	4c 0f 45 e8          	cmovne %rax,%r13
   17ab6:	41 8a 06             	mov    (%r14),%al
   17ab9:	84 c0                	test   %al,%al
   17abb:	0f 84 cd fd ff ff    	je     1788e <_ZN10rayon_core8registry12WorkerThread15wait_until_cold17ha3325bd42a997705E+0x3e>
   17ac1:	eb 2c                	jmp    17aef <_ZN10rayon_core8registry12WorkerThread15wait_until_cold17ha3325bd42a997705E+0x29f>
   17ac3:	41 bd 20 00 00 00    	mov    $0x20,%r13d
   17ac9:	41 8a 06             	mov    (%r14),%al
   17acc:	84 c0                	test   %al,%al
   17ace:	0f 84 ba fd ff ff    	je     1788e <_ZN10rayon_core8registry12WorkerThread15wait_until_cold17ha3325bd42a997705E+0x3e>
   17ad4:	eb 19                	jmp    17aef <_ZN10rayon_core8registry12WorkerThread15wait_until_cold17ha3325bd42a997705E+0x29f>
            self.sleep(worker_index);
   17ad6:	48 89 ef             	mov    %rbp,%rdi
   17ad9:	4c 89 fe             	mov    %r15,%rsi
   17adc:	e8 9f 06 00 00       	callq  18180 <_ZN10rayon_core5sleep5Sleep5sleep17h0772af2aea612ed1E>
   17ae1:	45 31 ed             	xor    %r13d,%r13d
   17ae4:	41 8a 06             	mov    (%r14),%al
   17ae7:	84 c0                	test   %al,%al
   17ae9:	0f 84 9f fd ff ff    	je     1788e <_ZN10rayon_core8registry12WorkerThread15wait_until_cold17ha3325bd42a997705E+0x3e>
        if yields > ROUNDS_UNTIL_SLEEPY {
   17aef:	49 83 fd 21          	cmp    $0x21,%r13
   17af3:	72 19                	jb     17b0e <_ZN10rayon_core8registry12WorkerThread15wait_until_cold17ha3325bd42a997705E+0x2be>
   17af5:	bf 98 01 00 00       	mov    $0x198,%edi
   17afa:	48 03 bb 30 01 00 00 	add    0x130(%rbx),%rdi
   17b01:	48 8b 07             	mov    (%rdi),%rax
        if old_state != AWAKE {
   17b04:	48 85 c0             	test   %rax,%rax
   17b07:	74 05                	je     17b0e <_ZN10rayon_core8registry12WorkerThread15wait_until_cold17ha3325bd42a997705E+0x2be>
            self.tickle_cold(worker_index);
   17b09:	e8 62 05 00 00       	callq  18070 <_ZN10rayon_core5sleep5Sleep11tickle_cold17h334403ad3bddecd8E>
    }
   17b0e:	48 83 c4 58          	add    $0x58,%rsp
   17b12:	5b                   	pop    %rbx
   17b13:	41 5c                	pop    %r12
   17b15:	41 5d                	pop    %r13
   17b17:	41 5e                	pop    %r14
   17b19:	41 5f                	pop    %r15
   17b1b:	5d                   	pop    %rbp
   17b1c:	c3                   	retq   
   17b1d:	e8 ce 08 00 00       	callq  183f0 <_ZN4core3ptr13drop_in_place17hc443eae86009dba0E>
   17b22:	0f 0b                	ud2    
   17b24:	e8 c7 08 00 00       	callq  183f0 <_ZN4core3ptr13drop_in_place17hc443eae86009dba0E>
   17b29:	0f 0b                	ud2    
   17b2b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000017b30 <_ZN10rayon_core6unwind16resume_unwinding17h10c44a275a145090E>:
    F: FnOnce() -> R,
{
    panic::catch_unwind(AssertUnwindSafe(func))
}

pub(super) fn resume_unwinding(payload: Box<dyn Any + Send>) -> ! {
   17b30:	50                   	push   %rax
    panic::resume_unwind(payload)
   17b31:	e8 ca 35 01 00       	callq  2b100 <_ZN3std5panic13resume_unwind17ha9479a01d7f7d8e3E>
   17b36:	0f 0b                	ud2    
   17b38:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   17b3f:	00 

0000000000017b40 <_ZN5alloc5alloc8box_free17h16551760f718b115E>:
   17b40:	48 85 f6             	test   %rsi,%rsi
   17b43:	74 06                	je     17b4b <_ZN5alloc5alloc8box_free17h16551760f718b115E+0xb>
   17b45:	ff 25 2d 02 23 00    	jmpq   *0x23022d(%rip)        # 247d78 <free@GLIBC_2.2.5>
   17b4b:	c3                   	retq   
   17b4c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000017b50 <_ZN10rayon_core8registry12WorkerThread14take_local_job17h6acdab09e45847e8E.218>:
    pub(super) unsafe fn take_local_job(&self) -> Option<JobRef> {
   17b50:	41 57                	push   %r15
   17b52:	41 56                	push   %r14
   17b54:	53                   	push   %rbx
        let b = self.inner.back.load(Ordering::Relaxed);
   17b55:	48 8b 97 00 01 00 00 	mov    0x100(%rdi),%rdx
   17b5c:	48 8b 8a 08 01 00 00 	mov    0x108(%rdx),%rcx
   17b63:	48 8b b2 00 01 00 00 	mov    0x100(%rdx),%rsi
   17b6a:	48 89 c8             	mov    %rcx,%rax
   17b6d:	48 29 f0             	sub    %rsi,%rax
        if len <= 0 {
   17b70:	48 85 c0             	test   %rax,%rax
   17b73:	0f 8e 87 00 00 00    	jle    17c00 <_ZN10rayon_core8registry12WorkerThread14take_local_job17h6acdab09e45847e8E.218+0xb0>
            Flavor::Fifo => {
   17b79:	80 bf 18 01 00 00 01 	cmpb   $0x1,0x118(%rdi)
   17b80:	0f 85 82 00 00 00    	jne    17c08 <_ZN10rayon_core8registry12WorkerThread14take_local_job17h6acdab09e45847e8E.218+0xb8>
   17b86:	48 8d 59 ff          	lea    -0x1(%rcx),%rbx
   17b8a:	48 89 9a 08 01 00 00 	mov    %rbx,0x108(%rdx)
   17b91:	0f ae f0             	mfence 
                let f = self.inner.front.load(Ordering::Relaxed);
   17b94:	4c 8b 87 00 01 00 00 	mov    0x100(%rdi),%r8
   17b9b:	49 8b 80 00 01 00 00 	mov    0x100(%r8),%rax
                if len < 0 {
   17ba2:	49 89 da             	mov    %rbx,%r10
   17ba5:	49 29 c2             	sub    %rax,%r10
   17ba8:	0f 88 c3 00 00 00    	js     17c71 <_ZN10rayon_core8registry12WorkerThread14take_local_job17h6acdab09e45847e8E.218+0x121>
                    let buffer = self.buffer.get();
   17bae:	4c 8b 8f 08 01 00 00 	mov    0x108(%rdi),%r9
   17bb5:	48 8b b7 10 01 00 00 	mov    0x110(%rdi),%rsi
        self.ptr.offset(index & (self.cap - 1) as isize)
   17bbc:	48 8d 56 ff          	lea    -0x1(%rsi),%rdx
   17bc0:	48 21 da             	and    %rbx,%rdx
   17bc3:	48 c1 e2 04          	shl    $0x4,%rdx
   17bc7:	4d 8b 34 11          	mov    (%r9,%rdx,1),%r14
   17bcb:	4d 8b 7c 11 08       	mov    0x8(%r9,%rdx,1),%r15
                    if len == 0 {
   17bd0:	4d 85 d2             	test   %r10,%r10
   17bd3:	0f 84 b7 00 00 00    	je     17c90 <_ZN10rayon_core8registry12WorkerThread14take_local_job17h6acdab09e45847e8E.218+0x140>
                        if buffer.cap > MIN_CAP && len < buffer.cap as isize / 4 {
   17bd9:	48 83 fe 41          	cmp    $0x41,%rsi
   17bdd:	0f 82 ce 00 00 00    	jb     17cb1 <_ZN10rayon_core8registry12WorkerThread14take_local_job17h6acdab09e45847e8E.218+0x161>
   17be3:	48 89 f0             	mov    %rsi,%rax
   17be6:	48 c1 f8 3f          	sar    $0x3f,%rax
   17bea:	48 c1 e8 3e          	shr    $0x3e,%rax
   17bee:	48 01 f0             	add    %rsi,%rax
   17bf1:	48 c1 f8 02          	sar    $0x2,%rax
   17bf5:	49 39 c2             	cmp    %rax,%r10
   17bf8:	0f 8d b3 00 00 00    	jge    17cb1 <_ZN10rayon_core8registry12WorkerThread14take_local_job17h6acdab09e45847e8E.218+0x161>
   17bfe:	eb 60                	jmp    17c60 <_ZN10rayon_core8registry12WorkerThread14take_local_job17h6acdab09e45847e8E.218+0x110>
   17c00:	45 31 ff             	xor    %r15d,%r15d
   17c03:	e9 a9 00 00 00       	jmpq   17cb1 <_ZN10rayon_core8registry12WorkerThread14take_local_job17h6acdab09e45847e8E.218+0x161>
   17c08:	bb 01 00 00 00       	mov    $0x1,%ebx
   17c0d:	f0 48 0f c1 9a 00 01 	lock xadd %rbx,0x100(%rdx)
   17c14:	00 00 
   17c16:	48 89 da             	mov    %rbx,%rdx
   17c19:	48 f7 d2             	not    %rdx
                if b.wrapping_sub(new_f) < 0 {
   17c1c:	48 01 d1             	add    %rdx,%rcx
   17c1f:	78 5c                	js     17c7d <_ZN10rayon_core8registry12WorkerThread14take_local_job17h6acdab09e45847e8E.218+0x12d>
                    let buffer = self.buffer.get();
   17c21:	48 8b 8f 08 01 00 00 	mov    0x108(%rdi),%rcx
   17c28:	48 8b b7 10 01 00 00 	mov    0x110(%rdi),%rsi
        self.ptr.offset(index & (self.cap - 1) as isize)
   17c2f:	48 8d 56 ff          	lea    -0x1(%rsi),%rdx
   17c33:	48 21 da             	and    %rbx,%rdx
   17c36:	48 c1 e2 04          	shl    $0x4,%rdx
   17c3a:	4c 8b 34 11          	mov    (%rcx,%rdx,1),%r14
   17c3e:	4c 8b 7c 11 08       	mov    0x8(%rcx,%rdx,1),%r15
                    if buffer.cap > MIN_CAP && len <= buffer.cap as isize / 4 {
   17c43:	48 83 fe 41          	cmp    $0x41,%rsi
   17c47:	72 68                	jb     17cb1 <_ZN10rayon_core8registry12WorkerThread14take_local_job17h6acdab09e45847e8E.218+0x161>
   17c49:	48 89 f1             	mov    %rsi,%rcx
   17c4c:	48 c1 f9 3f          	sar    $0x3f,%rcx
   17c50:	48 c1 e9 3e          	shr    $0x3e,%rcx
   17c54:	48 01 f1             	add    %rsi,%rcx
   17c57:	48 c1 f9 02          	sar    $0x2,%rcx
   17c5b:	48 39 c8             	cmp    %rcx,%rax
   17c5e:	7f 51                	jg     17cb1 <_ZN10rayon_core8registry12WorkerThread14take_local_job17h6acdab09e45847e8E.218+0x161>
   17c60:	48 d1 ee             	shr    %rsi
   17c63:	48 81 c7 00 01 00 00 	add    $0x100,%rdi
   17c6a:	e8 e1 0b 00 00       	callq  18850 <_ZN15crossbeam_deque15Worker$LT$T$GT$6resize17h844bd88e970526a8E>
   17c6f:	eb 40                	jmp    17cb1 <_ZN10rayon_core8registry12WorkerThread14take_local_job17h6acdab09e45847e8E.218+0x161>
   17c71:	49 89 88 08 01 00 00 	mov    %rcx,0x108(%r8)
   17c78:	45 31 ff             	xor    %r15d,%r15d
   17c7b:	eb 34                	jmp    17cb1 <_ZN10rayon_core8registry12WorkerThread14take_local_job17h6acdab09e45847e8E.218+0x161>
                    self.inner.front.store(f, Ordering::Relaxed);
   17c7d:	48 8b 87 00 01 00 00 	mov    0x100(%rdi),%rax
   17c84:	48 89 98 00 01 00 00 	mov    %rbx,0x100(%rax)
   17c8b:	45 31 ff             	xor    %r15d,%r15d
   17c8e:	eb 21                	jmp    17cb1 <_ZN10rayon_core8registry12WorkerThread14take_local_job17h6acdab09e45847e8E.218+0x161>
   17c90:	31 d2                	xor    %edx,%edx
   17c92:	48 8d 70 01          	lea    0x1(%rax),%rsi
   17c96:	f0 49 0f b1 b0 00 01 	lock cmpxchg %rsi,0x100(%r8)
   17c9d:	00 00 
                        if self
   17c9f:	4c 0f 45 fa          	cmovne %rdx,%r15
                        self.inner.back.store(b.wrapping_add(1), Ordering::Relaxed);
   17ca3:	48 8b 87 00 01 00 00 	mov    0x100(%rdi),%rax
   17caa:	48 89 88 08 01 00 00 	mov    %rcx,0x108(%rax)
    }
   17cb1:	4c 89 f0             	mov    %r14,%rax
   17cb4:	4c 89 fa             	mov    %r15,%rdx
   17cb7:	5b                   	pop    %rbx
   17cb8:	41 5e                	pop    %r14
   17cba:	41 5f                	pop    %r15
   17cbc:	c3                   	retq   
   17cbd:	0f 1f 00             	nopl   (%rax)

0000000000017cc0 <_ZN4core4iter6traits8iterator8Iterator8try_fold17he2a1a93294a82a2eE>:
   17cc0:	55                   	push   %rbp
   17cc1:	41 57                	push   %r15
   17cc3:	41 56                	push   %r14
   17cc5:	41 55                	push   %r13
   17cc7:	41 54                	push   %r12
   17cc9:	53                   	push   %rbx
   17cca:	b8 28 10 00 00       	mov    $0x1028,%eax
   17ccf:	e8 c4 17 02 00       	callq  39498 <__rust_probestack>
   17cd4:	48 29 c4             	sub    %rax,%rsp
   17cd7:	48 89 f5             	mov    %rsi,%rbp
   17cda:	48 8b 37             	mov    (%rdi),%rsi
   17cdd:	48 8b 47 08          	mov    0x8(%rdi),%rax
   17ce1:	48 39 c6             	cmp    %rax,%rsi
   17ce4:	0f 83 08 03 00 00    	jae    17ff2 <_ZN4core4iter6traits8iterator8Iterator8try_fold17he2a1a93294a82a2eE+0x332>
   17cea:	49 89 fe             	mov    %rdi,%r14
   17ced:	48 89 6c 24 10       	mov    %rbp,0x10(%rsp)
   17cf2:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
   17cf7:	eb 1f                	jmp    17d18 <_ZN4core4iter6traits8iterator8Iterator8try_fold17he2a1a93294a82a2eE+0x58>
   17cf9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   17d00:	49 8b 0e             	mov    (%r14),%rcx
   17d03:	49 8b 46 08          	mov    0x8(%r14),%rax
   17d07:	48 8b 6c 24 10       	mov    0x10(%rsp),%rbp
   17d0c:	48 89 ce             	mov    %rcx,%rsi
   17d0f:	48 39 c1             	cmp    %rax,%rcx
   17d12:	0f 83 da 02 00 00    	jae    17ff2 <_ZN4core4iter6traits8iterator8Iterator8try_fold17he2a1a93294a82a2eE+0x332>
   17d18:	48 8d 4e 01          	lea    0x1(%rsi),%rcx
   17d1c:	49 89 0e             	mov    %rcx,(%r14)
   17d1f:	48 8b 55 00          	mov    0x0(%rbp),%rdx
            .filter(|&i| i != self.index)
   17d23:	48 8b 12             	mov    (%rdx),%rdx
   17d26:	48 8b 12             	mov    (%rdx),%rdx
   17d29:	48 39 b2 20 01 00 00 	cmp    %rsi,0x120(%rdx)
   17d30:	74 da                	je     17d0c <_ZN4core4iter6traits8iterator8Iterator8try_fold17he2a1a93294a82a2eE+0x4c>
   17d32:	48 8b 45 08          	mov    0x8(%rbp),%rax
                let victim = &self.registry.thread_infos[victim_index];
   17d36:	48 8b 00             	mov    (%rax),%rax
   17d39:	48 8b 00             	mov    (%rax),%rax
   17d3c:	48 8b 80 30 01 00 00 	mov    0x130(%rax),%rax
   17d43:	48 8b 90 90 01 00 00 	mov    0x190(%rax),%rdx
   17d4a:	48 39 f2             	cmp    %rsi,%rdx
   17d4d:	0f 86 f1 02 00 00    	jbe    18044 <_ZN4core4iter6traits8iterator8Iterator8try_fold17he2a1a93294a82a2eE+0x384>
   17d53:	48 8b 80 80 01 00 00 	mov    0x180(%rax),%rax
   17d5a:	48 8d 0c b6          	lea    (%rsi,%rsi,4),%rcx
   17d5e:	48 c1 e1 04          	shl    $0x4,%rcx
   17d62:	4c 8d 24 08          	lea    (%rax,%rcx,1),%r12
   17d66:	49 83 c4 40          	add    $0x40,%r12
    /// assert_eq!(s.steal(), Steal::Success(1));
    /// assert_eq!(s.steal(), Steal::Success(2));
    /// ```
    pub fn steal(&self) -> Steal<T> {
        // Load the front index.
        let f = self.inner.front.load(Ordering::Acquire);
   17d6a:	49 8b 04 24          	mov    (%r12),%rax
   17d6e:	4c 8b a8 00 01 00 00 	mov    0x100(%rax),%r13
   17d75:	64 48 83 3c 25 e0 fe 	cmpq   $0x1,%fs:0xfffffffffffffee0
   17d7c:	ff ff 01 
   17d7f:	74 33                	je     17db4 <_ZN4core4iter6traits8iterator8Iterator8try_fold17he2a1a93294a82a2eE+0xf4>
   17d81:	e9 11 01 00 00       	jmpq   17e97 <_ZN4core4iter6traits8iterator8Iterator8try_fold17he2a1a93294a82a2eE+0x1d7>
   17d86:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   17d8d:	00 00 00 
                        Steal::Empty => return None,
   17d90:	48 85 db             	test   %rbx,%rbx
   17d93:	0f 84 67 ff ff ff    	je     17d00 <_ZN4core4iter6traits8iterator8Iterator8try_fold17he2a1a93294a82a2eE+0x40>
   17d99:	49 8b 04 24          	mov    (%r12),%rax
   17d9d:	4c 8b a8 00 01 00 00 	mov    0x100(%rax),%r13
   17da4:	64 48 83 3c 25 e0 fe 	cmpq   $0x1,%fs:0xfffffffffffffee0
   17dab:	ff ff 01 
   17dae:	0f 85 e3 00 00 00    	jne    17e97 <_ZN4core4iter6traits8iterator8Iterator8try_fold17he2a1a93294a82a2eE+0x1d7>
   17db4:	64 48 8b 04 25 00 00 	mov    %fs:0x0,%rax
   17dbb:	00 00 
   17dbd:	48 8d 80 e8 fe ff ff 	lea    -0x118(%rax),%rax
        unsafe { (*self.local).is_pinned() }
   17dc4:	48 8b 00             	mov    (%rax),%rax
   17dc7:	48 8b 80 20 08 00 00 	mov    0x820(%rax),%rax
   17dce:	48 85 c0             	test   %rax,%rax
        // A SeqCst fence is needed here.
        //
        // If the current thread is already pinned (reentrantly), we must manually issue the
        // fence. Otherwise, the following pinning will issue the fence anyway, so we don't
        // have to.
        if epoch::is_pinned() {
   17dd1:	74 03                	je     17dd6 <_ZN4core4iter6traits8iterator8Iterator8try_fold17he2a1a93294a82a2eE+0x116>
   17dd3:	0f ae f0             	mfence 
            atomic::fence(Ordering::SeqCst);
        }

        let guard = &epoch::pin();
   17dd6:	e8 05 07 00 00       	callq  184e0 <_ZN15crossbeam_epoch7default3pin17hcb1fa57e28276d90E>
   17ddb:	48 89 c7             	mov    %rax,%rdi

        // Load the back index.
        let b = self.inner.back.load(Ordering::Acquire);
   17dde:	49 8b 04 24          	mov    (%r12),%rax
   17de2:	48 8b 80 08 01 00 00 	mov    0x108(%rax),%rax
   17de9:	4c 29 e8             	sub    %r13,%rax

        // Is the queue empty?
        if b.wrapping_sub(f) <= 0 {
   17dec:	48 85 c0             	test   %rax,%rax
   17def:	7e 5f                	jle    17e50 <_ZN4core4iter6traits8iterator8Iterator8try_fold17he2a1a93294a82a2eE+0x190>
            return Steal::Empty;
        }

        // Load the buffer and read the task at the front.
        let buffer = self.inner.buffer.load(Ordering::Acquire, guard);
   17df1:	49 8b 04 24          	mov    (%r12),%rax
   17df5:	48 8b 80 80 00 00 00 	mov    0x80(%rax),%rax
   17dfc:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
        self.ptr.offset(index & (self.cap - 1) as isize)
   17e00:	48 8b 08             	mov    (%rax),%rcx
   17e03:	48 8b 40 08          	mov    0x8(%rax),%rax
   17e07:	48 ff c8             	dec    %rax
   17e0a:	4c 21 e8             	and    %r13,%rax
   17e0d:	48 c1 e0 04          	shl    $0x4,%rax
   17e11:	4c 8b 3c 01          	mov    (%rcx,%rax,1),%r15
   17e15:	48 8b 6c 01 08       	mov    0x8(%rcx,%rax,1),%rbp
        let task = unsafe { buffer.deref().read(f) };

        // Try incrementing the front index to steal the task.
        if self
   17e1a:	49 8b 0c 24          	mov    (%r12),%rcx
   17e1e:	49 8d 55 01          	lea    0x1(%r13),%rdx
   17e22:	4c 89 e8             	mov    %r13,%rax
   17e25:	f0 48 0f b1 91 00 01 	lock cmpxchg %rdx,0x100(%rcx)
   17e2c:	00 00 
   17e2e:	bb 02 00 00 00       	mov    $0x2,%ebx
   17e33:	0f 84 bd 01 00 00    	je     17ff6 <_ZN4core4iter6traits8iterator8Iterator8try_fold17he2a1a93294a82a2eE+0x336>
   17e39:	48 85 ff             	test   %rdi,%rdi
   17e3c:	75 1d                	jne    17e5b <_ZN4core4iter6traits8iterator8Iterator8try_fold17he2a1a93294a82a2eE+0x19b>
   17e3e:	e9 4d ff ff ff       	jmpq   17d90 <_ZN4core4iter6traits8iterator8Iterator8try_fold17he2a1a93294a82a2eE+0xd0>
   17e43:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   17e4a:	00 00 00 
   17e4d:	0f 1f 00             	nopl   (%rax)
   17e50:	31 db                	xor    %ebx,%ebx
   17e52:	48 85 ff             	test   %rdi,%rdi
   17e55:	0f 84 35 ff ff ff    	je     17d90 <_ZN4core4iter6traits8iterator8Iterator8try_fold17he2a1a93294a82a2eE+0xd0>
        let guard_count = self.guard_count.get();
   17e5b:	48 8b 87 20 08 00 00 	mov    0x820(%rdi),%rax
        self.guard_count.set(guard_count - 1);
   17e62:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
   17e66:	48 89 8f 20 08 00 00 	mov    %rcx,0x820(%rdi)
        if guard_count == 1 {
   17e6d:	48 83 f8 01          	cmp    $0x1,%rax
   17e71:	0f 85 19 ff ff ff    	jne    17d90 <_ZN4core4iter6traits8iterator8Iterator8try_fold17he2a1a93294a82a2eE+0xd0>
   17e77:	48 c7 47 08 00 00 00 	movq   $0x0,0x8(%rdi)
   17e7e:	00 
            if self.handle_count.get() == 0 {
   17e7f:	48 83 bf 28 08 00 00 	cmpq   $0x0,0x828(%rdi)
   17e86:	00 
   17e87:	0f 85 03 ff ff ff    	jne    17d90 <_ZN4core4iter6traits8iterator8Iterator8try_fold17he2a1a93294a82a2eE+0xd0>
                self.finalize();
   17e8d:	e8 fe 94 ff ff       	callq  11390 <_ZN15crossbeam_epoch8internal5Local8finalize17hb072c1707f33cb8dE>
   17e92:	e9 f9 fe ff ff       	jmpq   17d90 <_ZN4core4iter6traits8iterator8Iterator8try_fold17he2a1a93294a82a2eE+0xd0>
   17e97:	e8 44 a0 ff ff       	callq  11ee0 <_ZN3std6thread5local4fast12Key$LT$T$GT$14try_initialize17hf8b754cf35e0a20aE>
   17e9c:	48 85 c0             	test   %rax,%rax
   17e9f:	0f 85 1f ff ff ff    	jne    17dc4 <_ZN4core4iter6traits8iterator8Iterator8try_fold17he2a1a93294a82a2eE+0x104>
   17ea5:	48 8d 05 b4 01 23 00 	lea    0x2301b4(%rip),%rax        # 248060 <_ZN79_$LT$crossbeam_epoch..default..COLLECTOR$u20$as$u20$core..ops..deref..Deref$GT$5deref11__stability4LAZY17h2c7e93b6d170d00fE>
   17eac:	48 89 04 24          	mov    %rax,(%rsp)
   17eb0:	48 8b 05 b1 01 23 00 	mov    0x2301b1(%rip),%rax        # 248068 <_ZN79_$LT$crossbeam_epoch..default..COLLECTOR$u20$as$u20$core..ops..deref..Deref$GT$5deref11__stability4LAZY17h2c7e93b6d170d00fE+0x8>
   17eb7:	48 83 f8 03          	cmp    $0x3,%rax
   17ebb:	0f 85 ec 00 00 00    	jne    17fad <_ZN4core4iter6traits8iterator8Iterator8try_fold17he2a1a93294a82a2eE+0x2ed>
   17ec1:	48 8b 04 24          	mov    (%rsp),%rax
        Local::register(self)
   17ec5:	48 8b 18             	mov    (%rax),%rbx
   17ec8:	f0 48 ff 03          	lock incq (%rbx)
   17ecc:	0f 8e 1c 01 00 00    	jle    17fee <_ZN4core4iter6traits8iterator8Iterator8try_fold17he2a1a93294a82a2eE+0x32e>
   17ed2:	48 8d 6c 24 18       	lea    0x18(%rsp),%rbp
        Self::default()
   17ed7:	48 89 ef             	mov    %rbp,%rdi
   17eda:	e8 c1 80 ff ff       	callq  ffa0 <_ZN73_$LT$crossbeam_epoch..internal..Bag$u20$as$u20$core..default..Default$GT$7default17h06d0746c5d364cb6E>
        Self::from(Box::new(value))
   17edf:	ba 08 08 00 00       	mov    $0x808,%edx
   17ee4:	4c 8d bc 24 20 08 00 	lea    0x820(%rsp),%r15
   17eeb:	00 
   17eec:	4c 89 ff             	mov    %r15,%rdi
   17eef:	48 89 ee             	mov    %rbp,%rsi
   17ef2:	4c 8b 35 d7 ff 22 00 	mov    0x22ffd7(%rip),%r14        # 247ed0 <memcpy@GLIBC_2.14>
   17ef9:	41 ff d6             	callq  *%r14
   17efc:	bf 38 08 00 00       	mov    $0x838,%edi
   17f01:	ff 15 01 00 23 00    	callq  *0x230001(%rip)        # 247f08 <malloc@GLIBC_2.2.5>
   17f07:	48 85 c0             	test   %rax,%rax
   17f0a:	0f 84 42 01 00 00    	je     18052 <_ZN4core4iter6traits8iterator8Iterator8try_fold17he2a1a93294a82a2eE+0x392>
   17f10:	48 89 c5             	mov    %rax,%rbp
   17f13:	c5 f8 57 c0          	vxorps %xmm0,%xmm0,%xmm0
   17f17:	c5 f8 11 00          	vmovups %xmm0,(%rax)
   17f1b:	48 89 58 10          	mov    %rbx,0x10(%rax)
   17f1f:	48 8d 78 18          	lea    0x18(%rax),%rdi
   17f23:	ba 08 08 00 00       	mov    $0x808,%edx
   17f28:	4c 89 fe             	mov    %r15,%rsi
   17f2b:	41 ff d6             	callq  *%r14
   17f2e:	c5 f8 28 05 da 24 02 	vmovaps 0x224da(%rip),%xmm0        # 3a410 <_fini+0xcc>
   17f35:	00 
   17f36:	c5 f8 11 85 20 08 00 	vmovups %xmm0,0x820(%rbp)
   17f3d:	00 
   17f3e:	48 c7 85 30 08 00 00 	movq   $0x0,0x830(%rbp)
   17f45:	00 00 00 00 
    let raw = (data & !low_bits::<T>()) as *mut T;
   17f49:	48 83 e5 f8          	and    $0xfffffffffffffff8,%rbp
   17f4d:	48 8b 83 00 02 00 00 	mov    0x200(%rbx),%rax
   17f54:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   17f5b:	00 00 00 
   17f5e:	66 90                	xchg   %ax,%ax
   17f60:	48 89 45 00          	mov    %rax,0x0(%rbp)
   17f64:	f0 48 0f b1 ab 00 02 	lock cmpxchg %rbp,0x200(%rbx)
   17f6b:	00 00 
   17f6d:	75 f1                	jne    17f60 <_ZN4core4iter6traits8iterator8Iterator8try_fold17he2a1a93294a82a2eE+0x2a0>
        unsafe { (*self.local).is_pinned() }
   17f6f:	48 8b 85 20 08 00 00 	mov    0x820(%rbp),%rax
        let handle_count = self.handle_count.get();
   17f76:	48 8b 8d 28 08 00 00 	mov    0x828(%rbp),%rcx
        self.handle_count.set(handle_count - 1);
   17f7d:	48 8d 51 ff          	lea    -0x1(%rcx),%rdx
   17f81:	48 89 95 28 08 00 00 	mov    %rdx,0x828(%rbp)
        if guard_count == 0 && handle_count == 1 {
   17f88:	48 85 c0             	test   %rax,%rax
   17f8b:	4c 8b 74 24 08       	mov    0x8(%rsp),%r14
   17f90:	0f 85 38 fe ff ff    	jne    17dce <_ZN4core4iter6traits8iterator8Iterator8try_fold17he2a1a93294a82a2eE+0x10e>
   17f96:	48 83 f9 01          	cmp    $0x1,%rcx
   17f9a:	0f 85 2e fe ff ff    	jne    17dce <_ZN4core4iter6traits8iterator8Iterator8try_fold17he2a1a93294a82a2eE+0x10e>
            self.finalize();
   17fa0:	48 89 ef             	mov    %rbp,%rdi
   17fa3:	e8 e8 93 ff ff       	callq  11390 <_ZN15crossbeam_epoch8internal5Local8finalize17hb072c1707f33cb8dE>
   17fa8:	e9 29 fe ff ff       	jmpq   17dd6 <_ZN4core4iter6traits8iterator8Iterator8try_fold17he2a1a93294a82a2eE+0x116>
   17fad:	48 89 e0             	mov    %rsp,%rax
   17fb0:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   17fb5:	48 8d 44 24 18       	lea    0x18(%rsp),%rax
   17fba:	48 89 84 24 20 08 00 	mov    %rax,0x820(%rsp)
   17fc1:	00 
   17fc2:	48 8d 3d 9f 00 23 00 	lea    0x23009f(%rip),%rdi        # 248068 <_ZN79_$LT$crossbeam_epoch..default..COLLECTOR$u20$as$u20$core..ops..deref..Deref$GT$5deref11__stability4LAZY17h2c7e93b6d170d00fE+0x8>
   17fc9:	48 8d b4 24 20 08 00 	lea    0x820(%rsp),%rsi
   17fd0:	00 
   17fd1:	48 8d 15 10 e8 22 00 	lea    0x22e810(%rip),%rdx        # 2467e8 <__init_array_end+0x7d8>
   17fd8:	e8 b3 32 01 00       	callq  2b290 <_ZN3std4sync4once4Once10call_inner17hfabbd1bc15485aefE>
   17fdd:	48 8b 04 24          	mov    (%rsp),%rax
        Local::register(self)
   17fe1:	48 8b 18             	mov    (%rax),%rbx
   17fe4:	f0 48 ff 03          	lock incq (%rbx)
   17fe8:	0f 8f e4 fe ff ff    	jg     17ed2 <_ZN4core4iter6traits8iterator8Iterator8try_fold17he2a1a93294a82a2eE+0x212>
   17fee:	0f 0b                	ud2    
   17ff0:	0f 0b                	ud2    
   17ff2:	31 ed                	xor    %ebp,%ebp
   17ff4:	eb 2f                	jmp    18025 <_ZN4core4iter6traits8iterator8Iterator8try_fold17he2a1a93294a82a2eE+0x365>
   17ff6:	48 85 ff             	test   %rdi,%rdi
   17ff9:	74 2a                	je     18025 <_ZN4core4iter6traits8iterator8Iterator8try_fold17he2a1a93294a82a2eE+0x365>
        let guard_count = self.guard_count.get();
   17ffb:	48 8b 87 20 08 00 00 	mov    0x820(%rdi),%rax
        self.guard_count.set(guard_count - 1);
   18002:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
   18006:	48 89 8f 20 08 00 00 	mov    %rcx,0x820(%rdi)
        if guard_count == 1 {
   1800d:	48 83 f8 01          	cmp    $0x1,%rax
   18011:	75 12                	jne    18025 <_ZN4core4iter6traits8iterator8Iterator8try_fold17he2a1a93294a82a2eE+0x365>
   18013:	48 c7 47 08 00 00 00 	movq   $0x0,0x8(%rdi)
   1801a:	00 
            if self.handle_count.get() == 0 {
   1801b:	48 83 bf 28 08 00 00 	cmpq   $0x0,0x828(%rdi)
   18022:	00 
   18023:	74 18                	je     1803d <_ZN4core4iter6traits8iterator8Iterator8try_fold17he2a1a93294a82a2eE+0x37d>
   18025:	4c 89 f8             	mov    %r15,%rax
   18028:	48 89 ea             	mov    %rbp,%rdx
   1802b:	48 81 c4 28 10 00 00 	add    $0x1028,%rsp
   18032:	5b                   	pop    %rbx
   18033:	41 5c                	pop    %r12
   18035:	41 5d                	pop    %r13
   18037:	41 5e                	pop    %r14
   18039:	41 5f                	pop    %r15
   1803b:	5d                   	pop    %rbp
   1803c:	c3                   	retq   
                self.finalize();
   1803d:	e8 4e 93 ff ff       	callq  11390 <_ZN15crossbeam_epoch8internal5Local8finalize17hb072c1707f33cb8dE>
   18042:	eb e1                	jmp    18025 <_ZN4core4iter6traits8iterator8Iterator8try_fold17he2a1a93294a82a2eE+0x365>
   18044:	48 8d 3d b5 ea 22 00 	lea    0x22eab5(%rip),%rdi        # 246b00 <__init_array_end+0xaf0>
   1804b:	e8 b0 f3 fe ff       	callq  7400 <_ZN4core9panicking18panic_bounds_check17h83121a2515f55ceeE>
   18050:	0f 0b                	ud2    
   18052:	bf 38 08 00 00       	mov    $0x838,%edi
   18057:	be 08 00 00 00       	mov    $0x8,%esi
   1805c:	e8 5f d4 fe ff       	callq  54c0 <_ZN5alloc5alloc18handle_alloc_error17hf7bb8682f6c8b1d7E>
   18061:	0f 0b                	ud2    
   18063:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1806a:	00 00 00 
   1806d:	0f 1f 00             	nopl   (%rax)

0000000000018070 <_ZN10rayon_core5sleep5Sleep11tickle_cold17h334403ad3bddecd8E>:
    fn tickle_cold(&self, worker_index: usize) {
   18070:	41 57                	push   %r15
   18072:	41 56                	push   %r14
   18074:	53                   	push   %rbx
   18075:	48 83 ec 10          	sub    $0x10,%rsp
   18079:	31 c0                	xor    %eax,%eax
   1807b:	48 87 07             	xchg   %rax,(%rdi)
        state & SLEEPING != 0
   1807e:	a8 01                	test   $0x1,%al
        if self.anyone_sleeping(old_state) {
   18080:	75 0a                	jne    1808c <_ZN10rayon_core5sleep5Sleep11tickle_cold17h334403ad3bddecd8E+0x1c>
    }
   18082:	48 83 c4 10          	add    $0x10,%rsp
   18086:	5b                   	pop    %rbx
   18087:	41 5e                	pop    %r14
   18089:	41 5f                	pop    %r15
   1808b:	c3                   	retq   
   1808c:	48 89 fb             	mov    %rdi,%rbx
   1808f:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
   18093:	ff 15 47 ff 22 00    	callq  *0x22ff47(%rip)        # 247fe0 <pthread_mutex_lock@GLIBC_2.2.5>
   18099:	64 48 83 3c 25 a0 ff 	cmpq   $0x1,%fs:0xffffffffffffffa0
   180a0:	ff ff 01 
   180a3:	75 0b                	jne    180b0 <_ZN10rayon_core5sleep5Sleep11tickle_cold17h334403ad3bddecd8E+0x40>
   180a5:	64 4c 8b 3c 25 a8 ff 	mov    %fs:0xffffffffffffffa8,%r15
   180ac:	ff ff 
   180ae:	eb 17                	jmp    180c7 <_ZN10rayon_core5sleep5Sleep11tickle_cold17h334403ad3bddecd8E+0x57>
   180b0:	b8 01 00 00 00       	mov    $0x1,%eax
   180b5:	c4 e1 f9 6e c0       	vmovq  %rax,%xmm0
   180ba:	64 c5 f9 7f 04 25 a0 	vmovdqa %xmm0,%fs:0xffffffffffffffa0
   180c1:	ff ff ff 
   180c4:	45 31 ff             	xor    %r15d,%r15d
   180c7:	4c 8d 73 08          	lea    0x8(%rbx),%r14
   180cb:	64 4c 89 3c 25 a8 ff 	mov    %r15,%fs:0xffffffffffffffa8
   180d2:	ff ff 
   180d4:	8a 43 10             	mov    0x10(%rbx),%al
   180d7:	84 c0                	test   %al,%al
   180d9:	75 60                	jne    1813b <_ZN10rayon_core5sleep5Sleep11tickle_cold17h334403ad3bddecd8E+0xcb>
   180db:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   180df:	ff 15 d3 fc 22 00    	callq  *0x22fcd3(%rip)        # 247db8 <pthread_cond_broadcast@GLIBC_2.3.2>
   180e5:	4d 85 ff             	test   %r15,%r15
   180e8:	75 3f                	jne    18129 <_ZN10rayon_core5sleep5Sleep11tickle_cold17h334403ad3bddecd8E+0xb9>
   180ea:	64 48 83 3c 25 a0 ff 	cmpq   $0x1,%fs:0xffffffffffffffa0
   180f1:	ff ff 01 
   180f4:	75 12                	jne    18108 <_ZN10rayon_core5sleep5Sleep11tickle_cold17h334403ad3bddecd8E+0x98>
   180f6:	64 48 83 3c 25 a8 ff 	cmpq   $0x0,%fs:0xffffffffffffffa8
   180fd:	ff ff 00 
   18100:	74 27                	je     18129 <_ZN10rayon_core5sleep5Sleep11tickle_cold17h334403ad3bddecd8E+0xb9>
   18102:	c6 43 10 01          	movb   $0x1,0x10(%rbx)
   18106:	eb 21                	jmp    18129 <_ZN10rayon_core5sleep5Sleep11tickle_cold17h334403ad3bddecd8E+0xb9>
   18108:	b8 01 00 00 00       	mov    $0x1,%eax
   1810d:	c4 e1 f9 6e c0       	vmovq  %rax,%xmm0
   18112:	64 c5 f9 7f 04 25 a0 	vmovdqa %xmm0,%fs:0xffffffffffffffa0
   18119:	ff ff ff 
   1811c:	64 48 c7 04 25 a8 ff 	movq   $0x0,%fs:0xffffffffffffffa8
   18123:	ff ff 00 00 00 00 
   18129:	49 8b 3e             	mov    (%r14),%rdi
   1812c:	48 83 c4 10          	add    $0x10,%rsp
   18130:	5b                   	pop    %rbx
   18131:	41 5e                	pop    %r14
   18133:	41 5f                	pop    %r15
   18135:	ff 25 bd fd 22 00    	jmpq   *0x22fdbd(%rip)        # 247ef8 <pthread_mutex_unlock@GLIBC_2.2.5>
   1813b:	4d 85 ff             	test   %r15,%r15
   1813e:	4c 89 34 24          	mov    %r14,(%rsp)
   18142:	0f 95 44 24 08       	setne  0x8(%rsp)
   18147:	48 8d 3d 73 57 02 00 	lea    0x25773(%rip),%rdi        # 3d8c1 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0xf61>
   1814e:	48 8d 0d db e9 22 00 	lea    0x22e9db(%rip),%rcx        # 246b30 <__init_array_end+0xb20>
   18155:	4c 8d 05 8c e9 22 00 	lea    0x22e98c(%rip),%r8        # 246ae8 <__init_array_end+0xad8>
   1815c:	48 89 e2             	mov    %rsp,%rdx
   1815f:	be 2b 00 00 00       	mov    $0x2b,%esi
   18164:	e8 f7 1a ff ff       	callq  9c60 <_ZN4core6option18expect_none_failed17he0fec195c6e4c2ecE>
   18169:	0f 0b                	ud2    
   1816b:	48 89 c3             	mov    %rax,%rbx
   1816e:	48 89 e7             	mov    %rsp,%rdi
   18171:	e8 0a d9 ff ff       	callq  15a80 <_ZN4core3ptr13drop_in_place17h422d82a10dad7834E>
   18176:	48 89 df             	mov    %rbx,%rdi
   18179:	e8 22 bf fe ff       	callq  40a0 <_Unwind_Resume@plt>
   1817e:	0f 0b                	ud2    

0000000000018180 <_ZN10rayon_core5sleep5Sleep5sleep17h0772af2aea612ed1E>:
    fn still_sleepy(&self, worker_index: usize) -> bool {
        let state = self.state.load(Ordering::SeqCst);
        self.worker_is_sleepy(state, worker_index)
    }

    fn sleep(&self, worker_index: usize) {
   18180:	55                   	push   %rbp
   18181:	41 57                	push   %r15
   18183:	41 56                	push   %r14
   18185:	41 55                	push   %r13
   18187:	41 54                	push   %r12
   18189:	53                   	push   %rbx
   1818a:	48 83 ec 28          	sub    $0x28,%rsp
   1818e:	48 8b 1f             	mov    (%rdi),%rbx
        (state >> 1) == (worker_index + 1)
   18191:	49 89 dc             	mov    %rbx,%r12
   18194:	49 d1 ec             	shr    %r12
   18197:	48 ff c6             	inc    %rsi
   1819a:	49 39 f4             	cmp    %rsi,%r12
            //
            // If we observe that the state has changed, it must be
            // due to a tickle, and then the Acquire means we also see
            // any events that occured before that.
            let state = self.state.load(Ordering::Acquire);
            if self.worker_is_sleepy(state, worker_index) {
   1819d:	0f 85 fe 00 00 00    	jne    182a1 <_ZN10rayon_core5sleep5Sleep5sleep17h0772af2aea612ed1E+0x121>
   181a3:	49 89 fe             	mov    %rdi,%r14
   181a6:	4c 8d 7f 08          	lea    0x8(%rdi),%r15
   181aa:	b8 01 00 00 00       	mov    $0x1,%eax
   181af:	c4 e1 f9 6e c0       	vmovq  %rax,%xmm0
   181b4:	c5 f9 7f 44 24 10    	vmovdqa %xmm0,0x10(%rsp)
   181ba:	49 8b 3f             	mov    (%r15),%rdi
   181bd:	ff 15 1d fe 22 00    	callq  *0x22fe1d(%rip)        # 247fe0 <pthread_mutex_lock@GLIBC_2.2.5>
   181c3:	64 48 83 3c 25 a0 ff 	cmpq   $0x1,%fs:0xffffffffffffffa0
   181ca:	ff ff 01 
   181cd:	75 61                	jne    18230 <_ZN10rayon_core5sleep5Sleep5sleep17h0772af2aea612ed1E+0xb0>
   181cf:	eb 50                	jmp    18221 <_ZN10rayon_core5sleep5Sleep5sleep17h0772af2aea612ed1E+0xa1>
   181d1:	c5 f9 6f 44 24 10    	vmovdqa 0x10(%rsp),%xmm0
   181d7:	64 c5 f9 7f 04 25 a0 	vmovdqa %xmm0,%fs:0xffffffffffffffa0
   181de:	ff ff ff 
   181e1:	64 48 c7 04 25 a8 ff 	movq   $0x0,%fs:0xffffffffffffffa8
   181e8:	ff ff 00 00 00 00 
   181ee:	66 90                	xchg   %ax,%ax
   181f0:	49 8b 7e 08          	mov    0x8(%r14),%rdi
   181f4:	ff 15 fe fc 22 00    	callq  *0x22fcfe(%rip)        # 247ef8 <pthread_mutex_unlock@GLIBC_2.2.5>
   181fa:	49 8b 1e             	mov    (%r14),%rbx
        (state >> 1) == (worker_index + 1)
   181fd:	48 89 d8             	mov    %rbx,%rax
   18200:	48 d1 e8             	shr    %rax
   18203:	4c 39 e0             	cmp    %r12,%rax
            if self.worker_is_sleepy(state, worker_index) {
   18206:	0f 85 95 00 00 00    	jne    182a1 <_ZN10rayon_core5sleep5Sleep5sleep17h0772af2aea612ed1E+0x121>
   1820c:	49 8b 3f             	mov    (%r15),%rdi
   1820f:	ff 15 cb fd 22 00    	callq  *0x22fdcb(%rip)        # 247fe0 <pthread_mutex_lock@GLIBC_2.2.5>
   18215:	64 48 83 3c 25 a0 ff 	cmpq   $0x1,%fs:0xffffffffffffffa0
   1821c:	ff ff 01 
   1821f:	75 0f                	jne    18230 <_ZN10rayon_core5sleep5Sleep5sleep17h0772af2aea612ed1E+0xb0>
   18221:	64 4c 8b 2c 25 a8 ff 	mov    %fs:0xffffffffffffffa8,%r13
   18228:	ff ff 
   1822a:	eb 17                	jmp    18243 <_ZN10rayon_core5sleep5Sleep5sleep17h0772af2aea612ed1E+0xc3>
   1822c:	0f 1f 40 00          	nopl   0x0(%rax)
   18230:	c5 f9 6f 44 24 10    	vmovdqa 0x10(%rsp),%xmm0
   18236:	64 c5 f9 7f 04 25 a0 	vmovdqa %xmm0,%fs:0xffffffffffffffa0
   1823d:	ff ff ff 
   18240:	45 31 ed             	xor    %r13d,%r13d
   18243:	64 4c 89 2c 25 a8 ff 	mov    %r13,%fs:0xffffffffffffffa8
   1824a:	ff ff 
   1824c:	4d 85 ed             	test   %r13,%r13
   1824f:	40 0f 95 c5          	setne  %bpl
   18253:	41 8a 46 10          	mov    0x10(%r14),%al
   18257:	84 c0                	test   %al,%al
   18259:	0f 85 e3 00 00 00    	jne    18342 <_ZN10rayon_core5sleep5Sleep5sleep17h0772af2aea612ed1E+0x1c2>
   1825f:	48 89 d8             	mov    %rbx,%rax
   18262:	b9 01 00 00 00       	mov    $0x1,%ecx
   18267:	f0 49 0f b1 0e       	lock cmpxchg %rcx,(%r14)
                // See the section on "Ensuring Sequentially
                // Consistency" in README.md for more details.
                //
                // The failure ordering doesn't matter since we are
                // about to spin around and do a fresh load.
                if self
   1826c:	74 42                	je     182b0 <_ZN10rayon_core5sleep5Sleep5sleep17h0772af2aea612ed1E+0x130>
   1826e:	4d 85 ed             	test   %r13,%r13
   18271:	0f 85 79 ff ff ff    	jne    181f0 <_ZN10rayon_core5sleep5Sleep5sleep17h0772af2aea612ed1E+0x70>
   18277:	64 48 83 3c 25 a0 ff 	cmpq   $0x1,%fs:0xffffffffffffffa0
   1827e:	ff ff 01 
   18281:	0f 85 4a ff ff ff    	jne    181d1 <_ZN10rayon_core5sleep5Sleep5sleep17h0772af2aea612ed1E+0x51>
   18287:	64 48 83 3c 25 a8 ff 	cmpq   $0x0,%fs:0xffffffffffffffa8
   1828e:	ff ff 00 
   18291:	0f 84 59 ff ff ff    	je     181f0 <_ZN10rayon_core5sleep5Sleep5sleep17h0772af2aea612ed1E+0x70>
   18297:	41 c6 46 10 01       	movb   $0x1,0x10(%r14)
   1829c:	e9 4f ff ff ff       	jmpq   181f0 <_ZN10rayon_core5sleep5Sleep5sleep17h0772af2aea612ed1E+0x70>
                    worker: worker_index
                });
                return;
            }
        }
    }
   182a1:	48 83 c4 28          	add    $0x28,%rsp
   182a5:	5b                   	pop    %rbx
   182a6:	41 5c                	pop    %r12
   182a8:	41 5d                	pop    %r13
   182aa:	41 5e                	pop    %r14
   182ac:	41 5f                	pop    %r15
   182ae:	5d                   	pop    %rbp
   182af:	c3                   	retq   
   182b0:	4c 89 3c 24          	mov    %r15,(%rsp)
   182b4:	40 88 6c 24 08       	mov    %bpl,0x8(%rsp)
   182b9:	49 8b 76 08          	mov    0x8(%r14),%rsi
   182bd:	31 c0                	xor    %eax,%eax
   182bf:	f0 49 0f b1 76 20    	lock cmpxchg %rsi,0x20(%r14)
   182c5:	74 09                	je     182d0 <_ZN10rayon_core5sleep5Sleep5sleep17h0772af2aea612ed1E+0x150>
   182c7:	48 39 f0             	cmp    %rsi,%rax
   182ca:	0f 85 9f 00 00 00    	jne    1836f <_ZN10rayon_core5sleep5Sleep5sleep17h0772af2aea612ed1E+0x1ef>
   182d0:	49 8b 7e 18          	mov    0x18(%r14),%rdi
   182d4:	ff 15 36 fb 22 00    	callq  *0x22fb36(%rip)        # 247e10 <pthread_cond_wait@GLIBC_2.3.2>
   182da:	41 8a 46 10          	mov    0x10(%r14),%al
   182de:	84 c0                	test   %al,%al
   182e0:	0f 85 a3 00 00 00    	jne    18389 <_ZN10rayon_core5sleep5Sleep5sleep17h0772af2aea612ed1E+0x209>
   182e6:	4d 85 ed             	test   %r13,%r13
   182e9:	75 40                	jne    1832b <_ZN10rayon_core5sleep5Sleep5sleep17h0772af2aea612ed1E+0x1ab>
   182eb:	64 48 83 3c 25 a0 ff 	cmpq   $0x1,%fs:0xffffffffffffffa0
   182f2:	ff ff 01 
   182f5:	75 13                	jne    1830a <_ZN10rayon_core5sleep5Sleep5sleep17h0772af2aea612ed1E+0x18a>
   182f7:	64 48 83 3c 25 a8 ff 	cmpq   $0x0,%fs:0xffffffffffffffa8
   182fe:	ff ff 00 
   18301:	74 28                	je     1832b <_ZN10rayon_core5sleep5Sleep5sleep17h0772af2aea612ed1E+0x1ab>
   18303:	41 c6 46 10 01       	movb   $0x1,0x10(%r14)
   18308:	eb 21                	jmp    1832b <_ZN10rayon_core5sleep5Sleep5sleep17h0772af2aea612ed1E+0x1ab>
   1830a:	b8 01 00 00 00       	mov    $0x1,%eax
   1830f:	c4 e1 f9 6e c0       	vmovq  %rax,%xmm0
   18314:	64 c5 f9 7f 04 25 a0 	vmovdqa %xmm0,%fs:0xffffffffffffffa0
   1831b:	ff ff ff 
   1831e:	64 48 c7 04 25 a8 ff 	movq   $0x0,%fs:0xffffffffffffffa8
   18325:	ff ff 00 00 00 00 
   1832b:	49 8b 3f             	mov    (%r15),%rdi
   1832e:	48 83 c4 28          	add    $0x28,%rsp
   18332:	5b                   	pop    %rbx
   18333:	41 5c                	pop    %r12
   18335:	41 5d                	pop    %r13
   18337:	41 5e                	pop    %r14
   18339:	41 5f                	pop    %r15
   1833b:	5d                   	pop    %rbp
   1833c:	ff 25 b6 fb 22 00    	jmpq   *0x22fbb6(%rip)        # 247ef8 <pthread_mutex_unlock@GLIBC_2.2.5>
   18342:	4c 89 3c 24          	mov    %r15,(%rsp)
   18346:	40 88 6c 24 08       	mov    %bpl,0x8(%rsp)
   1834b:	48 8d 3d 6f 55 02 00 	lea    0x2556f(%rip),%rdi        # 3d8c1 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0xf61>
   18352:	48 8d 0d d7 e7 22 00 	lea    0x22e7d7(%rip),%rcx        # 246b30 <__init_array_end+0xb20>
   18359:	4c 8d 05 58 e7 22 00 	lea    0x22e758(%rip),%r8        # 246ab8 <__init_array_end+0xaa8>
   18360:	48 89 e2             	mov    %rsp,%rdx
   18363:	be 2b 00 00 00       	mov    $0x2b,%esi
   18368:	e8 f3 18 ff ff       	callq  9c60 <_ZN4core6option18expect_none_failed17he0fec195c6e4c2ecE>
   1836d:	0f 0b                	ud2    
   1836f:	48 8d 3d d2 56 02 00 	lea    0x256d2(%rip),%rdi        # 3da48 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x10e8>
   18376:	48 8d 15 db f1 22 00 	lea    0x22f1db(%rip),%rdx        # 247558 <__init_array_end+0x1548>
   1837d:	be 36 00 00 00       	mov    $0x36,%esi
   18382:	e8 39 b1 00 00       	callq  234c0 <_ZN3std9panicking11begin_panic17hc5f3eabb2c219d56E>
   18387:	eb e4                	jmp    1836d <_ZN10rayon_core5sleep5Sleep5sleep17h0772af2aea612ed1E+0x1ed>
   18389:	4c 89 3c 24          	mov    %r15,(%rsp)
   1838d:	40 88 6c 24 08       	mov    %bpl,0x8(%rsp)
   18392:	48 8d 3d 28 55 02 00 	lea    0x25528(%rip),%rdi        # 3d8c1 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0xf61>
   18399:	48 8d 0d 90 e7 22 00 	lea    0x22e790(%rip),%rcx        # 246b30 <__init_array_end+0xb20>
   183a0:	4c 8d 05 29 e7 22 00 	lea    0x22e729(%rip),%r8        # 246ad0 <__init_array_end+0xac0>
   183a7:	48 89 e2             	mov    %rsp,%rdx
   183aa:	be 2b 00 00 00       	mov    $0x2b,%esi
   183af:	e8 ac 18 ff ff       	callq  9c60 <_ZN4core6option18expect_none_failed17he0fec195c6e4c2ecE>
   183b4:	eb b7                	jmp    1836d <_ZN10rayon_core5sleep5Sleep5sleep17h0772af2aea612ed1E+0x1ed>
   183b6:	eb 15                	jmp    183cd <_ZN10rayon_core5sleep5Sleep5sleep17h0772af2aea612ed1E+0x24d>
   183b8:	48 89 c3             	mov    %rax,%rbx
   183bb:	48 89 e7             	mov    %rsp,%rdi
   183be:	e8 8d 00 00 00       	callq  18450 <_ZN4core3ptr13drop_in_place17he239372901003c80E>
   183c3:	48 89 df             	mov    %rbx,%rdi
   183c6:	e8 d5 bc fe ff       	callq  40a0 <_Unwind_Resume@plt>
   183cb:	0f 0b                	ud2    
   183cd:	48 89 c3             	mov    %rax,%rbx
   183d0:	48 89 e7             	mov    %rsp,%rdi
   183d3:	e8 a8 d6 ff ff       	callq  15a80 <_ZN4core3ptr13drop_in_place17h422d82a10dad7834E>
   183d8:	48 89 df             	mov    %rbx,%rdi
   183db:	e8 c0 bc fe ff       	callq  40a0 <_Unwind_Resume@plt>
   183e0:	0f 0b                	ud2    
   183e2:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   183e9:	00 00 00 
   183ec:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000183f0 <_ZN4core3ptr13drop_in_place17hc443eae86009dba0E>:
   183f0:	50                   	push   %rax
   183f1:	e8 0a 00 00 00       	callq  18400 <_ZN74_$LT$rayon_core..unwind..AbortIfPanic$u20$as$u20$core..ops..drop..Drop$GT$4drop17ha61eb6e86dc16b22E>
   183f6:	0f 0b                	ud2    
   183f8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   183ff:	00 

0000000000018400 <_ZN74_$LT$rayon_core..unwind..AbortIfPanic$u20$as$u20$core..ops..drop..Drop$GT$4drop17ha61eb6e86dc16b22E>:
}

pub(super) struct AbortIfPanic;

impl Drop for AbortIfPanic {
    fn drop(&mut self) {
   18400:	48 83 ec 38          	sub    $0x38,%rsp
   18404:	48 8d 05 9d e6 22 00 	lea    0x22e69d(%rip),%rax        # 246aa8 <__init_array_end+0xa98>
   1840b:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   18410:	48 c7 44 24 10 01 00 	movq   $0x1,0x10(%rsp)
   18417:	00 00 
   18419:	48 c7 44 24 18 00 00 	movq   $0x0,0x18(%rsp)
   18420:	00 00 
   18422:	48 8d 05 0f 50 02 00 	lea    0x2500f(%rip),%rax        # 3d438 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0xad8>
   18429:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   1842e:	48 c7 44 24 30 00 00 	movq   $0x0,0x30(%rsp)
   18435:	00 00 
   18437:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
        eprintln!("Rayon: detected unexpected panic; aborting");
   1843c:	e8 0f 29 01 00       	callq  2ad50 <_ZN3std2io5stdio7_eprint17hf19d6fb036d8919dE>
        ::std::process::abort();
   18441:	e8 da 09 01 00       	callq  28e20 <_ZN3std7process5abort17he9433c577a649e1aE>
   18446:	0f 0b                	ud2    
   18448:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1844f:	00 

0000000000018450 <_ZN4core3ptr13drop_in_place17he239372901003c80E>:
   18450:	48 8b 07             	mov    (%rdi),%rax
   18453:	80 7f 08 00          	cmpb   $0x0,0x8(%rdi)
   18457:	74 09                	je     18462 <_ZN4core3ptr13drop_in_place17he239372901003c80E+0x12>
   18459:	48 8b 38             	mov    (%rax),%rdi
   1845c:	ff 25 96 fa 22 00    	jmpq   *0x22fa96(%rip)        # 247ef8 <pthread_mutex_unlock@GLIBC_2.2.5>
   18462:	64 48 83 3c 25 a0 ff 	cmpq   $0x1,%fs:0xffffffffffffffa0
   18469:	ff ff 01 
   1846c:	75 1c                	jne    1848a <_ZN4core3ptr13drop_in_place17he239372901003c80E+0x3a>
   1846e:	64 48 83 3c 25 a8 ff 	cmpq   $0x0,%fs:0xffffffffffffffa8
   18475:	ff ff 00 
   18478:	74 df                	je     18459 <_ZN4core3ptr13drop_in_place17he239372901003c80E+0x9>
   1847a:	c6 40 08 01          	movb   $0x1,0x8(%rax)
   1847e:	48 8b 07             	mov    (%rdi),%rax
   18481:	48 8b 38             	mov    (%rax),%rdi
   18484:	ff 25 6e fa 22 00    	jmpq   *0x22fa6e(%rip)        # 247ef8 <pthread_mutex_unlock@GLIBC_2.2.5>
   1848a:	b9 01 00 00 00       	mov    $0x1,%ecx
   1848f:	c4 e1 f9 6e c1       	vmovq  %rcx,%xmm0
   18494:	64 c5 f9 7f 04 25 a0 	vmovdqa %xmm0,%fs:0xffffffffffffffa0
   1849b:	ff ff ff 
   1849e:	64 48 c7 04 25 a8 ff 	movq   $0x0,%fs:0xffffffffffffffa8
   184a5:	ff ff 00 00 00 00 
   184ab:	48 8b 38             	mov    (%rax),%rdi
   184ae:	ff 25 44 fa 22 00    	jmpq   *0x22fa44(%rip)        # 247ef8 <pthread_mutex_unlock@GLIBC_2.2.5>
   184b4:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   184bb:	00 00 00 
   184be:	66 90                	xchg   %ax,%ax

00000000000184c0 <_ZN82_$LT$std..sys_common..poison..PoisonError$LT$T$GT$$u20$as$u20$core..fmt..Debug$GT$3fmt17h297239888ad80e3bE>:
   184c0:	48 89 f2             	mov    %rsi,%rdx
   184c3:	48 8d 3d ed 55 02 00 	lea    0x255ed(%rip),%rdi        # 3dab7 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x1157>
   184ca:	be 19 00 00 00       	mov    $0x19,%esi
   184cf:	e9 3c 20 ff ff       	jmpq   a510 <_ZN40_$LT$str$u20$as$u20$core..fmt..Debug$GT$3fmt17h942f30b282040ce2E>
   184d4:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   184db:	00 00 00 
   184de:	66 90                	xchg   %ax,%ax

00000000000184e0 <_ZN15crossbeam_epoch7default3pin17hcb1fa57e28276d90E>:
pub fn pin() -> Guard {
   184e0:	41 56                	push   %r14
   184e2:	53                   	push   %rbx
   184e3:	b8 28 10 00 00       	mov    $0x1028,%eax
   184e8:	e8 ab 0f 02 00       	callq  39498 <__rust_probestack>
   184ed:	48 29 c4             	sub    %rax,%rsp
   184f0:	64 48 83 3c 25 e0 fe 	cmpq   $0x1,%fs:0xfffffffffffffee0
   184f7:	ff ff 01 
   184fa:	0f 85 6d 02 00 00    	jne    1876d <_ZN15crossbeam_epoch7default3pin17hcb1fa57e28276d90E+0x28d>
   18500:	64 48 8b 04 25 00 00 	mov    %fs:0x0,%rax
   18507:	00 00 
   18509:	48 8d 80 e8 fe ff ff 	lea    -0x118(%rax),%rax
        unsafe { (*self.local).pin() }
   18510:	48 8b 08             	mov    (%rax),%rcx
        let guard = Guard { local: self };
   18513:	48 89 4c 24 18       	mov    %rcx,0x18(%rsp)
        let guard_count = self.guard_count.get();
   18518:	48 8b 81 20 08 00 00 	mov    0x820(%rcx),%rax
   1851f:	48 89 c2             	mov    %rax,%rdx
   18522:	48 ff c2             	inc    %rdx
   18525:	0f 84 69 02 00 00    	je     18794 <_ZN15crossbeam_epoch7default3pin17hcb1fa57e28276d90E+0x2b4>
   1852b:	48 89 91 20 08 00 00 	mov    %rdx,0x820(%rcx)
        if guard_count == 0 {
   18532:	48 85 c0             	test   %rax,%rax
   18535:	75 3f                	jne    18576 <_ZN15crossbeam_epoch7default3pin17hcb1fa57e28276d90E+0x96>
            let global_epoch = self.global().epoch.load(Ordering::Relaxed);
   18537:	48 8b 41 10          	mov    0x10(%rcx),%rax
   1853b:	48 8b 90 80 01 00 00 	mov    0x180(%rax),%rdx
   18542:	48 83 ca 01          	or     $0x1,%rdx
   18546:	31 c0                	xor    %eax,%eax
   18548:	f0 48 0f b1 51 08    	lock cmpxchg %rdx,0x8(%rcx)
            let count = self.pin_count.get();
   1854e:	48 8b 81 30 08 00 00 	mov    0x830(%rcx),%rax
   18555:	48 8d 50 01          	lea    0x1(%rax),%rdx
   18559:	48 89 91 30 08 00 00 	mov    %rdx,0x830(%rcx)
            if count.0 % Self::PINNINGS_BETWEEN_COLLECT == 0 {
   18560:	a8 7f                	test   $0x7f,%al
   18562:	75 12                	jne    18576 <_ZN15crossbeam_epoch7default3pin17hcb1fa57e28276d90E+0x96>
                self.global().collect(&guard);
   18564:	48 8b 79 10          	mov    0x10(%rcx),%rdi
   18568:	48 83 ef 80          	sub    $0xffffffffffffff80,%rdi
   1856c:	48 8d 74 24 18       	lea    0x18(%rsp),%rsi
   18571:	e8 ca 85 ff ff       	callq  10b40 <_ZN15crossbeam_epoch8internal6Global7collect17h831494d6c7d86e73E>
        guard
   18576:	48 8b 5c 24 18       	mov    0x18(%rsp),%rbx
   1857b:	31 c0                	xor    %eax,%eax
   1857d:	48 89 04 24          	mov    %rax,(%rsp)
   18581:	48 89 5c 24 08       	mov    %rbx,0x8(%rsp)
   18586:	48 85 c0             	test   %rax,%rax
   18589:	0f 84 95 01 00 00    	je     18724 <_ZN15crossbeam_epoch7default3pin17hcb1fa57e28276d90E+0x244>
   1858f:	48 8d 05 ca fa 22 00 	lea    0x22faca(%rip),%rax        # 248060 <_ZN79_$LT$crossbeam_epoch..default..COLLECTOR$u20$as$u20$core..ops..deref..Deref$GT$5deref11__stability4LAZY17h2c7e93b6d170d00fE>
   18596:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   1859b:	48 8b 05 c6 fa 22 00 	mov    0x22fac6(%rip),%rax        # 248068 <_ZN79_$LT$crossbeam_epoch..default..COLLECTOR$u20$as$u20$core..ops..deref..Deref$GT$5deref11__stability4LAZY17h2c7e93b6d170d00fE+0x8>
   185a2:	48 83 f8 03          	cmp    $0x3,%rax
   185a6:	74 32                	je     185da <_ZN15crossbeam_epoch7default3pin17hcb1fa57e28276d90E+0xfa>
   185a8:	48 8d 44 24 10       	lea    0x10(%rsp),%rax
   185ad:	48 89 84 24 20 08 00 	mov    %rax,0x820(%rsp)
   185b4:	00 
   185b5:	48 8d 84 24 20 08 00 	lea    0x820(%rsp),%rax
   185bc:	00 
   185bd:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   185c2:	48 8d 3d 9f fa 22 00 	lea    0x22fa9f(%rip),%rdi        # 248068 <_ZN79_$LT$crossbeam_epoch..default..COLLECTOR$u20$as$u20$core..ops..deref..Deref$GT$5deref11__stability4LAZY17h2c7e93b6d170d00fE+0x8>
   185c9:	48 8d 15 18 e2 22 00 	lea    0x22e218(%rip),%rdx        # 2467e8 <__init_array_end+0x7d8>
   185d0:	48 8d 74 24 18       	lea    0x18(%rsp),%rsi
   185d5:	e8 b6 2c 01 00       	callq  2b290 <_ZN3std4sync4once4Once10call_inner17hfabbd1bc15485aefE>
   185da:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
        Local::register(self)
   185df:	4c 8b 30             	mov    (%rax),%r14
   185e2:	f0 49 ff 06          	lock incq (%r14)
   185e6:	0f 8e c2 01 00 00    	jle    187ae <_ZN15crossbeam_epoch7default3pin17hcb1fa57e28276d90E+0x2ce>
   185ec:	48 8d 9c 24 20 08 00 	lea    0x820(%rsp),%rbx
   185f3:	00 
        Self::default()
   185f4:	48 89 df             	mov    %rbx,%rdi
   185f7:	e8 a4 79 ff ff       	callq  ffa0 <_ZN73_$LT$crossbeam_epoch..internal..Bag$u20$as$u20$core..default..Default$GT$7default17h06d0746c5d364cb6E>
   185fc:	48 8d 7c 24 18       	lea    0x18(%rsp),%rdi
        Self::from(Box::new(value))
   18601:	ba 08 08 00 00       	mov    $0x808,%edx
   18606:	48 89 de             	mov    %rbx,%rsi
   18609:	ff 15 c1 f8 22 00    	callq  *0x22f8c1(%rip)        # 247ed0 <memcpy@GLIBC_2.14>
   1860f:	bf 38 08 00 00       	mov    $0x838,%edi
   18614:	ff 15 ee f8 22 00    	callq  *0x22f8ee(%rip)        # 247f08 <malloc@GLIBC_2.2.5>
   1861a:	48 85 c0             	test   %rax,%rax
   1861d:	0f 84 8f 01 00 00    	je     187b2 <_ZN15crossbeam_epoch7default3pin17hcb1fa57e28276d90E+0x2d2>
   18623:	48 89 c3             	mov    %rax,%rbx
   18626:	c5 f8 57 c0          	vxorps %xmm0,%xmm0,%xmm0
   1862a:	c5 f8 11 00          	vmovups %xmm0,(%rax)
   1862e:	4c 89 70 10          	mov    %r14,0x10(%rax)
   18632:	48 8d 78 18          	lea    0x18(%rax),%rdi
   18636:	48 8d 74 24 18       	lea    0x18(%rsp),%rsi
   1863b:	ba 08 08 00 00       	mov    $0x808,%edx
   18640:	ff 15 8a f8 22 00    	callq  *0x22f88a(%rip)        # 247ed0 <memcpy@GLIBC_2.14>
   18646:	c5 f8 28 05 c2 1d 02 	vmovaps 0x21dc2(%rip),%xmm0        # 3a410 <_fini+0xcc>
   1864d:	00 
   1864e:	c5 f8 11 83 20 08 00 	vmovups %xmm0,0x820(%rbx)
   18655:	00 
   18656:	48 c7 83 30 08 00 00 	movq   $0x0,0x830(%rbx)
   1865d:	00 00 00 00 
    let raw = (data & !low_bits::<T>()) as *mut T;
   18661:	48 83 e3 f8          	and    $0xfffffffffffffff8,%rbx
   18665:	49 8b 86 00 02 00 00 	mov    0x200(%r14),%rax
   1866c:	0f 1f 40 00          	nopl   0x0(%rax)
   18670:	48 89 03             	mov    %rax,(%rbx)
   18673:	f0 49 0f b1 9e 00 02 	lock cmpxchg %rbx,0x200(%r14)
   1867a:	00 00 
   1867c:	75 f2                	jne    18670 <_ZN15crossbeam_epoch7default3pin17hcb1fa57e28276d90E+0x190>
        .unwrap_or_else(|_| f(&COLLECTOR.register()))
   1867e:	48 89 9c 24 20 08 00 	mov    %rbx,0x820(%rsp)
   18685:	00 
        let guard = Guard { local: self };
   18686:	48 89 5c 24 18       	mov    %rbx,0x18(%rsp)
        let guard_count = self.guard_count.get();
   1868b:	48 8b 83 20 08 00 00 	mov    0x820(%rbx),%rax
   18692:	48 89 c1             	mov    %rax,%rcx
   18695:	48 ff c1             	inc    %rcx
   18698:	0f 84 25 01 00 00    	je     187c3 <_ZN15crossbeam_epoch7default3pin17hcb1fa57e28276d90E+0x2e3>
   1869e:	48 89 8b 20 08 00 00 	mov    %rcx,0x820(%rbx)
        if guard_count == 0 {
   186a5:	48 85 c0             	test   %rax,%rax
   186a8:	75 3f                	jne    186e9 <_ZN15crossbeam_epoch7default3pin17hcb1fa57e28276d90E+0x209>
            let global_epoch = self.global().epoch.load(Ordering::Relaxed);
   186aa:	48 8b 43 10          	mov    0x10(%rbx),%rax
   186ae:	48 8b 88 80 01 00 00 	mov    0x180(%rax),%rcx
   186b5:	48 83 c9 01          	or     $0x1,%rcx
   186b9:	31 c0                	xor    %eax,%eax
   186bb:	f0 48 0f b1 4b 08    	lock cmpxchg %rcx,0x8(%rbx)
            let count = self.pin_count.get();
   186c1:	48 8b 83 30 08 00 00 	mov    0x830(%rbx),%rax
   186c8:	48 8d 48 01          	lea    0x1(%rax),%rcx
   186cc:	48 89 8b 30 08 00 00 	mov    %rcx,0x830(%rbx)
            if count.0 % Self::PINNINGS_BETWEEN_COLLECT == 0 {
   186d3:	a8 7f                	test   $0x7f,%al
   186d5:	75 12                	jne    186e9 <_ZN15crossbeam_epoch7default3pin17hcb1fa57e28276d90E+0x209>
                self.global().collect(&guard);
   186d7:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
   186db:	48 83 ef 80          	sub    $0xffffffffffffff80,%rdi
   186df:	48 8d 74 24 18       	lea    0x18(%rsp),%rsi
   186e4:	e8 57 84 ff ff       	callq  10b40 <_ZN15crossbeam_epoch8internal6Global7collect17h831494d6c7d86e73E>
        guard
   186e9:	48 8b 5c 24 18       	mov    0x18(%rsp),%rbx
            Local::release_handle(&*self.local);
   186ee:	48 8b bc 24 20 08 00 	mov    0x820(%rsp),%rdi
   186f5:	00 
        let handle_count = self.handle_count.get();
   186f6:	48 8b 87 28 08 00 00 	mov    0x828(%rdi),%rax
        self.handle_count.set(handle_count - 1);
   186fd:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
   18701:	48 89 8f 28 08 00 00 	mov    %rcx,0x828(%rdi)
        if guard_count == 0 && handle_count == 1 {
   18708:	48 83 bf 20 08 00 00 	cmpq   $0x0,0x820(%rdi)
   1870f:	00 
   18710:	75 0b                	jne    1871d <_ZN15crossbeam_epoch7default3pin17hcb1fa57e28276d90E+0x23d>
   18712:	48 83 f8 01          	cmp    $0x1,%rax
   18716:	75 05                	jne    1871d <_ZN15crossbeam_epoch7default3pin17hcb1fa57e28276d90E+0x23d>
            self.finalize();
   18718:	e8 73 8c ff ff       	callq  11390 <_ZN15crossbeam_epoch8internal5Local8finalize17hb072c1707f33cb8dE>
   1871d:	48 83 3c 24 00       	cmpq   $0x0,(%rsp)
   18722:	74 0e                	je     18732 <_ZN15crossbeam_epoch7default3pin17hcb1fa57e28276d90E+0x252>
}
   18724:	48 89 d8             	mov    %rbx,%rax
   18727:	48 81 c4 28 10 00 00 	add    $0x1028,%rsp
   1872e:	5b                   	pop    %rbx
   1872f:	41 5e                	pop    %r14
   18731:	c3                   	retq   
   18732:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   18737:	48 85 ff             	test   %rdi,%rdi
   1873a:	74 e8                	je     18724 <_ZN15crossbeam_epoch7default3pin17hcb1fa57e28276d90E+0x244>
        let guard_count = self.guard_count.get();
   1873c:	48 8b 87 20 08 00 00 	mov    0x820(%rdi),%rax
        self.guard_count.set(guard_count - 1);
   18743:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
   18747:	48 89 8f 20 08 00 00 	mov    %rcx,0x820(%rdi)
        if guard_count == 1 {
   1874e:	48 83 f8 01          	cmp    $0x1,%rax
   18752:	75 d0                	jne    18724 <_ZN15crossbeam_epoch7default3pin17hcb1fa57e28276d90E+0x244>
   18754:	48 c7 47 08 00 00 00 	movq   $0x0,0x8(%rdi)
   1875b:	00 
            if self.handle_count.get() == 0 {
   1875c:	48 83 bf 28 08 00 00 	cmpq   $0x0,0x828(%rdi)
   18763:	00 
   18764:	75 be                	jne    18724 <_ZN15crossbeam_epoch7default3pin17hcb1fa57e28276d90E+0x244>
                self.finalize();
   18766:	e8 25 8c ff ff       	callq  11390 <_ZN15crossbeam_epoch8internal5Local8finalize17hb072c1707f33cb8dE>
   1876b:	eb b7                	jmp    18724 <_ZN15crossbeam_epoch7default3pin17hcb1fa57e28276d90E+0x244>
   1876d:	e8 6e 97 ff ff       	callq  11ee0 <_ZN3std6thread5local4fast12Key$LT$T$GT$14try_initialize17hf8b754cf35e0a20aE>
   18772:	48 85 c0             	test   %rax,%rax
   18775:	0f 85 95 fd ff ff    	jne    18510 <_ZN15crossbeam_epoch7default3pin17hcb1fa57e28276d90E+0x30>
   1877b:	b8 01 00 00 00       	mov    $0x1,%eax
   18780:	48 89 04 24          	mov    %rax,(%rsp)
   18784:	48 89 5c 24 08       	mov    %rbx,0x8(%rsp)
   18789:	48 85 c0             	test   %rax,%rax
   1878c:	0f 85 fd fd ff ff    	jne    1858f <_ZN15crossbeam_epoch7default3pin17hcb1fa57e28276d90E+0xaf>
   18792:	eb 90                	jmp    18724 <_ZN15crossbeam_epoch7default3pin17hcb1fa57e28276d90E+0x244>
   18794:	48 8d 3d 86 4b 02 00 	lea    0x24b86(%rip),%rdi        # 3d321 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x9c1>
   1879b:	48 8d 15 76 e3 22 00 	lea    0x22e376(%rip),%rdx        # 246b18 <__init_array_end+0xb08>
   187a2:	be 2b 00 00 00       	mov    $0x2b,%esi
   187a7:	e8 04 ec fe ff       	callq  73b0 <_ZN4core9panicking5panic17h6861470adfbddef8E>
   187ac:	eb 2d                	jmp    187db <_ZN15crossbeam_epoch7default3pin17hcb1fa57e28276d90E+0x2fb>
   187ae:	0f 0b                	ud2    
   187b0:	0f 0b                	ud2    
   187b2:	bf 38 08 00 00       	mov    $0x838,%edi
   187b7:	be 08 00 00 00       	mov    $0x8,%esi
   187bc:	e8 ff cc fe ff       	callq  54c0 <_ZN5alloc5alloc18handle_alloc_error17hf7bb8682f6c8b1d7E>
   187c1:	0f 0b                	ud2    
   187c3:	48 8d 3d 57 4b 02 00 	lea    0x24b57(%rip),%rdi        # 3d321 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x9c1>
   187ca:	48 8d 15 47 e3 22 00 	lea    0x22e347(%rip),%rdx        # 246b18 <__init_array_end+0xb08>
   187d1:	be 2b 00 00 00       	mov    $0x2b,%esi
   187d6:	e8 d5 eb fe ff       	callq  73b0 <_ZN4core9panicking5panic17h6861470adfbddef8E>
   187db:	0f 0b                	ud2    
   187dd:	48 89 c3             	mov    %rax,%rbx
   187e0:	48 8d 7c 24 18       	lea    0x18(%rsp),%rdi
    }
   187e5:	e8 e6 cd ff ff       	callq  155d0 <_ZN4core3ptr13drop_in_place17h45b938d697250b2cE>
   187ea:	48 8d bc 24 20 08 00 	lea    0x820(%rsp),%rdi
   187f1:	00 
        .unwrap_or_else(|_| f(&COLLECTOR.register()))
   187f2:	e8 19 ce ff ff       	callq  15610 <_ZN4core3ptr13drop_in_place17h40f816241c0110baE>
   187f7:	48 83 3c 24 00       	cmpq   $0x0,(%rsp)
   187fc:	74 30                	je     1882e <_ZN15crossbeam_epoch7default3pin17hcb1fa57e28276d90E+0x34e>
   187fe:	48 89 df             	mov    %rbx,%rdi
   18801:	e8 9a b8 fe ff       	callq  40a0 <_Unwind_Resume@plt>
   18806:	0f 0b                	ud2    
   18808:	48 89 c3             	mov    %rax,%rbx
   1880b:	eb dd                	jmp    187ea <_ZN15crossbeam_epoch7default3pin17hcb1fa57e28276d90E+0x30a>
   1880d:	48 89 c3             	mov    %rax,%rbx
   18810:	48 8d 7c 24 18       	lea    0x18(%rsp),%rdi
   18815:	e8 b6 cd ff ff       	callq  155d0 <_ZN4core3ptr13drop_in_place17h45b938d697250b2cE>
   1881a:	48 89 df             	mov    %rbx,%rdi
   1881d:	e8 7e b8 fe ff       	callq  40a0 <_Unwind_Resume@plt>
   18822:	0f 0b                	ud2    
   18824:	48 89 c3             	mov    %rax,%rbx
   18827:	48 83 3c 24 00       	cmpq   $0x0,(%rsp)
   1882c:	75 d0                	jne    187fe <_ZN15crossbeam_epoch7default3pin17hcb1fa57e28276d90E+0x31e>
   1882e:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   18833:	e8 98 cd ff ff       	callq  155d0 <_ZN4core3ptr13drop_in_place17h45b938d697250b2cE>
   18838:	48 89 df             	mov    %rbx,%rdi
   1883b:	e8 60 b8 fe ff       	callq  40a0 <_Unwind_Resume@plt>
   18840:	0f 0b                	ud2    
   18842:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   18849:	00 00 00 
   1884c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000018850 <_ZN15crossbeam_deque15Worker$LT$T$GT$6resize17h844bd88e970526a8E>:
    unsafe fn resize(&self, new_cap: usize) {
   18850:	55                   	push   %rbp
   18851:	41 57                	push   %r15
   18853:	41 56                	push   %r14
   18855:	41 55                	push   %r13
   18857:	41 54                	push   %r12
   18859:	53                   	push   %rbx
   1885a:	48 83 ec 38          	sub    $0x38,%rsp
        let b = self.inner.back.load(Ordering::Relaxed);
   1885e:	48 8b 07             	mov    (%rdi),%rax
   18861:	4c 8b a8 08 01 00 00 	mov    0x108(%rax),%r13
   18868:	48 8b a8 00 01 00 00 	mov    0x100(%rax),%rbp
   1886f:	b9 10 00 00 00       	mov    $0x10,%ecx
   18874:	48 89 74 24 10       	mov    %rsi,0x10(%rsp)
   18879:	48 89 f0             	mov    %rsi,%rax
   1887c:	48 f7 e1             	mul    %rcx
   1887f:	0f 80 29 02 00 00    	jo     18aae <_ZN15crossbeam_deque15Worker$LT$T$GT$6resize17h844bd88e970526a8E+0x25e>
   18885:	49 89 c4             	mov    %rax,%r12
   18888:	4c 8b 77 08          	mov    0x8(%rdi),%r14
   1888c:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
   18891:	4c 8b 7f 10          	mov    0x10(%rdi),%r15
   18895:	48 85 c0             	test   %rax,%rax
   18898:	74 24                	je     188be <_ZN15crossbeam_deque15Worker$LT$T$GT$6resize17h844bd88e970526a8E+0x6e>
   1889a:	4c 89 e7             	mov    %r12,%rdi
   1889d:	ff 15 65 f6 22 00    	callq  *0x22f665(%rip)        # 247f08 <malloc@GLIBC_2.2.5>
   188a3:	48 85 c0             	test   %rax,%rax
   188a6:	0f 84 1a 02 00 00    	je     18ac6 <_ZN15crossbeam_deque15Worker$LT$T$GT$6resize17h844bd88e970526a8E+0x276>
   188ac:	48 89 c3             	mov    %rax,%rbx
        while i != b {
   188af:	49 39 ed             	cmp    %rbp,%r13
   188b2:	4c 8b 64 24 10       	mov    0x10(%rsp),%r12
   188b7:	75 18                	jne    188d1 <_ZN15crossbeam_deque15Worker$LT$T$GT$6resize17h844bd88e970526a8E+0x81>
   188b9:	e9 fe 00 00 00       	jmpq   189bc <_ZN15crossbeam_deque15Worker$LT$T$GT$6resize17h844bd88e970526a8E+0x16c>
   188be:	bb 08 00 00 00       	mov    $0x8,%ebx
   188c3:	49 39 ed             	cmp    %rbp,%r13
   188c6:	4c 8b 64 24 10       	mov    0x10(%rsp),%r12
   188cb:	0f 84 eb 00 00 00    	je     189bc <_ZN15crossbeam_deque15Worker$LT$T$GT$6resize17h844bd88e970526a8E+0x16c>
   188d1:	49 ff cf             	dec    %r15
   188d4:	49 8d 44 24 ff       	lea    -0x1(%r12),%rax
   188d9:	44 89 ea             	mov    %r13d,%edx
   188dc:	29 ea                	sub    %ebp,%edx
   188de:	48 89 e9             	mov    %rbp,%rcx
   188e1:	48 f7 d1             	not    %rcx
   188e4:	4c 01 e9             	add    %r13,%rcx
   188e7:	48 83 e2 03          	and    $0x3,%rdx
   188eb:	74 2a                	je     18917 <_ZN15crossbeam_deque15Worker$LT$T$GT$6resize17h844bd88e970526a8E+0xc7>
   188ed:	0f 1f 00             	nopl   (%rax)
        self.ptr.offset(index & (self.cap - 1) as isize)
   188f0:	48 89 ee             	mov    %rbp,%rsi
   188f3:	4c 21 fe             	and    %r15,%rsi
   188f6:	48 c1 e6 04          	shl    $0x4,%rsi
   188fa:	48 89 ef             	mov    %rbp,%rdi
   188fd:	48 21 c7             	and    %rax,%rdi
   18900:	48 c1 e7 04          	shl    $0x4,%rdi
   18904:	c4 c1 78 10 04 36    	vmovups (%r14,%rsi,1),%xmm0
   1890a:	c5 f8 11 04 3b       	vmovups %xmm0,(%rbx,%rdi,1)
   1890f:	48 ff c5             	inc    %rbp
        while i != b {
   18912:	48 ff ca             	dec    %rdx
   18915:	75 d9                	jne    188f0 <_ZN15crossbeam_deque15Worker$LT$T$GT$6resize17h844bd88e970526a8E+0xa0>
   18917:	48 83 f9 03          	cmp    $0x3,%rcx
   1891b:	0f 82 9b 00 00 00    	jb     189bc <_ZN15crossbeam_deque15Worker$LT$T$GT$6resize17h844bd88e970526a8E+0x16c>
   18921:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   18928:	00 00 00 
   1892b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
        self.ptr.offset(index & (self.cap - 1) as isize)
   18930:	48 89 e9             	mov    %rbp,%rcx
   18933:	4c 21 f9             	and    %r15,%rcx
   18936:	48 c1 e1 04          	shl    $0x4,%rcx
   1893a:	48 89 ea             	mov    %rbp,%rdx
   1893d:	48 21 c2             	and    %rax,%rdx
   18940:	48 c1 e2 04          	shl    $0x4,%rdx
   18944:	c4 c1 78 10 04 0e    	vmovups (%r14,%rcx,1),%xmm0
   1894a:	c5 f8 11 04 13       	vmovups %xmm0,(%rbx,%rdx,1)
   1894f:	48 8d 4d 01          	lea    0x1(%rbp),%rcx
   18953:	48 89 ca             	mov    %rcx,%rdx
   18956:	4c 21 fa             	and    %r15,%rdx
   18959:	48 c1 e2 04          	shl    $0x4,%rdx
   1895d:	48 21 c1             	and    %rax,%rcx
   18960:	48 c1 e1 04          	shl    $0x4,%rcx
   18964:	c4 c1 78 10 04 16    	vmovups (%r14,%rdx,1),%xmm0
   1896a:	c5 f8 11 04 0b       	vmovups %xmm0,(%rbx,%rcx,1)
   1896f:	48 8d 4d 02          	lea    0x2(%rbp),%rcx
   18973:	48 89 ca             	mov    %rcx,%rdx
   18976:	4c 21 fa             	and    %r15,%rdx
   18979:	48 c1 e2 04          	shl    $0x4,%rdx
   1897d:	48 21 c1             	and    %rax,%rcx
   18980:	48 c1 e1 04          	shl    $0x4,%rcx
   18984:	c4 c1 78 10 04 16    	vmovups (%r14,%rdx,1),%xmm0
   1898a:	c5 f8 11 04 0b       	vmovups %xmm0,(%rbx,%rcx,1)
   1898f:	48 8d 4d 03          	lea    0x3(%rbp),%rcx
   18993:	48 89 ca             	mov    %rcx,%rdx
   18996:	4c 21 fa             	and    %r15,%rdx
   18999:	48 c1 e2 04          	shl    $0x4,%rdx
   1899d:	48 21 c1             	and    %rax,%rcx
   189a0:	48 c1 e1 04          	shl    $0x4,%rcx
   189a4:	c4 c1 78 10 04 16    	vmovups (%r14,%rdx,1),%xmm0
   189aa:	c5 f8 11 04 0b       	vmovups %xmm0,(%rbx,%rcx,1)
        while i != b {
   189af:	48 83 c5 04          	add    $0x4,%rbp
   189b3:	4c 39 ed             	cmp    %r13,%rbp
   189b6:	0f 85 74 ff ff ff    	jne    18930 <_ZN15crossbeam_deque15Worker$LT$T$GT$6resize17h844bd88e970526a8E+0xe0>
        let guard = &epoch::pin();
   189bc:	e8 1f fb ff ff       	callq  184e0 <_ZN15crossbeam_epoch7default3pin17hcb1fa57e28276d90E>
   189c1:	48 89 04 24          	mov    %rax,(%rsp)
   189c5:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   189ca:	48 89 58 08          	mov    %rbx,0x8(%rax)
   189ce:	4c 89 60 10          	mov    %r12,0x10(%rax)
            self.inner
   189d2:	48 8b 28             	mov    (%rax),%rbp
   189d5:	bf 10 00 00 00       	mov    $0x10,%edi
   189da:	ff 15 28 f5 22 00    	callq  *0x22f528(%rip)        # 247f08 <malloc@GLIBC_2.2.5>
   189e0:	48 85 c0             	test   %rax,%rax
   189e3:	0f 84 cc 00 00 00    	je     18ab5 <_ZN15crossbeam_deque15Worker$LT$T$GT$6resize17h844bd88e970526a8E+0x265>
   189e9:	49 89 c7             	mov    %rax,%r15
   189ec:	48 89 18             	mov    %rbx,(%rax)
   189ef:	4c 89 60 08          	mov    %r12,0x8(%rax)
   189f3:	4c 87 bd 80 00 00 00 	xchg   %r15,0x80(%rbp)
        if let Some(local) = self.local.as_ref() {
   189fa:	48 8b 1c 24          	mov    (%rsp),%rbx
   189fe:	48 85 db             	test   %rbx,%rbx
   18a01:	74 2f                	je     18a32 <_ZN15crossbeam_deque15Worker$LT$T$GT$6resize17h844bd88e970526a8E+0x1e2>
                Deferred {
   18a03:	48 8d 05 36 cc ff ff 	lea    -0x33ca(%rip),%rax        # 15640 <_ZN15crossbeam_epoch8deferred8Deferred3new4call17h28e4b55e9e6b77c9E>
   18a0a:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   18a0f:	4c 89 7c 24 20       	mov    %r15,0x20(%rsp)
   18a14:	48 8d 74 24 18       	lea    0x18(%rsp),%rsi
            local.defer(Deferred::new(move || drop(f())), self);
   18a19:	48 89 df             	mov    %rbx,%rdi
   18a1c:	e8 4f 85 ff ff       	callq  10f70 <_ZN15crossbeam_epoch8internal5Local5defer17hb03f4139d4e20a39E>
   18a21:	48 b8 c0 ff ff ff ff 	movabs $0xfffffffffffffc0,%rax
   18a28:	ff ff 0f 
        if mem::size_of::<T>() * new_cap >= FLUSH_THRESHOLD_BYTES {
   18a2b:	49 85 c4             	test   %rax,%r12
   18a2e:	75 2e                	jne    18a5e <_ZN15crossbeam_deque15Worker$LT$T$GT$6resize17h844bd88e970526a8E+0x20e>
   18a30:	eb 34                	jmp    18a66 <_ZN15crossbeam_deque15Worker$LT$T$GT$6resize17h844bd88e970526a8E+0x216>
   18a32:	49 83 e7 f8          	and    $0xfffffffffffffff8,%r15
   18a36:	49 83 7f 08 00       	cmpq   $0x0,0x8(%r15)
   18a3b:	74 09                	je     18a46 <_ZN15crossbeam_deque15Worker$LT$T$GT$6resize17h844bd88e970526a8E+0x1f6>
   18a3d:	49 8b 3f             	mov    (%r15),%rdi
   18a40:	ff 15 32 f3 22 00    	callq  *0x22f332(%rip)        # 247d78 <free@GLIBC_2.2.5>
   18a46:	4c 89 ff             	mov    %r15,%rdi
   18a49:	ff 15 29 f3 22 00    	callq  *0x22f329(%rip)        # 247d78 <free@GLIBC_2.2.5>
   18a4f:	48 b8 c0 ff ff ff ff 	movabs $0xfffffffffffffc0,%rax
   18a56:	ff ff 0f 
   18a59:	49 85 c4             	test   %rax,%r12
   18a5c:	74 08                	je     18a66 <_ZN15crossbeam_deque15Worker$LT$T$GT$6resize17h844bd88e970526a8E+0x216>
   18a5e:	48 89 e7             	mov    %rsp,%rdi
            guard.flush();
   18a61:	e8 ea 7e ff ff       	callq  10950 <_ZN15crossbeam_epoch5guard5Guard5flush17hdb3eebcd28944394E>
        if let Some(local) = self.local.as_ref() {
   18a66:	48 85 db             	test   %rbx,%rbx
        if let Some(local) = unsafe { self.local.as_ref() } {
   18a69:	74 2a                	je     18a95 <_ZN15crossbeam_deque15Worker$LT$T$GT$6resize17h844bd88e970526a8E+0x245>
        let guard_count = self.guard_count.get();
   18a6b:	48 8b 83 20 08 00 00 	mov    0x820(%rbx),%rax
        self.guard_count.set(guard_count - 1);
   18a72:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
   18a76:	48 89 8b 20 08 00 00 	mov    %rcx,0x820(%rbx)
        if guard_count == 1 {
   18a7d:	48 83 f8 01          	cmp    $0x1,%rax
   18a81:	75 12                	jne    18a95 <_ZN15crossbeam_deque15Worker$LT$T$GT$6resize17h844bd88e970526a8E+0x245>
   18a83:	48 c7 43 08 00 00 00 	movq   $0x0,0x8(%rbx)
   18a8a:	00 
            if self.handle_count.get() == 0 {
   18a8b:	48 83 bb 28 08 00 00 	cmpq   $0x0,0x828(%rbx)
   18a92:	00 
   18a93:	74 0f                	je     18aa4 <_ZN15crossbeam_deque15Worker$LT$T$GT$6resize17h844bd88e970526a8E+0x254>
    }
   18a95:	48 83 c4 38          	add    $0x38,%rsp
   18a99:	5b                   	pop    %rbx
   18a9a:	41 5c                	pop    %r12
   18a9c:	41 5d                	pop    %r13
   18a9e:	41 5e                	pop    %r14
   18aa0:	41 5f                	pop    %r15
   18aa2:	5d                   	pop    %rbp
   18aa3:	c3                   	retq   
                self.finalize();
   18aa4:	48 89 df             	mov    %rbx,%rdi
   18aa7:	e8 e4 88 ff ff       	callq  11390 <_ZN15crossbeam_epoch8internal5Local8finalize17hb072c1707f33cb8dE>
   18aac:	eb e7                	jmp    18a95 <_ZN15crossbeam_deque15Worker$LT$T$GT$6resize17h844bd88e970526a8E+0x245>
   18aae:	e8 0d ab ff ff       	callq  135c0 <_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$11allocate_in28_$u7b$$u7b$closure$u7d$$u7d$17h571564fc3a49ddd9E>
   18ab3:	0f 0b                	ud2    
   18ab5:	bf 10 00 00 00       	mov    $0x10,%edi
   18aba:	be 08 00 00 00       	mov    $0x8,%esi
   18abf:	e8 fc c9 fe ff       	callq  54c0 <_ZN5alloc5alloc18handle_alloc_error17hf7bb8682f6c8b1d7E>
   18ac4:	0f 0b                	ud2    
   18ac6:	be 08 00 00 00       	mov    $0x8,%esi
   18acb:	4c 89 e7             	mov    %r12,%rdi
   18ace:	e8 ed c9 fe ff       	callq  54c0 <_ZN5alloc5alloc18handle_alloc_error17hf7bb8682f6c8b1d7E>
   18ad3:	0f 0b                	ud2    
   18ad5:	48 89 c3             	mov    %rax,%rbx
   18ad8:	48 89 e7             	mov    %rsp,%rdi
   18adb:	e8 f0 ca ff ff       	callq  155d0 <_ZN4core3ptr13drop_in_place17h45b938d697250b2cE>
   18ae0:	48 89 df             	mov    %rbx,%rdi
   18ae3:	e8 b8 b5 fe ff       	callq  40a0 <_Unwind_Resume@plt>
   18ae8:	0f 0b                	ud2    
   18aea:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000018af0 <_ZN10rayon_core5latch9LockLatch14wait_and_reset17hdc8f700ff47d9cbaE>:
    pub(super) fn wait_and_reset(&self) {
   18af0:	55                   	push   %rbp
   18af1:	41 57                	push   %r15
   18af3:	41 56                	push   %r14
   18af5:	53                   	push   %rbx
   18af6:	48 83 ec 18          	sub    $0x18,%rsp
   18afa:	48 89 fb             	mov    %rdi,%rbx
   18afd:	48 8b 3f             	mov    (%rdi),%rdi
   18b00:	ff 15 da f4 22 00    	callq  *0x22f4da(%rip)        # 247fe0 <pthread_mutex_lock@GLIBC_2.2.5>
   18b06:	64 48 83 3c 25 a0 ff 	cmpq   $0x1,%fs:0xffffffffffffffa0
   18b0d:	ff ff 01 
   18b10:	75 0b                	jne    18b1d <_ZN10rayon_core5latch9LockLatch14wait_and_reset17hdc8f700ff47d9cbaE+0x2d>
   18b12:	64 4c 8b 34 25 a8 ff 	mov    %fs:0xffffffffffffffa8,%r14
   18b19:	ff ff 
   18b1b:	eb 17                	jmp    18b34 <_ZN10rayon_core5latch9LockLatch14wait_and_reset17hdc8f700ff47d9cbaE+0x44>
   18b1d:	b8 01 00 00 00       	mov    $0x1,%eax
   18b22:	c4 e1 f9 6e c0       	vmovq  %rax,%xmm0
   18b27:	64 c5 f9 7f 04 25 a0 	vmovdqa %xmm0,%fs:0xffffffffffffffa0
   18b2e:	ff ff ff 
   18b31:	45 31 f6             	xor    %r14d,%r14d
   18b34:	64 4c 89 34 25 a8 ff 	mov    %r14,%fs:0xffffffffffffffa8
   18b3b:	ff ff 
   18b3d:	4d 85 f6             	test   %r14,%r14
   18b40:	40 0f 95 c5          	setne  %bpl
   18b44:	8a 43 08             	mov    0x8(%rbx),%al
   18b47:	84 c0                	test   %al,%al
   18b49:	0f 85 e7 00 00 00    	jne    18c36 <_ZN10rayon_core5latch9LockLatch14wait_and_reset17hdc8f700ff47d9cbaE+0x146>
        while !*guard {
   18b4f:	80 7b 09 00          	cmpb   $0x0,0x9(%rbx)
   18b53:	75 3c                	jne    18b91 <_ZN10rayon_core5latch9LockLatch14wait_and_reset17hdc8f700ff47d9cbaE+0xa1>
   18b55:	4c 8b 3d b4 f2 22 00 	mov    0x22f2b4(%rip),%r15        # 247e10 <pthread_cond_wait@GLIBC_2.3.2>
   18b5c:	0f 1f 40 00          	nopl   0x0(%rax)
   18b60:	48 89 5c 24 08       	mov    %rbx,0x8(%rsp)
   18b65:	40 88 6c 24 10       	mov    %bpl,0x10(%rsp)
   18b6a:	48 8b 33             	mov    (%rbx),%rsi
   18b6d:	31 c0                	xor    %eax,%eax
   18b6f:	f0 48 0f b1 73 18    	lock cmpxchg %rsi,0x18(%rbx)
   18b75:	74 05                	je     18b7c <_ZN10rayon_core5latch9LockLatch14wait_and_reset17hdc8f700ff47d9cbaE+0x8c>
   18b77:	48 39 f0             	cmp    %rsi,%rax
   18b7a:	75 70                	jne    18bec <_ZN10rayon_core5latch9LockLatch14wait_and_reset17hdc8f700ff47d9cbaE+0xfc>
   18b7c:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
   18b80:	41 ff d7             	callq  *%r15
   18b83:	0f b6 43 08          	movzbl 0x8(%rbx),%eax
   18b87:	84 c0                	test   %al,%al
   18b89:	75 7b                	jne    18c06 <_ZN10rayon_core5latch9LockLatch14wait_and_reset17hdc8f700ff47d9cbaE+0x116>
   18b8b:	80 7b 09 00          	cmpb   $0x0,0x9(%rbx)
   18b8f:	74 cf                	je     18b60 <_ZN10rayon_core5latch9LockLatch14wait_and_reset17hdc8f700ff47d9cbaE+0x70>
        *guard = false;
   18b91:	c6 43 09 00          	movb   $0x0,0x9(%rbx)
   18b95:	4d 85 f6             	test   %r14,%r14
   18b98:	75 3f                	jne    18bd9 <_ZN10rayon_core5latch9LockLatch14wait_and_reset17hdc8f700ff47d9cbaE+0xe9>
   18b9a:	64 48 83 3c 25 a0 ff 	cmpq   $0x1,%fs:0xffffffffffffffa0
   18ba1:	ff ff 01 
   18ba4:	75 12                	jne    18bb8 <_ZN10rayon_core5latch9LockLatch14wait_and_reset17hdc8f700ff47d9cbaE+0xc8>
   18ba6:	64 48 83 3c 25 a8 ff 	cmpq   $0x0,%fs:0xffffffffffffffa8
   18bad:	ff ff 00 
   18bb0:	74 27                	je     18bd9 <_ZN10rayon_core5latch9LockLatch14wait_and_reset17hdc8f700ff47d9cbaE+0xe9>
   18bb2:	c6 43 08 01          	movb   $0x1,0x8(%rbx)
   18bb6:	eb 21                	jmp    18bd9 <_ZN10rayon_core5latch9LockLatch14wait_and_reset17hdc8f700ff47d9cbaE+0xe9>
   18bb8:	b8 01 00 00 00       	mov    $0x1,%eax
   18bbd:	c4 e1 f9 6e c0       	vmovq  %rax,%xmm0
   18bc2:	64 c5 f9 7f 04 25 a0 	vmovdqa %xmm0,%fs:0xffffffffffffffa0
   18bc9:	ff ff ff 
   18bcc:	64 48 c7 04 25 a8 ff 	movq   $0x0,%fs:0xffffffffffffffa8
   18bd3:	ff ff 00 00 00 00 
   18bd9:	48 8b 3b             	mov    (%rbx),%rdi
   18bdc:	48 83 c4 18          	add    $0x18,%rsp
   18be0:	5b                   	pop    %rbx
   18be1:	41 5e                	pop    %r14
   18be3:	41 5f                	pop    %r15
   18be5:	5d                   	pop    %rbp
   18be6:	ff 25 0c f3 22 00    	jmpq   *0x22f30c(%rip)        # 247ef8 <pthread_mutex_unlock@GLIBC_2.2.5>
   18bec:	48 8d 3d 55 4e 02 00 	lea    0x24e55(%rip),%rdi        # 3da48 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x10e8>
   18bf3:	48 8d 15 5e e9 22 00 	lea    0x22e95e(%rip),%rdx        # 247558 <__init_array_end+0x1548>
   18bfa:	be 36 00 00 00       	mov    $0x36,%esi
   18bff:	e8 bc a8 00 00       	callq  234c0 <_ZN3std9panicking11begin_panic17hc5f3eabb2c219d56E>
   18c04:	eb 2e                	jmp    18c34 <_ZN10rayon_core5latch9LockLatch14wait_and_reset17hdc8f700ff47d9cbaE+0x144>
   18c06:	48 89 5c 24 08       	mov    %rbx,0x8(%rsp)
   18c0b:	40 88 6c 24 10       	mov    %bpl,0x10(%rsp)
   18c10:	48 8d 3d aa 4c 02 00 	lea    0x24caa(%rip),%rdi        # 3d8c1 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0xf61>
   18c17:	48 8d 0d 12 df 22 00 	lea    0x22df12(%rip),%rcx        # 246b30 <__init_array_end+0xb20>
   18c1e:	4c 8d 05 43 df 22 00 	lea    0x22df43(%rip),%r8        # 246b68 <__init_array_end+0xb58>
   18c25:	48 8d 54 24 08       	lea    0x8(%rsp),%rdx
   18c2a:	be 2b 00 00 00       	mov    $0x2b,%esi
   18c2f:	e8 2c 10 ff ff       	callq  9c60 <_ZN4core6option18expect_none_failed17he0fec195c6e4c2ecE>
   18c34:	0f 0b                	ud2    
   18c36:	48 89 5c 24 08       	mov    %rbx,0x8(%rsp)
   18c3b:	40 88 6c 24 10       	mov    %bpl,0x10(%rsp)
   18c40:	48 8d 3d 7a 4c 02 00 	lea    0x24c7a(%rip),%rdi        # 3d8c1 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0xf61>
   18c47:	48 8d 0d e2 de 22 00 	lea    0x22dee2(%rip),%rcx        # 246b30 <__init_array_end+0xb20>
   18c4e:	4c 8d 05 fb de 22 00 	lea    0x22defb(%rip),%r8        # 246b50 <__init_array_end+0xb40>
   18c55:	48 8d 54 24 08       	lea    0x8(%rsp),%rdx
   18c5a:	be 2b 00 00 00       	mov    $0x2b,%esi
   18c5f:	e8 fc 0f ff ff       	callq  9c60 <_ZN4core6option18expect_none_failed17he0fec195c6e4c2ecE>
   18c64:	eb ce                	jmp    18c34 <_ZN10rayon_core5latch9LockLatch14wait_and_reset17hdc8f700ff47d9cbaE+0x144>
   18c66:	eb 00                	jmp    18c68 <_ZN10rayon_core5latch9LockLatch14wait_and_reset17hdc8f700ff47d9cbaE+0x178>
   18c68:	48 89 c3             	mov    %rax,%rbx
   18c6b:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   18c70:	e8 0b ce ff ff       	callq  15a80 <_ZN4core3ptr13drop_in_place17h422d82a10dad7834E>
   18c75:	48 89 df             	mov    %rbx,%rdi
   18c78:	e8 23 b4 fe ff       	callq  40a0 <_Unwind_Resume@plt>
   18c7d:	0f 0b                	ud2    
   18c7f:	48 89 c3             	mov    %rax,%rbx
   18c82:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   18c87:	e8 c4 f7 ff ff       	callq  18450 <_ZN4core3ptr13drop_in_place17he239372901003c80E>
   18c8c:	48 89 df             	mov    %rbx,%rdi
   18c8f:	e8 0c b4 fe ff       	callq  40a0 <_Unwind_Resume@plt>
   18c94:	0f 0b                	ud2    
   18c96:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   18c9d:	00 00 00 

0000000000018ca0 <_ZN4core3ptr13drop_in_place17h03ca7e6c03cfa936E>:
   18ca0:	48 8b 07             	mov    (%rdi),%rax
   18ca3:	f0 48 ff 08          	lock decq (%rax)
   18ca7:	75 05                	jne    18cae <_ZN4core3ptr13drop_in_place17h03ca7e6c03cfa936E+0xe>
   18ca9:	e9 12 02 00 00       	jmpq   18ec0 <_ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17hb5cb47fe96f5803fE>
   18cae:	c3                   	retq   
   18caf:	90                   	nop

0000000000018cb0 <_ZN4core3ptr13drop_in_place17h5ee0d08771f6672cE>:
   18cb0:	41 57                	push   %r15
   18cb2:	41 56                	push   %r14
   18cb4:	41 54                	push   %r12
   18cb6:	53                   	push   %rbx
   18cb7:	50                   	push   %rax
   18cb8:	48 8b 1f             	mov    (%rdi),%rbx
   18cbb:	4c 8b b7 80 00 00 00 	mov    0x80(%rdi),%r14
   18cc2:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
        let mut head = self.head.index.load(Ordering::Relaxed);
        let mut tail = self.tail.index.load(Ordering::Relaxed);
        let mut block = self.head.block.load(Ordering::Relaxed);

        // Erase the lower bits.
        head &= !((1 << SHIFT) - 1);
   18cc6:	48 83 e3 fe          	and    $0xfffffffffffffffe,%rbx
        tail &= !((1 << SHIFT) - 1);
   18cca:	49 83 e6 fe          	and    $0xfffffffffffffffe,%r14

        unsafe {
            // Drop all values between `head` and `tail` and deallocate the heap-allocated blocks.
            while head != tail {
   18cce:	4c 39 f3             	cmp    %r14,%rbx
   18cd1:	74 43                	je     18d16 <_ZN4core3ptr13drop_in_place17h5ee0d08771f6672cE+0x66>
   18cd3:	4c 8b 3d 9e f0 22 00 	mov    0x22f09e(%rip),%r15        # 247d78 <free@GLIBC_2.2.5>
                let offset = (head >> SHIFT) % LAP;
   18cda:	89 d8                	mov    %ebx,%eax
   18cdc:	83 e0 3e             	and    $0x3e,%eax

                if offset < BLOCK_CAP {
   18cdf:	48 83 f8 3e          	cmp    $0x3e,%rax
   18ce3:	74 1f                	je     18d04 <_ZN4core3ptr13drop_in_place17h5ee0d08771f6672cE+0x54>
   18ce5:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   18cec:	00 00 00 
   18cef:	90                   	nop
   18cf0:	48 83 c3 02          	add    $0x2,%rbx
            while head != tail {
   18cf4:	49 39 de             	cmp    %rbx,%r14
   18cf7:	74 1d                	je     18d16 <_ZN4core3ptr13drop_in_place17h5ee0d08771f6672cE+0x66>
                let offset = (head >> SHIFT) % LAP;
   18cf9:	89 d8                	mov    %ebx,%eax
   18cfb:	83 e0 3e             	and    $0x3e,%eax
                if offset < BLOCK_CAP {
   18cfe:	48 83 f8 3e          	cmp    $0x3e,%rax
   18d02:	75 ec                	jne    18cf0 <_ZN4core3ptr13drop_in_place17h5ee0d08771f6672cE+0x40>
   18d04:	4c 8b 27             	mov    (%rdi),%r12
   18d07:	41 ff d7             	callq  *%r15
   18d0a:	4c 89 e7             	mov    %r12,%rdi
   18d0d:	48 83 c3 02          	add    $0x2,%rbx
            while head != tail {
   18d11:	49 39 de             	cmp    %rbx,%r14
   18d14:	75 e3                	jne    18cf9 <_ZN4core3ptr13drop_in_place17h5ee0d08771f6672cE+0x49>
   18d16:	48 83 c4 08          	add    $0x8,%rsp
   18d1a:	48 85 ff             	test   %rdi,%rdi

                head = head.wrapping_add(1 << SHIFT);
            }

            // Deallocate the last remaining block.
            if !block.is_null() {
   18d1d:	74 0d                	je     18d2c <_ZN4core3ptr13drop_in_place17h5ee0d08771f6672cE+0x7c>
   18d1f:	5b                   	pop    %rbx
   18d20:	41 5c                	pop    %r12
   18d22:	41 5e                	pop    %r14
   18d24:	41 5f                	pop    %r15
   18d26:	ff 25 4c f0 22 00    	jmpq   *0x22f04c(%rip)        # 247d78 <free@GLIBC_2.2.5>
   18d2c:	5b                   	pop    %rbx
   18d2d:	41 5c                	pop    %r12
   18d2f:	41 5e                	pop    %r14
   18d31:	41 5f                	pop    %r15
   18d33:	c3                   	retq   
   18d34:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   18d3b:	00 00 00 
   18d3e:	66 90                	xchg   %ax,%ax

0000000000018d40 <_ZN4core3ptr13drop_in_place17h9facae506da891f6E>:
   18d40:	48 8b 07             	mov    (%rdi),%rax
   18d43:	f0 48 ff 08          	lock decq (%rax)
   18d47:	75 05                	jne    18d4e <_ZN4core3ptr13drop_in_place17h9facae506da891f6E+0xe>
   18d49:	e9 02 08 00 00       	jmpq   19550 <_ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17hf09fbc4b768e849cE>
   18d4e:	c3                   	retq   
   18d4f:	90                   	nop

0000000000018d50 <_ZN3std9panicking11begin_panic17hfac3f2f9c857bc78E>:
   18d50:	48 83 ec 18          	sub    $0x18,%rsp
   18d54:	48 89 d1             	mov    %rdx,%rcx
   18d57:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
   18d5c:	48 89 74 24 10       	mov    %rsi,0x10(%rsp)
   18d61:	48 8d 35 60 de 22 00 	lea    0x22de60(%rip),%rsi        # 246bc8 <__init_array_end+0xbb8>
   18d68:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   18d6d:	31 d2                	xor    %edx,%edx
   18d6f:	e8 0c ad 00 00       	callq  23a80 <_ZN3std9panicking20rust_panic_with_hook17h7de8cfa1730f3618E>
   18d74:	0f 0b                	ud2    
   18d76:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   18d7d:	00 00 00 

0000000000018d80 <_ZN4core3ptr13drop_in_place17h3932d0b220b206adE>:
   18d80:	41 57                	push   %r15
   18d82:	41 56                	push   %r14
   18d84:	41 55                	push   %r13
   18d86:	41 54                	push   %r12
   18d88:	53                   	push   %rbx
   18d89:	49 89 ff             	mov    %rdi,%r15
   18d8c:	64 48 83 3c 25 00 ff 	cmpq   $0x1,%fs:0xffffffffffffff00
   18d93:	ff ff 01 
   18d96:	0f 85 c4 00 00 00    	jne    18e60 <_ZN4core3ptr13drop_in_place17h3932d0b220b206adE+0xe0>
   18d9c:	64 4c 39 3c 25 08 ff 	cmp    %r15,%fs:0xffffffffffffff08
   18da3:	ff ff 
            assert!(t.get().eq(&(self as *const _)));
   18da5:	0f 85 c9 00 00 00    	jne    18e74 <_ZN4core3ptr13drop_in_place17h3932d0b220b206adE+0xf4>
   18dab:	64 48 c7 04 25 08 ff 	movq   $0x0,%fs:0xffffffffffffff08
   18db2:	ff ff 00 00 00 00 
   18db8:	49 8b 87 00 01 00 00 	mov    0x100(%r15),%rax
   18dbf:	f0 48 ff 08          	lock decq (%rax)
   18dc3:	75 0c                	jne    18dd1 <_ZN4core3ptr13drop_in_place17h3932d0b220b206adE+0x51>
   18dc5:	49 8d bf 00 01 00 00 	lea    0x100(%r15),%rdi
   18dcc:	e8 7f 07 00 00       	callq  19550 <_ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17hf09fbc4b768e849cE>
   18dd1:	49 8b 1f             	mov    (%r15),%rbx
   18dd4:	4d 8b b7 80 00 00 00 	mov    0x80(%r15),%r14
   18ddb:	49 8b 7f 08          	mov    0x8(%r15),%rdi
        head &= !((1 << SHIFT) - 1);
   18ddf:	48 83 e3 fe          	and    $0xfffffffffffffffe,%rbx
        tail &= !((1 << SHIFT) - 1);
   18de3:	49 83 e6 fe          	and    $0xfffffffffffffffe,%r14
            while head != tail {
   18de7:	4c 39 f3             	cmp    %r14,%rbx
   18dea:	74 3a                	je     18e26 <_ZN4core3ptr13drop_in_place17h3932d0b220b206adE+0xa6>
   18dec:	4c 8b 25 85 ef 22 00 	mov    0x22ef85(%rip),%r12        # 247d78 <free@GLIBC_2.2.5>
                let offset = (head >> SHIFT) % LAP;
   18df3:	89 d8                	mov    %ebx,%eax
   18df5:	83 e0 3e             	and    $0x3e,%eax
                if offset < BLOCK_CAP {
   18df8:	48 83 f8 3e          	cmp    $0x3e,%rax
   18dfc:	74 16                	je     18e14 <_ZN4core3ptr13drop_in_place17h3932d0b220b206adE+0x94>
   18dfe:	66 90                	xchg   %ax,%ax
   18e00:	48 83 c3 02          	add    $0x2,%rbx
            while head != tail {
   18e04:	49 39 de             	cmp    %rbx,%r14
   18e07:	74 1d                	je     18e26 <_ZN4core3ptr13drop_in_place17h3932d0b220b206adE+0xa6>
                let offset = (head >> SHIFT) % LAP;
   18e09:	89 d8                	mov    %ebx,%eax
   18e0b:	83 e0 3e             	and    $0x3e,%eax
                if offset < BLOCK_CAP {
   18e0e:	48 83 f8 3e          	cmp    $0x3e,%rax
   18e12:	75 ec                	jne    18e00 <_ZN4core3ptr13drop_in_place17h3932d0b220b206adE+0x80>
   18e14:	4c 8b 2f             	mov    (%rdi),%r13
   18e17:	41 ff d4             	callq  *%r12
   18e1a:	4c 89 ef             	mov    %r13,%rdi
   18e1d:	48 83 c3 02          	add    $0x2,%rbx
            while head != tail {
   18e21:	49 39 de             	cmp    %rbx,%r14
   18e24:	75 e3                	jne    18e09 <_ZN4core3ptr13drop_in_place17h3932d0b220b206adE+0x89>
   18e26:	48 85 ff             	test   %rdi,%rdi
            if !block.is_null() {
   18e29:	74 06                	je     18e31 <_ZN4core3ptr13drop_in_place17h3932d0b220b206adE+0xb1>
   18e2b:	ff 15 47 ef 22 00    	callq  *0x22ef47(%rip)        # 247d78 <free@GLIBC_2.2.5>
   18e31:	49 8b 87 30 01 00 00 	mov    0x130(%r15),%rax
   18e38:	f0 48 ff 08          	lock decq (%rax)
   18e3c:	75 18                	jne    18e56 <_ZN4core3ptr13drop_in_place17h3932d0b220b206adE+0xd6>
   18e3e:	49 81 c7 30 01 00 00 	add    $0x130,%r15
   18e45:	4c 89 ff             	mov    %r15,%rdi
   18e48:	5b                   	pop    %rbx
   18e49:	41 5c                	pop    %r12
   18e4b:	41 5d                	pop    %r13
   18e4d:	41 5e                	pop    %r14
   18e4f:	41 5f                	pop    %r15
   18e51:	e9 6a 00 00 00       	jmpq   18ec0 <_ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17hb5cb47fe96f5803fE>
   18e56:	5b                   	pop    %rbx
   18e57:	41 5c                	pop    %r12
   18e59:	41 5d                	pop    %r13
   18e5b:	41 5e                	pop    %r14
   18e5d:	41 5f                	pop    %r15
   18e5f:	c3                   	retq   
   18e60:	b8 01 00 00 00       	mov    $0x1,%eax
   18e65:	c4 e1 f9 6e c0       	vmovq  %rax,%xmm0
   18e6a:	64 c5 f9 7f 04 25 00 	vmovdqa %xmm0,%fs:0xffffffffffffff00
   18e71:	ff ff ff 
   18e74:	48 8d 3d 6b 41 02 00 	lea    0x2416b(%rip),%rdi        # 3cfe6 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x686>
   18e7b:	48 8d 15 2e dd 22 00 	lea    0x22dd2e(%rip),%rdx        # 246bb0 <__init_array_end+0xba0>
   18e82:	be 31 00 00 00       	mov    $0x31,%esi
   18e87:	e8 c4 fe ff ff       	callq  18d50 <_ZN3std9panicking11begin_panic17hfac3f2f9c857bc78E>
   18e8c:	0f 0b                	ud2    
   18e8e:	49 89 c6             	mov    %rax,%r14
   18e91:	49 8d bf 00 01 00 00 	lea    0x100(%r15),%rdi
   18e98:	e8 a3 fe ff ff       	callq  18d40 <_ZN4core3ptr13drop_in_place17h9facae506da891f6E>
   18e9d:	4c 89 ff             	mov    %r15,%rdi
   18ea0:	e8 0b fe ff ff       	callq  18cb0 <_ZN4core3ptr13drop_in_place17h5ee0d08771f6672cE>
   18ea5:	49 81 c7 30 01 00 00 	add    $0x130,%r15
   18eac:	4c 89 ff             	mov    %r15,%rdi
   18eaf:	e8 ec fd ff ff       	callq  18ca0 <_ZN4core3ptr13drop_in_place17h03ca7e6c03cfa936E>
   18eb4:	4c 89 f7             	mov    %r14,%rdi
   18eb7:	e8 e4 b1 fe ff       	callq  40a0 <_Unwind_Resume@plt>
   18ebc:	0f 0b                	ud2    
   18ebe:	66 90                	xchg   %ax,%ax

0000000000018ec0 <_ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17hb5cb47fe96f5803fE>:
   18ec0:	55                   	push   %rbp
   18ec1:	41 57                	push   %r15
   18ec3:	41 56                	push   %r14
   18ec5:	41 55                	push   %r13
   18ec7:	41 54                	push   %r12
   18ec9:	53                   	push   %rbx
   18eca:	50                   	push   %rax
   18ecb:	49 89 fe             	mov    %rdi,%r14
   18ece:	4c 8b 3f             	mov    (%rdi),%r15
   18ed1:	4d 8b a7 80 01 00 00 	mov    0x180(%r15),%r12
   18ed8:	49 8b 87 90 01 00 00 	mov    0x190(%r15),%rax
   18edf:	48 c1 e0 04          	shl    $0x4,%rax
   18ee3:	48 8d 1c 80          	lea    (%rax,%rax,4),%rbx
   18ee7:	48 85 db             	test   %rbx,%rbx
   18eea:	74 19                	je     18f05 <_ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17hb5cb47fe96f5803fE+0x45>
   18eec:	0f 1f 40 00          	nopl   0x0(%rax)
   18ef0:	4c 89 e7             	mov    %r12,%rdi
   18ef3:	49 83 c4 50          	add    $0x50,%r12
   18ef7:	e8 74 05 00 00       	callq  19470 <_ZN4core3ptr13drop_in_place17h0c0b9d0f4d2254bfE>
   18efc:	48 83 c3 b0          	add    $0xffffffffffffffb0,%rbx
   18f00:	48 85 db             	test   %rbx,%rbx
   18f03:	75 eb                	jne    18ef0 <_ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17hb5cb47fe96f5803fE+0x30>
   18f05:	49 83 bf 88 01 00 00 	cmpq   $0x0,0x188(%r15)
   18f0c:	00 
   18f0d:	74 0d                	je     18f1c <_ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17hb5cb47fe96f5803fE+0x5c>
   18f0f:	49 8b bf 80 01 00 00 	mov    0x180(%r15),%rdi
   18f16:	ff 15 5c ee 22 00    	callq  *0x22ee5c(%rip)        # 247d78 <free@GLIBC_2.2.5>
   18f1c:	49 8b bf a0 01 00 00 	mov    0x1a0(%r15),%rdi
   18f23:	ff 15 0f ef 22 00    	callq  *0x22ef0f(%rip)        # 247e38 <pthread_mutex_destroy@GLIBC_2.2.5>
   18f29:	49 8b bf a0 01 00 00 	mov    0x1a0(%r15),%rdi
   18f30:	4c 8b 25 41 ee 22 00 	mov    0x22ee41(%rip),%r12        # 247d78 <free@GLIBC_2.2.5>
   18f37:	41 ff d4             	callq  *%r12
   18f3a:	49 8b bf b0 01 00 00 	mov    0x1b0(%r15),%rdi
   18f41:	ff 15 29 f0 22 00    	callq  *0x22f029(%rip)        # 247f70 <pthread_cond_destroy@GLIBC_2.3.2>
   18f47:	49 8b bf b0 01 00 00 	mov    0x1b0(%r15),%rdi
   18f4e:	41 ff d4             	callq  *%r12
   18f51:	49 8b 9f 80 00 00 00 	mov    0x80(%r15),%rbx
   18f58:	4d 8b af 00 01 00 00 	mov    0x100(%r15),%r13
   18f5f:	49 8b bf 88 00 00 00 	mov    0x88(%r15),%rdi
        head &= !((1 << SHIFT) - 1);
   18f66:	48 83 e3 fe          	and    $0xfffffffffffffffe,%rbx
        tail &= !((1 << SHIFT) - 1);
   18f6a:	49 83 e5 fe          	and    $0xfffffffffffffffe,%r13
            while head != tail {
   18f6e:	4c 39 eb             	cmp    %r13,%rbx
   18f71:	0f 85 d6 00 00 00    	jne    1904d <_ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17hb5cb47fe96f5803fE+0x18d>
   18f77:	48 85 ff             	test   %rdi,%rdi
            if !block.is_null() {
   18f7a:	74 06                	je     18f82 <_ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17hb5cb47fe96f5803fE+0xc2>
   18f7c:	ff 15 f6 ed 22 00    	callq  *0x22edf6(%rip)        # 247d78 <free@GLIBC_2.2.5>
   18f82:	49 8b bf c0 01 00 00 	mov    0x1c0(%r15),%rdi
   18f89:	48 85 ff             	test   %rdi,%rdi
   18f8c:	74 24                	je     18fb2 <_ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17hb5cb47fe96f5803fE+0xf2>
   18f8e:	49 8b 87 c8 01 00 00 	mov    0x1c8(%r15),%rax
   18f95:	ff 10                	callq  *(%rax)
   18f97:	49 8b 87 c8 01 00 00 	mov    0x1c8(%r15),%rax
   18f9e:	48 83 78 08 00       	cmpq   $0x0,0x8(%rax)
   18fa3:	74 0d                	je     18fb2 <_ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17hb5cb47fe96f5803fE+0xf2>
   18fa5:	49 8b bf c0 01 00 00 	mov    0x1c0(%r15),%rdi
   18fac:	ff 15 c6 ed 22 00    	callq  *0x22edc6(%rip)        # 247d78 <free@GLIBC_2.2.5>
   18fb2:	49 8b bf d0 01 00 00 	mov    0x1d0(%r15),%rdi
   18fb9:	48 85 ff             	test   %rdi,%rdi
   18fbc:	74 24                	je     18fe2 <_ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17hb5cb47fe96f5803fE+0x122>
   18fbe:	49 8b 87 d8 01 00 00 	mov    0x1d8(%r15),%rax
   18fc5:	ff 10                	callq  *(%rax)
   18fc7:	49 8b 87 d8 01 00 00 	mov    0x1d8(%r15),%rax
   18fce:	48 83 78 08 00       	cmpq   $0x0,0x8(%rax)
   18fd3:	74 0d                	je     18fe2 <_ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17hb5cb47fe96f5803fE+0x122>
   18fd5:	49 8b bf d0 01 00 00 	mov    0x1d0(%r15),%rdi
   18fdc:	ff 15 96 ed 22 00    	callq  *0x22ed96(%rip)        # 247d78 <free@GLIBC_2.2.5>
   18fe2:	49 8b bf e0 01 00 00 	mov    0x1e0(%r15),%rdi
   18fe9:	48 85 ff             	test   %rdi,%rdi
   18fec:	74 24                	je     19012 <_ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17hb5cb47fe96f5803fE+0x152>
   18fee:	49 8b 87 e8 01 00 00 	mov    0x1e8(%r15),%rax
   18ff5:	ff 10                	callq  *(%rax)
   18ff7:	49 8b 87 e8 01 00 00 	mov    0x1e8(%r15),%rax
   18ffe:	48 83 78 08 00       	cmpq   $0x0,0x8(%rax)
   19003:	74 0d                	je     19012 <_ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17hb5cb47fe96f5803fE+0x152>
   19005:	49 8b bf e0 01 00 00 	mov    0x1e0(%r15),%rdi
   1900c:	ff 15 66 ed 22 00    	callq  *0x22ed66(%rip)        # 247d78 <free@GLIBC_2.2.5>
   19012:	49 8b 06             	mov    (%r14),%rax
   19015:	f0 48 ff 48 08       	lock decq 0x8(%rax)
   1901a:	75 47                	jne    19063 <_ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17hb5cb47fe96f5803fE+0x1a3>
   1901c:	49 8b 3e             	mov    (%r14),%rdi
   1901f:	48 83 c4 08          	add    $0x8,%rsp
   19023:	5b                   	pop    %rbx
   19024:	41 5c                	pop    %r12
   19026:	41 5d                	pop    %r13
   19028:	41 5e                	pop    %r14
   1902a:	41 5f                	pop    %r15
   1902c:	5d                   	pop    %rbp
   1902d:	ff 25 45 ed 22 00    	jmpq   *0x22ed45(%rip)        # 247d78 <free@GLIBC_2.2.5>
   19033:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1903a:	00 00 00 
   1903d:	0f 1f 00             	nopl   (%rax)
   19040:	48 83 c3 02          	add    $0x2,%rbx
            while head != tail {
   19044:	49 39 dd             	cmp    %rbx,%r13
   19047:	0f 84 2a ff ff ff    	je     18f77 <_ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17hb5cb47fe96f5803fE+0xb7>
                let offset = (head >> SHIFT) % LAP;
   1904d:	89 d8                	mov    %ebx,%eax
   1904f:	83 e0 3e             	and    $0x3e,%eax
                if offset < BLOCK_CAP {
   19052:	48 83 f8 3e          	cmp    $0x3e,%rax
   19056:	75 e8                	jne    19040 <_ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17hb5cb47fe96f5803fE+0x180>
   19058:	48 8b 2f             	mov    (%rdi),%rbp
   1905b:	41 ff d4             	callq  *%r12
   1905e:	48 89 ef             	mov    %rbp,%rdi
   19061:	eb dd                	jmp    19040 <_ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17hb5cb47fe96f5803fE+0x180>
   19063:	48 83 c4 08          	add    $0x8,%rsp
   19067:	5b                   	pop    %rbx
   19068:	41 5c                	pop    %r12
   1906a:	41 5d                	pop    %r13
   1906c:	41 5e                	pop    %r14
   1906e:	41 5f                	pop    %r15
   19070:	5d                   	pop    %rbp
   19071:	c3                   	retq   
   19072:	49 89 c6             	mov    %rax,%r14
   19075:	49 8b bf e0 01 00 00 	mov    0x1e0(%r15),%rdi
   1907c:	49 8b 87 e8 01 00 00 	mov    0x1e8(%r15),%rax
   19083:	48 8b 70 08          	mov    0x8(%rax),%rsi
   19087:	e8 b4 ea ff ff       	callq  17b40 <_ZN5alloc5alloc8box_free17h16551760f718b115E>
   1908c:	4c 89 f7             	mov    %r14,%rdi
   1908f:	e8 0c b0 fe ff       	callq  40a0 <_Unwind_Resume@plt>
   19094:	0f 0b                	ud2    
   19096:	49 89 c6             	mov    %rax,%r14
   19099:	49 8b bf d0 01 00 00 	mov    0x1d0(%r15),%rdi
   190a0:	49 8b 87 d8 01 00 00 	mov    0x1d8(%r15),%rax
   190a7:	48 8b 70 08          	mov    0x8(%rax),%rsi
   190ab:	e8 90 ea ff ff       	callq  17b40 <_ZN5alloc5alloc8box_free17h16551760f718b115E>
   190b0:	eb 26                	jmp    190d8 <_ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17hb5cb47fe96f5803fE+0x218>
   190b2:	49 89 c6             	mov    %rax,%r14
   190b5:	49 8b bf c0 01 00 00 	mov    0x1c0(%r15),%rdi
   190bc:	49 8b 87 c8 01 00 00 	mov    0x1c8(%r15),%rax
   190c3:	48 8b 70 08          	mov    0x8(%rax),%rsi
   190c7:	e8 74 ea ff ff       	callq  17b40 <_ZN5alloc5alloc8box_free17h16551760f718b115E>
   190cc:	49 8d bf d0 01 00 00 	lea    0x1d0(%r15),%rdi
   190d3:	e8 18 03 00 00       	callq  193f0 <_ZN4core3ptr13drop_in_place17h596d07670bd5c336E>
   190d8:	49 81 c7 e0 01 00 00 	add    $0x1e0,%r15
   190df:	4c 89 ff             	mov    %r15,%rdi
   190e2:	e8 09 03 00 00       	callq  193f0 <_ZN4core3ptr13drop_in_place17h596d07670bd5c336E>
   190e7:	4c 89 f7             	mov    %r14,%rdi
   190ea:	e8 b1 af fe ff       	callq  40a0 <_Unwind_Resume@plt>
   190ef:	0f 0b                	ud2    
   190f1:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   190f8:	00 00 00 
   190fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000019100 <_ZN10rayon_core8registry12WorkerThread15wait_until_cold17hb16e5a6101e03b68E>:
    unsafe fn wait_until_cold<L: LatchProbe + ?Sized>(&self, latch: &L) {
   19100:	55                   	push   %rbp
   19101:	41 57                	push   %r15
   19103:	41 56                	push   %r14
   19105:	41 55                	push   %r13
   19107:	41 54                	push   %r12
   19109:	53                   	push   %rbx
   1910a:	48 83 ec 58          	sub    $0x58,%rsp
   1910e:	48 8b 06             	mov    (%rsi),%rax
        self.counter.load(Ordering::SeqCst) == 0
   19111:	48 85 c0             	test   %rax,%rax
        while !latch.probe() {
   19114:	0f 84 b7 02 00 00    	je     193d1 <_ZN10rayon_core8registry12WorkerThread15wait_until_cold17hb16e5a6101e03b68E+0x2d1>
   1911a:	49 89 f6             	mov    %rsi,%r14
   1911d:	48 89 fb             	mov    %rdi,%rbx
   19120:	41 bc 98 01 00 00    	mov    $0x198,%r12d
   19126:	45 31 ed             	xor    %r13d,%r13d
   19129:	eb 14                	jmp    1913f <_ZN10rayon_core8registry12WorkerThread15wait_until_cold17hb16e5a6101e03b68E+0x3f>
   1912b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   19130:	45 31 ed             	xor    %r13d,%r13d
   19133:	49 8b 06             	mov    (%r14),%rax
   19136:	48 85 c0             	test   %rax,%rax
   19139:	0f 84 73 02 00 00    	je     193b2 <_ZN10rayon_core8registry12WorkerThread15wait_until_cold17hb16e5a6101e03b68E+0x2b2>
            if let Some(job) = self
   1913f:	48 89 df             	mov    %rbx,%rdi
   19142:	e8 09 ea ff ff       	callq  17b50 <_ZN10rayon_core8registry12WorkerThread14take_local_job17h6acdab09e45847e8E.218>
   19147:	49 89 d7             	mov    %rdx,%r15
   1914a:	48 85 d2             	test   %rdx,%rdx
   1914d:	74 21                	je     19170 <_ZN10rayon_core8registry12WorkerThread15wait_until_cold17hb16e5a6101e03b68E+0x70>
   1914f:	48 89 c5             	mov    %rax,%rbp
        if yields > ROUNDS_UNTIL_SLEEPY {
   19152:	49 83 fd 21          	cmp    $0x21,%r13
   19156:	0f 83 da 00 00 00    	jae    19236 <_ZN10rayon_core8registry12WorkerThread15wait_until_cold17hb16e5a6101e03b68E+0x136>
   1915c:	e9 4f 01 00 00       	jmpq   192b0 <_ZN10rayon_core8registry12WorkerThread15wait_until_cold17hb16e5a6101e03b68E+0x1b0>
   19161:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   19168:	00 00 00 
   1916b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   19170:	48 89 5c 24 08       	mov    %rbx,0x8(%rsp)
        let num_threads = self.registry.thread_infos.len();
   19175:	48 8b bb 30 01 00 00 	mov    0x130(%rbx),%rdi
   1917c:	48 8b 8f 90 01 00 00 	mov    0x190(%rdi),%rcx
        if num_threads <= 1 {
   19183:	48 83 f9 01          	cmp    $0x1,%rcx
   19187:	0f 86 fe 00 00 00    	jbe    1928b <_ZN10rayon_core8registry12WorkerThread15wait_until_cold17hb16e5a6101e03b68E+0x18b>
        let mut x = self.state.get();
   1918d:	48 8b 83 28 01 00 00 	mov    0x128(%rbx),%rax
        x ^= x >> 12;
   19194:	48 89 c2             	mov    %rax,%rdx
   19197:	48 c1 ea 0c          	shr    $0xc,%rdx
   1919b:	48 31 c2             	xor    %rax,%rdx
        x ^= x << 25;
   1919e:	48 89 d6             	mov    %rdx,%rsi
   191a1:	48 c1 e6 19          	shl    $0x19,%rsi
   191a5:	48 31 d6             	xor    %rdx,%rsi
        x ^= x >> 27;
   191a8:	48 89 f0             	mov    %rsi,%rax
   191ab:	48 c1 e8 1b          	shr    $0x1b,%rax
   191af:	48 31 f0             	xor    %rsi,%rax
   191b2:	48 89 83 28 01 00 00 	mov    %rax,0x128(%rbx)
   191b9:	48 ba 1d dd 6c 4f 91 	movabs $0x2545f4914f6cdd1d,%rdx
   191c0:	f4 45 25 
   191c3:	48 0f af c2          	imul   %rdx,%rax
        (self.next() % n as u64) as usize
   191c7:	31 d2                	xor    %edx,%edx
   191c9:	48 f7 f1             	div    %rcx
   191cc:	48 89 54 24 20       	mov    %rdx,0x20(%rsp)
   191d1:	48 89 4c 24 28       	mov    %rcx,0x28(%rsp)
   191d6:	48 c7 44 24 30 00 00 	movq   $0x0,0x30(%rsp)
   191dd:	00 00 
   191df:	48 89 54 24 38       	mov    %rdx,0x38(%rsp)
   191e4:	c6 44 24 40 00       	movb   $0x0,0x40(%rsp)
   191e9:	48 8d 44 24 08       	lea    0x8(%rsp),%rax
   191ee:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
   191f3:	48 89 44 24 50       	mov    %rax,0x50(%rsp)
   191f8:	48 8d 44 24 48       	lea    0x48(%rsp),%rax
   191fd:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   19202:	48 8d 44 24 50       	lea    0x50(%rsp),%rax
   19207:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   1920c:	48 8d 7c 24 20       	lea    0x20(%rsp),%rdi
   19211:	48 8d 74 24 10       	lea    0x10(%rsp),%rsi
   19216:	e8 a5 ea ff ff       	callq  17cc0 <_ZN4core4iter6traits8iterator8Iterator8try_fold17he2a1a93294a82a2eE>
   1921b:	49 89 d7             	mov    %rdx,%r15
   1921e:	48 85 d2             	test   %rdx,%rdx
   19221:	74 2c                	je     1924f <_ZN10rayon_core8registry12WorkerThread15wait_until_cold17hb16e5a6101e03b68E+0x14f>
   19223:	48 89 c5             	mov    %rax,%rbp
   19226:	4d 85 ff             	test   %r15,%r15
   19229:	74 59                	je     19284 <_ZN10rayon_core8registry12WorkerThread15wait_until_cold17hb16e5a6101e03b68E+0x184>
   1922b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   19230:	49 83 fd 21          	cmp    $0x21,%r13
   19234:	72 7a                	jb     192b0 <_ZN10rayon_core8registry12WorkerThread15wait_until_cold17hb16e5a6101e03b68E+0x1b0>
   19236:	48 8b bb 30 01 00 00 	mov    0x130(%rbx),%rdi
   1923d:	4c 01 e7             	add    %r12,%rdi
   19240:	48 8b 07             	mov    (%rdi),%rax
        if old_state != AWAKE {
   19243:	48 85 c0             	test   %rax,%rax
   19246:	74 68                	je     192b0 <_ZN10rayon_core8registry12WorkerThread15wait_until_cold17hb16e5a6101e03b68E+0x1b0>
            self.tickle_cold(worker_index);
   19248:	e8 23 ee ff ff       	callq  18070 <_ZN10rayon_core5sleep5Sleep11tickle_cold17h334403ad3bddecd8E>
   1924d:	eb 61                	jmp    192b0 <_ZN10rayon_core8registry12WorkerThread15wait_until_cold17hb16e5a6101e03b68E+0x1b0>
   1924f:	8a 44 24 40          	mov    0x40(%rsp),%al
   19253:	84 c0                	test   %al,%al
   19255:	74 0e                	je     19265 <_ZN10rayon_core8registry12WorkerThread15wait_until_cold17hb16e5a6101e03b68E+0x165>
   19257:	3c 02                	cmp    $0x2,%al
   19259:	74 0f                	je     1926a <_ZN10rayon_core8registry12WorkerThread15wait_until_cold17hb16e5a6101e03b68E+0x16a>
   1925b:	45 31 ff             	xor    %r15d,%r15d
   1925e:	4d 85 ff             	test   %r15,%r15
   19261:	75 cd                	jne    19230 <_ZN10rayon_core8registry12WorkerThread15wait_until_cold17hb16e5a6101e03b68E+0x130>
   19263:	eb 1f                	jmp    19284 <_ZN10rayon_core8registry12WorkerThread15wait_until_cold17hb16e5a6101e03b68E+0x184>
   19265:	c6 44 24 40 02       	movb   $0x2,0x40(%rsp)
   1926a:	48 8d 7c 24 30       	lea    0x30(%rsp),%rdi
   1926f:	48 8d 74 24 10       	lea    0x10(%rsp),%rsi
   19274:	e8 47 ea ff ff       	callq  17cc0 <_ZN4core4iter6traits8iterator8Iterator8try_fold17he2a1a93294a82a2eE>
   19279:	48 89 c5             	mov    %rax,%rbp
   1927c:	49 89 d7             	mov    %rdx,%r15
   1927f:	4d 85 ff             	test   %r15,%r15
   19282:	75 ac                	jne    19230 <_ZN10rayon_core8registry12WorkerThread15wait_until_cold17hb16e5a6101e03b68E+0x130>
                .or_else(|| self.registry.pop_injected_job(self.index))
   19284:	48 8b bb 30 01 00 00 	mov    0x130(%rbx),%rdi
   1928b:	48 83 ef 80          	sub    $0xffffffffffffff80,%rdi
        let job = self.injected_jobs.pop().ok();
   1928f:	e8 fc dc ff ff       	callq  16f90 <_ZN15crossbeam_queue9seg_queue17SegQueue$LT$T$GT$3pop17h021a539f4a1d2f89E>
            if let Some(job) = self
   19294:	48 85 d2             	test   %rdx,%rdx
   19297:	74 54                	je     192ed <_ZN10rayon_core8registry12WorkerThread15wait_until_cold17hb16e5a6101e03b68E+0x1ed>
   19299:	48 89 c5             	mov    %rax,%rbp
   1929c:	49 89 d7             	mov    %rdx,%r15
        if yields > ROUNDS_UNTIL_SLEEPY {
   1929f:	49 83 fd 21          	cmp    $0x21,%r13
   192a3:	73 91                	jae    19236 <_ZN10rayon_core8registry12WorkerThread15wait_until_cold17hb16e5a6101e03b68E+0x136>
   192a5:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   192ac:	00 00 00 
   192af:	90                   	nop
   192b0:	48 89 ef             	mov    %rbp,%rdi
   192b3:	41 ff d7             	callq  *%r15
        self.registry.sleep.tickle(self.index);
   192b6:	48 8b bb 30 01 00 00 	mov    0x130(%rbx),%rdi
   192bd:	48 8b 87 98 01 00 00 	mov    0x198(%rdi),%rax
        if old_state != AWAKE {
   192c4:	48 85 c0             	test   %rax,%rax
   192c7:	0f 84 63 fe ff ff    	je     19130 <_ZN10rayon_core8registry12WorkerThread15wait_until_cold17hb16e5a6101e03b68E+0x30>
   192cd:	48 81 c7 98 01 00 00 	add    $0x198,%rdi
            self.tickle_cold(worker_index);
   192d4:	e8 97 ed ff ff       	callq  18070 <_ZN10rayon_core5sleep5Sleep11tickle_cold17h334403ad3bddecd8E>
   192d9:	45 31 ed             	xor    %r13d,%r13d
   192dc:	49 8b 06             	mov    (%r14),%rax
   192df:	48 85 c0             	test   %rax,%rax
        while !latch.probe() {
   192e2:	0f 85 57 fe ff ff    	jne    1913f <_ZN10rayon_core8registry12WorkerThread15wait_until_cold17hb16e5a6101e03b68E+0x3f>
   192e8:	e9 c5 00 00 00       	jmpq   193b2 <_ZN10rayon_core8registry12WorkerThread15wait_until_cold17hb16e5a6101e03b68E+0x2b2>
   192ed:	48 8b ab 30 01 00 00 	mov    0x130(%rbx),%rbp
                yields = self.registry.sleep.no_work_found(self.index, yields);
   192f4:	4c 01 e5             	add    %r12,%rbp
        if yields < ROUNDS_UNTIL_SLEEPY {
   192f7:	49 83 fd 20          	cmp    $0x20,%r13
   192fb:	73 1a                	jae    19317 <_ZN10rayon_core8registry12WorkerThread15wait_until_cold17hb16e5a6101e03b68E+0x217>
   192fd:	ff 15 7d eb 22 00    	callq  *0x22eb7d(%rip)        # 247e80 <sched_yield@GLIBC_2.2.5>
            yields + 1
   19303:	49 ff c5             	inc    %r13
   19306:	49 8b 06             	mov    (%r14),%rax
   19309:	48 85 c0             	test   %rax,%rax
        while !latch.probe() {
   1930c:	0f 85 2d fe ff ff    	jne    1913f <_ZN10rayon_core8registry12WorkerThread15wait_until_cold17hb16e5a6101e03b68E+0x3f>
   19312:	e9 9b 00 00 00       	jmpq   193b2 <_ZN10rayon_core8registry12WorkerThread15wait_until_cold17hb16e5a6101e03b68E+0x2b2>
   19317:	4c 8b bb 20 01 00 00 	mov    0x120(%rbx),%r15
        } else if yields == ROUNDS_UNTIL_SLEEPY {
   1931e:	75 31                	jne    19351 <_ZN10rayon_core8registry12WorkerThread15wait_until_cold17hb16e5a6101e03b68E+0x251>
   19320:	ff 15 5a eb 22 00    	callq  *0x22eb5a(%rip)        # 247e80 <sched_yield@GLIBC_2.2.5>
   19326:	4b 8d 0c 3f          	lea    (%r15,%r15,1),%rcx
   1932a:	48 83 c1 02          	add    $0x2,%rcx
   1932e:	66 90                	xchg   %ax,%ax
   19330:	48 8b 45 00          	mov    0x0(%rbp),%rax
        (state >> 1) != 0
   19334:	48 83 f8 01          	cmp    $0x1,%rax
            if self.any_worker_is_sleepy(state) {
   19338:	77 4a                	ja     19384 <_ZN10rayon_core8registry12WorkerThread15wait_until_cold17hb16e5a6101e03b68E+0x284>
        ((worker_index + 1) << 1) + state
   1933a:	48 8d 14 01          	lea    (%rcx,%rax,1),%rdx
   1933e:	f0 48 0f b1 55 00    	lock cmpxchg %rdx,0x0(%rbp)
   19344:	41 bd 21 00 00 00    	mov    $0x21,%r13d
                if self
   1934a:	75 e4                	jne    19330 <_ZN10rayon_core8registry12WorkerThread15wait_until_cold17hb16e5a6101e03b68E+0x230>
   1934c:	e9 e2 fd ff ff       	jmpq   19133 <_ZN10rayon_core8registry12WorkerThread15wait_until_cold17hb16e5a6101e03b68E+0x33>
        } else if yields < ROUNDS_UNTIL_ASLEEP {
   19351:	49 83 fd 40          	cmp    $0x40,%r13
   19355:	73 41                	jae    19398 <_ZN10rayon_core8registry12WorkerThread15wait_until_cold17hb16e5a6101e03b68E+0x298>
   19357:	ff 15 23 eb 22 00    	callq  *0x22eb23(%rip)        # 247e80 <sched_yield@GLIBC_2.2.5>
   1935d:	48 8b 45 00          	mov    0x0(%rbp),%rax
        (state >> 1) == (worker_index + 1)
   19361:	48 d1 e8             	shr    %rax
   19364:	49 ff c7             	inc    %r15
                yields + 1
   19367:	49 ff c5             	inc    %r13
        (state >> 1) == (worker_index + 1)
   1936a:	4c 39 f8             	cmp    %r15,%rax
            if self.still_sleepy(worker_index) {
   1936d:	b8 00 00 00 00       	mov    $0x0,%eax
   19372:	4c 0f 45 e8          	cmovne %rax,%r13
   19376:	49 8b 06             	mov    (%r14),%rax
   19379:	48 85 c0             	test   %rax,%rax
   1937c:	0f 85 bd fd ff ff    	jne    1913f <_ZN10rayon_core8registry12WorkerThread15wait_until_cold17hb16e5a6101e03b68E+0x3f>
   19382:	eb 2e                	jmp    193b2 <_ZN10rayon_core8registry12WorkerThread15wait_until_cold17hb16e5a6101e03b68E+0x2b2>
   19384:	41 bd 20 00 00 00    	mov    $0x20,%r13d
   1938a:	49 8b 06             	mov    (%r14),%rax
   1938d:	48 85 c0             	test   %rax,%rax
   19390:	0f 85 a9 fd ff ff    	jne    1913f <_ZN10rayon_core8registry12WorkerThread15wait_until_cold17hb16e5a6101e03b68E+0x3f>
   19396:	eb 1a                	jmp    193b2 <_ZN10rayon_core8registry12WorkerThread15wait_until_cold17hb16e5a6101e03b68E+0x2b2>
            self.sleep(worker_index);
   19398:	48 89 ef             	mov    %rbp,%rdi
   1939b:	4c 89 fe             	mov    %r15,%rsi
   1939e:	e8 dd ed ff ff       	callq  18180 <_ZN10rayon_core5sleep5Sleep5sleep17h0772af2aea612ed1E>
   193a3:	45 31 ed             	xor    %r13d,%r13d
   193a6:	49 8b 06             	mov    (%r14),%rax
   193a9:	48 85 c0             	test   %rax,%rax
   193ac:	0f 85 8d fd ff ff    	jne    1913f <_ZN10rayon_core8registry12WorkerThread15wait_until_cold17hb16e5a6101e03b68E+0x3f>
        if yields > ROUNDS_UNTIL_SLEEPY {
   193b2:	49 83 fd 21          	cmp    $0x21,%r13
   193b6:	72 19                	jb     193d1 <_ZN10rayon_core8registry12WorkerThread15wait_until_cold17hb16e5a6101e03b68E+0x2d1>
   193b8:	bf 98 01 00 00       	mov    $0x198,%edi
   193bd:	48 03 bb 30 01 00 00 	add    0x130(%rbx),%rdi
   193c4:	48 8b 07             	mov    (%rdi),%rax
        if old_state != AWAKE {
   193c7:	48 85 c0             	test   %rax,%rax
   193ca:	74 05                	je     193d1 <_ZN10rayon_core8registry12WorkerThread15wait_until_cold17hb16e5a6101e03b68E+0x2d1>
            self.tickle_cold(worker_index);
   193cc:	e8 9f ec ff ff       	callq  18070 <_ZN10rayon_core5sleep5Sleep11tickle_cold17h334403ad3bddecd8E>
    }
   193d1:	48 83 c4 58          	add    $0x58,%rsp
   193d5:	5b                   	pop    %rbx
   193d6:	41 5c                	pop    %r12
   193d8:	41 5d                	pop    %r13
   193da:	41 5e                	pop    %r14
   193dc:	41 5f                	pop    %r15
   193de:	5d                   	pop    %rbp
   193df:	c3                   	retq   
   193e0:	e8 0b f0 ff ff       	callq  183f0 <_ZN4core3ptr13drop_in_place17hc443eae86009dba0E>
   193e5:	0f 0b                	ud2    
   193e7:	e8 04 f0 ff ff       	callq  183f0 <_ZN4core3ptr13drop_in_place17hc443eae86009dba0E>
   193ec:	0f 0b                	ud2    
   193ee:	66 90                	xchg   %ax,%ax

00000000000193f0 <_ZN4core3ptr13drop_in_place17h596d07670bd5c336E>:
   193f0:	41 56                	push   %r14
   193f2:	53                   	push   %rbx
   193f3:	50                   	push   %rax
   193f4:	48 89 fb             	mov    %rdi,%rbx
   193f7:	48 8b 3f             	mov    (%rdi),%rdi
   193fa:	48 85 ff             	test   %rdi,%rdi
   193fd:	74 21                	je     19420 <_ZN4core3ptr13drop_in_place17h596d07670bd5c336E+0x30>
   193ff:	48 8b 43 08          	mov    0x8(%rbx),%rax
   19403:	ff 10                	callq  *(%rax)
   19405:	48 8b 43 08          	mov    0x8(%rbx),%rax
   19409:	48 83 78 08 00       	cmpq   $0x0,0x8(%rax)
   1940e:	74 10                	je     19420 <_ZN4core3ptr13drop_in_place17h596d07670bd5c336E+0x30>
   19410:	48 8b 3b             	mov    (%rbx),%rdi
   19413:	48 83 c4 08          	add    $0x8,%rsp
   19417:	5b                   	pop    %rbx
   19418:	41 5e                	pop    %r14
   1941a:	ff 25 58 e9 22 00    	jmpq   *0x22e958(%rip)        # 247d78 <free@GLIBC_2.2.5>
   19420:	48 83 c4 08          	add    $0x8,%rsp
   19424:	5b                   	pop    %rbx
   19425:	41 5e                	pop    %r14
   19427:	c3                   	retq   
   19428:	49 89 c6             	mov    %rax,%r14
   1942b:	48 8b 3b             	mov    (%rbx),%rdi
   1942e:	48 8b 43 08          	mov    0x8(%rbx),%rax
   19432:	48 8b 70 08          	mov    0x8(%rax),%rsi
   19436:	e8 05 e7 ff ff       	callq  17b40 <_ZN5alloc5alloc8box_free17h16551760f718b115E>
   1943b:	4c 89 f7             	mov    %r14,%rdi
   1943e:	e8 5d ac fe ff       	callq  40a0 <_Unwind_Resume@plt>
   19443:	0f 0b                	ud2    
   19445:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1944c:	00 00 00 
   1944f:	90                   	nop

0000000000019450 <_ZN4core3ptr13drop_in_place17h85b94a730b427fbaE>:
   19450:	48 89 f8             	mov    %rdi,%rax
   19453:	48 8b 3f             	mov    (%rdi),%rdi
   19456:	48 85 ff             	test   %rdi,%rdi
   19459:	74 0d                	je     19468 <_ZN4core3ptr13drop_in_place17h85b94a730b427fbaE+0x18>
   1945b:	48 83 78 08 00       	cmpq   $0x0,0x8(%rax)
   19460:	74 06                	je     19468 <_ZN4core3ptr13drop_in_place17h85b94a730b427fbaE+0x18>
   19462:	ff 25 10 e9 22 00    	jmpq   *0x22e910(%rip)        # 247d78 <free@GLIBC_2.2.5>
   19468:	c3                   	retq   
   19469:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000019470 <_ZN4core3ptr13drop_in_place17h0c0b9d0f4d2254bfE>:
   19470:	41 57                	push   %r15
   19472:	41 56                	push   %r14
   19474:	41 54                	push   %r12
   19476:	53                   	push   %rbx
   19477:	50                   	push   %rax
   19478:	48 89 fb             	mov    %rdi,%rbx
   1947b:	48 8b 3f             	mov    (%rdi),%rdi
   1947e:	4c 8b 35 b3 e9 22 00 	mov    0x22e9b3(%rip),%r14        # 247e38 <pthread_mutex_destroy@GLIBC_2.2.5>
   19485:	41 ff d6             	callq  *%r14
   19488:	48 8b 3b             	mov    (%rbx),%rdi
   1948b:	4c 8b 3d e6 e8 22 00 	mov    0x22e8e6(%rip),%r15        # 247d78 <free@GLIBC_2.2.5>
   19492:	41 ff d7             	callq  *%r15
   19495:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
   19499:	4c 8b 25 d0 ea 22 00 	mov    0x22ead0(%rip),%r12        # 247f70 <pthread_cond_destroy@GLIBC_2.3.2>
   194a0:	41 ff d4             	callq  *%r12
   194a3:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
   194a7:	41 ff d7             	callq  *%r15
   194aa:	48 8b 7b 20          	mov    0x20(%rbx),%rdi
   194ae:	41 ff d6             	callq  *%r14
   194b1:	48 8b 7b 20          	mov    0x20(%rbx),%rdi
   194b5:	41 ff d7             	callq  *%r15
   194b8:	48 8b 7b 30          	mov    0x30(%rbx),%rdi
   194bc:	41 ff d4             	callq  *%r12
   194bf:	48 8b 7b 30          	mov    0x30(%rbx),%rdi
   194c3:	41 ff d7             	callq  *%r15
   194c6:	48 8b 43 40          	mov    0x40(%rbx),%rax
   194ca:	f0 48 ff 08          	lock decq (%rax)
   194ce:	75 17                	jne    194e7 <_ZN4core3ptr13drop_in_place17h0c0b9d0f4d2254bfE+0x77>
   194d0:	48 83 c3 40          	add    $0x40,%rbx
   194d4:	48 89 df             	mov    %rbx,%rdi
   194d7:	48 83 c4 08          	add    $0x8,%rsp
   194db:	5b                   	pop    %rbx
   194dc:	41 5c                	pop    %r12
   194de:	41 5e                	pop    %r14
   194e0:	41 5f                	pop    %r15
   194e2:	e9 69 00 00 00       	jmpq   19550 <_ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17hf09fbc4b768e849cE>
   194e7:	48 83 c4 08          	add    $0x8,%rsp
   194eb:	5b                   	pop    %rbx
   194ec:	41 5c                	pop    %r12
   194ee:	41 5e                	pop    %r14
   194f0:	41 5f                	pop    %r15
   194f2:	c3                   	retq   
   194f3:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   194fa:	00 00 00 
   194fd:	0f 1f 00             	nopl   (%rax)

0000000000019500 <_ZN4core3ptr13drop_in_place17h01838cc416d121cfE>:
   19500:	41 56                	push   %r14
   19502:	53                   	push   %rbx
   19503:	50                   	push   %rax
   19504:	48 89 fb             	mov    %rdi,%rbx
   19507:	48 8b 3f             	mov    (%rdi),%rdi
   1950a:	ff 15 28 e9 22 00    	callq  *0x22e928(%rip)        # 247e38 <pthread_mutex_destroy@GLIBC_2.2.5>
   19510:	48 8b 3b             	mov    (%rbx),%rdi
   19513:	4c 8b 35 5e e8 22 00 	mov    0x22e85e(%rip),%r14        # 247d78 <free@GLIBC_2.2.5>
   1951a:	41 ff d6             	callq  *%r14
   1951d:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
   19521:	ff 15 49 ea 22 00    	callq  *0x22ea49(%rip)        # 247f70 <pthread_cond_destroy@GLIBC_2.3.2>
   19527:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
   1952b:	4c 89 f0             	mov    %r14,%rax
   1952e:	48 83 c4 08          	add    $0x8,%rsp
   19532:	5b                   	pop    %rbx
   19533:	41 5e                	pop    %r14
   19535:	ff e0                	jmpq   *%rax
   19537:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1953e:	00 00 

0000000000019540 <_ZN4core3ptr13drop_in_place17hf2ddc0f9b8b6420dE>:
   19540:	48 8b 07             	mov    (%rdi),%rax
   19543:	f0 48 ff 08          	lock decq (%rax)
   19547:	75 05                	jne    1954e <_ZN4core3ptr13drop_in_place17hf2ddc0f9b8b6420dE+0xe>
   19549:	e9 02 00 00 00       	jmpq   19550 <_ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17hf09fbc4b768e849cE>
   1954e:	c3                   	retq   
   1954f:	90                   	nop

0000000000019550 <_ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17hf09fbc4b768e849cE>:
   19550:	41 56                	push   %r14
   19552:	53                   	push   %rbx
   19553:	50                   	push   %rax
   19554:	49 89 fe             	mov    %rdi,%r14
   19557:	48 8b 07             	mov    (%rdi),%rax
   1955a:	48 8b 88 08 01 00 00 	mov    0x108(%rax),%rcx
   19561:	48 8b 88 00 01 00 00 	mov    0x100(%rax),%rcx
   19568:	48 8b 98 80 00 00 00 	mov    0x80(%rax),%rbx
   1956f:	48 83 e3 f8          	and    $0xfffffffffffffff8,%rbx
   19573:	48 83 7b 08 00       	cmpq   $0x0,0x8(%rbx)
   19578:	74 09                	je     19583 <_ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17hf09fbc4b768e849cE+0x33>
   1957a:	48 8b 3b             	mov    (%rbx),%rdi
   1957d:	ff 15 f5 e7 22 00    	callq  *0x22e7f5(%rip)        # 247d78 <free@GLIBC_2.2.5>
   19583:	48 89 df             	mov    %rbx,%rdi
   19586:	ff 15 ec e7 22 00    	callq  *0x22e7ec(%rip)        # 247d78 <free@GLIBC_2.2.5>
   1958c:	49 8b 06             	mov    (%r14),%rax
   1958f:	f0 48 ff 48 08       	lock decq 0x8(%rax)
   19594:	75 10                	jne    195a6 <_ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17hf09fbc4b768e849cE+0x56>
   19596:	49 8b 3e             	mov    (%r14),%rdi
   19599:	48 83 c4 08          	add    $0x8,%rsp
   1959d:	5b                   	pop    %rbx
   1959e:	41 5e                	pop    %r14
   195a0:	ff 25 d2 e7 22 00    	jmpq   *0x22e7d2(%rip)        # 247d78 <free@GLIBC_2.2.5>
   195a6:	48 83 c4 08          	add    $0x8,%rsp
   195aa:	5b                   	pop    %rbx
   195ab:	41 5e                	pop    %r14
   195ad:	c3                   	retq   
   195ae:	66 90                	xchg   %ax,%ax

00000000000195b0 <_ZN91_$LT$std..panicking..begin_panic..PanicPayload$LT$A$GT$$u20$as$u20$core..panic..BoxMeUp$GT$8take_box17h9752d44370e440baE>:
   195b0:	41 56                	push   %r14
   195b2:	53                   	push   %rbx
   195b3:	50                   	push   %rax
   195b4:	48 8b 1f             	mov    (%rdi),%rbx
   195b7:	4c 8b 77 08          	mov    0x8(%rdi),%r14
   195bb:	48 c7 07 00 00 00 00 	movq   $0x0,(%rdi)
   195c2:	48 85 db             	test   %rbx,%rbx
   195c5:	74 26                	je     195ed <_ZN91_$LT$std..panicking..begin_panic..PanicPayload$LT$A$GT$$u20$as$u20$core..panic..BoxMeUp$GT$8take_box17h9752d44370e440baE+0x3d>
   195c7:	bf 10 00 00 00       	mov    $0x10,%edi
   195cc:	ff 15 36 e9 22 00    	callq  *0x22e936(%rip)        # 247f08 <malloc@GLIBC_2.2.5>
   195d2:	48 85 c0             	test   %rax,%rax
   195d5:	74 1d                	je     195f4 <_ZN91_$LT$std..panicking..begin_panic..PanicPayload$LT$A$GT$$u20$as$u20$core..panic..BoxMeUp$GT$8take_box17h9752d44370e440baE+0x44>
   195d7:	48 89 18             	mov    %rbx,(%rax)
   195da:	4c 89 70 08          	mov    %r14,0x8(%rax)
   195de:	48 8d 15 0b d6 22 00 	lea    0x22d60b(%rip),%rdx        # 246bf0 <__init_array_end+0xbe0>
   195e5:	48 83 c4 08          	add    $0x8,%rsp
   195e9:	5b                   	pop    %rbx
   195ea:	41 5e                	pop    %r14
   195ec:	c3                   	retq   
   195ed:	e8 2e f8 00 00       	callq  28e20 <_ZN3std7process5abort17he9433c577a649e1aE>
   195f2:	0f 0b                	ud2    
   195f4:	bf 10 00 00 00       	mov    $0x10,%edi
   195f9:	be 08 00 00 00       	mov    $0x8,%esi
   195fe:	e8 bd be fe ff       	callq  54c0 <_ZN5alloc5alloc18handle_alloc_error17hf7bb8682f6c8b1d7E>
   19603:	0f 0b                	ud2    
   19605:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1960c:	00 00 00 
   1960f:	90                   	nop

0000000000019610 <_ZN91_$LT$std..panicking..begin_panic..PanicPayload$LT$A$GT$$u20$as$u20$core..panic..BoxMeUp$GT$3get17hd3cd642895d73260E>:
   19610:	50                   	push   %rax
   19611:	48 83 3f 00          	cmpq   $0x0,(%rdi)
   19615:	74 0c                	je     19623 <_ZN91_$LT$std..panicking..begin_panic..PanicPayload$LT$A$GT$$u20$as$u20$core..panic..BoxMeUp$GT$3get17hd3cd642895d73260E+0x13>
   19617:	48 89 f8             	mov    %rdi,%rax
   1961a:	48 8d 15 cf d5 22 00 	lea    0x22d5cf(%rip),%rdx        # 246bf0 <__init_array_end+0xbe0>
   19621:	59                   	pop    %rcx
   19622:	c3                   	retq   
   19623:	e8 f8 f7 00 00       	callq  28e20 <_ZN3std7process5abort17he9433c577a649e1aE>
   19628:	0f 0b                	ud2    
   1962a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000019630 <_ZN4core3ptr13drop_in_place17h66f16ad12d8b570cE>:
   19630:	48 8b 07             	mov    (%rdi),%rax
   19633:	f0 48 ff 08          	lock decq (%rax)
   19637:	75 05                	jne    1963e <_ZN4core3ptr13drop_in_place17h66f16ad12d8b570cE+0xe>
   19639:	e9 82 00 00 00       	jmpq   196c0 <_ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17h9f0067671e6227f9E>
   1963e:	c3                   	retq   
   1963f:	90                   	nop

0000000000019640 <_ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17hc7922ab78436749cE>:
   19640:	41 56                	push   %r14
   19642:	53                   	push   %rbx
   19643:	50                   	push   %rax
   19644:	49 89 fe             	mov    %rdi,%r14
   19647:	48 8b 1f             	mov    (%rdi),%rbx
   1964a:	48 83 7b 10 00       	cmpq   $0x0,0x10(%rbx)
   1964f:	74 24                	je     19675 <_ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17hc7922ab78436749cE+0x35>
   19651:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   19655:	48 85 ff             	test   %rdi,%rdi
   19658:	74 1b                	je     19675 <_ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17hc7922ab78436749cE+0x35>
   1965a:	48 8b 43 20          	mov    0x20(%rbx),%rax
   1965e:	ff 10                	callq  *(%rax)
   19660:	48 8b 43 20          	mov    0x20(%rbx),%rax
   19664:	48 83 78 08 00       	cmpq   $0x0,0x8(%rax)
   19669:	74 0a                	je     19675 <_ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17hc7922ab78436749cE+0x35>
   1966b:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   1966f:	ff 15 03 e7 22 00    	callq  *0x22e703(%rip)        # 247d78 <free@GLIBC_2.2.5>
   19675:	49 8b 06             	mov    (%r14),%rax
   19678:	f0 48 ff 48 08       	lock decq 0x8(%rax)
   1967d:	75 10                	jne    1968f <_ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17hc7922ab78436749cE+0x4f>
   1967f:	49 8b 3e             	mov    (%r14),%rdi
   19682:	48 83 c4 08          	add    $0x8,%rsp
   19686:	5b                   	pop    %rbx
   19687:	41 5e                	pop    %r14
   19689:	ff 25 e9 e6 22 00    	jmpq   *0x22e6e9(%rip)        # 247d78 <free@GLIBC_2.2.5>
   1968f:	48 83 c4 08          	add    $0x8,%rsp
   19693:	5b                   	pop    %rbx
   19694:	41 5e                	pop    %r14
   19696:	c3                   	retq   
   19697:	49 89 c6             	mov    %rax,%r14
   1969a:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   1969e:	48 8b 43 20          	mov    0x20(%rbx),%rax
   196a2:	48 8b 70 08          	mov    0x8(%rax),%rsi
   196a6:	e8 95 e4 ff ff       	callq  17b40 <_ZN5alloc5alloc8box_free17h16551760f718b115E>
   196ab:	4c 89 f7             	mov    %r14,%rdi
   196ae:	e8 ed a9 fe ff       	callq  40a0 <_Unwind_Resume@plt>
   196b3:	0f 0b                	ud2    
   196b5:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   196bc:	00 00 00 
   196bf:	90                   	nop

00000000000196c0 <_ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17h9f0067671e6227f9E>:
   196c0:	41 57                	push   %r15
   196c2:	41 56                	push   %r14
   196c4:	53                   	push   %rbx
   196c5:	49 89 fe             	mov    %rdi,%r14
   196c8:	48 8b 1f             	mov    (%rdi),%rbx
   196cb:	48 8b 43 10          	mov    0x10(%rbx),%rax
   196cf:	48 85 c0             	test   %rax,%rax
   196d2:	74 14                	je     196e8 <_ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17h9f0067671e6227f9E+0x28>
   196d4:	c6 00 00             	movb   $0x0,(%rax)
   196d7:	48 83 7b 18 00       	cmpq   $0x0,0x18(%rbx)
   196dc:	74 0a                	je     196e8 <_ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17h9f0067671e6227f9E+0x28>
   196de:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
   196e2:	ff 15 90 e6 22 00    	callq  *0x22e690(%rip)        # 247d78 <free@GLIBC_2.2.5>
   196e8:	48 8b 7b 30          	mov    0x30(%rbx),%rdi
   196ec:	ff 15 46 e7 22 00    	callq  *0x22e746(%rip)        # 247e38 <pthread_mutex_destroy@GLIBC_2.2.5>
   196f2:	48 8b 7b 30          	mov    0x30(%rbx),%rdi
   196f6:	4c 8b 3d 7b e6 22 00 	mov    0x22e67b(%rip),%r15        # 247d78 <free@GLIBC_2.2.5>
   196fd:	41 ff d7             	callq  *%r15
   19700:	48 8b 7b 40          	mov    0x40(%rbx),%rdi
   19704:	ff 15 66 e8 22 00    	callq  *0x22e866(%rip)        # 247f70 <pthread_cond_destroy@GLIBC_2.3.2>
   1970a:	48 8b 7b 40          	mov    0x40(%rbx),%rdi
   1970e:	41 ff d7             	callq  *%r15
   19711:	49 8b 06             	mov    (%r14),%rax
   19714:	f0 48 ff 48 08       	lock decq 0x8(%rax)
   19719:	75 0e                	jne    19729 <_ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17h9f0067671e6227f9E+0x69>
   1971b:	49 8b 3e             	mov    (%r14),%rdi
   1971e:	5b                   	pop    %rbx
   1971f:	41 5e                	pop    %r14
   19721:	41 5f                	pop    %r15
   19723:	ff 25 4f e6 22 00    	jmpq   *0x22e64f(%rip)        # 247d78 <free@GLIBC_2.2.5>
   19729:	5b                   	pop    %rbx
   1972a:	41 5e                	pop    %r14
   1972c:	41 5f                	pop    %r15
   1972e:	c3                   	retq   
   1972f:	90                   	nop

0000000000019730 <_ZN4core3ptr13drop_in_place17hb29abd4c123e0ce5E>:
   19730:	53                   	push   %rbx
   19731:	48 89 fb             	mov    %rdi,%rbx
   19734:	48 8b 3f             	mov    (%rdi),%rdi
   19737:	48 85 ff             	test   %rdi,%rdi
   1973a:	74 0d                	je     19749 <_ZN4core3ptr13drop_in_place17hb29abd4c123e0ce5E+0x19>
   1973c:	48 83 7b 08 00       	cmpq   $0x0,0x8(%rbx)
   19741:	74 06                	je     19749 <_ZN4core3ptr13drop_in_place17hb29abd4c123e0ce5E+0x19>
   19743:	ff 15 2f e6 22 00    	callq  *0x22e62f(%rip)        # 247d78 <free@GLIBC_2.2.5>
   19749:	48 8b 43 28          	mov    0x28(%rbx),%rax
   1974d:	f0 48 ff 08          	lock decq (%rax)
   19751:	75 09                	jne    1975c <_ZN4core3ptr13drop_in_place17hb29abd4c123e0ce5E+0x2c>
   19753:	48 8d 7b 28          	lea    0x28(%rbx),%rdi
   19757:	e8 f4 fd ff ff       	callq  19550 <_ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17hf09fbc4b768e849cE>
   1975c:	48 8b 43 48          	mov    0x48(%rbx),%rax
   19760:	f0 48 ff 08          	lock decq (%rax)
   19764:	75 0d                	jne    19773 <_ZN4core3ptr13drop_in_place17hb29abd4c123e0ce5E+0x43>
   19766:	48 83 c3 48          	add    $0x48,%rbx
   1976a:	48 89 df             	mov    %rbx,%rdi
   1976d:	5b                   	pop    %rbx
   1976e:	e9 4d f7 ff ff       	jmpq   18ec0 <_ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17hb5cb47fe96f5803fE>
   19773:	5b                   	pop    %rbx
   19774:	c3                   	retq   
   19775:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1977c:	00 00 00 
   1977f:	90                   	nop

0000000000019780 <_ZN4core3ptr13drop_in_place17h4520fe8af67975acE>:
   19780:	48 8b 07             	mov    (%rdi),%rax
   19783:	f0 48 ff 08          	lock decq (%rax)
   19787:	75 05                	jne    1978e <_ZN4core3ptr13drop_in_place17h4520fe8af67975acE+0xe>
   19789:	e9 b2 fe ff ff       	jmpq   19640 <_ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17hc7922ab78436749cE>
   1978e:	c3                   	retq   
   1978f:	90                   	nop

0000000000019790 <_ZN4core3ptr13drop_in_place17h561fedaf291b00bdE>:
   19790:	41 57                	push   %r15
   19792:	41 56                	push   %r14
   19794:	53                   	push   %rbx
   19795:	80 3f 02             	cmpb   $0x2,(%rdi)
   19798:	73 06                	jae    197a0 <_ZN4core3ptr13drop_in_place17h561fedaf291b00bdE+0x10>
   1979a:	5b                   	pop    %rbx
   1979b:	41 5e                	pop    %r14
   1979d:	41 5f                	pop    %r15
   1979f:	c3                   	retq   
   197a0:	49 89 ff             	mov    %rdi,%r15
   197a3:	48 8b 5f 08          	mov    0x8(%rdi),%rbx
   197a7:	48 8b 3b             	mov    (%rbx),%rdi
   197aa:	48 8b 43 08          	mov    0x8(%rbx),%rax
   197ae:	ff 10                	callq  *(%rax)
   197b0:	48 8b 43 08          	mov    0x8(%rbx),%rax
   197b4:	48 83 78 08 00       	cmpq   $0x0,0x8(%rax)
   197b9:	74 09                	je     197c4 <_ZN4core3ptr13drop_in_place17h561fedaf291b00bdE+0x34>
   197bb:	48 8b 3b             	mov    (%rbx),%rdi
   197be:	ff 15 b4 e5 22 00    	callq  *0x22e5b4(%rip)        # 247d78 <free@GLIBC_2.2.5>
   197c4:	49 8b 7f 08          	mov    0x8(%r15),%rdi
   197c8:	5b                   	pop    %rbx
   197c9:	41 5e                	pop    %r14
   197cb:	41 5f                	pop    %r15
   197cd:	ff 25 a5 e5 22 00    	jmpq   *0x22e5a5(%rip)        # 247d78 <free@GLIBC_2.2.5>
   197d3:	49 89 c6             	mov    %rax,%r14
   197d6:	48 8b 3b             	mov    (%rbx),%rdi
   197d9:	48 8b 43 08          	mov    0x8(%rbx),%rax
   197dd:	48 8b 70 08          	mov    0x8(%rax),%rsi
   197e1:	e8 5a e3 ff ff       	callq  17b40 <_ZN5alloc5alloc8box_free17h16551760f718b115E>
   197e6:	49 8b 7f 08          	mov    0x8(%r15),%rdi
   197ea:	e8 c1 7a ff ff       	callq  112b0 <_ZN5alloc5alloc8box_free17h434babe390d9f9d5E>
   197ef:	4c 89 f7             	mov    %r14,%rdi
   197f2:	e8 a9 a8 fe ff       	callq  40a0 <_Unwind_Resume@plt>
   197f7:	0f 0b                	ud2    
   197f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000019800 <_ZN4core3ptr13drop_in_place17h37608ad31edc1a23E>:
   19800:	41 56                	push   %r14
   19802:	53                   	push   %rbx
   19803:	50                   	push   %rax
   19804:	48 89 fb             	mov    %rdi,%rbx
   19807:	48 8b 07             	mov    (%rdi),%rax
   1980a:	f0 48 ff 08          	lock decq (%rax)
   1980e:	75 08                	jne    19818 <_ZN4core3ptr13drop_in_place17h37608ad31edc1a23E+0x18>
   19810:	48 89 df             	mov    %rbx,%rdi
   19813:	e8 a8 fe ff ff       	callq  196c0 <_ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17h9f0067671e6227f9E>
   19818:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
   1981c:	48 85 ff             	test   %rdi,%rdi
   1981f:	74 0d                	je     1982e <_ZN4core3ptr13drop_in_place17h37608ad31edc1a23E+0x2e>
   19821:	48 83 7b 10 00       	cmpq   $0x0,0x10(%rbx)
   19826:	74 06                	je     1982e <_ZN4core3ptr13drop_in_place17h37608ad31edc1a23E+0x2e>
   19828:	ff 15 4a e5 22 00    	callq  *0x22e54a(%rip)        # 247d78 <free@GLIBC_2.2.5>
   1982e:	48 8b 43 30          	mov    0x30(%rbx),%rax
   19832:	f0 48 ff 08          	lock decq (%rax)
   19836:	75 09                	jne    19841 <_ZN4core3ptr13drop_in_place17h37608ad31edc1a23E+0x41>
   19838:	48 8d 7b 30          	lea    0x30(%rbx),%rdi
   1983c:	e8 0f fd ff ff       	callq  19550 <_ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17hf09fbc4b768e849cE>
   19841:	48 8b 43 50          	mov    0x50(%rbx),%rax
   19845:	f0 48 ff 08          	lock decq (%rax)
   19849:	75 09                	jne    19854 <_ZN4core3ptr13drop_in_place17h37608ad31edc1a23E+0x54>
   1984b:	48 8d 7b 50          	lea    0x50(%rbx),%rdi
   1984f:	e8 6c f6 ff ff       	callq  18ec0 <_ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17hb5cb47fe96f5803fE>
   19854:	48 8b 43 60          	mov    0x60(%rbx),%rax
   19858:	f0 48 ff 08          	lock decq (%rax)
   1985c:	75 13                	jne    19871 <_ZN4core3ptr13drop_in_place17h37608ad31edc1a23E+0x71>
   1985e:	48 83 c3 60          	add    $0x60,%rbx
   19862:	48 89 df             	mov    %rbx,%rdi
   19865:	48 83 c4 08          	add    $0x8,%rsp
   19869:	5b                   	pop    %rbx
   1986a:	41 5e                	pop    %r14
   1986c:	e9 cf fd ff ff       	jmpq   19640 <_ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17hc7922ab78436749cE>
   19871:	48 83 c4 08          	add    $0x8,%rsp
   19875:	5b                   	pop    %rbx
   19876:	41 5e                	pop    %r14
   19878:	c3                   	retq   
   19879:	49 89 c6             	mov    %rax,%r14
   1987c:	48 83 c3 60          	add    $0x60,%rbx
   19880:	48 89 df             	mov    %rbx,%rdi
   19883:	e8 f8 fe ff ff       	callq  19780 <_ZN4core3ptr13drop_in_place17h4520fe8af67975acE>
   19888:	4c 89 f7             	mov    %r14,%rdi
   1988b:	e8 10 a8 fe ff       	callq  40a0 <_Unwind_Resume@plt>
   19890:	0f 0b                	ud2    
   19892:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   19899:	00 00 00 
   1989c:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000198a0 <_ZN4core3ops8function6FnOnce40call_once$u7b$$u7b$vtable.shim$u7d$$u7d$17h0e1b64fa1c7b4739E>:
   198a0:	55                   	push   %rbp
   198a1:	48 89 e5             	mov    %rsp,%rbp
   198a4:	41 57                	push   %r15
   198a6:	41 56                	push   %r14
   198a8:	41 55                	push   %r13
   198aa:	41 54                	push   %r12
   198ac:	53                   	push   %rbx
   198ad:	48 83 e4 e0          	and    $0xffffffffffffffe0,%rsp
   198b1:	48 81 ec 00 01 00 00 	sub    $0x100,%rsp
   198b8:	49 89 fd             	mov    %rdi,%r13
   198bb:	48 8b 07             	mov    (%rdi),%rax
   198be:	48 8b 70 10          	mov    0x10(%rax),%rsi
   198c2:	48 85 f6             	test   %rsi,%rsi
   198c5:	74 14                	je     198db <_ZN4core3ops8function6FnOnce40call_once$u7b$$u7b$vtable.shim$u7d$$u7d$17h0e1b64fa1c7b4739E+0x3b>
   198c7:	bf 0f 00 00 00       	mov    $0xf,%edi
   198cc:	31 d2                	xor    %edx,%edx
   198ce:	31 c9                	xor    %ecx,%ecx
   198d0:	45 31 c0             	xor    %r8d,%r8d
   198d3:	31 c0                	xor    %eax,%eax
   198d5:	ff 15 fd e5 22 00    	callq  *0x22e5fd(%rip)        # 247ed8 <prctl@GLIBC_2.2.5>
   198db:	c5 f9 ef c0          	vpxor  %xmm0,%xmm0,%xmm0
   198df:	c5 fe 7f 84 24 98 00 	vmovdqu %ymm0,0x98(%rsp)
   198e6:	00 00 
   198e8:	c5 fd 7f 84 24 80 00 	vmovdqa %ymm0,0x80(%rsp)
   198ef:	00 00 
   198f1:	48 8d bc 24 80 00 00 	lea    0x80(%rsp),%rdi
   198f8:	00 
   198f9:	c5 f8 77             	vzeroupper 
   198fc:	ff 15 9e e5 22 00    	callq  *0x22e59e(%rip)        # 247ea0 <pthread_attr_init@GLIBC_2.2.5>
   19902:	89 04 24             	mov    %eax,(%rsp)
   19905:	85 c0                	test   %eax,%eax
   19907:	0f 85 79 01 00 00    	jne    19a86 <_ZN4core3ops8function6FnOnce40call_once$u7b$$u7b$vtable.shim$u7d$$u7d$17h0e1b64fa1c7b4739E+0x1e6>
   1990d:	ff 15 55 e6 22 00    	callq  *0x22e655(%rip)        # 247f68 <pthread_self@GLIBC_2.2.5>
   19913:	48 8d b4 24 80 00 00 	lea    0x80(%rsp),%rsi
   1991a:	00 
   1991b:	48 89 c7             	mov    %rax,%rdi
   1991e:	ff 15 84 e4 22 00    	callq  *0x22e484(%rip)        # 247da8 <pthread_getattr_np@GLIBC_2.2.5>
   19924:	85 c0                	test   %eax,%eax
   19926:	74 05                	je     1992d <_ZN4core3ops8function6FnOnce40call_once$u7b$$u7b$vtable.shim$u7d$$u7d$17h0e1b64fa1c7b4739E+0x8d>
   19928:	45 31 ff             	xor    %r15d,%r15d
   1992b:	eb 7f                	jmp    199ac <_ZN4core3ops8function6FnOnce40call_once$u7b$$u7b$vtable.shim$u7d$$u7d$17h0e1b64fa1c7b4739E+0x10c>
   1992d:	48 c7 44 24 68 00 00 	movq   $0x0,0x68(%rsp)
   19934:	00 00 
   19936:	48 8d bc 24 80 00 00 	lea    0x80(%rsp),%rdi
   1993d:	00 
   1993e:	48 8d 74 24 68       	lea    0x68(%rsp),%rsi
   19943:	ff 15 27 e4 22 00    	callq  *0x22e427(%rip)        # 247d70 <pthread_attr_getguardsize@GLIBC_2.2.5>
   19949:	89 04 24             	mov    %eax,(%rsp)
   1994c:	85 c0                	test   %eax,%eax
   1994e:	0f 85 32 02 00 00    	jne    19b86 <_ZN4core3ops8function6FnOnce40call_once$u7b$$u7b$vtable.shim$u7d$$u7d$17h0e1b64fa1c7b4739E+0x2e6>
   19954:	48 83 7c 24 68 00    	cmpq   $0x0,0x68(%rsp)
   1995a:	0f 84 a6 02 00 00    	je     19c06 <_ZN4core3ops8function6FnOnce40call_once$u7b$$u7b$vtable.shim$u7d$$u7d$17h0e1b64fa1c7b4739E+0x366>
   19960:	48 c7 44 24 78 00 00 	movq   $0x0,0x78(%rsp)
   19967:	00 00 
   19969:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
   19970:	00 
   19971:	48 8d bc 24 80 00 00 	lea    0x80(%rsp),%rdi
   19978:	00 
   19979:	48 8d 74 24 78       	lea    0x78(%rsp),%rsi
   1997e:	48 89 e2             	mov    %rsp,%rdx
   19981:	ff 15 f1 e4 22 00    	callq  *0x22e4f1(%rip)        # 247e78 <pthread_attr_getstack@GLIBC_2.2.5>
   19987:	89 44 24 74          	mov    %eax,0x74(%rsp)
   1998b:	85 c0                	test   %eax,%eax
   1998d:	0f 85 8d 02 00 00    	jne    19c20 <_ZN4core3ops8function6FnOnce40call_once$u7b$$u7b$vtable.shim$u7d$$u7d$17h0e1b64fa1c7b4739E+0x380>
   19993:	48 8b 44 24 78       	mov    0x78(%rsp),%rax
   19998:	48 8b 5c 24 68       	mov    0x68(%rsp),%rbx
   1999d:	49 89 c6             	mov    %rax,%r14
   199a0:	49 29 de             	sub    %rbx,%r14
   199a3:	48 01 c3             	add    %rax,%rbx
   199a6:	41 bf 01 00 00 00    	mov    $0x1,%r15d
   199ac:	48 8d bc 24 80 00 00 	lea    0x80(%rsp),%rdi
   199b3:	00 
   199b4:	ff 15 ce e5 22 00    	callq  *0x22e5ce(%rip)        # 247f88 <pthread_attr_destroy@GLIBC_2.2.5>
   199ba:	89 04 24             	mov    %eax,(%rsp)
   199bd:	85 c0                	test   %eax,%eax
   199bf:	0f 85 41 01 00 00    	jne    19b06 <_ZN4core3ops8function6FnOnce40call_once$u7b$$u7b$vtable.shim$u7d$$u7d$17h0e1b64fa1c7b4739E+0x266>
   199c5:	4c 89 7c 24 38       	mov    %r15,0x38(%rsp)
   199ca:	4c 89 74 24 40       	mov    %r14,0x40(%rsp)
   199cf:	48 89 5c 24 48       	mov    %rbx,0x48(%rsp)
   199d4:	49 8b 75 00          	mov    0x0(%r13),%rsi
   199d8:	48 8d 7c 24 38       	lea    0x38(%rsp),%rdi
   199dd:	e8 be 25 01 00       	callq  2bfa0 <_ZN3std10sys_common11thread_info3set17h5184dcec2d40b2c6E>
   199e2:	c4 c1 7e 6f 45 08    	vmovdqu 0x8(%r13),%ymm0
   199e8:	c4 c1 7c 10 4d 28    	vmovups 0x28(%r13),%ymm1
   199ee:	c4 c1 7c 10 55 40    	vmovups 0x40(%r13),%ymm2
   199f4:	c5 fc 11 94 24 b8 00 	vmovups %ymm2,0xb8(%rsp)
   199fb:	00 00 
   199fd:	c5 fc 29 8c 24 a0 00 	vmovaps %ymm1,0xa0(%rsp)
   19a04:	00 00 
   19a06:	c5 fd 7f 84 24 80 00 	vmovdqa %ymm0,0x80(%rsp)
   19a0d:	00 00 
   19a0f:	48 8d bc 24 80 00 00 	lea    0x80(%rsp),%rdi
   19a16:	00 
   19a17:	c5 f8 77             	vzeroupper 
   19a1a:	e8 61 03 00 00       	callq  19d80 <_ZN3std10sys_common9backtrace28__rust_begin_short_backtrace17hfffb094f39537836E>
   19a1f:	45 31 ff             	xor    %r15d,%r15d
   19a22:	49 8b 5d 60          	mov    0x60(%r13),%rbx
   19a26:	48 83 7b 10 00       	cmpq   $0x0,0x10(%rbx)
   19a2b:	74 24                	je     19a51 <_ZN4core3ops8function6FnOnce40call_once$u7b$$u7b$vtable.shim$u7d$$u7d$17h0e1b64fa1c7b4739E+0x1b1>
   19a2d:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   19a31:	48 85 ff             	test   %rdi,%rdi
   19a34:	74 1b                	je     19a51 <_ZN4core3ops8function6FnOnce40call_once$u7b$$u7b$vtable.shim$u7d$$u7d$17h0e1b64fa1c7b4739E+0x1b1>
   19a36:	48 8b 43 20          	mov    0x20(%rbx),%rax
   19a3a:	ff 10                	callq  *(%rax)
   19a3c:	48 8b 43 20          	mov    0x20(%rbx),%rax
   19a40:	48 83 78 08 00       	cmpq   $0x0,0x8(%rax)
   19a45:	74 0a                	je     19a51 <_ZN4core3ops8function6FnOnce40call_once$u7b$$u7b$vtable.shim$u7d$$u7d$17h0e1b64fa1c7b4739E+0x1b1>
   19a47:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   19a4b:	ff 15 27 e3 22 00    	callq  *0x22e327(%rip)        # 247d78 <free@GLIBC_2.2.5>
   19a51:	49 83 c5 60          	add    $0x60,%r13
   19a55:	48 c7 43 10 01 00 00 	movq   $0x1,0x10(%rbx)
   19a5c:	00 
   19a5d:	4c 89 7b 18          	mov    %r15,0x18(%rbx)
   19a61:	4c 89 63 20          	mov    %r12,0x20(%rbx)
   19a65:	49 8b 45 00          	mov    0x0(%r13),%rax
   19a69:	f0 48 ff 08          	lock decq (%rax)
   19a6d:	75 08                	jne    19a77 <_ZN4core3ops8function6FnOnce40call_once$u7b$$u7b$vtable.shim$u7d$$u7d$17h0e1b64fa1c7b4739E+0x1d7>
   19a6f:	4c 89 ef             	mov    %r13,%rdi
   19a72:	e8 c9 fb ff ff       	callq  19640 <_ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17hc7922ab78436749cE>
   19a77:	48 8d 65 d8          	lea    -0x28(%rbp),%rsp
   19a7b:	5b                   	pop    %rbx
   19a7c:	41 5c                	pop    %r12
   19a7e:	41 5d                	pop    %r13
   19a80:	41 5e                	pop    %r14
   19a82:	41 5f                	pop    %r15
   19a84:	5d                   	pop    %rbp
   19a85:	c3                   	retq   
   19a86:	48 89 e0             	mov    %rsp,%rax
   19a89:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   19a8e:	48 8d 05 03 2a 02 00 	lea    0x22a03(%rip),%rax        # 3c498 <_ZN4core7unicode12unicode_data15grapheme_extend6BITSET17h68ce7f61ccfa32feE+0x9f8>
   19a95:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   19a9a:	48 8d 44 24 08       	lea    0x8(%rsp),%rax
   19a9f:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   19aa4:	48 8d 05 25 9d 00 00 	lea    0x9d25(%rip),%rax        # 237d0 <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h60ee9c74ee2aa888E>
   19aab:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   19ab0:	48 8d 4c 24 10       	lea    0x10(%rsp),%rcx
   19ab5:	48 89 4c 24 28       	mov    %rcx,0x28(%rsp)
   19aba:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   19abf:	48 8d 05 d2 d3 22 00 	lea    0x22d3d2(%rip),%rax        # 246e98 <__init_array_end+0xe88>
   19ac6:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   19acb:	48 c7 44 24 40 03 00 	movq   $0x3,0x40(%rsp)
   19ad2:	00 00 
   19ad4:	48 c7 44 24 48 00 00 	movq   $0x0,0x48(%rsp)
   19adb:	00 00 
   19add:	48 8d 44 24 18       	lea    0x18(%rsp),%rax
   19ae2:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
   19ae7:	48 c7 44 24 60 02 00 	movq   $0x2,0x60(%rsp)
   19aee:	00 00 
   19af0:	48 8d 35 51 df 22 00 	lea    0x22df51(%rip),%rsi        # 247a48 <__init_array_end+0x1a38>
   19af7:	48 8d 7c 24 38       	lea    0x38(%rsp),%rdi
   19afc:	e8 df 9e 00 00       	callq  239e0 <_ZN3std9panicking15begin_panic_fmt17h7fd3ef9bf535b4d1E>
   19b01:	e9 97 01 00 00       	jmpq   19c9d <_ZN4core3ops8function6FnOnce40call_once$u7b$$u7b$vtable.shim$u7d$$u7d$17h0e1b64fa1c7b4739E+0x3fd>
   19b06:	48 89 e0             	mov    %rsp,%rax
   19b09:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   19b0e:	48 8d 05 83 29 02 00 	lea    0x22983(%rip),%rax        # 3c498 <_ZN4core7unicode12unicode_data15grapheme_extend6BITSET17h68ce7f61ccfa32feE+0x9f8>
   19b15:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   19b1a:	48 8d 44 24 08       	lea    0x8(%rsp),%rax
   19b1f:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   19b24:	48 8d 05 a5 9c 00 00 	lea    0x9ca5(%rip),%rax        # 237d0 <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h60ee9c74ee2aa888E>
   19b2b:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   19b30:	48 8d 4c 24 10       	lea    0x10(%rsp),%rcx
   19b35:	48 89 4c 24 28       	mov    %rcx,0x28(%rsp)
   19b3a:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   19b3f:	48 8d 05 52 d3 22 00 	lea    0x22d352(%rip),%rax        # 246e98 <__init_array_end+0xe88>
   19b46:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   19b4b:	48 c7 44 24 40 03 00 	movq   $0x3,0x40(%rsp)
   19b52:	00 00 
   19b54:	48 c7 44 24 48 00 00 	movq   $0x0,0x48(%rsp)
   19b5b:	00 00 
   19b5d:	48 8d 44 24 18       	lea    0x18(%rsp),%rax
   19b62:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
   19b67:	48 c7 44 24 60 02 00 	movq   $0x2,0x60(%rsp)
   19b6e:	00 00 
   19b70:	48 8d 35 31 df 22 00 	lea    0x22df31(%rip),%rsi        # 247aa8 <__init_array_end+0x1a98>
   19b77:	48 8d 7c 24 38       	lea    0x38(%rsp),%rdi
   19b7c:	e8 5f 9e 00 00       	callq  239e0 <_ZN3std9panicking15begin_panic_fmt17h7fd3ef9bf535b4d1E>
   19b81:	e9 17 01 00 00       	jmpq   19c9d <_ZN4core3ops8function6FnOnce40call_once$u7b$$u7b$vtable.shim$u7d$$u7d$17h0e1b64fa1c7b4739E+0x3fd>
   19b86:	48 89 e0             	mov    %rsp,%rax
   19b89:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   19b8e:	48 8d 05 03 29 02 00 	lea    0x22903(%rip),%rax        # 3c498 <_ZN4core7unicode12unicode_data15grapheme_extend6BITSET17h68ce7f61ccfa32feE+0x9f8>
   19b95:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   19b9a:	48 8d 44 24 08       	lea    0x8(%rsp),%rax
   19b9f:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   19ba4:	48 8d 05 25 9c 00 00 	lea    0x9c25(%rip),%rax        # 237d0 <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h60ee9c74ee2aa888E>
   19bab:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   19bb0:	48 8d 4c 24 10       	lea    0x10(%rsp),%rcx
   19bb5:	48 89 4c 24 28       	mov    %rcx,0x28(%rsp)
   19bba:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   19bbf:	48 8d 05 d2 d2 22 00 	lea    0x22d2d2(%rip),%rax        # 246e98 <__init_array_end+0xe88>
   19bc6:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   19bcb:	48 c7 44 24 40 03 00 	movq   $0x3,0x40(%rsp)
   19bd2:	00 00 
   19bd4:	48 c7 44 24 48 00 00 	movq   $0x0,0x48(%rsp)
   19bdb:	00 00 
   19bdd:	48 8d 44 24 18       	lea    0x18(%rsp),%rax
   19be2:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
   19be7:	48 c7 44 24 60 02 00 	movq   $0x2,0x60(%rsp)
   19bee:	00 00 
   19bf0:	48 8d 35 69 de 22 00 	lea    0x22de69(%rip),%rsi        # 247a60 <__init_array_end+0x1a50>
   19bf7:	48 8d 7c 24 38       	lea    0x38(%rsp),%rdi
   19bfc:	e8 df 9d 00 00       	callq  239e0 <_ZN3std9panicking15begin_panic_fmt17h7fd3ef9bf535b4d1E>
   19c01:	e9 97 00 00 00       	jmpq   19c9d <_ZN4core3ops8function6FnOnce40call_once$u7b$$u7b$vtable.shim$u7d$$u7d$17h0e1b64fa1c7b4739E+0x3fd>
   19c06:	48 8d 3d fb 42 02 00 	lea    0x242fb(%rip),%rdi        # 3df08 <str.0+0xe8>
   19c0d:	48 8d 15 64 de 22 00 	lea    0x22de64(%rip),%rdx        # 247a78 <__init_array_end+0x1a68>
   19c14:	be 16 00 00 00       	mov    $0x16,%esi
   19c19:	e8 a2 98 00 00       	callq  234c0 <_ZN3std9panicking11begin_panic17hc5f3eabb2c219d56E>
   19c1e:	eb 7d                	jmp    19c9d <_ZN4core3ops8function6FnOnce40call_once$u7b$$u7b$vtable.shim$u7d$$u7d$17h0e1b64fa1c7b4739E+0x3fd>
   19c20:	48 8d 44 24 74       	lea    0x74(%rsp),%rax
   19c25:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   19c2a:	48 8d 05 67 28 02 00 	lea    0x22867(%rip),%rax        # 3c498 <_ZN4core7unicode12unicode_data15grapheme_extend6BITSET17h68ce7f61ccfa32feE+0x9f8>
   19c31:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   19c36:	48 8d 44 24 08       	lea    0x8(%rsp),%rax
   19c3b:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   19c40:	48 8d 05 89 9b 00 00 	lea    0x9b89(%rip),%rax        # 237d0 <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h60ee9c74ee2aa888E>
   19c47:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   19c4c:	48 8d 4c 24 10       	lea    0x10(%rsp),%rcx
   19c51:	48 89 4c 24 28       	mov    %rcx,0x28(%rsp)
   19c56:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   19c5b:	48 8d 05 36 d2 22 00 	lea    0x22d236(%rip),%rax        # 246e98 <__init_array_end+0xe88>
   19c62:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   19c67:	48 c7 44 24 40 03 00 	movq   $0x3,0x40(%rsp)
   19c6e:	00 00 
   19c70:	48 c7 44 24 48 00 00 	movq   $0x0,0x48(%rsp)
   19c77:	00 00 
   19c79:	48 8d 44 24 18       	lea    0x18(%rsp),%rax
   19c7e:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
   19c83:	48 c7 44 24 60 02 00 	movq   $0x2,0x60(%rsp)
   19c8a:	00 00 
   19c8c:	48 8d 35 fd dd 22 00 	lea    0x22ddfd(%rip),%rsi        # 247a90 <__init_array_end+0x1a80>
   19c93:	48 8d 7c 24 38       	lea    0x38(%rsp),%rdi
   19c98:	e8 43 9d 00 00       	callq  239e0 <_ZN3std9panicking15begin_panic_fmt17h7fd3ef9bf535b4d1E>
   19c9d:	0f 0b                	ud2    
   19c9f:	49 89 c6             	mov    %rax,%r14
   19ca2:	4c 89 ef             	mov    %r13,%rdi
   19ca5:	e8 86 f9 ff ff       	callq  19630 <_ZN4core3ptr13drop_in_place17h66f16ad12d8b570cE>
   19caa:	e9 aa 00 00 00       	jmpq   19d59 <_ZN4core3ops8function6FnOnce40call_once$u7b$$u7b$vtable.shim$u7d$$u7d$17h0e1b64fa1c7b4739E+0x4b9>
   19caf:	49 89 c6             	mov    %rax,%r14
   19cb2:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   19cb6:	48 8b 43 20          	mov    0x20(%rbx),%rax
   19cba:	48 8b 70 08          	mov    0x8(%rax),%rsi
   19cbe:	e8 7d de ff ff       	callq  17b40 <_ZN5alloc5alloc8box_free17h16551760f718b115E>
   19cc3:	48 c7 43 10 01 00 00 	movq   $0x1,0x10(%rbx)
   19cca:	00 
   19ccb:	4c 89 7b 18          	mov    %r15,0x18(%rbx)
   19ccf:	4c 89 63 20          	mov    %r12,0x20(%rbx)
   19cd3:	e9 8a 00 00 00       	jmpq   19d62 <_ZN4core3ops8function6FnOnce40call_once$u7b$$u7b$vtable.shim$u7d$$u7d$17h0e1b64fa1c7b4739E+0x4c2>
   19cd8:	4c 8b 78 40          	mov    0x40(%rax),%r15
   19cdc:	4c 8b 60 48          	mov    0x48(%rax),%r12
   19ce0:	48 89 c7             	mov    %rax,%rdi
   19ce3:	ff 15 8f e0 22 00    	callq  *0x22e08f(%rip)        # 247d78 <free@GLIBC_2.2.5>
   19ce9:	64 48 83 3c 25 a0 ff 	cmpq   $0x1,%fs:0xffffffffffffffa0
   19cf0:	ff ff 01 
   19cf3:	75 29                	jne    19d1e <_ZN4core3ops8function6FnOnce40call_once$u7b$$u7b$vtable.shim$u7d$$u7d$17h0e1b64fa1c7b4739E+0x47e>
   19cf5:	64 48 8b 04 25 a8 ff 	mov    %fs:0xffffffffffffffa8,%rax
   19cfc:	ff ff 
   19cfe:	48 ff c8             	dec    %rax
   19d01:	64 48 89 04 25 a8 ff 	mov    %rax,%fs:0xffffffffffffffa8
   19d08:	ff ff 
   19d0a:	49 8b 5d 60          	mov    0x60(%r13),%rbx
   19d0e:	48 83 7b 10 00       	cmpq   $0x0,0x10(%rbx)
   19d13:	0f 85 14 fd ff ff    	jne    19a2d <_ZN4core3ops8function6FnOnce40call_once$u7b$$u7b$vtable.shim$u7d$$u7d$17h0e1b64fa1c7b4739E+0x18d>
   19d19:	e9 33 fd ff ff       	jmpq   19a51 <_ZN4core3ops8function6FnOnce40call_once$u7b$$u7b$vtable.shim$u7d$$u7d$17h0e1b64fa1c7b4739E+0x1b1>
   19d1e:	b8 01 00 00 00       	mov    $0x1,%eax
   19d23:	c4 e1 f9 6e c0       	vmovq  %rax,%xmm0
   19d28:	64 c5 f9 7f 04 25 a0 	vmovdqa %xmm0,%fs:0xffffffffffffffa0
   19d2f:	ff ff ff 
   19d32:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
   19d39:	64 48 89 04 25 a8 ff 	mov    %rax,%fs:0xffffffffffffffa8
   19d40:	ff ff 
   19d42:	49 8b 5d 60          	mov    0x60(%r13),%rbx
   19d46:	48 83 7b 10 00       	cmpq   $0x0,0x10(%rbx)
   19d4b:	0f 85 dc fc ff ff    	jne    19a2d <_ZN4core3ops8function6FnOnce40call_once$u7b$$u7b$vtable.shim$u7d$$u7d$17h0e1b64fa1c7b4739E+0x18d>
   19d51:	e9 fb fc ff ff       	jmpq   19a51 <_ZN4core3ops8function6FnOnce40call_once$u7b$$u7b$vtable.shim$u7d$$u7d$17h0e1b64fa1c7b4739E+0x1b1>
   19d56:	49 89 c6             	mov    %rax,%r14
   19d59:	49 8d 7d 08          	lea    0x8(%r13),%rdi
   19d5d:	e8 ce f9 ff ff       	callq  19730 <_ZN4core3ptr13drop_in_place17hb29abd4c123e0ce5E>
   19d62:	49 83 c5 60          	add    $0x60,%r13
   19d66:	4c 89 ef             	mov    %r13,%rdi
   19d69:	e8 12 fa ff ff       	callq  19780 <_ZN4core3ptr13drop_in_place17h4520fe8af67975acE>
   19d6e:	4c 89 f7             	mov    %r14,%rdi
   19d71:	e8 2a a3 fe ff       	callq  40a0 <_Unwind_Resume@plt>
   19d76:	0f 0b                	ud2    
   19d78:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   19d7f:	00 

0000000000019d80 <_ZN3std10sys_common9backtrace28__rust_begin_short_backtrace17hfffb094f39537836E>:
   19d80:	55                   	push   %rbp
   19d81:	48 89 e5             	mov    %rsp,%rbp
   19d84:	41 57                	push   %r15
   19d86:	41 56                	push   %r14
   19d88:	41 55                	push   %r13
   19d8a:	41 54                	push   %r12
   19d8c:	53                   	push   %rbx
   19d8d:	48 83 e4 80          	and    $0xffffffffffffff80,%rsp
   19d91:	48 81 ec 00 04 00 00 	sub    $0x400,%rsp
   19d98:	49 bf 00 00 00 00 00 	movabs $0x800000000000000,%r15
   19d9f:	00 00 08 
        b.spawn(|| thread.run())?;
   19da2:	c5 fc 10 07          	vmovups (%rdi),%ymm0
   19da6:	c5 fc 10 4f 20       	vmovups 0x20(%rdi),%ymm1
   19dab:	c5 fc 10 57 38       	vmovups 0x38(%rdi),%ymm2
   19db0:	c5 fc 11 94 24 d8 01 	vmovups %ymm2,0x1d8(%rsp)
   19db7:	00 00 
   19db9:	c5 fc 29 8c 24 c0 01 	vmovaps %ymm1,0x1c0(%rsp)
   19dc0:	00 00 
   19dc2:	c5 fc 29 84 24 a0 01 	vmovaps %ymm0,0x1a0(%rsp)
   19dc9:	00 00 
        unsafe { main_loop(self.worker, self.registry, self.index) }
   19dcb:	4c 8b ac 24 e8 01 00 	mov    0x1e8(%rsp),%r13
   19dd2:	00 
        worker,
   19dd3:	c5 fc 10 84 24 c8 01 	vmovups 0x1c8(%rsp),%ymm0
   19dda:	00 00 
   19ddc:	c5 fc 29 44 24 40    	vmovaps %ymm0,0x40(%rsp)
        unsafe { main_loop(self.worker, self.registry, self.index) }
   19de2:	48 8b b4 24 f0 01 00 	mov    0x1f0(%rsp),%rsi
   19de9:	00 
        SegQueue {
   19dea:	c5 f8 57 c0          	vxorps %xmm0,%xmm0,%xmm0
   19dee:	c5 f8 29 84 24 00 02 	vmovaps %xmm0,0x200(%rsp)
   19df5:	00 00 
   19df7:	c5 f8 29 84 24 80 02 	vmovaps %xmm0,0x280(%rsp)
   19dfe:	00 00 
    inner: SegQueue<JobRef>,
}

impl JobFifo {
    pub(super) fn new() -> Self {
        JobFifo {
   19e00:	c5 fc 28 84 24 20 02 	vmovaps 0x220(%rsp),%ymm0
   19e07:	00 00 
   19e09:	c5 fc 28 8c 24 40 02 	vmovaps 0x240(%rsp),%ymm1
   19e10:	00 00 
   19e12:	c5 fc 28 94 24 60 02 	vmovaps 0x260(%rsp),%ymm2
   19e19:	00 00 
   19e1b:	c5 fc 28 9c 24 a0 02 	vmovaps 0x2a0(%rsp),%ymm3
   19e22:	00 00 
   19e24:	c5 fc 29 84 24 a0 00 	vmovaps %ymm0,0xa0(%rsp)
   19e2b:	00 00 
   19e2d:	c5 fc 29 8c 24 c0 00 	vmovaps %ymm1,0xc0(%rsp)
   19e34:	00 00 
   19e36:	c5 fc 29 94 24 e0 00 	vmovaps %ymm2,0xe0(%rsp)
   19e3d:	00 00 
   19e3f:	c5 fc 29 9c 24 20 01 	vmovaps %ymm3,0x120(%rsp)
   19e46:	00 00 
   19e48:	c5 fc 28 84 24 c0 02 	vmovaps 0x2c0(%rsp),%ymm0
   19e4f:	00 00 
   19e51:	c5 fc 29 84 24 40 01 	vmovaps %ymm0,0x140(%rsp)
   19e58:	00 00 
   19e5a:	c5 fc 28 84 24 e0 02 	vmovaps 0x2e0(%rsp),%ymm0
   19e61:	00 00 
   19e63:	c5 fc 29 84 24 60 01 	vmovaps %ymm0,0x160(%rsp)
   19e6a:	00 00 
   19e6c:	c5 f8 10 84 24 00 02 	vmovups 0x200(%rsp),%xmm0
   19e73:	00 00 
   19e75:	c5 f8 11 84 24 80 00 	vmovups %xmm0,0x80(%rsp)
   19e7c:	00 00 
   19e7e:	c5 f8 10 84 24 10 02 	vmovups 0x210(%rsp),%xmm0
   19e85:	00 00 
   19e87:	c5 f8 11 84 24 90 00 	vmovups %xmm0,0x90(%rsp)
   19e8e:	00 00 
   19e90:	c5 f8 10 84 24 80 02 	vmovups 0x280(%rsp),%xmm0
   19e97:	00 00 
   19e99:	c5 f8 11 84 24 00 01 	vmovups %xmm0,0x100(%rsp)
   19ea0:	00 00 
   19ea2:	c5 fa 6f 84 24 90 02 	vmovdqu 0x290(%rsp),%xmm0
   19ea9:	00 00 
   19eab:	c5 fa 7f 84 24 10 01 	vmovdqu %xmm0,0x110(%rsp)
   19eb2:	00 00 
   19eb4:	4c 89 6c 24 30       	mov    %r13,0x30(%rsp)
   19eb9:	49 b8 73 65 74 79 62 	movabs $0x7465646279746573,%r8
   19ec0:	64 65 74 
   19ec3:	49 b9 61 72 65 6e 65 	movabs $0x6c7967656e657261,%r9
   19eca:	67 79 6c 
   19ecd:	49 ba c6 df de d7 e2 	movabs $0xded7d4e2d7dedfc6,%r10
   19ed4:	d4 d7 de 
   19ed7:	49 bb d0 ea 9f c1 6f 	movabs $0xa60c596fc19fead0,%r11
   19ede:	59 0c a6 
   19ee1:	49 be 25 73 de f0 74 	movabs $0xe414a674f0de7325,%r14
   19ee8:	a6 14 e4 
   19eeb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   19ef0:	ba 01 00 00 00       	mov    $0x1,%edx
   19ef5:	f0 48 0f c1 15 82 e1 	lock xadd %rdx,0x22e182(%rip)        # 248080 <_ZN10rayon_core8registry14XorShift64Star3new7COUNTER17h49eef8127440aa66E>
   19efc:	22 00 
   19efe:	48 89 d1             	mov    %rdx,%rcx
   19f01:	4c 31 c1             	xor    %r8,%rcx
   19f04:	4a 8d 04 09          	lea    (%rcx,%r9,1),%rax
   19f08:	c4 e3 fb f0 f9 30    	rorx   $0x30,%rcx,%rdi
   19f0e:	48 31 c7             	xor    %rax,%rdi
   19f11:	c4 e3 fb f0 c7 2b    	rorx   $0x2b,%rdi,%rax
   19f17:	4c 01 d7             	add    %r10,%rdi
   19f1a:	48 31 f8             	xor    %rdi,%rax
   19f1d:	4c 01 d9             	add    %r11,%rcx
   19f20:	c4 e3 fb f0 d9 20    	rorx   $0x20,%rcx,%rbx
   19f26:	4c 31 f1             	xor    %r14,%rcx
   19f29:	48 31 d7             	xor    %rdx,%rdi
   19f2c:	48 89 c2             	mov    %rax,%rdx
   19f2f:	4c 31 fa             	xor    %r15,%rdx
   19f32:	48 01 cf             	add    %rcx,%rdi
   19f35:	c4 e3 fb f0 c9 33    	rorx   $0x33,%rcx,%rcx
   19f3b:	48 31 f9             	xor    %rdi,%rcx
   19f3e:	c4 e3 fb f0 ff 20    	rorx   $0x20,%rdi,%rdi
   19f44:	48 01 d3             	add    %rdx,%rbx
   19f47:	48 0f ac c2 30       	shrd   $0x30,%rax,%rdx
   19f4c:	48 31 da             	xor    %rbx,%rdx
   19f4f:	48 01 d7             	add    %rdx,%rdi
   19f52:	c4 e3 fb f0 d2 2b    	rorx   $0x2b,%rdx,%rdx
   19f58:	48 31 fa             	xor    %rdi,%rdx
   19f5b:	48 01 cb             	add    %rcx,%rbx
   19f5e:	c4 e3 fb f0 c9 2f    	rorx   $0x2f,%rcx,%rcx
   19f64:	48 31 d9             	xor    %rbx,%rcx
   19f67:	c4 e3 fb f0 c3 20    	rorx   $0x20,%rbx,%rax
   19f6d:	4c 31 ff             	xor    %r15,%rdi
   19f70:	48 35 ff 00 00 00    	xor    $0xff,%rax
   19f76:	48 01 cf             	add    %rcx,%rdi
   19f79:	c4 e3 fb f0 c9 33    	rorx   $0x33,%rcx,%rcx
   19f7f:	48 31 f9             	xor    %rdi,%rcx
   19f82:	c4 e3 fb f0 ff 20    	rorx   $0x20,%rdi,%rdi
   19f88:	48 01 d0             	add    %rdx,%rax
   19f8b:	c4 e3 fb f0 d2 30    	rorx   $0x30,%rdx,%rdx
   19f91:	48 31 c2             	xor    %rax,%rdx
   19f94:	48 01 d7             	add    %rdx,%rdi
   19f97:	c4 e3 fb f0 d2 2b    	rorx   $0x2b,%rdx,%rdx
   19f9d:	48 31 fa             	xor    %rdi,%rdx
   19fa0:	48 01 c8             	add    %rcx,%rax
   19fa3:	c4 e3 fb f0 c9 2f    	rorx   $0x2f,%rcx,%rcx
   19fa9:	48 31 c1             	xor    %rax,%rcx
   19fac:	c4 e3 fb f0 c0 20    	rorx   $0x20,%rax,%rax
   19fb2:	48 01 cf             	add    %rcx,%rdi
   19fb5:	c4 e3 fb f0 c9 33    	rorx   $0x33,%rcx,%rcx
   19fbb:	48 31 f9             	xor    %rdi,%rcx
   19fbe:	c4 e3 fb f0 ff 20    	rorx   $0x20,%rdi,%rdi
   19fc4:	48 01 d0             	add    %rdx,%rax
   19fc7:	c4 e3 fb f0 d2 30    	rorx   $0x30,%rdx,%rdx
   19fcd:	48 31 c2             	xor    %rax,%rdx
   19fd0:	48 01 d7             	add    %rdx,%rdi
   19fd3:	c4 e3 fb f0 d2 2b    	rorx   $0x2b,%rdx,%rdx
   19fd9:	48 31 fa             	xor    %rdi,%rdx
   19fdc:	48 01 c8             	add    %rcx,%rax
   19fdf:	c4 e3 fb f0 d9 2f    	rorx   $0x2f,%rcx,%rbx
   19fe5:	48 31 c3             	xor    %rax,%rbx
   19fe8:	c4 e3 fb f0 c8 20    	rorx   $0x20,%rax,%rcx
   19fee:	48 01 df             	add    %rbx,%rdi
   19ff1:	c4 e3 fb f0 c3 33    	rorx   $0x33,%rbx,%rax
   19ff7:	48 31 f8             	xor    %rdi,%rax
   19ffa:	48 01 d1             	add    %rdx,%rcx
   19ffd:	c4 e3 fb f0 d2 30    	rorx   $0x30,%rdx,%rdx
   1a003:	48 31 ca             	xor    %rcx,%rdx
   1a006:	c4 e3 fb f0 d2 2b    	rorx   $0x2b,%rdx,%rdx
   1a00c:	48 01 c1             	add    %rax,%rcx
   1a00f:	c4 e3 fb f0 c0 2f    	rorx   $0x2f,%rax,%rax
   1a015:	c4 e3 fb f0 f9 20    	rorx   $0x20,%rcx,%rdi
   1a01b:	48 31 d1             	xor    %rdx,%rcx
   1a01e:	48 31 c1             	xor    %rax,%rcx
        while seed == 0 {
   1a021:	48 31 f9             	xor    %rdi,%rcx
   1a024:	0f 84 c6 fe ff ff    	je     19ef0 <_ZN3std10sys_common9backtrace28__rust_begin_short_backtrace17hfffb094f39537836E+0x170>
   1a02a:	f0 49 ff 45 00       	lock incq 0x0(%r13)
   1a02f:	0f 8e 27 04 00 00    	jle    1a45c <_ZN3std10sys_common9backtrace28__rust_begin_short_backtrace17hfffb094f39537836E+0x6dc>
    let worker_thread = &WorkerThread {
   1a035:	c5 fc 28 44 24 40    	vmovaps 0x40(%rsp),%ymm0
   1a03b:	c5 fc 29 84 24 00 03 	vmovaps %ymm0,0x300(%rsp)
   1a042:	00 00 
   1a044:	c5 fc 28 84 24 80 00 	vmovaps 0x80(%rsp),%ymm0
   1a04b:	00 00 
   1a04d:	c5 fc 28 8c 24 a0 00 	vmovaps 0xa0(%rsp),%ymm1
   1a054:	00 00 
   1a056:	c5 fc 28 94 24 c0 00 	vmovaps 0xc0(%rsp),%ymm2
   1a05d:	00 00 
   1a05f:	c5 fc 28 9c 24 e0 00 	vmovaps 0xe0(%rsp),%ymm3
   1a066:	00 00 
   1a068:	c5 fc 29 84 24 00 02 	vmovaps %ymm0,0x200(%rsp)
   1a06f:	00 00 
   1a071:	c5 fc 29 8c 24 20 02 	vmovaps %ymm1,0x220(%rsp)
   1a078:	00 00 
   1a07a:	c5 fc 29 94 24 40 02 	vmovaps %ymm2,0x240(%rsp)
   1a081:	00 00 
   1a083:	c5 fc 29 9c 24 60 02 	vmovaps %ymm3,0x260(%rsp)
   1a08a:	00 00 
   1a08c:	c5 fc 28 84 24 00 01 	vmovaps 0x100(%rsp),%ymm0
   1a093:	00 00 
   1a095:	c5 fc 29 84 24 80 02 	vmovaps %ymm0,0x280(%rsp)
   1a09c:	00 00 
   1a09e:	c5 fc 28 84 24 20 01 	vmovaps 0x120(%rsp),%ymm0
   1a0a5:	00 00 
   1a0a7:	c5 fc 29 84 24 a0 02 	vmovaps %ymm0,0x2a0(%rsp)
   1a0ae:	00 00 
   1a0b0:	c5 fc 28 84 24 40 01 	vmovaps 0x140(%rsp),%ymm0
   1a0b7:	00 00 
   1a0b9:	c5 fc 29 84 24 c0 02 	vmovaps %ymm0,0x2c0(%rsp)
   1a0c0:	00 00 
   1a0c2:	c5 fd 6f 84 24 60 01 	vmovdqa 0x160(%rsp),%ymm0
   1a0c9:	00 00 
   1a0cb:	c5 fd 7f 84 24 e0 02 	vmovdqa %ymm0,0x2e0(%rsp)
   1a0d2:	00 00 
   1a0d4:	48 89 b4 24 20 03 00 	mov    %rsi,0x320(%rsp)
   1a0db:	00 
   1a0dc:	48 89 8c 24 28 03 00 	mov    %rcx,0x328(%rsp)
   1a0e3:	00 
   1a0e4:	4c 89 ac 24 30 03 00 	mov    %r13,0x330(%rsp)
   1a0eb:	00 
   1a0ec:	64 48 83 3c 25 00 ff 	cmpq   $0x1,%fs:0xffffffffffffff00
   1a0f3:	ff ff 01 
   1a0f6:	75 2c                	jne    1a124 <_ZN3std10sys_common9backtrace28__rust_begin_short_backtrace17hfffb094f39537836E+0x3a4>
   1a0f8:	64 48 83 3c 25 08 ff 	cmpq   $0x0,%fs:0xffffffffffffff08
   1a0ff:	ff ff 00 
            assert!(t.get().is_null());
   1a102:	74 34                	je     1a138 <_ZN3std10sys_common9backtrace28__rust_begin_short_backtrace17hfffb094f39537836E+0x3b8>
   1a104:	48 8d 3d b8 2e 02 00 	lea    0x22eb8(%rip),%rdi        # 3cfc3 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x663>
   1a10b:	48 8d 15 6e ca 22 00 	lea    0x22ca6e(%rip),%rdx        # 246b80 <__init_array_end+0xb70>
   1a112:	be 23 00 00 00       	mov    $0x23,%esi
   1a117:	c5 f8 77             	vzeroupper 
   1a11a:	e8 31 ec ff ff       	callq  18d50 <_ZN3std9panicking11begin_panic17hfac3f2f9c857bc78E>
   1a11f:	e9 66 05 00 00       	jmpq   1a68a <_ZN3std10sys_common9backtrace28__rust_begin_short_backtrace17hfffb094f39537836E+0x90a>
   1a124:	b8 01 00 00 00       	mov    $0x1,%eax
   1a129:	c4 e1 f9 6e c0       	vmovq  %rax,%xmm0
   1a12e:	64 c5 f9 7f 04 25 00 	vmovdqa %xmm0,%fs:0xffffffffffffff00
   1a135:	ff ff ff 
   1a138:	48 8d 84 24 00 02 00 	lea    0x200(%rsp),%rax
   1a13f:	00 
   1a140:	64 48 89 04 25 08 ff 	mov    %rax,%fs:0xffffffffffffff08
   1a147:	ff ff 
   1a149:	49 8b 95 90 01 00 00 	mov    0x190(%r13),%rdx
   1a150:	48 39 f2             	cmp    %rsi,%rdx
   1a153:	0f 86 07 03 00 00    	jbe    1a460 <_ZN3std10sys_common9backtrace28__rust_begin_short_backtrace17hfffb094f39537836E+0x6e0>
   1a159:	49 8b 9d 80 01 00 00 	mov    0x180(%r13),%rbx
   1a160:	48 89 74 24 78       	mov    %rsi,0x78(%rsp)
   1a165:	4c 8d 24 b6          	lea    (%rsi,%rsi,4),%r12
   1a169:	49 c1 e4 04          	shl    $0x4,%r12
   1a16d:	4a 8b 3c 23          	mov    (%rbx,%r12,1),%rdi
   1a171:	c5 f8 77             	vzeroupper 
   1a174:	ff 15 66 de 22 00    	callq  *0x22de66(%rip)        # 247fe0 <pthread_mutex_lock@GLIBC_2.2.5>
   1a17a:	64 48 83 3c 25 a0 ff 	cmpq   $0x1,%fs:0xffffffffffffffa0
   1a181:	ff ff 01 
   1a184:	75 0b                	jne    1a191 <_ZN3std10sys_common9backtrace28__rust_begin_short_backtrace17hfffb094f39537836E+0x411>
   1a186:	64 4c 8b 34 25 a8 ff 	mov    %fs:0xffffffffffffffa8,%r14
   1a18d:	ff ff 
   1a18f:	eb 17                	jmp    1a1a8 <_ZN3std10sys_common9backtrace28__rust_begin_short_backtrace17hfffb094f39537836E+0x428>
   1a191:	b8 01 00 00 00       	mov    $0x1,%eax
   1a196:	c4 e1 f9 6e c0       	vmovq  %rax,%xmm0
   1a19b:	64 c5 f9 7f 04 25 a0 	vmovdqa %xmm0,%fs:0xffffffffffffffa0
   1a1a2:	ff ff ff 
   1a1a5:	45 31 f6             	xor    %r14d,%r14d
   1a1a8:	4e 8d 3c 23          	lea    (%rbx,%r12,1),%r15
   1a1ac:	64 4c 89 34 25 a8 ff 	mov    %r14,%fs:0xffffffffffffffa8
   1a1b3:	ff ff 
   1a1b5:	42 8a 44 23 08       	mov    0x8(%rbx,%r12,1),%al
   1a1ba:	84 c0                	test   %al,%al
   1a1bc:	0f 85 b2 02 00 00    	jne    1a474 <_ZN3std10sys_common9backtrace28__rust_begin_short_backtrace17hfffb094f39537836E+0x6f4>
        *guard = true;
   1a1c2:	42 c6 44 23 09 01    	movb   $0x1,0x9(%rbx,%r12,1)
   1a1c8:	4a 8b 7c 23 10       	mov    0x10(%rbx,%r12,1),%rdi
   1a1cd:	ff 15 e5 db 22 00    	callq  *0x22dbe5(%rip)        # 247db8 <pthread_cond_broadcast@GLIBC_2.3.2>
   1a1d3:	4d 85 f6             	test   %r14,%r14
   1a1d6:	75 46                	jne    1a21e <_ZN3std10sys_common9backtrace28__rust_begin_short_backtrace17hfffb094f39537836E+0x49e>
   1a1d8:	64 48 83 3c 25 a0 ff 	cmpq   $0x1,%fs:0xffffffffffffffa0
   1a1df:	ff ff 01 
   1a1e2:	75 19                	jne    1a1fd <_ZN3std10sys_common9backtrace28__rust_begin_short_backtrace17hfffb094f39537836E+0x47d>
   1a1e4:	64 48 83 3c 25 a8 ff 	cmpq   $0x0,%fs:0xffffffffffffffa8
   1a1eb:	ff ff 00 
   1a1ee:	74 2e                	je     1a21e <_ZN3std10sys_common9backtrace28__rust_begin_short_backtrace17hfffb094f39537836E+0x49e>
   1a1f0:	4a 8d 04 23          	lea    (%rbx,%r12,1),%rax
   1a1f4:	48 83 c0 08          	add    $0x8,%rax
   1a1f8:	c6 00 01             	movb   $0x1,(%rax)
   1a1fb:	eb 21                	jmp    1a21e <_ZN3std10sys_common9backtrace28__rust_begin_short_backtrace17hfffb094f39537836E+0x49e>
   1a1fd:	b8 01 00 00 00       	mov    $0x1,%eax
   1a202:	c4 e1 f9 6e c0       	vmovq  %rax,%xmm0
   1a207:	64 c5 f9 7f 04 25 a0 	vmovdqa %xmm0,%fs:0xffffffffffffffa0
   1a20e:	ff ff ff 
   1a211:	64 48 c7 04 25 a8 ff 	movq   $0x0,%fs:0xffffffffffffffa8
   1a218:	ff ff 00 00 00 00 
   1a21e:	49 8b 3f             	mov    (%r15),%rdi
   1a221:	ff 15 d1 dc 22 00    	callq  *0x22dcd1(%rip)        # 247ef8 <pthread_mutex_unlock@GLIBC_2.2.5>
    if let Some(ref handler) = registry.start_handler {
   1a227:	49 8b bd d0 01 00 00 	mov    0x1d0(%r13),%rdi
   1a22e:	48 85 ff             	test   %rdi,%rdi
   1a231:	74 6b                	je     1a29e <_ZN3std10sys_common9backtrace28__rust_begin_short_backtrace17hfffb094f39537836E+0x51e>
   1a233:	f0 49 ff 45 00       	lock incq 0x0(%r13)
   1a238:	0f 8e 1e 02 00 00    	jle    1a45c <_ZN3std10sys_common9backtrace28__rust_begin_short_backtrace17hfffb094f39537836E+0x6dc>
        let registry = registry.clone();
   1a23e:	4c 89 6c 24 38       	mov    %r13,0x38(%rsp)
   1a243:	49 8b 85 d8 01 00 00 	mov    0x1d8(%r13),%rax
   1a24a:	48 8b 74 24 78       	mov    0x78(%rsp),%rsi
   1a24f:	ff 50 18             	callq  *0x18(%rax)
        match unwind::halt_unwinding(|| handler(index)) {
   1a252:	48 c7 44 24 40 00 00 	movq   $0x0,0x40(%rsp)
   1a259:	00 00 
   1a25b:	4c 8d 74 24 48       	lea    0x48(%rsp),%r14
   1a260:	b3 01                	mov    $0x1,%bl
   1a262:	f0 49 ff 4d 00       	lock decq 0x0(%r13)
   1a267:	75 0a                	jne    1a273 <_ZN3std10sys_common9backtrace28__rust_begin_short_backtrace17hfffb094f39537836E+0x4f3>
   1a269:	48 8d 7c 24 38       	lea    0x38(%rsp),%rdi
   1a26e:	e8 4d ec ff ff       	callq  18ec0 <_ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17hb5cb47fe96f5803fE>
    }
   1a273:	84 db                	test   %bl,%bl
   1a275:	74 22                	je     1a299 <_ZN3std10sys_common9backtrace28__rust_begin_short_backtrace17hfffb094f39537836E+0x519>
   1a277:	4c 8b 7c 24 40       	mov    0x40(%rsp),%r15
   1a27c:	4d 85 ff             	test   %r15,%r15
   1a27f:	74 18                	je     1a299 <_ZN3std10sys_common9backtrace28__rust_begin_short_backtrace17hfffb094f39537836E+0x519>
   1a281:	49 8b 1e             	mov    (%r14),%rbx
   1a284:	4c 89 ff             	mov    %r15,%rdi
   1a287:	ff 13                	callq  *(%rbx)
   1a289:	48 83 7b 08 00       	cmpq   $0x0,0x8(%rbx)
   1a28e:	74 09                	je     1a299 <_ZN3std10sys_common9backtrace28__rust_begin_short_backtrace17hfffb094f39537836E+0x519>
   1a290:	4c 89 ff             	mov    %r15,%rdi
   1a293:	ff 15 df da 22 00    	callq  *0x22dadf(%rip)        # 247d78 <free@GLIBC_2.2.5>
    worker_thread.wait_until(&registry.terminate_latch);
   1a299:	4c 8b 6c 24 30       	mov    0x30(%rsp),%r13
   1a29e:	49 8b 85 f0 01 00 00 	mov    0x1f0(%r13),%rax
        self.counter.load(Ordering::SeqCst) == 0
   1a2a5:	48 85 c0             	test   %rax,%rax
        if !latch.probe() {
   1a2a8:	74 17                	je     1a2c1 <_ZN3std10sys_common9backtrace28__rust_begin_short_backtrace17hfffb094f39537836E+0x541>
   1a2aa:	49 81 c5 f0 01 00 00 	add    $0x1f0,%r13
   1a2b1:	48 8d bc 24 00 02 00 	lea    0x200(%rsp),%rdi
   1a2b8:	00 
            self.wait_until_cold(latch);
   1a2b9:	4c 89 ee             	mov    %r13,%rsi
   1a2bc:	e8 3f ee ff ff       	callq  19100 <_ZN10rayon_core8registry12WorkerThread15wait_until_cold17hb16e5a6101e03b68E>
    registry.thread_infos[index].stopped.set();
   1a2c1:	4c 8b 7c 24 30       	mov    0x30(%rsp),%r15
   1a2c6:	49 8b 97 90 01 00 00 	mov    0x190(%r15),%rdx
   1a2cd:	48 3b 54 24 78       	cmp    0x78(%rsp),%rdx
   1a2d2:	0f 86 db 01 00 00    	jbe    1a4b3 <_ZN3std10sys_common9backtrace28__rust_begin_short_backtrace17hfffb094f39537836E+0x733>
   1a2d8:	49 8b 9f 80 01 00 00 	mov    0x180(%r15),%rbx
   1a2df:	4a 8b 7c 23 20       	mov    0x20(%rbx,%r12,1),%rdi
   1a2e4:	ff 15 f6 dc 22 00    	callq  *0x22dcf6(%rip)        # 247fe0 <pthread_mutex_lock@GLIBC_2.2.5>
   1a2ea:	64 48 83 3c 25 a0 ff 	cmpq   $0x1,%fs:0xffffffffffffffa0
   1a2f1:	ff ff 01 
   1a2f4:	75 0b                	jne    1a301 <_ZN3std10sys_common9backtrace28__rust_begin_short_backtrace17hfffb094f39537836E+0x581>
   1a2f6:	64 4c 8b 34 25 a8 ff 	mov    %fs:0xffffffffffffffa8,%r14
   1a2fd:	ff ff 
   1a2ff:	eb 17                	jmp    1a318 <_ZN3std10sys_common9backtrace28__rust_begin_short_backtrace17hfffb094f39537836E+0x598>
   1a301:	b8 01 00 00 00       	mov    $0x1,%eax
   1a306:	c4 e1 f9 6e c0       	vmovq  %rax,%xmm0
   1a30b:	64 c5 f9 7f 04 25 a0 	vmovdqa %xmm0,%fs:0xffffffffffffffa0
   1a312:	ff ff ff 
   1a315:	45 31 f6             	xor    %r14d,%r14d
   1a318:	4e 8d 2c 23          	lea    (%rbx,%r12,1),%r13
   1a31c:	49 83 c5 20          	add    $0x20,%r13
   1a320:	64 4c 89 34 25 a8 ff 	mov    %r14,%fs:0xffffffffffffffa8
   1a327:	ff ff 
   1a329:	42 8a 44 23 28       	mov    0x28(%rbx,%r12,1),%al
   1a32e:	84 c0                	test   %al,%al
   1a330:	0f 85 93 01 00 00    	jne    1a4c9 <_ZN3std10sys_common9backtrace28__rust_begin_short_backtrace17hfffb094f39537836E+0x749>
        *guard = true;
   1a336:	42 c6 44 23 29 01    	movb   $0x1,0x29(%rbx,%r12,1)
   1a33c:	4a 8b 7c 23 30       	mov    0x30(%rbx,%r12,1),%rdi
   1a341:	ff 15 71 da 22 00    	callq  *0x22da71(%rip)        # 247db8 <pthread_cond_broadcast@GLIBC_2.3.2>
   1a347:	4d 85 f6             	test   %r14,%r14
   1a34a:	75 46                	jne    1a392 <_ZN3std10sys_common9backtrace28__rust_begin_short_backtrace17hfffb094f39537836E+0x612>
   1a34c:	64 48 83 3c 25 a0 ff 	cmpq   $0x1,%fs:0xffffffffffffffa0
   1a353:	ff ff 01 
   1a356:	75 19                	jne    1a371 <_ZN3std10sys_common9backtrace28__rust_begin_short_backtrace17hfffb094f39537836E+0x5f1>
   1a358:	64 48 83 3c 25 a8 ff 	cmpq   $0x0,%fs:0xffffffffffffffa8
   1a35f:	ff ff 00 
   1a362:	74 2e                	je     1a392 <_ZN3std10sys_common9backtrace28__rust_begin_short_backtrace17hfffb094f39537836E+0x612>
   1a364:	4a 8d 04 23          	lea    (%rbx,%r12,1),%rax
   1a368:	48 83 c0 28          	add    $0x28,%rax
   1a36c:	c6 00 01             	movb   $0x1,(%rax)
   1a36f:	eb 21                	jmp    1a392 <_ZN3std10sys_common9backtrace28__rust_begin_short_backtrace17hfffb094f39537836E+0x612>
   1a371:	b8 01 00 00 00       	mov    $0x1,%eax
   1a376:	c4 e1 f9 6e c0       	vmovq  %rax,%xmm0
   1a37b:	64 c5 f9 7f 04 25 a0 	vmovdqa %xmm0,%fs:0xffffffffffffffa0
   1a382:	ff ff ff 
   1a385:	64 48 c7 04 25 a8 ff 	movq   $0x0,%fs:0xffffffffffffffa8
   1a38c:	ff ff 00 00 00 00 
   1a392:	49 8b 7d 00          	mov    0x0(%r13),%rdi
   1a396:	ff 15 5c db 22 00    	callq  *0x22db5c(%rip)        # 247ef8 <pthread_mutex_unlock@GLIBC_2.2.5>
    if let Some(ref handler) = registry.exit_handler {
   1a39c:	49 8b bf e0 01 00 00 	mov    0x1e0(%r15),%rdi
   1a3a3:	48 85 ff             	test   %rdi,%rdi
   1a3a6:	74 65                	je     1a40d <_ZN3std10sys_common9backtrace28__rust_begin_short_backtrace17hfffb094f39537836E+0x68d>
   1a3a8:	f0 49 ff 07          	lock incq (%r15)
   1a3ac:	0f 8e aa 00 00 00    	jle    1a45c <_ZN3std10sys_common9backtrace28__rust_begin_short_backtrace17hfffb094f39537836E+0x6dc>
        let registry = registry.clone();
   1a3b2:	4c 89 7c 24 38       	mov    %r15,0x38(%rsp)
   1a3b7:	49 8b 87 e8 01 00 00 	mov    0x1e8(%r15),%rax
   1a3be:	48 8b 74 24 78       	mov    0x78(%rsp),%rsi
   1a3c3:	ff 50 18             	callq  *0x18(%rax)
        match unwind::halt_unwinding(|| handler(index)) {
   1a3c6:	48 c7 44 24 40 00 00 	movq   $0x0,0x40(%rsp)
   1a3cd:	00 00 
   1a3cf:	4c 8d 74 24 48       	lea    0x48(%rsp),%r14
   1a3d4:	b3 01                	mov    $0x1,%bl
   1a3d6:	f0 49 ff 0f          	lock decq (%r15)
   1a3da:	75 0a                	jne    1a3e6 <_ZN3std10sys_common9backtrace28__rust_begin_short_backtrace17hfffb094f39537836E+0x666>
   1a3dc:	48 8d 7c 24 38       	lea    0x38(%rsp),%rdi
   1a3e1:	e8 da ea ff ff       	callq  18ec0 <_ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17hb5cb47fe96f5803fE>
    }
   1a3e6:	84 db                	test   %bl,%bl
   1a3e8:	74 23                	je     1a40d <_ZN3std10sys_common9backtrace28__rust_begin_short_backtrace17hfffb094f39537836E+0x68d>
   1a3ea:	48 8b 5c 24 40       	mov    0x40(%rsp),%rbx
   1a3ef:	48 85 db             	test   %rbx,%rbx
   1a3f2:	74 19                	je     1a40d <_ZN3std10sys_common9backtrace28__rust_begin_short_backtrace17hfffb094f39537836E+0x68d>
   1a3f4:	4d 8b 3e             	mov    (%r14),%r15
   1a3f7:	48 89 df             	mov    %rbx,%rdi
   1a3fa:	41 ff 17             	callq  *(%r15)
   1a3fd:	49 83 7f 08 00       	cmpq   $0x0,0x8(%r15)
   1a402:	74 09                	je     1a40d <_ZN3std10sys_common9backtrace28__rust_begin_short_backtrace17hfffb094f39537836E+0x68d>
   1a404:	48 89 df             	mov    %rbx,%rdi
   1a407:	ff 15 6b d9 22 00    	callq  *0x22d96b(%rip)        # 247d78 <free@GLIBC_2.2.5>
   1a40d:	48 8d bc 24 00 02 00 	lea    0x200(%rsp),%rdi
   1a414:	00 
}
   1a415:	e8 66 e9 ff ff       	callq  18d80 <_ZN4core3ptr13drop_in_place17h3932d0b220b206adE>
   1a41a:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
   1a41f:	f0 48 ff 08          	lock decq (%rax)
   1a423:	75 0a                	jne    1a42f <_ZN3std10sys_common9backtrace28__rust_begin_short_backtrace17hfffb094f39537836E+0x6af>
   1a425:	48 8d 7c 24 30       	lea    0x30(%rsp),%rdi
   1a42a:	e8 91 ea ff ff       	callq  18ec0 <_ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17hb5cb47fe96f5803fE>
   1a42f:	48 8b bc 24 a0 01 00 	mov    0x1a0(%rsp),%rdi
   1a436:	00 
   1a437:	48 85 ff             	test   %rdi,%rdi
   1a43a:	74 11                	je     1a44d <_ZN3std10sys_common9backtrace28__rust_begin_short_backtrace17hfffb094f39537836E+0x6cd>
   1a43c:	48 83 bc 24 a8 01 00 	cmpq   $0x0,0x1a8(%rsp)
   1a443:	00 00 
   1a445:	74 06                	je     1a44d <_ZN3std10sys_common9backtrace28__rust_begin_short_backtrace17hfffb094f39537836E+0x6cd>
   1a447:	ff 15 2b d9 22 00    	callq  *0x22d92b(%rip)        # 247d78 <free@GLIBC_2.2.5>
   1a44d:	48 8d 65 d8          	lea    -0x28(%rbp),%rsp
   1a451:	5b                   	pop    %rbx
   1a452:	41 5c                	pop    %r12
   1a454:	41 5d                	pop    %r13
   1a456:	41 5e                	pop    %r14
   1a458:	41 5f                	pop    %r15
   1a45a:	5d                   	pop    %rbp
   1a45b:	c3                   	retq   
   1a45c:	0f 0b                	ud2    
   1a45e:	0f 0b                	ud2    
   1a460:	48 8d 3d 99 c6 22 00 	lea    0x22c699(%rip),%rdi        # 246b00 <__init_array_end+0xaf0>
   1a467:	c5 f8 77             	vzeroupper 
   1a46a:	e8 91 cf fe ff       	callq  7400 <_ZN4core9panicking18panic_bounds_check17h83121a2515f55ceeE>
   1a46f:	e9 16 02 00 00       	jmpq   1a68a <_ZN3std10sys_common9backtrace28__rust_begin_short_backtrace17hfffb094f39537836E+0x90a>
   1a474:	4d 85 f6             	test   %r14,%r14
   1a477:	4c 89 bc 24 80 00 00 	mov    %r15,0x80(%rsp)
   1a47e:	00 
   1a47f:	0f 95 84 24 88 00 00 	setne  0x88(%rsp)
   1a486:	00 
   1a487:	48 8d 3d 33 34 02 00 	lea    0x23433(%rip),%rdi        # 3d8c1 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0xf61>
   1a48e:	48 8d 0d 9b c6 22 00 	lea    0x22c69b(%rip),%rcx        # 246b30 <__init_array_end+0xb20>
   1a495:	4c 8d 05 fc c6 22 00 	lea    0x22c6fc(%rip),%r8        # 246b98 <__init_array_end+0xb88>
   1a49c:	48 8d 94 24 80 00 00 	lea    0x80(%rsp),%rdx
   1a4a3:	00 
   1a4a4:	be 2b 00 00 00       	mov    $0x2b,%esi
   1a4a9:	e8 b2 f7 fe ff       	callq  9c60 <_ZN4core6option18expect_none_failed17he0fec195c6e4c2ecE>
   1a4ae:	e9 d7 01 00 00       	jmpq   1a68a <_ZN3std10sys_common9backtrace28__rust_begin_short_backtrace17hfffb094f39537836E+0x90a>
   1a4b3:	48 8d 3d 46 c6 22 00 	lea    0x22c646(%rip),%rdi        # 246b00 <__init_array_end+0xaf0>
   1a4ba:	48 8b 74 24 78       	mov    0x78(%rsp),%rsi
   1a4bf:	e8 3c cf fe ff       	callq  7400 <_ZN4core9panicking18panic_bounds_check17h83121a2515f55ceeE>
   1a4c4:	e9 c1 01 00 00       	jmpq   1a68a <_ZN3std10sys_common9backtrace28__rust_begin_short_backtrace17hfffb094f39537836E+0x90a>
   1a4c9:	4d 85 f6             	test   %r14,%r14
   1a4cc:	4c 89 ac 24 80 00 00 	mov    %r13,0x80(%rsp)
   1a4d3:	00 
   1a4d4:	0f 95 84 24 88 00 00 	setne  0x88(%rsp)
   1a4db:	00 
   1a4dc:	48 8d 3d de 33 02 00 	lea    0x233de(%rip),%rdi        # 3d8c1 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0xf61>
   1a4e3:	48 8d 0d 46 c6 22 00 	lea    0x22c646(%rip),%rcx        # 246b30 <__init_array_end+0xb20>
   1a4ea:	4c 8d 05 a7 c6 22 00 	lea    0x22c6a7(%rip),%r8        # 246b98 <__init_array_end+0xb88>
   1a4f1:	48 8d 94 24 80 00 00 	lea    0x80(%rsp),%rdx
   1a4f8:	00 
   1a4f9:	be 2b 00 00 00       	mov    $0x2b,%esi
   1a4fe:	e8 5d f7 fe ff       	callq  9c60 <_ZN4core6option18expect_none_failed17he0fec195c6e4c2ecE>
   1a503:	e9 82 01 00 00       	jmpq   1a68a <_ZN3std10sys_common9backtrace28__rust_begin_short_backtrace17hfffb094f39537836E+0x90a>
   1a508:	48 8d bc 24 80 00 00 	lea    0x80(%rsp),%rdi
   1a50f:	00 
   1a510:	e8 6b b5 ff ff       	callq  15a80 <_ZN4core3ptr13drop_in_place17h422d82a10dad7834E>
   1a515:	e9 6b 01 00 00       	jmpq   1a685 <_ZN3std10sys_common9backtrace28__rust_begin_short_backtrace17hfffb094f39537836E+0x905>
   1a51a:	49 89 c6             	mov    %rax,%r14
   1a51d:	48 8d bc 24 80 00 00 	lea    0x80(%rsp),%rdi
   1a524:	00 
   1a525:	e8 56 b5 ff ff       	callq  15a80 <_ZN4core3ptr13drop_in_place17h422d82a10dad7834E>
   1a52a:	eb 3b                	jmp    1a567 <_ZN3std10sys_common9backtrace28__rust_begin_short_backtrace17hfffb094f39537836E+0x7e7>
   1a52c:	49 89 c6             	mov    %rax,%r14
   1a52f:	eb 36                	jmp    1a567 <_ZN3std10sys_common9backtrace28__rust_begin_short_backtrace17hfffb094f39537836E+0x7e7>
   1a531:	49 89 c6             	mov    %rax,%r14
   1a534:	49 8b 77 08          	mov    0x8(%r15),%rsi
   1a538:	48 89 df             	mov    %rbx,%rdi
   1a53b:	e8 00 d6 ff ff       	callq  17b40 <_ZN5alloc5alloc8box_free17h16551760f718b115E>
   1a540:	eb 25                	jmp    1a567 <_ZN3std10sys_common9backtrace28__rust_begin_short_backtrace17hfffb094f39537836E+0x7e7>
   1a542:	49 89 c6             	mov    %rax,%r14
    }
   1a545:	48 83 7c 24 40 00    	cmpq   $0x0,0x40(%rsp)
   1a54b:	75 0c                	jne    1a559 <_ZN3std10sys_common9backtrace28__rust_begin_short_backtrace17hfffb094f39537836E+0x7d9>
   1a54d:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
   1a552:	e8 99 ee ff ff       	callq  193f0 <_ZN4core3ptr13drop_in_place17h596d07670bd5c336E>
   1a557:	eb 0e                	jmp    1a567 <_ZN3std10sys_common9backtrace28__rust_begin_short_backtrace17hfffb094f39537836E+0x7e7>
   1a559:	84 db                	test   %bl,%bl
   1a55b:	74 0a                	je     1a567 <_ZN3std10sys_common9backtrace28__rust_begin_short_backtrace17hfffb094f39537836E+0x7e7>
   1a55d:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
   1a562:	e8 19 b0 ff ff       	callq  15580 <_ZN4core3ptr13drop_in_place17h3afc1bf79a8187c4E>
   1a567:	48 8d bc 24 00 02 00 	lea    0x200(%rsp),%rdi
   1a56e:	00 
}
   1a56f:	e8 0c e8 ff ff       	callq  18d80 <_ZN4core3ptr13drop_in_place17h3932d0b220b206adE>
   1a574:	e9 e4 01 00 00       	jmpq   1a75d <_ZN3std10sys_common9backtrace28__rust_begin_short_backtrace17hfffb094f39537836E+0x9dd>
   1a579:	48 8b 73 08          	mov    0x8(%rbx),%rsi
   1a57d:	4c 89 ff             	mov    %r15,%rdi
   1a580:	e8 bb d5 ff ff       	callq  17b40 <_ZN5alloc5alloc8box_free17h16551760f718b115E>
   1a585:	e9 fb 00 00 00       	jmpq   1a685 <_ZN3std10sys_common9backtrace28__rust_begin_short_backtrace17hfffb094f39537836E+0x905>
    }
   1a58a:	48 83 7c 24 40 00    	cmpq   $0x0,0x40(%rsp)
   1a590:	75 0f                	jne    1a5a1 <_ZN3std10sys_common9backtrace28__rust_begin_short_backtrace17hfffb094f39537836E+0x821>
   1a592:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
   1a597:	e8 54 ee ff ff       	callq  193f0 <_ZN4core3ptr13drop_in_place17h596d07670bd5c336E>
   1a59c:	e9 e4 00 00 00       	jmpq   1a685 <_ZN3std10sys_common9backtrace28__rust_begin_short_backtrace17hfffb094f39537836E+0x905>
   1a5a1:	84 db                	test   %bl,%bl
   1a5a3:	0f 84 dc 00 00 00    	je     1a685 <_ZN3std10sys_common9backtrace28__rust_begin_short_backtrace17hfffb094f39537836E+0x905>
   1a5a9:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
   1a5ae:	e8 cd af ff ff       	callq  15580 <_ZN4core3ptr13drop_in_place17h3afc1bf79a8187c4E>
   1a5b3:	e9 cd 00 00 00       	jmpq   1a685 <_ZN3std10sys_common9backtrace28__rust_begin_short_backtrace17hfffb094f39537836E+0x905>
   1a5b8:	48 8b 58 40          	mov    0x40(%rax),%rbx
   1a5bc:	4c 8b 70 48          	mov    0x48(%rax),%r14
   1a5c0:	48 89 c7             	mov    %rax,%rdi
   1a5c3:	ff 15 af d7 22 00    	callq  *0x22d7af(%rip)        # 247d78 <free@GLIBC_2.2.5>
   1a5c9:	64 48 83 3c 25 a0 ff 	cmpq   $0x1,%fs:0xffffffffffffffa0
   1a5d0:	ff ff 01 
   1a5d3:	75 0e                	jne    1a5e3 <_ZN3std10sys_common9backtrace28__rust_begin_short_backtrace17hfffb094f39537836E+0x863>
   1a5d5:	64 48 8b 04 25 a8 ff 	mov    %fs:0xffffffffffffffa8,%rax
   1a5dc:	ff ff 
   1a5de:	48 ff c8             	dec    %rax
   1a5e1:	eb 1b                	jmp    1a5fe <_ZN3std10sys_common9backtrace28__rust_begin_short_backtrace17hfffb094f39537836E+0x87e>
   1a5e3:	b8 01 00 00 00       	mov    $0x1,%eax
   1a5e8:	c4 e1 f9 6e c0       	vmovq  %rax,%xmm0
   1a5ed:	64 c5 f9 7f 04 25 a0 	vmovdqa %xmm0,%fs:0xffffffffffffffa0
   1a5f4:	ff ff ff 
   1a5f7:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
   1a5fe:	64 48 89 04 25 a8 ff 	mov    %rax,%fs:0xffffffffffffffa8
   1a605:	ff ff 
        match unwind::halt_unwinding(|| handler(index)) {
   1a607:	48 89 5c 24 40       	mov    %rbx,0x40(%rsp)
   1a60c:	4c 89 74 24 48       	mov    %r14,0x48(%rsp)
   1a611:	48 89 9c 24 80 00 00 	mov    %rbx,0x80(%rsp)
   1a618:	00 
   1a619:	4c 89 b4 24 88 00 00 	mov    %r14,0x88(%rsp)
   1a620:	00 
            Some(ref handler) => {
   1a621:	49 8b bf c0 01 00 00 	mov    0x1c0(%r15),%rdi
   1a628:	48 85 ff             	test   %rdi,%rdi
   1a62b:	74 26                	je     1a653 <_ZN3std10sys_common9backtrace28__rust_begin_short_backtrace17hfffb094f39537836E+0x8d3>
   1a62d:	49 8b 87 c8 01 00 00 	mov    0x1c8(%r15),%rax
   1a634:	48 89 de             	mov    %rbx,%rsi
   1a637:	4c 89 f2             	mov    %r14,%rdx
   1a63a:	ff 50 18             	callq  *0x18(%rax)
   1a63d:	4c 8d 74 24 48       	lea    0x48(%rsp),%r14
   1a642:	31 db                	xor    %ebx,%ebx
   1a644:	f0 49 ff 0f          	lock decq (%r15)
   1a648:	0f 84 8e fd ff ff    	je     1a3dc <_ZN3std10sys_common9backtrace28__rust_begin_short_backtrace17hfffb094f39537836E+0x65c>
   1a64e:	e9 93 fd ff ff       	jmpq   1a3e6 <_ZN3std10sys_common9backtrace28__rust_begin_short_backtrace17hfffb094f39537836E+0x666>
   1a653:	e8 a8 dd ff ff       	callq  18400 <_ZN74_$LT$rayon_core..unwind..AbortIfPanic$u20$as$u20$core..ops..drop..Drop$GT$4drop17ha61eb6e86dc16b22E>
   1a658:	eb 30                	jmp    1a68a <_ZN3std10sys_common9backtrace28__rust_begin_short_backtrace17hfffb094f39537836E+0x90a>
   1a65a:	49 89 c6             	mov    %rax,%r14
   1a65d:	48 8d bc 24 80 00 00 	lea    0x80(%rsp),%rdi
   1a664:	00 
    }
   1a665:	e8 16 af ff ff       	callq  15580 <_ZN4core3ptr13drop_in_place17h3afc1bf79a8187c4E>
   1a66a:	eb 0a                	jmp    1a676 <_ZN3std10sys_common9backtrace28__rust_begin_short_backtrace17hfffb094f39537836E+0x8f6>
            }
   1a66c:	e8 7f dd ff ff       	callq  183f0 <_ZN4core3ptr13drop_in_place17hc443eae86009dba0E>
   1a671:	eb 17                	jmp    1a68a <_ZN3std10sys_common9backtrace28__rust_begin_short_backtrace17hfffb094f39537836E+0x90a>
   1a673:	49 89 c6             	mov    %rax,%r14
   1a676:	48 8d 7c 24 38       	lea    0x38(%rsp),%rdi
    }
   1a67b:	e8 20 e6 ff ff       	callq  18ca0 <_ZN4core3ptr13drop_in_place17h03ca7e6c03cfa936E>
   1a680:	e9 e2 fe ff ff       	jmpq   1a567 <_ZN3std10sys_common9backtrace28__rust_begin_short_backtrace17hfffb094f39537836E+0x7e7>
}
   1a685:	e8 66 dd ff ff       	callq  183f0 <_ZN4core3ptr13drop_in_place17hc443eae86009dba0E>
   1a68a:	0f 0b                	ud2    
   1a68c:	4c 8b 78 40          	mov    0x40(%rax),%r15
   1a690:	48 8b 58 48          	mov    0x48(%rax),%rbx
   1a694:	48 89 c7             	mov    %rax,%rdi
   1a697:	ff 15 db d6 22 00    	callq  *0x22d6db(%rip)        # 247d78 <free@GLIBC_2.2.5>
   1a69d:	64 48 83 3c 25 a0 ff 	cmpq   $0x1,%fs:0xffffffffffffffa0
   1a6a4:	ff ff 01 
   1a6a7:	75 0e                	jne    1a6b7 <_ZN3std10sys_common9backtrace28__rust_begin_short_backtrace17hfffb094f39537836E+0x937>
   1a6a9:	64 48 8b 04 25 a8 ff 	mov    %fs:0xffffffffffffffa8,%rax
   1a6b0:	ff ff 
   1a6b2:	48 ff c8             	dec    %rax
   1a6b5:	eb 1b                	jmp    1a6d2 <_ZN3std10sys_common9backtrace28__rust_begin_short_backtrace17hfffb094f39537836E+0x952>
   1a6b7:	b8 01 00 00 00       	mov    $0x1,%eax
   1a6bc:	c4 e1 f9 6e c0       	vmovq  %rax,%xmm0
   1a6c1:	64 c5 f9 7f 04 25 a0 	vmovdqa %xmm0,%fs:0xffffffffffffffa0
   1a6c8:	ff ff ff 
   1a6cb:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
   1a6d2:	64 48 89 04 25 a8 ff 	mov    %rax,%fs:0xffffffffffffffa8
   1a6d9:	ff ff 
        match unwind::halt_unwinding(|| handler(index)) {
   1a6db:	4c 89 7c 24 40       	mov    %r15,0x40(%rsp)
   1a6e0:	48 89 5c 24 48       	mov    %rbx,0x48(%rsp)
   1a6e5:	4c 89 bc 24 80 00 00 	mov    %r15,0x80(%rsp)
   1a6ec:	00 
   1a6ed:	48 89 9c 24 88 00 00 	mov    %rbx,0x88(%rsp)
   1a6f4:	00 
            Some(ref handler) => {
   1a6f5:	49 8b bd c0 01 00 00 	mov    0x1c0(%r13),%rdi
   1a6fc:	48 85 ff             	test   %rdi,%rdi
   1a6ff:	74 27                	je     1a728 <_ZN3std10sys_common9backtrace28__rust_begin_short_backtrace17hfffb094f39537836E+0x9a8>
   1a701:	49 8b 85 c8 01 00 00 	mov    0x1c8(%r13),%rax
   1a708:	4c 89 fe             	mov    %r15,%rsi
   1a70b:	48 89 da             	mov    %rbx,%rdx
   1a70e:	ff 50 18             	callq  *0x18(%rax)
   1a711:	4c 8d 74 24 48       	lea    0x48(%rsp),%r14
   1a716:	31 db                	xor    %ebx,%ebx
   1a718:	f0 49 ff 4d 00       	lock decq 0x0(%r13)
   1a71d:	0f 84 46 fb ff ff    	je     1a269 <_ZN3std10sys_common9backtrace28__rust_begin_short_backtrace17hfffb094f39537836E+0x4e9>
   1a723:	e9 4b fb ff ff       	jmpq   1a273 <_ZN3std10sys_common9backtrace28__rust_begin_short_backtrace17hfffb094f39537836E+0x4f3>
   1a728:	e8 d3 dc ff ff       	callq  18400 <_ZN74_$LT$rayon_core..unwind..AbortIfPanic$u20$as$u20$core..ops..drop..Drop$GT$4drop17ha61eb6e86dc16b22E>
   1a72d:	e9 58 ff ff ff       	jmpq   1a68a <_ZN3std10sys_common9backtrace28__rust_begin_short_backtrace17hfffb094f39537836E+0x90a>
   1a732:	48 8d bc 24 80 00 00 	lea    0x80(%rsp),%rdi
   1a739:	00 
    }
   1a73a:	e8 41 ae ff ff       	callq  15580 <_ZN4core3ptr13drop_in_place17h3afc1bf79a8187c4E>
   1a73f:	eb 0a                	jmp    1a74b <_ZN3std10sys_common9backtrace28__rust_begin_short_backtrace17hfffb094f39537836E+0x9cb>
            }
   1a741:	e8 aa dc ff ff       	callq  183f0 <_ZN4core3ptr13drop_in_place17hc443eae86009dba0E>
   1a746:	e9 3f ff ff ff       	jmpq   1a68a <_ZN3std10sys_common9backtrace28__rust_begin_short_backtrace17hfffb094f39537836E+0x90a>
   1a74b:	48 8d 7c 24 38       	lea    0x38(%rsp),%rdi
    }
   1a750:	e8 4b e5 ff ff       	callq  18ca0 <_ZN4core3ptr13drop_in_place17h03ca7e6c03cfa936E>
   1a755:	e9 2b ff ff ff       	jmpq   1a685 <_ZN3std10sys_common9backtrace28__rust_begin_short_backtrace17hfffb094f39537836E+0x905>
   1a75a:	49 89 c6             	mov    %rax,%r14
   1a75d:	48 8d 7c 24 30       	lea    0x30(%rsp),%rdi
}
   1a762:	e8 39 e5 ff ff       	callq  18ca0 <_ZN4core3ptr13drop_in_place17h03ca7e6c03cfa936E>
   1a767:	eb 03                	jmp    1a76c <_ZN3std10sys_common9backtrace28__rust_begin_short_backtrace17hfffb094f39537836E+0x9ec>
   1a769:	49 89 c6             	mov    %rax,%r14
   1a76c:	48 8d bc 24 a0 01 00 	lea    0x1a0(%rsp),%rdi
   1a773:	00 
    }
   1a774:	e8 d7 ec ff ff       	callq  19450 <_ZN4core3ptr13drop_in_place17h85b94a730b427fbaE>
   1a779:	4c 89 f7             	mov    %r14,%rdi
   1a77c:	e8 1f 99 fe ff       	callq  40a0 <_Unwind_Resume@plt>
   1a781:	0f 0b                	ud2    
   1a783:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1a78a:	00 00 00 
   1a78d:	0f 1f 00             	nopl   (%rax)

000000000001a790 <_ZN10rayon_core8registry15global_registry17h06f27f4bfc0c217dE>:
fn global_registry() -> &'static Arc<Registry> {
   1a790:	41 57                	push   %r15
   1a792:	41 56                	push   %r14
   1a794:	53                   	push   %rbx
   1a795:	48 83 ec 30          	sub    $0x30,%rsp
    let mut result = Err(ThreadPoolBuildError::new(
   1a799:	c6 44 24 10 03       	movb   $0x3,0x10(%rsp)
   1a79e:	48 c7 44 24 08 01 00 	movq   $0x1,0x8(%rsp)
   1a7a5:	00 00 
   1a7a7:	48 8b 05 ca d8 22 00 	mov    0x22d8ca(%rip),%rax        # 248078 <_ZN10rayon_core8registry16THE_REGISTRY_SET17h614103c6672bffa2E>
   1a7ae:	48 83 f8 03          	cmp    $0x3,%rax
   1a7b2:	74 2c                	je     1a7e0 <_ZN10rayon_core8registry15global_registry17h06f27f4bfc0c217dE+0x50>
   1a7b4:	48 8d 44 24 08       	lea    0x8(%rsp),%rax
   1a7b9:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   1a7be:	48 8d 44 24 20       	lea    0x20(%rsp),%rax
   1a7c3:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   1a7c8:	48 8d 3d a9 d8 22 00 	lea    0x22d8a9(%rip),%rdi        # 248078 <_ZN10rayon_core8registry16THE_REGISTRY_SET17h614103c6672bffa2E>
   1a7cf:	48 8d 15 5a c4 22 00 	lea    0x22c45a(%rip),%rdx        # 246c30 <__init_array_end+0xc20>
   1a7d6:	48 8d 74 24 28       	lea    0x28(%rsp),%rsi
   1a7db:	e8 b0 0a 01 00       	callq  2b290 <_ZN3std4sync4once4Once10call_inner17hfabbd1bc15485aefE>
    result
   1a7e0:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   1a7e5:	48 83 7c 24 08 01    	cmpq   $0x1,0x8(%rsp)
   1a7eb:	75 25                	jne    1a812 <_ZN10rayon_core8registry15global_registry17h06f27f4bfc0c217dE+0x82>
   1a7ed:	4c 8b 7c 24 18       	mov    0x18(%rsp),%r15
        .or_else(|err| unsafe { THE_REGISTRY.ok_or(err) })
   1a7f2:	4c 8b 35 77 d8 22 00 	mov    0x22d877(%rip),%r14        # 248070 <_ZN10rayon_core8registry12THE_REGISTRY17h5e4c3095a70775abE>
   1a7f9:	4d 85 f6             	test   %r14,%r14
   1a7fc:	74 5a                	je     1a858 <_ZN10rayon_core8registry15global_registry17h06f27f4bfc0c217dE+0xc8>
   1a7fe:	4c 89 f3             	mov    %r14,%rbx
   1a801:	48 c1 eb 08          	shr    $0x8,%rbx
   1a805:	3c 03                	cmp    $0x3,%al
   1a807:	77 24                	ja     1a82d <_ZN10rayon_core8registry15global_registry17h06f27f4bfc0c217dE+0x9d>
   1a809:	3c 02                	cmp    $0x2,%al
   1a80b:	74 20                	je     1a82d <_ZN10rayon_core8registry15global_registry17h06f27f4bfc0c217dE+0x9d>
   1a80d:	4c 89 f0             	mov    %r14,%rax
   1a810:	eb 07                	jmp    1a819 <_ZN10rayon_core8registry15global_registry17h06f27f4bfc0c217dE+0x89>
   1a812:	48 89 c3             	mov    %rax,%rbx
   1a815:	48 c1 eb 08          	shr    $0x8,%rbx
   1a819:	48 c1 e3 08          	shl    $0x8,%rbx
   1a81d:	0f b6 c0             	movzbl %al,%eax
   1a820:	48 09 d8             	or     %rbx,%rax
}
   1a823:	48 83 c4 30          	add    $0x30,%rsp
   1a827:	5b                   	pop    %rbx
   1a828:	41 5e                	pop    %r14
   1a82a:	41 5f                	pop    %r15
   1a82c:	c3                   	retq   
   1a82d:	49 8b 3f             	mov    (%r15),%rdi
   1a830:	49 8b 47 08          	mov    0x8(%r15),%rax
   1a834:	ff 10                	callq  *(%rax)
   1a836:	49 8b 47 08          	mov    0x8(%r15),%rax
   1a83a:	48 83 78 08 00       	cmpq   $0x0,0x8(%rax)
   1a83f:	74 09                	je     1a84a <_ZN10rayon_core8registry15global_registry17h06f27f4bfc0c217dE+0xba>
   1a841:	49 8b 3f             	mov    (%r15),%rdi
   1a844:	ff 15 2e d5 22 00    	callq  *0x22d52e(%rip)        # 247d78 <free@GLIBC_2.2.5>
   1a84a:	4c 89 ff             	mov    %r15,%rdi
   1a84d:	ff 15 25 d5 22 00    	callq  *0x22d525(%rip)        # 247d78 <free@GLIBC_2.2.5>
   1a853:	4c 89 f0             	mov    %r14,%rax
   1a856:	eb c1                	jmp    1a819 <_ZN10rayon_core8registry15global_registry17h06f27f4bfc0c217dE+0x89>
   1a858:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   1a85d:	4c 89 7c 24 10       	mov    %r15,0x10(%rsp)
   1a862:	48 8d 3d 09 28 02 00 	lea    0x22809(%rip),%rdi        # 3d072 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x712>
   1a869:	48 8d 0d e8 c3 22 00 	lea    0x22c3e8(%rip),%rcx        # 246c58 <__init_array_end+0xc48>
   1a870:	4c 8d 05 01 c4 22 00 	lea    0x22c401(%rip),%r8        # 246c78 <__init_array_end+0xc68>
   1a877:	48 8d 54 24 08       	lea    0x8(%rsp),%rdx
   1a87c:	be 30 00 00 00       	mov    $0x30,%esi
   1a881:	e8 da f3 fe ff       	callq  9c60 <_ZN4core6option18expect_none_failed17he0fec195c6e4c2ecE>
   1a886:	0f 0b                	ud2    
   1a888:	49 89 c6             	mov    %rax,%r14
   1a88b:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   1a890:	e8 cb 00 00 00       	callq  1a960 <_ZN4core3ptr13drop_in_place17h83a016d9110fee68E>
   1a895:	4c 89 f7             	mov    %r14,%rdi
   1a898:	e8 03 98 fe ff       	callq  40a0 <_Unwind_Resume@plt>
   1a89d:	0f 0b                	ud2    
   1a89f:	49 89 c6             	mov    %rax,%r14
   1a8a2:	49 8b 3f             	mov    (%r15),%rdi
   1a8a5:	49 8b 47 08          	mov    0x8(%r15),%rax
   1a8a9:	48 8b 70 08          	mov    0x8(%rax),%rsi
   1a8ad:	e8 8e d2 ff ff       	callq  17b40 <_ZN5alloc5alloc8box_free17h16551760f718b115E>
   1a8b2:	4c 89 ff             	mov    %r15,%rdi
   1a8b5:	e8 f6 69 ff ff       	callq  112b0 <_ZN5alloc5alloc8box_free17h434babe390d9f9d5E>
   1a8ba:	4c 89 f7             	mov    %r14,%rdi
   1a8bd:	e8 de 97 fe ff       	callq  40a0 <_Unwind_Resume@plt>
   1a8c2:	0f 0b                	ud2    
   1a8c4:	49 89 c6             	mov    %rax,%r14
   1a8c7:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
}
   1a8cc:	e8 0f 00 00 00       	callq  1a8e0 <_ZN4core3ptr13drop_in_place17ha1ceabc63cd44010E>
   1a8d1:	4c 89 f7             	mov    %r14,%rdi
   1a8d4:	e8 c7 97 fe ff       	callq  40a0 <_Unwind_Resume@plt>
   1a8d9:	0f 0b                	ud2    
   1a8db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000001a8e0 <_ZN4core3ptr13drop_in_place17ha1ceabc63cd44010E>:
   1a8e0:	41 57                	push   %r15
   1a8e2:	41 56                	push   %r14
   1a8e4:	53                   	push   %rbx
   1a8e5:	48 83 3f 00          	cmpq   $0x0,(%rdi)
   1a8e9:	74 0e                	je     1a8f9 <_ZN4core3ptr13drop_in_place17ha1ceabc63cd44010E+0x19>
   1a8eb:	48 89 fb             	mov    %rdi,%rbx
   1a8ee:	8a 47 08             	mov    0x8(%rdi),%al
   1a8f1:	3c 03                	cmp    $0x3,%al
   1a8f3:	77 0a                	ja     1a8ff <_ZN4core3ptr13drop_in_place17ha1ceabc63cd44010E+0x1f>
   1a8f5:	3c 02                	cmp    $0x2,%al
   1a8f7:	74 06                	je     1a8ff <_ZN4core3ptr13drop_in_place17ha1ceabc63cd44010E+0x1f>
   1a8f9:	5b                   	pop    %rbx
   1a8fa:	41 5e                	pop    %r14
   1a8fc:	41 5f                	pop    %r15
   1a8fe:	c3                   	retq   
   1a8ff:	4c 8b 7b 10          	mov    0x10(%rbx),%r15
   1a903:	49 8b 3f             	mov    (%r15),%rdi
   1a906:	49 8b 47 08          	mov    0x8(%r15),%rax
   1a90a:	ff 10                	callq  *(%rax)
   1a90c:	49 8b 47 08          	mov    0x8(%r15),%rax
   1a910:	48 83 78 08 00       	cmpq   $0x0,0x8(%rax)
   1a915:	74 09                	je     1a920 <_ZN4core3ptr13drop_in_place17ha1ceabc63cd44010E+0x40>
   1a917:	49 8b 3f             	mov    (%r15),%rdi
   1a91a:	ff 15 58 d4 22 00    	callq  *0x22d458(%rip)        # 247d78 <free@GLIBC_2.2.5>
   1a920:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
   1a924:	5b                   	pop    %rbx
   1a925:	41 5e                	pop    %r14
   1a927:	41 5f                	pop    %r15
   1a929:	ff 25 49 d4 22 00    	jmpq   *0x22d449(%rip)        # 247d78 <free@GLIBC_2.2.5>
   1a92f:	49 89 c6             	mov    %rax,%r14
   1a932:	49 8b 3f             	mov    (%r15),%rdi
   1a935:	49 8b 47 08          	mov    0x8(%r15),%rax
   1a939:	48 8b 70 08          	mov    0x8(%rax),%rsi
   1a93d:	e8 fe d1 ff ff       	callq  17b40 <_ZN5alloc5alloc8box_free17h16551760f718b115E>
   1a942:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
   1a946:	e8 65 69 ff ff       	callq  112b0 <_ZN5alloc5alloc8box_free17h434babe390d9f9d5E>
   1a94b:	4c 89 f7             	mov    %r14,%rdi
   1a94e:	e8 4d 97 fe ff       	callq  40a0 <_Unwind_Resume@plt>
   1a953:	0f 0b                	ud2    
   1a955:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1a95c:	00 00 00 
   1a95f:	90                   	nop

000000000001a960 <_ZN4core3ptr13drop_in_place17h83a016d9110fee68E>:
   1a960:	41 57                	push   %r15
   1a962:	41 56                	push   %r14
   1a964:	53                   	push   %rbx
   1a965:	48 89 fb             	mov    %rdi,%rbx
   1a968:	8a 07                	mov    (%rdi),%al
   1a96a:	3c 03                	cmp    $0x3,%al
   1a96c:	77 0a                	ja     1a978 <_ZN4core3ptr13drop_in_place17h83a016d9110fee68E+0x18>
   1a96e:	3c 02                	cmp    $0x2,%al
   1a970:	74 06                	je     1a978 <_ZN4core3ptr13drop_in_place17h83a016d9110fee68E+0x18>
   1a972:	5b                   	pop    %rbx
   1a973:	41 5e                	pop    %r14
   1a975:	41 5f                	pop    %r15
   1a977:	c3                   	retq   
   1a978:	4c 8b 7b 08          	mov    0x8(%rbx),%r15
   1a97c:	49 8b 3f             	mov    (%r15),%rdi
   1a97f:	49 8b 47 08          	mov    0x8(%r15),%rax
   1a983:	ff 10                	callq  *(%rax)
   1a985:	49 8b 47 08          	mov    0x8(%r15),%rax
   1a989:	48 83 78 08 00       	cmpq   $0x0,0x8(%rax)
   1a98e:	74 09                	je     1a999 <_ZN4core3ptr13drop_in_place17h83a016d9110fee68E+0x39>
   1a990:	49 8b 3f             	mov    (%r15),%rdi
   1a993:	ff 15 df d3 22 00    	callq  *0x22d3df(%rip)        # 247d78 <free@GLIBC_2.2.5>
   1a999:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
   1a99d:	5b                   	pop    %rbx
   1a99e:	41 5e                	pop    %r14
   1a9a0:	41 5f                	pop    %r15
   1a9a2:	ff 25 d0 d3 22 00    	jmpq   *0x22d3d0(%rip)        # 247d78 <free@GLIBC_2.2.5>
   1a9a8:	49 89 c6             	mov    %rax,%r14
   1a9ab:	49 8b 3f             	mov    (%r15),%rdi
   1a9ae:	49 8b 47 08          	mov    0x8(%r15),%rax
   1a9b2:	48 8b 70 08          	mov    0x8(%rax),%rsi
   1a9b6:	e8 85 d1 ff ff       	callq  17b40 <_ZN5alloc5alloc8box_free17h16551760f718b115E>
   1a9bb:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
   1a9bf:	e8 ec 68 ff ff       	callq  112b0 <_ZN5alloc5alloc8box_free17h434babe390d9f9d5E>
   1a9c4:	4c 89 f7             	mov    %r14,%rdi
   1a9c7:	e8 d4 96 fe ff       	callq  40a0 <_Unwind_Resume@plt>
   1a9cc:	0f 0b                	ud2    
   1a9ce:	66 90                	xchg   %ax,%ax

000000000001a9d0 <_ZN69_$LT$rayon_core..ThreadPoolBuildError$u20$as$u20$core..fmt..Debug$GT$3fmt17h7ec5355492f714a2E>:
pub fn current_num_threads() -> usize {
    crate::registry::Registry::current_num_threads()
}

/// Error when initializing a thread pool.
#[derive(Debug)]
   1a9d0:	41 56                	push   %r14
   1a9d2:	53                   	push   %rbx
   1a9d3:	48 83 ec 18          	sub    $0x18,%rsp
   1a9d7:	48 89 f3             	mov    %rsi,%rbx
   1a9da:	49 89 fe             	mov    %rdi,%r14
   1a9dd:	48 8b 7e 20          	mov    0x20(%rsi),%rdi
   1a9e1:	48 8b 46 28          	mov    0x28(%rsi),%rax
   1a9e5:	48 8d 35 b6 26 02 00 	lea    0x226b6(%rip),%rsi        # 3d0a2 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x742>
   1a9ec:	ba 14 00 00 00       	mov    $0x14,%edx
   1a9f1:	ff 50 18             	callq  *0x18(%rax)
   1a9f4:	48 89 1c 24          	mov    %rbx,(%rsp)
   1a9f8:	88 44 24 08          	mov    %al,0x8(%rsp)
   1a9fc:	c6 44 24 09 00       	movb   $0x0,0x9(%rsp)
pub struct ThreadPoolBuildError {
    kind: ErrorKind,
   1aa01:	4c 89 74 24 10       	mov    %r14,0x10(%rsp)
#[derive(Debug)]
   1aa06:	48 8d 35 9f 1a 02 00 	lea    0x21a9f(%rip),%rsi        # 3c4ac <_ZN4core7unicode12unicode_data15grapheme_extend6BITSET17h68ce7f61ccfa32feE+0xa0c>
   1aa0d:	4c 8d 05 7c c2 22 00 	lea    0x22c27c(%rip),%r8        # 246c90 <__init_array_end+0xc80>
   1aa14:	48 89 e7             	mov    %rsp,%rdi
   1aa17:	48 8d 4c 24 10       	lea    0x10(%rsp),%rcx
   1aa1c:	ba 04 00 00 00       	mov    $0x4,%edx
   1aa21:	e8 ba f6 fe ff       	callq  a0e0 <_ZN4core3fmt8builders11DebugStruct5field17h12f9df3a6de8af04E>
   1aa26:	80 7c 24 09 00       	cmpb   $0x0,0x9(%rsp)
   1aa2b:	8a 44 24 08          	mov    0x8(%rsp),%al
   1aa2f:	74 3c                	je     1aa6d <_ZN69_$LT$rayon_core..ThreadPoolBuildError$u20$as$u20$core..fmt..Debug$GT$3fmt17h7ec5355492f714a2E+0x9d>
   1aa31:	84 c0                	test   %al,%al
   1aa33:	b0 01                	mov    $0x1,%al
   1aa35:	75 32                	jne    1aa69 <_ZN69_$LT$rayon_core..ThreadPoolBuildError$u20$as$u20$core..fmt..Debug$GT$3fmt17h7ec5355492f714a2E+0x99>
   1aa37:	48 8b 04 24          	mov    (%rsp),%rax
   1aa3b:	f6 40 30 04          	testb  $0x4,0x30(%rax)
   1aa3f:	48 8b 78 20          	mov    0x20(%rax),%rdi
   1aa43:	48 8b 40 28          	mov    0x28(%rax),%rax
   1aa47:	48 8b 40 18          	mov    0x18(%rax),%rax
   1aa4b:	75 0e                	jne    1aa5b <_ZN69_$LT$rayon_core..ThreadPoolBuildError$u20$as$u20$core..fmt..Debug$GT$3fmt17h7ec5355492f714a2E+0x8b>
   1aa4d:	48 8d 35 fd 1d 02 00 	lea    0x21dfd(%rip),%rsi        # 3c851 <str.1+0xa1>
   1aa54:	ba 02 00 00 00       	mov    $0x2,%edx
   1aa59:	eb 0c                	jmp    1aa67 <_ZN69_$LT$rayon_core..ThreadPoolBuildError$u20$as$u20$core..fmt..Debug$GT$3fmt17h7ec5355492f714a2E+0x97>
   1aa5b:	48 8d 35 81 27 02 00 	lea    0x22781(%rip),%rsi        # 3d1e3 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x883>
   1aa62:	ba 01 00 00 00       	mov    $0x1,%edx
   1aa67:	ff d0                	callq  *%rax
   1aa69:	88 44 24 08          	mov    %al,0x8(%rsp)
   1aa6d:	48 83 c4 18          	add    $0x18,%rsp
   1aa71:	5b                   	pop    %rbx
   1aa72:	41 5e                	pop    %r14
   1aa74:	c3                   	retq   
   1aa75:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1aa7c:	00 00 00 
   1aa7f:	90                   	nop

000000000001aa80 <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h2b6c303affbcacb2E>:
   1aa80:	55                   	push   %rbp
   1aa81:	53                   	push   %rbx
   1aa82:	48 81 ec 88 00 00 00 	sub    $0x88,%rsp
   1aa89:	48 89 f3             	mov    %rsi,%rbx
   1aa8c:	48 8b 2f             	mov    (%rdi),%rbp
}

#[derive(Debug)]
   1aa8f:	80 7d 00 03          	cmpb   $0x3,0x0(%rbp)
   1aa93:	75 35                	jne    1aaca <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h2b6c303affbcacb2E+0x4a>
   1aa95:	48 8b 7b 20          	mov    0x20(%rbx),%rdi
   1aa99:	48 8b 43 28          	mov    0x28(%rbx),%rax
   1aa9d:	48 8d 35 19 26 02 00 	lea    0x22619(%rip),%rsi        # 3d0bd <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x75d>
   1aaa4:	ba 1c 00 00 00       	mov    $0x1c,%edx
   1aaa9:	ff 50 18             	callq  *0x18(%rax)
   1aaac:	89 c5                	mov    %eax,%ebp
   1aaae:	48 89 5c 24 30       	mov    %rbx,0x30(%rsp)
   1aab3:	88 44 24 40          	mov    %al,0x40(%rsp)
   1aab7:	48 c7 44 24 38 00 00 	movq   $0x0,0x38(%rsp)
   1aabe:	00 00 
   1aac0:	c6 44 24 41 00       	movb   $0x0,0x41(%rsp)
   1aac5:	e9 74 01 00 00       	jmpq   1ac3e <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h2b6c303affbcacb2E+0x1be>
   1aaca:	48 8b 7b 20          	mov    0x20(%rbx),%rdi
   1aace:	48 8b 43 28          	mov    0x28(%rbx),%rax
   1aad2:	48 8d 35 dd 25 02 00 	lea    0x225dd(%rip),%rsi        # 3d0b6 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x756>
   1aad9:	ba 07 00 00 00       	mov    $0x7,%edx
   1aade:	ff 50 18             	callq  *0x18(%rax)
   1aae1:	89 c1                	mov    %eax,%ecx
   1aae3:	48 89 5c 24 18       	mov    %rbx,0x18(%rsp)
   1aae8:	88 44 24 28          	mov    %al,0x28(%rsp)
   1aaec:	48 c7 44 24 20 00 00 	movq   $0x0,0x20(%rsp)
   1aaf3:	00 00 
   1aaf5:	c6 44 24 29 00       	movb   $0x0,0x29(%rsp)
enum ErrorKind {
    GlobalPoolAlreadyInitialized,
    IOError(io::Error),
   1aafa:	48 89 6c 24 10       	mov    %rbp,0x10(%rsp)
   1aaff:	40 b5 01             	mov    $0x1,%bpl
   1ab02:	b0 01                	mov    $0x1,%al
   1ab04:	84 c9                	test   %cl,%cl
   1ab06:	0f 85 03 01 00 00    	jne    1ac0f <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h2b6c303affbcacb2E+0x18f>
   1ab0c:	f6 43 30 04          	testb  $0x4,0x30(%rbx)
   1ab10:	48 8b 7b 20          	mov    0x20(%rbx),%rdi
   1ab14:	48 8b 43 28          	mov    0x28(%rbx),%rax
   1ab18:	48 8b 40 18          	mov    0x18(%rax),%rax
   1ab1c:	75 41                	jne    1ab5f <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h2b6c303affbcacb2E+0xdf>
   1ab1e:	48 8d 35 5a 26 02 00 	lea    0x2265a(%rip),%rsi        # 3d17f <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x81f>
   1ab25:	ba 01 00 00 00       	mov    $0x1,%edx
   1ab2a:	ff d0                	callq  *%rax
   1ab2c:	89 c1                	mov    %eax,%ecx
   1ab2e:	b0 01                	mov    $0x1,%al
   1ab30:	84 c9                	test   %cl,%cl
   1ab32:	0f 85 d7 00 00 00    	jne    1ac0f <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h2b6c303affbcacb2E+0x18f>
   1ab38:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
   1ab3d:	48 89 de             	mov    %rbx,%rsi
   1ab40:	e8 0b 01 00 00       	callq  1ac50 <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h6d1b2630a655723bE>
   1ab45:	88 44 24 28          	mov    %al,0x28(%rsp)
   1ab49:	48 c7 44 24 20 01 00 	movq   $0x1,0x20(%rsp)
   1ab50:	00 00 
   1ab52:	84 c0                	test   %al,%al
   1ab54:	0f 85 df 00 00 00    	jne    1ac39 <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h2b6c303affbcacb2E+0x1b9>
   1ab5a:	e9 c1 00 00 00       	jmpq   1ac20 <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h2b6c303affbcacb2E+0x1a0>
   1ab5f:	48 8d 35 ed 1c 02 00 	lea    0x21ced(%rip),%rsi        # 3c853 <str.1+0xa3>
   1ab66:	ba 02 00 00 00       	mov    $0x2,%edx
   1ab6b:	ff d0                	callq  *%rax
   1ab6d:	89 c1                	mov    %eax,%ecx
   1ab6f:	b0 01                	mov    $0x1,%al
   1ab71:	84 c9                	test   %cl,%cl
   1ab73:	0f 85 96 00 00 00    	jne    1ac0f <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h2b6c303affbcacb2E+0x18f>
   1ab79:	8b 43 30             	mov    0x30(%rbx),%eax
   1ab7c:	c6 44 24 0f 01       	movb   $0x1,0xf(%rsp)
   1ab81:	c5 f8 10 43 20       	vmovups 0x20(%rbx),%xmm0
   1ab86:	c5 f8 29 44 24 70    	vmovaps %xmm0,0x70(%rsp)
   1ab8c:	48 8d 4c 24 0f       	lea    0xf(%rsp),%rcx
   1ab91:	48 89 8c 24 80 00 00 	mov    %rcx,0x80(%rsp)
   1ab98:	00 
   1ab99:	8b 4b 34             	mov    0x34(%rbx),%ecx
   1ab9c:	8a 53 38             	mov    0x38(%rbx),%dl
   1ab9f:	c5 fc 10 03          	vmovups (%rbx),%ymm0
   1aba3:	89 44 24 60          	mov    %eax,0x60(%rsp)
   1aba7:	89 4c 24 64          	mov    %ecx,0x64(%rsp)
   1abab:	88 54 24 68          	mov    %dl,0x68(%rsp)
   1abaf:	c5 fc 11 44 24 30    	vmovups %ymm0,0x30(%rsp)
   1abb5:	48 8d 44 24 70       	lea    0x70(%rsp),%rax
   1abba:	48 89 44 24 50       	mov    %rax,0x50(%rsp)
   1abbf:	48 8d 05 d2 ba 22 00 	lea    0x22bad2(%rip),%rax        # 246698 <__init_array_end+0x688>
   1abc6:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
   1abcb:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
   1abd0:	48 8d 74 24 30       	lea    0x30(%rsp),%rsi
   1abd5:	c5 f8 77             	vzeroupper 
   1abd8:	e8 73 00 00 00       	callq  1ac50 <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h6d1b2630a655723bE>
   1abdd:	84 c0                	test   %al,%al
   1abdf:	74 15                	je     1abf6 <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h2b6c303affbcacb2E+0x176>
   1abe1:	b0 01                	mov    $0x1,%al
   1abe3:	88 44 24 28          	mov    %al,0x28(%rsp)
   1abe7:	48 c7 44 24 20 01 00 	movq   $0x1,0x20(%rsp)
   1abee:	00 00 
   1abf0:	84 c0                	test   %al,%al
   1abf2:	75 45                	jne    1ac39 <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h2b6c303affbcacb2E+0x1b9>
   1abf4:	eb 2a                	jmp    1ac20 <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h2b6c303affbcacb2E+0x1a0>
   1abf6:	48 8b 7c 24 50       	mov    0x50(%rsp),%rdi
   1abfb:	48 8b 44 24 58       	mov    0x58(%rsp),%rax
   1ac00:	48 8d 35 48 1c 02 00 	lea    0x21c48(%rip),%rsi        # 3c84f <str.1+0x9f>
   1ac07:	ba 02 00 00 00       	mov    $0x2,%edx
   1ac0c:	ff 50 18             	callq  *0x18(%rax)
   1ac0f:	88 44 24 28          	mov    %al,0x28(%rsp)
   1ac13:	48 c7 44 24 20 01 00 	movq   $0x1,0x20(%rsp)
   1ac1a:	00 00 
   1ac1c:	84 c0                	test   %al,%al
   1ac1e:	75 19                	jne    1ac39 <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h2b6c303affbcacb2E+0x1b9>
   1ac20:	48 8b 7b 20          	mov    0x20(%rbx),%rdi
   1ac24:	48 8b 43 28          	mov    0x28(%rbx),%rax
   1ac28:	48 8d 35 91 2c 02 00 	lea    0x22c91(%rip),%rsi        # 3d8c0 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0xf60>
   1ac2f:	ba 01 00 00 00       	mov    $0x1,%edx
   1ac34:	ff 50 18             	callq  *0x18(%rax)
   1ac37:	89 c5                	mov    %eax,%ebp
   1ac39:	40 88 6c 24 28       	mov    %bpl,0x28(%rsp)
   1ac3e:	89 e8                	mov    %ebp,%eax
   1ac40:	48 81 c4 88 00 00 00 	add    $0x88,%rsp
   1ac47:	5b                   	pop    %rbx
   1ac48:	5d                   	pop    %rbp
   1ac49:	c3                   	retq   
   1ac4a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000001ac50 <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h6d1b2630a655723bE>:
   1ac50:	48 8b 3f             	mov    (%rdi),%rdi
   1ac53:	e9 08 f0 00 00       	jmpq   29c60 <_ZN58_$LT$std..io..error..Error$u20$as$u20$core..fmt..Debug$GT$3fmt17hca9f62407ce48033E>
   1ac58:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1ac5f:	00 

000000000001ac60 <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE>:
   1ac60:	55                   	push   %rbp
   1ac61:	48 89 e5             	mov    %rsp,%rbp
   1ac64:	41 57                	push   %r15
   1ac66:	41 56                	push   %r14
   1ac68:	41 55                	push   %r13
   1ac6a:	41 54                	push   %r12
   1ac6c:	53                   	push   %rbx
   1ac6d:	48 83 e4 80          	and    $0xffffffffffffff80,%rsp
   1ac71:	48 81 ec 80 06 00 00 	sub    $0x680,%rsp
   1ac78:	48 8b 07             	mov    (%rdi),%rax
   1ac7b:	48 8b 08             	mov    (%rax),%rcx
   1ac7e:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   1ac85:	48 85 c9             	test   %rcx,%rcx
   1ac88:	0f 84 2c 22 00 00    	je     1ceba <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x225a>
   1ac8e:	48 89 8c 24 48 01 00 	mov    %rcx,0x148(%rsp)
   1ac95:	00 
type ExitHandler = dyn Fn(usize) + Send + Sync;

// NB: We can't `#[derive(Default)]` because `S` is left ambiguous.
impl Default for ThreadPoolBuilder {
    fn default() -> Self {
        ThreadPoolBuilder {
   1ac96:	48 c7 84 24 c8 05 00 	movq   $0x0,0x5c8(%rsp)
   1ac9d:	00 00 00 00 00 
   1aca2:	48 c7 84 24 d8 05 00 	movq   $0x0,0x5d8(%rsp)
   1aca9:	00 00 00 00 00 
   1acae:	48 c7 84 24 e8 05 00 	movq   $0x0,0x5e8(%rsp)
   1acb5:	00 00 00 00 00 
   1acba:	48 c7 84 24 f8 05 00 	movq   $0x0,0x5f8(%rsp)
   1acc1:	00 00 00 00 00 
   1acc6:	c6 84 24 08 06 00 00 	movb   $0x0,0x608(%rsp)
   1accd:	00 
   1acce:	c5 f9 ef c0          	vpxor  %xmm0,%xmm0,%xmm0
   1acd2:	c5 f9 7f 84 24 b0 05 	vmovdqa %xmm0,0x5b0(%rsp)
   1acd9:	00 00 
   1acdb:	48 8d 35 f7 23 02 00 	lea    0x223f7(%rip),%rsi        # 3d0d9 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x779>
   1ace2:	48 8d bc 24 00 04 00 	lea    0x400(%rsp),%rdi
   1ace9:	00 
   1acea:	ba 11 00 00 00       	mov    $0x11,%edx
   1acef:	e8 bc 94 00 00       	callq  241b0 <_ZN3std3env7_var_os17ha8d89ced89fe941fE>
   1acf4:	4c 8b b4 24 00 04 00 	mov    0x400(%rsp),%r14
   1acfb:	00 
   1acfc:	4d 85 f6             	test   %r14,%r14
   1acff:	0f 84 af 00 00 00    	je     1adb4 <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x154>
   1ad05:	4c 8b bc 24 08 04 00 	mov    0x408(%rsp),%r15
   1ad0c:	00 
   1ad0d:	4c 8b ac 24 10 04 00 	mov    0x410(%rsp),%r13
   1ad14:	00 
   1ad15:	48 8d bc 24 80 01 00 	lea    0x180(%rsp),%rdi
   1ad1c:	00 
   1ad1d:	4c 89 f6             	mov    %r14,%rsi
   1ad20:	4c 89 ea             	mov    %r13,%rdx
   1ad23:	e8 38 0a ff ff       	callq  b760 <_ZN4core3str9from_utf817ha5f1d279f7594d61E>
   1ad28:	48 83 bc 24 80 01 00 	cmpq   $0x1,0x180(%rsp)
   1ad2f:	00 01 
   1ad31:	75 15                	jne    1ad48 <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0xe8>
   1ad33:	4d 85 f6             	test   %r14,%r14
   1ad36:	74 7c                	je     1adb4 <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x154>
   1ad38:	4d 85 ff             	test   %r15,%r15
   1ad3b:	74 77                	je     1adb4 <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x154>
   1ad3d:	4c 89 f7             	mov    %r14,%rdi
   1ad40:	ff 15 32 d0 22 00    	callq  *0x22d032(%rip)        # 247d78 <free@GLIBC_2.2.5>
   1ad46:	eb 6c                	jmp    1adb4 <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x154>
   1ad48:	41 b4 01             	mov    $0x1,%r12b
   1ad4b:	4d 85 ed             	test   %r13,%r13
   1ad4e:	74 4d                	je     1ad9d <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x13d>
   1ad50:	41 80 3e 2b          	cmpb   $0x2b,(%r14)
   1ad54:	75 0b                	jne    1ad61 <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x101>
   1ad56:	49 ff cd             	dec    %r13
   1ad59:	74 42                	je     1ad9d <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x13d>
   1ad5b:	49 8d 4e 01          	lea    0x1(%r14),%rcx
   1ad5f:	eb 03                	jmp    1ad64 <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x104>
   1ad61:	4c 89 f1             	mov    %r14,%rcx
   1ad64:	31 f6                	xor    %esi,%esi
   1ad66:	41 b8 0a 00 00 00    	mov    $0xa,%r8d
   1ad6c:	31 db                	xor    %ebx,%ebx
   1ad6e:	66 90                	xchg   %ax,%ax
   1ad70:	49 39 f5             	cmp    %rsi,%r13
   1ad73:	0f 84 2c 1e 00 00    	je     1cba5 <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x1f45>
   1ad79:	48 8d 04 31          	lea    (%rcx,%rsi,1),%rax
   1ad7d:	0f b6 38             	movzbl (%rax),%edi
   1ad80:	83 c7 d0             	add    $0xffffffd0,%edi
   1ad83:	83 ff 09             	cmp    $0x9,%edi
   1ad86:	77 15                	ja     1ad9d <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x13d>
   1ad88:	48 89 d8             	mov    %rbx,%rax
   1ad8b:	49 f7 e0             	mul    %r8
   1ad8e:	70 0d                	jo     1ad9d <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x13d>
   1ad90:	48 89 c3             	mov    %rax,%rbx
   1ad93:	89 f8                	mov    %edi,%eax
   1ad95:	48 ff c6             	inc    %rsi
   1ad98:	48 01 c3             	add    %rax,%rbx
   1ad9b:	73 d3                	jae    1ad70 <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x110>
   1ad9d:	4d 85 ff             	test   %r15,%r15
   1ada0:	74 09                	je     1adab <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x14b>
   1ada2:	4c 89 f7             	mov    %r14,%rdi
   1ada5:	ff 15 cd cf 22 00    	callq  *0x22cfcd(%rip)        # 247d78 <free@GLIBC_2.2.5>
        } else {
            match env::var("RAYON_NUM_THREADS")
                .ok()
                .and_then(|s| usize::from_str(&s).ok())
            {
                Some(x) if x > 0 => return x,
   1adab:	45 84 e4             	test   %r12b,%r12b
   1adae:	0f 84 a0 00 00 00    	je     1ae54 <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x1f4>
   1adb4:	48 8d 35 2f 23 02 00 	lea    0x2232f(%rip),%rsi        # 3d0ea <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x78a>
   1adbb:	48 8d bc 24 00 04 00 	lea    0x400(%rsp),%rdi
   1adc2:	00 
   1adc3:	ba 11 00 00 00       	mov    $0x11,%edx
   1adc8:	e8 e3 93 00 00       	callq  241b0 <_ZN3std3env7_var_os17ha8d89ced89fe941fE>
   1adcd:	4c 8b b4 24 00 04 00 	mov    0x400(%rsp),%r14
   1add4:	00 
   1add5:	4d 85 f6             	test   %r14,%r14
   1add8:	0f 84 cb 02 00 00    	je     1b0a9 <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x449>
   1adde:	4c 8b bc 24 08 04 00 	mov    0x408(%rsp),%r15
   1ade5:	00 
   1ade6:	4c 8b ac 24 10 04 00 	mov    0x410(%rsp),%r13
   1aded:	00 
   1adee:	48 8d bc 24 80 01 00 	lea    0x180(%rsp),%rdi
   1adf5:	00 
   1adf6:	4c 89 f6             	mov    %r14,%rsi
   1adf9:	4c 89 ea             	mov    %r13,%rdx
   1adfc:	e8 5f 09 ff ff       	callq  b760 <_ZN4core3str9from_utf817ha5f1d279f7594d61E>
   1ae01:	48 83 bc 24 80 01 00 	cmpq   $0x1,0x180(%rsp)
   1ae08:	00 01 
   1ae0a:	75 20                	jne    1ae2c <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x1cc>
   1ae0c:	4d 85 f6             	test   %r14,%r14
   1ae0f:	0f 84 94 02 00 00    	je     1b0a9 <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x449>
   1ae15:	4d 85 ff             	test   %r15,%r15
   1ae18:	0f 84 8b 02 00 00    	je     1b0a9 <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x449>
   1ae1e:	4c 89 f7             	mov    %r14,%rdi
   1ae21:	ff 15 51 cf 22 00    	callq  *0x22cf51(%rip)        # 247d78 <free@GLIBC_2.2.5>
   1ae27:	e9 7d 02 00 00       	jmpq   1b0a9 <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x449>
   1ae2c:	41 b4 01             	mov    $0x1,%r12b
   1ae2f:	4d 85 ed             	test   %r13,%r13
   1ae32:	0f 84 55 02 00 00    	je     1b08d <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x42d>
   1ae38:	41 80 3e 2b          	cmpb   $0x2b,(%r14)
   1ae3c:	0f 85 0f 02 00 00    	jne    1b051 <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x3f1>
   1ae42:	49 ff cd             	dec    %r13
   1ae45:	0f 84 42 02 00 00    	je     1b08d <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x42d>
   1ae4b:	49 8d 4e 01          	lea    0x1(%r14),%rcx
   1ae4f:	e9 00 02 00 00       	jmpq   1b054 <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x3f4>
   1ae54:	48 85 db             	test   %rbx,%rbx
   1ae57:	0f 85 71 04 00 00    	jne    1b2ce <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x66e>
   1ae5d:	c5 f9 ef c0          	vpxor  %xmm0,%xmm0,%xmm0
   1ae61:	c5 fd 7f 84 24 e0 01 	vmovdqa %ymm0,0x1e0(%rsp)
   1ae68:	00 00 
   1ae6a:	c5 fd 7f 84 24 c0 01 	vmovdqa %ymm0,0x1c0(%rsp)
   1ae71:	00 00 
   1ae73:	c5 fd 7f 84 24 a0 01 	vmovdqa %ymm0,0x1a0(%rsp)
   1ae7a:	00 00 
   1ae7c:	c5 fd 7f 84 24 80 01 	vmovdqa %ymm0,0x180(%rsp)
   1ae83:	00 00 
   1ae85:	48 8d 9c 24 80 01 00 	lea    0x180(%rsp),%rbx
   1ae8c:	00 
}

#[cfg(target_os = "linux")]
fn get_num_cpus() -> usize {
    let mut set:  libc::cpu_set_t = unsafe { std::mem::zeroed() };
    if unsafe { libc::sched_getaffinity(0, std::mem::size_of::<libc::cpu_set_t>(), &mut set) } == 0 {
   1ae8d:	be 80 00 00 00       	mov    $0x80,%esi
   1ae92:	31 ff                	xor    %edi,%edi
   1ae94:	48 89 da             	mov    %rbx,%rdx
   1ae97:	c5 f8 77             	vzeroupper 
   1ae9a:	ff 15 10 d1 22 00    	callq  *0x22d110(%rip)        # 247fb0 <sched_getaffinity@GLIBC_2.3.4>
   1aea0:	85 c0                	test   %eax,%eax
   1aea2:	0f 85 48 02 00 00    	jne    1b0f0 <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x490>
   1aea8:	c5 fd 6f 0d f0 f8 01 	vmovdqa 0x1f8f0(%rip),%ymm1        # 3a7a0 <_ZN4core7unicode12unicode_data2cc19BITSET_INDEX_CHUNKS17h8a1f39cd536e9344E+0x2e0>
   1aeaf:	00 
   1aeb0:	c5 f9 ef c0          	vpxor  %xmm0,%xmm0,%xmm0
   1aeb4:	b8 00 04 00 00       	mov    $0x400,%eax
   1aeb9:	c4 e2 7d 19 15 fe f7 	vbroadcastsd 0x1f7fe(%rip),%ymm2        # 3a6c0 <_ZN4core7unicode12unicode_data2cc19BITSET_INDEX_CHUNKS17h8a1f39cd536e9344E+0x200>
   1aec0:	01 00 
   1aec2:	c5 fc 29 94 24 60 01 	vmovaps %ymm2,0x160(%rsp)
   1aec9:	00 00 
   1aecb:	c4 e2 7d 19 15 f4 f7 	vbroadcastsd 0x1f7f4(%rip),%ymm2        # 3a6c8 <_ZN4core7unicode12unicode_data2cc19BITSET_INDEX_CHUNKS17h8a1f39cd536e9344E+0x208>
   1aed2:	01 00 
   1aed4:	c5 fc 29 94 24 20 03 	vmovaps %ymm2,0x320(%rsp)
   1aedb:	00 00 
   1aedd:	c4 e2 7d 19 15 ea f7 	vbroadcastsd 0x1f7ea(%rip),%ymm2        # 3a6d0 <_ZN4core7unicode12unicode_data2cc19BITSET_INDEX_CHUNKS17h8a1f39cd536e9344E+0x210>
   1aee4:	01 00 
   1aee6:	c5 fc 29 94 24 c0 02 	vmovaps %ymm2,0x2c0(%rsp)
   1aeed:	00 00 
   1aeef:	c4 e2 7d 19 15 e0 f7 	vbroadcastsd 0x1f7e0(%rip),%ymm2        # 3a6d8 <_ZN4core7unicode12unicode_data2cc19BITSET_INDEX_CHUNKS17h8a1f39cd536e9344E+0x218>
   1aef6:	01 00 
   1aef8:	c5 fc 29 94 24 40 03 	vmovaps %ymm2,0x340(%rsp)
   1aeff:	00 00 
   1af01:	c4 e2 7d 59 3d d6 f7 	vpbroadcastq 0x1f7d6(%rip),%ymm7        # 3a6e0 <_ZN4core7unicode12unicode_data2cc19BITSET_INDEX_CHUNKS17h8a1f39cd536e9344E+0x220>
   1af08:	01 00 
   1af0a:	c4 e2 7d 59 15 d5 f7 	vpbroadcastq 0x1f7d5(%rip),%ymm2        # 3a6e8 <_ZN4core7unicode12unicode_data2cc19BITSET_INDEX_CHUNKS17h8a1f39cd536e9344E+0x228>
   1af11:	01 00 
   1af13:	c5 fd 7f 94 24 40 05 	vmovdqa %ymm2,0x540(%rsp)
   1af1a:	00 00 
   1af1c:	c5 e9 ef d2          	vpxor  %xmm2,%xmm2,%xmm2
   1af20:	c5 e1 ef db          	vpxor  %xmm3,%xmm3,%xmm3
   1af24:	c5 d9 ef e4          	vpxor  %xmm4,%xmm4,%xmm4
   1af28:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1af2f:	00 
   1af30:	c5 75 d4 a4 24 60 01 	vpaddq 0x160(%rsp),%ymm1,%ymm12
   1af37:	00 00 
   1af39:	c5 75 d4 ac 24 20 03 	vpaddq 0x320(%rsp),%ymm1,%ymm13
   1af40:	00 00 
   1af42:	c5 75 d4 b4 24 c0 02 	vpaddq 0x2c0(%rsp),%ymm1,%ymm14
   1af49:	00 00 
        ()
    }

    pub fn CPU_ISSET(cpu: usize, cpuset: &cpu_set_t) -> bool {
        let size_in_bits = 8 * ::mem::size_of_val(&cpuset.bits[0]);
        let (idx, offset) = (cpu / size_in_bits, cpu % size_in_bits);
   1af4b:	c5 85 73 d1 06       	vpsrlq $0x6,%ymm1,%ymm15
   1af50:	c4 c1 35 73 d4 06    	vpsrlq $0x6,%ymm12,%ymm9
   1af56:	c4 c1 2d 73 d5 06    	vpsrlq $0x6,%ymm13,%ymm10
   1af5c:	c4 c1 25 73 d6 06    	vpsrlq $0x6,%ymm14,%ymm11
        0 != (cpuset.bits[idx] & (1 << offset))
   1af62:	c4 41 3d 76 c0       	vpcmpeqd %ymm8,%ymm8,%ymm8
   1af67:	c4 a2 bd 91 34 fb    	vpgatherqq %ymm8,(%rbx,%ymm15,8),%ymm6
   1af6d:	c4 41 3d 76 c0       	vpcmpeqd %ymm8,%ymm8,%ymm8
   1af72:	c4 22 bd 91 3c cb    	vpgatherqq %ymm8,(%rbx,%ymm9,8),%ymm15
   1af78:	c4 41 3d 76 c0       	vpcmpeqd %ymm8,%ymm8,%ymm8
   1af7d:	c4 22 bd 91 0c d3    	vpgatherqq %ymm8,(%rbx,%ymm10,8),%ymm9
   1af83:	c4 41 3d 76 c0       	vpcmpeqd %ymm8,%ymm8,%ymm8
   1af88:	c4 22 bd 91 14 db    	vpgatherqq %ymm8,(%rbx,%ymm11,8),%ymm10
   1af8e:	c5 fd 6f ac 24 40 03 	vmovdqa 0x340(%rsp),%ymm5
   1af95:	00 00 
        let (idx, offset) = (cpu / size_in_bits, cpu % size_in_bits);
   1af97:	c5 75 db c5          	vpand  %ymm5,%ymm1,%ymm8
        0 != (cpuset.bits[idx] & (1 << offset))
   1af9b:	c4 42 c5 47 c0       	vpsllvq %ymm8,%ymm7,%ymm8
   1afa0:	c4 c1 4d db f0       	vpand  %ymm8,%ymm6,%ymm6
        let (idx, offset) = (cpu / size_in_bits, cpu % size_in_bits);
   1afa5:	c5 1d db c5          	vpand  %ymm5,%ymm12,%ymm8
        0 != (cpuset.bits[idx] & (1 << offset))
   1afa9:	c4 42 c5 47 c0       	vpsllvq %ymm8,%ymm7,%ymm8
   1afae:	c4 41 05 db c0       	vpand  %ymm8,%ymm15,%ymm8
        let (idx, offset) = (cpu / size_in_bits, cpu % size_in_bits);
   1afb3:	c5 15 db dd          	vpand  %ymm5,%ymm13,%ymm11
        0 != (cpuset.bits[idx] & (1 << offset))
   1afb7:	c4 42 c5 47 db       	vpsllvq %ymm11,%ymm7,%ymm11
   1afbc:	c4 41 35 db cb       	vpand  %ymm11,%ymm9,%ymm9
        let (idx, offset) = (cpu / size_in_bits, cpu % size_in_bits);
   1afc1:	c5 0d db dd          	vpand  %ymm5,%ymm14,%ymm11
        0 != (cpuset.bits[idx] & (1 << offset))
   1afc5:	c4 42 c5 47 db       	vpsllvq %ymm11,%ymm7,%ymm11
   1afca:	c4 41 2d db d3       	vpand  %ymm11,%ymm10,%ymm10
   1afcf:	c4 41 21 ef db       	vpxor  %xmm11,%xmm11,%xmm11
        let mut count: u32 = 0;
        for i in 0..libc::CPU_SETSIZE as usize {
            if unsafe { libc::CPU_ISSET(i, &set) } {
   1afd4:	c4 c2 4d 29 f3       	vpcmpeqq %ymm11,%ymm6,%ymm6
   1afd9:	c4 41 1d 76 e4       	vpcmpeqd %ymm12,%ymm12,%ymm12
   1afde:	c4 c1 4d ef f4       	vpxor  %ymm12,%ymm6,%ymm6
   1afe3:	c4 e3 7d 39 f5 01    	vextracti128 $0x1,%ymm6,%xmm5
   1afe9:	c5 c9 6b ed          	vpackssdw %xmm5,%xmm6,%xmm5
   1afed:	c5 f9 fa c5          	vpsubd %xmm5,%xmm0,%xmm0
   1aff1:	c4 c2 3d 29 eb       	vpcmpeqq %ymm11,%ymm8,%ymm5
   1aff6:	c4 c1 55 ef ec       	vpxor  %ymm12,%ymm5,%ymm5
   1affb:	c4 e3 7d 39 ee 01    	vextracti128 $0x1,%ymm5,%xmm6
   1b001:	c5 d1 6b ee          	vpackssdw %xmm6,%xmm5,%xmm5
   1b005:	c5 e9 fa d5          	vpsubd %xmm5,%xmm2,%xmm2
   1b009:	c4 c2 35 29 eb       	vpcmpeqq %ymm11,%ymm9,%ymm5
   1b00e:	c4 c1 55 ef ec       	vpxor  %ymm12,%ymm5,%ymm5
   1b013:	c4 e3 7d 39 ee 01    	vextracti128 $0x1,%ymm5,%xmm6
   1b019:	c5 d1 6b ee          	vpackssdw %xmm6,%xmm5,%xmm5
   1b01d:	c5 e1 fa dd          	vpsubd %xmm5,%xmm3,%xmm3
   1b021:	c4 c2 2d 29 eb       	vpcmpeqq %ymm11,%ymm10,%ymm5
   1b026:	c4 c1 55 ef ec       	vpxor  %ymm12,%ymm5,%ymm5
   1b02b:	c4 e3 7d 39 ee 01    	vextracti128 $0x1,%ymm5,%xmm6
   1b031:	c5 d1 6b ee          	vpackssdw %xmm6,%xmm5,%xmm5
   1b035:	c5 d9 fa e5          	vpsubd %xmm5,%xmm4,%xmm4
   1b039:	c5 f5 d4 8c 24 40 05 	vpaddq 0x540(%rsp),%ymm1,%ymm1
   1b040:	00 00 
   1b042:	48 83 c0 f0          	add    $0xfffffffffffffff0,%rax
   1b046:	0f 85 e4 fe ff ff    	jne    1af30 <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x2d0>
   1b04c:	e9 5b 02 00 00       	jmpq   1b2ac <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x64c>
   1b051:	4c 89 f1             	mov    %r14,%rcx
   1b054:	31 f6                	xor    %esi,%esi
   1b056:	41 b8 0a 00 00 00    	mov    $0xa,%r8d
   1b05c:	31 db                	xor    %ebx,%ebx
   1b05e:	66 90                	xchg   %ax,%ax
   1b060:	49 39 f5             	cmp    %rsi,%r13
   1b063:	0f 84 4d 1b 00 00    	je     1cbb6 <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x1f56>
   1b069:	48 8d 04 31          	lea    (%rcx,%rsi,1),%rax
   1b06d:	0f b6 38             	movzbl (%rax),%edi
   1b070:	83 c7 d0             	add    $0xffffffd0,%edi
   1b073:	83 ff 09             	cmp    $0x9,%edi
   1b076:	77 15                	ja     1b08d <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x42d>
   1b078:	48 89 d8             	mov    %rbx,%rax
   1b07b:	49 f7 e0             	mul    %r8
   1b07e:	70 0d                	jo     1b08d <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x42d>
   1b080:	48 89 c3             	mov    %rax,%rbx
   1b083:	89 f8                	mov    %edi,%eax
   1b085:	48 ff c6             	inc    %rsi
   1b088:	48 01 c3             	add    %rax,%rbx
   1b08b:	73 d3                	jae    1b060 <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x400>
   1b08d:	4d 85 ff             	test   %r15,%r15
   1b090:	74 09                	je     1b09b <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x43b>
   1b092:	4c 89 f7             	mov    %r14,%rdi
   1b095:	ff 15 dd cc 22 00    	callq  *0x22ccdd(%rip)        # 247d78 <free@GLIBC_2.2.5>
   1b09b:	45 84 e4             	test   %r12b,%r12b
            // Support for deprecated `RAYON_RS_NUM_CPUS`.
            match env::var("RAYON_RS_NUM_CPUS")
                .ok()
                .and_then(|s| usize::from_str(&s).ok())
            {
                Some(x) if x > 0 => x,
   1b09e:	75 09                	jne    1b0a9 <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x449>
   1b0a0:	48 85 db             	test   %rbx,%rbx
   1b0a3:	0f 85 25 02 00 00    	jne    1b2ce <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x66e>
   1b0a9:	c5 f9 ef c0          	vpxor  %xmm0,%xmm0,%xmm0
   1b0ad:	c5 fd 7f 84 24 e0 01 	vmovdqa %ymm0,0x1e0(%rsp)
   1b0b4:	00 00 
   1b0b6:	c5 fd 7f 84 24 c0 01 	vmovdqa %ymm0,0x1c0(%rsp)
   1b0bd:	00 00 
   1b0bf:	c5 fd 7f 84 24 a0 01 	vmovdqa %ymm0,0x1a0(%rsp)
   1b0c6:	00 00 
   1b0c8:	c5 fd 7f 84 24 80 01 	vmovdqa %ymm0,0x180(%rsp)
   1b0cf:	00 00 
   1b0d1:	48 8d 9c 24 80 01 00 	lea    0x180(%rsp),%rbx
   1b0d8:	00 
    if unsafe { libc::sched_getaffinity(0, std::mem::size_of::<libc::cpu_set_t>(), &mut set) } == 0 {
   1b0d9:	be 80 00 00 00       	mov    $0x80,%esi
   1b0de:	31 ff                	xor    %edi,%edi
   1b0e0:	48 89 da             	mov    %rbx,%rdx
   1b0e3:	c5 f8 77             	vzeroupper 
   1b0e6:	ff 15 c4 ce 22 00    	callq  *0x22cec4(%rip)        # 247fb0 <sched_getaffinity@GLIBC_2.3.4>
   1b0ec:	85 c0                	test   %eax,%eax
   1b0ee:	74 1c                	je     1b10c <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x4ac>
   1b0f0:	bf 54 00 00 00       	mov    $0x54,%edi
   1b0f5:	ff 15 85 ce 22 00    	callq  *0x22ce85(%rip)        # 247f80 <sysconf@GLIBC_2.2.5>
   1b0fb:	48 85 c0             	test   %rax,%rax
   1b0fe:	bb 01 00 00 00       	mov    $0x1,%ebx
   1b103:	48 0f 4f d8          	cmovg  %rax,%rbx
   1b107:	e9 c2 01 00 00       	jmpq   1b2ce <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x66e>
   1b10c:	c5 fd 6f 0d 8c f6 01 	vmovdqa 0x1f68c(%rip),%ymm1        # 3a7a0 <_ZN4core7unicode12unicode_data2cc19BITSET_INDEX_CHUNKS17h8a1f39cd536e9344E+0x2e0>
   1b113:	00 
   1b114:	c5 f9 ef c0          	vpxor  %xmm0,%xmm0,%xmm0
   1b118:	b8 00 04 00 00       	mov    $0x400,%eax
   1b11d:	c4 e2 7d 19 15 9a f5 	vbroadcastsd 0x1f59a(%rip),%ymm2        # 3a6c0 <_ZN4core7unicode12unicode_data2cc19BITSET_INDEX_CHUNKS17h8a1f39cd536e9344E+0x200>
   1b124:	01 00 
   1b126:	c5 fc 29 94 24 60 01 	vmovaps %ymm2,0x160(%rsp)
   1b12d:	00 00 
   1b12f:	c4 e2 7d 19 15 90 f5 	vbroadcastsd 0x1f590(%rip),%ymm2        # 3a6c8 <_ZN4core7unicode12unicode_data2cc19BITSET_INDEX_CHUNKS17h8a1f39cd536e9344E+0x208>
   1b136:	01 00 
   1b138:	c5 fc 29 94 24 20 03 	vmovaps %ymm2,0x320(%rsp)
   1b13f:	00 00 
   1b141:	c4 e2 7d 19 15 86 f5 	vbroadcastsd 0x1f586(%rip),%ymm2        # 3a6d0 <_ZN4core7unicode12unicode_data2cc19BITSET_INDEX_CHUNKS17h8a1f39cd536e9344E+0x210>
   1b148:	01 00 
   1b14a:	c5 fc 29 94 24 c0 02 	vmovaps %ymm2,0x2c0(%rsp)
   1b151:	00 00 
   1b153:	c4 e2 7d 19 15 7c f5 	vbroadcastsd 0x1f57c(%rip),%ymm2        # 3a6d8 <_ZN4core7unicode12unicode_data2cc19BITSET_INDEX_CHUNKS17h8a1f39cd536e9344E+0x218>
   1b15a:	01 00 
   1b15c:	c5 fc 29 94 24 40 03 	vmovaps %ymm2,0x340(%rsp)
   1b163:	00 00 
   1b165:	c4 e2 7d 59 3d 72 f5 	vpbroadcastq 0x1f572(%rip),%ymm7        # 3a6e0 <_ZN4core7unicode12unicode_data2cc19BITSET_INDEX_CHUNKS17h8a1f39cd536e9344E+0x220>
   1b16c:	01 00 
   1b16e:	c4 e2 7d 59 15 71 f5 	vpbroadcastq 0x1f571(%rip),%ymm2        # 3a6e8 <_ZN4core7unicode12unicode_data2cc19BITSET_INDEX_CHUNKS17h8a1f39cd536e9344E+0x228>
   1b175:	01 00 
   1b177:	c5 fd 7f 94 24 40 05 	vmovdqa %ymm2,0x540(%rsp)
   1b17e:	00 00 
   1b180:	c5 e9 ef d2          	vpxor  %xmm2,%xmm2,%xmm2
   1b184:	c5 e1 ef db          	vpxor  %xmm3,%xmm3,%xmm3
   1b188:	c5 d9 ef e4          	vpxor  %xmm4,%xmm4,%xmm4
   1b18c:	0f 1f 40 00          	nopl   0x0(%rax)
   1b190:	c5 75 d4 a4 24 60 01 	vpaddq 0x160(%rsp),%ymm1,%ymm12
   1b197:	00 00 
   1b199:	c5 75 d4 ac 24 20 03 	vpaddq 0x320(%rsp),%ymm1,%ymm13
   1b1a0:	00 00 
   1b1a2:	c5 75 d4 b4 24 c0 02 	vpaddq 0x2c0(%rsp),%ymm1,%ymm14
   1b1a9:	00 00 
        let (idx, offset) = (cpu / size_in_bits, cpu % size_in_bits);
   1b1ab:	c5 85 73 d1 06       	vpsrlq $0x6,%ymm1,%ymm15
   1b1b0:	c4 c1 35 73 d4 06    	vpsrlq $0x6,%ymm12,%ymm9
   1b1b6:	c4 c1 2d 73 d5 06    	vpsrlq $0x6,%ymm13,%ymm10
   1b1bc:	c4 c1 25 73 d6 06    	vpsrlq $0x6,%ymm14,%ymm11
        0 != (cpuset.bits[idx] & (1 << offset))
   1b1c2:	c4 41 3d 76 c0       	vpcmpeqd %ymm8,%ymm8,%ymm8
   1b1c7:	c4 a2 bd 91 34 fb    	vpgatherqq %ymm8,(%rbx,%ymm15,8),%ymm6
   1b1cd:	c4 41 3d 76 c0       	vpcmpeqd %ymm8,%ymm8,%ymm8
   1b1d2:	c4 22 bd 91 3c cb    	vpgatherqq %ymm8,(%rbx,%ymm9,8),%ymm15
   1b1d8:	c4 41 3d 76 c0       	vpcmpeqd %ymm8,%ymm8,%ymm8
   1b1dd:	c4 22 bd 91 0c d3    	vpgatherqq %ymm8,(%rbx,%ymm10,8),%ymm9
   1b1e3:	c4 41 3d 76 c0       	vpcmpeqd %ymm8,%ymm8,%ymm8
   1b1e8:	c4 22 bd 91 14 db    	vpgatherqq %ymm8,(%rbx,%ymm11,8),%ymm10
   1b1ee:	c5 fd 6f ac 24 40 03 	vmovdqa 0x340(%rsp),%ymm5
   1b1f5:	00 00 
        let (idx, offset) = (cpu / size_in_bits, cpu % size_in_bits);
   1b1f7:	c5 75 db c5          	vpand  %ymm5,%ymm1,%ymm8
        0 != (cpuset.bits[idx] & (1 << offset))
   1b1fb:	c4 42 c5 47 c0       	vpsllvq %ymm8,%ymm7,%ymm8
   1b200:	c4 c1 4d db f0       	vpand  %ymm8,%ymm6,%ymm6
        let (idx, offset) = (cpu / size_in_bits, cpu % size_in_bits);
   1b205:	c5 1d db c5          	vpand  %ymm5,%ymm12,%ymm8
        0 != (cpuset.bits[idx] & (1 << offset))
   1b209:	c4 42 c5 47 c0       	vpsllvq %ymm8,%ymm7,%ymm8
   1b20e:	c4 41 05 db c0       	vpand  %ymm8,%ymm15,%ymm8
        let (idx, offset) = (cpu / size_in_bits, cpu % size_in_bits);
   1b213:	c5 15 db dd          	vpand  %ymm5,%ymm13,%ymm11
        0 != (cpuset.bits[idx] & (1 << offset))
   1b217:	c4 42 c5 47 db       	vpsllvq %ymm11,%ymm7,%ymm11
   1b21c:	c4 41 35 db cb       	vpand  %ymm11,%ymm9,%ymm9
        let (idx, offset) = (cpu / size_in_bits, cpu % size_in_bits);
   1b221:	c5 0d db dd          	vpand  %ymm5,%ymm14,%ymm11
        0 != (cpuset.bits[idx] & (1 << offset))
   1b225:	c4 42 c5 47 db       	vpsllvq %ymm11,%ymm7,%ymm11
   1b22a:	c4 41 2d db d3       	vpand  %ymm11,%ymm10,%ymm10
   1b22f:	c4 41 21 ef db       	vpxor  %xmm11,%xmm11,%xmm11
            if unsafe { libc::CPU_ISSET(i, &set) } {
   1b234:	c4 c2 4d 29 f3       	vpcmpeqq %ymm11,%ymm6,%ymm6
   1b239:	c4 41 1d 76 e4       	vpcmpeqd %ymm12,%ymm12,%ymm12
   1b23e:	c4 c1 4d ef f4       	vpxor  %ymm12,%ymm6,%ymm6
   1b243:	c4 e3 7d 39 f5 01    	vextracti128 $0x1,%ymm6,%xmm5
   1b249:	c5 c9 6b ed          	vpackssdw %xmm5,%xmm6,%xmm5
   1b24d:	c5 f9 fa c5          	vpsubd %xmm5,%xmm0,%xmm0
   1b251:	c4 c2 3d 29 eb       	vpcmpeqq %ymm11,%ymm8,%ymm5
   1b256:	c4 c1 55 ef ec       	vpxor  %ymm12,%ymm5,%ymm5
   1b25b:	c4 e3 7d 39 ee 01    	vextracti128 $0x1,%ymm5,%xmm6
   1b261:	c5 d1 6b ee          	vpackssdw %xmm6,%xmm5,%xmm5
   1b265:	c5 e9 fa d5          	vpsubd %xmm5,%xmm2,%xmm2
   1b269:	c4 c2 35 29 eb       	vpcmpeqq %ymm11,%ymm9,%ymm5
   1b26e:	c4 c1 55 ef ec       	vpxor  %ymm12,%ymm5,%ymm5
   1b273:	c4 e3 7d 39 ee 01    	vextracti128 $0x1,%ymm5,%xmm6
   1b279:	c5 d1 6b ee          	vpackssdw %xmm6,%xmm5,%xmm5
   1b27d:	c5 e1 fa dd          	vpsubd %xmm5,%xmm3,%xmm3
   1b281:	c4 c2 2d 29 eb       	vpcmpeqq %ymm11,%ymm10,%ymm5
   1b286:	c4 c1 55 ef ec       	vpxor  %ymm12,%ymm5,%ymm5
   1b28b:	c4 e3 7d 39 ee 01    	vextracti128 $0x1,%ymm5,%xmm6
   1b291:	c5 d1 6b ee          	vpackssdw %xmm6,%xmm5,%xmm5
   1b295:	c5 d9 fa e5          	vpsubd %xmm5,%xmm4,%xmm4
   1b299:	c5 f5 d4 8c 24 40 05 	vpaddq 0x540(%rsp),%ymm1,%ymm1
   1b2a0:	00 00 
   1b2a2:	48 83 c0 f0          	add    $0xfffffffffffffff0,%rax
   1b2a6:	0f 85 e4 fe ff ff    	jne    1b190 <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x530>
   1b2ac:	c5 e9 fe c0          	vpaddd %xmm0,%xmm2,%xmm0
   1b2b0:	c5 e1 fe c0          	vpaddd %xmm0,%xmm3,%xmm0
   1b2b4:	c5 d9 fe c0          	vpaddd %xmm0,%xmm4,%xmm0
   1b2b8:	c5 f9 70 c8 4e       	vpshufd $0x4e,%xmm0,%xmm1
   1b2bd:	c5 f9 fe c1          	vpaddd %xmm1,%xmm0,%xmm0
   1b2c1:	c5 f9 70 c8 e5       	vpshufd $0xe5,%xmm0,%xmm1
   1b2c6:	c5 f9 fe c1          	vpaddd %xmm1,%xmm0,%xmm0
   1b2ca:	c5 f9 7e c3          	vmovd  %xmm0,%ebx
   1b2ce:	48 c7 84 24 d0 00 00 	movq   $0x8,0xd0(%rsp)
   1b2d5:	00 08 00 00 00 
   1b2da:	c5 f9 ef c0          	vpxor  %xmm0,%xmm0,%xmm0
   1b2de:	c5 fa 7f 84 24 d8 00 	vmovdqu %xmm0,0xd8(%rsp)
   1b2e5:	00 00 
   1b2e7:	48 c7 44 24 60 08 00 	movq   $0x8,0x60(%rsp)
   1b2ee:	00 00 
   1b2f0:	c5 fa 7f 44 24 68    	vmovdqu %xmm0,0x68(%rsp)
   1b2f6:	48 85 db             	test   %rbx,%rbx
   1b2f9:	0f 84 47 06 00 00    	je     1b946 <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0xce6>
   1b2ff:	48 89 9c 24 20 03 00 	mov    %rbx,0x320(%rsp)
   1b306:	00 
   1b307:	45 31 e4             	xor    %r12d,%r12d
   1b30a:	eb 32                	jmp    1b33e <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x6de>
   1b30c:	0f 1f 40 00          	nopl   0x0(%rax)
   1b310:	4c 8b 7c 24 60       	mov    0x60(%rsp),%r15
   1b315:	49 ff c4             	inc    %r12
   1b318:	48 89 d8             	mov    %rbx,%rax
   1b31b:	48 c1 e0 04          	shl    $0x4,%rax
   1b31f:	49 89 0c 07          	mov    %rcx,(%r15,%rax,1)
   1b323:	41 88 54 07 08       	mov    %dl,0x8(%r15,%rax,1)
   1b328:	48 ff c3             	inc    %rbx
   1b32b:	48 89 5c 24 70       	mov    %rbx,0x70(%rsp)
   1b330:	4c 3b a4 24 20 03 00 	cmp    0x320(%rsp),%r12
   1b337:	00 
   1b338:	0f 84 13 06 00 00    	je     1b951 <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0xcf1>
   1b33e:	bf 00 04 00 00       	mov    $0x400,%edi
   1b343:	48 8b 1d be cb 22 00 	mov    0x22cbbe(%rip),%rbx        # 247f08 <malloc@GLIBC_2.2.5>
   1b34a:	c5 f8 77             	vzeroupper 
   1b34d:	ff d3                	callq  *%rbx
   1b34f:	48 85 c0             	test   %rax,%rax
   1b352:	0f 84 d1 18 00 00    	je     1cc29 <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x1fc9>
   1b358:	49 89 c6             	mov    %rax,%r14
   1b35b:	bf 10 00 00 00       	mov    $0x10,%edi
   1b360:	ff d3                	callq  *%rbx
   1b362:	48 85 c0             	test   %rax,%rax
   1b365:	0f 84 60 18 00 00    	je     1cbcb <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x1f6b>
   1b36b:	48 89 c3             	mov    %rax,%rbx
   1b36e:	4c 89 30             	mov    %r14,(%rax)
   1b371:	48 c7 40 08 40 00 00 	movq   $0x40,0x8(%rax)
   1b378:	00 
        let inner = Arc::new(CachePadded::new(Inner {
   1b379:	c5 fc 10 84 24 80 01 	vmovups 0x180(%rsp),%ymm0
   1b380:	00 00 
   1b382:	c5 fc 10 8c 24 c0 01 	vmovups 0x1c0(%rsp),%ymm1
   1b389:	00 00 
   1b38b:	c5 fc 10 94 24 d8 01 	vmovups 0x1d8(%rsp),%ymm2
   1b392:	00 00 
   1b394:	c5 fc 11 94 24 58 04 	vmovups %ymm2,0x458(%rsp)
   1b39b:	00 00 
   1b39d:	c5 fc 29 8c 24 40 04 	vmovaps %ymm1,0x440(%rsp)
   1b3a4:	00 00 
   1b3a6:	c5 fc 10 8c 24 a0 01 	vmovups 0x1a0(%rsp),%ymm1
   1b3ad:	00 00 
   1b3af:	c5 fc 29 8c 24 20 04 	vmovaps %ymm1,0x420(%rsp)
   1b3b6:	00 00 
   1b3b8:	c5 fc 29 84 24 00 04 	vmovaps %ymm0,0x400(%rsp)
   1b3bf:	00 00 
    /// use crossbeam_utils::CachePadded;
    ///
    /// let padded_value = CachePadded::new(1);
    /// ```
    pub fn new(t: T) -> CachePadded<T> {
        CachePadded::<T> { value: t }
   1b3c1:	c5 fc 10 84 24 80 01 	vmovups 0x180(%rsp),%ymm0
   1b3c8:	00 00 
   1b3ca:	c5 fc 10 8c 24 a0 01 	vmovups 0x1a0(%rsp),%ymm1
   1b3d1:	00 00 
   1b3d3:	c5 fc 10 94 24 c0 01 	vmovups 0x1c0(%rsp),%ymm2
   1b3da:	00 00 
   1b3dc:	c5 fc 29 84 24 80 03 	vmovaps %ymm0,0x380(%rsp)
   1b3e3:	00 00 
   1b3e5:	c5 fc 29 8c 24 a0 03 	vmovaps %ymm1,0x3a0(%rsp)
   1b3ec:	00 00 
   1b3ee:	c5 fc 10 84 24 d0 01 	vmovups 0x1d0(%rsp),%ymm0
   1b3f5:	00 00 
   1b3f7:	c5 fc 29 94 24 c0 03 	vmovaps %ymm2,0x3c0(%rsp)
   1b3fe:	00 00 
   1b400:	c5 fc 11 84 24 d0 03 	vmovups %ymm0,0x3d0(%rsp)
   1b407:	00 00 
   1b409:	48 c7 84 24 80 01 00 	movq   $0x0,0x180(%rsp)
   1b410:	00 00 00 00 00 
   1b415:	be 80 00 00 00       	mov    $0x80,%esi
   1b41a:	ba 80 01 00 00       	mov    $0x180,%edx
   1b41f:	48 8d bc 24 80 01 00 	lea    0x180(%rsp),%rdi
   1b426:	00 
   1b427:	c5 f8 77             	vzeroupper 
   1b42a:	ff 15 70 cb 22 00    	callq  *0x22cb70(%rip)        # 247fa0 <posix_memalign@GLIBC_2.2.5>
   1b430:	48 8b 8c 24 80 01 00 	mov    0x180(%rsp),%rcx
   1b437:	00 
   1b438:	48 85 c9             	test   %rcx,%rcx
   1b43b:	0f 84 9b 17 00 00    	je     1cbdc <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x1f7c>
   1b441:	85 c0                	test   %eax,%eax
   1b443:	0f 85 93 17 00 00    	jne    1cbdc <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x1f7c>
   1b449:	c5 f8 28 05 7f ef 01 	vmovaps 0x1ef7f(%rip),%xmm0        # 3a3d0 <_fini+0x8c>
   1b450:	00 
   1b451:	c5 f8 29 01          	vmovaps %xmm0,(%rcx)
   1b455:	48 89 99 80 00 00 00 	mov    %rbx,0x80(%rcx)
   1b45c:	c5 fc 28 84 24 00 04 	vmovaps 0x400(%rsp),%ymm0
   1b463:	00 00 
   1b465:	c5 fc 28 8c 24 20 04 	vmovaps 0x420(%rsp),%ymm1
   1b46c:	00 00 
   1b46e:	c5 fc 28 94 24 40 04 	vmovaps 0x440(%rsp),%ymm2
   1b475:	00 00 
   1b477:	c5 fc 11 81 88 00 00 	vmovups %ymm0,0x88(%rcx)
   1b47e:	00 
   1b47f:	c5 fc 11 89 a8 00 00 	vmovups %ymm1,0xa8(%rcx)
   1b486:	00 
   1b487:	c5 fc 11 91 c8 00 00 	vmovups %ymm2,0xc8(%rcx)
   1b48e:	00 
   1b48f:	c5 fc 10 84 24 58 04 	vmovups 0x458(%rsp),%ymm0
   1b496:	00 00 
   1b498:	c5 fc 11 81 e0 00 00 	vmovups %ymm0,0xe0(%rcx)
   1b49f:	00 
   1b4a0:	c5 f8 57 c0          	vxorps %xmm0,%xmm0,%xmm0
   1b4a4:	c5 f8 29 81 00 01 00 	vmovaps %xmm0,0x100(%rcx)
   1b4ab:	00 
   1b4ac:	c5 fc 28 84 24 80 03 	vmovaps 0x380(%rsp),%ymm0
   1b4b3:	00 00 
   1b4b5:	c5 fd 6f 8c 24 a0 03 	vmovdqa 0x3a0(%rsp),%ymm1
   1b4bc:	00 00 
   1b4be:	c5 fd 6f 94 24 c0 03 	vmovdqa 0x3c0(%rsp),%ymm2
   1b4c5:	00 00 
   1b4c7:	c5 fc 11 81 10 01 00 	vmovups %ymm0,0x110(%rcx)
   1b4ce:	00 
   1b4cf:	c5 fe 7f 89 30 01 00 	vmovdqu %ymm1,0x130(%rcx)
   1b4d6:	00 
   1b4d7:	c5 fe 7f 91 50 01 00 	vmovdqu %ymm2,0x150(%rcx)
   1b4de:	00 
   1b4df:	c5 fe 6f 84 24 d0 03 	vmovdqu 0x3d0(%rsp),%ymm0
   1b4e6:	00 00 
   1b4e8:	c5 fe 7f 81 60 01 00 	vmovdqu %ymm0,0x160(%rcx)
   1b4ef:	00 
   1b4f0:	f0 48 ff 01          	lock incq (%rcx)
   1b4f4:	0f 8e cd 16 00 00    	jle    1cbc7 <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x1f67>
                (worker, stealer)
   1b4fa:	8b 84 24 00 01 00 00 	mov    0x100(%rsp),%eax
   1b501:	8b 94 24 03 01 00 00 	mov    0x103(%rsp),%edx
   1b508:	89 54 24 3b          	mov    %edx,0x3b(%rsp)
   1b50c:	89 44 24 38          	mov    %eax,0x38(%rsp)
   1b510:	48 89 8c 24 a8 00 00 	mov    %rcx,0xa8(%rsp)
   1b517:	00 
   1b518:	c6 84 24 b0 00 00 00 	movb   $0x1,0xb0(%rsp)
   1b51f:	01 
   1b520:	48 89 8c 24 80 03 00 	mov    %rcx,0x380(%rsp)
   1b527:	00 
   1b528:	4c 89 b4 24 88 03 00 	mov    %r14,0x388(%rsp)
   1b52f:	00 
   1b530:	48 c7 84 24 90 03 00 	movq   $0x40,0x390(%rsp)
   1b537:	00 40 00 00 00 
   1b53c:	c6 84 24 98 03 00 00 	movb   $0x1,0x398(%rsp)
   1b543:	01 
   1b544:	8b 44 24 38          	mov    0x38(%rsp),%eax
   1b548:	8b 4c 24 3b          	mov    0x3b(%rsp),%ecx
   1b54c:	48 8d 94 24 99 03 00 	lea    0x399(%rsp),%rdx
   1b553:	00 
   1b554:	89 4a 03             	mov    %ecx,0x3(%rdx)
   1b557:	89 02                	mov    %eax,(%rdx)
   1b559:	48 8b 9c 24 e0 00 00 	mov    0xe0(%rsp),%rbx
   1b560:	00 
   1b561:	48 39 9c 24 d8 00 00 	cmp    %rbx,0xd8(%rsp)
   1b568:	00 
   1b569:	4c 89 a4 24 60 01 00 	mov    %r12,0x160(%rsp)
   1b570:	00 
   1b571:	75 6d                	jne    1b5e0 <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x980>
   1b573:	49 89 dd             	mov    %rbx,%r13
   1b576:	49 ff c5             	inc    %r13
   1b579:	0f 84 9d 16 00 00    	je     1cc1c <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x1fbc>
   1b57f:	48 8d 04 1b          	lea    (%rbx,%rbx,1),%rax
   1b583:	4c 39 e8             	cmp    %r13,%rax
   1b586:	4c 0f 47 e8          	cmova  %rax,%r13
   1b58a:	45 31 e4             	xor    %r12d,%r12d
   1b58d:	4c 89 e8             	mov    %r13,%rax
   1b590:	b9 20 00 00 00       	mov    $0x20,%ecx
   1b595:	48 f7 e1             	mul    %rcx
   1b598:	49 89 c6             	mov    %rax,%r14
   1b59b:	0f 91 c0             	setno  %al
   1b59e:	0f 80 78 16 00 00    	jo     1cc1c <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x1fbc>
   1b5a4:	41 88 c4             	mov    %al,%r12b
   1b5a7:	49 c1 e4 03          	shl    $0x3,%r12
   1b5ab:	48 85 db             	test   %rbx,%rbx
   1b5ae:	74 3d                	je     1b5ed <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x98d>
   1b5b0:	48 8b bc 24 d0 00 00 	mov    0xd0(%rsp),%rdi
   1b5b7:	00 
   1b5b8:	4d 85 f6             	test   %r14,%r14
   1b5bb:	74 7c                	je     1b639 <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x9d9>
   1b5bd:	4c 89 f6             	mov    %r14,%rsi
   1b5c0:	c5 f8 77             	vzeroupper 
   1b5c3:	ff 15 6f c9 22 00    	callq  *0x22c96f(%rip)        # 247f38 <realloc@GLIBC_2.2.5>
   1b5c9:	49 89 c7             	mov    %rax,%r15
   1b5cc:	4d 85 ff             	test   %r15,%r15
   1b5cf:	0f 85 db 00 00 00    	jne    1b6b0 <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0xa50>
   1b5d5:	e9 c2 18 00 00       	jmpq   1ce9c <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x223c>
   1b5da:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1b5e0:	4c 8b bc 24 d0 00 00 	mov    0xd0(%rsp),%r15
   1b5e7:	00 
   1b5e8:	e9 db 00 00 00       	jmpq   1b6c8 <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0xa68>
   1b5ed:	4d 39 f4             	cmp    %r14,%r12
   1b5f0:	0f 86 9e 00 00 00    	jbe    1b694 <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0xa34>
   1b5f6:	48 c7 84 24 80 01 00 	movq   $0x0,0x180(%rsp)
   1b5fd:	00 00 00 00 00 
   1b602:	be 08 00 00 00       	mov    $0x8,%esi
   1b607:	48 8d bc 24 80 01 00 	lea    0x180(%rsp),%rdi
   1b60e:	00 
   1b60f:	4c 89 f2             	mov    %r14,%rdx
   1b612:	c5 f8 77             	vzeroupper 
   1b615:	ff 15 85 c9 22 00    	callq  *0x22c985(%rip)        # 247fa0 <posix_memalign@GLIBC_2.2.5>
   1b61b:	85 c0                	test   %eax,%eax
   1b61d:	0f 85 79 18 00 00    	jne    1ce9c <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x223c>
   1b623:	4c 8b bc 24 80 01 00 	mov    0x180(%rsp),%r15
   1b62a:	00 
   1b62b:	4d 85 ff             	test   %r15,%r15
   1b62e:	0f 85 7c 00 00 00    	jne    1b6b0 <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0xa50>
   1b634:	e9 63 18 00 00       	jmpq   1ce9c <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x223c>
   1b639:	48 89 bc 24 c0 02 00 	mov    %rdi,0x2c0(%rsp)
   1b640:	00 
   1b641:	48 c7 84 24 80 01 00 	movq   $0x0,0x180(%rsp)
   1b648:	00 00 00 00 00 
   1b64d:	be 08 00 00 00       	mov    $0x8,%esi
   1b652:	48 8d bc 24 80 01 00 	lea    0x180(%rsp),%rdi
   1b659:	00 
   1b65a:	31 d2                	xor    %edx,%edx
   1b65c:	c5 f8 77             	vzeroupper 
   1b65f:	ff 15 3b c9 22 00    	callq  *0x22c93b(%rip)        # 247fa0 <posix_memalign@GLIBC_2.2.5>
   1b665:	85 c0                	test   %eax,%eax
   1b667:	0f 85 2c 18 00 00    	jne    1ce99 <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x2239>
   1b66d:	4c 8b bc 24 80 01 00 	mov    0x180(%rsp),%r15
   1b674:	00 
   1b675:	41 be 00 00 00 00    	mov    $0x0,%r14d
   1b67b:	4d 85 ff             	test   %r15,%r15
   1b67e:	0f 84 18 18 00 00    	je     1ce9c <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x223c>
   1b684:	48 8b bc 24 c0 02 00 	mov    0x2c0(%rsp),%rdi
   1b68b:	00 
   1b68c:	ff 15 e6 c6 22 00    	callq  *0x22c6e6(%rip)        # 247d78 <free@GLIBC_2.2.5>
   1b692:	eb 1c                	jmp    1b6b0 <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0xa50>
   1b694:	4c 89 f7             	mov    %r14,%rdi
   1b697:	c5 f8 77             	vzeroupper 
   1b69a:	ff 15 68 c8 22 00    	callq  *0x22c868(%rip)        # 247f08 <malloc@GLIBC_2.2.5>
   1b6a0:	49 89 c7             	mov    %rax,%r15
   1b6a3:	4d 85 ff             	test   %r15,%r15
   1b6a6:	0f 84 f0 17 00 00    	je     1ce9c <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x223c>
   1b6ac:	0f 1f 40 00          	nopl   0x0(%rax)
   1b6b0:	4c 89 bc 24 d0 00 00 	mov    %r15,0xd0(%rsp)
   1b6b7:	00 
   1b6b8:	4c 89 ac 24 d8 00 00 	mov    %r13,0xd8(%rsp)
   1b6bf:	00 
   1b6c0:	4c 8b a4 24 60 01 00 	mov    0x160(%rsp),%r12
   1b6c7:	00 
   1b6c8:	c5 fc 10 84 24 80 03 	vmovups 0x380(%rsp),%ymm0
   1b6cf:	00 00 
   1b6d1:	c5 fc 29 84 24 00 04 	vmovaps %ymm0,0x400(%rsp)
   1b6d8:	00 00 
   1b6da:	c6 84 24 98 01 00 00 	movb   $0x2,0x198(%rsp)
   1b6e1:	02 
   1b6e2:	c5 fd 6f 8c 24 00 04 	vmovdqa 0x400(%rsp),%ymm1
   1b6e9:	00 00 
   1b6eb:	c5 fd 6f 84 24 80 01 	vmovdqa 0x180(%rsp),%ymm0
   1b6f2:	00 00 
   1b6f4:	c5 f9 6f 94 24 10 04 	vmovdqa 0x410(%rsp),%xmm2
   1b6fb:	00 00 
   1b6fd:	c5 fd 7f 84 24 00 04 	vmovdqa %ymm0,0x400(%rsp)
   1b704:	00 00 
   1b706:	c4 e3 79 14 d0 08    	vpextrb $0x8,%xmm2,%eax
   1b70c:	3c 02                	cmp    $0x2,%al
   1b70e:	75 40                	jne    1b750 <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0xaf0>
   1b710:	c5 f9 6f 84 24 90 01 	vmovdqa 0x190(%rsp),%xmm0
   1b717:	00 00 
   1b719:	48 8b 84 24 80 01 00 	mov    0x180(%rsp),%rax
   1b720:	00 
   1b721:	c4 e3 79 14 c1 08    	vpextrb $0x8,%xmm0,%ecx
   1b727:	48 89 9c 24 e0 00 00 	mov    %rbx,0xe0(%rsp)
   1b72e:	00 
   1b72f:	80 f9 02             	cmp    $0x2,%cl
   1b732:	0f 84 84 00 00 00    	je     1b7bc <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0xb5c>
   1b738:	f0 48 ff 08          	lock decq (%rax)
   1b73c:	75 7e                	jne    1b7bc <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0xb5c>
   1b73e:	48 8d bc 24 00 04 00 	lea    0x400(%rsp),%rdi
   1b745:	00 
   1b746:	c5 f8 77             	vzeroupper 
   1b749:	e8 02 de ff ff       	callq  19550 <_ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17hf09fbc4b768e849cE>
   1b74e:	eb 6c                	jmp    1b7bc <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0xb5c>
   1b750:	48 89 d8             	mov    %rbx,%rax
   1b753:	48 c1 e0 05          	shl    $0x5,%rax
   1b757:	49 01 c7             	add    %rax,%r15
   1b75a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1b760:	c4 c1 7e 7f 0f       	vmovdqu %ymm1,(%r15)
   1b765:	49 83 c7 20          	add    $0x20,%r15
   1b769:	48 ff c3             	inc    %rbx
   1b76c:	c6 84 24 98 01 00 00 	movb   $0x2,0x198(%rsp)
   1b773:	02 
   1b774:	c4 e3 7d 39 c2 01    	vextracti128 $0x1,%ymm0,%xmm2
   1b77a:	c5 fd 6f c8          	vmovdqa %ymm0,%ymm1
   1b77e:	c5 fd 6f 84 24 80 01 	vmovdqa 0x180(%rsp),%ymm0
   1b785:	00 00 
   1b787:	c4 e3 79 14 d0 08    	vpextrb $0x8,%xmm2,%eax
   1b78d:	3c 02                	cmp    $0x2,%al
   1b78f:	75 cf                	jne    1b760 <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0xb00>
   1b791:	c5 fd 7f 84 24 00 04 	vmovdqa %ymm0,0x400(%rsp)
   1b798:	00 00 
   1b79a:	c4 e1 f9 7e c0       	vmovq  %xmm0,%rax
   1b79f:	c4 e3 7d 39 c0 01    	vextracti128 $0x1,%ymm0,%xmm0
   1b7a5:	c4 e3 79 14 c1 08    	vpextrb $0x8,%xmm0,%ecx
   1b7ab:	48 89 9c 24 e0 00 00 	mov    %rbx,0xe0(%rsp)
   1b7b2:	00 
   1b7b3:	80 f9 02             	cmp    $0x2,%cl
   1b7b6:	0f 85 7c ff ff ff    	jne    1b738 <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0xad8>
   1b7bc:	48 8b 8c 24 a8 00 00 	mov    0xa8(%rsp),%rcx
   1b7c3:	00 
   1b7c4:	8a 94 24 b0 00 00 00 	mov    0xb0(%rsp),%dl
   1b7cb:	48 89 8c 24 80 01 00 	mov    %rcx,0x180(%rsp)
   1b7d2:	00 
   1b7d3:	88 94 24 88 01 00 00 	mov    %dl,0x188(%rsp)
   1b7da:	4c 8b 6c 24 68       	mov    0x68(%rsp),%r13
   1b7df:	48 8b 5c 24 70       	mov    0x70(%rsp),%rbx
   1b7e4:	49 39 dd             	cmp    %rbx,%r13
   1b7e7:	0f 85 23 fb ff ff    	jne    1b310 <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x6b0>
   1b7ed:	88 94 24 40 03 00 00 	mov    %dl,0x340(%rsp)
   1b7f4:	48 89 8c 24 c0 02 00 	mov    %rcx,0x2c0(%rsp)
   1b7fb:	00 
   1b7fc:	49 89 dd             	mov    %rbx,%r13
   1b7ff:	49 ff c5             	inc    %r13
   1b802:	0f 84 07 14 00 00    	je     1cc0f <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x1faf>
   1b808:	48 8d 04 1b          	lea    (%rbx,%rbx,1),%rax
   1b80c:	4c 39 e8             	cmp    %r13,%rax
   1b80f:	4c 0f 47 e8          	cmova  %rax,%r13
   1b813:	45 31 e4             	xor    %r12d,%r12d
   1b816:	4c 89 e8             	mov    %r13,%rax
   1b819:	b9 10 00 00 00       	mov    $0x10,%ecx
   1b81e:	48 f7 e1             	mul    %rcx
   1b821:	49 89 c6             	mov    %rax,%r14
   1b824:	0f 91 c0             	setno  %al
   1b827:	0f 80 e2 13 00 00    	jo     1cc0f <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x1faf>
   1b82d:	41 88 c4             	mov    %al,%r12b
   1b830:	49 c1 e4 03          	shl    $0x3,%r12
   1b834:	48 85 db             	test   %rbx,%rbx
   1b837:	74 27                	je     1b860 <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0xc00>
   1b839:	48 8b 7c 24 60       	mov    0x60(%rsp),%rdi
   1b83e:	4d 85 f6             	test   %r14,%r14
   1b841:	74 65                	je     1b8a8 <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0xc48>
   1b843:	4c 89 f6             	mov    %r14,%rsi
   1b846:	c5 f8 77             	vzeroupper 
   1b849:	ff 15 e9 c6 22 00    	callq  *0x22c6e9(%rip)        # 247f38 <realloc@GLIBC_2.2.5>
   1b84f:	49 89 c7             	mov    %rax,%r15
   1b852:	4d 85 ff             	test   %r15,%r15
   1b855:	0f 85 c5 00 00 00    	jne    1b920 <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0xcc0>
   1b85b:	e9 3c 16 00 00       	jmpq   1ce9c <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x223c>
   1b860:	4d 39 f4             	cmp    %r14,%r12
   1b863:	0f 86 9a 00 00 00    	jbe    1b903 <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0xca3>
   1b869:	48 c7 84 24 00 04 00 	movq   $0x0,0x400(%rsp)
   1b870:	00 00 00 00 00 
   1b875:	be 08 00 00 00       	mov    $0x8,%esi
   1b87a:	48 8d bc 24 00 04 00 	lea    0x400(%rsp),%rdi
   1b881:	00 
   1b882:	4c 89 f2             	mov    %r14,%rdx
   1b885:	c5 f8 77             	vzeroupper 
   1b888:	ff 15 12 c7 22 00    	callq  *0x22c712(%rip)        # 247fa0 <posix_memalign@GLIBC_2.2.5>
   1b88e:	85 c0                	test   %eax,%eax
   1b890:	0f 85 06 16 00 00    	jne    1ce9c <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x223c>
   1b896:	4c 8b bc 24 00 04 00 	mov    0x400(%rsp),%r15
   1b89d:	00 
   1b89e:	4d 85 ff             	test   %r15,%r15
   1b8a1:	75 7d                	jne    1b920 <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0xcc0>
   1b8a3:	e9 f4 15 00 00       	jmpq   1ce9c <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x223c>
   1b8a8:	48 89 bc 24 40 05 00 	mov    %rdi,0x540(%rsp)
   1b8af:	00 
   1b8b0:	48 c7 84 24 00 04 00 	movq   $0x0,0x400(%rsp)
   1b8b7:	00 00 00 00 00 
   1b8bc:	be 08 00 00 00       	mov    $0x8,%esi
   1b8c1:	48 8d bc 24 00 04 00 	lea    0x400(%rsp),%rdi
   1b8c8:	00 
   1b8c9:	31 d2                	xor    %edx,%edx
   1b8cb:	c5 f8 77             	vzeroupper 
   1b8ce:	ff 15 cc c6 22 00    	callq  *0x22c6cc(%rip)        # 247fa0 <posix_memalign@GLIBC_2.2.5>
   1b8d4:	85 c0                	test   %eax,%eax
   1b8d6:	0f 85 bd 15 00 00    	jne    1ce99 <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x2239>
   1b8dc:	4c 8b bc 24 00 04 00 	mov    0x400(%rsp),%r15
   1b8e3:	00 
   1b8e4:	41 be 00 00 00 00    	mov    $0x0,%r14d
   1b8ea:	4d 85 ff             	test   %r15,%r15
   1b8ed:	0f 84 a9 15 00 00    	je     1ce9c <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x223c>
   1b8f3:	48 8b bc 24 40 05 00 	mov    0x540(%rsp),%rdi
   1b8fa:	00 
   1b8fb:	ff 15 77 c4 22 00    	callq  *0x22c477(%rip)        # 247d78 <free@GLIBC_2.2.5>
   1b901:	eb 1d                	jmp    1b920 <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0xcc0>
   1b903:	4c 89 f7             	mov    %r14,%rdi
   1b906:	c5 f8 77             	vzeroupper 
   1b909:	ff 15 f9 c5 22 00    	callq  *0x22c5f9(%rip)        # 247f08 <malloc@GLIBC_2.2.5>
   1b90f:	49 89 c7             	mov    %rax,%r15
   1b912:	4d 85 ff             	test   %r15,%r15
   1b915:	0f 84 81 15 00 00    	je     1ce9c <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x223c>
   1b91b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1b920:	4c 89 7c 24 60       	mov    %r15,0x60(%rsp)
   1b925:	4c 89 6c 24 68       	mov    %r13,0x68(%rsp)
   1b92a:	4c 8b a4 24 60 01 00 	mov    0x160(%rsp),%r12
   1b931:	00 
   1b932:	48 8b 8c 24 c0 02 00 	mov    0x2c0(%rsp),%rcx
   1b939:	00 
   1b93a:	8a 94 24 40 03 00 00 	mov    0x340(%rsp),%dl
   1b941:	e9 cf f9 ff ff       	jmpq   1b315 <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x6b5>
   1b946:	31 db                	xor    %ebx,%ebx
   1b948:	45 31 ed             	xor    %r13d,%r13d
   1b94b:	41 bf 08 00 00 00    	mov    $0x8,%r15d
   1b951:	48 8b 84 24 e0 00 00 	mov    0xe0(%rsp),%rax
   1b958:	00 
   1b959:	48 89 84 24 90 01 00 	mov    %rax,0x190(%rsp)
   1b960:	00 
   1b961:	c5 fa 6f 84 24 d0 00 	vmovdqu 0xd0(%rsp),%xmm0
   1b968:	00 00 
   1b96a:	c5 f9 7f 84 24 80 01 	vmovdqa %xmm0,0x180(%rsp)
   1b971:	00 00 
        let (workers, stealers): (Vec<_>, Vec<_>) = (0..n_threads)
   1b973:	48 89 84 24 70 05 00 	mov    %rax,0x570(%rsp)
   1b97a:	00 
   1b97b:	c5 f9 7f 84 24 60 05 	vmovdqa %xmm0,0x560(%rsp)
   1b982:	00 00 
   1b984:	49 89 de             	mov    %rbx,%r14
   1b987:	49 c1 e6 04          	shl    $0x4,%r14
   1b98b:	48 c7 84 24 a8 00 00 	movq   $0x8,0xa8(%rsp)
   1b992:	00 08 00 00 00 
   1b997:	c5 f9 ef c0          	vpxor  %xmm0,%xmm0,%xmm0
   1b99b:	c5 fa 7f 84 24 b0 00 	vmovdqu %xmm0,0xb0(%rsp)
   1b9a2:	00 00 
   1b9a4:	4c 89 bc 24 d0 00 00 	mov    %r15,0xd0(%rsp)
   1b9ab:	00 
   1b9ac:	4c 89 ac 24 d8 00 00 	mov    %r13,0xd8(%rsp)
   1b9b3:	00 
   1b9b4:	4c 89 bc 24 e0 00 00 	mov    %r15,0xe0(%rsp)
   1b9bb:	00 
   1b9bc:	4b 8d 04 37          	lea    (%r15,%r14,1),%rax
   1b9c0:	48 89 84 24 e8 00 00 	mov    %rax,0xe8(%rsp)
   1b9c7:	00 
   1b9c8:	48 85 db             	test   %rbx,%rbx
   1b9cb:	b8 08 00 00 00       	mov    $0x8,%eax
   1b9d0:	0f 84 8c 00 00 00    	je     1ba62 <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0xe02>
   1b9d6:	49 c1 fe 04          	sar    $0x4,%r14
   1b9da:	b9 50 00 00 00       	mov    $0x50,%ecx
   1b9df:	31 db                	xor    %ebx,%ebx
   1b9e1:	4c 89 f0             	mov    %r14,%rax
   1b9e4:	48 f7 e1             	mul    %rcx
   1b9e7:	49 89 c7             	mov    %rax,%r15
   1b9ea:	0f 91 c0             	setno  %al
   1b9ed:	0f 80 f2 14 00 00    	jo     1cee5 <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x2285>
   1b9f3:	88 c3                	mov    %al,%bl
   1b9f5:	48 c1 e3 03          	shl    $0x3,%rbx
   1b9f9:	4c 39 fb             	cmp    %r15,%rbx
   1b9fc:	76 43                	jbe    1ba41 <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0xde1>
   1b9fe:	48 c7 84 24 80 01 00 	movq   $0x0,0x180(%rsp)
   1ba05:	00 00 00 00 00 
   1ba0a:	48 8d bc 24 80 01 00 	lea    0x180(%rsp),%rdi
   1ba11:	00 
   1ba12:	be 08 00 00 00       	mov    $0x8,%esi
   1ba17:	4c 89 fa             	mov    %r15,%rdx
   1ba1a:	c5 f8 77             	vzeroupper 
   1ba1d:	ff 15 7d c5 22 00    	callq  *0x22c57d(%rip)        # 247fa0 <posix_memalign@GLIBC_2.2.5>
   1ba23:	85 c0                	test   %eax,%eax
   1ba25:	75 0d                	jne    1ba34 <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0xdd4>
   1ba27:	48 8b 84 24 80 01 00 	mov    0x180(%rsp),%rax
   1ba2e:	00 
   1ba2f:	48 85 c0             	test   %rax,%rax
   1ba32:	75 1e                	jne    1ba52 <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0xdf2>
   1ba34:	4c 89 ff             	mov    %r15,%rdi
   1ba37:	48 89 de             	mov    %rbx,%rsi
   1ba3a:	e8 81 9a fe ff       	callq  54c0 <_ZN5alloc5alloc18handle_alloc_error17hf7bb8682f6c8b1d7E>
   1ba3f:	0f 0b                	ud2    
   1ba41:	4c 89 ff             	mov    %r15,%rdi
   1ba44:	c5 f8 77             	vzeroupper 
   1ba47:	ff 15 bb c4 22 00    	callq  *0x22c4bb(%rip)        # 247f08 <malloc@GLIBC_2.2.5>
   1ba4d:	48 85 c0             	test   %rax,%rax
   1ba50:	74 e2                	je     1ba34 <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0xdd4>
   1ba52:	48 89 84 24 a8 00 00 	mov    %rax,0xa8(%rsp)
   1ba59:	00 
   1ba5a:	4c 89 b4 24 b0 00 00 	mov    %r14,0xb0(%rsp)
   1ba61:	00 
   1ba62:	48 8b 8c 24 d0 00 00 	mov    0xd0(%rsp),%rcx
   1ba69:	00 
   1ba6a:	48 89 4c 24 60       	mov    %rcx,0x60(%rsp)
   1ba6f:	48 8b 8c 24 d8 00 00 	mov    0xd8(%rsp),%rcx
   1ba76:	00 
   1ba77:	48 89 4c 24 68       	mov    %rcx,0x68(%rsp)
   1ba7c:	48 8b 8c 24 e0 00 00 	mov    0xe0(%rsp),%rcx
   1ba83:	00 
   1ba84:	48 89 4c 24 70       	mov    %rcx,0x70(%rsp)
   1ba89:	48 8b 8c 24 e8 00 00 	mov    0xe8(%rsp),%rcx
   1ba90:	00 
   1ba91:	48 89 4c 24 78       	mov    %rcx,0x78(%rsp)
   1ba96:	48 8b 5c 24 70       	mov    0x70(%rsp),%rbx
   1ba9b:	48 8b 4c 24 78       	mov    0x78(%rsp),%rcx
   1baa0:	48 89 8c 24 60 01 00 	mov    %rcx,0x160(%rsp)
   1baa7:	00 
   1baa8:	48 39 cb             	cmp    %rcx,%rbx
   1baab:	0f 84 4b 0f 00 00    	je     1c9fc <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x1d9c>
   1bab1:	49 89 c7             	mov    %rax,%r15
            primed: LockLatch::new(),
   1bab4:	48 83 c3 10          	add    $0x10,%rbx
   1bab8:	45 31 ed             	xor    %r13d,%r13d
   1babb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1bac0:	4c 8b 73 f0          	mov    -0x10(%rbx),%r14
   1bac4:	44 0f b6 63 f8       	movzbl -0x8(%rbx),%r12d
   1bac9:	41 80 e4 01          	and    $0x1,%r12b
   1bacd:	4c 89 74 24 38       	mov    %r14,0x38(%rsp)
   1bad2:	44 88 64 24 40       	mov    %r12b,0x40(%rsp)
   1bad7:	48 8d bc 24 80 03 00 	lea    0x380(%rsp),%rdi
   1bade:	00 
   1badf:	c5 f8 77             	vzeroupper 
   1bae2:	e8 e9 19 00 00       	callq  1d4d0 <_ZN10rayon_core5latch9LockLatch3new17hd5a822851561a199E>
            stopped: LockLatch::new(),
   1bae7:	48 8d bc 24 00 04 00 	lea    0x400(%rsp),%rdi
   1baee:	00 
   1baef:	e8 dc 19 00 00       	callq  1d4d0 <_ZN10rayon_core5latch9LockLatch3new17hd5a822851561a199E>
        ThreadInfo {
   1baf4:	c5 fc 10 84 24 80 03 	vmovups 0x380(%rsp),%ymm0
   1bafb:	00 00 
   1bafd:	c5 fc 29 84 24 80 01 	vmovaps %ymm0,0x180(%rsp)
   1bb04:	00 00 
   1bb06:	c5 fc 10 84 24 00 04 	vmovups 0x400(%rsp),%ymm0
   1bb0d:	00 00 
   1bb0f:	48 8d 84 24 a0 01 00 	lea    0x1a0(%rsp),%rax
   1bb16:	00 
   1bb17:	c5 fc 11 00          	vmovups %ymm0,(%rax)
   1bb1b:	c5 fd 6f 84 24 80 01 	vmovdqa 0x180(%rsp),%ymm0
   1bb22:	00 00 
   1bb24:	c5 fd 6f 8c 24 a0 01 	vmovdqa 0x1a0(%rsp),%ymm1
   1bb2b:	00 00 
   1bb2d:	c4 c1 7e 7f 4f 20    	vmovdqu %ymm1,0x20(%r15)
   1bb33:	c4 c1 7e 7f 07       	vmovdqu %ymm0,(%r15)
   1bb38:	48 8d 43 f0          	lea    -0x10(%rbx),%rax
   1bb3c:	4d 89 77 40          	mov    %r14,0x40(%r15)
   1bb40:	45 88 67 48          	mov    %r12b,0x48(%r15)
   1bb44:	8b 8c 24 00 01 00 00 	mov    0x100(%rsp),%ecx
   1bb4b:	8b 94 24 03 01 00 00 	mov    0x103(%rsp),%edx
   1bb52:	41 89 4f 49          	mov    %ecx,0x49(%r15)
   1bb56:	41 89 57 4c          	mov    %edx,0x4c(%r15)
   1bb5a:	49 ff c5             	inc    %r13
   1bb5d:	48 83 c3 10          	add    $0x10,%rbx
   1bb61:	48 83 c0 10          	add    $0x10,%rax
   1bb65:	49 83 c7 50          	add    $0x50,%r15
   1bb69:	48 3b 84 24 60 01 00 	cmp    0x160(%rsp),%rax
   1bb70:	00 
   1bb71:	0f 85 49 ff ff ff    	jne    1bac0 <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0xe60>
   1bb77:	48 8b 84 24 60 01 00 	mov    0x160(%rsp),%rax
   1bb7e:	00 
   1bb7f:	48 89 44 24 70       	mov    %rax,0x70(%rsp)
   1bb84:	4c 89 ac 24 b8 00 00 	mov    %r13,0xb8(%rsp)
   1bb8b:	00 
   1bb8c:	48 83 7c 24 68 00    	cmpq   $0x0,0x68(%rsp)
   1bb92:	74 0e                	je     1bba2 <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0xf42>
   1bb94:	48 8b 7c 24 60       	mov    0x60(%rsp),%rdi
   1bb99:	c5 f8 77             	vzeroupper 
   1bb9c:	ff 15 d6 c1 22 00    	callq  *0x22c1d6(%rip)        # 247d78 <free@GLIBC_2.2.5>
   1bba2:	c5 fa 6f 84 24 a8 00 	vmovdqu 0xa8(%rsp),%xmm0
   1bba9:	00 00 
   1bbab:	c5 f9 7f 84 24 80 03 	vmovdqa %xmm0,0x380(%rsp)
   1bbb2:	00 00 
   1bbb4:	48 8b 84 24 b8 00 00 	mov    0xb8(%rsp),%rax
   1bbbb:	00 
   1bbbc:	48 89 84 24 90 03 00 	mov    %rax,0x390(%rsp)
   1bbc3:	00 
   1bbc4:	bf 28 00 00 00       	mov    $0x28,%edi
   1bbc9:	c5 f8 77             	vzeroupper 
   1bbcc:	ff 15 36 c3 22 00    	callq  *0x22c336(%rip)        # 247f08 <malloc@GLIBC_2.2.5>
   1bbd2:	48 85 c0             	test   %rax,%rax
   1bbd5:	0f 84 12 10 00 00    	je     1cbed <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x1f8d>
   1bbdb:	48 89 c3             	mov    %rax,%rbx
   1bbde:	c5 f9 ef c0          	vpxor  %xmm0,%xmm0,%xmm0
   1bbe2:	c5 fe 7f 00          	vmovdqu %ymm0,(%rax)
   1bbe6:	48 c7 40 20 00 00 00 	movq   $0x0,0x20(%rax)
   1bbed:	00 
   1bbee:	4c 8d b4 24 80 01 00 	lea    0x180(%rsp),%r14
   1bbf5:	00 
   1bbf6:	4c 89 f7             	mov    %r14,%rdi
   1bbf9:	c5 f8 77             	vzeroupper 
   1bbfc:	ff 15 3e c2 22 00    	callq  *0x22c23e(%rip)        # 247e40 <pthread_mutexattr_init@GLIBC_2.2.5>
   1bc02:	4c 89 f7             	mov    %r14,%rdi
   1bc05:	31 f6                	xor    %esi,%esi
   1bc07:	ff 15 f3 c2 22 00    	callq  *0x22c2f3(%rip)        # 247f00 <pthread_mutexattr_settype@GLIBC_2.2.5>
   1bc0d:	48 89 df             	mov    %rbx,%rdi
   1bc10:	4c 89 f6             	mov    %r14,%rsi
   1bc13:	ff 15 b7 c3 22 00    	callq  *0x22c3b7(%rip)        # 247fd0 <pthread_mutex_init@GLIBC_2.2.5>
   1bc19:	4c 89 f7             	mov    %r14,%rdi
   1bc1c:	ff 15 fe c1 22 00    	callq  *0x22c1fe(%rip)        # 247e20 <pthread_mutexattr_destroy@GLIBC_2.2.5>
   1bc22:	48 89 9c 24 00 04 00 	mov    %rbx,0x400(%rsp)
   1bc29:	00 
   1bc2a:	c6 84 24 08 04 00 00 	movb   $0x0,0x408(%rsp)
   1bc31:	00 
   1bc32:	8b 84 24 80 01 00 00 	mov    0x180(%rsp),%eax
   1bc39:	8b 8c 24 83 01 00 00 	mov    0x183(%rsp),%ecx
   1bc40:	89 84 24 09 04 00 00 	mov    %eax,0x409(%rsp)
   1bc47:	89 8c 24 0c 04 00 00 	mov    %ecx,0x40c(%rsp)
   1bc4e:	bf 30 00 00 00       	mov    $0x30,%edi
   1bc53:	ff 15 af c2 22 00    	callq  *0x22c2af(%rip)        # 247f08 <malloc@GLIBC_2.2.5>
   1bc59:	48 85 c0             	test   %rax,%rax
   1bc5c:	0f 84 72 12 00 00    	je     1ced4 <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x2274>
   1bc62:	c5 f9 ef c0          	vpxor  %xmm0,%xmm0,%xmm0
   1bc66:	c5 fe 7f 40 10       	vmovdqu %ymm0,0x10(%rax)
   1bc6b:	c5 fe 7f 00          	vmovdqu %ymm0,(%rax)
   1bc6f:	48 89 84 24 80 01 00 	mov    %rax,0x180(%rsp)
   1bc76:	00 
   1bc77:	48 c7 84 24 88 01 00 	movq   $0x0,0x188(%rsp)
   1bc7e:	00 00 00 00 00 
   1bc83:	48 89 c7             	mov    %rax,%rdi
   1bc86:	c5 f8 77             	vzeroupper 
   1bc89:	e8 92 78 00 00       	callq  23520 <_ZN3std3sys4unix7condvar7Condvar4init17h0d9dfb02507b432dE>
   1bc8e:	c5 f8 10 84 24 80 01 	vmovups 0x180(%rsp),%xmm0
   1bc95:	00 00 
   1bc97:	c5 f8 29 84 24 d0 00 	vmovaps %xmm0,0xd0(%rsp)
   1bc9e:	00 00 
        Sleep {
   1bca0:	c5 f8 10 84 24 00 04 	vmovups 0x400(%rsp),%xmm0
   1bca7:	00 00 
   1bca9:	c5 f8 29 44 24 60    	vmovaps %xmm0,0x60(%rsp)
   1bcaf:	c5 f8 57 c0          	vxorps %xmm0,%xmm0,%xmm0
   1bcb3:	c5 f8 29 84 24 00 04 	vmovaps %xmm0,0x400(%rsp)
   1bcba:	00 00 
   1bcbc:	c5 f8 29 84 24 80 04 	vmovaps %xmm0,0x480(%rsp)
   1bcc3:	00 00 
   1bcc5:	c5 f8 10 84 24 b8 05 	vmovups 0x5b8(%rsp),%xmm0
   1bccc:	00 00 
   1bcce:	c5 f8 29 84 24 60 01 	vmovaps %xmm0,0x160(%rsp)
   1bcd5:	00 00 
   1bcd7:	48 c7 84 24 b8 05 00 	movq   $0x0,0x5b8(%rsp)
   1bcde:	00 00 00 00 00 
   1bce3:	c5 fc 10 84 24 e8 05 	vmovups 0x5e8(%rsp),%ymm0
   1bcea:	00 00 
   1bcec:	c5 fc 29 84 24 20 03 	vmovaps %ymm0,0x320(%rsp)
   1bcf3:	00 00 
   1bcf5:	48 c7 84 24 e8 05 00 	movq   $0x0,0x5e8(%rsp)
   1bcfc:	00 00 00 00 00 
   1bd01:	48 c7 84 24 f8 05 00 	movq   $0x0,0x5f8(%rsp)
   1bd08:	00 00 00 00 00 
        let registry = Arc::new(Registry {
   1bd0d:	c5 f8 28 84 24 80 03 	vmovaps 0x380(%rsp),%xmm0
   1bd14:	00 00 
   1bd16:	c5 f8 29 84 24 80 02 	vmovaps %xmm0,0x280(%rsp)
   1bd1d:	00 00 
   1bd1f:	48 8b 84 24 90 03 00 	mov    0x390(%rsp),%rax
   1bd26:	00 
   1bd27:	48 89 84 24 90 02 00 	mov    %rax,0x290(%rsp)
   1bd2e:	00 
   1bd2f:	c5 fc 28 84 24 e0 04 	vmovaps 0x4e0(%rsp),%ymm0
   1bd36:	00 00 
   1bd38:	c5 fc 29 84 24 60 02 	vmovaps %ymm0,0x260(%rsp)
   1bd3f:	00 00 
   1bd41:	c5 fc 28 84 24 c0 04 	vmovaps 0x4c0(%rsp),%ymm0
   1bd48:	00 00 
   1bd4a:	c5 fc 29 84 24 40 02 	vmovaps %ymm0,0x240(%rsp)
   1bd51:	00 00 
   1bd53:	c5 fc 28 84 24 20 04 	vmovaps 0x420(%rsp),%ymm0
   1bd5a:	00 00 
   1bd5c:	c5 fc 28 8c 24 60 04 	vmovaps 0x460(%rsp),%ymm1
   1bd63:	00 00 
   1bd65:	c5 fd 6f 94 24 a0 04 	vmovdqa 0x4a0(%rsp),%ymm2
   1bd6c:	00 00 
   1bd6e:	c5 fd 7f 94 24 20 02 	vmovdqa %ymm2,0x220(%rsp)
   1bd75:	00 00 
   1bd77:	c5 fc 29 8c 24 e0 01 	vmovaps %ymm1,0x1e0(%rsp)
   1bd7e:	00 00 
   1bd80:	c5 fd 6f 8c 24 40 04 	vmovdqa 0x440(%rsp),%ymm1
   1bd87:	00 00 
   1bd89:	c5 fd 7f 8c 24 c0 01 	vmovdqa %ymm1,0x1c0(%rsp)
   1bd90:	00 00 
   1bd92:	c5 fc 29 84 24 a0 01 	vmovaps %ymm0,0x1a0(%rsp)
   1bd99:	00 00 
   1bd9b:	c5 fc 28 84 24 80 04 	vmovaps 0x480(%rsp),%ymm0
   1bda2:	00 00 
   1bda4:	c5 fc 29 84 24 00 02 	vmovaps %ymm0,0x200(%rsp)
   1bdab:	00 00 
   1bdad:	c5 fc 28 84 24 00 04 	vmovaps 0x400(%rsp),%ymm0
   1bdb4:	00 00 
   1bdb6:	c5 fc 29 84 24 80 01 	vmovaps %ymm0,0x180(%rsp)
   1bdbd:	00 00 
   1bdbf:	48 c7 84 24 00 04 00 	movq   $0x0,0x400(%rsp)
   1bdc6:	00 00 00 00 00 
   1bdcb:	48 8d bc 24 00 04 00 	lea    0x400(%rsp),%rdi
   1bdd2:	00 
   1bdd3:	be 80 00 00 00       	mov    $0x80,%esi
   1bdd8:	ba 00 02 00 00       	mov    $0x200,%edx
   1bddd:	c5 f8 77             	vzeroupper 
   1bde0:	ff 15 ba c1 22 00    	callq  *0x22c1ba(%rip)        # 247fa0 <posix_memalign@GLIBC_2.2.5>
   1bde6:	48 8b 9c 24 00 04 00 	mov    0x400(%rsp),%rbx
   1bded:	00 
   1bdee:	48 85 db             	test   %rbx,%rbx
   1bdf1:	0f 84 b2 10 00 00    	je     1cea9 <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x2249>
   1bdf7:	85 c0                	test   %eax,%eax
   1bdf9:	0f 85 aa 10 00 00    	jne    1cea9 <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x2249>
   1bdff:	c5 f8 28 05 c9 e5 01 	vmovaps 0x1e5c9(%rip),%xmm0        # 3a3d0 <_fini+0x8c>
   1be06:	00 
   1be07:	c5 f8 29 03          	vmovaps %xmm0,(%rbx)
   1be0b:	48 8d bb 80 00 00 00 	lea    0x80(%rbx),%rdi
   1be12:	4c 8d bc 24 80 01 00 	lea    0x180(%rsp),%r15
   1be19:	00 
   1be1a:	ba 18 01 00 00       	mov    $0x118,%edx
   1be1f:	4c 89 fe             	mov    %r15,%rsi
   1be22:	ff 15 a8 c0 22 00    	callq  *0x22c0a8(%rip)        # 247ed0 <memcpy@GLIBC_2.14>
   1be28:	48 c7 83 98 01 00 00 	movq   $0x0,0x198(%rbx)
   1be2f:	00 00 00 00 
   1be33:	c5 f8 28 44 24 60    	vmovaps 0x60(%rsp),%xmm0
   1be39:	c5 f8 29 83 a0 01 00 	vmovaps %xmm0,0x1a0(%rbx)
   1be40:	00 
   1be41:	c5 f8 28 84 24 d0 00 	vmovaps 0xd0(%rsp),%xmm0
   1be48:	00 00 
   1be4a:	c5 f8 29 83 b0 01 00 	vmovaps %xmm0,0x1b0(%rbx)
   1be51:	00 
   1be52:	c5 f8 28 84 24 60 01 	vmovaps 0x160(%rsp),%xmm0
   1be59:	00 00 
   1be5b:	c5 f8 29 83 c0 01 00 	vmovaps %xmm0,0x1c0(%rbx)
   1be62:	00 
   1be63:	c5 fc 28 84 24 20 03 	vmovaps 0x320(%rsp),%ymm0
   1be6a:	00 00 
   1be6c:	c5 fc 11 83 d0 01 00 	vmovups %ymm0,0x1d0(%rbx)
   1be73:	00 
   1be74:	48 c7 83 f0 01 00 00 	movq   $0x1,0x1f0(%rbx)
   1be7b:	01 00 00 00 
   1be7f:	48 89 5c 24 58       	mov    %rbx,0x58(%rsp)
   1be84:	48 8d 44 24 58       	lea    0x58(%rsp),%rax
        let t1000 = Terminator(&registry);
   1be89:	48 89 84 24 00 03 00 	mov    %rax,0x300(%rsp)
   1be90:	00 
        for (index, worker) in workers.into_iter().enumerate() {
   1be91:	4c 8b ac 24 60 05 00 	mov    0x560(%rsp),%r13
   1be98:	00 
   1be99:	48 8b 84 24 68 05 00 	mov    0x568(%rsp),%rax
   1bea0:	00 
   1bea1:	4c 8b a4 24 70 05 00 	mov    0x570(%rsp),%r12
   1bea8:	00 
   1bea9:	49 c1 e4 05          	shl    $0x5,%r12
   1bead:	4d 01 ec             	add    %r13,%r12
   1beb0:	4c 89 ac 24 a8 00 00 	mov    %r13,0xa8(%rsp)
   1beb7:	00 
   1beb8:	48 89 84 24 50 01 00 	mov    %rax,0x150(%rsp)
   1bebf:	00 
   1bec0:	48 89 84 24 b0 00 00 	mov    %rax,0xb0(%rsp)
   1bec7:	00 
   1bec8:	4c 89 ac 24 b8 00 00 	mov    %r13,0xb8(%rsp)
   1becf:	00 
   1bed0:	4c 89 a4 24 c0 00 00 	mov    %r12,0xc0(%rsp)
   1bed7:	00 
   1bed8:	48 c7 84 24 c8 00 00 	movq   $0x0,0xc8(%rsp)
   1bedf:	00 00 00 00 00 
   1bee4:	48 8b 84 24 c8 05 00 	mov    0x5c8(%rsp),%rax
   1beeb:	00 
   1beec:	48 89 84 24 88 05 00 	mov    %rax,0x588(%rsp)
   1bef3:	00 
   1bef4:	48 8b 84 24 d0 05 00 	mov    0x5d0(%rsp),%rax
   1befb:	00 
   1befc:	48 89 84 24 80 05 00 	mov    %rax,0x580(%rsp)
   1bf03:	00 
   1bf04:	c5 fa 6f 84 24 d8 05 	vmovdqu 0x5d8(%rsp),%xmm0
   1bf0b:	00 00 
   1bf0d:	c5 f9 7f 84 24 60 01 	vmovdqa %xmm0,0x160(%rsp)
   1bf14:	00 00 
   1bf16:	31 db                	xor    %ebx,%ebx
   1bf18:	48 89 84 24 f8 02 00 	mov    %rax,0x2f8(%rsp)
   1bf1f:	00 
   1bf20:	4c 89 a4 24 f0 02 00 	mov    %r12,0x2f0(%rsp)
   1bf27:	00 
   1bf28:	4d 39 e5             	cmp    %r12,%r13
   1bf2b:	74 43                	je     1bf70 <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x1310>
   1bf2d:	0f 1f 00             	nopl   (%rax)
   1bf30:	49 8b 45 10          	mov    0x10(%r13),%rax
   1bf34:	48 89 84 24 10 04 00 	mov    %rax,0x410(%rsp)
   1bf3b:	00 
   1bf3c:	c4 c1 7a 6f 45 00    	vmovdqu 0x0(%r13),%xmm0
   1bf42:	c5 f9 7f 84 24 00 04 	vmovdqa %xmm0,0x400(%rsp)
   1bf49:	00 00 
   1bf4b:	41 8a 45 18          	mov    0x18(%r13),%al
   1bf4f:	41 8b 4d 1c          	mov    0x1c(%r13),%ecx
   1bf53:	89 4c 24 3b          	mov    %ecx,0x3b(%rsp)
   1bf57:	41 8b 4d 19          	mov    0x19(%r13),%ecx
   1bf5b:	49 83 c5 20          	add    $0x20,%r13
   1bf5f:	89 4c 24 38          	mov    %ecx,0x38(%rsp)
   1bf63:	eb 10                	jmp    1bf75 <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x1315>
   1bf65:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1bf6c:	00 00 00 
   1bf6f:	90                   	nop
   1bf70:	b0 02                	mov    $0x2,%al
   1bf72:	4d 89 e5             	mov    %r12,%r13
   1bf75:	c5 f8 28 84 24 00 04 	vmovaps 0x400(%rsp),%xmm0
   1bf7c:	00 00 
   1bf7e:	c5 f8 29 84 24 80 01 	vmovaps %xmm0,0x180(%rsp)
   1bf85:	00 00 
   1bf87:	48 8b 8c 24 10 04 00 	mov    0x410(%rsp),%rcx
   1bf8e:	00 
   1bf8f:	48 89 8c 24 90 01 00 	mov    %rcx,0x190(%rsp)
   1bf96:	00 
   1bf97:	8b 4c 24 38          	mov    0x38(%rsp),%ecx
   1bf9b:	8b 54 24 3b          	mov    0x3b(%rsp),%edx
   1bf9f:	89 8c 24 00 01 00 00 	mov    %ecx,0x100(%rsp)
   1bfa6:	89 94 24 03 01 00 00 	mov    %edx,0x103(%rsp)
   1bfad:	3c 02                	cmp    $0x2,%al
   1bfaf:	0f 84 31 08 00 00    	je     1c7e6 <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x1b86>
   1bfb5:	4c 8d 73 01          	lea    0x1(%rbx),%r14
   1bfb9:	48 8b 8c 24 90 01 00 	mov    0x190(%rsp),%rcx
   1bfc0:	00 
   1bfc1:	48 89 8c 24 20 06 00 	mov    %rcx,0x620(%rsp)
   1bfc8:	00 
   1bfc9:	c5 f9 6f 84 24 80 01 	vmovdqa 0x180(%rsp),%xmm0
   1bfd0:	00 00 
   1bfd2:	c5 f9 7f 84 24 10 06 	vmovdqa %xmm0,0x610(%rsp)
   1bfd9:	00 00 
   1bfdb:	8b 94 24 00 01 00 00 	mov    0x100(%rsp),%edx
   1bfe2:	8b b4 24 03 01 00 00 	mov    0x103(%rsp),%esi
   1bfe9:	89 94 24 40 01 00 00 	mov    %edx,0x140(%rsp)
   1bff0:	89 b4 24 43 01 00 00 	mov    %esi,0x143(%rsp)
   1bff7:	48 89 8c 24 a0 05 00 	mov    %rcx,0x5a0(%rsp)
   1bffe:	00 
   1bfff:	c5 f9 7f 84 24 90 05 	vmovdqa %xmm0,0x590(%rsp)
   1c006:	00 00 
   1c008:	88 84 24 a8 05 00 00 	mov    %al,0x5a8(%rsp)
   1c00f:	8b 84 24 40 01 00 00 	mov    0x140(%rsp),%eax
   1c016:	8b 8c 24 43 01 00 00 	mov    0x143(%rsp),%ecx
   1c01d:	48 8d 94 24 a9 05 00 	lea    0x5a9(%rsp),%rdx
   1c024:	00 
   1c025:	89 4a 03             	mov    %ecx,0x3(%rdx)
   1c028:	89 02                	mov    %eax,(%rdx)
   1c02a:	48 8b b4 24 88 05 00 	mov    0x588(%rsp),%rsi
   1c031:	00 
   1c032:	48 85 f6             	test   %rsi,%rsi
        }
    }

    /// Get the thread name for the thread with the given index.
    fn get_thread_name(&mut self, index: usize) -> Option<String> {
        let f = self.get_thread_name.as_mut()?;
   1c035:	74 49                	je     1c080 <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x1420>
   1c037:	4c 89 ff             	mov    %r15,%rdi
   1c03a:	48 89 da             	mov    %rbx,%rdx
   1c03d:	48 8b 84 24 80 05 00 	mov    0x580(%rsp),%rax
   1c044:	00 
   1c045:	c5 f8 77             	vzeroupper 
   1c048:	ff 50 18             	callq  *0x18(%rax)
   1c04b:	4c 8b a4 24 20 03 00 	mov    0x320(%rsp),%r12
   1c052:	00 
        Some(f(index))
   1c053:	48 8b 8c 24 80 01 00 	mov    0x180(%rsp),%rcx
   1c05a:	00 
   1c05b:	c4 c1 7a 6f 47 08    	vmovdqu 0x8(%r15),%xmm0
   1c061:	c5 f9 7f 84 24 00 04 	vmovdqa %xmm0,0x400(%rsp)
   1c068:	00 00 
                registry: registry.clone(),
   1c06a:	48 8b 44 24 58       	mov    0x58(%rsp),%rax
   1c06f:	f0 48 ff 00          	lock incq (%rax)
   1c073:	7f 24                	jg     1c099 <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x1439>
   1c075:	e9 4d 0b 00 00       	jmpq   1cbc7 <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x1f67>
   1c07a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1c080:	31 c9                	xor    %ecx,%ecx
   1c082:	4c 8b a4 24 20 03 00 	mov    0x320(%rsp),%r12
   1c089:	00 
   1c08a:	48 8b 44 24 58       	mov    0x58(%rsp),%rax
   1c08f:	f0 48 ff 00          	lock incq (%rax)
   1c093:	0f 8e 2e 0b 00 00    	jle    1cbc7 <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x1f67>
            let thread = ThreadBuilder {
   1c099:	c5 f8 28 84 24 00 04 	vmovaps 0x400(%rsp),%xmm0
   1c0a0:	00 00 
   1c0a2:	c5 f8 29 84 24 30 06 	vmovaps %xmm0,0x630(%rsp)
   1c0a9:	00 00 
            if let Err(e) = builder.get_spawn_handler().spawn(thread) {
   1c0ab:	48 89 8c 24 80 03 00 	mov    %rcx,0x380(%rsp)
   1c0b2:	00 
   1c0b3:	48 8d 94 24 88 03 00 	lea    0x388(%rsp),%rdx
   1c0ba:	00 
   1c0bb:	c5 f8 11 02          	vmovups %xmm0,(%rdx)
   1c0bf:	c5 f8 28 84 24 60 01 	vmovaps 0x160(%rsp),%xmm0
   1c0c6:	00 00 
   1c0c8:	c5 f8 11 84 24 98 03 	vmovups %xmm0,0x398(%rsp)
   1c0cf:	00 00 
   1c0d1:	c5 fc 10 84 24 90 05 	vmovups 0x590(%rsp),%ymm0
   1c0d8:	00 00 
   1c0da:	c5 fc 11 42 20       	vmovups %ymm0,0x20(%rdx)
   1c0df:	48 89 84 24 c8 03 00 	mov    %rax,0x3c8(%rsp)
   1c0e6:	00 
   1c0e7:	48 89 9c 24 d0 03 00 	mov    %rbx,0x3d0(%rsp)
   1c0ee:	00 
   1c0ef:	48 85 c9             	test   %rcx,%rcx
   1c0f2:	48 8d 84 24 80 03 00 	lea    0x380(%rsp),%rax
   1c0f9:	00 
   1c0fa:	48 0f 45 c8          	cmovne %rax,%rcx
   1c0fe:	74 30                	je     1c130 <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x14d0>
   1c100:	4c 8b 39             	mov    (%rcx),%r15
   1c103:	4c 8b 61 10          	mov    0x10(%rcx),%r12
   1c107:	4d 85 e4             	test   %r12,%r12
   1c10a:	74 34                	je     1c140 <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x14e0>
   1c10c:	4c 89 e7             	mov    %r12,%rdi
   1c10f:	c5 f8 77             	vzeroupper 
   1c112:	ff 15 f0 bd 22 00    	callq  *0x22bdf0(%rip)        # 247f08 <malloc@GLIBC_2.2.5>
   1c118:	48 89 c3             	mov    %rax,%rbx
   1c11b:	48 85 c0             	test   %rax,%rax
   1c11e:	75 25                	jne    1c145 <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x14e5>
   1c120:	e9 65 0d 00 00       	jmpq   1ce8a <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x222a>
   1c125:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1c12c:	00 00 00 
   1c12f:	90                   	nop
   1c130:	31 db                	xor    %ebx,%ebx
   1c132:	eb 2b                	jmp    1c15f <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x14ff>
   1c134:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1c13b:	00 00 00 
   1c13e:	66 90                	xchg   %ax,%ax
   1c140:	bb 01 00 00 00       	mov    $0x1,%ebx
   1c145:	48 89 df             	mov    %rbx,%rdi
   1c148:	4c 89 fe             	mov    %r15,%rsi
   1c14b:	4c 89 e2             	mov    %r12,%rdx
   1c14e:	c5 f8 77             	vzeroupper 
   1c151:	ff 15 79 bd 22 00    	callq  *0x22bd79(%rip)        # 247ed0 <memcpy@GLIBC_2.14>
   1c157:	4c 8d bc 24 80 01 00 	lea    0x180(%rsp),%r15
   1c15e:	00 
   1c15f:	4c 89 b4 24 40 03 00 	mov    %r14,0x340(%rsp)
   1c166:	00 
   1c167:	c5 f9 6f 9c 24 60 01 	vmovdqa 0x160(%rsp),%xmm3
   1c16e:	00 00 
   1c170:	c4 e3 f9 16 d8 01    	vpextrq $0x1,%xmm3,%rax
   1c176:	c5 fe 6f 84 24 80 03 	vmovdqu 0x380(%rsp),%ymm0
   1c17d:	00 00 
   1c17f:	c5 fe 6f 8c 24 a0 03 	vmovdqu 0x3a0(%rsp),%ymm1
   1c186:	00 00 
   1c188:	c5 fe 6f 94 24 b8 03 	vmovdqu 0x3b8(%rsp),%ymm2
   1c18f:	00 00 
   1c191:	c5 fe 7f 94 24 38 04 	vmovdqu %ymm2,0x438(%rsp)
   1c198:	00 00 
   1c19a:	c5 fd 7f 8c 24 20 04 	vmovdqa %ymm1,0x420(%rsp)
   1c1a1:	00 00 
   1c1a3:	c5 fd 7f 84 24 00 04 	vmovdqa %ymm0,0x400(%rsp)
   1c1aa:	00 00 
   1c1ac:	c4 e1 f9 7e d9       	vmovq  %xmm3,%rcx
   1c1b1:	48 89 9c 24 68 03 00 	mov    %rbx,0x368(%rsp)
   1c1b8:	00 
   1c1b9:	4c 89 a4 24 70 03 00 	mov    %r12,0x370(%rsp)
   1c1c0:	00 
   1c1c1:	4c 89 a4 24 78 03 00 	mov    %r12,0x378(%rsp)
   1c1c8:	00 
        if let Some(stack_size) = thread.stack_size() {
   1c1c9:	48 83 f9 01          	cmp    $0x1,%rcx
   1c1cd:	4c 8b b4 24 40 05 00 	mov    0x540(%rsp),%r14
   1c1d4:	00 
   1c1d5:	4c 0f 44 f0          	cmove  %rax,%r14
   1c1d9:	4c 89 ac 24 c0 02 00 	mov    %r13,0x2c0(%rsp)
   1c1e0:	00 
   1c1e1:	4c 89 a4 24 20 03 00 	mov    %r12,0x320(%rsp)
   1c1e8:	00 
   1c1e9:	4c 89 b4 24 40 05 00 	mov    %r14,0x540(%rsp)
   1c1f0:	00 
   1c1f1:	75 0d                	jne    1c200 <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x15a0>
   1c1f3:	48 8b 1d 0e bd 22 00 	mov    0x22bd0e(%rip),%rbx        # 247f08 <malloc@GLIBC_2.2.5>
   1c1fa:	e9 31 01 00 00       	jmpq   1c330 <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x16d0>
   1c1ff:	90                   	nop
   1c200:	4c 8b 35 f1 bf 22 00 	mov    0x22bff1(%rip),%r14        # 2481f8 <_ZN3std10sys_common6thread9min_stack3MIN17hfc81269df97675d7E>
   1c207:	4d 85 f6             	test   %r14,%r14
   1c20a:	48 8b 1d f7 bc 22 00 	mov    0x22bcf7(%rip),%rbx        # 247f08 <malloc@GLIBC_2.2.5>
   1c211:	74 0d                	je     1c220 <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x15c0>
   1c213:	49 ff ce             	dec    %r14
   1c216:	e9 15 01 00 00       	jmpq   1c330 <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x16d0>
   1c21b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1c220:	ba 0e 00 00 00       	mov    $0xe,%edx
   1c225:	48 8d 7c 24 60       	lea    0x60(%rsp),%rdi
   1c22a:	48 8d 35 31 1b 02 00 	lea    0x21b31(%rip),%rsi        # 3dd62 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x1402>
   1c231:	c5 f8 77             	vzeroupper 
   1c234:	e8 77 7f 00 00       	callq  241b0 <_ZN3std3env7_var_os17ha8d89ced89fe941fE>
   1c239:	4c 8b 64 24 60       	mov    0x60(%rsp),%r12
   1c23e:	4d 85 e4             	test   %r12,%r12
   1c241:	0f 84 c9 00 00 00    	je     1c310 <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x16b0>
   1c247:	4c 8b 74 24 68       	mov    0x68(%rsp),%r14
   1c24c:	48 8b 5c 24 70       	mov    0x70(%rsp),%rbx
   1c251:	4c 89 ff             	mov    %r15,%rdi
   1c254:	4c 89 e6             	mov    %r12,%rsi
   1c257:	48 89 da             	mov    %rbx,%rdx
   1c25a:	e8 01 f5 fe ff       	callq  b760 <_ZN4core3str9from_utf817ha5f1d279f7594d61E>
   1c25f:	48 83 bc 24 80 01 00 	cmpq   $0x1,0x180(%rsp)
   1c266:	00 01 
   1c268:	75 21                	jne    1c28b <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x162b>
   1c26a:	4d 85 f6             	test   %r14,%r14
   1c26d:	48 8b 1d 94 bc 22 00 	mov    0x22bc94(%rip),%rbx        # 247f08 <malloc@GLIBC_2.2.5>
   1c274:	48 8b 05 fd ba 22 00 	mov    0x22bafd(%rip),%rax        # 247d78 <free@GLIBC_2.2.5>
   1c27b:	0f 84 8f 00 00 00    	je     1c310 <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x16b0>
   1c281:	4c 89 e7             	mov    %r12,%rdi
   1c284:	ff d0                	callq  *%rax
   1c286:	e9 85 00 00 00       	jmpq   1c310 <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x16b0>
   1c28b:	41 b7 01             	mov    $0x1,%r15b
   1c28e:	48 85 db             	test   %rbx,%rbx
   1c291:	74 49                	je     1c2dc <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x167c>
   1c293:	41 80 3c 24 2b       	cmpb   $0x2b,(%r12)
   1c298:	75 0c                	jne    1c2a6 <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x1646>
   1c29a:	48 ff cb             	dec    %rbx
   1c29d:	74 3d                	je     1c2dc <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x167c>
   1c29f:	49 8d 4c 24 01       	lea    0x1(%r12),%rcx
   1c2a4:	eb 03                	jmp    1c2a9 <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x1649>
   1c2a6:	4c 89 e1             	mov    %r12,%rcx
   1c2a9:	31 f6                	xor    %esi,%esi
   1c2ab:	31 c0                	xor    %eax,%eax
   1c2ad:	0f 1f 00             	nopl   (%rax)
   1c2b0:	48 39 f3             	cmp    %rsi,%rbx
   1c2b3:	0f 84 0d 05 00 00    	je     1c7c6 <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x1b66>
   1c2b9:	48 8d 14 31          	lea    (%rcx,%rsi,1),%rdx
   1c2bd:	0f b6 3a             	movzbl (%rdx),%edi
   1c2c0:	83 c7 d0             	add    $0xffffffd0,%edi
   1c2c3:	83 ff 09             	cmp    $0x9,%edi
   1c2c6:	77 14                	ja     1c2dc <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x167c>
   1c2c8:	ba 0a 00 00 00       	mov    $0xa,%edx
   1c2cd:	48 f7 e2             	mul    %rdx
   1c2d0:	70 0a                	jo     1c2dc <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x167c>
   1c2d2:	89 fa                	mov    %edi,%edx
   1c2d4:	48 ff c6             	inc    %rsi
   1c2d7:	48 01 d0             	add    %rdx,%rax
   1c2da:	73 d4                	jae    1c2b0 <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x1650>
   1c2dc:	4d 85 f6             	test   %r14,%r14
   1c2df:	48 8b 1d 22 bc 22 00 	mov    0x22bc22(%rip),%rbx        # 247f08 <malloc@GLIBC_2.2.5>
   1c2e6:	74 09                	je     1c2f1 <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x1691>
   1c2e8:	4c 89 e7             	mov    %r12,%rdi
   1c2eb:	ff 15 87 ba 22 00    	callq  *0x22ba87(%rip)        # 247d78 <free@GLIBC_2.2.5>
   1c2f1:	4c 8b b4 24 78 05 00 	mov    0x578(%rsp),%r14
   1c2f8:	00 
   1c2f9:	45 84 ff             	test   %r15b,%r15b
   1c2fc:	4c 8d bc 24 80 01 00 	lea    0x180(%rsp),%r15
   1c303:	00 
   1c304:	74 10                	je     1c316 <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x16b6>
   1c306:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1c30d:	00 00 00 
   1c310:	41 be 00 00 20 00    	mov    $0x200000,%r14d
   1c316:	49 8d 46 01          	lea    0x1(%r14),%rax
   1c31a:	48 87 05 d7 be 22 00 	xchg   %rax,0x22bed7(%rip)        # 2481f8 <_ZN3std10sys_common6thread9min_stack3MIN17hfc81269df97675d7E>
   1c321:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1c328:	00 00 00 
   1c32b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1c330:	48 8b 84 24 78 03 00 	mov    0x378(%rsp),%rax
   1c337:	00 
   1c338:	48 89 84 24 90 01 00 	mov    %rax,0x190(%rsp)
   1c33f:	00 
   1c340:	48 8b 84 24 68 03 00 	mov    0x368(%rsp),%rax
   1c347:	00 
   1c348:	48 89 84 24 80 01 00 	mov    %rax,0x180(%rsp)
   1c34f:	00 
   1c350:	48 8b 84 24 70 03 00 	mov    0x370(%rsp),%rax
   1c357:	00 
   1c358:	48 89 84 24 88 01 00 	mov    %rax,0x188(%rsp)
   1c35f:	00 
   1c360:	4c 89 ff             	mov    %r15,%rdi
   1c363:	c5 f8 77             	vzeroupper 
   1c366:	e8 f5 6b 00 00       	callq  22f60 <_ZN3std6thread6Thread3new17h4aa6d776ccf79e9dE>
   1c36b:	49 89 c4             	mov    %rax,%r12
   1c36e:	48 89 84 24 38 01 00 	mov    %rax,0x138(%rsp)
   1c375:	00 
   1c376:	f0 48 ff 00          	lock incq (%rax)
   1c37a:	0f 8e 47 08 00 00    	jle    1cbc7 <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x1f67>
   1c380:	bf 28 00 00 00       	mov    $0x28,%edi
   1c385:	ff d3                	callq  *%rbx
   1c387:	48 85 c0             	test   %rax,%rax
   1c38a:	0f 84 5d 08 00 00    	je     1cbed <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x1f8d>
   1c390:	49 89 c5             	mov    %rax,%r13
   1c393:	c5 f8 28 05 35 e0 01 	vmovaps 0x1e035(%rip),%xmm0        # 3a3d0 <_fini+0x8c>
   1c39a:	00 
   1c39b:	c5 f8 11 00          	vmovups %xmm0,(%rax)
   1c39f:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
   1c3a6:	00 
   1c3a7:	c5 f8 10 84 24 80 01 	vmovups 0x180(%rsp),%xmm0
   1c3ae:	00 00 
   1c3b0:	c5 f8 11 40 18       	vmovups %xmm0,0x18(%rax)
   1c3b5:	48 89 84 24 08 03 00 	mov    %rax,0x308(%rsp)
   1c3bc:	00 
   1c3bd:	f0 48 ff 00          	lock incq (%rax)
   1c3c1:	0f 8e 00 08 00 00    	jle    1cbc7 <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x1f67>
   1c3c7:	c5 fc 10 84 24 38 04 	vmovups 0x438(%rsp),%ymm0
   1c3ce:	00 00 
   1c3d0:	c5 fc 11 84 24 b8 01 	vmovups %ymm0,0x1b8(%rsp)
   1c3d7:	00 00 
   1c3d9:	c5 fc 28 84 24 00 04 	vmovaps 0x400(%rsp),%ymm0
   1c3e0:	00 00 
   1c3e2:	c5 fc 28 8c 24 20 04 	vmovaps 0x420(%rsp),%ymm1
   1c3e9:	00 00 
   1c3eb:	c5 fc 29 8c 24 a0 01 	vmovaps %ymm1,0x1a0(%rsp)
   1c3f2:	00 00 
   1c3f4:	c5 fc 29 84 24 80 01 	vmovaps %ymm0,0x180(%rsp)
   1c3fb:	00 00 
   1c3fd:	bf 68 00 00 00       	mov    $0x68,%edi
   1c402:	c5 f8 77             	vzeroupper 
   1c405:	ff d3                	callq  *%rbx
   1c407:	48 85 c0             	test   %rax,%rax
   1c40a:	0f 84 ee 07 00 00    	je     1cbfe <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x1f9e>
   1c410:	48 89 d9             	mov    %rbx,%rcx
   1c413:	48 89 c3             	mov    %rax,%rbx
   1c416:	4c 89 20             	mov    %r12,(%rax)
   1c419:	c5 fc 28 84 24 80 01 	vmovaps 0x180(%rsp),%ymm0
   1c420:	00 00 
   1c422:	c5 fd 6f 8c 24 a0 01 	vmovdqa 0x1a0(%rsp),%ymm1
   1c429:	00 00 
   1c42b:	c5 fc 11 40 08       	vmovups %ymm0,0x8(%rax)
   1c430:	c5 fe 7f 48 28       	vmovdqu %ymm1,0x28(%rax)
   1c435:	c5 fe 6f 84 24 b8 01 	vmovdqu 0x1b8(%rsp),%ymm0
   1c43c:	00 00 
   1c43e:	c5 fe 7f 40 40       	vmovdqu %ymm0,0x40(%rax)
   1c443:	4c 89 68 60          	mov    %r13,0x60(%rax)
   1c447:	bf 10 00 00 00       	mov    $0x10,%edi
   1c44c:	c5 f8 77             	vzeroupper 
   1c44f:	ff d1                	callq  *%rcx
   1c451:	48 85 c0             	test   %rax,%rax
   1c454:	0f 84 71 07 00 00    	je     1cbcb <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x1f6b>
   1c45a:	48 89 18             	mov    %rbx,(%rax)
   1c45d:	48 8d 0d ac a7 22 00 	lea    0x22a7ac(%rip),%rcx        # 246c10 <__init_array_end+0xc00>
   1c464:	48 89 48 08          	mov    %rcx,0x8(%rax)
   1c468:	48 89 84 24 10 03 00 	mov    %rax,0x310(%rsp)
   1c46f:	00 
   1c470:	48 c7 84 24 18 03 00 	movq   $0x0,0x318(%rsp)
   1c477:	00 00 00 00 00 
   1c47c:	c5 f9 ef c0          	vpxor  %xmm0,%xmm0,%xmm0
   1c480:	c5 fe 7f 84 24 98 01 	vmovdqu %ymm0,0x198(%rsp)
   1c487:	00 00 
   1c489:	c5 fd 7f 84 24 80 01 	vmovdqa %ymm0,0x180(%rsp)
   1c490:	00 00 
   1c492:	4c 89 ff             	mov    %r15,%rdi
   1c495:	c5 f8 77             	vzeroupper 
   1c498:	ff 15 02 ba 22 00    	callq  *0x22ba02(%rip)        # 247ea0 <pthread_attr_init@GLIBC_2.2.5>
   1c49e:	89 44 24 34          	mov    %eax,0x34(%rsp)
   1c4a2:	85 c0                	test   %eax,%eax
   1c4a4:	0f 85 90 07 00 00    	jne    1cc3a <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x1fda>
   1c4aa:	48 8b 05 8f bb 22 00 	mov    0x22bb8f(%rip),%rax        # 248040 <_ZN3std3sys4unix6thread14min_stack_size22__pthread_get_minstack17h63a45773eee259eeE+0x10>
   1c4b1:	48 83 f8 01          	cmp    $0x1,%rax
   1c4b5:	75 52                	jne    1c509 <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x18a9>
   1c4b7:	48 8b 1d 72 bb 22 00 	mov    0x22bb72(%rip),%rbx        # 248030 <_ZN3std3sys4unix6thread14min_stack_size22__pthread_get_minstack17h63a45773eee259eeE>
   1c4be:	4c 8b 3d 73 bb 22 00 	mov    0x22bb73(%rip),%r15        # 248038 <_ZN3std3sys4unix6thread14min_stack_size22__pthread_get_minstack17h63a45773eee259eeE+0x8>
   1c4c5:	48 89 df             	mov    %rbx,%rdi
   1c4c8:	31 f6                	xor    %esi,%esi
   1c4ca:	4c 89 fa             	mov    %r15,%rdx
   1c4cd:	ff 15 bd b9 22 00    	callq  *0x22b9bd(%rip)        # 247e90 <memchr@GLIBC_2.2.5>
   1c4d3:	48 85 c0             	test   %rax,%rax
   1c4d6:	74 20                	je     1c4f8 <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x1898>
   1c4d8:	48 89 c1             	mov    %rax,%rcx
   1c4db:	48 29 d9             	sub    %rbx,%rcx
   1c4de:	48 ff c1             	inc    %rcx
   1c4e1:	b8 00 00 00 00       	mov    $0x0,%eax
   1c4e6:	4c 39 f9             	cmp    %r15,%rcx
   1c4e9:	75 0f                	jne    1c4fa <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x189a>
   1c4eb:	31 ff                	xor    %edi,%edi
   1c4ed:	48 89 de             	mov    %rbx,%rsi
   1c4f0:	ff 15 ca ba 22 00    	callq  *0x22baca(%rip)        # 247fc0 <dlsym@GLIBC_2.2.5>
   1c4f6:	eb 02                	jmp    1c4fa <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x189a>
   1c4f8:	31 c0                	xor    %eax,%eax
   1c4fa:	48 87 05 3f bb 22 00 	xchg   %rax,0x22bb3f(%rip)        # 248040 <_ZN3std3sys4unix6thread14min_stack_size22__pthread_get_minstack17h63a45773eee259eeE+0x10>
   1c501:	4c 8d bc 24 80 01 00 	lea    0x180(%rsp),%r15
   1c508:	00 
   1c509:	48 8b 0d 30 bb 22 00 	mov    0x22bb30(%rip),%rcx        # 248040 <_ZN3std3sys4unix6thread14min_stack_size22__pthread_get_minstack17h63a45773eee259eeE+0x10>
   1c510:	48 85 c9             	test   %rcx,%rcx
   1c513:	74 0b                	je     1c520 <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x18c0>
   1c515:	4c 89 ff             	mov    %r15,%rdi
   1c518:	ff d1                	callq  *%rcx
   1c51a:	48 89 c3             	mov    %rax,%rbx
   1c51d:	eb 06                	jmp    1c525 <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x18c5>
   1c51f:	90                   	nop
   1c520:	bb 00 40 00 00       	mov    $0x4000,%ebx
   1c525:	4c 39 f3             	cmp    %r14,%rbx
   1c528:	49 0f 42 de          	cmovb  %r14,%rbx
   1c52c:	4c 89 ff             	mov    %r15,%rdi
   1c52f:	48 89 de             	mov    %rbx,%rsi
   1c532:	ff 15 f8 b9 22 00    	callq  *0x22b9f8(%rip)        # 247f30 <pthread_attr_setstacksize@GLIBC_2.2.5>
   1c538:	85 c0                	test   %eax,%eax
   1c53a:	74 3e                	je     1c57a <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x191a>
   1c53c:	89 84 24 5c 01 00 00 	mov    %eax,0x15c(%rsp)
   1c543:	83 f8 16             	cmp    $0x16,%eax
   1c546:	0f 85 16 08 00 00    	jne    1cd62 <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x2102>
   1c54c:	bf 1e 00 00 00       	mov    $0x1e,%edi
   1c551:	ff 15 29 ba 22 00    	callq  *0x22ba29(%rip)        # 247f80 <sysconf@GLIBC_2.2.5>
   1c557:	48 8d 34 03          	lea    (%rbx,%rax,1),%rsi
   1c55b:	48 83 c6 ff          	add    $0xffffffffffffffff,%rsi
   1c55f:	48 f7 d8             	neg    %rax
   1c562:	48 21 c6             	and    %rax,%rsi
   1c565:	4c 89 ff             	mov    %r15,%rdi
   1c568:	ff 15 c2 b9 22 00    	callq  *0x22b9c2(%rip)        # 247f30 <pthread_attr_setstacksize@GLIBC_2.2.5>
   1c56e:	89 44 24 34          	mov    %eax,0x34(%rsp)
   1c572:	85 c0                	test   %eax,%eax
   1c574:	0f 85 7f 08 00 00    	jne    1cdf9 <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x2199>
   1c57a:	4c 89 fb             	mov    %r15,%rbx
   1c57d:	4c 8b bc 24 10 03 00 	mov    0x310(%rsp),%r15
   1c584:	00 
   1c585:	48 8d bc 24 18 03 00 	lea    0x318(%rsp),%rdi
   1c58c:	00 
   1c58d:	48 89 de             	mov    %rbx,%rsi
   1c590:	48 8d 15 c9 02 01 00 	lea    0x102c9(%rip),%rdx        # 2c860 <_ZN3std3sys4unix6thread6Thread3new12thread_start17h9e7d4a1eb425595fE>
   1c597:	4c 89 f9             	mov    %r15,%rcx
   1c59a:	ff 15 e0 b7 22 00    	callq  *0x22b7e0(%rip)        # 247d80 <pthread_create@GLIBC_2.2.5>
   1c5a0:	41 89 c6             	mov    %eax,%r14d
   1c5a3:	48 89 df             	mov    %rbx,%rdi
   1c5a6:	ff 15 dc b9 22 00    	callq  *0x22b9dc(%rip)        # 247f88 <pthread_attr_destroy@GLIBC_2.2.5>
   1c5ac:	89 44 24 34          	mov    %eax,0x34(%rsp)
   1c5b0:	85 c0                	test   %eax,%eax
   1c5b2:	0f 85 16 07 00 00    	jne    1ccce <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x206e>
   1c5b8:	45 85 f6             	test   %r14d,%r14d
   1c5bb:	74 33                	je     1c5f0 <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x1990>
   1c5bd:	49 8b 3f             	mov    (%r15),%rdi
   1c5c0:	49 8b 47 08          	mov    0x8(%r15),%rax
   1c5c4:	ff 10                	callq  *(%rax)
   1c5c6:	49 8b 47 08          	mov    0x8(%r15),%rax
   1c5ca:	48 83 78 08 00       	cmpq   $0x0,0x8(%rax)
   1c5cf:	48 8b 1d a2 b7 22 00 	mov    0x22b7a2(%rip),%rbx        # 247d78 <free@GLIBC_2.2.5>
   1c5d6:	74 05                	je     1c5dd <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x197d>
   1c5d8:	49 8b 3f             	mov    (%r15),%rdi
   1c5db:	ff d3                	callq  *%rbx
   1c5dd:	4c 89 ff             	mov    %r15,%rdi
   1c5e0:	ff d3                	callq  *%rbx
   1c5e2:	b0 01                	mov    $0x1,%al
   1c5e4:	31 c9                	xor    %ecx,%ecx
   1c5e6:	48 8b 94 24 f8 02 00 	mov    0x2f8(%rsp),%rdx
   1c5ed:	00 
   1c5ee:	eb 18                	jmp    1c608 <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x19a8>
   1c5f0:	48 8b 8c 24 18 03 00 	mov    0x318(%rsp),%rcx
   1c5f7:	00 
   1c5f8:	48 89 ca             	mov    %rcx,%rdx
   1c5fb:	48 c1 ea 08          	shr    $0x8,%rdx
   1c5ff:	49 89 ce             	mov    %rcx,%r14
   1c602:	49 c1 ee 20          	shr    $0x20,%r14
   1c606:	31 c0                	xor    %eax,%eax
   1c608:	49 c1 e6 20          	shl    $0x20,%r14
   1c60c:	48 89 94 24 f8 02 00 	mov    %rdx,0x2f8(%rsp)
   1c613:	00 
   1c614:	81 e2 ff ff ff 00    	and    $0xffffff,%edx
   1c61a:	48 c1 e2 08          	shl    $0x8,%rdx
   1c61e:	4c 09 f2             	or     %r14,%rdx
   1c621:	0f b6 d9             	movzbl %cl,%ebx
   1c624:	48 09 d3             	or     %rdx,%rbx
   1c627:	84 c0                	test   %al,%al
   1c629:	4c 8d bc 24 80 01 00 	lea    0x180(%rsp),%r15
   1c630:	00 
   1c631:	74 3d                	je     1c670 <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x1a10>
   1c633:	f0 49 ff 4d 00       	lock decq 0x0(%r13)
   1c638:	75 0d                	jne    1c647 <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x19e7>
   1c63a:	48 8d bc 24 08 03 00 	lea    0x308(%rsp),%rdi
   1c641:	00 
   1c642:	e8 f9 cf ff ff       	callq  19640 <_ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17hc7922ab78436749cE>
   1c647:	48 8b 84 24 38 01 00 	mov    0x138(%rsp),%rax
   1c64e:	00 
   1c64f:	f0 48 ff 08          	lock decq (%rax)
   1c653:	75 0d                	jne    1c662 <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x1a02>
   1c655:	48 8d bc 24 38 01 00 	lea    0x138(%rsp),%rdi
   1c65c:	00 
   1c65d:	e8 5e d0 ff ff       	callq  196c0 <_ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17h9f0067671e6227f9E>
   1c662:	b8 01 00 00 00       	mov    $0x1,%eax
   1c667:	49 89 de             	mov    %rbx,%r14
   1c66a:	eb 0c                	jmp    1c678 <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x1a18>
   1c66c:	0f 1f 40 00          	nopl   0x0(%rax)
   1c670:	41 be 01 00 00 00    	mov    $0x1,%r14d
   1c676:	31 c0                	xor    %eax,%eax
   1c678:	48 89 84 24 d0 00 00 	mov    %rax,0xd0(%rsp)
   1c67f:	00 
   1c680:	4c 89 b4 24 d8 00 00 	mov    %r14,0xd8(%rsp)
   1c687:	00 
   1c688:	48 89 9c 24 e0 00 00 	mov    %rbx,0xe0(%rsp)
   1c68f:	00 
   1c690:	4c 89 a4 24 e8 00 00 	mov    %r12,0xe8(%rsp)
   1c697:	00 
   1c698:	4c 89 ac 24 f0 00 00 	mov    %r13,0xf0(%rsp)
   1c69f:	00 
        b.spawn(|| thread.run())?;
   1c6a0:	48 85 c0             	test   %rax,%rax
   1c6a3:	74 2b                	je     1c6d0 <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x1a70>
            if let Err(e) = builder.get_spawn_handler().spawn(thread) {
   1c6a5:	41 80 fe 03          	cmp    $0x3,%r14b
   1c6a9:	4c 8b ac 24 c0 02 00 	mov    0x2c0(%rsp),%r13
   1c6b0:	00 
   1c6b1:	4c 8b a4 24 f0 02 00 	mov    0x2f0(%rsp),%r12
   1c6b8:	00 
   1c6b9:	0f 84 f1 00 00 00    	je     1c7b0 <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x1b50>
   1c6bf:	e9 54 03 00 00       	jmpq   1ca18 <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x1db8>
   1c6c4:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1c6cb:	00 00 00 
   1c6ce:	66 90                	xchg   %ax,%ax
        b.spawn(|| thread.run())?;
   1c6d0:	48 8d 84 24 d8 00 00 	lea    0xd8(%rsp),%rax
   1c6d7:	00 
   1c6d8:	c5 fe 6f 00          	vmovdqu (%rax),%ymm0
   1c6dc:	c5 fd 7f 84 24 00 01 	vmovdqa %ymm0,0x100(%rsp)
   1c6e3:	00 00 
   1c6e5:	48 83 bc 24 00 01 00 	cmpq   $0x0,0x100(%rsp)
   1c6ec:	00 00 
   1c6ee:	4c 8b ac 24 c0 02 00 	mov    0x2c0(%rsp),%r13
   1c6f5:	00 
   1c6f6:	4c 8b a4 24 f0 02 00 	mov    0x2f0(%rsp),%r12
   1c6fd:	00 
   1c6fe:	74 11                	je     1c711 <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x1ab1>
   1c700:	48 8b bc 24 08 01 00 	mov    0x108(%rsp),%rdi
   1c707:	00 
   1c708:	c5 f8 77             	vzeroupper 
   1c70b:	ff 15 77 b6 22 00    	callq  *0x22b677(%rip)        # 247d88 <pthread_detach@GLIBC_2.2.5>
   1c711:	48 8b 84 24 10 01 00 	mov    0x110(%rsp),%rax
   1c718:	00 
   1c719:	f0 48 ff 08          	lock decq (%rax)
   1c71d:	75 10                	jne    1c72f <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x1acf>
   1c71f:	48 8d bc 24 10 01 00 	lea    0x110(%rsp),%rdi
   1c726:	00 
   1c727:	c5 f8 77             	vzeroupper 
   1c72a:	e8 91 cf ff ff       	callq  196c0 <_ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17h9f0067671e6227f9E>
   1c72f:	48 8b 84 24 18 01 00 	mov    0x118(%rsp),%rax
   1c736:	00 
   1c737:	f0 48 ff 08          	lock decq (%rax)
   1c73b:	75 10                	jne    1c74d <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x1aed>
   1c73d:	48 8d bc 24 18 01 00 	lea    0x118(%rsp),%rdi
   1c744:	00 
   1c745:	c5 f8 77             	vzeroupper 
   1c748:	e8 f3 ce ff ff       	callq  19640 <_ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17hc7922ab78436749cE>
   1c74d:	48 83 bc 24 d0 00 00 	cmpq   $0x0,0xd0(%rsp)
   1c754:	00 00 
   1c756:	74 58                	je     1c7b0 <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x1b50>
   1c758:	80 bc 24 d8 00 00 00 	cmpb   $0x2,0xd8(%rsp)
   1c75f:	02 
   1c760:	72 4e                	jb     1c7b0 <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x1b50>
   1c762:	48 8b 9c 24 e0 00 00 	mov    0xe0(%rsp),%rbx
   1c769:	00 
   1c76a:	48 8b 3b             	mov    (%rbx),%rdi
   1c76d:	48 8b 43 08          	mov    0x8(%rbx),%rax
   1c771:	c5 f8 77             	vzeroupper 
   1c774:	ff 10                	callq  *(%rax)
   1c776:	48 8b 43 08          	mov    0x8(%rbx),%rax
   1c77a:	48 83 78 08 00       	cmpq   $0x0,0x8(%rax)
   1c77f:	4c 8b 35 f2 b5 22 00 	mov    0x22b5f2(%rip),%r14        # 247d78 <free@GLIBC_2.2.5>
   1c786:	74 06                	je     1c78e <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x1b2e>
   1c788:	48 8b 3b             	mov    (%rbx),%rdi
   1c78b:	41 ff d6             	callq  *%r14
   1c78e:	48 89 df             	mov    %rbx,%rdi
   1c791:	41 ff d6             	callq  *%r14
   1c794:	48 8b 9c 24 40 03 00 	mov    0x340(%rsp),%rbx
   1c79b:	00 
   1c79c:	4d 39 e5             	cmp    %r12,%r13
   1c79f:	0f 85 8b f7 ff ff    	jne    1bf30 <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x12d0>
   1c7a5:	e9 c6 f7 ff ff       	jmpq   1bf70 <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x1310>
   1c7aa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1c7b0:	48 8b 9c 24 40 03 00 	mov    0x340(%rsp),%rbx
   1c7b7:	00 
   1c7b8:	4d 39 e5             	cmp    %r12,%r13
   1c7bb:	0f 85 6f f7 ff ff    	jne    1bf30 <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x12d0>
   1c7c1:	e9 aa f7 ff ff       	jmpq   1bf70 <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x1310>
   1c7c6:	45 31 ff             	xor    %r15d,%r15d
   1c7c9:	48 89 84 24 78 05 00 	mov    %rax,0x578(%rsp)
   1c7d0:	00 
   1c7d1:	4d 85 f6             	test   %r14,%r14
   1c7d4:	48 8b 1d 2d b7 22 00 	mov    0x22b72d(%rip),%rbx        # 247f08 <malloc@GLIBC_2.2.5>
   1c7db:	0f 85 07 fb ff ff    	jne    1c2e8 <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x1688>
   1c7e1:	e9 0b fb ff ff       	jmpq   1c2f1 <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x1691>
   1c7e6:	4c 89 ac 24 b8 00 00 	mov    %r13,0xb8(%rsp)
   1c7ed:	00 
   1c7ee:	48 89 9c 24 c8 00 00 	mov    %rbx,0xc8(%rsp)
   1c7f5:	00 
   1c7f6:	4d 39 e5             	cmp    %r12,%r13
   1c7f9:	48 8b 84 24 50 01 00 	mov    0x150(%rsp),%rax
   1c800:	00 
   1c801:	0f 84 fc 00 00 00    	je     1c903 <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x1ca3>
   1c807:	48 8d 9c 24 99 01 00 	lea    0x199(%rsp),%rbx
   1c80e:	00 
   1c80f:	4c 8d b4 24 80 01 00 	lea    0x180(%rsp),%r14
   1c816:	00 
   1c817:	eb 1d                	jmp    1c836 <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x1bd6>
   1c819:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1c820:	4c 8b ac 24 b8 00 00 	mov    0xb8(%rsp),%r13
   1c827:	00 
   1c828:	4c 3b ac 24 c0 00 00 	cmp    0xc0(%rsp),%r13
   1c82f:	00 
   1c830:	0f 84 c5 00 00 00    	je     1c8fb <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x1c9b>
   1c836:	49 8d 45 20          	lea    0x20(%r13),%rax
   1c83a:	48 89 84 24 b8 00 00 	mov    %rax,0xb8(%rsp)
   1c841:	00 
   1c842:	c4 c1 78 10 45 00    	vmovups 0x0(%r13),%xmm0
   1c848:	c5 f8 29 84 24 80 01 	vmovaps %xmm0,0x180(%rsp)
   1c84f:	00 00 
   1c851:	49 8b 45 10          	mov    0x10(%r13),%rax
   1c855:	48 89 84 24 90 01 00 	mov    %rax,0x190(%rsp)
   1c85c:	00 
   1c85d:	41 0f b6 45 18       	movzbl 0x18(%r13),%eax
   1c862:	41 8b 4d 1c          	mov    0x1c(%r13),%ecx
   1c866:	89 8c 24 03 01 00 00 	mov    %ecx,0x103(%rsp)
   1c86d:	41 8b 4d 19          	mov    0x19(%r13),%ecx
   1c871:	89 8c 24 00 01 00 00 	mov    %ecx,0x100(%rsp)
   1c878:	3c 02                	cmp    $0x2,%al
   1c87a:	74 7f                	je     1c8fb <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x1c9b>
   1c87c:	48 8b 8c 24 90 01 00 	mov    0x190(%rsp),%rcx
   1c883:	00 
   1c884:	48 89 8c 24 10 04 00 	mov    %rcx,0x410(%rsp)
   1c88b:	00 
   1c88c:	c5 f9 6f 84 24 80 01 	vmovdqa 0x180(%rsp),%xmm0
   1c893:	00 00 
   1c895:	c5 f9 7f 84 24 00 04 	vmovdqa %xmm0,0x400(%rsp)
   1c89c:	00 00 
   1c89e:	8b 94 24 00 01 00 00 	mov    0x100(%rsp),%edx
   1c8a5:	8b b4 24 03 01 00 00 	mov    0x103(%rsp),%esi
   1c8ac:	89 54 24 38          	mov    %edx,0x38(%rsp)
   1c8b0:	89 74 24 3b          	mov    %esi,0x3b(%rsp)
   1c8b4:	48 89 8c 24 90 01 00 	mov    %rcx,0x190(%rsp)
   1c8bb:	00 
   1c8bc:	c5 f9 7f 84 24 80 01 	vmovdqa %xmm0,0x180(%rsp)
   1c8c3:	00 00 
   1c8c5:	88 84 24 98 01 00 00 	mov    %al,0x198(%rsp)
   1c8cc:	8b 44 24 38          	mov    0x38(%rsp),%eax
   1c8d0:	8b 4c 24 3b          	mov    0x3b(%rsp),%ecx
   1c8d4:	89 4b 03             	mov    %ecx,0x3(%rbx)
   1c8d7:	89 03                	mov    %eax,(%rbx)
   1c8d9:	48 8b 84 24 80 01 00 	mov    0x180(%rsp),%rax
   1c8e0:	00 
   1c8e1:	f0 48 ff 08          	lock decq (%rax)
   1c8e5:	0f 85 35 ff ff ff    	jne    1c820 <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x1bc0>
   1c8eb:	4c 89 f7             	mov    %r14,%rdi
   1c8ee:	c5 f8 77             	vzeroupper 
   1c8f1:	e8 5a cc ff ff       	callq  19550 <_ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17hf09fbc4b768e849cE>
   1c8f6:	e9 25 ff ff ff       	jmpq   1c820 <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x1bc0>
   1c8fb:	48 8b 84 24 b0 00 00 	mov    0xb0(%rsp),%rax
   1c902:	00 
   1c903:	48 85 c0             	test   %rax,%rax
   1c906:	74 11                	je     1c919 <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x1cb9>
   1c908:	48 8b bc 24 a8 00 00 	mov    0xa8(%rsp),%rdi
   1c90f:	00 
   1c910:	c5 f8 77             	vzeroupper 
   1c913:	ff 15 5f b4 22 00    	callq  *0x22b45f(%rip)        # 247d78 <free@GLIBC_2.2.5>
        Ok(registry.clone())
   1c919:	4c 8b 74 24 58       	mov    0x58(%rsp),%r14
   1c91e:	f0 49 ff 06          	lock incq (%r14)
   1c922:	0f 8e 9f 02 00 00    	jle    1cbc7 <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x1f67>
   1c928:	48 8b 44 24 58       	mov    0x58(%rsp),%rax
   1c92d:	f0 48 ff 08          	lock decq (%rax)
   1c931:	75 0d                	jne    1c940 <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x1ce0>
   1c933:	48 8d 7c 24 58       	lea    0x58(%rsp),%rdi
   1c938:	c5 f8 77             	vzeroupper 
   1c93b:	e8 80 c5 ff ff       	callq  18ec0 <_ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17hb5cb47fe96f5803fE>
   1c940:	45 31 ff             	xor    %r15d,%r15d
   1c943:	48 8d bc 24 b0 05 00 	lea    0x5b0(%rsp),%rdi
   1c94a:	00 
    }
   1c94b:	c5 f8 77             	vzeroupper 
   1c94e:	e8 4d 08 00 00       	callq  1d1a0 <_ZN4core3ptr13drop_in_place17h51aa47e1580448f3E>
   1c953:	45 84 ff             	test   %r15b,%r15b
   1c956:	74 58                	je     1c9b0 <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x1d50>
   1c958:	41 bd 01 00 00 00    	mov    $0x1,%r13d
   1c95e:	4d 89 f7             	mov    %r14,%r15
   1c961:	4c 8b b4 24 48 01 00 	mov    0x148(%rsp),%r14
   1c968:	00 
   1c969:	49 83 3e 00          	cmpq   $0x0,(%r14)
   1c96d:	74 73                	je     1c9e2 <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x1d82>
   1c96f:	41 8a 46 08          	mov    0x8(%r14),%al
   1c973:	3c 03                	cmp    $0x3,%al
   1c975:	77 04                	ja     1c97b <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x1d1b>
   1c977:	3c 02                	cmp    $0x2,%al
   1c979:	75 67                	jne    1c9e2 <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x1d82>
   1c97b:	4d 8b 76 10          	mov    0x10(%r14),%r14
   1c97f:	49 8b 3e             	mov    (%r14),%rdi
   1c982:	49 8b 46 08          	mov    0x8(%r14),%rax
   1c986:	ff 10                	callq  *(%rax)
   1c988:	49 8b 46 08          	mov    0x8(%r14),%rax
   1c98c:	48 83 78 08 00       	cmpq   $0x0,0x8(%rax)
   1c991:	74 09                	je     1c99c <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x1d3c>
   1c993:	49 8b 3e             	mov    (%r14),%rdi
   1c996:	ff 15 dc b3 22 00    	callq  *0x22b3dc(%rip)        # 247d78 <free@GLIBC_2.2.5>
   1c99c:	4c 8b b4 24 48 01 00 	mov    0x148(%rsp),%r14
   1c9a3:	00 
   1c9a4:	49 8b 7e 10          	mov    0x10(%r14),%rdi
   1c9a8:	ff 15 ca b3 22 00    	callq  *0x22b3ca(%rip)        # 247d78 <free@GLIBC_2.2.5>
   1c9ae:	eb 32                	jmp    1c9e2 <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x1d82>
   1c9b0:	bf 08 00 00 00       	mov    $0x8,%edi
   1c9b5:	ff 15 4d b5 22 00    	callq  *0x22b54d(%rip)        # 247f08 <malloc@GLIBC_2.2.5>
   1c9bb:	48 85 c0             	test   %rax,%rax
   1c9be:	0f 84 2b 05 00 00    	je     1ceef <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x228f>
   1c9c4:	49 89 c7             	mov    %rax,%r15
   1c9c7:	4c 89 30             	mov    %r14,(%rax)
                THE_REGISTRY = Some(registry);
   1c9ca:	48 89 05 9f b6 22 00 	mov    %rax,0x22b69f(%rip)        # 248070 <_ZN10rayon_core8registry12THE_REGISTRY17h5e4c3095a70775abE>
   1c9d1:	45 31 ed             	xor    %r13d,%r13d
   1c9d4:	4c 8b b4 24 48 01 00 	mov    0x148(%rsp),%r14
   1c9db:	00 
   1c9dc:	49 83 3e 00          	cmpq   $0x0,(%r14)
   1c9e0:	75 8d                	jne    1c96f <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x1d0f>
        result = registry().map(|registry| {
   1c9e2:	4d 89 2e             	mov    %r13,(%r14)
   1c9e5:	4d 89 7e 08          	mov    %r15,0x8(%r14)
   1c9e9:	49 89 5e 10          	mov    %rbx,0x10(%r14)
   1c9ed:	48 8d 65 d8          	lea    -0x28(%rbp),%rsp
   1c9f1:	5b                   	pop    %rbx
   1c9f2:	41 5c                	pop    %r12
   1c9f4:	41 5d                	pop    %r13
   1c9f6:	41 5e                	pop    %r14
   1c9f8:	41 5f                	pop    %r15
   1c9fa:	5d                   	pop    %rbp
   1c9fb:	c3                   	retq   
   1c9fc:	45 31 ed             	xor    %r13d,%r13d
   1c9ff:	4c 89 ac 24 b8 00 00 	mov    %r13,0xb8(%rsp)
   1ca06:	00 
   1ca07:	48 83 7c 24 68 00    	cmpq   $0x0,0x68(%rsp)
   1ca0d:	0f 85 81 f1 ff ff    	jne    1bb94 <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0xf34>
   1ca13:	e9 8a f1 ff ff       	jmpq   1bba2 <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0xf42>
   1ca18:	4c 89 ac 24 b8 00 00 	mov    %r13,0xb8(%rsp)
   1ca1f:	00 
   1ca20:	48 8b 84 24 40 03 00 	mov    0x340(%rsp),%rax
   1ca27:	00 
   1ca28:	48 89 84 24 c8 00 00 	mov    %rax,0xc8(%rsp)
   1ca2f:	00 
   1ca30:	4d 39 e5             	cmp    %r12,%r13
   1ca33:	0f 84 07 01 00 00    	je     1cb40 <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x1ee0>
   1ca39:	4c 8d a4 24 99 01 00 	lea    0x199(%rsp),%r12
   1ca40:	00 
   1ca41:	4c 8d bc 24 80 01 00 	lea    0x180(%rsp),%r15
   1ca48:	00 
   1ca49:	eb 1b                	jmp    1ca66 <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x1e06>
   1ca4b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1ca50:	4c 8b ac 24 b8 00 00 	mov    0xb8(%rsp),%r13
   1ca57:	00 
   1ca58:	4c 3b ac 24 c0 00 00 	cmp    0xc0(%rsp),%r13
   1ca5f:	00 
   1ca60:	0f 84 ca 00 00 00    	je     1cb30 <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x1ed0>
   1ca66:	49 8d 45 20          	lea    0x20(%r13),%rax
   1ca6a:	48 89 84 24 b8 00 00 	mov    %rax,0xb8(%rsp)
   1ca71:	00 
   1ca72:	c4 c1 7a 6f 45 00    	vmovdqu 0x0(%r13),%xmm0
   1ca78:	c5 f9 7f 84 24 80 01 	vmovdqa %xmm0,0x180(%rsp)
   1ca7f:	00 00 
   1ca81:	49 8b 45 10          	mov    0x10(%r13),%rax
   1ca85:	48 89 84 24 90 01 00 	mov    %rax,0x190(%rsp)
   1ca8c:	00 
   1ca8d:	41 0f b6 45 18       	movzbl 0x18(%r13),%eax
   1ca92:	41 8b 4d 1c          	mov    0x1c(%r13),%ecx
   1ca96:	89 8c 24 03 01 00 00 	mov    %ecx,0x103(%rsp)
   1ca9d:	41 8b 4d 19          	mov    0x19(%r13),%ecx
   1caa1:	89 8c 24 00 01 00 00 	mov    %ecx,0x100(%rsp)
   1caa8:	3c 02                	cmp    $0x2,%al
   1caaa:	0f 84 80 00 00 00    	je     1cb30 <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x1ed0>
   1cab0:	48 8b 8c 24 90 01 00 	mov    0x190(%rsp),%rcx
   1cab7:	00 
   1cab8:	48 89 8c 24 10 04 00 	mov    %rcx,0x410(%rsp)
   1cabf:	00 
   1cac0:	c5 f9 6f 84 24 80 01 	vmovdqa 0x180(%rsp),%xmm0
   1cac7:	00 00 
   1cac9:	c5 f9 7f 84 24 00 04 	vmovdqa %xmm0,0x400(%rsp)
   1cad0:	00 00 
   1cad2:	8b 94 24 00 01 00 00 	mov    0x100(%rsp),%edx
   1cad9:	8b b4 24 03 01 00 00 	mov    0x103(%rsp),%esi
   1cae0:	89 54 24 38          	mov    %edx,0x38(%rsp)
   1cae4:	89 74 24 3b          	mov    %esi,0x3b(%rsp)
   1cae8:	48 89 8c 24 90 01 00 	mov    %rcx,0x190(%rsp)
   1caef:	00 
   1caf0:	c5 f9 7f 84 24 80 01 	vmovdqa %xmm0,0x180(%rsp)
   1caf7:	00 00 
   1caf9:	88 84 24 98 01 00 00 	mov    %al,0x198(%rsp)
   1cb00:	8b 44 24 38          	mov    0x38(%rsp),%eax
   1cb04:	8b 4c 24 3b          	mov    0x3b(%rsp),%ecx
   1cb08:	41 89 4c 24 03       	mov    %ecx,0x3(%r12)
   1cb0d:	41 89 04 24          	mov    %eax,(%r12)
   1cb11:	48 8b 84 24 80 01 00 	mov    0x180(%rsp),%rax
   1cb18:	00 
   1cb19:	f0 48 ff 08          	lock decq (%rax)
   1cb1d:	0f 85 2d ff ff ff    	jne    1ca50 <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x1df0>
   1cb23:	4c 89 ff             	mov    %r15,%rdi
   1cb26:	e8 25 ca ff ff       	callq  19550 <_ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17hf09fbc4b768e849cE>
   1cb2b:	e9 20 ff ff ff       	jmpq   1ca50 <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x1df0>
   1cb30:	48 8b 84 24 b0 00 00 	mov    0xb0(%rsp),%rax
   1cb37:	00 
   1cb38:	48 89 84 24 50 01 00 	mov    %rax,0x150(%rsp)
   1cb3f:	00 
   1cb40:	48 83 bc 24 50 01 00 	cmpq   $0x0,0x150(%rsp)
   1cb47:	00 00 
   1cb49:	74 0e                	je     1cb59 <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x1ef9>
   1cb4b:	48 8b bc 24 a8 00 00 	mov    0xa8(%rsp),%rdi
   1cb52:	00 
   1cb53:	ff 15 1f b2 22 00    	callq  *0x22b21f(%rip)        # 247d78 <free@GLIBC_2.2.5>
        self.0.terminate()
   1cb59:	48 8b 84 24 00 03 00 	mov    0x300(%rsp),%rax
   1cb60:	00 
   1cb61:	48 8b 38             	mov    (%rax),%rdi
   1cb64:	f0 48 ff 8f f0 01 00 	lock decq 0x1f0(%rdi)
   1cb6b:	00 
   1cb6c:	48 8b 87 98 01 00 00 	mov    0x198(%rdi),%rax
        if old_state != AWAKE {
   1cb73:	48 85 c0             	test   %rax,%rax
   1cb76:	74 0c                	je     1cb84 <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x1f24>
   1cb78:	48 81 c7 98 01 00 00 	add    $0x198,%rdi
            self.tickle_cold(worker_index);
   1cb7f:	e8 ec b4 ff ff       	callq  18070 <_ZN10rayon_core5sleep5Sleep11tickle_cold17h334403ad3bddecd8E>
   1cb84:	48 8b 44 24 58       	mov    0x58(%rsp),%rax
   1cb89:	f0 48 ff 08          	lock decq (%rax)
   1cb8d:	41 b7 01             	mov    $0x1,%r15b
   1cb90:	0f 85 ad fd ff ff    	jne    1c943 <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x1ce3>
   1cb96:	48 8d 7c 24 58       	lea    0x58(%rsp),%rdi
   1cb9b:	e8 20 c3 ff ff       	callq  18ec0 <_ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17hb5cb47fe96f5803fE>
   1cba0:	e9 9e fd ff ff       	jmpq   1c943 <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x1ce3>
   1cba5:	45 31 e4             	xor    %r12d,%r12d
   1cba8:	4d 85 ff             	test   %r15,%r15
   1cbab:	0f 85 f1 e1 ff ff    	jne    1ada2 <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x142>
   1cbb1:	e9 f5 e1 ff ff       	jmpq   1adab <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x14b>
   1cbb6:	45 31 e4             	xor    %r12d,%r12d
   1cbb9:	4d 85 ff             	test   %r15,%r15
   1cbbc:	0f 85 d0 e4 ff ff    	jne    1b092 <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x432>
   1cbc2:	e9 d4 e4 ff ff       	jmpq   1b09b <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x43b>
   1cbc7:	0f 0b                	ud2    
   1cbc9:	0f 0b                	ud2    
   1cbcb:	bf 10 00 00 00       	mov    $0x10,%edi
   1cbd0:	be 08 00 00 00       	mov    $0x8,%esi
   1cbd5:	e8 e6 88 fe ff       	callq  54c0 <_ZN5alloc5alloc18handle_alloc_error17hf7bb8682f6c8b1d7E>
   1cbda:	0f 0b                	ud2    
   1cbdc:	bf 80 01 00 00       	mov    $0x180,%edi
   1cbe1:	be 80 00 00 00       	mov    $0x80,%esi
   1cbe6:	e8 d5 88 fe ff       	callq  54c0 <_ZN5alloc5alloc18handle_alloc_error17hf7bb8682f6c8b1d7E>
   1cbeb:	0f 0b                	ud2    
   1cbed:	bf 28 00 00 00       	mov    $0x28,%edi
   1cbf2:	be 08 00 00 00       	mov    $0x8,%esi
   1cbf7:	e8 c4 88 fe ff       	callq  54c0 <_ZN5alloc5alloc18handle_alloc_error17hf7bb8682f6c8b1d7E>
   1cbfc:	0f 0b                	ud2    
   1cbfe:	bf 68 00 00 00       	mov    $0x68,%edi
   1cc03:	be 08 00 00 00       	mov    $0x8,%esi
   1cc08:	e8 b3 88 fe ff       	callq  54c0 <_ZN5alloc5alloc18handle_alloc_error17hf7bb8682f6c8b1d7E>
   1cc0d:	0f 0b                	ud2    
   1cc0f:	c5 f8 77             	vzeroupper 
   1cc12:	e8 b9 88 fe ff       	callq  54d0 <_ZN5alloc7raw_vec17capacity_overflow17h9be7d3ce681ac1a6E>
   1cc17:	e9 6c 02 00 00       	jmpq   1ce88 <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x2228>
   1cc1c:	c5 f8 77             	vzeroupper 
   1cc1f:	e8 ac 88 fe ff       	callq  54d0 <_ZN5alloc7raw_vec17capacity_overflow17h9be7d3ce681ac1a6E>
   1cc24:	e9 5f 02 00 00       	jmpq   1ce88 <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x2228>
   1cc29:	bf 00 04 00 00       	mov    $0x400,%edi
   1cc2e:	be 08 00 00 00       	mov    $0x8,%esi
   1cc33:	e8 88 88 fe ff       	callq  54c0 <_ZN5alloc5alloc18handle_alloc_error17hf7bb8682f6c8b1d7E>
   1cc38:	0f 0b                	ud2    
   1cc3a:	48 8d 44 24 34       	lea    0x34(%rsp),%rax
   1cc3f:	48 89 84 24 98 00 00 	mov    %rax,0x98(%rsp)
   1cc46:	00 
   1cc47:	48 8d 05 4a f8 01 00 	lea    0x1f84a(%rip),%rax        # 3c498 <_ZN4core7unicode12unicode_data15grapheme_extend6BITSET17h68ce7f61ccfa32feE+0x9f8>
   1cc4e:	48 89 84 24 a0 00 00 	mov    %rax,0xa0(%rsp)
   1cc55:	00 
   1cc56:	48 8d 84 24 98 00 00 	lea    0x98(%rsp),%rax
   1cc5d:	00 
   1cc5e:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   1cc63:	48 8d 05 66 6b 00 00 	lea    0x6b66(%rip),%rax        # 237d0 <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h60ee9c74ee2aa888E>
   1cc6a:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
   1cc6f:	48 8d 8c 24 a0 00 00 	lea    0xa0(%rsp),%rcx
   1cc76:	00 
   1cc77:	48 89 4c 24 48       	mov    %rcx,0x48(%rsp)
   1cc7c:	48 89 44 24 50       	mov    %rax,0x50(%rsp)
   1cc81:	48 8d 05 10 a2 22 00 	lea    0x22a210(%rip),%rax        # 246e98 <__init_array_end+0xe88>
   1cc88:	48 89 44 24 60       	mov    %rax,0x60(%rsp)
   1cc8d:	48 c7 44 24 68 03 00 	movq   $0x3,0x68(%rsp)
   1cc94:	00 00 
   1cc96:	48 c7 44 24 70 00 00 	movq   $0x0,0x70(%rsp)
   1cc9d:	00 00 
   1cc9f:	48 8d 44 24 38       	lea    0x38(%rsp),%rax
   1cca4:	48 89 84 24 80 00 00 	mov    %rax,0x80(%rsp)
   1ccab:	00 
   1ccac:	48 c7 84 24 88 00 00 	movq   $0x2,0x88(%rsp)
   1ccb3:	00 02 00 00 00 
   1ccb8:	48 8d 35 29 ad 22 00 	lea    0x22ad29(%rip),%rsi        # 2479e8 <__init_array_end+0x19d8>
   1ccbf:	48 8d 7c 24 60       	lea    0x60(%rsp),%rdi
   1ccc4:	e8 17 6d 00 00       	callq  239e0 <_ZN3std9panicking15begin_panic_fmt17h7fd3ef9bf535b4d1E>
   1ccc9:	e9 ba 01 00 00       	jmpq   1ce88 <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x2228>
   1ccce:	48 8d 44 24 34       	lea    0x34(%rsp),%rax
   1ccd3:	48 89 84 24 98 00 00 	mov    %rax,0x98(%rsp)
   1ccda:	00 
   1ccdb:	48 8d 05 b6 f7 01 00 	lea    0x1f7b6(%rip),%rax        # 3c498 <_ZN4core7unicode12unicode_data15grapheme_extend6BITSET17h68ce7f61ccfa32feE+0x9f8>
   1cce2:	48 89 84 24 a0 00 00 	mov    %rax,0xa0(%rsp)
   1cce9:	00 
   1ccea:	48 8d 84 24 98 00 00 	lea    0x98(%rsp),%rax
   1ccf1:	00 
   1ccf2:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   1ccf7:	48 8d 05 d2 6a 00 00 	lea    0x6ad2(%rip),%rax        # 237d0 <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h60ee9c74ee2aa888E>
   1ccfe:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
   1cd03:	48 8d 8c 24 a0 00 00 	lea    0xa0(%rsp),%rcx
   1cd0a:	00 
   1cd0b:	48 89 4c 24 48       	mov    %rcx,0x48(%rsp)
   1cd10:	48 89 44 24 50       	mov    %rax,0x50(%rsp)
   1cd15:	48 8d 05 7c a1 22 00 	lea    0x22a17c(%rip),%rax        # 246e98 <__init_array_end+0xe88>
   1cd1c:	48 89 44 24 60       	mov    %rax,0x60(%rsp)
   1cd21:	48 c7 44 24 68 03 00 	movq   $0x3,0x68(%rsp)
   1cd28:	00 00 
   1cd2a:	48 c7 44 24 70 00 00 	movq   $0x0,0x70(%rsp)
   1cd31:	00 00 
   1cd33:	48 8d 44 24 38       	lea    0x38(%rsp),%rax
   1cd38:	48 89 84 24 80 00 00 	mov    %rax,0x80(%rsp)
   1cd3f:	00 
   1cd40:	48 c7 84 24 88 00 00 	movq   $0x2,0x88(%rsp)
   1cd47:	00 02 00 00 00 
   1cd4c:	48 8d 35 dd ac 22 00 	lea    0x22acdd(%rip),%rsi        # 247a30 <__init_array_end+0x1a20>
   1cd53:	48 8d 7c 24 60       	lea    0x60(%rsp),%rdi
   1cd58:	e8 83 6c 00 00       	callq  239e0 <_ZN3std9panicking15begin_panic_fmt17h7fd3ef9bf535b4d1E>
   1cd5d:	e9 26 01 00 00       	jmpq   1ce88 <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x2228>
   1cd62:	48 8d 84 24 5c 01 00 	lea    0x15c(%rsp),%rax
   1cd69:	00 
   1cd6a:	48 89 84 24 98 00 00 	mov    %rax,0x98(%rsp)
   1cd71:	00 
   1cd72:	48 8d 05 37 f7 01 00 	lea    0x1f737(%rip),%rax        # 3c4b0 <_ZN4core7unicode12unicode_data15grapheme_extend6BITSET17h68ce7f61ccfa32feE+0xa10>
   1cd79:	48 89 84 24 a0 00 00 	mov    %rax,0xa0(%rsp)
   1cd80:	00 
   1cd81:	48 8d 84 24 98 00 00 	lea    0x98(%rsp),%rax
   1cd88:	00 
   1cd89:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   1cd8e:	48 8d 05 3b 6a 00 00 	lea    0x6a3b(%rip),%rax        # 237d0 <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h60ee9c74ee2aa888E>
   1cd95:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
   1cd9a:	48 8d 8c 24 a0 00 00 	lea    0xa0(%rsp),%rcx
   1cda1:	00 
   1cda2:	48 89 4c 24 48       	mov    %rcx,0x48(%rsp)
   1cda7:	48 89 44 24 50       	mov    %rax,0x50(%rsp)
   1cdac:	48 8d 05 e5 a0 22 00 	lea    0x22a0e5(%rip),%rax        # 246e98 <__init_array_end+0xe88>
   1cdb3:	48 89 44 24 60       	mov    %rax,0x60(%rsp)
   1cdb8:	48 c7 44 24 68 03 00 	movq   $0x3,0x68(%rsp)
   1cdbf:	00 00 
   1cdc1:	48 c7 44 24 70 00 00 	movq   $0x0,0x70(%rsp)
   1cdc8:	00 00 
   1cdca:	48 8d 44 24 38       	lea    0x38(%rsp),%rax
   1cdcf:	48 89 84 24 80 00 00 	mov    %rax,0x80(%rsp)
   1cdd6:	00 
   1cdd7:	48 c7 84 24 88 00 00 	movq   $0x2,0x88(%rsp)
   1cdde:	00 02 00 00 00 
   1cde3:	48 8d 35 16 ac 22 00 	lea    0x22ac16(%rip),%rsi        # 247a00 <__init_array_end+0x19f0>
   1cdea:	48 8d 7c 24 60       	lea    0x60(%rsp),%rdi
   1cdef:	e8 ec 6b 00 00       	callq  239e0 <_ZN3std9panicking15begin_panic_fmt17h7fd3ef9bf535b4d1E>
   1cdf4:	e9 8f 00 00 00       	jmpq   1ce88 <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x2228>
   1cdf9:	48 8d 44 24 34       	lea    0x34(%rsp),%rax
   1cdfe:	48 89 84 24 98 00 00 	mov    %rax,0x98(%rsp)
   1ce05:	00 
   1ce06:	48 8d 05 8b f6 01 00 	lea    0x1f68b(%rip),%rax        # 3c498 <_ZN4core7unicode12unicode_data15grapheme_extend6BITSET17h68ce7f61ccfa32feE+0x9f8>
   1ce0d:	48 89 84 24 a0 00 00 	mov    %rax,0xa0(%rsp)
   1ce14:	00 
   1ce15:	48 8d 84 24 98 00 00 	lea    0x98(%rsp),%rax
   1ce1c:	00 
   1ce1d:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   1ce22:	48 8d 05 a7 69 00 00 	lea    0x69a7(%rip),%rax        # 237d0 <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h60ee9c74ee2aa888E>
   1ce29:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
   1ce2e:	48 8d 8c 24 a0 00 00 	lea    0xa0(%rsp),%rcx
   1ce35:	00 
   1ce36:	48 89 4c 24 48       	mov    %rcx,0x48(%rsp)
   1ce3b:	48 89 44 24 50       	mov    %rax,0x50(%rsp)
   1ce40:	48 8d 05 51 a0 22 00 	lea    0x22a051(%rip),%rax        # 246e98 <__init_array_end+0xe88>
   1ce47:	48 89 44 24 60       	mov    %rax,0x60(%rsp)
   1ce4c:	48 c7 44 24 68 03 00 	movq   $0x3,0x68(%rsp)
   1ce53:	00 00 
   1ce55:	48 c7 44 24 70 00 00 	movq   $0x0,0x70(%rsp)
   1ce5c:	00 00 
   1ce5e:	48 8d 44 24 38       	lea    0x38(%rsp),%rax
   1ce63:	48 89 84 24 80 00 00 	mov    %rax,0x80(%rsp)
   1ce6a:	00 
   1ce6b:	48 c7 84 24 88 00 00 	movq   $0x2,0x88(%rsp)
   1ce72:	00 02 00 00 00 
   1ce77:	48 8d 35 9a ab 22 00 	lea    0x22ab9a(%rip),%rsi        # 247a18 <__init_array_end+0x1a08>
   1ce7e:	48 8d 7c 24 60       	lea    0x60(%rsp),%rdi
   1ce83:	e8 58 6b 00 00       	callq  239e0 <_ZN3std9panicking15begin_panic_fmt17h7fd3ef9bf535b4d1E>
   1ce88:	0f 0b                	ud2    
   1ce8a:	be 01 00 00 00       	mov    $0x1,%esi
   1ce8f:	4c 89 e7             	mov    %r12,%rdi
   1ce92:	e8 29 86 fe ff       	callq  54c0 <_ZN5alloc5alloc18handle_alloc_error17hf7bb8682f6c8b1d7E>
   1ce97:	0f 0b                	ud2    
   1ce99:	45 31 f6             	xor    %r14d,%r14d
   1ce9c:	4c 89 f7             	mov    %r14,%rdi
   1ce9f:	4c 89 e6             	mov    %r12,%rsi
   1cea2:	e8 19 86 fe ff       	callq  54c0 <_ZN5alloc5alloc18handle_alloc_error17hf7bb8682f6c8b1d7E>
   1cea7:	0f 0b                	ud2    
   1cea9:	bf 00 02 00 00       	mov    $0x200,%edi
   1ceae:	be 80 00 00 00       	mov    $0x80,%esi
   1ceb3:	e8 08 86 fe ff       	callq  54c0 <_ZN5alloc5alloc18handle_alloc_error17hf7bb8682f6c8b1d7E>
   1ceb8:	0f 0b                	ud2    
   1ceba:	48 8d 3d 60 04 02 00 	lea    0x20460(%rip),%rdi        # 3d321 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x9c1>
   1cec1:	48 8d 15 e8 9d 22 00 	lea    0x229de8(%rip),%rdx        # 246cb0 <__init_array_end+0xca0>
   1cec8:	be 2b 00 00 00       	mov    $0x2b,%esi
   1cecd:	e8 de a4 fe ff       	callq  73b0 <_ZN4core9panicking5panic17h6861470adfbddef8E>
   1ced2:	0f 0b                	ud2    
   1ced4:	bf 30 00 00 00       	mov    $0x30,%edi
   1ced9:	be 08 00 00 00       	mov    $0x8,%esi
   1cede:	e8 dd 85 fe ff       	callq  54c0 <_ZN5alloc5alloc18handle_alloc_error17hf7bb8682f6c8b1d7E>
   1cee3:	0f 0b                	ud2    
   1cee5:	c5 f8 77             	vzeroupper 
   1cee8:	e8 e3 85 fe ff       	callq  54d0 <_ZN5alloc7raw_vec17capacity_overflow17h9be7d3ce681ac1a6E>
   1ceed:	eb 99                	jmp    1ce88 <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x2228>
   1ceef:	bf 08 00 00 00       	mov    $0x8,%edi
   1cef4:	be 08 00 00 00       	mov    $0x8,%esi
   1cef9:	e8 c2 85 fe ff       	callq  54c0 <_ZN5alloc5alloc18handle_alloc_error17hf7bb8682f6c8b1d7E>
   1cefe:	0f 0b                	ud2    
   1cf00:	49 89 c4             	mov    %rax,%r12
   1cf03:	48 8d bc 24 d0 00 00 	lea    0xd0(%rsp),%rdi
   1cf0a:	00 
   1cf0b:	e8 f0 06 00 00       	callq  1d600 <_ZN4core3ptr13drop_in_place17h5432491734ccae0dE>
   1cf10:	e9 da 01 00 00       	jmpq   1d0ef <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x248f>
   1cf15:	49 89 c4             	mov    %rax,%r12
   1cf18:	48 8d bc 24 80 03 00 	lea    0x380(%rsp),%rdi
   1cf1f:	00 
   1cf20:	e8 ab 04 00 00       	callq  1d3d0 <_ZN4core3ptr13drop_in_place17hd1be8a4761df7a4aE>
   1cf25:	48 8d bc 24 a8 00 00 	lea    0xa8(%rsp),%rdi
   1cf2c:	00 
   1cf2d:	e8 0e c6 ff ff       	callq  19540 <_ZN4core3ptr13drop_in_place17hf2ddc0f9b8b6420dE>
   1cf32:	eb 10                	jmp    1cf44 <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x22e4>
   1cf34:	49 89 c4             	mov    %rax,%r12
   1cf37:	48 8d bc 24 80 01 00 	lea    0x180(%rsp),%rdi
   1cf3e:	00 
   1cf3f:	e8 6c 04 00 00       	callq  1d3b0 <_ZN4core3ptr13drop_in_place17h408762fb54525560E>
   1cf44:	48 8d 7c 24 60       	lea    0x60(%rsp),%rdi
   1cf49:	e8 82 03 00 00       	callq  1d2d0 <_ZN4core3ptr13drop_in_place17hc19fae284c101896E>
   1cf4e:	48 8d bc 24 d0 00 00 	lea    0xd0(%rsp),%rdi
   1cf55:	00 
   1cf56:	e8 e5 03 00 00       	callq  1d340 <_ZN4core3ptr13drop_in_place17h6213b8fbacde24b7E>
   1cf5b:	e9 ff 01 00 00       	jmpq   1d15f <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x24ff>
   1cf60:	e9 16 01 00 00       	jmpq   1d07b <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x241b>
   1cf65:	49 89 c4             	mov    %rax,%r12
   1cf68:	49 8b 3e             	mov    (%r14),%rdi
   1cf6b:	49 8b 46 08          	mov    0x8(%r14),%rax
   1cf6f:	48 8b 70 08          	mov    0x8(%rax),%rsi
   1cf73:	e8 c8 ab ff ff       	callq  17b40 <_ZN5alloc5alloc8box_free17h16551760f718b115E>
   1cf78:	4c 8b b4 24 48 01 00 	mov    0x148(%rsp),%r14
   1cf7f:	00 
   1cf80:	49 8b 7e 10          	mov    0x10(%r14),%rdi
   1cf84:	e8 27 43 ff ff       	callq  112b0 <_ZN5alloc5alloc8box_free17h434babe390d9f9d5E>
        result = registry().map(|registry| {
   1cf89:	4d 89 2e             	mov    %r13,(%r14)
   1cf8c:	4d 89 7e 08          	mov    %r15,0x8(%r14)
   1cf90:	49 89 5e 10          	mov    %rbx,0x10(%r14)
   1cf94:	4c 89 e7             	mov    %r12,%rdi
   1cf97:	e8 04 71 fe ff       	callq  40a0 <_Unwind_Resume@plt>
   1cf9c:	0f 0b                	ud2    
   1cf9e:	49 89 c4             	mov    %rax,%r12
   1cfa1:	e9 af 01 00 00       	jmpq   1d155 <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x24f5>
   1cfa6:	eb 2a                	jmp    1cfd2 <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x2372>
   1cfa8:	49 89 c4             	mov    %rax,%r12
   1cfab:	48 8d bc 24 80 01 00 	lea    0x180(%rsp),%rdi
   1cfb2:	00 
   1cfb3:	e8 d8 67 00 00       	callq  23790 <_ZN4core3ptr13drop_in_place17h2d183e1f8ab9667fE>
   1cfb8:	48 8d bc 24 00 04 00 	lea    0x400(%rsp),%rdi
   1cfbf:	00 
        }
   1cfc0:	e8 eb 07 00 00       	callq  1d7b0 <_ZN4core3ptr13drop_in_place17h301404fadc7a0dd0E>
   1cfc5:	48 8d bc 24 80 03 00 	lea    0x380(%rsp),%rdi
   1cfcc:	00 
   1cfcd:	e9 25 01 00 00       	jmpq   1d0f7 <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x2497>
   1cfd2:	49 89 c4             	mov    %rax,%r12
   1cfd5:	e9 85 01 00 00       	jmpq   1d15f <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x24ff>
   1cfda:	49 89 c4             	mov    %rax,%r12
   1cfdd:	48 8d bc 24 68 03 00 	lea    0x368(%rsp),%rdi
   1cfe4:	00 
   1cfe5:	e8 66 c4 ff ff       	callq  19450 <_ZN4core3ptr13drop_in_place17h85b94a730b427fbaE>
   1cfea:	e9 1f 01 00 00       	jmpq   1d10e <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x24ae>
   1cfef:	49 89 c4             	mov    %rax,%r12
   1cff2:	48 8b 3b             	mov    (%rbx),%rdi
   1cff5:	48 8b 43 08          	mov    0x8(%rbx),%rax
   1cff9:	48 8b 70 08          	mov    0x8(%rax),%rsi
   1cffd:	e8 3e ab ff ff       	callq  17b40 <_ZN5alloc5alloc8box_free17h16551760f718b115E>
   1d002:	48 89 df             	mov    %rbx,%rdi
   1d005:	e8 a6 42 ff ff       	callq  112b0 <_ZN5alloc5alloc8box_free17h434babe390d9f9d5E>
   1d00a:	e9 0c 01 00 00       	jmpq   1d11b <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x24bb>
   1d00f:	49 89 c4             	mov    %rax,%r12
        b.spawn(|| thread.run())?;
   1d012:	48 83 bc 24 d0 00 00 	cmpq   $0x0,0xd0(%rsp)
   1d019:	00 00 
   1d01b:	0f 84 fa 00 00 00    	je     1d11b <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x24bb>
   1d021:	48 8d bc 24 d8 00 00 	lea    0xd8(%rsp),%rdi
   1d028:	00 
   1d029:	e8 62 c7 ff ff       	callq  19790 <_ZN4core3ptr13drop_in_place17h561fedaf291b00bdE>
   1d02e:	e9 e8 00 00 00       	jmpq   1d11b <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x24bb>
   1d033:	e9 3e 01 00 00       	jmpq   1d176 <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x2516>
   1d038:	49 89 c4             	mov    %rax,%r12
   1d03b:	eb 5b                	jmp    1d098 <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x2438>
   1d03d:	49 89 c4             	mov    %rax,%r12
   1d040:	49 8b 3f             	mov    (%r15),%rdi
   1d043:	49 8b 77 08          	mov    0x8(%r15),%rsi
   1d047:	e8 c4 78 00 00       	callq  24910 <_ZN5alloc5alloc8box_free17h3741427eaa5804e6E>
   1d04c:	4c 89 ff             	mov    %r15,%rdi
   1d04f:	e8 dc 7d 00 00       	callq  24e30 <_ZN5alloc5alloc8box_free17h20e506aa40102463E>
   1d054:	eb 35                	jmp    1d08b <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x242b>
   1d056:	49 89 c4             	mov    %rax,%r12
   1d059:	4c 89 ac 24 b8 00 00 	mov    %r13,0xb8(%rsp)
   1d060:	00 
   1d061:	4c 89 b4 24 c8 00 00 	mov    %r14,0xc8(%rsp)
   1d068:	00 
   1d069:	48 8d bc 24 90 05 00 	lea    0x590(%rsp),%rdi
   1d070:	00 
        }
   1d071:	e8 ca bc ff ff       	callq  18d40 <_ZN4core3ptr13drop_in_place17h9facae506da891f6E>
   1d076:	e9 c0 00 00 00       	jmpq   1d13b <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x24db>
   1d07b:	49 89 c4             	mov    %rax,%r12
   1d07e:	48 8d bc 24 10 03 00 	lea    0x310(%rsp),%rdi
   1d085:	00 
   1d086:	e8 75 f7 00 00       	callq  2c800 <_ZN4core3ptr13drop_in_place17hc6f39fdc981b88b1E>
   1d08b:	48 8d bc 24 08 03 00 	lea    0x308(%rsp),%rdi
   1d092:	00 
   1d093:	e8 e8 c6 ff ff       	callq  19780 <_ZN4core3ptr13drop_in_place17h4520fe8af67975acE>
   1d098:	48 8d bc 24 38 01 00 	lea    0x138(%rsp),%rdi
   1d09f:	00 
   1d0a0:	e8 8b c5 ff ff       	callq  19630 <_ZN4core3ptr13drop_in_place17h66f16ad12d8b570cE>
   1d0a5:	eb 74                	jmp    1d11b <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x24bb>
   1d0a7:	49 89 c4             	mov    %rax,%r12
   1d0aa:	eb df                	jmp    1d08b <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x242b>
   1d0ac:	49 89 c4             	mov    %rax,%r12
   1d0af:	48 89 5c 24 70       	mov    %rbx,0x70(%rsp)
   1d0b4:	eb 15                	jmp    1d0cb <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x246b>
   1d0b6:	49 89 c4             	mov    %rax,%r12
   1d0b9:	48 89 5c 24 70       	mov    %rbx,0x70(%rsp)
   1d0be:	48 8d bc 24 80 03 00 	lea    0x380(%rsp),%rdi
   1d0c5:	00 
        }
   1d0c6:	e8 35 c4 ff ff       	callq  19500 <_ZN4core3ptr13drop_in_place17h01838cc416d121cfE>
   1d0cb:	48 8d 7c 24 38       	lea    0x38(%rsp),%rdi
    }
   1d0d0:	e8 6b c4 ff ff       	callq  19540 <_ZN4core3ptr13drop_in_place17hf2ddc0f9b8b6420dE>
   1d0d5:	48 8d bc 24 b8 00 00 	lea    0xb8(%rsp),%rdi
   1d0dc:	00 
   1d0dd:	4c 89 ee             	mov    %r13,%rsi
   1d0e0:	e8 5b 03 00 00       	callq  1d440 <_ZN4core3ptr13drop_in_place17h770068f80bc1e3e2E>
   1d0e5:	48 8d 7c 24 60       	lea    0x60(%rsp),%rdi
   1d0ea:	e8 61 03 00 00       	callq  1d450 <_ZN4core3ptr13drop_in_place17hcf3b8dbb60889057E>
   1d0ef:	48 8d bc 24 a8 00 00 	lea    0xa8(%rsp),%rdi
   1d0f6:	00 
   1d0f7:	e8 f4 02 00 00       	callq  1d3f0 <_ZN4core3ptr13drop_in_place17h9696c1b393abc793E>
   1d0fc:	48 8d bc 24 60 05 00 	lea    0x560(%rsp),%rdi
   1d103:	00 
    }
   1d104:	e8 37 02 00 00       	callq  1d340 <_ZN4core3ptr13drop_in_place17h6213b8fbacde24b7E>
   1d109:	eb 54                	jmp    1d15f <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x24ff>
   1d10b:	49 89 c4             	mov    %rax,%r12
   1d10e:	48 8d bc 24 00 04 00 	lea    0x400(%rsp),%rdi
   1d115:	00 
   1d116:	e8 15 c6 ff ff       	callq  19730 <_ZN4core3ptr13drop_in_place17hb29abd4c123e0ce5E>
   1d11b:	48 8b 84 24 c0 02 00 	mov    0x2c0(%rsp),%rax
   1d122:	00 
   1d123:	48 89 84 24 b8 00 00 	mov    %rax,0xb8(%rsp)
   1d12a:	00 
   1d12b:	48 8b 84 24 40 03 00 	mov    0x340(%rsp),%rax
   1d132:	00 
   1d133:	48 89 84 24 c8 00 00 	mov    %rax,0xc8(%rsp)
   1d13a:	00 
   1d13b:	48 8d bc 24 a8 00 00 	lea    0xa8(%rsp),%rdi
   1d142:	00 
        }
   1d143:	e8 38 05 00 00       	callq  1d680 <_ZN4core3ptr13drop_in_place17haab33052ada0010cE>
   1d148:	48 8d bc 24 00 03 00 	lea    0x300(%rsp),%rdi
   1d14f:	00 
    }
   1d150:	e8 2b 06 00 00       	callq  1d780 <_ZN4core3ptr13drop_in_place17h0060ac73d08aba5cE>
   1d155:	48 8d 7c 24 58       	lea    0x58(%rsp),%rdi
   1d15a:	e8 41 bb ff ff       	callq  18ca0 <_ZN4core3ptr13drop_in_place17h03ca7e6c03cfa936E>
   1d15f:	48 8d bc 24 b0 05 00 	lea    0x5b0(%rsp),%rdi
   1d166:	00 
   1d167:	e8 34 00 00 00       	callq  1d1a0 <_ZN4core3ptr13drop_in_place17h51aa47e1580448f3E>
   1d16c:	4c 89 e7             	mov    %r12,%rdi
   1d16f:	e8 2c 6f fe ff       	callq  40a0 <_Unwind_Resume@plt>
   1d174:	0f 0b                	ud2    
   1d176:	49 89 c4             	mov    %rax,%r12
   1d179:	eb a0                	jmp    1d11b <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE+0x24bb>
   1d17b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000001d180 <_ZN4core3ops8function6FnOnce40call_once$u7b$$u7b$vtable.shim$u7d$$u7d$17hf75db3bbeb4b0ac1E>:
   1d180:	50                   	push   %rax
   1d181:	48 8b 07             	mov    (%rdi),%rax
   1d184:	48 89 04 24          	mov    %rax,(%rsp)
   1d188:	48 89 e7             	mov    %rsp,%rdi
   1d18b:	e8 d0 da ff ff       	callq  1ac60 <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h79f2201dc3e6023fE>
   1d190:	58                   	pop    %rax
   1d191:	c3                   	retq   
   1d192:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1d199:	00 00 00 
   1d19c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000001d1a0 <_ZN4core3ptr13drop_in_place17h51aa47e1580448f3E>:
   1d1a0:	41 56                	push   %r14
   1d1a2:	53                   	push   %rbx
   1d1a3:	50                   	push   %rax
   1d1a4:	48 89 fb             	mov    %rdi,%rbx
   1d1a7:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
   1d1ab:	48 85 ff             	test   %rdi,%rdi
   1d1ae:	74 1b                	je     1d1cb <_ZN4core3ptr13drop_in_place17h51aa47e1580448f3E+0x2b>
   1d1b0:	48 8b 43 10          	mov    0x10(%rbx),%rax
   1d1b4:	ff 10                	callq  *(%rax)
   1d1b6:	48 8b 43 10          	mov    0x10(%rbx),%rax
   1d1ba:	48 83 78 08 00       	cmpq   $0x0,0x8(%rax)
   1d1bf:	74 0a                	je     1d1cb <_ZN4core3ptr13drop_in_place17h51aa47e1580448f3E+0x2b>
   1d1c1:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
   1d1c5:	ff 15 ad ab 22 00    	callq  *0x22abad(%rip)        # 247d78 <free@GLIBC_2.2.5>
   1d1cb:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   1d1cf:	48 85 ff             	test   %rdi,%rdi
   1d1d2:	74 1b                	je     1d1ef <_ZN4core3ptr13drop_in_place17h51aa47e1580448f3E+0x4f>
   1d1d4:	48 8b 43 20          	mov    0x20(%rbx),%rax
   1d1d8:	ff 10                	callq  *(%rax)
   1d1da:	48 8b 43 20          	mov    0x20(%rbx),%rax
   1d1de:	48 83 78 08 00       	cmpq   $0x0,0x8(%rax)
   1d1e3:	74 0a                	je     1d1ef <_ZN4core3ptr13drop_in_place17h51aa47e1580448f3E+0x4f>
   1d1e5:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   1d1e9:	ff 15 89 ab 22 00    	callq  *0x22ab89(%rip)        # 247d78 <free@GLIBC_2.2.5>
   1d1ef:	48 8b 7b 38          	mov    0x38(%rbx),%rdi
   1d1f3:	48 85 ff             	test   %rdi,%rdi
   1d1f6:	74 1b                	je     1d213 <_ZN4core3ptr13drop_in_place17h51aa47e1580448f3E+0x73>
   1d1f8:	48 8b 43 40          	mov    0x40(%rbx),%rax
   1d1fc:	ff 10                	callq  *(%rax)
   1d1fe:	48 8b 43 40          	mov    0x40(%rbx),%rax
   1d202:	48 83 78 08 00       	cmpq   $0x0,0x8(%rax)
   1d207:	74 0a                	je     1d213 <_ZN4core3ptr13drop_in_place17h51aa47e1580448f3E+0x73>
   1d209:	48 8b 7b 38          	mov    0x38(%rbx),%rdi
   1d20d:	ff 15 65 ab 22 00    	callq  *0x22ab65(%rip)        # 247d78 <free@GLIBC_2.2.5>
   1d213:	48 8b 7b 48          	mov    0x48(%rbx),%rdi
   1d217:	48 85 ff             	test   %rdi,%rdi
   1d21a:	74 22                	je     1d23e <_ZN4core3ptr13drop_in_place17h51aa47e1580448f3E+0x9e>
   1d21c:	48 8b 43 50          	mov    0x50(%rbx),%rax
   1d220:	ff 10                	callq  *(%rax)
   1d222:	48 8b 43 50          	mov    0x50(%rbx),%rax
   1d226:	48 83 78 08 00       	cmpq   $0x0,0x8(%rax)
   1d22b:	74 11                	je     1d23e <_ZN4core3ptr13drop_in_place17h51aa47e1580448f3E+0x9e>
   1d22d:	48 8b 7b 48          	mov    0x48(%rbx),%rdi
   1d231:	48 83 c4 08          	add    $0x8,%rsp
   1d235:	5b                   	pop    %rbx
   1d236:	41 5e                	pop    %r14
   1d238:	ff 25 3a ab 22 00    	jmpq   *0x22ab3a(%rip)        # 247d78 <free@GLIBC_2.2.5>
   1d23e:	48 83 c4 08          	add    $0x8,%rsp
   1d242:	5b                   	pop    %rbx
   1d243:	41 5e                	pop    %r14
   1d245:	c3                   	retq   
   1d246:	49 89 c6             	mov    %rax,%r14
   1d249:	48 8b 7b 48          	mov    0x48(%rbx),%rdi
   1d24d:	48 8b 43 50          	mov    0x50(%rbx),%rax
   1d251:	48 8b 70 08          	mov    0x8(%rax),%rsi
   1d255:	e8 e6 a8 ff ff       	callq  17b40 <_ZN5alloc5alloc8box_free17h16551760f718b115E>
   1d25a:	4c 89 f7             	mov    %r14,%rdi
   1d25d:	e8 3e 6e fe ff       	callq  40a0 <_Unwind_Resume@plt>
   1d262:	0f 0b                	ud2    
   1d264:	49 89 c6             	mov    %rax,%r14
   1d267:	48 8b 7b 38          	mov    0x38(%rbx),%rdi
   1d26b:	48 8b 43 40          	mov    0x40(%rbx),%rax
   1d26f:	48 8b 70 08          	mov    0x8(%rax),%rsi
   1d273:	e8 c8 a8 ff ff       	callq  17b40 <_ZN5alloc5alloc8box_free17h16551760f718b115E>
   1d278:	eb 3c                	jmp    1d2b6 <_ZN4core3ptr13drop_in_place17h51aa47e1580448f3E+0x116>
   1d27a:	49 89 c6             	mov    %rax,%r14
   1d27d:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   1d281:	48 8b 43 20          	mov    0x20(%rbx),%rax
   1d285:	48 8b 70 08          	mov    0x8(%rax),%rsi
   1d289:	e8 b2 a8 ff ff       	callq  17b40 <_ZN5alloc5alloc8box_free17h16551760f718b115E>
   1d28e:	eb 1d                	jmp    1d2ad <_ZN4core3ptr13drop_in_place17h51aa47e1580448f3E+0x10d>
   1d290:	49 89 c6             	mov    %rax,%r14
   1d293:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
   1d297:	48 8b 43 10          	mov    0x10(%rbx),%rax
   1d29b:	48 8b 70 08          	mov    0x8(%rax),%rsi
   1d29f:	e8 9c a8 ff ff       	callq  17b40 <_ZN5alloc5alloc8box_free17h16551760f718b115E>
   1d2a4:	48 8d 7b 18          	lea    0x18(%rbx),%rdi
   1d2a8:	e8 43 c1 ff ff       	callq  193f0 <_ZN4core3ptr13drop_in_place17h596d07670bd5c336E>
   1d2ad:	48 8d 7b 38          	lea    0x38(%rbx),%rdi
   1d2b1:	e8 3a c1 ff ff       	callq  193f0 <_ZN4core3ptr13drop_in_place17h596d07670bd5c336E>
   1d2b6:	48 83 c3 48          	add    $0x48,%rbx
   1d2ba:	48 89 df             	mov    %rbx,%rdi
   1d2bd:	e8 2e c1 ff ff       	callq  193f0 <_ZN4core3ptr13drop_in_place17h596d07670bd5c336E>
   1d2c2:	4c 89 f7             	mov    %r14,%rdi
   1d2c5:	e8 d6 6d fe ff       	callq  40a0 <_Unwind_Resume@plt>
   1d2ca:	0f 0b                	ud2    
   1d2cc:	0f 1f 40 00          	nopl   0x0(%rax)

000000000001d2d0 <_ZN4core3ptr13drop_in_place17hc19fae284c101896E>:
   1d2d0:	41 57                	push   %r15
   1d2d2:	41 56                	push   %r14
   1d2d4:	53                   	push   %rbx
   1d2d5:	49 89 fe             	mov    %rdi,%r14
   1d2d8:	4c 8b 7f 10          	mov    0x10(%rdi),%r15
   1d2dc:	4d 85 ff             	test   %r15,%r15
   1d2df:	74 44                	je     1d325 <_ZN4core3ptr13drop_in_place17hc19fae284c101896E+0x55>
   1d2e1:	49 8b 1e             	mov    (%r14),%rbx
   1d2e4:	49 c1 e7 04          	shl    $0x4,%r15
   1d2e8:	48 8b 03             	mov    (%rbx),%rax
   1d2eb:	f0 48 ff 08          	lock decq (%rax)
   1d2ef:	74 22                	je     1d313 <_ZN4core3ptr13drop_in_place17hc19fae284c101896E+0x43>
   1d2f1:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1d2f8:	00 00 00 
   1d2fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1d300:	48 83 c3 10          	add    $0x10,%rbx
   1d304:	49 83 c7 f0          	add    $0xfffffffffffffff0,%r15
   1d308:	74 1b                	je     1d325 <_ZN4core3ptr13drop_in_place17hc19fae284c101896E+0x55>
   1d30a:	48 8b 03             	mov    (%rbx),%rax
   1d30d:	f0 48 ff 08          	lock decq (%rax)
   1d311:	75 ed                	jne    1d300 <_ZN4core3ptr13drop_in_place17hc19fae284c101896E+0x30>
   1d313:	48 89 df             	mov    %rbx,%rdi
   1d316:	e8 35 c2 ff ff       	callq  19550 <_ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17hf09fbc4b768e849cE>
   1d31b:	48 83 c3 10          	add    $0x10,%rbx
   1d31f:	49 83 c7 f0          	add    $0xfffffffffffffff0,%r15
   1d323:	75 e5                	jne    1d30a <_ZN4core3ptr13drop_in_place17hc19fae284c101896E+0x3a>
   1d325:	49 83 7e 08 00       	cmpq   $0x0,0x8(%r14)
   1d32a:	74 0e                	je     1d33a <_ZN4core3ptr13drop_in_place17hc19fae284c101896E+0x6a>
   1d32c:	49 8b 3e             	mov    (%r14),%rdi
   1d32f:	5b                   	pop    %rbx
   1d330:	41 5e                	pop    %r14
   1d332:	41 5f                	pop    %r15
   1d334:	ff 25 3e aa 22 00    	jmpq   *0x22aa3e(%rip)        # 247d78 <free@GLIBC_2.2.5>
   1d33a:	5b                   	pop    %rbx
   1d33b:	41 5e                	pop    %r14
   1d33d:	41 5f                	pop    %r15
   1d33f:	c3                   	retq   

000000000001d340 <_ZN4core3ptr13drop_in_place17h6213b8fbacde24b7E>:
   1d340:	41 57                	push   %r15
   1d342:	41 56                	push   %r14
   1d344:	53                   	push   %rbx
   1d345:	49 89 fe             	mov    %rdi,%r14
   1d348:	4c 8b 7f 10          	mov    0x10(%rdi),%r15
   1d34c:	4d 85 ff             	test   %r15,%r15
   1d34f:	74 44                	je     1d395 <_ZN4core3ptr13drop_in_place17h6213b8fbacde24b7E+0x55>
   1d351:	49 8b 1e             	mov    (%r14),%rbx
   1d354:	49 c1 e7 05          	shl    $0x5,%r15
   1d358:	48 8b 03             	mov    (%rbx),%rax
   1d35b:	f0 48 ff 08          	lock decq (%rax)
   1d35f:	74 22                	je     1d383 <_ZN4core3ptr13drop_in_place17h6213b8fbacde24b7E+0x43>
   1d361:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1d368:	00 00 00 
   1d36b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1d370:	48 83 c3 20          	add    $0x20,%rbx
   1d374:	49 83 c7 e0          	add    $0xffffffffffffffe0,%r15
   1d378:	74 1b                	je     1d395 <_ZN4core3ptr13drop_in_place17h6213b8fbacde24b7E+0x55>
   1d37a:	48 8b 03             	mov    (%rbx),%rax
   1d37d:	f0 48 ff 08          	lock decq (%rax)
   1d381:	75 ed                	jne    1d370 <_ZN4core3ptr13drop_in_place17h6213b8fbacde24b7E+0x30>
   1d383:	48 89 df             	mov    %rbx,%rdi
   1d386:	e8 c5 c1 ff ff       	callq  19550 <_ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17hf09fbc4b768e849cE>
   1d38b:	48 83 c3 20          	add    $0x20,%rbx
   1d38f:	49 83 c7 e0          	add    $0xffffffffffffffe0,%r15
   1d393:	75 e5                	jne    1d37a <_ZN4core3ptr13drop_in_place17h6213b8fbacde24b7E+0x3a>
   1d395:	49 83 7e 08 00       	cmpq   $0x0,0x8(%r14)
   1d39a:	74 0e                	je     1d3aa <_ZN4core3ptr13drop_in_place17h6213b8fbacde24b7E+0x6a>
   1d39c:	49 8b 3e             	mov    (%r14),%rdi
   1d39f:	5b                   	pop    %rbx
   1d3a0:	41 5e                	pop    %r14
   1d3a2:	41 5f                	pop    %r15
   1d3a4:	ff 25 ce a9 22 00    	jmpq   *0x22a9ce(%rip)        # 247d78 <free@GLIBC_2.2.5>
   1d3aa:	5b                   	pop    %rbx
   1d3ab:	41 5e                	pop    %r14
   1d3ad:	41 5f                	pop    %r15
   1d3af:	c3                   	retq   

000000000001d3b0 <_ZN4core3ptr13drop_in_place17h408762fb54525560E>:
   1d3b0:	80 7f 08 02          	cmpb   $0x2,0x8(%rdi)
   1d3b4:	74 0e                	je     1d3c4 <_ZN4core3ptr13drop_in_place17h408762fb54525560E+0x14>
   1d3b6:	48 8b 07             	mov    (%rdi),%rax
   1d3b9:	f0 48 ff 08          	lock decq (%rax)
   1d3bd:	75 05                	jne    1d3c4 <_ZN4core3ptr13drop_in_place17h408762fb54525560E+0x14>
   1d3bf:	e9 8c c1 ff ff       	jmpq   19550 <_ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17hf09fbc4b768e849cE>
   1d3c4:	c3                   	retq   
   1d3c5:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1d3cc:	00 00 00 
   1d3cf:	90                   	nop

000000000001d3d0 <_ZN4core3ptr13drop_in_place17hd1be8a4761df7a4aE>:
   1d3d0:	80 7f 18 02          	cmpb   $0x2,0x18(%rdi)
   1d3d4:	74 0e                	je     1d3e4 <_ZN4core3ptr13drop_in_place17hd1be8a4761df7a4aE+0x14>
   1d3d6:	48 8b 07             	mov    (%rdi),%rax
   1d3d9:	f0 48 ff 08          	lock decq (%rax)
   1d3dd:	75 05                	jne    1d3e4 <_ZN4core3ptr13drop_in_place17hd1be8a4761df7a4aE+0x14>
   1d3df:	e9 6c c1 ff ff       	jmpq   19550 <_ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17hf09fbc4b768e849cE>
   1d3e4:	c3                   	retq   
   1d3e5:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1d3ec:	00 00 00 
   1d3ef:	90                   	nop

000000000001d3f0 <_ZN4core3ptr13drop_in_place17h9696c1b393abc793E>:
   1d3f0:	41 57                	push   %r15
   1d3f2:	41 56                	push   %r14
   1d3f4:	53                   	push   %rbx
   1d3f5:	49 89 fe             	mov    %rdi,%r14
   1d3f8:	4c 8b 3f             	mov    (%rdi),%r15
   1d3fb:	48 8b 47 10          	mov    0x10(%rdi),%rax
   1d3ff:	48 c1 e0 04          	shl    $0x4,%rax
   1d403:	48 8d 1c 80          	lea    (%rax,%rax,4),%rbx
   1d407:	48 85 db             	test   %rbx,%rbx
   1d40a:	74 19                	je     1d425 <_ZN4core3ptr13drop_in_place17h9696c1b393abc793E+0x35>
   1d40c:	0f 1f 40 00          	nopl   0x0(%rax)
   1d410:	4c 89 ff             	mov    %r15,%rdi
   1d413:	49 83 c7 50          	add    $0x50,%r15
   1d417:	e8 54 c0 ff ff       	callq  19470 <_ZN4core3ptr13drop_in_place17h0c0b9d0f4d2254bfE>
   1d41c:	48 83 c3 b0          	add    $0xffffffffffffffb0,%rbx
   1d420:	48 85 db             	test   %rbx,%rbx
   1d423:	75 eb                	jne    1d410 <_ZN4core3ptr13drop_in_place17h9696c1b393abc793E+0x20>
   1d425:	49 83 7e 08 00       	cmpq   $0x0,0x8(%r14)
   1d42a:	74 0e                	je     1d43a <_ZN4core3ptr13drop_in_place17h9696c1b393abc793E+0x4a>
   1d42c:	49 8b 3e             	mov    (%r14),%rdi
   1d42f:	5b                   	pop    %rbx
   1d430:	41 5e                	pop    %r14
   1d432:	41 5f                	pop    %r15
   1d434:	ff 25 3e a9 22 00    	jmpq   *0x22a93e(%rip)        # 247d78 <free@GLIBC_2.2.5>
   1d43a:	5b                   	pop    %rbx
   1d43b:	41 5e                	pop    %r14
   1d43d:	41 5f                	pop    %r15
   1d43f:	c3                   	retq   

000000000001d440 <_ZN4core3ptr13drop_in_place17h770068f80bc1e3e2E>:
   1d440:	48 89 37             	mov    %rsi,(%rdi)
   1d443:	c3                   	retq   
   1d444:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1d44b:	00 00 00 
   1d44e:	66 90                	xchg   %ax,%ax

000000000001d450 <_ZN4core3ptr13drop_in_place17hcf3b8dbb60889057E>:
   1d450:	41 56                	push   %r14
   1d452:	53                   	push   %rbx
   1d453:	48 83 ec 18          	sub    $0x18,%rsp
   1d457:	48 89 fb             	mov    %rdi,%rbx
   1d45a:	48 8b 47 10          	mov    0x10(%rdi),%rax
   1d45e:	48 3b 47 18          	cmp    0x18(%rdi),%rax
   1d462:	74 40                	je     1d4a4 <_ZN4core3ptr13drop_in_place17hcf3b8dbb60889057E+0x54>
   1d464:	4c 8d 74 24 08       	lea    0x8(%rsp),%r14
   1d469:	eb 0f                	jmp    1d47a <_ZN4core3ptr13drop_in_place17hcf3b8dbb60889057E+0x2a>
   1d46b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1d470:	48 8b 43 10          	mov    0x10(%rbx),%rax
   1d474:	48 3b 43 18          	cmp    0x18(%rbx),%rax
   1d478:	74 2a                	je     1d4a4 <_ZN4core3ptr13drop_in_place17hcf3b8dbb60889057E+0x54>
   1d47a:	48 8d 48 10          	lea    0x10(%rax),%rcx
   1d47e:	48 89 4b 10          	mov    %rcx,0x10(%rbx)
   1d482:	48 8b 08             	mov    (%rax),%rcx
   1d485:	0f b6 40 08          	movzbl 0x8(%rax),%eax
   1d489:	24 01                	and    $0x1,%al
   1d48b:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
   1d490:	88 44 24 10          	mov    %al,0x10(%rsp)
   1d494:	f0 48 ff 09          	lock decq (%rcx)
   1d498:	75 d6                	jne    1d470 <_ZN4core3ptr13drop_in_place17hcf3b8dbb60889057E+0x20>
   1d49a:	4c 89 f7             	mov    %r14,%rdi
   1d49d:	e8 ae c0 ff ff       	callq  19550 <_ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17hf09fbc4b768e849cE>
   1d4a2:	eb cc                	jmp    1d470 <_ZN4core3ptr13drop_in_place17hcf3b8dbb60889057E+0x20>
   1d4a4:	48 83 7b 08 00       	cmpq   $0x0,0x8(%rbx)
   1d4a9:	74 10                	je     1d4bb <_ZN4core3ptr13drop_in_place17hcf3b8dbb60889057E+0x6b>
   1d4ab:	48 8b 3b             	mov    (%rbx),%rdi
   1d4ae:	48 83 c4 18          	add    $0x18,%rsp
   1d4b2:	5b                   	pop    %rbx
   1d4b3:	41 5e                	pop    %r14
   1d4b5:	ff 25 bd a8 22 00    	jmpq   *0x22a8bd(%rip)        # 247d78 <free@GLIBC_2.2.5>
   1d4bb:	48 83 c4 18          	add    $0x18,%rsp
   1d4bf:	5b                   	pop    %rbx
   1d4c0:	41 5e                	pop    %r14
   1d4c2:	c3                   	retq   
   1d4c3:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1d4ca:	00 00 00 
   1d4cd:	0f 1f 00             	nopl   (%rax)

000000000001d4d0 <_ZN10rayon_core5latch9LockLatch3new17hd5a822851561a199E>:
    pub(super) fn new() -> LockLatch {
   1d4d0:	41 57                	push   %r15
   1d4d2:	41 56                	push   %r14
   1d4d4:	53                   	push   %rbx
   1d4d5:	48 83 ec 30          	sub    $0x30,%rsp
   1d4d9:	49 89 fe             	mov    %rdi,%r14
   1d4dc:	bf 28 00 00 00       	mov    $0x28,%edi
   1d4e1:	ff 15 21 aa 22 00    	callq  *0x22aa21(%rip)        # 247f08 <malloc@GLIBC_2.2.5>
   1d4e7:	48 85 c0             	test   %rax,%rax
   1d4ea:	0f 84 c0 00 00 00    	je     1d5b0 <_ZN10rayon_core5latch9LockLatch3new17hd5a822851561a199E+0xe0>
   1d4f0:	48 89 c3             	mov    %rax,%rbx
   1d4f3:	c5 f8 57 c0          	vxorps %xmm0,%xmm0,%xmm0
   1d4f7:	c5 fc 11 00          	vmovups %ymm0,(%rax)
   1d4fb:	48 c7 40 20 00 00 00 	movq   $0x0,0x20(%rax)
   1d502:	00 
   1d503:	49 89 e7             	mov    %rsp,%r15
   1d506:	4c 89 ff             	mov    %r15,%rdi
   1d509:	c5 f8 77             	vzeroupper 
   1d50c:	ff 15 2e a9 22 00    	callq  *0x22a92e(%rip)        # 247e40 <pthread_mutexattr_init@GLIBC_2.2.5>
   1d512:	4c 89 ff             	mov    %r15,%rdi
   1d515:	31 f6                	xor    %esi,%esi
   1d517:	ff 15 e3 a9 22 00    	callq  *0x22a9e3(%rip)        # 247f00 <pthread_mutexattr_settype@GLIBC_2.2.5>
   1d51d:	48 89 df             	mov    %rbx,%rdi
   1d520:	4c 89 fe             	mov    %r15,%rsi
   1d523:	ff 15 a7 aa 22 00    	callq  *0x22aaa7(%rip)        # 247fd0 <pthread_mutex_init@GLIBC_2.2.5>
   1d529:	4c 89 ff             	mov    %r15,%rdi
   1d52c:	ff 15 ee a8 22 00    	callq  *0x22a8ee(%rip)        # 247e20 <pthread_mutexattr_destroy@GLIBC_2.2.5>
   1d532:	48 89 5c 24 10       	mov    %rbx,0x10(%rsp)
   1d537:	66 c7 44 24 18 00 00 	movw   $0x0,0x18(%rsp)
   1d53e:	8b 04 24             	mov    (%rsp),%eax
   1d541:	89 44 24 1a          	mov    %eax,0x1a(%rsp)
   1d545:	0f b7 44 24 04       	movzwl 0x4(%rsp),%eax
   1d54a:	66 89 44 24 1e       	mov    %ax,0x1e(%rsp)
   1d54f:	bf 30 00 00 00       	mov    $0x30,%edi
   1d554:	ff 15 ae a9 22 00    	callq  *0x22a9ae(%rip)        # 247f08 <malloc@GLIBC_2.2.5>
   1d55a:	48 85 c0             	test   %rax,%rax
   1d55d:	74 62                	je     1d5c1 <_ZN10rayon_core5latch9LockLatch3new17hd5a822851561a199E+0xf1>
   1d55f:	c5 f8 57 c0          	vxorps %xmm0,%xmm0,%xmm0
   1d563:	c5 fc 11 40 10       	vmovups %ymm0,0x10(%rax)
   1d568:	c5 fc 11 00          	vmovups %ymm0,(%rax)
   1d56c:	48 89 04 24          	mov    %rax,(%rsp)
   1d570:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
   1d577:	00 00 
   1d579:	48 89 c7             	mov    %rax,%rdi
   1d57c:	c5 f8 77             	vzeroupper 
   1d57f:	e8 9c 5f 00 00       	callq  23520 <_ZN3std3sys4unix7condvar7Condvar4init17h0d9dfb02507b432dE>
   1d584:	c5 f8 10 04 24       	vmovups (%rsp),%xmm0
   1d589:	c5 f8 29 44 24 20    	vmovaps %xmm0,0x20(%rsp)
        LockLatch {
   1d58f:	c5 f8 10 44 24 10    	vmovups 0x10(%rsp),%xmm0
   1d595:	c4 c1 78 11 06       	vmovups %xmm0,(%r14)
   1d59a:	c5 f8 28 44 24 20    	vmovaps 0x20(%rsp),%xmm0
   1d5a0:	c4 c1 78 11 46 10    	vmovups %xmm0,0x10(%r14)
    }
   1d5a6:	48 83 c4 30          	add    $0x30,%rsp
   1d5aa:	5b                   	pop    %rbx
   1d5ab:	41 5e                	pop    %r14
   1d5ad:	41 5f                	pop    %r15
   1d5af:	c3                   	retq   
   1d5b0:	bf 28 00 00 00       	mov    $0x28,%edi
   1d5b5:	be 08 00 00 00       	mov    $0x8,%esi
   1d5ba:	e8 01 7f fe ff       	callq  54c0 <_ZN5alloc5alloc18handle_alloc_error17hf7bb8682f6c8b1d7E>
   1d5bf:	0f 0b                	ud2    
   1d5c1:	bf 30 00 00 00       	mov    $0x30,%edi
   1d5c6:	be 08 00 00 00       	mov    $0x8,%esi
   1d5cb:	e8 f0 7e fe ff       	callq  54c0 <_ZN5alloc5alloc18handle_alloc_error17hf7bb8682f6c8b1d7E>
   1d5d0:	0f 0b                	ud2    
   1d5d2:	48 89 c3             	mov    %rax,%rbx
   1d5d5:	48 89 e7             	mov    %rsp,%rdi
   1d5d8:	e8 b3 61 00 00       	callq  23790 <_ZN4core3ptr13drop_in_place17h2d183e1f8ab9667fE>
   1d5dd:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
        }
   1d5e2:	e8 c9 01 00 00       	callq  1d7b0 <_ZN4core3ptr13drop_in_place17h301404fadc7a0dd0E>
   1d5e7:	48 89 df             	mov    %rbx,%rdi
   1d5ea:	e8 b1 6a fe ff       	callq  40a0 <_Unwind_Resume@plt>
   1d5ef:	0f 0b                	ud2    
   1d5f1:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1d5f8:	00 00 00 
   1d5fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000001d600 <_ZN4core3ptr13drop_in_place17h5432491734ccae0dE>:
   1d600:	41 56                	push   %r14
   1d602:	53                   	push   %rbx
   1d603:	48 83 ec 18          	sub    $0x18,%rsp
   1d607:	48 89 fb             	mov    %rdi,%rbx
   1d60a:	48 8b 47 10          	mov    0x10(%rdi),%rax
   1d60e:	48 3b 47 18          	cmp    0x18(%rdi),%rax
   1d612:	74 40                	je     1d654 <_ZN4core3ptr13drop_in_place17h5432491734ccae0dE+0x54>
   1d614:	4c 8d 74 24 08       	lea    0x8(%rsp),%r14
   1d619:	eb 0f                	jmp    1d62a <_ZN4core3ptr13drop_in_place17h5432491734ccae0dE+0x2a>
   1d61b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1d620:	48 8b 43 10          	mov    0x10(%rbx),%rax
   1d624:	48 3b 43 18          	cmp    0x18(%rbx),%rax
   1d628:	74 2a                	je     1d654 <_ZN4core3ptr13drop_in_place17h5432491734ccae0dE+0x54>
   1d62a:	48 8d 48 10          	lea    0x10(%rax),%rcx
   1d62e:	48 89 4b 10          	mov    %rcx,0x10(%rbx)
   1d632:	48 8b 08             	mov    (%rax),%rcx
   1d635:	0f b6 40 08          	movzbl 0x8(%rax),%eax
   1d639:	24 01                	and    $0x1,%al
   1d63b:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
   1d640:	88 44 24 10          	mov    %al,0x10(%rsp)
   1d644:	f0 48 ff 09          	lock decq (%rcx)
   1d648:	75 d6                	jne    1d620 <_ZN4core3ptr13drop_in_place17h5432491734ccae0dE+0x20>
   1d64a:	4c 89 f7             	mov    %r14,%rdi
   1d64d:	e8 fe be ff ff       	callq  19550 <_ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17hf09fbc4b768e849cE>
   1d652:	eb cc                	jmp    1d620 <_ZN4core3ptr13drop_in_place17h5432491734ccae0dE+0x20>
   1d654:	48 83 7b 08 00       	cmpq   $0x0,0x8(%rbx)
   1d659:	74 10                	je     1d66b <_ZN4core3ptr13drop_in_place17h5432491734ccae0dE+0x6b>
   1d65b:	48 8b 3b             	mov    (%rbx),%rdi
   1d65e:	48 83 c4 18          	add    $0x18,%rsp
   1d662:	5b                   	pop    %rbx
   1d663:	41 5e                	pop    %r14
   1d665:	ff 25 0d a7 22 00    	jmpq   *0x22a70d(%rip)        # 247d78 <free@GLIBC_2.2.5>
   1d66b:	48 83 c4 18          	add    $0x18,%rsp
   1d66f:	5b                   	pop    %rbx
   1d670:	41 5e                	pop    %r14
   1d672:	c3                   	retq   
   1d673:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1d67a:	00 00 00 
   1d67d:	0f 1f 00             	nopl   (%rax)

000000000001d680 <_ZN4core3ptr13drop_in_place17haab33052ada0010cE>:
   1d680:	41 57                	push   %r15
   1d682:	41 56                	push   %r14
   1d684:	53                   	push   %rbx
   1d685:	48 83 ec 50          	sub    $0x50,%rsp
   1d689:	48 89 fb             	mov    %rdi,%rbx
   1d68c:	48 8b 47 10          	mov    0x10(%rdi),%rax
   1d690:	48 3b 47 18          	cmp    0x18(%rdi),%rax
   1d694:	0f 84 b4 00 00 00    	je     1d74e <_ZN4core3ptr13drop_in_place17haab33052ada0010cE+0xce>
   1d69a:	4c 8d 7c 24 29       	lea    0x29(%rsp),%r15
   1d69f:	4c 8d 74 24 10       	lea    0x10(%rsp),%r14
   1d6a4:	eb 18                	jmp    1d6be <_ZN4core3ptr13drop_in_place17haab33052ada0010cE+0x3e>
   1d6a6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1d6ad:	00 00 00 
   1d6b0:	48 8b 43 10          	mov    0x10(%rbx),%rax
   1d6b4:	48 3b 43 18          	cmp    0x18(%rbx),%rax
   1d6b8:	0f 84 90 00 00 00    	je     1d74e <_ZN4core3ptr13drop_in_place17haab33052ada0010cE+0xce>
   1d6be:	48 8d 48 20          	lea    0x20(%rax),%rcx
   1d6c2:	48 89 4b 10          	mov    %rcx,0x10(%rbx)
   1d6c6:	48 8b 48 10          	mov    0x10(%rax),%rcx
   1d6ca:	48 89 4c 24 20       	mov    %rcx,0x20(%rsp)
   1d6cf:	c5 f8 10 00          	vmovups (%rax),%xmm0
   1d6d3:	c5 f8 29 44 24 10    	vmovaps %xmm0,0x10(%rsp)
   1d6d9:	0f b6 48 18          	movzbl 0x18(%rax),%ecx
   1d6dd:	8b 50 1c             	mov    0x1c(%rax),%edx
   1d6e0:	89 54 24 0b          	mov    %edx,0xb(%rsp)
   1d6e4:	8b 40 19             	mov    0x19(%rax),%eax
   1d6e7:	89 44 24 08          	mov    %eax,0x8(%rsp)
   1d6eb:	80 f9 02             	cmp    $0x2,%cl
   1d6ee:	74 5e                	je     1d74e <_ZN4core3ptr13drop_in_place17haab33052ada0010cE+0xce>
   1d6f0:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
   1d6f5:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
   1d6fa:	c5 f8 28 44 24 10    	vmovaps 0x10(%rsp),%xmm0
   1d700:	c5 f8 29 44 24 30    	vmovaps %xmm0,0x30(%rsp)
   1d706:	8b 54 24 08          	mov    0x8(%rsp),%edx
   1d70a:	8b 74 24 0b          	mov    0xb(%rsp),%esi
   1d70e:	89 14 24             	mov    %edx,(%rsp)
   1d711:	89 74 24 03          	mov    %esi,0x3(%rsp)
   1d715:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   1d71a:	c5 f8 29 44 24 10    	vmovaps %xmm0,0x10(%rsp)
   1d720:	88 4c 24 28          	mov    %cl,0x28(%rsp)
   1d724:	8b 04 24             	mov    (%rsp),%eax
   1d727:	8b 4c 24 03          	mov    0x3(%rsp),%ecx
   1d72b:	41 89 4f 03          	mov    %ecx,0x3(%r15)
   1d72f:	41 89 07             	mov    %eax,(%r15)
   1d732:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   1d737:	f0 48 ff 08          	lock decq (%rax)
   1d73b:	0f 85 6f ff ff ff    	jne    1d6b0 <_ZN4core3ptr13drop_in_place17haab33052ada0010cE+0x30>
   1d741:	4c 89 f7             	mov    %r14,%rdi
   1d744:	e8 07 be ff ff       	callq  19550 <_ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17hf09fbc4b768e849cE>
   1d749:	e9 62 ff ff ff       	jmpq   1d6b0 <_ZN4core3ptr13drop_in_place17haab33052ada0010cE+0x30>
   1d74e:	48 83 7b 08 00       	cmpq   $0x0,0x8(%rbx)
   1d753:	74 12                	je     1d767 <_ZN4core3ptr13drop_in_place17haab33052ada0010cE+0xe7>
   1d755:	48 8b 3b             	mov    (%rbx),%rdi
   1d758:	48 83 c4 50          	add    $0x50,%rsp
   1d75c:	5b                   	pop    %rbx
   1d75d:	41 5e                	pop    %r14
   1d75f:	41 5f                	pop    %r15
   1d761:	ff 25 11 a6 22 00    	jmpq   *0x22a611(%rip)        # 247d78 <free@GLIBC_2.2.5>
   1d767:	48 83 c4 50          	add    $0x50,%rsp
   1d76b:	5b                   	pop    %rbx
   1d76c:	41 5e                	pop    %r14
   1d76e:	41 5f                	pop    %r15
   1d770:	c3                   	retq   
   1d771:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1d778:	00 00 00 
   1d77b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000001d780 <_ZN4core3ptr13drop_in_place17h0060ac73d08aba5cE>:
        self.0.terminate()
   1d780:	48 8b 07             	mov    (%rdi),%rax
   1d783:	48 8b 38             	mov    (%rax),%rdi
   1d786:	f0 48 ff 8f f0 01 00 	lock decq 0x1f0(%rdi)
   1d78d:	00 
   1d78e:	48 8b 87 98 01 00 00 	mov    0x198(%rdi),%rax
        if old_state != AWAKE {
   1d795:	48 85 c0             	test   %rax,%rax
   1d798:	74 0c                	je     1d7a6 <_ZN4core3ptr13drop_in_place17h0060ac73d08aba5cE+0x26>
            self.tickle_cold(worker_index);
   1d79a:	48 81 c7 98 01 00 00 	add    $0x198,%rdi
   1d7a1:	e9 ca a8 ff ff       	jmpq   18070 <_ZN10rayon_core5sleep5Sleep11tickle_cold17h334403ad3bddecd8E>
   1d7a6:	c3                   	retq   
   1d7a7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1d7ae:	00 00 

000000000001d7b0 <_ZN4core3ptr13drop_in_place17h301404fadc7a0dd0E>:
   1d7b0:	53                   	push   %rbx
   1d7b1:	48 89 fb             	mov    %rdi,%rbx
   1d7b4:	48 8b 3f             	mov    (%rdi),%rdi
   1d7b7:	ff 15 7b a6 22 00    	callq  *0x22a67b(%rip)        # 247e38 <pthread_mutex_destroy@GLIBC_2.2.5>
   1d7bd:	48 8b 3b             	mov    (%rbx),%rdi
   1d7c0:	5b                   	pop    %rbx
   1d7c1:	ff 25 b1 a5 22 00    	jmpq   *0x22a5b1(%rip)        # 247d78 <free@GLIBC_2.2.5>
   1d7c7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1d7ce:	00 00 

000000000001d7d0 <_ZN10rayon_core8registry8Registry6inject17h8bda028524c76acfE>:
    pub(super) fn inject(&self, injected_jobs: &[JobRef]) {
   1d7d0:	55                   	push   %rbp
   1d7d1:	41 57                	push   %r15
   1d7d3:	41 56                	push   %r14
   1d7d5:	41 55                	push   %r13
   1d7d7:	41 54                	push   %r12
   1d7d9:	53                   	push   %rbx
   1d7da:	48 81 ec 18 03 00 00 	sub    $0x318,%rsp
   1d7e1:	48 8b 87 70 01 00 00 	mov    0x170(%rdi),%rax
        self.counter.load(Ordering::SeqCst) == 0
   1d7e8:	48 85 c0             	test   %rax,%rax
        assert!(
   1d7eb:	0f 84 ef 02 00 00    	je     1dae0 <_ZN10rayon_core8registry8Registry6inject17h8bda028524c76acfE+0x310>
        for &job_ref in injected_jobs {
   1d7f1:	48 8b 06             	mov    (%rsi),%rax
   1d7f4:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   1d7f9:	48 8b 46 08          	mov    0x8(%rsi),%rax
   1d7fd:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   1d802:	4c 8b b7 80 00 00 00 	mov    0x80(%rdi),%r14
   1d809:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
   1d80e:	48 8b af 88 00 00 00 	mov    0x88(%rdi),%rbp
   1d815:	31 c0                	xor    %eax,%eax
   1d817:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   1d81c:	45 31 ed             	xor    %r13d,%r13d
   1d81f:	eb 25                	jmp    1d846 <_ZN10rayon_core8registry8Registry6inject17h8bda028524c76acfE+0x76>
   1d821:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1d828:	00 00 00 
   1d82b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1d830:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   1d835:	4c 8b b0 80 00 00 00 	mov    0x80(%rax),%r14
   1d83c:	48 8b a8 88 00 00 00 	mov    0x88(%rax),%rbp
   1d843:	49 89 dd             	mov    %rbx,%r13
            let offset = (tail >> SHIFT) % LAP;
   1d846:	45 89 f4             	mov    %r14d,%r12d
   1d849:	41 d1 ec             	shr    %r12d
   1d84c:	41 83 e4 1f          	and    $0x1f,%r12d
            if offset == BLOCK_CAP {
   1d850:	41 83 fc 1f          	cmp    $0x1f,%r12d
   1d854:	0f 84 be 00 00 00    	je     1d918 <_ZN10rayon_core8registry8Registry6inject17h8bda028524c76acfE+0x148>
            if offset + 1 == BLOCK_CAP && next_block.is_none() {
   1d85a:	49 83 fc 1e          	cmp    $0x1e,%r12
   1d85e:	75 42                	jne    1d8a2 <_ZN10rayon_core8registry8Registry6inject17h8bda028524c76acfE+0xd2>
   1d860:	4d 85 ed             	test   %r13,%r13
   1d863:	75 3d                	jne    1d8a2 <_ZN10rayon_core8registry8Registry6inject17h8bda028524c76acfE+0xd2>
   1d865:	ba f0 02 00 00       	mov    $0x2f0,%edx
   1d86a:	48 8d 5c 24 28       	lea    0x28(%rsp),%rbx
   1d86f:	48 89 df             	mov    %rbx,%rdi
   1d872:	31 f6                	xor    %esi,%esi
   1d874:	ff 15 d6 a5 22 00    	callq  *0x22a5d6(%rip)        # 247e50 <memset@GLIBC_2.2.5>
   1d87a:	bf f0 02 00 00       	mov    $0x2f0,%edi
   1d87f:	ff 15 83 a6 22 00    	callq  *0x22a683(%rip)        # 247f08 <malloc@GLIBC_2.2.5>
   1d885:	48 85 c0             	test   %rax,%rax
   1d888:	0f 84 41 02 00 00    	je     1dacf <_ZN10rayon_core8registry8Registry6inject17h8bda028524c76acfE+0x2ff>
   1d88e:	49 89 c5             	mov    %rax,%r13
   1d891:	ba f0 02 00 00       	mov    $0x2f0,%edx
   1d896:	48 89 c7             	mov    %rax,%rdi
   1d899:	48 89 de             	mov    %rbx,%rsi
   1d89c:	ff 15 2e a6 22 00    	callq  *0x22a62e(%rip)        # 247ed0 <memcpy@GLIBC_2.14>
   1d8a2:	48 85 ed             	test   %rbp,%rbp
            if block.is_null() {
   1d8a5:	0f 85 c1 00 00 00    	jne    1d96c <_ZN10rayon_core8registry8Registry6inject17h8bda028524c76acfE+0x19c>
   1d8ab:	ba f0 02 00 00       	mov    $0x2f0,%edx
   1d8b0:	4c 8d 7c 24 28       	lea    0x28(%rsp),%r15
   1d8b5:	4c 89 ff             	mov    %r15,%rdi
   1d8b8:	31 f6                	xor    %esi,%esi
   1d8ba:	ff 15 90 a5 22 00    	callq  *0x22a590(%rip)        # 247e50 <memset@GLIBC_2.2.5>
   1d8c0:	bf f0 02 00 00       	mov    $0x2f0,%edi
   1d8c5:	ff 15 3d a6 22 00    	callq  *0x22a63d(%rip)        # 247f08 <malloc@GLIBC_2.2.5>
   1d8cb:	48 85 c0             	test   %rax,%rax
   1d8ce:	0f 84 fb 01 00 00    	je     1dacf <_ZN10rayon_core8registry8Registry6inject17h8bda028524c76acfE+0x2ff>
   1d8d4:	48 89 c3             	mov    %rax,%rbx
   1d8d7:	ba f0 02 00 00       	mov    $0x2f0,%edx
   1d8dc:	48 89 c7             	mov    %rax,%rdi
   1d8df:	4c 89 fe             	mov    %r15,%rsi
   1d8e2:	ff 15 e8 a5 22 00    	callq  *0x22a5e8(%rip)        # 247ed0 <memcpy@GLIBC_2.14>
   1d8e8:	31 c0                	xor    %eax,%eax
   1d8ea:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
   1d8ef:	f0 48 0f b1 99 88 00 	lock cmpxchg %rbx,0x88(%rcx)
   1d8f6:	00 00 
                if self
   1d8f8:	48 39 c5             	cmp    %rax,%rbp
   1d8fb:	0f 84 84 00 00 00    	je     1d985 <_ZN10rayon_core8registry8Registry6inject17h8bda028524c76acfE+0x1b5>
   1d901:	4d 85 ed             	test   %r13,%r13
   1d904:	0f 84 26 ff ff ff    	je     1d830 <_ZN10rayon_core8registry8Registry6inject17h8bda028524c76acfE+0x60>
   1d90a:	4c 89 ef             	mov    %r13,%rdi
   1d90d:	ff 15 65 a4 22 00    	callq  *0x22a465(%rip)        # 247d78 <free@GLIBC_2.2.5>
   1d913:	e9 18 ff ff ff       	jmpq   1d830 <_ZN10rayon_core8registry8Registry6inject17h8bda028524c76acfE+0x60>
   1d918:	48 8b 5c 24 10       	mov    0x10(%rsp),%rbx
        if self.step.get() <= SPIN_LIMIT {
   1d91d:	83 fb 07             	cmp    $0x7,%ebx
   1d920:	0f 83 c5 00 00 00    	jae    1d9eb <_ZN10rayon_core8registry8Registry6inject17h8bda028524c76acfE+0x21b>
            for _ in 0..1 << self.step.get() {
   1d926:	89 d8                	mov    %ebx,%eax
   1d928:	83 e0 1f             	and    $0x1f,%eax
   1d92b:	83 f8 1f             	cmp    $0x1f,%eax
   1d92e:	74 1d                	je     1d94d <_ZN10rayon_core8registry8Registry6inject17h8bda028524c76acfE+0x17d>
   1d930:	b9 01 00 00 00       	mov    $0x1,%ecx
   1d935:	c4 e2 79 f7 c1       	shlx   %eax,%ecx,%eax
   1d93a:	31 c9                	xor    %ecx,%ecx
   1d93c:	0f 1f 40 00          	nopl   0x0(%rax)
   1d940:	ff c1                	inc    %ecx
   1d942:	f3 90                	pause  
   1d944:	39 c1                	cmp    %eax,%ecx
   1d946:	7c f8                	jl     1d940 <_ZN10rayon_core8registry8Registry6inject17h8bda028524c76acfE+0x170>
        if self.step.get() <= YIELD_LIMIT {
   1d948:	83 fb 0a             	cmp    $0xa,%ebx
   1d94b:	77 02                	ja     1d94f <_ZN10rayon_core8registry8Registry6inject17h8bda028524c76acfE+0x17f>
            self.step.set(self.step.get() + 1);
   1d94d:	ff c3                	inc    %ebx
   1d94f:	48 89 5c 24 10       	mov    %rbx,0x10(%rsp)
   1d954:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   1d959:	4c 8b b0 80 00 00 00 	mov    0x80(%rax),%r14
   1d960:	48 8b a8 88 00 00 00 	mov    0x88(%rax),%rbp
   1d967:	e9 da fe ff ff       	jmpq   1d846 <_ZN10rayon_core8registry8Registry6inject17h8bda028524c76acfE+0x76>
   1d96c:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
            let new_tail = tail + (1 << SHIFT);
   1d971:	49 8d 4e 02          	lea    0x2(%r14),%rcx
   1d975:	4c 89 f0             	mov    %r14,%rax
   1d978:	f0 48 0f b1 8a 80 00 	lock cmpxchg %rcx,0x80(%rdx)
   1d97f:	00 00 
   1d981:	75 20                	jne    1d9a3 <_ZN10rayon_core8registry8Registry6inject17h8bda028524c76acfE+0x1d3>
   1d983:	eb 7a                	jmp    1d9ff <_ZN10rayon_core8registry8Registry6inject17h8bda028524c76acfE+0x22f>
   1d985:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
   1d98a:	48 89 5a 08          	mov    %rbx,0x8(%rdx)
   1d98e:	48 89 dd             	mov    %rbx,%rbp
   1d991:	49 8d 4e 02          	lea    0x2(%r14),%rcx
   1d995:	4c 89 f0             	mov    %r14,%rax
   1d998:	f0 48 0f b1 8a 80 00 	lock cmpxchg %rcx,0x80(%rdx)
   1d99f:	00 00 
                Ok(_) => unsafe {
   1d9a1:	74 5c                	je     1d9ff <_ZN10rayon_core8registry8Registry6inject17h8bda028524c76acfE+0x22f>
   1d9a3:	48 8b aa 88 00 00 00 	mov    0x88(%rdx),%rbp
   1d9aa:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
   1d9af:	83 fe 06             	cmp    $0x6,%esi
        for _ in 0..1 << self.step.get().min(SPIN_LIMIT) {
   1d9b2:	b9 06 00 00 00       	mov    $0x6,%ecx
   1d9b7:	0f 42 ce             	cmovb  %esi,%ecx
   1d9ba:	ba 01 00 00 00       	mov    $0x1,%edx
   1d9bf:	c4 e2 71 f7 ca       	shlx   %ecx,%edx,%ecx
   1d9c4:	31 d2                	xor    %edx,%edx
   1d9c6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1d9cd:	00 00 00 
   1d9d0:	ff c2                	inc    %edx
   1d9d2:	f3 90                	pause  
   1d9d4:	39 ca                	cmp    %ecx,%edx
   1d9d6:	7c f8                	jl     1d9d0 <_ZN10rayon_core8registry8Registry6inject17h8bda028524c76acfE+0x200>
        if self.step.get() <= SPIN_LIMIT {
   1d9d8:	83 fe 07             	cmp    $0x7,%esi
   1d9db:	83 d6 00             	adc    $0x0,%esi
   1d9de:	48 89 74 24 10       	mov    %rsi,0x10(%rsp)
   1d9e3:	49 89 c6             	mov    %rax,%r14
   1d9e6:	e9 5b fe ff ff       	jmpq   1d846 <_ZN10rayon_core8registry8Registry6inject17h8bda028524c76acfE+0x76>
   1d9eb:	ff 15 8f a4 22 00    	callq  *0x22a48f(%rip)        # 247e80 <sched_yield@GLIBC_2.2.5>
        if self.step.get() <= YIELD_LIMIT {
   1d9f1:	83 fb 0a             	cmp    $0xa,%ebx
   1d9f4:	0f 86 53 ff ff ff    	jbe    1d94d <_ZN10rayon_core8registry8Registry6inject17h8bda028524c76acfE+0x17d>
   1d9fa:	e9 50 ff ff ff       	jmpq   1d94f <_ZN10rayon_core8registry8Registry6inject17h8bda028524c76acfE+0x17f>
            if offset + 1 == BLOCK_CAP && next_block.is_none() {
   1d9ff:	49 83 fc 1e          	cmp    $0x1e,%r12
                    if offset + 1 == BLOCK_CAP {
   1da03:	75 5d                	jne    1da62 <_ZN10rayon_core8registry8Registry6inject17h8bda028524c76acfE+0x292>
   1da05:	4c 89 6c 24 28       	mov    %r13,0x28(%rsp)
   1da0a:	4d 85 ed             	test   %r13,%r13
   1da0d:	0f 84 e7 00 00 00    	je     1dafa <_ZN10rayon_core8registry8Registry6inject17h8bda028524c76acfE+0x32a>
   1da13:	49 83 c6 04          	add    $0x4,%r14
   1da17:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   1da1c:	4c 89 a8 88 00 00 00 	mov    %r13,0x88(%rax)
   1da23:	4c 89 b0 80 00 00 00 	mov    %r14,0x80(%rax)
   1da2a:	4c 89 6d 00          	mov    %r13,0x0(%rbp)
   1da2e:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   1da33:	48 89 85 d8 02 00 00 	mov    %rax,0x2d8(%rbp)
   1da3a:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
   1da3f:	48 89 85 e0 02 00 00 	mov    %rax,0x2e0(%rbp)
   1da46:	f0 48 83 8d e8 02 00 	lock orq $0x1,0x2e8(%rbp)
   1da4d:	00 01 
   1da4f:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   1da54:	48 8b 87 18 01 00 00 	mov    0x118(%rdi),%rax
        if old_state != AWAKE {
   1da5b:	48 85 c0             	test   %rax,%rax
   1da5e:	75 40                	jne    1daa0 <_ZN10rayon_core8registry8Registry6inject17h8bda028524c76acfE+0x2d0>
   1da60:	eb 5b                	jmp    1dabd <_ZN10rayon_core8registry8Registry6inject17h8bda028524c76acfE+0x2ed>
   1da62:	4b 8d 04 64          	lea    (%r12,%r12,2),%rax
   1da66:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
   1da6b:	48 89 4c c5 08       	mov    %rcx,0x8(%rbp,%rax,8)
   1da70:	48 8b 4c 24 20       	mov    0x20(%rsp),%rcx
   1da75:	48 89 4c c5 10       	mov    %rcx,0x10(%rbp,%rax,8)
   1da7a:	f0 48 83 4c c5 18 01 	lock orq $0x1,0x18(%rbp,%rax,8)
   1da81:	4d 85 ed             	test   %r13,%r13
   1da84:	74 09                	je     1da8f <_ZN10rayon_core8registry8Registry6inject17h8bda028524c76acfE+0x2bf>
   1da86:	4c 89 ef             	mov    %r13,%rdi
   1da89:	ff 15 e9 a2 22 00    	callq  *0x22a2e9(%rip)        # 247d78 <free@GLIBC_2.2.5>
   1da8f:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   1da94:	48 8b 87 18 01 00 00 	mov    0x118(%rdi),%rax
   1da9b:	48 85 c0             	test   %rax,%rax
   1da9e:	74 1d                	je     1dabd <_ZN10rayon_core8registry8Registry6inject17h8bda028524c76acfE+0x2ed>
            self.tickle_cold(worker_index);
   1daa0:	48 81 c7 18 01 00 00 	add    $0x118,%rdi
   1daa7:	48 81 c4 18 03 00 00 	add    $0x318,%rsp
   1daae:	5b                   	pop    %rbx
   1daaf:	41 5c                	pop    %r12
   1dab1:	41 5d                	pop    %r13
   1dab3:	41 5e                	pop    %r14
   1dab5:	41 5f                	pop    %r15
   1dab7:	5d                   	pop    %rbp
   1dab8:	e9 b3 a5 ff ff       	jmpq   18070 <_ZN10rayon_core5sleep5Sleep11tickle_cold17h334403ad3bddecd8E>
    }
   1dabd:	48 81 c4 18 03 00 00 	add    $0x318,%rsp
   1dac4:	5b                   	pop    %rbx
   1dac5:	41 5c                	pop    %r12
   1dac7:	41 5d                	pop    %r13
   1dac9:	41 5e                	pop    %r14
   1dacb:	41 5f                	pop    %r15
   1dacd:	5d                   	pop    %rbp
   1dace:	c3                   	retq   
   1dacf:	bf f0 02 00 00       	mov    $0x2f0,%edi
   1dad4:	be 08 00 00 00       	mov    $0x8,%esi
   1dad9:	e8 e2 79 fe ff       	callq  54c0 <_ZN5alloc5alloc18handle_alloc_error17hf7bb8682f6c8b1d7E>
   1dade:	0f 0b                	ud2    
        assert!(
   1dae0:	48 8d 3d 5b f6 01 00 	lea    0x1f65b(%rip),%rdi        # 3d142 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x7e2>
   1dae7:	48 8d 15 da 91 22 00 	lea    0x2291da(%rip),%rdx        # 246cc8 <__init_array_end+0xcb8>
   1daee:	be 25 00 00 00       	mov    $0x25,%esi
   1daf3:	e8 58 b2 ff ff       	callq  18d50 <_ZN3std9panicking11begin_panic17hfac3f2f9c857bc78E>
   1daf8:	0f 0b                	ud2    
   1dafa:	48 8d 3d 20 f8 01 00 	lea    0x1f820(%rip),%rdi        # 3d321 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x9c1>
   1db01:	48 8d 15 88 8f 22 00 	lea    0x228f88(%rip),%rdx        # 246a90 <__init_array_end+0xa80>
   1db08:	be 2b 00 00 00       	mov    $0x2b,%esi
   1db0d:	e8 9e 98 fe ff       	callq  73b0 <_ZN4core9panicking5panic17h6861470adfbddef8E>
   1db12:	0f 0b                	ud2    
   1db14:	48 89 c3             	mov    %rax,%rbx
   1db17:	48 8d 7c 24 28       	lea    0x28(%rsp),%rdi
   1db1c:	e8 df 9c ff ff       	callq  17800 <_ZN4core3ptr13drop_in_place17h5f042288d0ed39feE>
   1db21:	48 89 df             	mov    %rbx,%rdi
   1db24:	e8 77 65 fe ff       	callq  40a0 <_Unwind_Resume@plt>
   1db29:	0f 0b                	ud2    
   1db2b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000001db30 <_ZN3std6thread5local4fast12Key$LT$T$GT$14try_initialize17h279f24b71f56ef81E>:
   1db30:	55                   	push   %rbp
   1db31:	48 89 e5             	mov    %rsp,%rbp
   1db34:	41 56                	push   %r14
   1db36:	53                   	push   %rbx
   1db37:	48 83 e4 e0          	and    $0xffffffffffffffe0,%rsp
   1db3b:	48 83 ec 40          	sub    $0x40,%rsp
   1db3f:	64 8a 04 25 40 ff ff 	mov    %fs:0xffffffffffffff40,%al
   1db46:	ff 
   1db47:	84 c0                	test   %al,%al
   1db49:	74 0b                	je     1db56 <_ZN3std6thread5local4fast12Key$LT$T$GT$14try_initialize17h279f24b71f56ef81E+0x26>
   1db4b:	3c 01                	cmp    $0x1,%al
   1db4d:	74 5c                	je     1dbab <_ZN3std6thread5local4fast12Key$LT$T$GT$14try_initialize17h279f24b71f56ef81E+0x7b>
   1db4f:	31 c0                	xor    %eax,%eax
   1db51:	e9 d7 00 00 00       	jmpq   1dc2d <_ZN3std6thread5local4fast12Key$LT$T$GT$14try_initialize17h279f24b71f56ef81E+0xfd>
   1db56:	48 83 3d 82 a2 22 00 	cmpq   $0x0,0x22a282(%rip)        # 247de0 <__cxa_thread_atexit_impl@GLIBC_2.18>
   1db5d:	00 
   1db5e:	74 26                	je     1db86 <_ZN3std6thread5local4fast12Key$LT$T$GT$14try_initialize17h279f24b71f56ef81E+0x56>
   1db60:	64 48 8b 04 25 00 00 	mov    %fs:0x0,%rax
   1db67:	00 00 
   1db69:	48 8d b0 20 ff ff ff 	lea    -0xe0(%rax),%rsi
   1db70:	48 8d 3d c9 00 00 00 	lea    0xc9(%rip),%rdi        # 1dc40 <_ZN3std6thread5local4fast13destroy_value17hc3e414e17931c1f0E>
   1db77:	48 8d 15 9a a4 22 00 	lea    0x22a49a(%rip),%rdx        # 248018 <_rust_extern_with_linkage___dso_handle>
   1db7e:	ff 15 5c a2 22 00    	callq  *0x22a25c(%rip)        # 247de0 <__cxa_thread_atexit_impl@GLIBC_2.18>
   1db84:	eb 1c                	jmp    1dba2 <_ZN3std6thread5local4fast12Key$LT$T$GT$14try_initialize17h279f24b71f56ef81E+0x72>
   1db86:	64 48 8b 04 25 00 00 	mov    %fs:0x0,%rax
   1db8d:	00 00 
   1db8f:	48 8d b8 20 ff ff ff 	lea    -0xe0(%rax),%rdi
   1db96:	48 8d 35 a3 00 00 00 	lea    0xa3(%rip),%rsi        # 1dc40 <_ZN3std6thread5local4fast13destroy_value17hc3e414e17931c1f0E>
   1db9d:	e8 9e 99 00 00       	callq  27540 <_ZN3std10sys_common12thread_local22register_dtor_fallback17h1a2314bd3431add0E>
   1dba2:	64 c6 04 25 40 ff ff 	movb   $0x1,%fs:0xffffffffffffff40
   1dba9:	ff 01 
   1dbab:	48 8d 7c 24 20       	lea    0x20(%rsp),%rdi
        thread_local!(static LOCK_LATCH: LockLatch = LockLatch::new());
   1dbb0:	e8 1b f9 ff ff       	callq  1d4d0 <_ZN10rayon_core5latch9LockLatch3new17hd5a822851561a199E>
   1dbb5:	c5 fd 6f 44 24 20    	vmovdqa 0x20(%rsp),%ymm0
   1dbbb:	64 c5 fc 28 0c 25 20 	vmovaps %fs:0xffffffffffffff20,%ymm1
   1dbc2:	ff ff ff 
   1dbc5:	64 48 8b 1c 25 20 ff 	mov    %fs:0xffffffffffffff20,%rbx
   1dbcc:	ff ff 
   1dbce:	64 c5 fd 7f 04 25 20 	vmovdqa %ymm0,%fs:0xffffffffffffff20
   1dbd5:	ff ff ff 
   1dbd8:	48 85 db             	test   %rbx,%rbx
   1dbdb:	74 40                	je     1dc1d <_ZN3std6thread5local4fast12Key$LT$T$GT$14try_initialize17h279f24b71f56ef81E+0xed>
   1dbdd:	48 89 df             	mov    %rbx,%rdi
   1dbe0:	c5 fc 29 0c 24       	vmovaps %ymm1,(%rsp)
   1dbe5:	c5 f8 77             	vzeroupper 
   1dbe8:	ff 15 4a a2 22 00    	callq  *0x22a24a(%rip)        # 247e38 <pthread_mutex_destroy@GLIBC_2.2.5>
   1dbee:	4c 8b 35 83 a1 22 00 	mov    0x22a183(%rip),%r14        # 247d78 <free@GLIBC_2.2.5>
   1dbf5:	48 89 df             	mov    %rbx,%rdi
   1dbf8:	41 ff d6             	callq  *%r14
   1dbfb:	c5 fd 6f 04 24       	vmovdqa (%rsp),%ymm0
   1dc00:	c4 e3 7d 39 c0 01    	vextracti128 $0x1,%ymm0,%xmm0
   1dc06:	c4 e1 f9 7e c3       	vmovq  %xmm0,%rbx
   1dc0b:	48 89 df             	mov    %rbx,%rdi
   1dc0e:	c5 f8 77             	vzeroupper 
   1dc11:	ff 15 59 a3 22 00    	callq  *0x22a359(%rip)        # 247f70 <pthread_cond_destroy@GLIBC_2.3.2>
   1dc17:	48 89 df             	mov    %rbx,%rdi
   1dc1a:	41 ff d6             	callq  *%r14
   1dc1d:	64 48 8b 04 25 00 00 	mov    %fs:0x0,%rax
   1dc24:	00 00 
   1dc26:	48 8d 80 20 ff ff ff 	lea    -0xe0(%rax),%rax
   1dc2d:	48 8d 65 f0          	lea    -0x10(%rbp),%rsp
   1dc31:	5b                   	pop    %rbx
   1dc32:	41 5e                	pop    %r14
   1dc34:	5d                   	pop    %rbp
   1dc35:	c5 f8 77             	vzeroupper 
   1dc38:	c3                   	retq   
   1dc39:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000001dc40 <_ZN3std6thread5local4fast13destroy_value17hc3e414e17931c1f0E>:
   1dc40:	41 56                	push   %r14
   1dc42:	53                   	push   %rbx
   1dc43:	48 83 ec 28          	sub    $0x28,%rsp
   1dc47:	c5 fc 10 0f          	vmovups (%rdi),%ymm1
   1dc4b:	c5 f8 57 c0          	vxorps %xmm0,%xmm0,%xmm0
   1dc4f:	48 8b 1f             	mov    (%rdi),%rbx
   1dc52:	c5 fc 11 07          	vmovups %ymm0,(%rdi)
   1dc56:	c6 47 20 02          	movb   $0x2,0x20(%rdi)
   1dc5a:	48 85 db             	test   %rbx,%rbx
   1dc5d:	74 49                	je     1dca8 <_ZN3std6thread5local4fast13destroy_value17hc3e414e17931c1f0E+0x68>
   1dc5f:	48 89 df             	mov    %rbx,%rdi
   1dc62:	c5 fc 11 0c 24       	vmovups %ymm1,(%rsp)
   1dc67:	c5 f8 77             	vzeroupper 
   1dc6a:	ff 15 c8 a1 22 00    	callq  *0x22a1c8(%rip)        # 247e38 <pthread_mutex_destroy@GLIBC_2.2.5>
   1dc70:	4c 8b 35 01 a1 22 00 	mov    0x22a101(%rip),%r14        # 247d78 <free@GLIBC_2.2.5>
   1dc77:	48 89 df             	mov    %rbx,%rdi
   1dc7a:	41 ff d6             	callq  *%r14
   1dc7d:	c5 fe 6f 04 24       	vmovdqu (%rsp),%ymm0
   1dc82:	c4 e3 7d 39 c0 01    	vextracti128 $0x1,%ymm0,%xmm0
   1dc88:	c4 e1 f9 7e c3       	vmovq  %xmm0,%rbx
   1dc8d:	48 89 df             	mov    %rbx,%rdi
   1dc90:	c5 f8 77             	vzeroupper 
   1dc93:	ff 15 d7 a2 22 00    	callq  *0x22a2d7(%rip)        # 247f70 <pthread_cond_destroy@GLIBC_2.3.2>
   1dc99:	48 89 df             	mov    %rbx,%rdi
   1dc9c:	4c 89 f0             	mov    %r14,%rax
   1dc9f:	48 83 c4 28          	add    $0x28,%rsp
   1dca3:	5b                   	pop    %rbx
   1dca4:	41 5e                	pop    %r14
   1dca6:	ff e0                	jmpq   *%rax
   1dca8:	48 83 c4 28          	add    $0x28,%rsp
   1dcac:	5b                   	pop    %rbx
   1dcad:	41 5e                	pop    %r14
   1dcaf:	c5 f8 77             	vzeroupper 
   1dcb2:	c3                   	retq   
   1dcb3:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1dcba:	00 00 00 
   1dcbd:	0f 1f 00             	nopl   (%rax)

000000000001dcc0 <_ZN4core3str6traits103_$LT$impl$u20$core..slice..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..RangeTo$LT$usize$GT$$GT$5index28_$u7b$$u7b$closure$u7d$$u7d$17ha84ce7feeb82c1fdE>:
   1dcc0:	50                   	push   %rax
   1dcc1:	48 89 f1             	mov    %rsi,%rcx
   1dcc4:	48 8b 07             	mov    (%rdi),%rax
   1dcc7:	48 8b 77 08          	mov    0x8(%rdi),%rsi
   1dccb:	48 89 c7             	mov    %rax,%rdi
   1dcce:	31 d2                	xor    %edx,%edx
   1dcd0:	e8 ab a4 fe ff       	callq  8180 <_ZN4core3str16slice_error_fail17hc48083e4f6af7f4aE>
   1dcd5:	0f 0b                	ud2    
   1dcd7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1dcde:	00 00 

000000000001dce0 <_ZN4core3str6traits101_$LT$impl$u20$core..slice..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..Range$LT$usize$GT$$GT$5index28_$u7b$$u7b$closure$u7d$$u7d$17hd529a7a73bc70800E>:
   1dce0:	50                   	push   %rax
   1dce1:	48 8b 0f             	mov    (%rdi),%rcx
   1dce4:	48 8b 57 08          	mov    0x8(%rdi),%rdx
   1dce8:	48 8b 01             	mov    (%rcx),%rax
   1dceb:	48 8b 71 08          	mov    0x8(%rcx),%rsi
   1dcef:	48 8b 12             	mov    (%rdx),%rdx
   1dcf2:	48 8b 4f 10          	mov    0x10(%rdi),%rcx
   1dcf6:	48 8b 09             	mov    (%rcx),%rcx
   1dcf9:	48 89 c7             	mov    %rax,%rdi
   1dcfc:	e8 7f a4 fe ff       	callq  8180 <_ZN4core3str16slice_error_fail17hc48083e4f6af7f4aE>
   1dd01:	0f 0b                	ud2    
   1dd03:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1dd0a:	00 00 00 
   1dd0d:	0f 1f 00             	nopl   (%rax)

000000000001dd10 <_ZN14rustc_demangle2v07Printer10print_path17haa095a98ac60aefaE>:
   1dd10:	55                   	push   %rbp
   1dd11:	41 57                	push   %r15
   1dd13:	41 56                	push   %r14
   1dd15:	53                   	push   %rbx
   1dd16:	48 81 ec b8 00 00 00 	sub    $0xb8,%rsp
   1dd1d:	48 89 fb             	mov    %rdi,%rbx
   1dd20:	48 8b 07             	mov    (%rdi),%rax
   1dd23:	48 85 c0             	test   %rax,%rax
   1dd26:	48 0f 45 c7          	cmovne %rdi,%rax
   1dd2a:	0f 84 99 05 00 00    	je     1e2c9 <_ZN14rustc_demangle2v07Printer10print_path17haa095a98ac60aefaE+0x5b9>
   1dd30:	48 8b 48 10          	mov    0x10(%rax),%rcx
   1dd34:	48 39 48 08          	cmp    %rcx,0x8(%rax)
   1dd38:	0f 86 8b 05 00 00    	jbe    1e2c9 <_ZN14rustc_demangle2v07Printer10print_path17haa095a98ac60aefaE+0x5b9>
   1dd3e:	48 8b 10             	mov    (%rax),%rdx
   1dd41:	44 8a 3c 0a          	mov    (%rdx,%rcx,1),%r15b
   1dd45:	48 83 c1 01          	add    $0x1,%rcx
   1dd49:	48 89 48 10          	mov    %rcx,0x10(%rax)
   1dd4d:	41 8d 47 be          	lea    -0x42(%r15),%eax
   1dd51:	3c 17                	cmp    $0x17,%al
   1dd53:	0f 87 70 05 00 00    	ja     1e2c9 <_ZN14rustc_demangle2v07Printer10print_path17haa095a98ac60aefaE+0x5b9>
   1dd59:	89 f5                	mov    %esi,%ebp
   1dd5b:	0f b6 c0             	movzbl %al,%eax
   1dd5e:	48 8d 0d db ca 01 00 	lea    0x1cadb(%rip),%rcx        # 3a840 <_ZN4core7unicode12unicode_data2cc19BITSET_INDEX_CHUNKS17h8a1f39cd536e9344E+0x380>
   1dd65:	48 63 04 81          	movslq (%rcx,%rax,4),%rax
   1dd69:	48 01 c8             	add    %rcx,%rax
   1dd6c:	ff e0                	jmpq   *%rax
   1dd6e:	48 8b 0b             	mov    (%rbx),%rcx
   1dd71:	48 85 c9             	test   %rcx,%rcx
   1dd74:	48 0f 45 cb          	cmovne %rbx,%rcx
   1dd78:	0f 84 4b 05 00 00    	je     1e2c9 <_ZN14rustc_demangle2v07Printer10print_path17haa095a98ac60aefaE+0x5b9>
   1dd7e:	48 8b 71 08          	mov    0x8(%rcx),%rsi
   1dd82:	48 8b 41 10          	mov    0x10(%rcx),%rax
   1dd86:	48 39 c6             	cmp    %rax,%rsi
   1dd89:	0f 86 28 05 00 00    	jbe    1e2b7 <_ZN14rustc_demangle2v07Printer10print_path17haa095a98ac60aefaE+0x5a7>
   1dd8f:	4c 8b 09             	mov    (%rcx),%r9
   1dd92:	41 80 3c 01 73       	cmpb   $0x73,(%r9,%rax,1)
   1dd97:	0f 85 1a 05 00 00    	jne    1e2b7 <_ZN14rustc_demangle2v07Printer10print_path17haa095a98ac60aefaE+0x5a7>
   1dd9d:	48 8d 68 01          	lea    0x1(%rax),%rbp
   1dda1:	48 89 69 10          	mov    %rbp,0x10(%rcx)
   1dda5:	48 39 ee             	cmp    %rbp,%rsi
   1dda8:	0f 86 d5 03 00 00    	jbe    1e183 <_ZN14rustc_demangle2v07Printer10print_path17haa095a98ac60aefaE+0x473>
   1ddae:	41 80 3c 29 5f       	cmpb   $0x5f,(%r9,%rbp,1)
   1ddb3:	0f 85 ca 03 00 00    	jne    1e183 <_ZN14rustc_demangle2v07Printer10print_path17haa095a98ac60aefaE+0x473>
   1ddb9:	48 83 c0 02          	add    $0x2,%rax
   1ddbd:	48 89 41 10          	mov    %rax,0x10(%rcx)
   1ddc1:	48 83 3b 00          	cmpq   $0x0,(%rbx)
   1ddc5:	0f 85 f2 04 00 00    	jne    1e2bd <_ZN14rustc_demangle2v07Printer10print_path17haa095a98ac60aefaE+0x5ad>
   1ddcb:	e9 f9 04 00 00       	jmpq   1e2c9 <_ZN14rustc_demangle2v07Printer10print_path17haa095a98ac60aefaE+0x5b9>
   1ddd0:	48 8b 0b             	mov    (%rbx),%rcx
   1ddd3:	48 85 c9             	test   %rcx,%rcx
   1ddd6:	48 0f 45 cb          	cmovne %rbx,%rcx
   1ddda:	0f 84 e9 04 00 00    	je     1e2c9 <_ZN14rustc_demangle2v07Printer10print_path17haa095a98ac60aefaE+0x5b9>
   1dde0:	4c 8b 51 08          	mov    0x8(%rcx),%r10
   1dde4:	48 8b 41 10          	mov    0x10(%rcx),%rax
   1dde8:	49 39 c2             	cmp    %rax,%r10
   1ddeb:	0f 86 15 02 00 00    	jbe    1e006 <_ZN14rustc_demangle2v07Printer10print_path17haa095a98ac60aefaE+0x2f6>
   1ddf1:	4c 8b 01             	mov    (%rcx),%r8
   1ddf4:	41 80 3c 00 73       	cmpb   $0x73,(%r8,%rax,1)
   1ddf9:	0f 85 07 02 00 00    	jne    1e006 <_ZN14rustc_demangle2v07Printer10print_path17haa095a98ac60aefaE+0x2f6>
   1ddff:	48 8d 78 01          	lea    0x1(%rax),%rdi
   1de03:	48 89 79 10          	mov    %rdi,0x10(%rcx)
   1de07:	49 39 fa             	cmp    %rdi,%r10
   1de0a:	0f 86 da 03 00 00    	jbe    1e1ea <_ZN14rustc_demangle2v07Printer10print_path17haa095a98ac60aefaE+0x4da>
   1de10:	41 80 3c 38 5f       	cmpb   $0x5f,(%r8,%rdi,1)
   1de15:	0f 85 cf 03 00 00    	jne    1e1ea <_ZN14rustc_demangle2v07Printer10print_path17haa095a98ac60aefaE+0x4da>
   1de1b:	48 83 c0 02          	add    $0x2,%rax
   1de1f:	48 89 41 10          	mov    %rax,0x10(%rcx)
   1de23:	31 ed                	xor    %ebp,%ebp
   1de25:	48 ff c5             	inc    %rbp
   1de28:	0f 84 9b 04 00 00    	je     1e2c9 <_ZN14rustc_demangle2v07Printer10print_path17haa095a98ac60aefaE+0x5b9>
   1de2e:	e9 01 06 00 00       	jmpq   1e434 <_ZN14rustc_demangle2v07Printer10print_path17haa095a98ac60aefaE+0x724>
   1de33:	48 8b 33             	mov    (%rbx),%rsi
   1de36:	48 85 f6             	test   %rsi,%rsi
   1de39:	48 0f 45 f3          	cmovne %rbx,%rsi
   1de3d:	0f 84 19 04 00 00    	je     1e25c <_ZN14rustc_demangle2v07Printer10print_path17haa095a98ac60aefaE+0x54c>
   1de43:	4c 8b 4e 10          	mov    0x10(%rsi),%r9
   1de47:	4c 8b 16             	mov    (%rsi),%r10
   1de4a:	4c 8b 76 08          	mov    0x8(%rsi),%r14
   1de4e:	4d 39 ce             	cmp    %r9,%r14
   1de51:	0f 86 c3 02 00 00    	jbe    1e11a <_ZN14rustc_demangle2v07Printer10print_path17haa095a98ac60aefaE+0x40a>
   1de57:	43 80 3c 0a 5f       	cmpb   $0x5f,(%r10,%r9,1)
   1de5c:	0f 85 b8 02 00 00    	jne    1e11a <_ZN14rustc_demangle2v07Printer10print_path17haa095a98ac60aefaE+0x40a>
   1de62:	49 8d 41 01          	lea    0x1(%r9),%rax
   1de66:	48 89 46 10          	mov    %rax,0x10(%rsi)
   1de6a:	31 c0                	xor    %eax,%eax
   1de6c:	e9 f0 03 00 00       	jmpq   1e261 <_ZN14rustc_demangle2v07Printer10print_path17haa095a98ac60aefaE+0x551>
   1de71:	48 8b 03             	mov    (%rbx),%rax
   1de74:	48 85 c0             	test   %rax,%rax
   1de77:	48 0f 45 c3          	cmovne %rbx,%rax
   1de7b:	0f 84 48 04 00 00    	je     1e2c9 <_ZN14rustc_demangle2v07Printer10print_path17haa095a98ac60aefaE+0x5b9>
   1de81:	48 8b 48 10          	mov    0x10(%rax),%rcx
   1de85:	48 39 48 08          	cmp    %rcx,0x8(%rax)
   1de89:	0f 86 3a 04 00 00    	jbe    1e2c9 <_ZN14rustc_demangle2v07Printer10print_path17haa095a98ac60aefaE+0x5b9>
   1de8f:	48 8b 10             	mov    (%rax),%rdx
   1de92:	44 0f b6 3c 0a       	movzbl (%rdx,%rcx,1),%r15d
   1de97:	48 83 c1 01          	add    $0x1,%rcx
   1de9b:	48 89 48 10          	mov    %rcx,0x10(%rax)
   1de9f:	41 8d 47 bf          	lea    -0x41(%r15),%eax
   1dea3:	3c 1a                	cmp    $0x1a,%al
   1dea5:	72 14                	jb     1debb <_ZN14rustc_demangle2v07Printer10print_path17haa095a98ac60aefaE+0x1ab>
   1dea7:	41 80 c7 9f          	add    $0x9f,%r15b
   1deab:	41 80 ff 1a          	cmp    $0x1a,%r15b
   1deaf:	41 bf 00 00 11 00    	mov    $0x110000,%r15d
   1deb5:	0f 83 0e 04 00 00    	jae    1e2c9 <_ZN14rustc_demangle2v07Printer10print_path17haa095a98ac60aefaE+0x5b9>
   1debb:	40 0f b6 f5          	movzbl %bpl,%esi
   1debf:	48 89 df             	mov    %rbx,%rdi
   1dec2:	e8 49 fe ff ff       	callq  1dd10 <_ZN14rustc_demangle2v07Printer10print_path17haa095a98ac60aefaE>
   1dec7:	41 b6 01             	mov    $0x1,%r14b
   1deca:	84 c0                	test   %al,%al
   1decc:	0f 85 73 08 00 00    	jne    1e745 <_ZN14rustc_demangle2v07Printer10print_path17haa095a98ac60aefaE+0xa35>
   1ded2:	48 8b 0b             	mov    (%rbx),%rcx
   1ded5:	48 85 c9             	test   %rcx,%rcx
   1ded8:	48 0f 45 cb          	cmovne %rbx,%rcx
   1dedc:	0f 84 e7 03 00 00    	je     1e2c9 <_ZN14rustc_demangle2v07Printer10print_path17haa095a98ac60aefaE+0x5b9>
   1dee2:	48 8b 71 08          	mov    0x8(%rcx),%rsi
   1dee6:	48 8b 41 10          	mov    0x10(%rcx),%rax
   1deea:	48 39 c6             	cmp    %rax,%rsi
   1deed:	0f 86 93 04 00 00    	jbe    1e386 <_ZN14rustc_demangle2v07Printer10print_path17haa095a98ac60aefaE+0x676>
   1def3:	4c 8b 09             	mov    (%rcx),%r9
   1def6:	41 80 3c 01 73       	cmpb   $0x73,(%r9,%rax,1)
   1defb:	0f 85 85 04 00 00    	jne    1e386 <_ZN14rustc_demangle2v07Printer10print_path17haa095a98ac60aefaE+0x676>
   1df01:	48 8d 68 01          	lea    0x1(%rax),%rbp
   1df05:	48 89 69 10          	mov    %rbp,0x10(%rcx)
   1df09:	48 39 ee             	cmp    %rbp,%rsi
   1df0c:	0f 86 a7 05 00 00    	jbe    1e4b9 <_ZN14rustc_demangle2v07Printer10print_path17haa095a98ac60aefaE+0x7a9>
   1df12:	41 80 3c 29 5f       	cmpb   $0x5f,(%r9,%rbp,1)
   1df17:	0f 85 9c 05 00 00    	jne    1e4b9 <_ZN14rustc_demangle2v07Printer10print_path17haa095a98ac60aefaE+0x7a9>
   1df1d:	48 83 c0 02          	add    $0x2,%rax
   1df21:	48 89 41 10          	mov    %rax,0x10(%rcx)
   1df25:	45 31 f6             	xor    %r14d,%r14d
   1df28:	49 ff c6             	inc    %r14
   1df2b:	0f 84 98 03 00 00    	je     1e2c9 <_ZN14rustc_demangle2v07Printer10print_path17haa095a98ac60aefaE+0x5b9>
   1df31:	e9 02 06 00 00       	jmpq   1e538 <_ZN14rustc_demangle2v07Printer10print_path17haa095a98ac60aefaE+0x828>
   1df36:	40 0f b6 f5          	movzbl %bpl,%esi
   1df3a:	48 89 df             	mov    %rbx,%rdi
   1df3d:	e8 ce fd ff ff       	callq  1dd10 <_ZN14rustc_demangle2v07Printer10print_path17haa095a98ac60aefaE>
   1df42:	41 b6 01             	mov    $0x1,%r14b
   1df45:	84 c0                	test   %al,%al
   1df47:	0f 85 f8 07 00 00    	jne    1e745 <_ZN14rustc_demangle2v07Printer10print_path17haa095a98ac60aefaE+0xa35>
   1df4d:	40 84 ed             	test   %bpl,%bpl
   1df50:	74 23                	je     1df75 <_ZN14rustc_demangle2v07Printer10print_path17haa095a98ac60aefaE+0x265>
   1df52:	48 8b 43 18          	mov    0x18(%rbx),%rax
   1df56:	48 8b 78 20          	mov    0x20(%rax),%rdi
   1df5a:	48 8b 40 28          	mov    0x28(%rax),%rax
   1df5e:	48 8d 35 02 f2 01 00 	lea    0x1f202(%rip),%rsi        # 3d167 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x807>
   1df65:	ba 02 00 00 00       	mov    $0x2,%edx
   1df6a:	ff 50 18             	callq  *0x18(%rax)
   1df6d:	84 c0                	test   %al,%al
   1df6f:	0f 85 d0 07 00 00    	jne    1e745 <_ZN14rustc_demangle2v07Printer10print_path17haa095a98ac60aefaE+0xa35>
   1df75:	48 8b 43 18          	mov    0x18(%rbx),%rax
   1df79:	48 8b 78 20          	mov    0x20(%rax),%rdi
   1df7d:	48 8b 40 28          	mov    0x28(%rax),%rax
   1df81:	48 8d 35 f5 f1 01 00 	lea    0x1f1f5(%rip),%rsi        # 3d17d <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x81d>
   1df88:	ba 01 00 00 00       	mov    $0x1,%edx
   1df8d:	ff 50 18             	callq  *0x18(%rax)
   1df90:	84 c0                	test   %al,%al
   1df92:	0f 85 ad 07 00 00    	jne    1e745 <_ZN14rustc_demangle2v07Printer10print_path17haa095a98ac60aefaE+0xa35>
   1df98:	48 8b 03             	mov    (%rbx),%rax
   1df9b:	48 85 c0             	test   %rax,%rax
   1df9e:	0f 84 93 03 00 00    	je     1e337 <_ZN14rustc_demangle2v07Printer10print_path17haa095a98ac60aefaE+0x627>
   1dfa4:	31 ed                	xor    %ebp,%ebp
   1dfa6:	4c 8d 3d 37 f2 01 00 	lea    0x1f237(%rip),%r15        # 3d1e4 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x884>
   1dfad:	48 8b 4b 10          	mov    0x10(%rbx),%rcx
   1dfb1:	48 39 4b 08          	cmp    %rcx,0x8(%rbx)
   1dfb5:	76 0a                	jbe    1dfc1 <_ZN14rustc_demangle2v07Printer10print_path17haa095a98ac60aefaE+0x2b1>
   1dfb7:	80 3c 08 45          	cmpb   $0x45,(%rax,%rcx,1)
   1dfbb:	0f 84 87 04 00 00    	je     1e448 <_ZN14rustc_demangle2v07Printer10print_path17haa095a98ac60aefaE+0x738>
   1dfc1:	48 85 ed             	test   %rbp,%rbp
   1dfc4:	74 1f                	je     1dfe5 <_ZN14rustc_demangle2v07Printer10print_path17haa095a98ac60aefaE+0x2d5>
   1dfc6:	48 8b 43 18          	mov    0x18(%rbx),%rax
   1dfca:	48 8b 78 20          	mov    0x20(%rax),%rdi
   1dfce:	48 8b 40 28          	mov    0x28(%rax),%rax
   1dfd2:	ba 02 00 00 00       	mov    $0x2,%edx
   1dfd7:	4c 89 fe             	mov    %r15,%rsi
   1dfda:	ff 50 18             	callq  *0x18(%rax)
   1dfdd:	84 c0                	test   %al,%al
   1dfdf:	0f 85 60 07 00 00    	jne    1e745 <_ZN14rustc_demangle2v07Printer10print_path17haa095a98ac60aefaE+0xa35>
   1dfe5:	48 89 df             	mov    %rbx,%rdi
   1dfe8:	e8 b3 25 00 00       	callq  205a0 <_ZN14rustc_demangle2v07Printer17print_generic_arg17h2f9cff311bec59d9E>
   1dfed:	84 c0                	test   %al,%al
   1dfef:	0f 85 50 07 00 00    	jne    1e745 <_ZN14rustc_demangle2v07Printer10print_path17haa095a98ac60aefaE+0xa35>
   1dff5:	48 8b 03             	mov    (%rbx),%rax
   1dff8:	48 83 c5 ff          	add    $0xffffffffffffffff,%rbp
   1dffc:	48 85 c0             	test   %rax,%rax
   1dfff:	75 ac                	jne    1dfad <_ZN14rustc_demangle2v07Printer10print_path17haa095a98ac60aefaE+0x29d>
   1e001:	e9 31 03 00 00       	jmpq   1e337 <_ZN14rustc_demangle2v07Printer10print_path17haa095a98ac60aefaE+0x627>
   1e006:	4c 8d 74 24 38       	lea    0x38(%rsp),%r14
   1e00b:	31 ed                	xor    %ebp,%ebp
   1e00d:	48 8d 7c 24 38       	lea    0x38(%rsp),%rdi
   1e012:	48 89 de             	mov    %rbx,%rsi
   1e015:	e8 56 07 00 00       	callq  1e770 <_ZN14rustc_demangle2v06Parser5ident17hd92f34ac92f9dd66E>
   1e01a:	48 83 7c 24 38 00    	cmpq   $0x0,0x38(%rsp)
   1e020:	0f 84 2b 05 00 00    	je     1e551 <_ZN14rustc_demangle2v07Printer10print_path17haa095a98ac60aefaE+0x841>
   1e026:	41 0f 10 06          	movups (%r14),%xmm0
   1e02a:	41 0f 10 4e 10       	movups 0x10(%r14),%xmm1
   1e02f:	0f 29 4c 24 20       	movaps %xmm1,0x20(%rsp)
   1e034:	0f 29 44 24 10       	movaps %xmm0,0x10(%rsp)
   1e039:	48 8b 73 18          	mov    0x18(%rbx),%rsi
   1e03d:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
   1e042:	e8 99 09 00 00       	callq  1e9e0 <_ZN64_$LT$rustc_demangle..v0..Ident$u20$as$u20$core..fmt..Display$GT$3fmt17h5f7f2ca5a6c8d9e2E>
   1e047:	41 b6 01             	mov    $0x1,%r14b
   1e04a:	84 c0                	test   %al,%al
   1e04c:	0f 85 f3 06 00 00    	jne    1e745 <_ZN14rustc_demangle2v07Printer10print_path17haa095a98ac60aefaE+0xa35>
   1e052:	48 8b 43 18          	mov    0x18(%rbx),%rax
   1e056:	f6 40 30 04          	testb  $0x4,0x30(%rax)
   1e05a:	0f 85 b2 03 00 00    	jne    1e412 <_ZN14rustc_demangle2v07Printer10print_path17haa095a98ac60aefaE+0x702>
   1e060:	48 8b 78 20          	mov    0x20(%rax),%rdi
   1e064:	48 8b 40 28          	mov    0x28(%rax),%rax
   1e068:	48 8d 35 66 f1 01 00 	lea    0x1f166(%rip),%rsi        # 3d1d5 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x875>
   1e06f:	ba 01 00 00 00       	mov    $0x1,%edx
   1e074:	ff 50 18             	callq  *0x18(%rax)
   1e077:	84 c0                	test   %al,%al
   1e079:	0f 85 c3 06 00 00    	jne    1e742 <_ZN14rustc_demangle2v07Printer10print_path17haa095a98ac60aefaE+0xa32>
   1e07f:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   1e083:	4c 8d 84 24 b8 00 00 	lea    0xb8(%rsp),%r8
   1e08a:	00 
   1e08b:	45 31 c9             	xor    %r9d,%r9d
   1e08e:	48 89 e8             	mov    %rbp,%rax
   1e091:	48 c1 e8 04          	shr    $0x4,%rax
   1e095:	40 80 e5 0f          	and    $0xf,%bpl
   1e099:	8d 4d 30             	lea    0x30(%rbp),%ecx
   1e09c:	8d 55 57             	lea    0x57(%rbp),%edx
   1e09f:	40 80 fd 0a          	cmp    $0xa,%bpl
   1e0a3:	0f b6 c9             	movzbl %cl,%ecx
   1e0a6:	0f b6 d2             	movzbl %dl,%edx
   1e0a9:	0f 42 d1             	cmovb  %ecx,%edx
   1e0ac:	41 88 50 ff          	mov    %dl,-0x1(%r8)
   1e0b0:	49 83 c0 ff          	add    $0xffffffffffffffff,%r8
   1e0b4:	49 83 c1 01          	add    $0x1,%r9
   1e0b8:	48 89 c5             	mov    %rax,%rbp
   1e0bb:	48 85 c0             	test   %rax,%rax
   1e0be:	75 d1                	jne    1e091 <_ZN14rustc_demangle2v07Printer10print_path17haa095a98ac60aefaE+0x381>
   1e0c0:	b8 80 00 00 00       	mov    $0x80,%eax
   1e0c5:	4c 29 c8             	sub    %r9,%rax
   1e0c8:	48 3d 81 00 00 00    	cmp    $0x81,%rax
   1e0ce:	0f 83 82 06 00 00    	jae    1e756 <_ZN14rustc_demangle2v07Printer10print_path17haa095a98ac60aefaE+0xa46>
   1e0d4:	48 8d 15 1b f1 01 00 	lea    0x1f11b(%rip),%rdx        # 3d1f6 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x896>
   1e0db:	b9 02 00 00 00       	mov    $0x2,%ecx
   1e0e0:	be 01 00 00 00       	mov    $0x1,%esi
   1e0e5:	e8 06 95 fe ff       	callq  75f0 <_ZN4core3fmt9Formatter12pad_integral17hc55c32e78eb96054E>
   1e0ea:	84 c0                	test   %al,%al
   1e0ec:	0f 85 50 06 00 00    	jne    1e742 <_ZN14rustc_demangle2v07Printer10print_path17haa095a98ac60aefaE+0xa32>
   1e0f2:	48 8b 43 18          	mov    0x18(%rbx),%rax
   1e0f6:	48 8b 78 20          	mov    0x20(%rax),%rdi
   1e0fa:	48 8b 40 28          	mov    0x28(%rax),%rax
   1e0fe:	48 8d 35 d1 f0 01 00 	lea    0x1f0d1(%rip),%rsi        # 3d1d6 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x876>
   1e105:	ba 01 00 00 00       	mov    $0x1,%edx
   1e10a:	ff 50 18             	callq  *0x18(%rax)
   1e10d:	84 c0                	test   %al,%al
   1e10f:	0f 84 fd 02 00 00    	je     1e412 <_ZN14rustc_demangle2v07Printer10print_path17haa095a98ac60aefaE+0x702>
   1e115:	e9 28 06 00 00       	jmpq   1e742 <_ZN14rustc_demangle2v07Printer10print_path17haa095a98ac60aefaE+0xa32>
   1e11a:	45 31 c0             	xor    %r8d,%r8d
   1e11d:	41 bb 3e 00 00 00    	mov    $0x3e,%r11d
   1e123:	4c 89 cf             	mov    %r9,%rdi
   1e126:	31 c0                	xor    %eax,%eax
   1e128:	49 39 fe             	cmp    %rdi,%r14
   1e12b:	0f 86 2e 01 00 00    	jbe    1e25f <_ZN14rustc_demangle2v07Printer10print_path17haa095a98ac60aefaE+0x54f>
   1e131:	41 0f b6 14 3a       	movzbl (%r10,%rdi,1),%edx
   1e136:	80 fa 5f             	cmp    $0x5f,%dl
   1e139:	0f 84 10 01 00 00    	je     1e24f <_ZN14rustc_demangle2v07Printer10print_path17haa095a98ac60aefaE+0x53f>
   1e13f:	8d 4a d0             	lea    -0x30(%rdx),%ecx
   1e142:	80 f9 0a             	cmp    $0xa,%cl
   1e145:	72 1e                	jb     1e165 <_ZN14rustc_demangle2v07Printer10print_path17haa095a98ac60aefaE+0x455>
   1e147:	8d 4a 9f             	lea    -0x61(%rdx),%ecx
   1e14a:	80 f9 1a             	cmp    $0x1a,%cl
   1e14d:	73 05                	jae    1e154 <_ZN14rustc_demangle2v07Printer10print_path17haa095a98ac60aefaE+0x444>
   1e14f:	80 c2 a9             	add    $0xa9,%dl
   1e152:	eb 0f                	jmp    1e163 <_ZN14rustc_demangle2v07Printer10print_path17haa095a98ac60aefaE+0x453>
   1e154:	8d 4a bf             	lea    -0x41(%rdx),%ecx
   1e157:	80 f9 1a             	cmp    $0x1a,%cl
   1e15a:	0f 83 ff 00 00 00    	jae    1e25f <_ZN14rustc_demangle2v07Printer10print_path17haa095a98ac60aefaE+0x54f>
   1e160:	80 c2 e3             	add    $0xe3,%dl
   1e163:	89 d1                	mov    %edx,%ecx
   1e165:	48 83 c7 01          	add    $0x1,%rdi
   1e169:	48 89 7e 10          	mov    %rdi,0x10(%rsi)
   1e16d:	49 f7 e3             	mul    %r11
   1e170:	0f 80 e9 00 00 00    	jo     1e25f <_ZN14rustc_demangle2v07Printer10print_path17haa095a98ac60aefaE+0x54f>
   1e176:	0f b6 c9             	movzbl %cl,%ecx
   1e179:	48 01 c8             	add    %rcx,%rax
   1e17c:	73 aa                	jae    1e128 <_ZN14rustc_demangle2v07Printer10print_path17haa095a98ac60aefaE+0x418>
   1e17e:	e9 dc 00 00 00       	jmpq   1e25f <_ZN14rustc_demangle2v07Printer10print_path17haa095a98ac60aefaE+0x54f>
   1e183:	31 c0                	xor    %eax,%eax
   1e185:	41 b8 3e 00 00 00    	mov    $0x3e,%r8d
   1e18b:	48 39 ee             	cmp    %rbp,%rsi
   1e18e:	0f 86 35 01 00 00    	jbe    1e2c9 <_ZN14rustc_demangle2v07Printer10print_path17haa095a98ac60aefaE+0x5b9>
   1e194:	41 0f b6 14 29       	movzbl (%r9,%rbp,1),%edx
   1e199:	80 fa 5f             	cmp    $0x5f,%dl
   1e19c:	0f 84 02 01 00 00    	je     1e2a4 <_ZN14rustc_demangle2v07Printer10print_path17haa095a98ac60aefaE+0x594>
   1e1a2:	8d 7a d0             	lea    -0x30(%rdx),%edi
   1e1a5:	40 80 ff 0a          	cmp    $0xa,%dil
   1e1a9:	72 20                	jb     1e1cb <_ZN14rustc_demangle2v07Printer10print_path17haa095a98ac60aefaE+0x4bb>
   1e1ab:	8d 7a 9f             	lea    -0x61(%rdx),%edi
   1e1ae:	40 80 ff 1a          	cmp    $0x1a,%dil
   1e1b2:	73 05                	jae    1e1b9 <_ZN14rustc_demangle2v07Printer10print_path17haa095a98ac60aefaE+0x4a9>
   1e1b4:	80 c2 a9             	add    $0xa9,%dl
   1e1b7:	eb 10                	jmp    1e1c9 <_ZN14rustc_demangle2v07Printer10print_path17haa095a98ac60aefaE+0x4b9>
   1e1b9:	8d 7a bf             	lea    -0x41(%rdx),%edi
   1e1bc:	40 80 ff 1a          	cmp    $0x1a,%dil
   1e1c0:	0f 83 03 01 00 00    	jae    1e2c9 <_ZN14rustc_demangle2v07Printer10print_path17haa095a98ac60aefaE+0x5b9>
   1e1c6:	80 c2 e3             	add    $0xe3,%dl
   1e1c9:	89 d7                	mov    %edx,%edi
   1e1cb:	48 83 c5 01          	add    $0x1,%rbp
   1e1cf:	48 89 69 10          	mov    %rbp,0x10(%rcx)
   1e1d3:	49 f7 e0             	mul    %r8
   1e1d6:	0f 80 ed 00 00 00    	jo     1e2c9 <_ZN14rustc_demangle2v07Printer10print_path17haa095a98ac60aefaE+0x5b9>
   1e1dc:	40 0f b6 d7          	movzbl %dil,%edx
   1e1e0:	48 01 d0             	add    %rdx,%rax
   1e1e3:	73 a6                	jae    1e18b <_ZN14rustc_demangle2v07Printer10print_path17haa095a98ac60aefaE+0x47b>
   1e1e5:	e9 df 00 00 00       	jmpq   1e2c9 <_ZN14rustc_demangle2v07Printer10print_path17haa095a98ac60aefaE+0x5b9>
   1e1ea:	31 ed                	xor    %ebp,%ebp
   1e1ec:	41 b9 3e 00 00 00    	mov    $0x3e,%r9d
   1e1f2:	49 39 fa             	cmp    %rdi,%r10
   1e1f5:	0f 86 ce 00 00 00    	jbe    1e2c9 <_ZN14rustc_demangle2v07Printer10print_path17haa095a98ac60aefaE+0x5b9>
   1e1fb:	41 0f b6 04 38       	movzbl (%r8,%rdi,1),%eax
   1e200:	3c 5f                	cmp    $0x5f,%al
   1e202:	0f 84 12 02 00 00    	je     1e41a <_ZN14rustc_demangle2v07Printer10print_path17haa095a98ac60aefaE+0x70a>
   1e208:	8d 70 d0             	lea    -0x30(%rax),%esi
   1e20b:	40 80 fe 0a          	cmp    $0xa,%sil
   1e20f:	72 1c                	jb     1e22d <_ZN14rustc_demangle2v07Printer10print_path17haa095a98ac60aefaE+0x51d>
   1e211:	8d 50 9f             	lea    -0x61(%rax),%edx
   1e214:	80 fa 1a             	cmp    $0x1a,%dl
   1e217:	73 04                	jae    1e21d <_ZN14rustc_demangle2v07Printer10print_path17haa095a98ac60aefaE+0x50d>
   1e219:	04 a9                	add    $0xa9,%al
   1e21b:	eb 0e                	jmp    1e22b <_ZN14rustc_demangle2v07Printer10print_path17haa095a98ac60aefaE+0x51b>
   1e21d:	8d 50 bf             	lea    -0x41(%rax),%edx
   1e220:	80 fa 1a             	cmp    $0x1a,%dl
   1e223:	0f 83 a0 00 00 00    	jae    1e2c9 <_ZN14rustc_demangle2v07Printer10print_path17haa095a98ac60aefaE+0x5b9>
   1e229:	04 e3                	add    $0xe3,%al
   1e22b:	89 c6                	mov    %eax,%esi
   1e22d:	48 83 c7 01          	add    $0x1,%rdi
   1e231:	48 89 79 10          	mov    %rdi,0x10(%rcx)
   1e235:	48 89 e8             	mov    %rbp,%rax
   1e238:	49 f7 e1             	mul    %r9
   1e23b:	0f 80 88 00 00 00    	jo     1e2c9 <_ZN14rustc_demangle2v07Printer10print_path17haa095a98ac60aefaE+0x5b9>
   1e241:	48 89 c5             	mov    %rax,%rbp
   1e244:	40 0f b6 c6          	movzbl %sil,%eax
   1e248:	48 01 c5             	add    %rax,%rbp
   1e24b:	73 a5                	jae    1e1f2 <_ZN14rustc_demangle2v07Printer10print_path17haa095a98ac60aefaE+0x4e2>
   1e24d:	eb 7a                	jmp    1e2c9 <_ZN14rustc_demangle2v07Printer10print_path17haa095a98ac60aefaE+0x5b9>
   1e24f:	48 83 c7 01          	add    $0x1,%rdi
   1e253:	48 89 7e 10          	mov    %rdi,0x10(%rsi)
   1e257:	48 ff c0             	inc    %rax
   1e25a:	75 05                	jne    1e261 <_ZN14rustc_demangle2v07Printer10print_path17haa095a98ac60aefaE+0x551>
   1e25c:	45 31 c0             	xor    %r8d,%r8d
   1e25f:	eb 0e                	jmp    1e26f <_ZN14rustc_demangle2v07Printer10print_path17haa095a98ac60aefaE+0x55f>
   1e261:	49 83 c1 ff          	add    $0xffffffffffffffff,%r9
   1e265:	45 31 c0             	xor    %r8d,%r8d
   1e268:	4c 39 c8             	cmp    %r9,%rax
   1e26b:	4d 0f 42 c2          	cmovb  %r10,%r8
   1e26f:	48 8b 4b 18          	mov    0x18(%rbx),%rcx
   1e273:	8b 53 20             	mov    0x20(%rbx),%edx
   1e276:	4c 89 44 24 38       	mov    %r8,0x38(%rsp)
   1e27b:	4c 89 74 24 40       	mov    %r14,0x40(%rsp)
   1e280:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
   1e285:	48 89 4c 24 50       	mov    %rcx,0x50(%rsp)
   1e28a:	89 54 24 58          	mov    %edx,0x58(%rsp)
   1e28e:	40 0f b6 f5          	movzbl %bpl,%esi
   1e292:	48 8d 7c 24 38       	lea    0x38(%rsp),%rdi
   1e297:	e8 74 fa ff ff       	callq  1dd10 <_ZN14rustc_demangle2v07Printer10print_path17haa095a98ac60aefaE>
   1e29c:	41 89 c6             	mov    %eax,%r14d
   1e29f:	e9 a1 04 00 00       	jmpq   1e745 <_ZN14rustc_demangle2v07Printer10print_path17haa095a98ac60aefaE+0xa35>
   1e2a4:	48 83 c5 01          	add    $0x1,%rbp
   1e2a8:	48 89 69 10          	mov    %rbp,0x10(%rcx)
   1e2ac:	48 ff c0             	inc    %rax
   1e2af:	74 18                	je     1e2c9 <_ZN14rustc_demangle2v07Printer10print_path17haa095a98ac60aefaE+0x5b9>
   1e2b1:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
   1e2b5:	74 12                	je     1e2c9 <_ZN14rustc_demangle2v07Printer10print_path17haa095a98ac60aefaE+0x5b9>
   1e2b7:	48 83 3b 00          	cmpq   $0x0,(%rbx)
   1e2bb:	74 0c                	je     1e2c9 <_ZN14rustc_demangle2v07Printer10print_path17haa095a98ac60aefaE+0x5b9>
   1e2bd:	48 89 df             	mov    %rbx,%rdi
   1e2c0:	e8 0b 0c 00 00       	callq  1eed0 <_ZN14rustc_demangle2v06Parser9skip_path17h92f436ed624d331fE>
   1e2c5:	84 c0                	test   %al,%al
   1e2c7:	74 32                	je     1e2fb <_ZN14rustc_demangle2v07Printer10print_path17haa095a98ac60aefaE+0x5eb>
   1e2c9:	48 c7 03 00 00 00 00 	movq   $0x0,(%rbx)
   1e2d0:	48 8b 43 18          	mov    0x18(%rbx),%rax
   1e2d4:	48 8b 78 20          	mov    0x20(%rax),%rdi
   1e2d8:	48 8b 40 28          	mov    0x28(%rax),%rax
   1e2dc:	48 8b 40 18          	mov    0x18(%rax),%rax
   1e2e0:	48 8d 35 ed ee 01 00 	lea    0x1eeed(%rip),%rsi        # 3d1d4 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x874>
   1e2e7:	ba 01 00 00 00       	mov    $0x1,%edx
   1e2ec:	48 81 c4 b8 00 00 00 	add    $0xb8,%rsp
   1e2f3:	5b                   	pop    %rbx
   1e2f4:	41 5e                	pop    %r14
   1e2f6:	41 5f                	pop    %r15
   1e2f8:	5d                   	pop    %rbp
   1e2f9:	ff e0                	jmpq   *%rax
   1e2fb:	48 8b 43 18          	mov    0x18(%rbx),%rax
   1e2ff:	48 8b 78 20          	mov    0x20(%rax),%rdi
   1e303:	48 8b 40 28          	mov    0x28(%rax),%rax
   1e307:	48 8d 35 6f ee 01 00 	lea    0x1ee6f(%rip),%rsi        # 3d17d <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x81d>
   1e30e:	ba 01 00 00 00       	mov    $0x1,%edx
   1e313:	ff 50 18             	callq  *0x18(%rax)
   1e316:	41 b6 01             	mov    $0x1,%r14b
   1e319:	84 c0                	test   %al,%al
   1e31b:	0f 85 24 04 00 00    	jne    1e745 <_ZN14rustc_demangle2v07Printer10print_path17haa095a98ac60aefaE+0xa35>
   1e321:	48 89 df             	mov    %rbx,%rdi
   1e324:	e8 47 11 00 00       	callq  1f470 <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE>
   1e329:	84 c0                	test   %al,%al
   1e32b:	0f 85 14 04 00 00    	jne    1e745 <_ZN14rustc_demangle2v07Printer10print_path17haa095a98ac60aefaE+0xa35>
   1e331:	41 80 ff 4d          	cmp    $0x4d,%r15b
   1e335:	75 19                	jne    1e350 <_ZN14rustc_demangle2v07Printer10print_path17haa095a98ac60aefaE+0x640>
   1e337:	48 8b 43 18          	mov    0x18(%rbx),%rax
   1e33b:	48 8b 78 20          	mov    0x20(%rax),%rdi
   1e33f:	48 8b 40 28          	mov    0x28(%rax),%rax
   1e343:	48 8b 40 18          	mov    0x18(%rax),%rax
   1e347:	48 8d 35 30 ee 01 00 	lea    0x1ee30(%rip),%rsi        # 3d17e <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x81e>
   1e34e:	eb 97                	jmp    1e2e7 <_ZN14rustc_demangle2v07Printer10print_path17haa095a98ac60aefaE+0x5d7>
   1e350:	48 8b 43 18          	mov    0x18(%rbx),%rax
   1e354:	48 8b 78 20          	mov    0x20(%rax),%rdi
   1e358:	48 8b 40 28          	mov    0x28(%rax),%rax
   1e35c:	48 8d 35 0d e1 01 00 	lea    0x1e10d(%rip),%rsi        # 3c470 <_ZN4core7unicode12unicode_data15grapheme_extend6BITSET17h68ce7f61ccfa32feE+0x9d0>
   1e363:	ba 04 00 00 00       	mov    $0x4,%edx
   1e368:	ff 50 18             	callq  *0x18(%rax)
   1e36b:	84 c0                	test   %al,%al
   1e36d:	0f 85 d2 03 00 00    	jne    1e745 <_ZN14rustc_demangle2v07Printer10print_path17haa095a98ac60aefaE+0xa35>
   1e373:	48 89 df             	mov    %rbx,%rdi
   1e376:	31 f6                	xor    %esi,%esi
   1e378:	e8 93 f9 ff ff       	callq  1dd10 <_ZN14rustc_demangle2v07Printer10print_path17haa095a98ac60aefaE>
   1e37d:	84 c0                	test   %al,%al
   1e37f:	74 b6                	je     1e337 <_ZN14rustc_demangle2v07Printer10print_path17haa095a98ac60aefaE+0x627>
   1e381:	e9 bf 03 00 00       	jmpq   1e745 <_ZN14rustc_demangle2v07Printer10print_path17haa095a98ac60aefaE+0xa35>
   1e386:	48 8d 6c 24 38       	lea    0x38(%rsp),%rbp
   1e38b:	45 31 f6             	xor    %r14d,%r14d
   1e38e:	48 8d 7c 24 38       	lea    0x38(%rsp),%rdi
   1e393:	48 89 de             	mov    %rbx,%rsi
   1e396:	e8 d5 03 00 00       	callq  1e770 <_ZN14rustc_demangle2v06Parser5ident17hd92f34ac92f9dd66E>
   1e39b:	48 83 7c 24 38 00    	cmpq   $0x0,0x38(%rsp)
   1e3a1:	0f 84 aa 01 00 00    	je     1e551 <_ZN14rustc_demangle2v07Printer10print_path17haa095a98ac60aefaE+0x841>
   1e3a7:	0f 10 45 00          	movups 0x0(%rbp),%xmm0
   1e3ab:	0f 10 4d 10          	movups 0x10(%rbp),%xmm1
   1e3af:	0f 29 4c 24 20       	movaps %xmm1,0x20(%rsp)
   1e3b4:	0f 29 44 24 10       	movaps %xmm0,0x10(%rsp)
   1e3b9:	41 81 ff 00 00 11 00 	cmp    $0x110000,%r15d
   1e3c0:	0f 85 8f 00 00 00    	jne    1e455 <_ZN14rustc_demangle2v07Printer10print_path17haa095a98ac60aefaE+0x745>
   1e3c6:	48 83 7c 24 18 00    	cmpq   $0x0,0x18(%rsp)
   1e3cc:	75 08                	jne    1e3d6 <_ZN14rustc_demangle2v07Printer10print_path17haa095a98ac60aefaE+0x6c6>
   1e3ce:	48 83 7c 24 28 00    	cmpq   $0x0,0x28(%rsp)
   1e3d4:	74 3c                	je     1e412 <_ZN14rustc_demangle2v07Printer10print_path17haa095a98ac60aefaE+0x702>
   1e3d6:	48 8b 43 18          	mov    0x18(%rbx),%rax
   1e3da:	48 8b 78 20          	mov    0x20(%rax),%rdi
   1e3de:	48 8b 40 28          	mov    0x28(%rax),%rax
   1e3e2:	48 8d 35 7e ed 01 00 	lea    0x1ed7e(%rip),%rsi        # 3d167 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x807>
   1e3e9:	ba 02 00 00 00       	mov    $0x2,%edx
   1e3ee:	ff 50 18             	callq  *0x18(%rax)
   1e3f1:	41 b6 01             	mov    $0x1,%r14b
   1e3f4:	84 c0                	test   %al,%al
   1e3f6:	0f 85 49 03 00 00    	jne    1e745 <_ZN14rustc_demangle2v07Printer10print_path17haa095a98ac60aefaE+0xa35>
   1e3fc:	48 8b 73 18          	mov    0x18(%rbx),%rsi
   1e400:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
   1e405:	e8 d6 05 00 00       	callq  1e9e0 <_ZN64_$LT$rustc_demangle..v0..Ident$u20$as$u20$core..fmt..Display$GT$3fmt17h5f7f2ca5a6c8d9e2E>
   1e40a:	84 c0                	test   %al,%al
   1e40c:	0f 85 33 03 00 00    	jne    1e745 <_ZN14rustc_demangle2v07Printer10print_path17haa095a98ac60aefaE+0xa35>
   1e412:	45 31 f6             	xor    %r14d,%r14d
   1e415:	e9 2b 03 00 00       	jmpq   1e745 <_ZN14rustc_demangle2v07Printer10print_path17haa095a98ac60aefaE+0xa35>
   1e41a:	48 83 c7 01          	add    $0x1,%rdi
   1e41e:	48 89 79 10          	mov    %rdi,0x10(%rcx)
   1e422:	48 ff c5             	inc    %rbp
   1e425:	0f 84 9e fe ff ff    	je     1e2c9 <_ZN14rustc_demangle2v07Printer10print_path17haa095a98ac60aefaE+0x5b9>
   1e42b:	48 ff c5             	inc    %rbp
   1e42e:	0f 84 95 fe ff ff    	je     1e2c9 <_ZN14rustc_demangle2v07Printer10print_path17haa095a98ac60aefaE+0x5b9>
   1e434:	48 83 3b 00          	cmpq   $0x0,(%rbx)
   1e438:	0f 84 0a 01 00 00    	je     1e548 <_ZN14rustc_demangle2v07Printer10print_path17haa095a98ac60aefaE+0x838>
   1e43e:	4c 8d 74 24 38       	lea    0x38(%rsp),%r14
   1e443:	e9 c5 fb ff ff       	jmpq   1e00d <_ZN14rustc_demangle2v07Printer10print_path17haa095a98ac60aefaE+0x2fd>
   1e448:	48 83 c1 01          	add    $0x1,%rcx
   1e44c:	48 89 4b 10          	mov    %rcx,0x10(%rbx)
   1e450:	e9 e2 fe ff ff       	jmpq   1e337 <_ZN14rustc_demangle2v07Printer10print_path17haa095a98ac60aefaE+0x627>
   1e455:	44 89 7c 24 0c       	mov    %r15d,0xc(%rsp)
   1e45a:	48 8b 43 18          	mov    0x18(%rbx),%rax
   1e45e:	48 8b 78 20          	mov    0x20(%rax),%rdi
   1e462:	48 8b 40 28          	mov    0x28(%rax),%rax
   1e466:	48 8d 35 6a ed 01 00 	lea    0x1ed6a(%rip),%rsi        # 3d1d7 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x877>
   1e46d:	ba 03 00 00 00       	mov    $0x3,%edx
   1e472:	ff 50 18             	callq  *0x18(%rax)
   1e475:	84 c0                	test   %al,%al
   1e477:	0f 85 c5 02 00 00    	jne    1e742 <_ZN14rustc_demangle2v07Printer10print_path17haa095a98ac60aefaE+0xa32>
   1e47d:	41 83 ff 43          	cmp    $0x43,%r15d
   1e481:	0f 84 f1 00 00 00    	je     1e578 <_ZN14rustc_demangle2v07Printer10print_path17haa095a98ac60aefaE+0x868>
   1e487:	41 83 ff 53          	cmp    $0x53,%r15d
   1e48b:	0f 85 0c 01 00 00    	jne    1e59d <_ZN14rustc_demangle2v07Printer10print_path17haa095a98ac60aefaE+0x88d>
   1e491:	48 8b 43 18          	mov    0x18(%rbx),%rax
   1e495:	48 8b 78 20          	mov    0x20(%rax),%rdi
   1e499:	48 8b 40 28          	mov    0x28(%rax),%rax
   1e49d:	48 8d 35 c8 df 01 00 	lea    0x1dfc8(%rip),%rsi        # 3c46c <_ZN4core7unicode12unicode_data15grapheme_extend6BITSET17h68ce7f61ccfa32feE+0x9cc>
   1e4a4:	ba 04 00 00 00       	mov    $0x4,%edx
   1e4a9:	ff 50 18             	callq  *0x18(%rax)
   1e4ac:	84 c0                	test   %al,%al
   1e4ae:	0f 85 8e 02 00 00    	jne    1e742 <_ZN14rustc_demangle2v07Printer10print_path17haa095a98ac60aefaE+0xa32>
   1e4b4:	e9 fa 00 00 00       	jmpq   1e5b3 <_ZN14rustc_demangle2v07Printer10print_path17haa095a98ac60aefaE+0x8a3>
   1e4b9:	45 31 f6             	xor    %r14d,%r14d
   1e4bc:	41 b8 3e 00 00 00    	mov    $0x3e,%r8d
   1e4c2:	48 39 ee             	cmp    %rbp,%rsi
   1e4c5:	0f 86 fe fd ff ff    	jbe    1e2c9 <_ZN14rustc_demangle2v07Printer10print_path17haa095a98ac60aefaE+0x5b9>
   1e4cb:	41 0f b6 04 29       	movzbl (%r9,%rbp,1),%eax
   1e4d0:	3c 5f                	cmp    $0x5f,%al
   1e4d2:	74 4a                	je     1e51e <_ZN14rustc_demangle2v07Printer10print_path17haa095a98ac60aefaE+0x80e>
   1e4d4:	8d 78 d0             	lea    -0x30(%rax),%edi
   1e4d7:	40 80 ff 0a          	cmp    $0xa,%dil
   1e4db:	72 1c                	jb     1e4f9 <_ZN14rustc_demangle2v07Printer10print_path17haa095a98ac60aefaE+0x7e9>
   1e4dd:	8d 50 9f             	lea    -0x61(%rax),%edx
   1e4e0:	80 fa 1a             	cmp    $0x1a,%dl
   1e4e3:	73 04                	jae    1e4e9 <_ZN14rustc_demangle2v07Printer10print_path17haa095a98ac60aefaE+0x7d9>
   1e4e5:	04 a9                	add    $0xa9,%al
   1e4e7:	eb 0e                	jmp    1e4f7 <_ZN14rustc_demangle2v07Printer10print_path17haa095a98ac60aefaE+0x7e7>
   1e4e9:	8d 50 bf             	lea    -0x41(%rax),%edx
   1e4ec:	80 fa 1a             	cmp    $0x1a,%dl
   1e4ef:	0f 83 d4 fd ff ff    	jae    1e2c9 <_ZN14rustc_demangle2v07Printer10print_path17haa095a98ac60aefaE+0x5b9>
   1e4f5:	04 e3                	add    $0xe3,%al
   1e4f7:	89 c7                	mov    %eax,%edi
   1e4f9:	48 83 c5 01          	add    $0x1,%rbp
   1e4fd:	48 89 69 10          	mov    %rbp,0x10(%rcx)
   1e501:	4c 89 f0             	mov    %r14,%rax
   1e504:	49 f7 e0             	mul    %r8
   1e507:	0f 80 bc fd ff ff    	jo     1e2c9 <_ZN14rustc_demangle2v07Printer10print_path17haa095a98ac60aefaE+0x5b9>
   1e50d:	49 89 c6             	mov    %rax,%r14
   1e510:	40 0f b6 c7          	movzbl %dil,%eax
   1e514:	49 01 c6             	add    %rax,%r14
   1e517:	73 a9                	jae    1e4c2 <_ZN14rustc_demangle2v07Printer10print_path17haa095a98ac60aefaE+0x7b2>
   1e519:	e9 ab fd ff ff       	jmpq   1e2c9 <_ZN14rustc_demangle2v07Printer10print_path17haa095a98ac60aefaE+0x5b9>
   1e51e:	48 83 c5 01          	add    $0x1,%rbp
   1e522:	48 89 69 10          	mov    %rbp,0x10(%rcx)
   1e526:	49 ff c6             	inc    %r14
   1e529:	0f 84 9a fd ff ff    	je     1e2c9 <_ZN14rustc_demangle2v07Printer10print_path17haa095a98ac60aefaE+0x5b9>
   1e52f:	49 ff c6             	inc    %r14
   1e532:	0f 84 91 fd ff ff    	je     1e2c9 <_ZN14rustc_demangle2v07Printer10print_path17haa095a98ac60aefaE+0x5b9>
   1e538:	48 83 3b 00          	cmpq   $0x0,(%rbx)
   1e53c:	74 0a                	je     1e548 <_ZN14rustc_demangle2v07Printer10print_path17haa095a98ac60aefaE+0x838>
   1e53e:	48 8d 6c 24 38       	lea    0x38(%rsp),%rbp
   1e543:	e9 46 fe ff ff       	jmpq   1e38e <_ZN14rustc_demangle2v07Printer10print_path17haa095a98ac60aefaE+0x67e>
   1e548:	48 c7 44 24 38 00 00 	movq   $0x0,0x38(%rsp)
   1e54f:	00 00 
   1e551:	48 c7 03 00 00 00 00 	movq   $0x0,(%rbx)
   1e558:	48 8b 43 18          	mov    0x18(%rbx),%rax
   1e55c:	48 8b 78 20          	mov    0x20(%rax),%rdi
   1e560:	48 8b 40 28          	mov    0x28(%rax),%rax
   1e564:	48 8d 35 69 ec 01 00 	lea    0x1ec69(%rip),%rsi        # 3d1d4 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x874>
   1e56b:	ba 01 00 00 00       	mov    $0x1,%edx
   1e570:	ff 50 18             	callq  *0x18(%rax)
   1e573:	e9 24 fd ff ff       	jmpq   1e29c <_ZN14rustc_demangle2v07Printer10print_path17haa095a98ac60aefaE+0x58c>
   1e578:	48 8b 43 18          	mov    0x18(%rbx),%rax
   1e57c:	48 8b 78 20          	mov    0x20(%rax),%rdi
   1e580:	48 8b 40 28          	mov    0x28(%rax),%rax
   1e584:	48 8d 35 4f ec 01 00 	lea    0x1ec4f(%rip),%rsi        # 3d1da <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x87a>
   1e58b:	ba 07 00 00 00       	mov    $0x7,%edx
   1e590:	ff 50 18             	callq  *0x18(%rax)
   1e593:	84 c0                	test   %al,%al
   1e595:	0f 85 a7 01 00 00    	jne    1e742 <_ZN14rustc_demangle2v07Printer10print_path17haa095a98ac60aefaE+0xa32>
   1e59b:	eb 16                	jmp    1e5b3 <_ZN14rustc_demangle2v07Printer10print_path17haa095a98ac60aefaE+0x8a3>
   1e59d:	48 8b 73 18          	mov    0x18(%rbx),%rsi
   1e5a1:	48 8d 7c 24 0c       	lea    0xc(%rsp),%rdi
   1e5a6:	e8 25 c4 fe ff       	callq  a9d0 <_ZN43_$LT$char$u20$as$u20$core..fmt..Display$GT$3fmt17h7792e6955f0fb677E>
   1e5ab:	84 c0                	test   %al,%al
   1e5ad:	0f 85 8f 01 00 00    	jne    1e742 <_ZN14rustc_demangle2v07Printer10print_path17haa095a98ac60aefaE+0xa32>
   1e5b3:	48 83 7c 24 18 00    	cmpq   $0x0,0x18(%rsp)
   1e5b9:	75 08                	jne    1e5c3 <_ZN14rustc_demangle2v07Printer10print_path17haa095a98ac60aefaE+0x8b3>
   1e5bb:	48 83 7c 24 28 00    	cmpq   $0x0,0x28(%rsp)
   1e5c1:	74 39                	je     1e5fc <_ZN14rustc_demangle2v07Printer10print_path17haa095a98ac60aefaE+0x8ec>
   1e5c3:	48 8b 43 18          	mov    0x18(%rbx),%rax
   1e5c7:	48 8b 78 20          	mov    0x20(%rax),%rdi
   1e5cb:	48 8b 40 28          	mov    0x28(%rax),%rax
   1e5cf:	48 8d 35 0b ec 01 00 	lea    0x1ec0b(%rip),%rsi        # 3d1e1 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x881>
   1e5d6:	ba 01 00 00 00       	mov    $0x1,%edx
   1e5db:	ff 50 18             	callq  *0x18(%rax)
   1e5de:	84 c0                	test   %al,%al
   1e5e0:	0f 85 5c 01 00 00    	jne    1e742 <_ZN14rustc_demangle2v07Printer10print_path17haa095a98ac60aefaE+0xa32>
   1e5e6:	48 8b 73 18          	mov    0x18(%rbx),%rsi
   1e5ea:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
   1e5ef:	e8 ec 03 00 00       	callq  1e9e0 <_ZN64_$LT$rustc_demangle..v0..Ident$u20$as$u20$core..fmt..Display$GT$3fmt17h5f7f2ca5a6c8d9e2E>
   1e5f4:	84 c0                	test   %al,%al
   1e5f6:	0f 85 46 01 00 00    	jne    1e742 <_ZN14rustc_demangle2v07Printer10print_path17haa095a98ac60aefaE+0xa32>
   1e5fc:	48 8b 43 18          	mov    0x18(%rbx),%rax
   1e600:	48 8b 78 20          	mov    0x20(%rax),%rdi
   1e604:	48 8b 40 28          	mov    0x28(%rax),%rax
   1e608:	48 8d 35 d3 eb 01 00 	lea    0x1ebd3(%rip),%rsi        # 3d1e2 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x882>
   1e60f:	ba 01 00 00 00       	mov    $0x1,%edx
   1e614:	ff 50 18             	callq  *0x18(%rax)
   1e617:	84 c0                	test   %al,%al
   1e619:	0f 85 23 01 00 00    	jne    1e742 <_ZN14rustc_demangle2v07Printer10print_path17haa095a98ac60aefaE+0xa32>
   1e61f:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   1e623:	b9 27 00 00 00       	mov    $0x27,%ecx
   1e628:	49 81 fe 10 27 00 00 	cmp    $0x2710,%r14
   1e62f:	72 68                	jb     1e699 <_ZN14rustc_demangle2v07Printer10print_path17haa095a98ac60aefaE+0x989>
   1e631:	b9 27 00 00 00       	mov    $0x27,%ecx
   1e636:	49 b8 4b 59 86 38 d6 	movabs $0x346dc5d63886594b,%r8
   1e63d:	c5 6d 34 
   1e640:	4c 8d 0d 23 d0 01 00 	lea    0x1d023(%rip),%r9        # 3b66a <_ZN4core3str15UTF8_CHAR_WIDTH17h639c7c3d8ce7e983E+0x112>
   1e647:	4c 89 f0             	mov    %r14,%rax
   1e64a:	49 f7 e0             	mul    %r8
   1e64d:	48 c1 ea 0b          	shr    $0xb,%rdx
   1e651:	69 c2 10 27 00 00    	imul   $0x2710,%edx,%eax
   1e657:	44 89 f6             	mov    %r14d,%esi
   1e65a:	29 c6                	sub    %eax,%esi
   1e65c:	0f b7 c6             	movzwl %si,%eax
   1e65f:	c1 e8 02             	shr    $0x2,%eax
   1e662:	69 c0 7b 14 00 00    	imul   $0x147b,%eax,%eax
   1e668:	c1 e8 11             	shr    $0x11,%eax
   1e66b:	6b e8 64             	imul   $0x64,%eax,%ebp
   1e66e:	29 ee                	sub    %ebp,%esi
   1e670:	0f b7 f6             	movzwl %si,%esi
   1e673:	41 0f b7 04 41       	movzwl (%r9,%rax,2),%eax
   1e678:	66 89 44 0c 34       	mov    %ax,0x34(%rsp,%rcx,1)
   1e67d:	41 0f b7 04 71       	movzwl (%r9,%rsi,2),%eax
   1e682:	66 89 44 0c 36       	mov    %ax,0x36(%rsp,%rcx,1)
   1e687:	48 83 c1 fc          	add    $0xfffffffffffffffc,%rcx
   1e68b:	49 81 fe ff e0 f5 05 	cmp    $0x5f5e0ff,%r14
   1e692:	49 89 d6             	mov    %rdx,%r14
   1e695:	77 b0                	ja     1e647 <_ZN14rustc_demangle2v07Printer10print_path17haa095a98ac60aefaE+0x937>
   1e697:	eb 03                	jmp    1e69c <_ZN14rustc_demangle2v07Printer10print_path17haa095a98ac60aefaE+0x98c>
   1e699:	4c 89 f2             	mov    %r14,%rdx
   1e69c:	48 83 fa 63          	cmp    $0x63,%rdx
   1e6a0:	7e 2e                	jle    1e6d0 <_ZN14rustc_demangle2v07Printer10print_path17haa095a98ac60aefaE+0x9c0>
   1e6a2:	0f b7 c2             	movzwl %dx,%eax
   1e6a5:	c1 e8 02             	shr    $0x2,%eax
   1e6a8:	69 c0 7b 14 00 00    	imul   $0x147b,%eax,%eax
   1e6ae:	c1 e8 11             	shr    $0x11,%eax
   1e6b1:	6b f0 64             	imul   $0x64,%eax,%esi
   1e6b4:	29 f2                	sub    %esi,%edx
   1e6b6:	0f b7 d2             	movzwl %dx,%edx
   1e6b9:	48 8d 35 aa cf 01 00 	lea    0x1cfaa(%rip),%rsi        # 3b66a <_ZN4core3str15UTF8_CHAR_WIDTH17h639c7c3d8ce7e983E+0x112>
   1e6c0:	0f b7 14 56          	movzwl (%rsi,%rdx,2),%edx
   1e6c4:	66 89 54 0c 36       	mov    %dx,0x36(%rsp,%rcx,1)
   1e6c9:	48 83 c1 fe          	add    $0xfffffffffffffffe,%rcx
   1e6cd:	48 89 c2             	mov    %rax,%rdx
   1e6d0:	48 83 fa 0a          	cmp    $0xa,%rdx
   1e6d4:	7d 0d                	jge    1e6e3 <_ZN14rustc_demangle2v07Printer10print_path17haa095a98ac60aefaE+0x9d3>
   1e6d6:	80 c2 30             	add    $0x30,%dl
   1e6d9:	88 54 0c 37          	mov    %dl,0x37(%rsp,%rcx,1)
   1e6dd:	48 83 c1 ff          	add    $0xffffffffffffffff,%rcx
   1e6e1:	eb 14                	jmp    1e6f7 <_ZN14rustc_demangle2v07Printer10print_path17haa095a98ac60aefaE+0x9e7>
   1e6e3:	48 8d 05 80 cf 01 00 	lea    0x1cf80(%rip),%rax        # 3b66a <_ZN4core3str15UTF8_CHAR_WIDTH17h639c7c3d8ce7e983E+0x112>
   1e6ea:	0f b7 04 50          	movzwl (%rax,%rdx,2),%eax
   1e6ee:	66 89 44 0c 36       	mov    %ax,0x36(%rsp,%rcx,1)
   1e6f3:	48 83 c1 fe          	add    $0xfffffffffffffffe,%rcx
   1e6f7:	4c 8d 04 0c          	lea    (%rsp,%rcx,1),%r8
   1e6fb:	49 83 c0 38          	add    $0x38,%r8
   1e6ff:	41 b9 27 00 00 00    	mov    $0x27,%r9d
   1e705:	49 29 c9             	sub    %rcx,%r9
   1e708:	48 8d 15 29 ed 01 00 	lea    0x1ed29(%rip),%rdx        # 3d438 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0xad8>
   1e70f:	be 01 00 00 00       	mov    $0x1,%esi
   1e714:	31 c9                	xor    %ecx,%ecx
   1e716:	e8 d5 8e fe ff       	callq  75f0 <_ZN4core3fmt9Formatter12pad_integral17hc55c32e78eb96054E>
   1e71b:	84 c0                	test   %al,%al
   1e71d:	75 23                	jne    1e742 <_ZN14rustc_demangle2v07Printer10print_path17haa095a98ac60aefaE+0xa32>
   1e71f:	48 8b 43 18          	mov    0x18(%rbx),%rax
   1e723:	48 8b 78 20          	mov    0x20(%rax),%rdi
   1e727:	48 8b 40 28          	mov    0x28(%rax),%rax
   1e72b:	48 8d 35 b1 ea 01 00 	lea    0x1eab1(%rip),%rsi        # 3d1e3 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x883>
   1e732:	ba 01 00 00 00       	mov    $0x1,%edx
   1e737:	ff 50 18             	callq  *0x18(%rax)
   1e73a:	84 c0                	test   %al,%al
   1e73c:	0f 84 d0 fc ff ff    	je     1e412 <_ZN14rustc_demangle2v07Printer10print_path17haa095a98ac60aefaE+0x702>
   1e742:	41 b6 01             	mov    $0x1,%r14b
   1e745:	44 89 f0             	mov    %r14d,%eax
   1e748:	48 81 c4 b8 00 00 00 	add    $0xb8,%rsp
   1e74f:	5b                   	pop    %rbx
   1e750:	41 5e                	pop    %r14
   1e752:	41 5f                	pop    %r15
   1e754:	5d                   	pop    %rbp
   1e755:	c3                   	retq   
   1e756:	be 80 00 00 00       	mov    $0x80,%esi
   1e75b:	48 89 c7             	mov    %rax,%rdi
   1e75e:	e8 ed 94 fe ff       	callq  7c50 <_ZN4core5slice22slice_index_order_fail17h7bcf2f94ba9e06deE>
   1e763:	0f 0b                	ud2    
   1e765:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1e76c:	00 00 00 
   1e76f:	90                   	nop

000000000001e770 <_ZN14rustc_demangle2v06Parser5ident17hd92f34ac92f9dd66E>:
   1e770:	41 57                	push   %r15
   1e772:	41 56                	push   %r14
   1e774:	53                   	push   %rbx
   1e775:	48 83 ec 40          	sub    $0x40,%rsp
   1e779:	4c 8b 4e 08          	mov    0x8(%rsi),%r9
   1e77d:	48 8b 4e 10          	mov    0x10(%rsi),%rcx
   1e781:	49 39 c9             	cmp    %rcx,%r9
   1e784:	76 1b                	jbe    1e7a1 <_ZN14rustc_demangle2v06Parser5ident17hd92f34ac92f9dd66E+0x31>
   1e786:	48 8b 06             	mov    (%rsi),%rax
   1e789:	80 3c 08 75          	cmpb   $0x75,(%rax,%rcx,1)
   1e78d:	75 12                	jne    1e7a1 <_ZN14rustc_demangle2v06Parser5ident17hd92f34ac92f9dd66E+0x31>
   1e78f:	48 83 c1 01          	add    $0x1,%rcx
   1e793:	48 89 4e 10          	mov    %rcx,0x10(%rsi)
   1e797:	41 b2 01             	mov    $0x1,%r10b
   1e79a:	49 39 c9             	cmp    %rcx,%r9
   1e79d:	77 0a                	ja     1e7a9 <_ZN14rustc_demangle2v06Parser5ident17hd92f34ac92f9dd66E+0x39>
   1e79f:	eb 7f                	jmp    1e820 <_ZN14rustc_demangle2v06Parser5ident17hd92f34ac92f9dd66E+0xb0>
   1e7a1:	45 31 d2             	xor    %r10d,%r10d
   1e7a4:	49 39 c9             	cmp    %rcx,%r9
   1e7a7:	76 77                	jbe    1e820 <_ZN14rustc_demangle2v06Parser5ident17hd92f34ac92f9dd66E+0xb0>
   1e7a9:	4c 8b 06             	mov    (%rsi),%r8
   1e7ac:	41 8a 04 08          	mov    (%r8,%rcx,1),%al
   1e7b0:	04 d0                	add    $0xd0,%al
   1e7b2:	3c 0a                	cmp    $0xa,%al
   1e7b4:	73 6a                	jae    1e820 <_ZN14rustc_demangle2v06Parser5ident17hd92f34ac92f9dd66E+0xb0>
   1e7b6:	48 83 c1 01          	add    $0x1,%rcx
   1e7ba:	48 89 4e 10          	mov    %rcx,0x10(%rsi)
   1e7be:	84 c0                	test   %al,%al
   1e7c0:	74 37                	je     1e7f9 <_ZN14rustc_demangle2v06Parser5ident17hd92f34ac92f9dd66E+0x89>
   1e7c2:	0f b6 c0             	movzbl %al,%eax
   1e7c5:	41 bb 0a 00 00 00    	mov    $0xa,%r11d
   1e7cb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1e7d0:	49 39 c9             	cmp    %rcx,%r9
   1e7d3:	74 26                	je     1e7fb <_ZN14rustc_demangle2v06Parser5ident17hd92f34ac92f9dd66E+0x8b>
   1e7d5:	41 0f b6 1c 08       	movzbl (%r8,%rcx,1),%ebx
   1e7da:	80 c3 d0             	add    $0xd0,%bl
   1e7dd:	80 fb 09             	cmp    $0x9,%bl
   1e7e0:	77 19                	ja     1e7fb <_ZN14rustc_demangle2v06Parser5ident17hd92f34ac92f9dd66E+0x8b>
   1e7e2:	48 83 c1 01          	add    $0x1,%rcx
   1e7e6:	48 89 4e 10          	mov    %rcx,0x10(%rsi)
   1e7ea:	49 f7 e3             	mul    %r11
   1e7ed:	70 31                	jo     1e820 <_ZN14rustc_demangle2v06Parser5ident17hd92f34ac92f9dd66E+0xb0>
   1e7ef:	0f b6 d3             	movzbl %bl,%edx
   1e7f2:	48 01 d0             	add    %rdx,%rax
   1e7f5:	73 d9                	jae    1e7d0 <_ZN14rustc_demangle2v06Parser5ident17hd92f34ac92f9dd66E+0x60>
   1e7f7:	eb 27                	jmp    1e820 <_ZN14rustc_demangle2v06Parser5ident17hd92f34ac92f9dd66E+0xb0>
   1e7f9:	31 c0                	xor    %eax,%eax
   1e7fb:	49 39 c9             	cmp    %rcx,%r9
   1e7fe:	76 0f                	jbe    1e80f <_ZN14rustc_demangle2v06Parser5ident17hd92f34ac92f9dd66E+0x9f>
   1e800:	41 80 3c 08 5f       	cmpb   $0x5f,(%r8,%rcx,1)
   1e805:	75 08                	jne    1e80f <_ZN14rustc_demangle2v06Parser5ident17hd92f34ac92f9dd66E+0x9f>
   1e807:	48 83 c1 01          	add    $0x1,%rcx
   1e80b:	48 89 4e 10          	mov    %rcx,0x10(%rsi)
   1e80f:	48 89 ca             	mov    %rcx,%rdx
   1e812:	48 01 c2             	add    %rax,%rdx
   1e815:	72 09                	jb     1e820 <_ZN14rustc_demangle2v06Parser5ident17hd92f34ac92f9dd66E+0xb0>
   1e817:	48 89 56 10          	mov    %rdx,0x10(%rsi)
   1e81b:	4c 39 ca             	cmp    %r9,%rdx
   1e81e:	76 11                	jbe    1e831 <_ZN14rustc_demangle2v06Parser5ident17hd92f34ac92f9dd66E+0xc1>
   1e820:	48 c7 07 00 00 00 00 	movq   $0x0,(%rdi)
   1e827:	48 83 c4 40          	add    $0x40,%rsp
   1e82b:	5b                   	pop    %rbx
   1e82c:	41 5e                	pop    %r14
   1e82e:	41 5f                	pop    %r15
   1e830:	c3                   	retq   
   1e831:	4c 89 44 24 30       	mov    %r8,0x30(%rsp)
   1e836:	4c 89 4c 24 38       	mov    %r9,0x38(%rsp)
   1e83b:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
   1e840:	48 89 54 24 10       	mov    %rdx,0x10(%rsp)
   1e845:	49 89 d3             	mov    %rdx,%r11
   1e848:	49 29 cb             	sub    %rcx,%r11
   1e84b:	0f 82 59 01 00 00    	jb     1e9aa <_ZN14rustc_demangle2v06Parser5ident17hd92f34ac92f9dd66E+0x23a>
   1e851:	49 39 c9             	cmp    %rcx,%r9
   1e854:	74 11                	je     1e867 <_ZN14rustc_demangle2v06Parser5ident17hd92f34ac92f9dd66E+0xf7>
   1e856:	0f 86 4e 01 00 00    	jbe    1e9aa <_ZN14rustc_demangle2v06Parser5ident17hd92f34ac92f9dd66E+0x23a>
   1e85c:	41 80 3c 08 bf       	cmpb   $0xbf,(%r8,%rcx,1)
   1e861:	0f 8e 43 01 00 00    	jle    1e9aa <_ZN14rustc_demangle2v06Parser5ident17hd92f34ac92f9dd66E+0x23a>
   1e867:	48 85 d2             	test   %rdx,%rdx
   1e86a:	74 16                	je     1e882 <_ZN14rustc_demangle2v06Parser5ident17hd92f34ac92f9dd66E+0x112>
   1e86c:	49 39 d1             	cmp    %rdx,%r9
   1e86f:	74 11                	je     1e882 <_ZN14rustc_demangle2v06Parser5ident17hd92f34ac92f9dd66E+0x112>
   1e871:	0f 86 33 01 00 00    	jbe    1e9aa <_ZN14rustc_demangle2v06Parser5ident17hd92f34ac92f9dd66E+0x23a>
   1e877:	41 80 3c 10 bf       	cmpb   $0xbf,(%r8,%rdx,1)
   1e87c:	0f 8e 28 01 00 00    	jle    1e9aa <_ZN14rustc_demangle2v06Parser5ident17hd92f34ac92f9dd66E+0x23a>
   1e882:	4d 8d 0c 08          	lea    (%r8,%rcx,1),%r9
   1e886:	45 84 d2             	test   %r10b,%r10b
   1e889:	0f 84 dc 00 00 00    	je     1e96b <_ZN14rustc_demangle2v06Parser5ident17hd92f34ac92f9dd66E+0x1fb>
   1e88f:	4d 8d 14 10          	lea    (%r8,%rdx,1),%r10
   1e893:	4d 8d 3c 10          	lea    (%r8,%rdx,1),%r15
   1e897:	49 83 c7 ff          	add    $0xffffffffffffffff,%r15
   1e89b:	48 89 c3             	mov    %rax,%rbx
   1e89e:	48 f7 db             	neg    %rbx
   1e8a1:	31 f6                	xor    %esi,%esi
   1e8a3:	4c 8d 35 8e eb 01 00 	lea    0x1eb8e(%rip),%r14        # 3d438 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0xad8>
   1e8aa:	31 d2                	xor    %edx,%edx
   1e8ac:	0f 1f 40 00          	nopl   0x0(%rax)
   1e8b0:	48 39 d3             	cmp    %rdx,%rbx
   1e8b3:	0f 84 d1 00 00 00    	je     1e98a <_ZN14rustc_demangle2v06Parser5ident17hd92f34ac92f9dd66E+0x21a>
   1e8b9:	41 80 3c 17 5f       	cmpb   $0x5f,(%r15,%rdx,1)
   1e8be:	48 8d 52 ff          	lea    -0x1(%rdx),%rdx
   1e8c2:	75 ec                	jne    1e8b0 <_ZN14rustc_demangle2v06Parser5ident17hd92f34ac92f9dd66E+0x140>
   1e8c4:	4c 89 4c 24 18       	mov    %r9,0x18(%rsp)
   1e8c9:	4c 89 5c 24 20       	mov    %r11,0x20(%rsp)
   1e8ce:	4d 89 d6             	mov    %r10,%r14
   1e8d1:	4d 29 ce             	sub    %r9,%r14
   1e8d4:	49 8d 34 16          	lea    (%r14,%rdx,1),%rsi
   1e8d8:	4c 01 c8             	add    %r9,%rax
   1e8db:	4c 29 d0             	sub    %r10,%rax
   1e8de:	48 85 f6             	test   %rsi,%rsi
   1e8e1:	74 22                	je     1e905 <_ZN14rustc_demangle2v06Parser5ident17hd92f34ac92f9dd66E+0x195>
   1e8e3:	48 39 d0             	cmp    %rdx,%rax
   1e8e6:	74 1d                	je     1e905 <_ZN14rustc_demangle2v06Parser5ident17hd92f34ac92f9dd66E+0x195>
   1e8e8:	49 39 f3             	cmp    %rsi,%r11
   1e8eb:	0f 86 e3 00 00 00    	jbe    1e9d4 <_ZN14rustc_demangle2v06Parser5ident17hd92f34ac92f9dd66E+0x264>
   1e8f1:	4a 8d 1c 11          	lea    (%rcx,%r10,1),%rbx
   1e8f5:	4c 29 cb             	sub    %r9,%rbx
   1e8f8:	4c 01 c3             	add    %r8,%rbx
   1e8fb:	80 3c 1a bf          	cmpb   $0xbf,(%rdx,%rbx,1)
   1e8ff:	0f 8e cf 00 00 00    	jle    1e9d4 <_ZN14rustc_demangle2v06Parser5ident17hd92f34ac92f9dd66E+0x264>
   1e905:	49 01 d6             	add    %rdx,%r14
   1e908:	49 83 c6 01          	add    $0x1,%r14
   1e90c:	4c 89 4c 24 30       	mov    %r9,0x30(%rsp)
   1e911:	4c 89 5c 24 38       	mov    %r11,0x38(%rsp)
   1e916:	4c 89 74 24 08       	mov    %r14,0x8(%rsp)
   1e91b:	4c 89 5c 24 10       	mov    %r11,0x10(%rsp)
   1e920:	4d 85 f6             	test   %r14,%r14
   1e923:	74 1f                	je     1e944 <_ZN14rustc_demangle2v06Parser5ident17hd92f34ac92f9dd66E+0x1d4>
   1e925:	48 8d 58 ff          	lea    -0x1(%rax),%rbx
   1e929:	48 39 d3             	cmp    %rdx,%rbx
   1e92c:	74 16                	je     1e944 <_ZN14rustc_demangle2v06Parser5ident17hd92f34ac92f9dd66E+0x1d4>
   1e92e:	4d 39 f3             	cmp    %r14,%r11
   1e931:	76 77                	jbe    1e9aa <_ZN14rustc_demangle2v06Parser5ident17hd92f34ac92f9dd66E+0x23a>
   1e933:	4a 8d 1c 11          	lea    (%rcx,%r10,1),%rbx
   1e937:	4c 29 cb             	sub    %r9,%rbx
   1e93a:	4c 01 c3             	add    %r8,%rbx
   1e93d:	80 7c 1a 01 bf       	cmpb   $0xbf,0x1(%rdx,%rbx,1)
   1e942:	7e 66                	jle    1e9aa <_ZN14rustc_demangle2v06Parser5ident17hd92f34ac92f9dd66E+0x23a>
   1e944:	49 89 d3             	mov    %rdx,%r11
   1e947:	49 f7 d3             	not    %r11
   1e94a:	49 01 c3             	add    %rax,%r11
   1e94d:	4c 01 d1             	add    %r10,%rcx
   1e950:	4c 29 c9             	sub    %r9,%rcx
   1e953:	4c 01 c1             	add    %r8,%rcx
   1e956:	48 8d 04 0a          	lea    (%rdx,%rcx,1),%rax
   1e95a:	48 83 c0 01          	add    $0x1,%rax
   1e95e:	4d 89 ce             	mov    %r9,%r14
   1e961:	4d 85 db             	test   %r11,%r11
   1e964:	75 30                	jne    1e996 <_ZN14rustc_demangle2v06Parser5ident17hd92f34ac92f9dd66E+0x226>
   1e966:	e9 b5 fe ff ff       	jmpq   1e820 <_ZN14rustc_demangle2v06Parser5ident17hd92f34ac92f9dd66E+0xb0>
   1e96b:	4c 89 0f             	mov    %r9,(%rdi)
   1e96e:	4c 89 5f 08          	mov    %r11,0x8(%rdi)
   1e972:	48 8d 05 bf ea 01 00 	lea    0x1eabf(%rip),%rax        # 3d438 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0xad8>
   1e979:	48 89 47 10          	mov    %rax,0x10(%rdi)
   1e97d:	48 c7 47 18 00 00 00 	movq   $0x0,0x18(%rdi)
   1e984:	00 
   1e985:	e9 9d fe ff ff       	jmpq   1e827 <_ZN14rustc_demangle2v06Parser5ident17hd92f34ac92f9dd66E+0xb7>
   1e98a:	4c 89 c8             	mov    %r9,%rax
   1e98d:	4d 85 db             	test   %r11,%r11
   1e990:	0f 84 8a fe ff ff    	je     1e820 <_ZN14rustc_demangle2v06Parser5ident17hd92f34ac92f9dd66E+0xb0>
   1e996:	4c 89 37             	mov    %r14,(%rdi)
   1e999:	48 89 77 08          	mov    %rsi,0x8(%rdi)
   1e99d:	48 89 47 10          	mov    %rax,0x10(%rdi)
   1e9a1:	4c 89 5f 18          	mov    %r11,0x18(%rdi)
   1e9a5:	e9 7d fe ff ff       	jmpq   1e827 <_ZN14rustc_demangle2v06Parser5ident17hd92f34ac92f9dd66E+0xb7>
   1e9aa:	48 8d 44 24 30       	lea    0x30(%rsp),%rax
   1e9af:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   1e9b4:	48 8d 44 24 08       	lea    0x8(%rsp),%rax
   1e9b9:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   1e9be:	48 8d 44 24 10       	lea    0x10(%rsp),%rax
   1e9c3:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   1e9c8:	48 8d 7c 24 18       	lea    0x18(%rsp),%rdi
   1e9cd:	e8 0e f3 ff ff       	callq  1dce0 <_ZN4core3str6traits101_$LT$impl$u20$core..slice..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..Range$LT$usize$GT$$GT$5index28_$u7b$$u7b$closure$u7d$$u7d$17hd529a7a73bc70800E>
   1e9d2:	0f 0b                	ud2    
   1e9d4:	48 8d 7c 24 18       	lea    0x18(%rsp),%rdi
   1e9d9:	e8 e2 f2 ff ff       	callq  1dcc0 <_ZN4core3str6traits103_$LT$impl$u20$core..slice..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..RangeTo$LT$usize$GT$$GT$5index28_$u7b$$u7b$closure$u7d$$u7d$17ha84ce7feeb82c1fdE>
   1e9de:	0f 0b                	ud2    

000000000001e9e0 <_ZN64_$LT$rustc_demangle..v0..Ident$u20$as$u20$core..fmt..Display$GT$3fmt17h5f7f2ca5a6c8d9e2E>:
   1e9e0:	55                   	push   %rbp
   1e9e1:	41 57                	push   %r15
   1e9e3:	41 56                	push   %r14
   1e9e5:	41 55                	push   %r13
   1e9e7:	41 54                	push   %r12
   1e9e9:	53                   	push   %rbx
   1e9ea:	48 81 ec 48 02 00 00 	sub    $0x248,%rsp
   1e9f1:	49 89 f5             	mov    %rsi,%r13
   1e9f4:	48 89 fd             	mov    %rdi,%rbp
   1e9f7:	48 8d 7c 24 48       	lea    0x48(%rsp),%rdi
   1e9fc:	ba 00 02 00 00       	mov    $0x200,%edx
   1ea01:	31 f6                	xor    %esi,%esi
   1ea03:	ff 15 47 94 22 00    	callq  *0x229447(%rip)        # 247e50 <memset@GLIBC_2.2.5>
   1ea09:	48 8b 4d 18          	mov    0x18(%rbp),%rcx
   1ea0d:	48 89 c8             	mov    %rcx,%rax
   1ea10:	48 89 4c 24 30       	mov    %rcx,0x30(%rsp)
   1ea15:	48 85 c9             	test   %rcx,%rcx
   1ea18:	0f 84 22 01 00 00    	je     1eb40 <_ZN64_$LT$rustc_demangle..v0..Ident$u20$as$u20$core..fmt..Display$GT$3fmt17h5f7f2ca5a6c8d9e2E+0x160>
   1ea1e:	48 8b 45 10          	mov    0x10(%rbp),%rax
   1ea22:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   1ea27:	44 8a 20             	mov    (%rax),%r12b
   1ea2a:	48 8b 4d 00          	mov    0x0(%rbp),%rcx
   1ea2e:	48 8b 45 08          	mov    0x8(%rbp),%rax
   1ea32:	48 85 c0             	test   %rax,%rax
   1ea35:	48 89 4c 24 38       	mov    %rcx,0x38(%rsp)
   1ea3a:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
   1ea3f:	0f 84 15 01 00 00    	je     1eb5a <_ZN64_$LT$rustc_demangle..v0..Ident$u20$as$u20$core..fmt..Display$GT$3fmt17h5f7f2ca5a6c8d9e2E+0x17a>
   1ea45:	48 01 c8             	add    %rcx,%rax
   1ea48:	31 f6                	xor    %esi,%esi
   1ea4a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1ea50:	48 8d 51 01          	lea    0x1(%rcx),%rdx
   1ea54:	0f b6 39             	movzbl (%rcx),%edi
   1ea57:	40 84 ff             	test   %dil,%dil
   1ea5a:	78 24                	js     1ea80 <_ZN64_$LT$rustc_demangle..v0..Ident$u20$as$u20$core..fmt..Display$GT$3fmt17h5f7f2ca5a6c8d9e2E+0xa0>
   1ea5c:	48 89 d1             	mov    %rdx,%rcx
   1ea5f:	48 81 fe 80 00 00 00 	cmp    $0x80,%rsi
   1ea66:	0f 85 c1 00 00 00    	jne    1eb2d <_ZN64_$LT$rustc_demangle..v0..Ident$u20$as$u20$core..fmt..Display$GT$3fmt17h5f7f2ca5a6c8d9e2E+0x14d>
   1ea6c:	e9 55 03 00 00       	jmpq   1edc6 <_ZN64_$LT$rustc_demangle..v0..Ident$u20$as$u20$core..fmt..Display$GT$3fmt17h5f7f2ca5a6c8d9e2E+0x3e6>
   1ea71:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1ea78:	00 00 00 
   1ea7b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1ea80:	48 39 c2             	cmp    %rax,%rdx
   1ea83:	74 41                	je     1eac6 <_ZN64_$LT$rustc_demangle..v0..Ident$u20$as$u20$core..fmt..Display$GT$3fmt17h5f7f2ca5a6c8d9e2E+0xe6>
   1ea85:	0f b6 51 01          	movzbl 0x1(%rcx),%edx
   1ea89:	48 83 c1 02          	add    $0x2,%rcx
   1ea8d:	83 e2 3f             	and    $0x3f,%edx
   1ea90:	89 fd                	mov    %edi,%ebp
   1ea92:	83 e5 1f             	and    $0x1f,%ebp
   1ea95:	40 80 ff df          	cmp    $0xdf,%dil
   1ea99:	76 3b                	jbe    1ead6 <_ZN64_$LT$rustc_demangle..v0..Ident$u20$as$u20$core..fmt..Display$GT$3fmt17h5f7f2ca5a6c8d9e2E+0xf6>
   1ea9b:	48 39 c1             	cmp    %rax,%rcx
   1ea9e:	74 3b                	je     1eadb <_ZN64_$LT$rustc_demangle..v0..Ident$u20$as$u20$core..fmt..Display$GT$3fmt17h5f7f2ca5a6c8d9e2E+0xfb>
   1eaa0:	0f b6 19             	movzbl (%rcx),%ebx
   1eaa3:	48 83 c1 01          	add    $0x1,%rcx
   1eaa7:	83 e3 3f             	and    $0x3f,%ebx
   1eaaa:	c1 e2 06             	shl    $0x6,%edx
   1eaad:	09 da                	or     %ebx,%edx
   1eaaf:	40 80 ff f0          	cmp    $0xf0,%dil
   1eab3:	72 36                	jb     1eaeb <_ZN64_$LT$rustc_demangle..v0..Ident$u20$as$u20$core..fmt..Display$GT$3fmt17h5f7f2ca5a6c8d9e2E+0x10b>
   1eab5:	48 39 c1             	cmp    %rax,%rcx
   1eab8:	74 46                	je     1eb00 <_ZN64_$LT$rustc_demangle..v0..Ident$u20$as$u20$core..fmt..Display$GT$3fmt17h5f7f2ca5a6c8d9e2E+0x120>
   1eaba:	0f b6 39             	movzbl (%rcx),%edi
   1eabd:	48 83 c1 01          	add    $0x1,%rcx
   1eac1:	83 e7 3f             	and    $0x3f,%edi
   1eac4:	eb 3f                	jmp    1eb05 <_ZN64_$LT$rustc_demangle..v0..Ident$u20$as$u20$core..fmt..Display$GT$3fmt17h5f7f2ca5a6c8d9e2E+0x125>
   1eac6:	31 d2                	xor    %edx,%edx
   1eac8:	48 89 c1             	mov    %rax,%rcx
   1eacb:	89 fd                	mov    %edi,%ebp
   1eacd:	83 e5 1f             	and    $0x1f,%ebp
   1ead0:	40 80 ff df          	cmp    $0xdf,%dil
   1ead4:	77 c5                	ja     1ea9b <_ZN64_$LT$rustc_demangle..v0..Ident$u20$as$u20$core..fmt..Display$GT$3fmt17h5f7f2ca5a6c8d9e2E+0xbb>
   1ead6:	c1 e5 06             	shl    $0x6,%ebp
   1ead9:	eb 13                	jmp    1eaee <_ZN64_$LT$rustc_demangle..v0..Ident$u20$as$u20$core..fmt..Display$GT$3fmt17h5f7f2ca5a6c8d9e2E+0x10e>
   1eadb:	31 db                	xor    %ebx,%ebx
   1eadd:	48 89 c1             	mov    %rax,%rcx
   1eae0:	c1 e2 06             	shl    $0x6,%edx
   1eae3:	09 da                	or     %ebx,%edx
   1eae5:	40 80 ff f0          	cmp    $0xf0,%dil
   1eae9:	73 ca                	jae    1eab5 <_ZN64_$LT$rustc_demangle..v0..Ident$u20$as$u20$core..fmt..Display$GT$3fmt17h5f7f2ca5a6c8d9e2E+0xd5>
   1eaeb:	c1 e5 0c             	shl    $0xc,%ebp
   1eaee:	09 ea                	or     %ebp,%edx
   1eaf0:	89 d7                	mov    %edx,%edi
   1eaf2:	48 81 fe 80 00 00 00 	cmp    $0x80,%rsi
   1eaf9:	75 32                	jne    1eb2d <_ZN64_$LT$rustc_demangle..v0..Ident$u20$as$u20$core..fmt..Display$GT$3fmt17h5f7f2ca5a6c8d9e2E+0x14d>
   1eafb:	e9 c6 02 00 00       	jmpq   1edc6 <_ZN64_$LT$rustc_demangle..v0..Ident$u20$as$u20$core..fmt..Display$GT$3fmt17h5f7f2ca5a6c8d9e2E+0x3e6>
   1eb00:	31 ff                	xor    %edi,%edi
   1eb02:	48 89 c1             	mov    %rax,%rcx
   1eb05:	83 e5 07             	and    $0x7,%ebp
   1eb08:	c1 e5 12             	shl    $0x12,%ebp
   1eb0b:	c1 e2 06             	shl    $0x6,%edx
   1eb0e:	09 ea                	or     %ebp,%edx
   1eb10:	09 fa                	or     %edi,%edx
   1eb12:	89 d7                	mov    %edx,%edi
   1eb14:	81 fa 00 00 11 00    	cmp    $0x110000,%edx
   1eb1a:	74 40                	je     1eb5c <_ZN64_$LT$rustc_demangle..v0..Ident$u20$as$u20$core..fmt..Display$GT$3fmt17h5f7f2ca5a6c8d9e2E+0x17c>
   1eb1c:	0f 1f 40 00          	nopl   0x0(%rax)
   1eb20:	48 81 fe 80 00 00 00 	cmp    $0x80,%rsi
   1eb27:	0f 84 99 02 00 00    	je     1edc6 <_ZN64_$LT$rustc_demangle..v0..Ident$u20$as$u20$core..fmt..Display$GT$3fmt17h5f7f2ca5a6c8d9e2E+0x3e6>
   1eb2d:	89 7c b4 48          	mov    %edi,0x48(%rsp,%rsi,4)
   1eb31:	48 83 c6 01          	add    $0x1,%rsi
   1eb35:	48 39 c1             	cmp    %rax,%rcx
   1eb38:	0f 85 12 ff ff ff    	jne    1ea50 <_ZN64_$LT$rustc_demangle..v0..Ident$u20$as$u20$core..fmt..Display$GT$3fmt17h5f7f2ca5a6c8d9e2E+0x70>
   1eb3e:	eb 1c                	jmp    1eb5c <_ZN64_$LT$rustc_demangle..v0..Ident$u20$as$u20$core..fmt..Display$GT$3fmt17h5f7f2ca5a6c8d9e2E+0x17c>
   1eb40:	48 8b 75 00          	mov    0x0(%rbp),%rsi
   1eb44:	48 8b 55 08          	mov    0x8(%rbp),%rdx
   1eb48:	49 8b 7d 20          	mov    0x20(%r13),%rdi
   1eb4c:	49 8b 45 28          	mov    0x28(%r13),%rax
   1eb50:	ff 50 18             	callq  *0x18(%rax)
   1eb53:	89 c5                	mov    %eax,%ebp
   1eb55:	e9 dc 02 00 00       	jmpq   1ee36 <_ZN64_$LT$rustc_demangle..v0..Ident$u20$as$u20$core..fmt..Display$GT$3fmt17h5f7f2ca5a6c8d9e2E+0x456>
   1eb5a:	31 f6                	xor    %esi,%esi
   1eb5c:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
   1eb61:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
   1eb66:	4c 8d 04 01          	lea    (%rcx,%rax,1),%r8
   1eb6a:	48 83 c1 01          	add    $0x1,%rcx
   1eb6e:	48 8d 04 b5 04 00 00 	lea    0x4(,%rsi,4),%rax
   1eb75:	00 
   1eb76:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   1eb7b:	b8 bc 02 00 00       	mov    $0x2bc,%eax
   1eb80:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   1eb85:	41 bf 48 00 00 00    	mov    $0x48,%r15d
   1eb8b:	b8 80 00 00 00       	mov    $0x80,%eax
   1eb90:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   1eb95:	41 bb 01 00 00 00    	mov    $0x1,%r11d
   1eb9b:	41 ba 1a 00 00 00    	mov    $0x1a,%r10d
   1eba1:	45 31 c9             	xor    %r9d,%r9d
   1eba4:	41 0f b6 d4          	movzbl %r12b,%edx
   1eba8:	c1 e2 08             	shl    $0x8,%edx
   1ebab:	83 ca 01             	or     $0x1,%edx
   1ebae:	41 bc 24 00 00 00    	mov    $0x24,%r12d
   1ebb4:	31 ff                	xor    %edi,%edi
   1ebb6:	bd 01 00 00 00       	mov    $0x1,%ebp
   1ebbb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1ebc0:	4c 89 e0             	mov    %r12,%rax
   1ebc3:	4c 29 f8             	sub    %r15,%rax
   1ebc6:	41 be 00 00 00 00    	mov    $0x0,%r14d
   1ebcc:	4c 0f 43 f0          	cmovae %rax,%r14
   1ebd0:	49 83 fe 01          	cmp    $0x1,%r14
   1ebd4:	4d 0f 46 f3          	cmovbe %r11,%r14
   1ebd8:	49 83 fe 1a          	cmp    $0x1a,%r14
   1ebdc:	4d 0f 43 f2          	cmovae %r10,%r14
   1ebe0:	80 fa 02             	cmp    $0x2,%dl
   1ebe3:	75 3b                	jne    1ec20 <_ZN64_$LT$rustc_demangle..v0..Ident$u20$as$u20$core..fmt..Display$GT$3fmt17h5f7f2ca5a6c8d9e2E+0x240>
   1ebe5:	4c 39 c1             	cmp    %r8,%rcx
   1ebe8:	0f 84 d8 01 00 00    	je     1edc6 <_ZN64_$LT$rustc_demangle..v0..Ident$u20$as$u20$core..fmt..Display$GT$3fmt17h5f7f2ca5a6c8d9e2E+0x3e6>
   1ebee:	0f b6 11             	movzbl (%rcx),%edx
   1ebf1:	48 83 c1 01          	add    $0x1,%rcx
   1ebf5:	8d 42 9f             	lea    -0x61(%rdx),%eax
   1ebf8:	3c 1a                	cmp    $0x1a,%al
   1ebfa:	72 37                	jb     1ec33 <_ZN64_$LT$rustc_demangle..v0..Ident$u20$as$u20$core..fmt..Display$GT$3fmt17h5f7f2ca5a6c8d9e2E+0x253>
   1ebfc:	8d 42 d0             	lea    -0x30(%rdx),%eax
   1ebff:	3c 09                	cmp    $0x9,%al
   1ec01:	0f 87 bf 01 00 00    	ja     1edc6 <_ZN64_$LT$rustc_demangle..v0..Ident$u20$as$u20$core..fmt..Display$GT$3fmt17h5f7f2ca5a6c8d9e2E+0x3e6>
   1ec07:	80 c2 ea             	add    $0xea,%dl
   1ec0a:	89 d0                	mov    %edx,%eax
   1ec0c:	0f b6 d8             	movzbl %al,%ebx
   1ec0f:	48 89 d8             	mov    %rbx,%rax
   1ec12:	48 f7 e5             	mul    %rbp
   1ec15:	71 2b                	jno    1ec42 <_ZN64_$LT$rustc_demangle..v0..Ident$u20$as$u20$core..fmt..Display$GT$3fmt17h5f7f2ca5a6c8d9e2E+0x262>
   1ec17:	e9 aa 01 00 00       	jmpq   1edc6 <_ZN64_$LT$rustc_demangle..v0..Ident$u20$as$u20$core..fmt..Display$GT$3fmt17h5f7f2ca5a6c8d9e2E+0x3e6>
   1ec1c:	0f 1f 40 00          	nopl   0x0(%rax)
   1ec20:	f6 c2 01             	test   $0x1,%dl
   1ec23:	0f 84 9d 01 00 00    	je     1edc6 <_ZN64_$LT$rustc_demangle..v0..Ident$u20$as$u20$core..fmt..Display$GT$3fmt17h5f7f2ca5a6c8d9e2E+0x3e6>
   1ec29:	c1 ea 08             	shr    $0x8,%edx
   1ec2c:	8d 42 9f             	lea    -0x61(%rdx),%eax
   1ec2f:	3c 1a                	cmp    $0x1a,%al
   1ec31:	73 c9                	jae    1ebfc <_ZN64_$LT$rustc_demangle..v0..Ident$u20$as$u20$core..fmt..Display$GT$3fmt17h5f7f2ca5a6c8d9e2E+0x21c>
   1ec33:	0f b6 d8             	movzbl %al,%ebx
   1ec36:	48 89 d8             	mov    %rbx,%rax
   1ec39:	48 f7 e5             	mul    %rbp
   1ec3c:	0f 80 84 01 00 00    	jo     1edc6 <_ZN64_$LT$rustc_demangle..v0..Ident$u20$as$u20$core..fmt..Display$GT$3fmt17h5f7f2ca5a6c8d9e2E+0x3e6>
   1ec42:	48 01 c7             	add    %rax,%rdi
   1ec45:	0f 82 7b 01 00 00    	jb     1edc6 <_ZN64_$LT$rustc_demangle..v0..Ident$u20$as$u20$core..fmt..Display$GT$3fmt17h5f7f2ca5a6c8d9e2E+0x3e6>
   1ec4b:	49 39 de             	cmp    %rbx,%r14
   1ec4e:	77 24                	ja     1ec74 <_ZN64_$LT$rustc_demangle..v0..Ident$u20$as$u20$core..fmt..Display$GT$3fmt17h5f7f2ca5a6c8d9e2E+0x294>
   1ec50:	bb 24 00 00 00       	mov    $0x24,%ebx
   1ec55:	4c 29 f3             	sub    %r14,%rbx
   1ec58:	49 83 c4 24          	add    $0x24,%r12
   1ec5c:	48 89 e8             	mov    %rbp,%rax
   1ec5f:	48 f7 e3             	mul    %rbx
   1ec62:	66 ba 02 00          	mov    $0x2,%dx
   1ec66:	48 89 c5             	mov    %rax,%rbp
   1ec69:	0f 81 51 ff ff ff    	jno    1ebc0 <_ZN64_$LT$rustc_demangle..v0..Ident$u20$as$u20$core..fmt..Display$GT$3fmt17h5f7f2ca5a6c8d9e2E+0x1e0>
   1ec6f:	e9 52 01 00 00       	jmpq   1edc6 <_ZN64_$LT$rustc_demangle..v0..Ident$u20$as$u20$core..fmt..Display$GT$3fmt17h5f7f2ca5a6c8d9e2E+0x3e6>
   1ec74:	49 01 f9             	add    %rdi,%r9
   1ec77:	0f 82 49 01 00 00    	jb     1edc6 <_ZN64_$LT$rustc_demangle..v0..Ident$u20$as$u20$core..fmt..Display$GT$3fmt17h5f7f2ca5a6c8d9e2E+0x3e6>
   1ec7d:	4c 8d 76 01          	lea    0x1(%rsi),%r14
   1ec81:	4c 89 c8             	mov    %r9,%rax
   1ec84:	31 d2                	xor    %edx,%edx
   1ec86:	49 f7 f6             	div    %r14
   1ec89:	48 8b 6c 24 08       	mov    0x8(%rsp),%rbp
   1ec8e:	48 89 eb             	mov    %rbp,%rbx
   1ec91:	48 01 c3             	add    %rax,%rbx
   1ec94:	0f 92 c0             	setb   %al
   1ec97:	48 89 dd             	mov    %rbx,%rbp
   1ec9a:	48 89 5c 24 08       	mov    %rbx,0x8(%rsp)
   1ec9f:	48 c1 ed 20          	shr    $0x20,%rbp
   1eca3:	0f 85 1d 01 00 00    	jne    1edc6 <_ZN64_$LT$rustc_demangle..v0..Ident$u20$as$u20$core..fmt..Display$GT$3fmt17h5f7f2ca5a6c8d9e2E+0x3e6>
   1eca9:	84 c0                	test   %al,%al
   1ecab:	0f 85 15 01 00 00    	jne    1edc6 <_ZN64_$LT$rustc_demangle..v0..Ident$u20$as$u20$core..fmt..Display$GT$3fmt17h5f7f2ca5a6c8d9e2E+0x3e6>
   1ecb1:	48 83 fe 7f          	cmp    $0x7f,%rsi
   1ecb5:	0f 87 0b 01 00 00    	ja     1edc6 <_ZN64_$LT$rustc_demangle..v0..Ident$u20$as$u20$core..fmt..Display$GT$3fmt17h5f7f2ca5a6c8d9e2E+0x3e6>
   1ecbb:	81 7c 24 08 ff ff 10 	cmpl   $0x10ffff,0x8(%rsp)
   1ecc2:	00 
   1ecc3:	0f 87 fd 00 00 00    	ja     1edc6 <_ZN64_$LT$rustc_demangle..v0..Ident$u20$as$u20$core..fmt..Display$GT$3fmt17h5f7f2ca5a6c8d9e2E+0x3e6>
   1ecc9:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   1ecce:	25 00 f8 ff ff       	and    $0xfffff800,%eax
   1ecd3:	3d 00 d8 00 00       	cmp    $0xd800,%eax
   1ecd8:	0f 84 e8 00 00 00    	je     1edc6 <_ZN64_$LT$rustc_demangle..v0..Ident$u20$as$u20$core..fmt..Display$GT$3fmt17h5f7f2ca5a6c8d9e2E+0x3e6>
   1ecde:	49 89 d1             	mov    %rdx,%r9
   1ece1:	48 39 d6             	cmp    %rdx,%rsi
   1ece4:	48 8d 5c 24 48       	lea    0x48(%rsp),%rbx
   1ece9:	76 23                	jbe    1ed0e <_ZN64_$LT$rustc_demangle..v0..Ident$u20$as$u20$core..fmt..Display$GT$3fmt17h5f7f2ca5a6c8d9e2E+0x32e>
   1eceb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1ecf0:	48 8d 46 ff          	lea    -0x1(%rsi),%rax
   1ecf4:	48 83 f8 7f          	cmp    $0x7f,%rax
   1ecf8:	0f 87 9a 01 00 00    	ja     1ee98 <_ZN64_$LT$rustc_demangle..v0..Ident$u20$as$u20$core..fmt..Display$GT$3fmt17h5f7f2ca5a6c8d9e2E+0x4b8>
   1ecfe:	8b 54 b4 44          	mov    0x44(%rsp,%rsi,4),%edx
   1ed02:	89 54 b4 48          	mov    %edx,0x48(%rsp,%rsi,4)
   1ed06:	48 89 c6             	mov    %rax,%rsi
   1ed09:	4c 39 c8             	cmp    %r9,%rax
   1ed0c:	77 e2                	ja     1ecf0 <_ZN64_$LT$rustc_demangle..v0..Ident$u20$as$u20$core..fmt..Display$GT$3fmt17h5f7f2ca5a6c8d9e2E+0x310>
   1ed0e:	49 81 f9 80 00 00 00 	cmp    $0x80,%r9
   1ed15:	0f 83 94 01 00 00    	jae    1eeaf <_ZN64_$LT$rustc_demangle..v0..Ident$u20$as$u20$core..fmt..Display$GT$3fmt17h5f7f2ca5a6c8d9e2E+0x4cf>
   1ed1b:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   1ed20:	42 89 44 8c 48       	mov    %eax,0x48(%rsp,%r9,4)
   1ed25:	4c 39 c1             	cmp    %r8,%rcx
   1ed28:	0f 84 35 01 00 00    	je     1ee63 <_ZN64_$LT$rustc_demangle..v0..Ident$u20$as$u20$core..fmt..Display$GT$3fmt17h5f7f2ca5a6c8d9e2E+0x483>
   1ed2e:	44 8a 21             	mov    (%rcx),%r12b
   1ed31:	48 89 f8             	mov    %rdi,%rax
   1ed34:	31 d2                	xor    %edx,%edx
   1ed36:	48 f7 74 24 20       	divq   0x20(%rsp)
   1ed3b:	48 89 c7             	mov    %rax,%rdi
   1ed3e:	31 d2                	xor    %edx,%edx
   1ed40:	49 f7 f6             	div    %r14
   1ed43:	48 89 c6             	mov    %rax,%rsi
   1ed46:	48 01 fe             	add    %rdi,%rsi
   1ed49:	31 ed                	xor    %ebp,%ebp
   1ed4b:	48 81 fe c8 01 00 00 	cmp    $0x1c8,%rsi
   1ed52:	72 39                	jb     1ed8d <_ZN64_$LT$rustc_demangle..v0..Ident$u20$as$u20$core..fmt..Display$GT$3fmt17h5f7f2ca5a6c8d9e2E+0x3ad>
   1ed54:	48 89 f7             	mov    %rsi,%rdi
   1ed57:	48 bb 0f ea a0 0e ea 	movabs $0xea0ea0ea0ea0ea0f,%rbx
   1ed5e:	a0 0e ea 
   1ed61:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1ed68:	00 00 00 
   1ed6b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1ed70:	48 89 f8             	mov    %rdi,%rax
   1ed73:	48 f7 e3             	mul    %rbx
   1ed76:	48 89 d6             	mov    %rdx,%rsi
   1ed79:	48 c1 ee 05          	shr    $0x5,%rsi
   1ed7d:	48 83 c5 24          	add    $0x24,%rbp
   1ed81:	48 81 ff 57 3e 00 00 	cmp    $0x3e57,%rdi
   1ed88:	48 89 f7             	mov    %rsi,%rdi
   1ed8b:	77 e3                	ja     1ed70 <_ZN64_$LT$rustc_demangle..v0..Ident$u20$as$u20$core..fmt..Display$GT$3fmt17h5f7f2ca5a6c8d9e2E+0x390>
   1ed8d:	49 83 c1 01          	add    $0x1,%r9
   1ed91:	48 83 c1 01          	add    $0x1,%rcx
   1ed95:	8d 04 b5 00 00 00 00 	lea    0x0(,%rsi,4),%eax
   1ed9c:	8d 04 c0             	lea    (%rax,%rax,8),%eax
   1ed9f:	83 c6 26             	add    $0x26,%esi
   1eda2:	31 d2                	xor    %edx,%edx
   1eda4:	66 f7 f6             	div    %si
   1eda7:	44 0f b7 f8          	movzwl %ax,%r15d
   1edab:	49 01 ef             	add    %rbp,%r15
   1edae:	48 83 44 24 18 04    	addq   $0x4,0x18(%rsp)
   1edb4:	b8 02 00 00 00       	mov    $0x2,%eax
   1edb9:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   1edbe:	4c 89 f6             	mov    %r14,%rsi
   1edc1:	e9 de fd ff ff       	jmpq   1eba4 <_ZN64_$LT$rustc_demangle..v0..Ident$u20$as$u20$core..fmt..Display$GT$3fmt17h5f7f2ca5a6c8d9e2E+0x1c4>
   1edc6:	49 8b 7d 20          	mov    0x20(%r13),%rdi
   1edca:	49 8b 45 28          	mov    0x28(%r13),%rax
   1edce:	48 8d 35 b1 e4 01 00 	lea    0x1e4b1(%rip),%rsi        # 3d286 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x926>
   1edd5:	ba 09 00 00 00       	mov    $0x9,%edx
   1edda:	ff 50 18             	callq  *0x18(%rax)
   1eddd:	40 b5 01             	mov    $0x1,%bpl
   1ede0:	84 c0                	test   %al,%al
   1ede2:	75 52                	jne    1ee36 <_ZN64_$LT$rustc_demangle..v0..Ident$u20$as$u20$core..fmt..Display$GT$3fmt17h5f7f2ca5a6c8d9e2E+0x456>
   1ede4:	48 8b 54 24 40       	mov    0x40(%rsp),%rdx
   1ede9:	48 85 d2             	test   %rdx,%rdx
   1edec:	74 2f                	je     1ee1d <_ZN64_$LT$rustc_demangle..v0..Ident$u20$as$u20$core..fmt..Display$GT$3fmt17h5f7f2ca5a6c8d9e2E+0x43d>
   1edee:	49 8b 7d 20          	mov    0x20(%r13),%rdi
   1edf2:	49 8b 45 28          	mov    0x28(%r13),%rax
   1edf6:	48 8b 74 24 38       	mov    0x38(%rsp),%rsi
   1edfb:	ff 50 18             	callq  *0x18(%rax)
   1edfe:	84 c0                	test   %al,%al
   1ee00:	75 34                	jne    1ee36 <_ZN64_$LT$rustc_demangle..v0..Ident$u20$as$u20$core..fmt..Display$GT$3fmt17h5f7f2ca5a6c8d9e2E+0x456>
   1ee02:	49 8b 7d 20          	mov    0x20(%r13),%rdi
   1ee06:	49 8b 45 28          	mov    0x28(%r13),%rax
   1ee0a:	48 8d 35 71 e4 01 00 	lea    0x1e471(%rip),%rsi        # 3d282 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x922>
   1ee11:	ba 01 00 00 00       	mov    $0x1,%edx
   1ee16:	ff 50 18             	callq  *0x18(%rax)
   1ee19:	84 c0                	test   %al,%al
   1ee1b:	75 19                	jne    1ee36 <_ZN64_$LT$rustc_demangle..v0..Ident$u20$as$u20$core..fmt..Display$GT$3fmt17h5f7f2ca5a6c8d9e2E+0x456>
   1ee1d:	49 8b 7d 20          	mov    0x20(%r13),%rdi
   1ee21:	49 8b 45 28          	mov    0x28(%r13),%rax
   1ee25:	48 8b 74 24 28       	mov    0x28(%rsp),%rsi
   1ee2a:	48 8b 54 24 30       	mov    0x30(%rsp),%rdx
   1ee2f:	ff 50 18             	callq  *0x18(%rax)
   1ee32:	84 c0                	test   %al,%al
   1ee34:	74 14                	je     1ee4a <_ZN64_$LT$rustc_demangle..v0..Ident$u20$as$u20$core..fmt..Display$GT$3fmt17h5f7f2ca5a6c8d9e2E+0x46a>
   1ee36:	89 e8                	mov    %ebp,%eax
   1ee38:	48 81 c4 48 02 00 00 	add    $0x248,%rsp
   1ee3f:	5b                   	pop    %rbx
   1ee40:	41 5c                	pop    %r12
   1ee42:	41 5d                	pop    %r13
   1ee44:	41 5e                	pop    %r14
   1ee46:	41 5f                	pop    %r15
   1ee48:	5d                   	pop    %rbp
   1ee49:	c3                   	retq   
   1ee4a:	49 8b 7d 20          	mov    0x20(%r13),%rdi
   1ee4e:	49 8b 45 28          	mov    0x28(%r13),%rax
   1ee52:	48 8d 35 8a e3 01 00 	lea    0x1e38a(%rip),%rsi        # 3d1e3 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x883>
   1ee59:	ba 01 00 00 00       	mov    $0x1,%edx
   1ee5e:	e9 ed fc ff ff       	jmpq   1eb50 <_ZN64_$LT$rustc_demangle..v0..Ident$u20$as$u20$core..fmt..Display$GT$3fmt17h5f7f2ca5a6c8d9e2E+0x170>
   1ee63:	4c 8d 74 24 14       	lea    0x14(%rsp),%r14
   1ee68:	48 8b 6c 24 18       	mov    0x18(%rsp),%rbp
   1ee6d:	48 85 ed             	test   %rbp,%rbp
   1ee70:	74 22                	je     1ee94 <_ZN64_$LT$rustc_demangle..v0..Ident$u20$as$u20$core..fmt..Display$GT$3fmt17h5f7f2ca5a6c8d9e2E+0x4b4>
   1ee72:	8b 03                	mov    (%rbx),%eax
   1ee74:	89 44 24 14          	mov    %eax,0x14(%rsp)
   1ee78:	4c 89 f7             	mov    %r14,%rdi
   1ee7b:	4c 89 ee             	mov    %r13,%rsi
   1ee7e:	e8 4d bb fe ff       	callq  a9d0 <_ZN43_$LT$char$u20$as$u20$core..fmt..Display$GT$3fmt17h7792e6955f0fb677E>
   1ee83:	48 83 c3 04          	add    $0x4,%rbx
   1ee87:	48 83 c5 fc          	add    $0xfffffffffffffffc,%rbp
   1ee8b:	84 c0                	test   %al,%al
   1ee8d:	74 de                	je     1ee6d <_ZN64_$LT$rustc_demangle..v0..Ident$u20$as$u20$core..fmt..Display$GT$3fmt17h5f7f2ca5a6c8d9e2E+0x48d>
   1ee8f:	40 b5 01             	mov    $0x1,%bpl
   1ee92:	eb a2                	jmp    1ee36 <_ZN64_$LT$rustc_demangle..v0..Ident$u20$as$u20$core..fmt..Display$GT$3fmt17h5f7f2ca5a6c8d9e2E+0x456>
   1ee94:	31 ed                	xor    %ebp,%ebp
   1ee96:	eb 9e                	jmp    1ee36 <_ZN64_$LT$rustc_demangle..v0..Ident$u20$as$u20$core..fmt..Display$GT$3fmt17h5f7f2ca5a6c8d9e2E+0x456>
   1ee98:	48 83 c6 ff          	add    $0xffffffffffffffff,%rsi
   1ee9c:	48 8d 3d bd 7e 22 00 	lea    0x227ebd(%rip),%rdi        # 246d60 <__init_array_end+0xd50>
   1eea3:	ba 80 00 00 00       	mov    $0x80,%edx
   1eea8:	e8 53 85 fe ff       	callq  7400 <_ZN4core9panicking18panic_bounds_check17h83121a2515f55ceeE>
   1eead:	0f 0b                	ud2    
   1eeaf:	48 8d 3d c2 7e 22 00 	lea    0x227ec2(%rip),%rdi        # 246d78 <__init_array_end+0xd68>
   1eeb6:	ba 80 00 00 00       	mov    $0x80,%edx
   1eebb:	4c 89 ce             	mov    %r9,%rsi
   1eebe:	e8 3d 85 fe ff       	callq  7400 <_ZN4core9panicking18panic_bounds_check17h83121a2515f55ceeE>
   1eec3:	0f 0b                	ud2    
   1eec5:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1eecc:	00 00 00 
   1eecf:	90                   	nop

000000000001eed0 <_ZN14rustc_demangle2v06Parser9skip_path17h92f436ed624d331fE>:
   1eed0:	55                   	push   %rbp
   1eed1:	41 57                	push   %r15
   1eed3:	41 56                	push   %r14
   1eed5:	41 54                	push   %r12
   1eed7:	53                   	push   %rbx
   1eed8:	48 83 ec 20          	sub    $0x20,%rsp
   1eedc:	48 89 fb             	mov    %rdi,%rbx
   1eedf:	48 8b 4f 08          	mov    0x8(%rdi),%rcx
   1eee3:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
   1eee7:	41 b4 01             	mov    $0x1,%r12b
   1eeea:	48 39 f9             	cmp    %rdi,%rcx
   1eeed:	0f 86 e3 04 00 00    	jbe    1f3d6 <_ZN14rustc_demangle2v06Parser9skip_path17h92f436ed624d331fE+0x506>
   1eef3:	48 8b 33             	mov    (%rbx),%rsi
   1eef6:	8a 04 3e             	mov    (%rsi,%rdi,1),%al
   1eef9:	48 8d 6f 01          	lea    0x1(%rdi),%rbp
   1eefd:	48 89 6b 10          	mov    %rbp,0x10(%rbx)
   1ef01:	04 be                	add    $0xbe,%al
   1ef03:	3c 17                	cmp    $0x17,%al
   1ef05:	0f 87 cb 04 00 00    	ja     1f3d6 <_ZN14rustc_demangle2v06Parser9skip_path17h92f436ed624d331fE+0x506>
   1ef0b:	4c 8d 73 10          	lea    0x10(%rbx),%r14
   1ef0f:	0f b6 c0             	movzbl %al,%eax
   1ef12:	48 8d 15 87 b9 01 00 	lea    0x1b987(%rip),%rdx        # 3a8a0 <_ZN4core7unicode12unicode_data2cc19BITSET_INDEX_CHUNKS17h8a1f39cd536e9344E+0x3e0>
   1ef19:	48 63 04 82          	movslq (%rdx,%rax,4),%rax
   1ef1d:	48 01 d0             	add    %rdx,%rax
   1ef20:	ff e0                	jmpq   *%rax
   1ef22:	48 39 e9             	cmp    %rbp,%rcx
   1ef25:	0f 86 6a 02 00 00    	jbe    1f195 <_ZN14rustc_demangle2v06Parser9skip_path17h92f436ed624d331fE+0x2c5>
   1ef2b:	80 3c 2e 5f          	cmpb   $0x5f,(%rsi,%rbp,1)
   1ef2f:	0f 85 60 02 00 00    	jne    1f195 <_ZN14rustc_demangle2v06Parser9skip_path17h92f436ed624d331fE+0x2c5>
   1ef35:	48 8d 47 02          	lea    0x2(%rdi),%rax
   1ef39:	49 89 06             	mov    %rax,(%r14)
   1ef3c:	31 c0                	xor    %eax,%eax
   1ef3e:	e9 f5 03 00 00       	jmpq   1f338 <_ZN14rustc_demangle2v06Parser9skip_path17h92f436ed624d331fE+0x468>
   1ef43:	48 39 e9             	cmp    %rbp,%rcx
   1ef46:	0f 86 18 04 00 00    	jbe    1f364 <_ZN14rustc_demangle2v06Parser9skip_path17h92f436ed624d331fE+0x494>
   1ef4c:	80 3c 2e 73          	cmpb   $0x73,(%rsi,%rbp,1)
   1ef50:	0f 85 0e 04 00 00    	jne    1f364 <_ZN14rustc_demangle2v06Parser9skip_path17h92f436ed624d331fE+0x494>
   1ef56:	48 8d 6f 02          	lea    0x2(%rdi),%rbp
   1ef5a:	49 89 2e             	mov    %rbp,(%r14)
   1ef5d:	48 39 e9             	cmp    %rbp,%rcx
   1ef60:	0f 86 93 02 00 00    	jbe    1f1f9 <_ZN14rustc_demangle2v06Parser9skip_path17h92f436ed624d331fE+0x329>
   1ef66:	80 3c 2e 5f          	cmpb   $0x5f,(%rsi,%rbp,1)
   1ef6a:	0f 85 89 02 00 00    	jne    1f1f9 <_ZN14rustc_demangle2v06Parser9skip_path17h92f436ed624d331fE+0x329>
   1ef70:	48 83 c7 03          	add    $0x3,%rdi
   1ef74:	49 89 3e             	mov    %rdi,(%r14)
   1ef77:	e9 e8 03 00 00       	jmpq   1f364 <_ZN14rustc_demangle2v06Parser9skip_path17h92f436ed624d331fE+0x494>
   1ef7c:	48 89 df             	mov    %rbx,%rdi
   1ef7f:	e8 4c ff ff ff       	callq  1eed0 <_ZN14rustc_demangle2v06Parser9skip_path17h92f436ed624d331fE>
   1ef84:	84 c0                	test   %al,%al
   1ef86:	0f 85 4a 04 00 00    	jne    1f3d6 <_ZN14rustc_demangle2v06Parser9skip_path17h92f436ed624d331fE+0x506>
   1ef8c:	41 bf 3e 00 00 00    	mov    $0x3e,%r15d
   1ef92:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1ef99:	00 00 00 
   1ef9c:	0f 1f 40 00          	nopl   0x0(%rax)
   1efa0:	48 8b 4b 08          	mov    0x8(%rbx),%rcx
   1efa4:	48 8b 43 10          	mov    0x10(%rbx),%rax
   1efa8:	48 39 c1             	cmp    %rax,%rcx
   1efab:	76 1a                	jbe    1efc7 <_ZN14rustc_demangle2v06Parser9skip_path17h92f436ed624d331fE+0xf7>
   1efad:	48 8b 33             	mov    (%rbx),%rsi
   1efb0:	0f b6 14 06          	movzbl (%rsi,%rax,1),%edx
   1efb4:	80 fa 4b             	cmp    $0x4b,%dl
   1efb7:	74 1f                	je     1efd8 <_ZN14rustc_demangle2v06Parser9skip_path17h92f436ed624d331fE+0x108>
   1efb9:	80 fa 4c             	cmp    $0x4c,%dl
   1efbc:	74 33                	je     1eff1 <_ZN14rustc_demangle2v06Parser9skip_path17h92f436ed624d331fE+0x121>
   1efbe:	80 fa 45             	cmp    $0x45,%dl
   1efc1:	0f 84 7c 03 00 00    	je     1f343 <_ZN14rustc_demangle2v06Parser9skip_path17h92f436ed624d331fE+0x473>
   1efc7:	48 89 df             	mov    %rbx,%rdi
   1efca:	e8 f1 25 00 00       	callq  215c0 <_ZN14rustc_demangle2v06Parser9skip_type17hcade47368bc53de5E>
   1efcf:	84 c0                	test   %al,%al
   1efd1:	74 cd                	je     1efa0 <_ZN14rustc_demangle2v06Parser9skip_path17h92f436ed624d331fE+0xd0>
   1efd3:	e9 fe 03 00 00       	jmpq   1f3d6 <_ZN14rustc_demangle2v06Parser9skip_path17h92f436ed624d331fE+0x506>
   1efd8:	48 83 c0 01          	add    $0x1,%rax
   1efdc:	48 89 43 10          	mov    %rax,0x10(%rbx)
   1efe0:	48 89 df             	mov    %rbx,%rdi
   1efe3:	e8 48 2b 00 00       	callq  21b30 <_ZN14rustc_demangle2v06Parser10skip_const17hb429e6fe7c0d0accE>
   1efe8:	84 c0                	test   %al,%al
   1efea:	74 b4                	je     1efa0 <_ZN14rustc_demangle2v06Parser9skip_path17h92f436ed624d331fE+0xd0>
   1efec:	e9 e5 03 00 00       	jmpq   1f3d6 <_ZN14rustc_demangle2v06Parser9skip_path17h92f436ed624d331fE+0x506>
   1eff1:	48 8d 78 01          	lea    0x1(%rax),%rdi
   1eff5:	49 89 3e             	mov    %rdi,(%r14)
   1eff8:	48 39 f9             	cmp    %rdi,%rcx
   1effb:	76 1c                	jbe    1f019 <_ZN14rustc_demangle2v06Parser9skip_path17h92f436ed624d331fE+0x149>
   1effd:	80 3c 3e 5f          	cmpb   $0x5f,(%rsi,%rdi,1)
   1f001:	75 16                	jne    1f019 <_ZN14rustc_demangle2v06Parser9skip_path17h92f436ed624d331fE+0x149>
   1f003:	48 83 c0 02          	add    $0x2,%rax
   1f007:	49 89 06             	mov    %rax,(%r14)
   1f00a:	48 8b 4b 08          	mov    0x8(%rbx),%rcx
   1f00e:	48 8b 43 10          	mov    0x10(%rbx),%rax
   1f012:	48 39 c1             	cmp    %rax,%rcx
   1f015:	77 96                	ja     1efad <_ZN14rustc_demangle2v06Parser9skip_path17h92f436ed624d331fE+0xdd>
   1f017:	eb ae                	jmp    1efc7 <_ZN14rustc_demangle2v06Parser9skip_path17h92f436ed624d331fE+0xf7>
   1f019:	31 c0                	xor    %eax,%eax
   1f01b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1f020:	48 39 f9             	cmp    %rdi,%rcx
   1f023:	0f 86 ad 03 00 00    	jbe    1f3d6 <_ZN14rustc_demangle2v06Parser9skip_path17h92f436ed624d331fE+0x506>
   1f029:	0f b6 14 3e          	movzbl (%rsi,%rdi,1),%edx
   1f02d:	80 fa 5f             	cmp    $0x5f,%dl
   1f030:	74 47                	je     1f079 <_ZN14rustc_demangle2v06Parser9skip_path17h92f436ed624d331fE+0x1a9>
   1f032:	8d 6a d0             	lea    -0x30(%rdx),%ebp
   1f035:	40 80 fd 0a          	cmp    $0xa,%bpl
   1f039:	72 20                	jb     1f05b <_ZN14rustc_demangle2v06Parser9skip_path17h92f436ed624d331fE+0x18b>
   1f03b:	8d 6a 9f             	lea    -0x61(%rdx),%ebp
   1f03e:	40 80 fd 1a          	cmp    $0x1a,%bpl
   1f042:	73 05                	jae    1f049 <_ZN14rustc_demangle2v06Parser9skip_path17h92f436ed624d331fE+0x179>
   1f044:	80 c2 a9             	add    $0xa9,%dl
   1f047:	eb 10                	jmp    1f059 <_ZN14rustc_demangle2v06Parser9skip_path17h92f436ed624d331fE+0x189>
   1f049:	8d 6a bf             	lea    -0x41(%rdx),%ebp
   1f04c:	40 80 fd 1a          	cmp    $0x1a,%bpl
   1f050:	0f 83 80 03 00 00    	jae    1f3d6 <_ZN14rustc_demangle2v06Parser9skip_path17h92f436ed624d331fE+0x506>
   1f056:	80 c2 e3             	add    $0xe3,%dl
   1f059:	89 d5                	mov    %edx,%ebp
   1f05b:	48 83 c7 01          	add    $0x1,%rdi
   1f05f:	49 89 3e             	mov    %rdi,(%r14)
   1f062:	49 f7 e7             	mul    %r15
   1f065:	0f 80 6b 03 00 00    	jo     1f3d6 <_ZN14rustc_demangle2v06Parser9skip_path17h92f436ed624d331fE+0x506>
   1f06b:	40 0f b6 d5          	movzbl %bpl,%edx
   1f06f:	48 01 d0             	add    %rdx,%rax
   1f072:	73 ac                	jae    1f020 <_ZN14rustc_demangle2v06Parser9skip_path17h92f436ed624d331fE+0x150>
   1f074:	e9 5d 03 00 00       	jmpq   1f3d6 <_ZN14rustc_demangle2v06Parser9skip_path17h92f436ed624d331fE+0x506>
   1f079:	48 83 c7 01          	add    $0x1,%rdi
   1f07d:	49 89 3e             	mov    %rdi,(%r14)
   1f080:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
   1f084:	0f 85 16 ff ff ff    	jne    1efa0 <_ZN14rustc_demangle2v06Parser9skip_path17h92f436ed624d331fE+0xd0>
   1f08a:	e9 47 03 00 00       	jmpq   1f3d6 <_ZN14rustc_demangle2v06Parser9skip_path17h92f436ed624d331fE+0x506>
   1f08f:	48 39 e9             	cmp    %rbp,%rcx
   1f092:	0f 86 f4 02 00 00    	jbe    1f38c <_ZN14rustc_demangle2v06Parser9skip_path17h92f436ed624d331fE+0x4bc>
   1f098:	80 3c 2e 73          	cmpb   $0x73,(%rsi,%rbp,1)
   1f09c:	0f 85 ea 02 00 00    	jne    1f38c <_ZN14rustc_demangle2v06Parser9skip_path17h92f436ed624d331fE+0x4bc>
   1f0a2:	48 8d 6f 02          	lea    0x2(%rdi),%rbp
   1f0a6:	49 89 2e             	mov    %rbp,(%r14)
   1f0a9:	48 39 e9             	cmp    %rbp,%rcx
   1f0ac:	0f 86 ac 01 00 00    	jbe    1f25e <_ZN14rustc_demangle2v06Parser9skip_path17h92f436ed624d331fE+0x38e>
   1f0b2:	80 3c 2e 5f          	cmpb   $0x5f,(%rsi,%rbp,1)
   1f0b6:	0f 85 a2 01 00 00    	jne    1f25e <_ZN14rustc_demangle2v06Parser9skip_path17h92f436ed624d331fE+0x38e>
   1f0bc:	48 83 c7 03          	add    $0x3,%rdi
   1f0c0:	49 89 3e             	mov    %rdi,(%r14)
   1f0c3:	48 89 df             	mov    %rbx,%rdi
   1f0c6:	e8 05 fe ff ff       	callq  1eed0 <_ZN14rustc_demangle2v06Parser9skip_path17h92f436ed624d331fE>
   1f0cb:	84 c0                	test   %al,%al
   1f0cd:	0f 84 c5 02 00 00    	je     1f398 <_ZN14rustc_demangle2v06Parser9skip_path17h92f436ed624d331fE+0x4c8>
   1f0d3:	e9 fe 02 00 00       	jmpq   1f3d6 <_ZN14rustc_demangle2v06Parser9skip_path17h92f436ed624d331fE+0x506>
   1f0d8:	48 39 e9             	cmp    %rbp,%rcx
   1f0db:	0f 86 f5 02 00 00    	jbe    1f3d6 <_ZN14rustc_demangle2v06Parser9skip_path17h92f436ed624d331fE+0x506>
   1f0e1:	8a 44 3e 01          	mov    0x1(%rsi,%rdi,1),%al
   1f0e5:	48 83 c7 02          	add    $0x2,%rdi
   1f0e9:	49 89 3e             	mov    %rdi,(%r14)
   1f0ec:	24 df                	and    $0xdf,%al
   1f0ee:	04 bf                	add    $0xbf,%al
   1f0f0:	3c 19                	cmp    $0x19,%al
   1f0f2:	0f 87 de 02 00 00    	ja     1f3d6 <_ZN14rustc_demangle2v06Parser9skip_path17h92f436ed624d331fE+0x506>
   1f0f8:	48 89 df             	mov    %rbx,%rdi
   1f0fb:	e8 d0 fd ff ff       	callq  1eed0 <_ZN14rustc_demangle2v06Parser9skip_path17h92f436ed624d331fE>
   1f100:	84 c0                	test   %al,%al
   1f102:	0f 85 ce 02 00 00    	jne    1f3d6 <_ZN14rustc_demangle2v06Parser9skip_path17h92f436ed624d331fE+0x506>
   1f108:	48 8b 4b 08          	mov    0x8(%rbx),%rcx
   1f10c:	48 8b 43 10          	mov    0x10(%rbx),%rax
   1f110:	48 39 c1             	cmp    %rax,%rcx
   1f113:	0f 86 4b 02 00 00    	jbe    1f364 <_ZN14rustc_demangle2v06Parser9skip_path17h92f436ed624d331fE+0x494>
   1f119:	48 8b 33             	mov    (%rbx),%rsi
   1f11c:	80 3c 06 73          	cmpb   $0x73,(%rsi,%rax,1)
   1f120:	0f 85 3e 02 00 00    	jne    1f364 <_ZN14rustc_demangle2v06Parser9skip_path17h92f436ed624d331fE+0x494>
   1f126:	48 8d 78 01          	lea    0x1(%rax),%rdi
   1f12a:	49 89 3e             	mov    %rdi,(%r14)
   1f12d:	48 39 f9             	cmp    %rdi,%rcx
   1f130:	0f 86 c4 02 00 00    	jbe    1f3fa <_ZN14rustc_demangle2v06Parser9skip_path17h92f436ed624d331fE+0x52a>
   1f136:	80 3c 3e 5f          	cmpb   $0x5f,(%rsi,%rdi,1)
   1f13a:	0f 85 ba 02 00 00    	jne    1f3fa <_ZN14rustc_demangle2v06Parser9skip_path17h92f436ed624d331fE+0x52a>
   1f140:	48 83 c0 02          	add    $0x2,%rax
   1f144:	49 89 06             	mov    %rax,(%r14)
   1f147:	e9 18 02 00 00       	jmpq   1f364 <_ZN14rustc_demangle2v06Parser9skip_path17h92f436ed624d331fE+0x494>
   1f14c:	48 39 e9             	cmp    %rbp,%rcx
   1f14f:	0f 86 69 02 00 00    	jbe    1f3be <_ZN14rustc_demangle2v06Parser9skip_path17h92f436ed624d331fE+0x4ee>
   1f155:	80 3c 2e 73          	cmpb   $0x73,(%rsi,%rbp,1)
   1f159:	0f 85 5f 02 00 00    	jne    1f3be <_ZN14rustc_demangle2v06Parser9skip_path17h92f436ed624d331fE+0x4ee>
   1f15f:	48 8d 6f 02          	lea    0x2(%rdi),%rbp
   1f163:	49 89 2e             	mov    %rbp,(%r14)
   1f166:	48 39 e9             	cmp    %rbp,%rcx
   1f169:	0f 86 54 01 00 00    	jbe    1f2c3 <_ZN14rustc_demangle2v06Parser9skip_path17h92f436ed624d331fE+0x3f3>
   1f16f:	80 3c 2e 5f          	cmpb   $0x5f,(%rsi,%rbp,1)
   1f173:	0f 85 4a 01 00 00    	jne    1f2c3 <_ZN14rustc_demangle2v06Parser9skip_path17h92f436ed624d331fE+0x3f3>
   1f179:	48 83 c7 03          	add    $0x3,%rdi
   1f17d:	49 89 3e             	mov    %rdi,(%r14)
   1f180:	48 89 df             	mov    %rbx,%rdi
   1f183:	e8 48 fd ff ff       	callq  1eed0 <_ZN14rustc_demangle2v06Parser9skip_path17h92f436ed624d331fE>
   1f188:	84 c0                	test   %al,%al
   1f18a:	0f 84 3a 02 00 00    	je     1f3ca <_ZN14rustc_demangle2v06Parser9skip_path17h92f436ed624d331fE+0x4fa>
   1f190:	e9 41 02 00 00       	jmpq   1f3d6 <_ZN14rustc_demangle2v06Parser9skip_path17h92f436ed624d331fE+0x506>
   1f195:	31 c0                	xor    %eax,%eax
   1f197:	41 b8 3e 00 00 00    	mov    $0x3e,%r8d
   1f19d:	0f 1f 00             	nopl   (%rax)
   1f1a0:	48 39 e9             	cmp    %rbp,%rcx
   1f1a3:	0f 86 2d 02 00 00    	jbe    1f3d6 <_ZN14rustc_demangle2v06Parser9skip_path17h92f436ed624d331fE+0x506>
   1f1a9:	0f b6 14 2e          	movzbl (%rsi,%rbp,1),%edx
   1f1ad:	80 fa 5f             	cmp    $0x5f,%dl
   1f1b0:	0f 84 72 01 00 00    	je     1f328 <_ZN14rustc_demangle2v06Parser9skip_path17h92f436ed624d331fE+0x458>
   1f1b6:	8d 5a d0             	lea    -0x30(%rdx),%ebx
   1f1b9:	80 fb 0a             	cmp    $0xa,%bl
   1f1bc:	72 1e                	jb     1f1dc <_ZN14rustc_demangle2v06Parser9skip_path17h92f436ed624d331fE+0x30c>
   1f1be:	8d 5a 9f             	lea    -0x61(%rdx),%ebx
   1f1c1:	80 fb 1a             	cmp    $0x1a,%bl
   1f1c4:	73 05                	jae    1f1cb <_ZN14rustc_demangle2v06Parser9skip_path17h92f436ed624d331fE+0x2fb>
   1f1c6:	80 c2 a9             	add    $0xa9,%dl
   1f1c9:	eb 0f                	jmp    1f1da <_ZN14rustc_demangle2v06Parser9skip_path17h92f436ed624d331fE+0x30a>
   1f1cb:	8d 5a bf             	lea    -0x41(%rdx),%ebx
   1f1ce:	80 fb 1a             	cmp    $0x1a,%bl
   1f1d1:	0f 83 ff 01 00 00    	jae    1f3d6 <_ZN14rustc_demangle2v06Parser9skip_path17h92f436ed624d331fE+0x506>
   1f1d7:	80 c2 e3             	add    $0xe3,%dl
   1f1da:	89 d3                	mov    %edx,%ebx
   1f1dc:	48 83 c5 01          	add    $0x1,%rbp
   1f1e0:	49 89 2e             	mov    %rbp,(%r14)
   1f1e3:	49 f7 e0             	mul    %r8
   1f1e6:	0f 80 ea 01 00 00    	jo     1f3d6 <_ZN14rustc_demangle2v06Parser9skip_path17h92f436ed624d331fE+0x506>
   1f1ec:	0f b6 d3             	movzbl %bl,%edx
   1f1ef:	48 01 d0             	add    %rdx,%rax
   1f1f2:	73 ac                	jae    1f1a0 <_ZN14rustc_demangle2v06Parser9skip_path17h92f436ed624d331fE+0x2d0>
   1f1f4:	e9 dd 01 00 00       	jmpq   1f3d6 <_ZN14rustc_demangle2v06Parser9skip_path17h92f436ed624d331fE+0x506>
   1f1f9:	31 c0                	xor    %eax,%eax
   1f1fb:	41 b8 3e 00 00 00    	mov    $0x3e,%r8d
   1f201:	48 39 e9             	cmp    %rbp,%rcx
   1f204:	0f 86 cc 01 00 00    	jbe    1f3d6 <_ZN14rustc_demangle2v06Parser9skip_path17h92f436ed624d331fE+0x506>
   1f20a:	0f b6 14 2e          	movzbl (%rsi,%rbp,1),%edx
   1f20e:	80 fa 5f             	cmp    $0x5f,%dl
   1f211:	0f 84 3b 01 00 00    	je     1f352 <_ZN14rustc_demangle2v06Parser9skip_path17h92f436ed624d331fE+0x482>
   1f217:	8d 7a d0             	lea    -0x30(%rdx),%edi
   1f21a:	40 80 ff 0a          	cmp    $0xa,%dil
   1f21e:	72 20                	jb     1f240 <_ZN14rustc_demangle2v06Parser9skip_path17h92f436ed624d331fE+0x370>
   1f220:	8d 7a 9f             	lea    -0x61(%rdx),%edi
   1f223:	40 80 ff 1a          	cmp    $0x1a,%dil
   1f227:	73 05                	jae    1f22e <_ZN14rustc_demangle2v06Parser9skip_path17h92f436ed624d331fE+0x35e>
   1f229:	80 c2 a9             	add    $0xa9,%dl
   1f22c:	eb 10                	jmp    1f23e <_ZN14rustc_demangle2v06Parser9skip_path17h92f436ed624d331fE+0x36e>
   1f22e:	8d 7a bf             	lea    -0x41(%rdx),%edi
   1f231:	40 80 ff 1a          	cmp    $0x1a,%dil
   1f235:	0f 83 9b 01 00 00    	jae    1f3d6 <_ZN14rustc_demangle2v06Parser9skip_path17h92f436ed624d331fE+0x506>
   1f23b:	80 c2 e3             	add    $0xe3,%dl
   1f23e:	89 d7                	mov    %edx,%edi
   1f240:	48 83 c5 01          	add    $0x1,%rbp
   1f244:	49 89 2e             	mov    %rbp,(%r14)
   1f247:	49 f7 e0             	mul    %r8
   1f24a:	0f 80 86 01 00 00    	jo     1f3d6 <_ZN14rustc_demangle2v06Parser9skip_path17h92f436ed624d331fE+0x506>
   1f250:	40 0f b6 d7          	movzbl %dil,%edx
   1f254:	48 01 d0             	add    %rdx,%rax
   1f257:	73 a8                	jae    1f201 <_ZN14rustc_demangle2v06Parser9skip_path17h92f436ed624d331fE+0x331>
   1f259:	e9 78 01 00 00       	jmpq   1f3d6 <_ZN14rustc_demangle2v06Parser9skip_path17h92f436ed624d331fE+0x506>
   1f25e:	31 c0                	xor    %eax,%eax
   1f260:	41 b8 3e 00 00 00    	mov    $0x3e,%r8d
   1f266:	48 39 e9             	cmp    %rbp,%rcx
   1f269:	0f 86 67 01 00 00    	jbe    1f3d6 <_ZN14rustc_demangle2v06Parser9skip_path17h92f436ed624d331fE+0x506>
   1f26f:	0f b6 14 2e          	movzbl (%rsi,%rbp,1),%edx
   1f273:	80 fa 5f             	cmp    $0x5f,%dl
   1f276:	0f 84 fe 00 00 00    	je     1f37a <_ZN14rustc_demangle2v06Parser9skip_path17h92f436ed624d331fE+0x4aa>
   1f27c:	8d 7a d0             	lea    -0x30(%rdx),%edi
   1f27f:	40 80 ff 0a          	cmp    $0xa,%dil
   1f283:	72 20                	jb     1f2a5 <_ZN14rustc_demangle2v06Parser9skip_path17h92f436ed624d331fE+0x3d5>
   1f285:	8d 7a 9f             	lea    -0x61(%rdx),%edi
   1f288:	40 80 ff 1a          	cmp    $0x1a,%dil
   1f28c:	73 05                	jae    1f293 <_ZN14rustc_demangle2v06Parser9skip_path17h92f436ed624d331fE+0x3c3>
   1f28e:	80 c2 a9             	add    $0xa9,%dl
   1f291:	eb 10                	jmp    1f2a3 <_ZN14rustc_demangle2v06Parser9skip_path17h92f436ed624d331fE+0x3d3>
   1f293:	8d 7a bf             	lea    -0x41(%rdx),%edi
   1f296:	40 80 ff 1a          	cmp    $0x1a,%dil
   1f29a:	0f 83 36 01 00 00    	jae    1f3d6 <_ZN14rustc_demangle2v06Parser9skip_path17h92f436ed624d331fE+0x506>
   1f2a0:	80 c2 e3             	add    $0xe3,%dl
   1f2a3:	89 d7                	mov    %edx,%edi
   1f2a5:	48 83 c5 01          	add    $0x1,%rbp
   1f2a9:	49 89 2e             	mov    %rbp,(%r14)
   1f2ac:	49 f7 e0             	mul    %r8
   1f2af:	0f 80 21 01 00 00    	jo     1f3d6 <_ZN14rustc_demangle2v06Parser9skip_path17h92f436ed624d331fE+0x506>
   1f2b5:	40 0f b6 d7          	movzbl %dil,%edx
   1f2b9:	48 01 d0             	add    %rdx,%rax
   1f2bc:	73 a8                	jae    1f266 <_ZN14rustc_demangle2v06Parser9skip_path17h92f436ed624d331fE+0x396>
   1f2be:	e9 13 01 00 00       	jmpq   1f3d6 <_ZN14rustc_demangle2v06Parser9skip_path17h92f436ed624d331fE+0x506>
   1f2c3:	31 c0                	xor    %eax,%eax
   1f2c5:	41 b8 3e 00 00 00    	mov    $0x3e,%r8d
   1f2cb:	48 39 e9             	cmp    %rbp,%rcx
   1f2ce:	0f 86 02 01 00 00    	jbe    1f3d6 <_ZN14rustc_demangle2v06Parser9skip_path17h92f436ed624d331fE+0x506>
   1f2d4:	0f b6 14 2e          	movzbl (%rsi,%rbp,1),%edx
   1f2d8:	80 fa 5f             	cmp    $0x5f,%dl
   1f2db:	0f 84 cb 00 00 00    	je     1f3ac <_ZN14rustc_demangle2v06Parser9skip_path17h92f436ed624d331fE+0x4dc>
   1f2e1:	8d 7a d0             	lea    -0x30(%rdx),%edi
   1f2e4:	40 80 ff 0a          	cmp    $0xa,%dil
   1f2e8:	72 20                	jb     1f30a <_ZN14rustc_demangle2v06Parser9skip_path17h92f436ed624d331fE+0x43a>
   1f2ea:	8d 7a 9f             	lea    -0x61(%rdx),%edi
   1f2ed:	40 80 ff 1a          	cmp    $0x1a,%dil
   1f2f1:	73 05                	jae    1f2f8 <_ZN14rustc_demangle2v06Parser9skip_path17h92f436ed624d331fE+0x428>
   1f2f3:	80 c2 a9             	add    $0xa9,%dl
   1f2f6:	eb 10                	jmp    1f308 <_ZN14rustc_demangle2v06Parser9skip_path17h92f436ed624d331fE+0x438>
   1f2f8:	8d 7a bf             	lea    -0x41(%rdx),%edi
   1f2fb:	40 80 ff 1a          	cmp    $0x1a,%dil
   1f2ff:	0f 83 d1 00 00 00    	jae    1f3d6 <_ZN14rustc_demangle2v06Parser9skip_path17h92f436ed624d331fE+0x506>
   1f305:	80 c2 e3             	add    $0xe3,%dl
   1f308:	89 d7                	mov    %edx,%edi
   1f30a:	48 83 c5 01          	add    $0x1,%rbp
   1f30e:	49 89 2e             	mov    %rbp,(%r14)
   1f311:	49 f7 e0             	mul    %r8
   1f314:	0f 80 bc 00 00 00    	jo     1f3d6 <_ZN14rustc_demangle2v06Parser9skip_path17h92f436ed624d331fE+0x506>
   1f31a:	40 0f b6 d7          	movzbl %dil,%edx
   1f31e:	48 01 d0             	add    %rdx,%rax
   1f321:	73 a8                	jae    1f2cb <_ZN14rustc_demangle2v06Parser9skip_path17h92f436ed624d331fE+0x3fb>
   1f323:	e9 ae 00 00 00       	jmpq   1f3d6 <_ZN14rustc_demangle2v06Parser9skip_path17h92f436ed624d331fE+0x506>
   1f328:	48 83 c5 01          	add    $0x1,%rbp
   1f32c:	49 89 2e             	mov    %rbp,(%r14)
   1f32f:	48 ff c0             	inc    %rax
   1f332:	0f 84 9e 00 00 00    	je     1f3d6 <_ZN14rustc_demangle2v06Parser9skip_path17h92f436ed624d331fE+0x506>
   1f338:	48 39 f8             	cmp    %rdi,%rax
   1f33b:	0f 93 c0             	setae  %al
   1f33e:	e9 96 00 00 00       	jmpq   1f3d9 <_ZN14rustc_demangle2v06Parser9skip_path17h92f436ed624d331fE+0x509>
   1f343:	48 83 c0 01          	add    $0x1,%rax
   1f347:	49 89 06             	mov    %rax,(%r14)
   1f34a:	45 31 e4             	xor    %r12d,%r12d
   1f34d:	e9 84 00 00 00       	jmpq   1f3d6 <_ZN14rustc_demangle2v06Parser9skip_path17h92f436ed624d331fE+0x506>
   1f352:	48 83 c5 01          	add    $0x1,%rbp
   1f356:	49 89 2e             	mov    %rbp,(%r14)
   1f359:	48 ff c0             	inc    %rax
   1f35c:	74 78                	je     1f3d6 <_ZN14rustc_demangle2v06Parser9skip_path17h92f436ed624d331fE+0x506>
   1f35e:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
   1f362:	74 72                	je     1f3d6 <_ZN14rustc_demangle2v06Parser9skip_path17h92f436ed624d331fE+0x506>
   1f364:	48 89 e7             	mov    %rsp,%rdi
   1f367:	48 89 de             	mov    %rbx,%rsi
   1f36a:	e8 01 f4 ff ff       	callq  1e770 <_ZN14rustc_demangle2v06Parser5ident17hd92f34ac92f9dd66E>
   1f36f:	48 83 3c 24 00       	cmpq   $0x0,(%rsp)
   1f374:	41 0f 94 c4          	sete   %r12b
   1f378:	eb 5c                	jmp    1f3d6 <_ZN14rustc_demangle2v06Parser9skip_path17h92f436ed624d331fE+0x506>
   1f37a:	48 83 c5 01          	add    $0x1,%rbp
   1f37e:	49 89 2e             	mov    %rbp,(%r14)
   1f381:	48 ff c0             	inc    %rax
   1f384:	74 50                	je     1f3d6 <_ZN14rustc_demangle2v06Parser9skip_path17h92f436ed624d331fE+0x506>
   1f386:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
   1f38a:	74 4a                	je     1f3d6 <_ZN14rustc_demangle2v06Parser9skip_path17h92f436ed624d331fE+0x506>
   1f38c:	48 89 df             	mov    %rbx,%rdi
   1f38f:	e8 3c fb ff ff       	callq  1eed0 <_ZN14rustc_demangle2v06Parser9skip_path17h92f436ed624d331fE>
   1f394:	84 c0                	test   %al,%al
   1f396:	75 3e                	jne    1f3d6 <_ZN14rustc_demangle2v06Parser9skip_path17h92f436ed624d331fE+0x506>
   1f398:	48 89 df             	mov    %rbx,%rdi
   1f39b:	48 83 c4 20          	add    $0x20,%rsp
   1f39f:	5b                   	pop    %rbx
   1f3a0:	41 5c                	pop    %r12
   1f3a2:	41 5e                	pop    %r14
   1f3a4:	41 5f                	pop    %r15
   1f3a6:	5d                   	pop    %rbp
   1f3a7:	e9 14 22 00 00       	jmpq   215c0 <_ZN14rustc_demangle2v06Parser9skip_type17hcade47368bc53de5E>
   1f3ac:	48 83 c5 01          	add    $0x1,%rbp
   1f3b0:	49 89 2e             	mov    %rbp,(%r14)
   1f3b3:	48 ff c0             	inc    %rax
   1f3b6:	74 1e                	je     1f3d6 <_ZN14rustc_demangle2v06Parser9skip_path17h92f436ed624d331fE+0x506>
   1f3b8:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
   1f3bc:	74 18                	je     1f3d6 <_ZN14rustc_demangle2v06Parser9skip_path17h92f436ed624d331fE+0x506>
   1f3be:	48 89 df             	mov    %rbx,%rdi
   1f3c1:	e8 0a fb ff ff       	callq  1eed0 <_ZN14rustc_demangle2v06Parser9skip_path17h92f436ed624d331fE>
   1f3c6:	84 c0                	test   %al,%al
   1f3c8:	75 0c                	jne    1f3d6 <_ZN14rustc_demangle2v06Parser9skip_path17h92f436ed624d331fE+0x506>
   1f3ca:	48 89 df             	mov    %rbx,%rdi
   1f3cd:	e8 ee 21 00 00       	callq  215c0 <_ZN14rustc_demangle2v06Parser9skip_type17hcade47368bc53de5E>
   1f3d2:	84 c0                	test   %al,%al
   1f3d4:	74 10                	je     1f3e6 <_ZN14rustc_demangle2v06Parser9skip_path17h92f436ed624d331fE+0x516>
   1f3d6:	44 89 e0             	mov    %r12d,%eax
   1f3d9:	48 83 c4 20          	add    $0x20,%rsp
   1f3dd:	5b                   	pop    %rbx
   1f3de:	41 5c                	pop    %r12
   1f3e0:	41 5e                	pop    %r14
   1f3e2:	41 5f                	pop    %r15
   1f3e4:	5d                   	pop    %rbp
   1f3e5:	c3                   	retq   
   1f3e6:	48 89 df             	mov    %rbx,%rdi
   1f3e9:	48 83 c4 20          	add    $0x20,%rsp
   1f3ed:	5b                   	pop    %rbx
   1f3ee:	41 5c                	pop    %r12
   1f3f0:	41 5e                	pop    %r14
   1f3f2:	41 5f                	pop    %r15
   1f3f4:	5d                   	pop    %rbp
   1f3f5:	e9 d6 fa ff ff       	jmpq   1eed0 <_ZN14rustc_demangle2v06Parser9skip_path17h92f436ed624d331fE>
   1f3fa:	31 c0                	xor    %eax,%eax
   1f3fc:	41 b8 3e 00 00 00    	mov    $0x3e,%r8d
   1f402:	48 39 f9             	cmp    %rdi,%rcx
   1f405:	76 cf                	jbe    1f3d6 <_ZN14rustc_demangle2v06Parser9skip_path17h92f436ed624d331fE+0x506>
   1f407:	0f b6 14 3e          	movzbl (%rsi,%rdi,1),%edx
   1f40b:	80 fa 5f             	cmp    $0x5f,%dl
   1f40e:	74 3c                	je     1f44c <_ZN14rustc_demangle2v06Parser9skip_path17h92f436ed624d331fE+0x57c>
   1f410:	8d 6a d0             	lea    -0x30(%rdx),%ebp
   1f413:	40 80 fd 0a          	cmp    $0xa,%bpl
   1f417:	72 1c                	jb     1f435 <_ZN14rustc_demangle2v06Parser9skip_path17h92f436ed624d331fE+0x565>
   1f419:	8d 6a 9f             	lea    -0x61(%rdx),%ebp
   1f41c:	40 80 fd 1a          	cmp    $0x1a,%bpl
   1f420:	73 05                	jae    1f427 <_ZN14rustc_demangle2v06Parser9skip_path17h92f436ed624d331fE+0x557>
   1f422:	80 c2 a9             	add    $0xa9,%dl
   1f425:	eb 0c                	jmp    1f433 <_ZN14rustc_demangle2v06Parser9skip_path17h92f436ed624d331fE+0x563>
   1f427:	8d 6a bf             	lea    -0x41(%rdx),%ebp
   1f42a:	40 80 fd 1a          	cmp    $0x1a,%bpl
   1f42e:	73 a6                	jae    1f3d6 <_ZN14rustc_demangle2v06Parser9skip_path17h92f436ed624d331fE+0x506>
   1f430:	80 c2 e3             	add    $0xe3,%dl
   1f433:	89 d5                	mov    %edx,%ebp
   1f435:	48 83 c7 01          	add    $0x1,%rdi
   1f439:	49 89 3e             	mov    %rdi,(%r14)
   1f43c:	49 f7 e0             	mul    %r8
   1f43f:	70 95                	jo     1f3d6 <_ZN14rustc_demangle2v06Parser9skip_path17h92f436ed624d331fE+0x506>
   1f441:	40 0f b6 d5          	movzbl %bpl,%edx
   1f445:	48 01 d0             	add    %rdx,%rax
   1f448:	73 b8                	jae    1f402 <_ZN14rustc_demangle2v06Parser9skip_path17h92f436ed624d331fE+0x532>
   1f44a:	eb 8a                	jmp    1f3d6 <_ZN14rustc_demangle2v06Parser9skip_path17h92f436ed624d331fE+0x506>
   1f44c:	48 83 c7 01          	add    $0x1,%rdi
   1f450:	49 89 3e             	mov    %rdi,(%r14)
   1f453:	48 ff c0             	inc    %rax
   1f456:	0f 85 02 ff ff ff    	jne    1f35e <_ZN14rustc_demangle2v06Parser9skip_path17h92f436ed624d331fE+0x48e>
   1f45c:	e9 75 ff ff ff       	jmpq   1f3d6 <_ZN14rustc_demangle2v06Parser9skip_path17h92f436ed624d331fE+0x506>
   1f461:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1f468:	00 00 00 
   1f46b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000001f470 <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE>:
   1f470:	55                   	push   %rbp
   1f471:	41 57                	push   %r15
   1f473:	41 56                	push   %r14
   1f475:	41 55                	push   %r13
   1f477:	41 54                	push   %r12
   1f479:	53                   	push   %rbx
   1f47a:	48 81 ec 98 00 00 00 	sub    $0x98,%rsp
   1f481:	48 89 fb             	mov    %rdi,%rbx
   1f484:	48 8b 07             	mov    (%rdi),%rax
   1f487:	48 85 c0             	test   %rax,%rax
   1f48a:	48 0f 45 c7          	cmovne %rdi,%rax
   1f48e:	0f 84 16 10 00 00    	je     204aa <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0x103a>
   1f494:	48 8b 48 10          	mov    0x10(%rax),%rcx
   1f498:	48 39 48 08          	cmp    %rcx,0x8(%rax)
   1f49c:	0f 86 08 10 00 00    	jbe    204aa <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0x103a>
   1f4a2:	48 8b 10             	mov    (%rax),%rdx
   1f4a5:	40 8a 2c 0a          	mov    (%rdx,%rcx,1),%bpl
   1f4a9:	48 83 c1 01          	add    $0x1,%rcx
   1f4ad:	48 89 48 10          	mov    %rcx,0x10(%rax)
   1f4b1:	8d 45 bf             	lea    -0x41(%rbp),%eax
   1f4b4:	3c 39                	cmp    $0x39,%al
   1f4b6:	0f 87 a0 02 00 00    	ja     1f75c <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0x2ec>
   1f4bc:	48 8d 35 bd cf 01 00 	lea    0x1cfbd(%rip),%rsi        # 3c480 <_ZN4core7unicode12unicode_data15grapheme_extend6BITSET17h68ce7f61ccfa32feE+0x9e0>
   1f4c3:	ba 04 00 00 00       	mov    $0x4,%edx
   1f4c8:	0f b6 c0             	movzbl %al,%eax
   1f4cb:	48 8d 0d 2e b4 01 00 	lea    0x1b42e(%rip),%rcx        # 3a900 <_ZN4core7unicode12unicode_data2cc19BITSET_INDEX_CHUNKS17h8a1f39cd536e9344E+0x440>
   1f4d2:	48 63 04 81          	movslq (%rcx,%rax,4),%rax
   1f4d6:	48 01 c8             	add    %rcx,%rax
   1f4d9:	ff e0                	jmpq   *%rax
   1f4db:	48 8b 43 18          	mov    0x18(%rbx),%rax
   1f4df:	48 8b 78 20          	mov    0x20(%rax),%rdi
   1f4e3:	48 8b 40 28          	mov    0x28(%rax),%rax
   1f4e7:	48 8d 35 e7 dc 01 00 	lea    0x1dce7(%rip),%rsi        # 3d1d5 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x875>
   1f4ee:	ba 01 00 00 00       	mov    $0x1,%edx
   1f4f3:	ff 50 18             	callq  *0x18(%rax)
   1f4f6:	41 b7 01             	mov    $0x1,%r15b
   1f4f9:	84 c0                	test   %al,%al
   1f4fb:	0f 85 7c 0e 00 00    	jne    2037d <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0xf0d>
   1f501:	48 89 df             	mov    %rbx,%rdi
   1f504:	e8 67 ff ff ff       	callq  1f470 <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE>
   1f509:	84 c0                	test   %al,%al
   1f50b:	0f 85 6c 0e 00 00    	jne    2037d <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0xf0d>
   1f511:	40 80 fd 41          	cmp    $0x41,%bpl
   1f515:	75 33                	jne    1f54a <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0xda>
   1f517:	48 8b 43 18          	mov    0x18(%rbx),%rax
   1f51b:	48 8b 78 20          	mov    0x20(%rax),%rdi
   1f51f:	48 8b 40 28          	mov    0x28(%rax),%rax
   1f523:	48 8d 35 45 dd 01 00 	lea    0x1dd45(%rip),%rsi        # 3d26f <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x90f>
   1f52a:	ba 02 00 00 00       	mov    $0x2,%edx
   1f52f:	ff 50 18             	callq  *0x18(%rax)
   1f532:	84 c0                	test   %al,%al
   1f534:	0f 85 43 0e 00 00    	jne    2037d <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0xf0d>
   1f53a:	48 89 df             	mov    %rbx,%rdi
   1f53d:	e8 6e 13 00 00       	callq  208b0 <_ZN14rustc_demangle2v07Printer11print_const17hb4ae55c3854d33ecE>
   1f542:	84 c0                	test   %al,%al
   1f544:	0f 85 33 0e 00 00    	jne    2037d <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0xf0d>
   1f54a:	48 8b 43 18          	mov    0x18(%rbx),%rax
   1f54e:	48 8b 78 20          	mov    0x20(%rax),%rdi
   1f552:	48 8b 40 28          	mov    0x28(%rax),%rax
   1f556:	48 8b 40 18          	mov    0x18(%rax),%rax
   1f55a:	48 8d 35 75 dc 01 00 	lea    0x1dc75(%rip),%rsi        # 3d1d6 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x876>
   1f561:	e9 62 0f 00 00       	jmpq   204c8 <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0x1058>
   1f566:	48 8b 43 18          	mov    0x18(%rbx),%rax
   1f56a:	48 8b 78 20          	mov    0x20(%rax),%rdi
   1f56e:	48 8b 40 28          	mov    0x28(%rax),%rax
   1f572:	48 8d 35 03 dc 01 00 	lea    0x1dc03(%rip),%rsi        # 3d17c <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x81c>
   1f579:	ba 01 00 00 00       	mov    $0x1,%edx
   1f57e:	ff 50 18             	callq  *0x18(%rax)
   1f581:	41 b7 01             	mov    $0x1,%r15b
   1f584:	84 c0                	test   %al,%al
   1f586:	0f 85 f1 0d 00 00    	jne    2037d <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0xf0d>
   1f58c:	48 8b 03             	mov    (%rbx),%rax
   1f58f:	48 85 c0             	test   %rax,%rax
   1f592:	48 0f 45 c3          	cmovne %rbx,%rax
   1f596:	74 52                	je     1f5ea <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0x17a>
   1f598:	48 8b 48 10          	mov    0x10(%rax),%rcx
   1f59c:	48 39 48 08          	cmp    %rcx,0x8(%rax)
   1f5a0:	76 48                	jbe    1f5ea <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0x17a>
   1f5a2:	48 8b 10             	mov    (%rax),%rdx
   1f5a5:	80 3c 0a 4c          	cmpb   $0x4c,(%rdx,%rcx,1)
   1f5a9:	75 3f                	jne    1f5ea <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0x17a>
   1f5ab:	48 83 c1 01          	add    $0x1,%rcx
   1f5af:	48 89 48 10          	mov    %rcx,0x10(%rax)
   1f5b3:	48 8b 0b             	mov    (%rbx),%rcx
   1f5b6:	48 85 c9             	test   %rcx,%rcx
   1f5b9:	48 0f 45 cb          	cmovne %rbx,%rcx
   1f5bd:	0f 84 e7 0e 00 00    	je     204aa <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0x103a>
   1f5c3:	4c 8b 01             	mov    (%rcx),%r8
   1f5c6:	4c 8b 51 08          	mov    0x8(%rcx),%r10
   1f5ca:	48 8b 71 10          	mov    0x10(%rcx),%rsi
   1f5ce:	49 39 f2             	cmp    %rsi,%r10
   1f5d1:	0f 86 29 05 00 00    	jbe    1fb00 <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0x690>
   1f5d7:	41 80 3c 30 5f       	cmpb   $0x5f,(%r8,%rsi,1)
   1f5dc:	0f 85 1e 05 00 00    	jne    1fb00 <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0x690>
   1f5e2:	48 83 c6 01          	add    $0x1,%rsi
   1f5e6:	48 89 71 10          	mov    %rsi,0x10(%rcx)
   1f5ea:	40 80 fd 52          	cmp    $0x52,%bpl
   1f5ee:	0f 84 be 03 00 00    	je     1f9b2 <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0x542>
   1f5f4:	48 8b 43 18          	mov    0x18(%rbx),%rax
   1f5f8:	48 8b 78 20          	mov    0x20(%rax),%rdi
   1f5fc:	48 8b 40 28          	mov    0x28(%rax),%rax
   1f600:	48 8d 35 7d ce 01 00 	lea    0x1ce7d(%rip),%rsi        # 3c484 <_ZN4core7unicode12unicode_data15grapheme_extend6BITSET17h68ce7f61ccfa32feE+0x9e4>
   1f607:	ba 04 00 00 00       	mov    $0x4,%edx
   1f60c:	ff 50 18             	callq  *0x18(%rax)
   1f60f:	84 c0                	test   %al,%al
   1f611:	0f 84 9b 03 00 00    	je     1f9b2 <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0x542>
   1f617:	e9 61 0d 00 00       	jmpq   2037d <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0xf0d>
   1f61c:	48 8b 43 18          	mov    0x18(%rbx),%rax
   1f620:	48 8b 78 20          	mov    0x20(%rax),%rdi
   1f624:	48 8b 40 28          	mov    0x28(%rax),%rax
   1f628:	48 8d 35 4c db 01 00 	lea    0x1db4c(%rip),%rsi        # 3d17b <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x81b>
   1f62f:	ba 01 00 00 00       	mov    $0x1,%edx
   1f634:	ff 50 18             	callq  *0x18(%rax)
   1f637:	41 b7 01             	mov    $0x1,%r15b
   1f63a:	84 c0                	test   %al,%al
   1f63c:	0f 85 3b 0d 00 00    	jne    2037d <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0xf0d>
   1f642:	48 8b 43 18          	mov    0x18(%rbx),%rax
   1f646:	48 8b 78 20          	mov    0x20(%rax),%rdi
   1f64a:	48 8b 40 28          	mov    0x28(%rax),%rax
   1f64e:	48 8b 40 18          	mov    0x18(%rax),%rax
   1f652:	40 80 fd 50          	cmp    $0x50,%bpl
   1f656:	0f 85 40 03 00 00    	jne    1f99c <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0x52c>
   1f65c:	48 8d 35 06 dc 01 00 	lea    0x1dc06(%rip),%rsi        # 3d269 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x909>
   1f663:	ba 06 00 00 00       	mov    $0x6,%edx
   1f668:	ff d0                	callq  *%rax
   1f66a:	84 c0                	test   %al,%al
   1f66c:	0f 84 40 03 00 00    	je     1f9b2 <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0x542>
   1f672:	e9 06 0d 00 00       	jmpq   2037d <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0xf0d>
   1f677:	48 8d 35 68 db 01 00 	lea    0x1db68(%rip),%rsi        # 3d1e6 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x886>
   1f67e:	ba 05 00 00 00       	mov    $0x5,%edx
   1f683:	e9 ff 02 00 00       	jmpq   1f987 <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0x517>
   1f688:	48 8d 35 e9 cd 01 00 	lea    0x1cde9(%rip),%rsi        # 3c478 <_ZN4core7unicode12unicode_data15grapheme_extend6BITSET17h68ce7f61ccfa32feE+0x9d8>
   1f68f:	e9 f3 02 00 00       	jmpq   1f987 <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0x517>
   1f694:	48 8d 35 b2 db 01 00 	lea    0x1dbb2(%rip),%rsi        # 3d24d <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x8ed>
   1f69b:	ba 03 00 00 00       	mov    $0x3,%edx
   1f6a0:	e9 e2 02 00 00       	jmpq   1f987 <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0x517>
   1f6a5:	48 8d 35 45 db 01 00 	lea    0x1db45(%rip),%rsi        # 3d1f1 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x891>
   1f6ac:	ba 03 00 00 00       	mov    $0x3,%edx
   1f6b1:	e9 d1 02 00 00       	jmpq   1f987 <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0x517>
   1f6b6:	48 8d 35 3b db 01 00 	lea    0x1db3b(%rip),%rsi        # 3d1f8 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x898>
   1f6bd:	ba 01 00 00 00       	mov    $0x1,%edx
   1f6c2:	e9 c0 02 00 00       	jmpq   1f987 <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0x517>
   1f6c7:	48 8d 35 8a db 01 00 	lea    0x1db8a(%rip),%rsi        # 3d258 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x8f8>
   1f6ce:	ba 03 00 00 00       	mov    $0x3,%edx
   1f6d3:	e9 af 02 00 00       	jmpq   1f987 <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0x517>
   1f6d8:	48 8d 35 95 cd 01 00 	lea    0x1cd95(%rip),%rsi        # 3c474 <_ZN4core7unicode12unicode_data15grapheme_extend6BITSET17h68ce7f61ccfa32feE+0x9d4>
   1f6df:	e9 a3 02 00 00       	jmpq   1f987 <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0x517>
   1f6e4:	48 8d 35 91 cd 01 00 	lea    0x1cd91(%rip),%rsi        # 3c47c <_ZN4core7unicode12unicode_data15grapheme_extend6BITSET17h68ce7f61ccfa32feE+0x9dc>
   1f6eb:	e9 97 02 00 00       	jmpq   1f987 <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0x517>
   1f6f0:	48 8d 35 64 db 01 00 	lea    0x1db64(%rip),%rsi        # 3d25b <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x8fb>
   1f6f7:	ba 03 00 00 00       	mov    $0x3,%edx
   1f6fc:	e9 86 02 00 00       	jmpq   1f987 <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0x517>
   1f701:	48 8d 35 e3 da 01 00 	lea    0x1dae3(%rip),%rsi        # 3d1eb <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x88b>
   1f708:	ba 03 00 00 00       	mov    $0x3,%edx
   1f70d:	e9 75 02 00 00       	jmpq   1f987 <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0x517>
   1f712:	48 8d 35 48 db 01 00 	lea    0x1db48(%rip),%rsi        # 3d261 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x901>
   1f719:	e9 64 02 00 00       	jmpq   1f982 <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0x512>
   1f71e:	48 8b 33             	mov    (%rbx),%rsi
   1f721:	48 85 f6             	test   %rsi,%rsi
   1f724:	48 0f 45 f3          	cmovne %rbx,%rsi
   1f728:	0f 84 7d 03 00 00    	je     1faab <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0x63b>
   1f72e:	4c 8b 4e 10          	mov    0x10(%rsi),%r9
   1f732:	4c 8b 1e             	mov    (%rsi),%r11
   1f735:	48 8b 4e 08          	mov    0x8(%rsi),%rcx
   1f739:	4c 39 c9             	cmp    %r9,%rcx
   1f73c:	0f 86 89 02 00 00    	jbe    1f9cb <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0x55b>
   1f742:	43 80 3c 0b 5f       	cmpb   $0x5f,(%r11,%r9,1)
   1f747:	0f 85 7e 02 00 00    	jne    1f9cb <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0x55b>
   1f74d:	49 8d 41 01          	lea    0x1(%r9),%rax
   1f751:	48 89 46 10          	mov    %rax,0x10(%rsi)
   1f755:	31 c0                	xor    %eax,%eax
   1f757:	e9 54 03 00 00       	jmpq   1fab0 <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0x640>
   1f75c:	48 83 3b 00          	cmpq   $0x0,(%rbx)
   1f760:	74 05                	je     1f767 <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0x2f7>
   1f762:	48 83 43 10 ff       	addq   $0xffffffffffffffff,0x10(%rbx)
   1f767:	48 89 df             	mov    %rbx,%rdi
   1f76a:	31 f6                	xor    %esi,%esi
   1f76c:	48 81 c4 98 00 00 00 	add    $0x98,%rsp
   1f773:	5b                   	pop    %rbx
   1f774:	41 5c                	pop    %r12
   1f776:	41 5d                	pop    %r13
   1f778:	41 5e                	pop    %r14
   1f77a:	41 5f                	pop    %r15
   1f77c:	5d                   	pop    %rbp
   1f77d:	e9 8e e5 ff ff       	jmpq   1dd10 <_ZN14rustc_demangle2v07Printer10print_path17haa095a98ac60aefaE>
   1f782:	48 8d 35 d5 da 01 00 	lea    0x1dad5(%rip),%rsi        # 3d25e <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x8fe>
   1f789:	ba 03 00 00 00       	mov    $0x3,%edx
   1f78e:	e9 f4 01 00 00       	jmpq   1f987 <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0x517>
   1f793:	48 8d 35 cb da 01 00 	lea    0x1dacb(%rip),%rsi        # 3d265 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x905>
   1f79a:	ba 03 00 00 00       	mov    $0x3,%edx
   1f79f:	e9 e3 01 00 00       	jmpq   1f987 <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0x517>
   1f7a4:	48 8d 35 a5 da 01 00 	lea    0x1daa5(%rip),%rsi        # 3d250 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x8f0>
   1f7ab:	ba 03 00 00 00       	mov    $0x3,%edx
   1f7b0:	e9 d2 01 00 00       	jmpq   1f987 <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0x517>
   1f7b5:	48 8d 35 90 da 01 00 	lea    0x1da90(%rip),%rsi        # 3d24c <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x8ec>
   1f7bc:	ba 01 00 00 00       	mov    $0x1,%edx
   1f7c1:	e9 c1 01 00 00       	jmpq   1f987 <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0x517>
   1f7c6:	48 8b 43 18          	mov    0x18(%rbx),%rax
   1f7ca:	48 8b 78 20          	mov    0x20(%rax),%rdi
   1f7ce:	48 8b 40 28          	mov    0x28(%rax),%rax
   1f7d2:	48 8d 35 b3 cc 01 00 	lea    0x1ccb3(%rip),%rsi        # 3c48c <_ZN4core7unicode12unicode_data15grapheme_extend6BITSET17h68ce7f61ccfa32feE+0x9ec>
   1f7d9:	ba 04 00 00 00       	mov    $0x4,%edx
   1f7de:	ff 50 18             	callq  *0x18(%rax)
   1f7e1:	41 b7 01             	mov    $0x1,%r15b
   1f7e4:	84 c0                	test   %al,%al
   1f7e6:	0f 85 91 0b 00 00    	jne    2037d <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0xf0d>
   1f7ec:	48 8b 0b             	mov    (%rbx),%rcx
   1f7ef:	48 85 c9             	test   %rcx,%rcx
   1f7f2:	48 0f 45 cb          	cmovne %rbx,%rcx
   1f7f6:	0f 84 e7 08 00 00    	je     200e3 <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0xc73>
   1f7fc:	48 8b 71 08          	mov    0x8(%rcx),%rsi
   1f800:	48 8b 41 10          	mov    0x10(%rcx),%rax
   1f804:	48 39 c6             	cmp    %rax,%rsi
   1f807:	0f 86 50 09 00 00    	jbe    2015d <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0xced>
   1f80d:	4c 8b 09             	mov    (%rcx),%r9
   1f810:	41 80 3c 01 47       	cmpb   $0x47,(%r9,%rax,1)
   1f815:	0f 85 d1 02 00 00    	jne    1faec <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0x67c>
   1f81b:	48 8d 68 01          	lea    0x1(%rax),%rbp
   1f81f:	48 89 69 10          	mov    %rbp,0x10(%rcx)
   1f823:	48 39 ee             	cmp    %rbp,%rsi
   1f826:	0f 86 3b 03 00 00    	jbe    1fb67 <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0x6f7>
   1f82c:	41 80 3c 29 5f       	cmpb   $0x5f,(%r9,%rbp,1)
   1f831:	0f 85 30 03 00 00    	jne    1fb67 <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0x6f7>
   1f837:	48 83 c0 02          	add    $0x2,%rax
   1f83b:	48 89 41 10          	mov    %rax,0x10(%rcx)
   1f83f:	45 31 f6             	xor    %r14d,%r14d
   1f842:	49 ff c6             	inc    %r14
   1f845:	0f 84 98 08 00 00    	je     200e3 <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0xc73>
   1f84b:	e9 d2 08 00 00       	jmpq   20122 <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0xcb2>
   1f850:	48 8b 43 18          	mov    0x18(%rbx),%rax
   1f854:	48 8b 78 20          	mov    0x20(%rax),%rdi
   1f858:	48 8b 40 28          	mov    0x28(%rax),%rax
   1f85c:	48 8d 35 1c d9 01 00 	lea    0x1d91c(%rip),%rsi        # 3d17f <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x81f>
   1f863:	ba 01 00 00 00       	mov    $0x1,%edx
   1f868:	ff 50 18             	callq  *0x18(%rax)
   1f86b:	41 b7 01             	mov    $0x1,%r15b
   1f86e:	84 c0                	test   %al,%al
   1f870:	0f 85 07 0b 00 00    	jne    2037d <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0xf0d>
   1f876:	48 8b 03             	mov    (%rbx),%rax
   1f879:	48 85 c0             	test   %rax,%rax
   1f87c:	0f 84 7f 03 00 00    	je     1fc01 <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0x791>
   1f882:	31 ed                	xor    %ebp,%ebp
   1f884:	4c 8d 35 59 d9 01 00 	lea    0x1d959(%rip),%r14        # 3d1e4 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x884>
   1f88b:	48 8b 4b 10          	mov    0x10(%rbx),%rcx
   1f88f:	48 39 4b 08          	cmp    %rcx,0x8(%rbx)
   1f893:	76 0a                	jbe    1f89f <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0x42f>
   1f895:	80 3c 08 45          	cmpb   $0x45,(%rax,%rcx,1)
   1f899:	0f 84 31 03 00 00    	je     1fbd0 <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0x760>
   1f89f:	48 85 ed             	test   %rbp,%rbp
   1f8a2:	74 1f                	je     1f8c3 <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0x453>
   1f8a4:	48 8b 43 18          	mov    0x18(%rbx),%rax
   1f8a8:	48 8b 78 20          	mov    0x20(%rax),%rdi
   1f8ac:	48 8b 40 28          	mov    0x28(%rax),%rax
   1f8b0:	ba 02 00 00 00       	mov    $0x2,%edx
   1f8b5:	4c 89 f6             	mov    %r14,%rsi
   1f8b8:	ff 50 18             	callq  *0x18(%rax)
   1f8bb:	84 c0                	test   %al,%al
   1f8bd:	0f 85 ba 0a 00 00    	jne    2037d <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0xf0d>
   1f8c3:	48 89 df             	mov    %rbx,%rdi
   1f8c6:	e8 a5 fb ff ff       	callq  1f470 <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE>
   1f8cb:	84 c0                	test   %al,%al
   1f8cd:	0f 85 aa 0a 00 00    	jne    2037d <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0xf0d>
   1f8d3:	48 83 c5 01          	add    $0x1,%rbp
   1f8d7:	48 8b 03             	mov    (%rbx),%rax
   1f8da:	48 85 c0             	test   %rax,%rax
   1f8dd:	75 ac                	jne    1f88b <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0x41b>
   1f8df:	e9 f4 02 00 00       	jmpq   1fbd8 <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0x768>
   1f8e4:	48 8b 0b             	mov    (%rbx),%rcx
   1f8e7:	48 85 c9             	test   %rcx,%rcx
   1f8ea:	48 0f 45 cb          	cmovne %rbx,%rcx
   1f8ee:	0f 84 3b 03 00 00    	je     1fc2f <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0x7bf>
   1f8f4:	48 8b 71 08          	mov    0x8(%rcx),%rsi
   1f8f8:	48 8b 41 10          	mov    0x10(%rcx),%rax
   1f8fc:	48 39 c6             	cmp    %rax,%rsi
   1f8ff:	0f 86 93 03 00 00    	jbe    1fc98 <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0x828>
   1f905:	4c 8b 01             	mov    (%rcx),%r8
   1f908:	41 80 3c 00 47       	cmpb   $0x47,(%r8,%rax,1)
   1f90d:	0f 85 85 03 00 00    	jne    1fc98 <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0x828>
   1f913:	48 8d 78 01          	lea    0x1(%rax),%rdi
   1f917:	48 89 79 10          	mov    %rdi,0x10(%rcx)
   1f91b:	48 39 fe             	cmp    %rdi,%rsi
   1f91e:	0f 86 11 01 00 00    	jbe    1fa35 <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0x5c5>
   1f924:	41 80 3c 38 5f       	cmpb   $0x5f,(%r8,%rdi,1)
   1f929:	0f 85 06 01 00 00    	jne    1fa35 <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0x5c5>
   1f92f:	48 83 c0 02          	add    $0x2,%rax
   1f933:	48 89 41 10          	mov    %rax,0x10(%rcx)
   1f937:	45 31 ff             	xor    %r15d,%r15d
   1f93a:	49 ff c7             	inc    %r15
   1f93d:	0f 84 ec 02 00 00    	je     1fc2f <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0x7bf>
   1f943:	e9 19 03 00 00       	jmpq   1fc61 <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0x7f1>
   1f948:	48 8d 35 04 d9 01 00 	lea    0x1d904(%rip),%rsi        # 3d253 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x8f3>
   1f94f:	ba 05 00 00 00       	mov    $0x5,%edx
   1f954:	eb 31                	jmp    1f987 <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0x517>
   1f956:	48 8d 35 97 d8 01 00 	lea    0x1d897(%rip),%rsi        # 3d1f4 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x894>
   1f95d:	eb 23                	jmp    1f982 <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0x512>
   1f95f:	48 8d 35 88 d8 01 00 	lea    0x1d888(%rip),%rsi        # 3d1ee <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x88e>
   1f966:	ba 03 00 00 00       	mov    $0x3,%edx
   1f96b:	eb 1a                	jmp    1f987 <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0x517>
   1f96d:	48 8d 35 d5 d8 01 00 	lea    0x1d8d5(%rip),%rsi        # 3d249 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x8e9>
   1f974:	ba 03 00 00 00       	mov    $0x3,%edx
   1f979:	eb 0c                	jmp    1f987 <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0x517>
   1f97b:	48 8d 35 e1 d8 01 00 	lea    0x1d8e1(%rip),%rsi        # 3d263 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x903>
   1f982:	ba 02 00 00 00       	mov    $0x2,%edx
   1f987:	48 8b 43 18          	mov    0x18(%rbx),%rax
   1f98b:	48 8b 78 20          	mov    0x20(%rax),%rdi
   1f98f:	48 8b 40 28          	mov    0x28(%rax),%rax
   1f993:	48 8b 40 18          	mov    0x18(%rax),%rax
   1f997:	e9 31 0b 00 00       	jmpq   204cd <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0x105d>
   1f99c:	48 8d 35 e1 ca 01 00 	lea    0x1cae1(%rip),%rsi        # 3c484 <_ZN4core7unicode12unicode_data15grapheme_extend6BITSET17h68ce7f61ccfa32feE+0x9e4>
   1f9a3:	ba 04 00 00 00       	mov    $0x4,%edx
   1f9a8:	ff d0                	callq  *%rax
   1f9aa:	84 c0                	test   %al,%al
   1f9ac:	0f 85 cb 09 00 00    	jne    2037d <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0xf0d>
   1f9b2:	48 89 df             	mov    %rbx,%rdi
   1f9b5:	48 81 c4 98 00 00 00 	add    $0x98,%rsp
   1f9bc:	5b                   	pop    %rbx
   1f9bd:	41 5c                	pop    %r12
   1f9bf:	41 5d                	pop    %r13
   1f9c1:	41 5e                	pop    %r14
   1f9c3:	41 5f                	pop    %r15
   1f9c5:	5d                   	pop    %rbp
   1f9c6:	e9 a5 fa ff ff       	jmpq   1f470 <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE>
   1f9cb:	45 31 c0             	xor    %r8d,%r8d
   1f9ce:	41 ba 3e 00 00 00    	mov    $0x3e,%r10d
   1f9d4:	4c 89 cd             	mov    %r9,%rbp
   1f9d7:	31 c0                	xor    %eax,%eax
   1f9d9:	48 39 e9             	cmp    %rbp,%rcx
   1f9dc:	0f 86 cc 00 00 00    	jbe    1faae <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0x63e>
   1f9e2:	41 0f b6 14 2b       	movzbl (%r11,%rbp,1),%edx
   1f9e7:	80 fa 5f             	cmp    $0x5f,%dl
   1f9ea:	0f 84 ae 00 00 00    	je     1fa9e <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0x62e>
   1f9f0:	8d 7a d0             	lea    -0x30(%rdx),%edi
   1f9f3:	40 80 ff 0a          	cmp    $0xa,%dil
   1f9f7:	72 20                	jb     1fa19 <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0x5a9>
   1f9f9:	8d 7a 9f             	lea    -0x61(%rdx),%edi
   1f9fc:	40 80 ff 1a          	cmp    $0x1a,%dil
   1fa00:	73 05                	jae    1fa07 <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0x597>
   1fa02:	80 c2 a9             	add    $0xa9,%dl
   1fa05:	eb 10                	jmp    1fa17 <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0x5a7>
   1fa07:	8d 7a bf             	lea    -0x41(%rdx),%edi
   1fa0a:	40 80 ff 1a          	cmp    $0x1a,%dil
   1fa0e:	0f 83 9a 00 00 00    	jae    1faae <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0x63e>
   1fa14:	80 c2 e3             	add    $0xe3,%dl
   1fa17:	89 d7                	mov    %edx,%edi
   1fa19:	48 83 c5 01          	add    $0x1,%rbp
   1fa1d:	48 89 6e 10          	mov    %rbp,0x10(%rsi)
   1fa21:	49 f7 e2             	mul    %r10
   1fa24:	0f 80 84 00 00 00    	jo     1faae <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0x63e>
   1fa2a:	40 0f b6 d7          	movzbl %dil,%edx
   1fa2e:	48 01 d0             	add    %rdx,%rax
   1fa31:	73 a6                	jae    1f9d9 <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0x569>
   1fa33:	eb 79                	jmp    1faae <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0x63e>
   1fa35:	45 31 ff             	xor    %r15d,%r15d
   1fa38:	41 b9 3e 00 00 00    	mov    $0x3e,%r9d
   1fa3e:	48 39 fe             	cmp    %rdi,%rsi
   1fa41:	0f 86 e8 01 00 00    	jbe    1fc2f <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0x7bf>
   1fa47:	41 0f b6 04 38       	movzbl (%r8,%rdi,1),%eax
   1fa4c:	3c 5f                	cmp    $0x5f,%al
   1fa4e:	0f 84 c9 01 00 00    	je     1fc1d <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0x7ad>
   1fa54:	8d 68 d0             	lea    -0x30(%rax),%ebp
   1fa57:	40 80 fd 0a          	cmp    $0xa,%bpl
   1fa5b:	72 1c                	jb     1fa79 <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0x609>
   1fa5d:	8d 50 9f             	lea    -0x61(%rax),%edx
   1fa60:	80 fa 1a             	cmp    $0x1a,%dl
   1fa63:	73 04                	jae    1fa69 <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0x5f9>
   1fa65:	04 a9                	add    $0xa9,%al
   1fa67:	eb 0e                	jmp    1fa77 <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0x607>
   1fa69:	8d 50 bf             	lea    -0x41(%rax),%edx
   1fa6c:	80 fa 1a             	cmp    $0x1a,%dl
   1fa6f:	0f 83 ba 01 00 00    	jae    1fc2f <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0x7bf>
   1fa75:	04 e3                	add    $0xe3,%al
   1fa77:	89 c5                	mov    %eax,%ebp
   1fa79:	48 83 c7 01          	add    $0x1,%rdi
   1fa7d:	48 89 79 10          	mov    %rdi,0x10(%rcx)
   1fa81:	4c 89 f8             	mov    %r15,%rax
   1fa84:	49 f7 e1             	mul    %r9
   1fa87:	0f 80 a2 01 00 00    	jo     1fc2f <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0x7bf>
   1fa8d:	49 89 c7             	mov    %rax,%r15
   1fa90:	40 0f b6 c5          	movzbl %bpl,%eax
   1fa94:	49 01 c7             	add    %rax,%r15
   1fa97:	73 a5                	jae    1fa3e <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0x5ce>
   1fa99:	e9 91 01 00 00       	jmpq   1fc2f <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0x7bf>
   1fa9e:	48 83 c5 01          	add    $0x1,%rbp
   1faa2:	48 89 6e 10          	mov    %rbp,0x10(%rsi)
   1faa6:	48 ff c0             	inc    %rax
   1faa9:	75 05                	jne    1fab0 <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0x640>
   1faab:	45 31 c0             	xor    %r8d,%r8d
   1faae:	eb 0e                	jmp    1fabe <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0x64e>
   1fab0:	49 83 c1 ff          	add    $0xffffffffffffffff,%r9
   1fab4:	45 31 c0             	xor    %r8d,%r8d
   1fab7:	4c 39 c8             	cmp    %r9,%rax
   1faba:	4d 0f 42 c3          	cmovb  %r11,%r8
   1fabe:	48 8b 53 18          	mov    0x18(%rbx),%rdx
   1fac2:	8b 73 20             	mov    0x20(%rbx),%esi
   1fac5:	4c 89 04 24          	mov    %r8,(%rsp)
   1fac9:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
   1face:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   1fad3:	48 89 54 24 18       	mov    %rdx,0x18(%rsp)
   1fad8:	89 74 24 20          	mov    %esi,0x20(%rsp)
   1fadc:	48 89 e7             	mov    %rsp,%rdi
   1fadf:	e8 8c f9 ff ff       	callq  1f470 <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE>
   1fae4:	41 89 c7             	mov    %eax,%r15d
   1fae7:	e9 91 08 00 00       	jmpq   2037d <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0xf0d>
   1faec:	45 31 f6             	xor    %r14d,%r14d
   1faef:	48 8b 03             	mov    (%rbx),%rax
   1faf2:	48 85 c0             	test   %rax,%rax
   1faf5:	0f 85 71 06 00 00    	jne    2016c <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0xcfc>
   1fafb:	e9 92 08 00 00       	jmpq   20392 <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0xf22>
   1fb00:	31 c0                	xor    %eax,%eax
   1fb02:	41 b9 3e 00 00 00    	mov    $0x3e,%r9d
   1fb08:	49 39 f2             	cmp    %rsi,%r10
   1fb0b:	0f 86 99 09 00 00    	jbe    204aa <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0x103a>
   1fb11:	41 0f b6 14 30       	movzbl (%r8,%rsi,1),%edx
   1fb16:	80 fa 5f             	cmp    $0x5f,%dl
   1fb19:	0f 84 bc 04 00 00    	je     1ffdb <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0xb6b>
   1fb1f:	8d 7a d0             	lea    -0x30(%rdx),%edi
   1fb22:	40 80 ff 0a          	cmp    $0xa,%dil
   1fb26:	72 20                	jb     1fb48 <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0x6d8>
   1fb28:	8d 7a 9f             	lea    -0x61(%rdx),%edi
   1fb2b:	40 80 ff 1a          	cmp    $0x1a,%dil
   1fb2f:	73 05                	jae    1fb36 <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0x6c6>
   1fb31:	80 c2 a9             	add    $0xa9,%dl
   1fb34:	eb 10                	jmp    1fb46 <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0x6d6>
   1fb36:	8d 7a bf             	lea    -0x41(%rdx),%edi
   1fb39:	40 80 ff 1a          	cmp    $0x1a,%dil
   1fb3d:	0f 83 67 09 00 00    	jae    204aa <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0x103a>
   1fb43:	80 c2 e3             	add    $0xe3,%dl
   1fb46:	89 d7                	mov    %edx,%edi
   1fb48:	48 83 c6 01          	add    $0x1,%rsi
   1fb4c:	48 89 71 10          	mov    %rsi,0x10(%rcx)
   1fb50:	49 f7 e1             	mul    %r9
   1fb53:	0f 80 51 09 00 00    	jo     204aa <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0x103a>
   1fb59:	40 0f b6 d7          	movzbl %dil,%edx
   1fb5d:	48 01 d0             	add    %rdx,%rax
   1fb60:	73 a6                	jae    1fb08 <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0x698>
   1fb62:	e9 43 09 00 00       	jmpq   204aa <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0x103a>
   1fb67:	45 31 f6             	xor    %r14d,%r14d
   1fb6a:	41 b8 3e 00 00 00    	mov    $0x3e,%r8d
   1fb70:	48 39 ee             	cmp    %rbp,%rsi
   1fb73:	0f 86 6a 05 00 00    	jbe    200e3 <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0xc73>
   1fb79:	41 0f b6 04 29       	movzbl (%r9,%rbp,1),%eax
   1fb7e:	3c 5f                	cmp    $0x5f,%al
   1fb80:	0f 84 4b 05 00 00    	je     200d1 <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0xc61>
   1fb86:	8d 78 d0             	lea    -0x30(%rax),%edi
   1fb89:	40 80 ff 0a          	cmp    $0xa,%dil
   1fb8d:	72 1c                	jb     1fbab <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0x73b>
   1fb8f:	8d 50 9f             	lea    -0x61(%rax),%edx
   1fb92:	80 fa 1a             	cmp    $0x1a,%dl
   1fb95:	73 04                	jae    1fb9b <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0x72b>
   1fb97:	04 a9                	add    $0xa9,%al
   1fb99:	eb 0e                	jmp    1fba9 <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0x739>
   1fb9b:	8d 50 bf             	lea    -0x41(%rax),%edx
   1fb9e:	80 fa 1a             	cmp    $0x1a,%dl
   1fba1:	0f 83 3c 05 00 00    	jae    200e3 <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0xc73>
   1fba7:	04 e3                	add    $0xe3,%al
   1fba9:	89 c7                	mov    %eax,%edi
   1fbab:	48 83 c5 01          	add    $0x1,%rbp
   1fbaf:	48 89 69 10          	mov    %rbp,0x10(%rcx)
   1fbb3:	4c 89 f0             	mov    %r14,%rax
   1fbb6:	49 f7 e0             	mul    %r8
   1fbb9:	0f 80 24 05 00 00    	jo     200e3 <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0xc73>
   1fbbf:	49 89 c6             	mov    %rax,%r14
   1fbc2:	40 0f b6 c7          	movzbl %dil,%eax
   1fbc6:	49 01 c6             	add    %rax,%r14
   1fbc9:	73 a5                	jae    1fb70 <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0x700>
   1fbcb:	e9 13 05 00 00       	jmpq   200e3 <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0xc73>
   1fbd0:	48 83 c1 01          	add    $0x1,%rcx
   1fbd4:	48 89 4b 10          	mov    %rcx,0x10(%rbx)
   1fbd8:	48 83 fd 01          	cmp    $0x1,%rbp
   1fbdc:	75 23                	jne    1fc01 <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0x791>
   1fbde:	48 8b 43 18          	mov    0x18(%rbx),%rax
   1fbe2:	48 8b 78 20          	mov    0x20(%rax),%rdi
   1fbe6:	48 8b 40 28          	mov    0x28(%rax),%rax
   1fbea:	48 8d 35 8f d5 01 00 	lea    0x1d58f(%rip),%rsi        # 3d180 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x820>
   1fbf1:	ba 01 00 00 00       	mov    $0x1,%edx
   1fbf6:	ff 50 18             	callq  *0x18(%rax)
   1fbf9:	84 c0                	test   %al,%al
   1fbfb:	0f 85 7c 07 00 00    	jne    2037d <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0xf0d>
   1fc01:	48 8b 43 18          	mov    0x18(%rbx),%rax
   1fc05:	48 8b 78 20          	mov    0x20(%rax),%rdi
   1fc09:	48 8b 40 28          	mov    0x28(%rax),%rax
   1fc0d:	48 8b 40 18          	mov    0x18(%rax),%rax
   1fc11:	48 8d 35 a8 dc 01 00 	lea    0x1dca8(%rip),%rsi        # 3d8c0 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0xf60>
   1fc18:	e9 ab 08 00 00       	jmpq   204c8 <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0x1058>
   1fc1d:	48 83 c7 01          	add    $0x1,%rdi
   1fc21:	48 89 79 10          	mov    %rdi,0x10(%rcx)
   1fc25:	49 ff c7             	inc    %r15
   1fc28:	74 05                	je     1fc2f <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0x7bf>
   1fc2a:	49 ff c7             	inc    %r15
   1fc2d:	75 32                	jne    1fc61 <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0x7f1>
   1fc2f:	48 c7 03 00 00 00 00 	movq   $0x0,(%rbx)
   1fc36:	48 8b 43 18          	mov    0x18(%rbx),%rax
   1fc3a:	48 8b 78 20          	mov    0x20(%rax),%rdi
   1fc3e:	48 8b 40 28          	mov    0x28(%rax),%rax
   1fc42:	48 8d 35 8b d5 01 00 	lea    0x1d58b(%rip),%rsi        # 3d1d4 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x874>
   1fc49:	ba 01 00 00 00       	mov    $0x1,%edx
   1fc4e:	ff 50 18             	callq  *0x18(%rax)
   1fc51:	84 c0                	test   %al,%al
   1fc53:	0f 84 70 04 00 00    	je     200c9 <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0xc59>
   1fc59:	41 b7 01             	mov    $0x1,%r15b
   1fc5c:	e9 1c 07 00 00       	jmpq   2037d <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0xf0d>
   1fc61:	4d 85 ff             	test   %r15,%r15
   1fc64:	74 32                	je     1fc98 <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0x828>
   1fc66:	48 8b 43 18          	mov    0x18(%rbx),%rax
   1fc6a:	48 8b 78 20          	mov    0x20(%rax),%rdi
   1fc6e:	48 8b 40 28          	mov    0x28(%rax),%rax
   1fc72:	48 8d 35 0f c8 01 00 	lea    0x1c80f(%rip),%rsi        # 3c488 <_ZN4core7unicode12unicode_data15grapheme_extend6BITSET17h68ce7f61ccfa32feE+0x9e8>
   1fc79:	ba 04 00 00 00       	mov    $0x4,%edx
   1fc7e:	ff 50 18             	callq  *0x18(%rax)
   1fc81:	84 c0                	test   %al,%al
   1fc83:	75 d4                	jne    1fc59 <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0x7e9>
   1fc85:	31 ed                	xor    %ebp,%ebp
   1fc87:	4c 8d 35 56 d5 01 00 	lea    0x1d556(%rip),%r14        # 3d1e4 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x884>
   1fc8e:	49 39 ef             	cmp    %rbp,%r15
   1fc91:	75 7e                	jne    1fd11 <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0x8a1>
   1fc93:	e9 48 08 00 00       	jmpq   204e0 <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0x1070>
   1fc98:	45 31 ff             	xor    %r15d,%r15d
   1fc9b:	48 8b 03             	mov    (%rbx),%rax
   1fc9e:	48 89 d9             	mov    %rbx,%rcx
   1fca1:	48 85 c0             	test   %rax,%rax
   1fca4:	48 0f 44 c8          	cmove  %rax,%rcx
   1fca8:	0f 84 07 01 00 00    	je     1fdb5 <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0x945>
   1fcae:	48 8b 51 10          	mov    0x10(%rcx),%rdx
   1fcb2:	48 39 51 08          	cmp    %rdx,0x8(%rcx)
   1fcb6:	76 21                	jbe    1fcd9 <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0x869>
   1fcb8:	48 8b 31             	mov    (%rcx),%rsi
   1fcbb:	80 3c 16 55          	cmpb   $0x55,(%rsi,%rdx,1)
   1fcbf:	75 75                	jne    1fd36 <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0x8c6>
   1fcc1:	48 83 c2 01          	add    $0x1,%rdx
   1fcc5:	48 89 51 10          	mov    %rdx,0x10(%rcx)
   1fcc9:	48 8b 03             	mov    (%rbx),%rax
   1fccc:	41 b4 01             	mov    $0x1,%r12b
   1fccf:	48 85 c0             	test   %rax,%rax
   1fcd2:	75 65                	jne    1fd39 <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0x8c9>
   1fcd4:	e9 ad 00 00 00       	jmpq   1fd86 <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0x916>
   1fcd9:	45 31 e4             	xor    %r12d,%r12d
   1fcdc:	48 8b 4b 10          	mov    0x10(%rbx),%rcx
   1fce0:	48 39 4b 08          	cmp    %rcx,0x8(%rbx)
   1fce4:	77 5d                	ja     1fd43 <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0x8d3>
   1fce6:	e9 96 00 00 00       	jmpq   1fd81 <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0x911>
   1fceb:	48 83 c5 01          	add    $0x1,%rbp
   1fcef:	83 43 20 01          	addl   $0x1,0x20(%rbx)
   1fcf3:	be 01 00 00 00       	mov    $0x1,%esi
   1fcf8:	48 89 df             	mov    %rbx,%rdi
   1fcfb:	e8 c0 09 00 00       	callq  206c0 <_ZN14rustc_demangle2v07Printer25print_lifetime_from_index17ha0f25adf6efaca09E>
   1fd00:	84 c0                	test   %al,%al
   1fd02:	0f 85 51 ff ff ff    	jne    1fc59 <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0x7e9>
   1fd08:	49 39 ef             	cmp    %rbp,%r15
   1fd0b:	0f 84 cf 07 00 00    	je     204e0 <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0x1070>
   1fd11:	48 85 ed             	test   %rbp,%rbp
   1fd14:	74 d5                	je     1fceb <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0x87b>
   1fd16:	48 8b 43 18          	mov    0x18(%rbx),%rax
   1fd1a:	48 8b 78 20          	mov    0x20(%rax),%rdi
   1fd1e:	48 8b 40 28          	mov    0x28(%rax),%rax
   1fd22:	ba 02 00 00 00       	mov    $0x2,%edx
   1fd27:	4c 89 f6             	mov    %r14,%rsi
   1fd2a:	ff 50 18             	callq  *0x18(%rax)
   1fd2d:	84 c0                	test   %al,%al
   1fd2f:	74 ba                	je     1fceb <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0x87b>
   1fd31:	e9 23 ff ff ff       	jmpq   1fc59 <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0x7e9>
   1fd36:	45 31 e4             	xor    %r12d,%r12d
   1fd39:	48 8b 4b 10          	mov    0x10(%rbx),%rcx
   1fd3d:	48 39 4b 08          	cmp    %rcx,0x8(%rbx)
   1fd41:	76 3e                	jbe    1fd81 <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0x911>
   1fd43:	80 3c 08 4b          	cmpb   $0x4b,(%rax,%rcx,1)
   1fd47:	75 38                	jne    1fd81 <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0x911>
   1fd49:	48 83 c1 01          	add    $0x1,%rcx
   1fd4d:	48 89 4b 10          	mov    %rcx,0x10(%rbx)
   1fd51:	48 39 4b 08          	cmp    %rcx,0x8(%rbx)
   1fd55:	0f 86 eb 00 00 00    	jbe    1fe46 <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0x9d6>
   1fd5b:	48 8b 03             	mov    (%rbx),%rax
   1fd5e:	80 3c 08 43          	cmpb   $0x43,(%rax,%rcx,1)
   1fd62:	0f 85 de 00 00 00    	jne    1fe46 <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0x9d6>
   1fd68:	48 83 c1 01          	add    $0x1,%rcx
   1fd6c:	48 89 4b 10          	mov    %rcx,0x10(%rbx)
   1fd70:	bd 01 00 00 00       	mov    $0x1,%ebp
   1fd75:	4c 8d 35 fd d3 01 00 	lea    0x1d3fd(%rip),%r14        # 3d179 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x819>
   1fd7c:	e9 1e 01 00 00       	jmpq   1fe9f <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0xa2f>
   1fd81:	45 84 e4             	test   %r12b,%r12b
   1fd84:	74 2f                	je     1fdb5 <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0x945>
   1fd86:	45 31 f6             	xor    %r14d,%r14d
   1fd89:	48 8b 43 18          	mov    0x18(%rbx),%rax
   1fd8d:	48 8b 78 20          	mov    0x20(%rax),%rdi
   1fd91:	48 8b 40 28          	mov    0x28(%rax),%rax
   1fd95:	48 8d 35 dd d4 01 00 	lea    0x1d4dd(%rip),%rsi        # 3d279 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x919>
   1fd9c:	ba 07 00 00 00       	mov    $0x7,%edx
   1fda1:	ff 50 18             	callq  *0x18(%rax)
   1fda4:	84 c0                	test   %al,%al
   1fda6:	0f 85 fd 02 00 00    	jne    200a9 <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0xc39>
   1fdac:	4d 85 f6             	test   %r14,%r14
   1fdaf:	0f 85 f3 00 00 00    	jne    1fea8 <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0xa38>
   1fdb5:	48 8b 43 18          	mov    0x18(%rbx),%rax
   1fdb9:	48 8b 78 20          	mov    0x20(%rax),%rdi
   1fdbd:	48 8b 40 28          	mov    0x28(%rax),%rax
   1fdc1:	48 8d 35 bb d4 01 00 	lea    0x1d4bb(%rip),%rsi        # 3d283 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x923>
   1fdc8:	ba 03 00 00 00       	mov    $0x3,%edx
   1fdcd:	ff 50 18             	callq  *0x18(%rax)
   1fdd0:	84 c0                	test   %al,%al
   1fdd2:	0f 85 d1 02 00 00    	jne    200a9 <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0xc39>
   1fdd8:	48 8b 03             	mov    (%rbx),%rax
   1fddb:	48 85 c0             	test   %rax,%rax
   1fdde:	0f 84 54 02 00 00    	je     20038 <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0xbc8>
   1fde4:	31 ed                	xor    %ebp,%ebp
   1fde6:	4c 8d 35 f7 d3 01 00 	lea    0x1d3f7(%rip),%r14        # 3d1e4 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x884>
   1fded:	48 8b 4b 10          	mov    0x10(%rbx),%rcx
   1fdf1:	48 39 4b 08          	cmp    %rcx,0x8(%rbx)
   1fdf5:	76 0a                	jbe    1fe01 <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0x991>
   1fdf7:	80 3c 08 45          	cmpb   $0x45,(%rax,%rcx,1)
   1fdfb:	0f 84 2f 02 00 00    	je     20030 <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0xbc0>
   1fe01:	48 85 ed             	test   %rbp,%rbp
   1fe04:	74 1f                	je     1fe25 <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0x9b5>
   1fe06:	48 8b 43 18          	mov    0x18(%rbx),%rax
   1fe0a:	48 8b 78 20          	mov    0x20(%rax),%rdi
   1fe0e:	48 8b 40 28          	mov    0x28(%rax),%rax
   1fe12:	ba 02 00 00 00       	mov    $0x2,%edx
   1fe17:	4c 89 f6             	mov    %r14,%rsi
   1fe1a:	ff 50 18             	callq  *0x18(%rax)
   1fe1d:	84 c0                	test   %al,%al
   1fe1f:	0f 85 84 02 00 00    	jne    200a9 <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0xc39>
   1fe25:	48 89 df             	mov    %rbx,%rdi
   1fe28:	e8 43 f6 ff ff       	callq  1f470 <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE>
   1fe2d:	84 c0                	test   %al,%al
   1fe2f:	0f 85 74 02 00 00    	jne    200a9 <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0xc39>
   1fe35:	48 8b 03             	mov    (%rbx),%rax
   1fe38:	48 83 c5 ff          	add    $0xffffffffffffffff,%rbp
   1fe3c:	48 85 c0             	test   %rax,%rax
   1fe3f:	75 ac                	jne    1fded <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0x97d>
   1fe41:	e9 f2 01 00 00       	jmpq   20038 <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0xbc8>
   1fe46:	48 89 e7             	mov    %rsp,%rdi
   1fe49:	48 89 de             	mov    %rbx,%rsi
   1fe4c:	e8 1f e9 ff ff       	callq  1e770 <_ZN14rustc_demangle2v06Parser5ident17hd92f34ac92f9dd66E>
   1fe51:	4c 8b 34 24          	mov    (%rsp),%r14
   1fe55:	4d 85 f6             	test   %r14,%r14
   1fe58:	74 12                	je     1fe6c <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0x9fc>
   1fe5a:	48 8b 6c 24 08       	mov    0x8(%rsp),%rbp
   1fe5f:	48 85 ed             	test   %rbp,%rbp
   1fe62:	74 08                	je     1fe6c <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0x9fc>
   1fe64:	48 83 7c 24 18 00    	cmpq   $0x0,0x18(%rsp)
   1fe6a:	74 33                	je     1fe9f <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0xa2f>
   1fe6c:	48 c7 03 00 00 00 00 	movq   $0x0,(%rbx)
   1fe73:	48 8b 43 18          	mov    0x18(%rbx),%rax
   1fe77:	48 8b 78 20          	mov    0x20(%rax),%rdi
   1fe7b:	48 8b 40 28          	mov    0x28(%rax),%rax
   1fe7f:	48 8d 35 4e d3 01 00 	lea    0x1d34e(%rip),%rsi        # 3d1d4 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x874>
   1fe86:	ba 01 00 00 00       	mov    $0x1,%edx
   1fe8b:	ff 50 18             	callq  *0x18(%rax)
   1fe8e:	44 29 7b 20          	sub    %r15d,0x20(%rbx)
   1fe92:	84 c0                	test   %al,%al
   1fe94:	0f 85 bf fd ff ff    	jne    1fc59 <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0x7e9>
   1fe9a:	e9 2a 02 00 00       	jmpq   200c9 <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0xc59>
   1fe9f:	45 84 e4             	test   %r12b,%r12b
   1fea2:	0f 85 e1 fe ff ff    	jne    1fd89 <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0x919>
   1fea8:	48 8b 43 18          	mov    0x18(%rbx),%rax
   1feac:	48 8b 78 20          	mov    0x20(%rax),%rdi
   1feb0:	48 8b 40 28          	mov    0x28(%rax),%rax
   1feb4:	48 8d 35 55 a8 01 00 	lea    0x1a855(%rip),%rsi        # 3a710 <_ZN4core7unicode12unicode_data2cc19BITSET_INDEX_CHUNKS17h8a1f39cd536e9344E+0x250>
   1febb:	ba 08 00 00 00       	mov    $0x8,%edx
   1fec0:	ff 50 18             	callq  *0x18(%rax)
   1fec3:	84 c0                	test   %al,%al
   1fec5:	0f 85 de 01 00 00    	jne    200a9 <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0xc39>
   1fecb:	48 c7 44 24 50 00 00 	movq   $0x0,0x50(%rsp)
   1fed2:	00 00 
   1fed4:	48 89 6c 24 58       	mov    %rbp,0x58(%rsp)
   1fed9:	4c 89 74 24 60       	mov    %r14,0x60(%rsp)
   1fede:	48 89 6c 24 68       	mov    %rbp,0x68(%rsp)
   1fee3:	48 c7 44 24 70 00 00 	movq   $0x0,0x70(%rsp)
   1feea:	00 00 
   1feec:	48 89 6c 24 78       	mov    %rbp,0x78(%rsp)
   1fef1:	48 c7 84 24 80 00 00 	movq   $0x1,0x80(%rsp)
   1fef8:	00 01 00 00 00 
   1fefd:	48 b8 5f 00 00 00 5f 	movabs $0x5f0000005f,%rax
   1ff04:	00 00 00 
   1ff07:	48 89 84 24 88 00 00 	mov    %rax,0x88(%rsp)
   1ff0e:	00 
   1ff0f:	66 c7 84 24 90 00 00 	movw   $0x1,0x90(%rsp)
   1ff16:	00 01 00 
   1ff19:	48 8b 6b 18          	mov    0x18(%rbx),%rbp
   1ff1d:	48 8d 7c 24 50       	lea    0x50(%rsp),%rdi
   1ff22:	e8 19 12 00 00       	callq  21140 <_ZN84_$LT$core..str..Split$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hf5473c068d5f22a4E>
   1ff27:	48 85 c0             	test   %rax,%rax
   1ff2a:	0f 84 48 06 00 00    	je     20578 <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0x1108>
   1ff30:	48 8b 7d 20          	mov    0x20(%rbp),%rdi
   1ff34:	48 8b 4d 28          	mov    0x28(%rbp),%rcx
   1ff38:	48 89 c6             	mov    %rax,%rsi
   1ff3b:	ff 51 18             	callq  *0x18(%rcx)
   1ff3e:	84 c0                	test   %al,%al
   1ff40:	0f 85 63 01 00 00    	jne    200a9 <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0xc39>
   1ff46:	48 8b 84 24 90 00 00 	mov    0x90(%rsp),%rax
   1ff4d:	00 
   1ff4e:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
   1ff53:	0f 10 44 24 50       	movups 0x50(%rsp),%xmm0
   1ff58:	0f 10 4c 24 60       	movups 0x60(%rsp),%xmm1
   1ff5d:	0f 10 54 24 70       	movups 0x70(%rsp),%xmm2
   1ff62:	0f 10 9c 24 80 00 00 	movups 0x80(%rsp),%xmm3
   1ff69:	00 
   1ff6a:	0f 29 5c 24 30       	movaps %xmm3,0x30(%rsp)
   1ff6f:	0f 29 54 24 20       	movaps %xmm2,0x20(%rsp)
   1ff74:	0f 29 4c 24 10       	movaps %xmm1,0x10(%rsp)
   1ff79:	0f 29 04 24          	movaps %xmm0,(%rsp)
   1ff7d:	49 89 e6             	mov    %rsp,%r14
   1ff80:	48 8d 2d fb d2 01 00 	lea    0x1d2fb(%rip),%rbp        # 3d282 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x922>
   1ff87:	4c 89 f7             	mov    %r14,%rdi
   1ff8a:	e8 b1 11 00 00       	callq  21140 <_ZN84_$LT$core..str..Split$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hf5473c068d5f22a4E>
   1ff8f:	48 85 c0             	test   %rax,%rax
   1ff92:	0f 84 dd 04 00 00    	je     20475 <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0x1005>
   1ff98:	49 89 c4             	mov    %rax,%r12
   1ff9b:	49 89 d5             	mov    %rdx,%r13
   1ff9e:	48 8b 43 18          	mov    0x18(%rbx),%rax
   1ffa2:	48 8b 78 20          	mov    0x20(%rax),%rdi
   1ffa6:	48 8b 40 28          	mov    0x28(%rax),%rax
   1ffaa:	ba 01 00 00 00       	mov    $0x1,%edx
   1ffaf:	48 89 ee             	mov    %rbp,%rsi
   1ffb2:	ff 50 18             	callq  *0x18(%rax)
   1ffb5:	84 c0                	test   %al,%al
   1ffb7:	0f 85 ec 00 00 00    	jne    200a9 <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0xc39>
   1ffbd:	48 8b 43 18          	mov    0x18(%rbx),%rax
   1ffc1:	48 8b 78 20          	mov    0x20(%rax),%rdi
   1ffc5:	48 8b 40 28          	mov    0x28(%rax),%rax
   1ffc9:	4c 89 e6             	mov    %r12,%rsi
   1ffcc:	4c 89 ea             	mov    %r13,%rdx
   1ffcf:	ff 50 18             	callq  *0x18(%rax)
   1ffd2:	84 c0                	test   %al,%al
   1ffd4:	74 b1                	je     1ff87 <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0xb17>
   1ffd6:	e9 ce 00 00 00       	jmpq   200a9 <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0xc39>
   1ffdb:	48 83 c6 01          	add    $0x1,%rsi
   1ffdf:	48 89 71 10          	mov    %rsi,0x10(%rcx)
   1ffe3:	48 ff c0             	inc    %rax
   1ffe6:	0f 84 be 04 00 00    	je     204aa <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0x103a>
   1ffec:	48 85 c0             	test   %rax,%rax
   1ffef:	0f 84 f5 f5 ff ff    	je     1f5ea <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0x17a>
   1fff5:	48 89 df             	mov    %rbx,%rdi
   1fff8:	48 89 c6             	mov    %rax,%rsi
   1fffb:	e8 c0 06 00 00       	callq  206c0 <_ZN14rustc_demangle2v07Printer25print_lifetime_from_index17ha0f25adf6efaca09E>
   20000:	84 c0                	test   %al,%al
   20002:	0f 85 75 03 00 00    	jne    2037d <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0xf0d>
   20008:	48 8b 43 18          	mov    0x18(%rbx),%rax
   2000c:	48 8b 78 20          	mov    0x20(%rax),%rdi
   20010:	48 8b 40 28          	mov    0x28(%rax),%rax
   20014:	48 8d 35 4d d2 01 00 	lea    0x1d24d(%rip),%rsi        # 3d268 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x908>
   2001b:	ba 01 00 00 00       	mov    $0x1,%edx
   20020:	ff 50 18             	callq  *0x18(%rax)
   20023:	84 c0                	test   %al,%al
   20025:	0f 84 bf f5 ff ff    	je     1f5ea <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0x17a>
   2002b:	e9 4d 03 00 00       	jmpq   2037d <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0xf0d>
   20030:	48 83 c1 01          	add    $0x1,%rcx
   20034:	48 89 4b 10          	mov    %rcx,0x10(%rbx)
   20038:	48 8b 43 18          	mov    0x18(%rbx),%rax
   2003c:	48 8b 78 20          	mov    0x20(%rax),%rdi
   20040:	48 8b 40 28          	mov    0x28(%rax),%rax
   20044:	48 8d 35 75 d8 01 00 	lea    0x1d875(%rip),%rsi        # 3d8c0 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0xf60>
   2004b:	ba 01 00 00 00       	mov    $0x1,%edx
   20050:	ff 50 18             	callq  *0x18(%rax)
   20053:	84 c0                	test   %al,%al
   20055:	75 52                	jne    200a9 <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0xc39>
   20057:	48 8b 03             	mov    (%rbx),%rax
   2005a:	48 85 c0             	test   %rax,%rax
   2005d:	48 0f 45 c3          	cmovne %rbx,%rax
   20061:	74 27                	je     2008a <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0xc1a>
   20063:	48 8b 48 10          	mov    0x10(%rax),%rcx
   20067:	48 39 48 08          	cmp    %rcx,0x8(%rax)
   2006b:	76 1d                	jbe    2008a <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0xc1a>
   2006d:	48 8b 10             	mov    (%rax),%rdx
   20070:	80 3c 0a 75          	cmpb   $0x75,(%rdx,%rcx,1)
   20074:	75 14                	jne    2008a <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0xc1a>
   20076:	48 83 c1 01          	add    $0x1,%rcx
   2007a:	48 89 48 10          	mov    %rcx,0x10(%rax)
   2007e:	44 29 7b 20          	sub    %r15d,0x20(%rbx)
   20082:	45 31 ff             	xor    %r15d,%r15d
   20085:	e9 f3 02 00 00       	jmpq   2037d <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0xf0d>
   2008a:	48 8b 43 18          	mov    0x18(%rbx),%rax
   2008e:	48 8b 78 20          	mov    0x20(%rax),%rdi
   20092:	48 8b 40 28          	mov    0x28(%rax),%rax
   20096:	48 8d 35 f3 c3 01 00 	lea    0x1c3f3(%rip),%rsi        # 3c490 <_ZN4core7unicode12unicode_data15grapheme_extend6BITSET17h68ce7f61ccfa32feE+0x9f0>
   2009d:	ba 04 00 00 00       	mov    $0x4,%edx
   200a2:	ff 50 18             	callq  *0x18(%rax)
   200a5:	84 c0                	test   %al,%al
   200a7:	74 0c                	je     200b5 <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0xc45>
   200a9:	44 29 7b 20          	sub    %r15d,0x20(%rbx)
   200ad:	41 b7 01             	mov    $0x1,%r15b
   200b0:	e9 c8 02 00 00       	jmpq   2037d <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0xf0d>
   200b5:	48 89 df             	mov    %rbx,%rdi
   200b8:	e8 b3 f3 ff ff       	callq  1f470 <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE>
   200bd:	44 29 7b 20          	sub    %r15d,0x20(%rbx)
   200c1:	84 c0                	test   %al,%al
   200c3:	0f 85 90 fb ff ff    	jne    1fc59 <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0x7e9>
   200c9:	45 31 ff             	xor    %r15d,%r15d
   200cc:	e9 ac 02 00 00       	jmpq   2037d <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0xf0d>
   200d1:	48 83 c5 01          	add    $0x1,%rbp
   200d5:	48 89 69 10          	mov    %rbp,0x10(%rcx)
   200d9:	49 ff c6             	inc    %r14
   200dc:	74 05                	je     200e3 <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0xc73>
   200de:	49 ff c6             	inc    %r14
   200e1:	75 3f                	jne    20122 <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0xcb2>
   200e3:	48 c7 03 00 00 00 00 	movq   $0x0,(%rbx)
   200ea:	48 8b 43 18          	mov    0x18(%rbx),%rax
   200ee:	48 8b 78 20          	mov    0x20(%rax),%rdi
   200f2:	48 8b 40 28          	mov    0x28(%rax),%rax
   200f6:	48 8d 35 d7 d0 01 00 	lea    0x1d0d7(%rip),%rsi        # 3d1d4 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x874>
   200fd:	ba 01 00 00 00       	mov    $0x1,%edx
   20102:	ff 50 18             	callq  *0x18(%rax)
   20105:	84 c0                	test   %al,%al
   20107:	0f 85 70 02 00 00    	jne    2037d <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0xf0d>
   2010d:	48 8b 03             	mov    (%rbx),%rax
   20110:	48 85 c0             	test   %rax,%rax
   20113:	48 0f 45 c3          	cmovne %rbx,%rax
   20117:	0f 85 88 02 00 00    	jne    203a5 <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0xf35>
   2011d:	e9 88 03 00 00       	jmpq   204aa <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0x103a>
   20122:	4d 85 f6             	test   %r14,%r14
   20125:	74 36                	je     2015d <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0xced>
   20127:	48 8b 43 18          	mov    0x18(%rbx),%rax
   2012b:	48 8b 78 20          	mov    0x20(%rax),%rdi
   2012f:	48 8b 40 28          	mov    0x28(%rax),%rax
   20133:	48 8d 35 4e c3 01 00 	lea    0x1c34e(%rip),%rsi        # 3c488 <_ZN4core7unicode12unicode_data15grapheme_extend6BITSET17h68ce7f61ccfa32feE+0x9e8>
   2013a:	ba 04 00 00 00       	mov    $0x4,%edx
   2013f:	ff 50 18             	callq  *0x18(%rax)
   20142:	84 c0                	test   %al,%al
   20144:	0f 85 33 02 00 00    	jne    2037d <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0xf0d>
   2014a:	31 ed                	xor    %ebp,%ebp
   2014c:	4c 8d 25 91 d0 01 00 	lea    0x1d091(%rip),%r12        # 3d1e4 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x884>
   20153:	49 39 ee             	cmp    %rbp,%r14
   20156:	75 52                	jne    201aa <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0xd3a>
   20158:	e9 f3 03 00 00       	jmpq   20550 <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0x10e0>
   2015d:	45 31 f6             	xor    %r14d,%r14d
   20160:	48 8b 03             	mov    (%rbx),%rax
   20163:	48 85 c0             	test   %rax,%rax
   20166:	0f 84 26 02 00 00    	je     20392 <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0xf22>
   2016c:	49 89 e5             	mov    %rsp,%r13
   2016f:	31 ed                	xor    %ebp,%ebp
   20171:	48 8b 4b 10          	mov    0x10(%rbx),%rcx
   20175:	48 39 4b 08          	cmp    %rcx,0x8(%rbx)
   20179:	0f 86 a6 00 00 00    	jbe    20225 <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0xdb5>
   2017f:	e9 97 00 00 00       	jmpq   2021b <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0xdab>
   20184:	48 83 c5 01          	add    $0x1,%rbp
   20188:	83 43 20 01          	addl   $0x1,0x20(%rbx)
   2018c:	be 01 00 00 00       	mov    $0x1,%esi
   20191:	48 89 df             	mov    %rbx,%rdi
   20194:	e8 27 05 00 00       	callq  206c0 <_ZN14rustc_demangle2v07Printer25print_lifetime_from_index17ha0f25adf6efaca09E>
   20199:	84 c0                	test   %al,%al
   2019b:	0f 85 dc 01 00 00    	jne    2037d <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0xf0d>
   201a1:	49 39 ee             	cmp    %rbp,%r14
   201a4:	0f 84 a6 03 00 00    	je     20550 <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0x10e0>
   201aa:	48 85 ed             	test   %rbp,%rbp
   201ad:	74 d5                	je     20184 <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0xd14>
   201af:	48 8b 43 18          	mov    0x18(%rbx),%rax
   201b3:	48 8b 78 20          	mov    0x20(%rax),%rdi
   201b7:	48 8b 40 28          	mov    0x28(%rax),%rax
   201bb:	ba 02 00 00 00       	mov    $0x2,%edx
   201c0:	4c 89 e6             	mov    %r12,%rsi
   201c3:	ff 50 18             	callq  *0x18(%rax)
   201c6:	84 c0                	test   %al,%al
   201c8:	74 ba                	je     20184 <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0xd14>
   201ca:	e9 ae 01 00 00       	jmpq   2037d <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0xf0d>
   201cf:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
   201d6:	00 
   201d7:	48 c7 03 00 00 00 00 	movq   $0x0,(%rbx)
   201de:	48 8b 43 18          	mov    0x18(%rbx),%rax
   201e2:	48 8b 78 20          	mov    0x20(%rax),%rdi
   201e6:	48 8b 40 28          	mov    0x28(%rax),%rax
   201ea:	ba 01 00 00 00       	mov    $0x1,%edx
   201ef:	48 8d 35 de cf 01 00 	lea    0x1cfde(%rip),%rsi        # 3d1d4 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x874>
   201f6:	ff 50 18             	callq  *0x18(%rax)
   201f9:	84 c0                	test   %al,%al
   201fb:	0f 85 78 01 00 00    	jne    20379 <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0xf09>
   20201:	48 83 c5 01          	add    $0x1,%rbp
   20205:	48 8b 03             	mov    (%rbx),%rax
   20208:	48 85 c0             	test   %rax,%rax
   2020b:	0f 84 81 01 00 00    	je     20392 <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0xf22>
   20211:	48 8b 4b 10          	mov    0x10(%rbx),%rcx
   20215:	48 39 4b 08          	cmp    %rcx,0x8(%rbx)
   20219:	76 0a                	jbe    20225 <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0xdb5>
   2021b:	80 3c 08 45          	cmpb   $0x45,(%rax,%rcx,1)
   2021f:	0f 84 35 02 00 00    	je     2045a <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0xfea>
   20225:	48 85 ed             	test   %rbp,%rbp
   20228:	74 23                	je     2024d <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0xddd>
   2022a:	48 8b 43 18          	mov    0x18(%rbx),%rax
   2022e:	48 8b 78 20          	mov    0x20(%rax),%rdi
   20232:	48 8b 40 28          	mov    0x28(%rax),%rax
   20236:	ba 03 00 00 00       	mov    $0x3,%edx
   2023b:	48 8d 35 31 d0 01 00 	lea    0x1d031(%rip),%rsi        # 3d273 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x913>
   20242:	ff 50 18             	callq  *0x18(%rax)
   20245:	84 c0                	test   %al,%al
   20247:	0f 85 2c 01 00 00    	jne    20379 <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0xf09>
   2024d:	48 89 df             	mov    %rbx,%rdi
   20250:	e8 cb 0c 00 00       	callq  20f20 <_ZN14rustc_demangle2v07Printer30print_path_maybe_open_generics17hb552f14f4c07e397E>
   20255:	3c 02                	cmp    $0x2,%al
   20257:	0f 84 1c 01 00 00    	je     20379 <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0xf09>
   2025d:	41 89 c4             	mov    %eax,%r12d
   20260:	41 80 e4 01          	and    $0x1,%r12b
   20264:	48 8b 03             	mov    (%rbx),%rax
   20267:	48 85 c0             	test   %rax,%rax
   2026a:	0f 84 dc 00 00 00    	je     2034c <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0xedc>
   20270:	48 8b 4b 10          	mov    0x10(%rbx),%rcx
   20274:	48 39 4b 08          	cmp    %rcx,0x8(%rbx)
   20278:	0f 86 ce 00 00 00    	jbe    2034c <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0xedc>
   2027e:	80 3c 08 70          	cmpb   $0x70,(%rax,%rcx,1)
   20282:	0f 85 c4 00 00 00    	jne    2034c <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0xedc>
   20288:	48 83 c1 01          	add    $0x1,%rcx
   2028c:	48 89 4b 10          	mov    %rcx,0x10(%rbx)
   20290:	48 8b 43 18          	mov    0x18(%rbx),%rax
   20294:	48 8b 78 20          	mov    0x20(%rax),%rdi
   20298:	48 8b 40 28          	mov    0x28(%rax),%rax
   2029c:	48 8b 40 18          	mov    0x18(%rax),%rax
   202a0:	41 f6 c4 01          	test   $0x1,%r12b
   202a4:	74 17                	je     202bd <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0xe4d>
   202a6:	ba 02 00 00 00       	mov    $0x2,%edx
   202ab:	48 8d 35 32 cf 01 00 	lea    0x1cf32(%rip),%rsi        # 3d1e4 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x884>
   202b2:	ff d0                	callq  *%rax
   202b4:	84 c0                	test   %al,%al
   202b6:	74 1e                	je     202d6 <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0xe66>
   202b8:	e9 bc 00 00 00       	jmpq   20379 <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0xf09>
   202bd:	ba 01 00 00 00       	mov    $0x1,%edx
   202c2:	48 8d 35 b4 ce 01 00 	lea    0x1ceb4(%rip),%rsi        # 3d17d <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x81d>
   202c9:	ff d0                	callq  *%rax
   202cb:	41 b4 01             	mov    $0x1,%r12b
   202ce:	84 c0                	test   %al,%al
   202d0:	0f 85 a3 00 00 00    	jne    20379 <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0xf09>
   202d6:	48 83 3b 00          	cmpq   $0x0,(%rbx)
   202da:	0f 84 ef fe ff ff    	je     201cf <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0xd5f>
   202e0:	4c 89 ef             	mov    %r13,%rdi
   202e3:	48 89 de             	mov    %rbx,%rsi
   202e6:	e8 85 e4 ff ff       	callq  1e770 <_ZN14rustc_demangle2v06Parser5ident17hd92f34ac92f9dd66E>
   202eb:	48 83 3c 24 00       	cmpq   $0x0,(%rsp)
   202f0:	0f 84 e1 fe ff ff    	je     201d7 <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0xd67>
   202f6:	0f 10 04 24          	movups (%rsp),%xmm0
   202fa:	0f 10 4c 24 10       	movups 0x10(%rsp),%xmm1
   202ff:	0f 29 4c 24 60       	movaps %xmm1,0x60(%rsp)
   20304:	0f 29 44 24 50       	movaps %xmm0,0x50(%rsp)
   20309:	48 8b 73 18          	mov    0x18(%rbx),%rsi
   2030d:	48 8d 7c 24 50       	lea    0x50(%rsp),%rdi
   20312:	e8 c9 e6 ff ff       	callq  1e9e0 <_ZN64_$LT$rustc_demangle..v0..Ident$u20$as$u20$core..fmt..Display$GT$3fmt17h5f7f2ca5a6c8d9e2E>
   20317:	84 c0                	test   %al,%al
   20319:	75 5e                	jne    20379 <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0xf09>
   2031b:	48 8b 43 18          	mov    0x18(%rbx),%rax
   2031f:	48 8b 78 20          	mov    0x20(%rax),%rdi
   20323:	48 8b 40 28          	mov    0x28(%rax),%rax
   20327:	ba 03 00 00 00       	mov    $0x3,%edx
   2032c:	48 8d 35 43 cf 01 00 	lea    0x1cf43(%rip),%rsi        # 3d276 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x916>
   20333:	ff 50 18             	callq  *0x18(%rax)
   20336:	84 c0                	test   %al,%al
   20338:	75 3f                	jne    20379 <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0xf09>
   2033a:	48 89 df             	mov    %rbx,%rdi
   2033d:	e8 2e f1 ff ff       	callq  1f470 <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE>
   20342:	84 c0                	test   %al,%al
   20344:	0f 84 1a ff ff ff    	je     20264 <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0xdf4>
   2034a:	eb 2d                	jmp    20379 <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0xf09>
   2034c:	41 f6 c4 01          	test   $0x1,%r12b
   20350:	0f 84 ab fe ff ff    	je     20201 <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0xd91>
   20356:	48 8b 43 18          	mov    0x18(%rbx),%rax
   2035a:	48 8b 78 20          	mov    0x20(%rax),%rdi
   2035e:	48 8b 40 28          	mov    0x28(%rax),%rax
   20362:	ba 01 00 00 00       	mov    $0x1,%edx
   20367:	48 8d 35 10 ce 01 00 	lea    0x1ce10(%rip),%rsi        # 3d17e <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x81e>
   2036e:	ff 50 18             	callq  *0x18(%rax)
   20371:	84 c0                	test   %al,%al
   20373:	0f 84 88 fe ff ff    	je     20201 <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0xd91>
   20379:	44 29 73 20          	sub    %r14d,0x20(%rbx)
   2037d:	44 89 f8             	mov    %r15d,%eax
   20380:	48 81 c4 98 00 00 00 	add    $0x98,%rsp
   20387:	5b                   	pop    %rbx
   20388:	41 5c                	pop    %r12
   2038a:	41 5d                	pop    %r13
   2038c:	41 5e                	pop    %r14
   2038e:	41 5f                	pop    %r15
   20390:	5d                   	pop    %rbp
   20391:	c3                   	retq   
   20392:	31 c0                	xor    %eax,%eax
   20394:	44 29 73 20          	sub    %r14d,0x20(%rbx)
   20398:	48 85 c0             	test   %rax,%rax
   2039b:	48 0f 45 c3          	cmovne %rbx,%rax
   2039f:	0f 84 05 01 00 00    	je     204aa <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0x103a>
   203a5:	48 8b 48 10          	mov    0x10(%rax),%rcx
   203a9:	48 39 48 08          	cmp    %rcx,0x8(%rax)
   203ad:	0f 86 f7 00 00 00    	jbe    204aa <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0x103a>
   203b3:	48 8b 10             	mov    (%rax),%rdx
   203b6:	80 3c 0a 4c          	cmpb   $0x4c,(%rdx,%rcx,1)
   203ba:	0f 85 ea 00 00 00    	jne    204aa <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0x103a>
   203c0:	48 83 c1 01          	add    $0x1,%rcx
   203c4:	48 89 48 10          	mov    %rcx,0x10(%rax)
   203c8:	48 8b 0b             	mov    (%rbx),%rcx
   203cb:	48 85 c9             	test   %rcx,%rcx
   203ce:	48 0f 45 cb          	cmovne %rbx,%rcx
   203d2:	0f 84 d2 00 00 00    	je     204aa <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0x103a>
   203d8:	4c 8b 09             	mov    (%rcx),%r9
   203db:	48 8b 69 08          	mov    0x8(%rcx),%rbp
   203df:	48 8b 71 10          	mov    0x10(%rcx),%rsi
   203e3:	48 39 f5             	cmp    %rsi,%rbp
   203e6:	76 14                	jbe    203fc <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0xf8c>
   203e8:	41 80 3c 31 5f       	cmpb   $0x5f,(%r9,%rsi,1)
   203ed:	75 0d                	jne    203fc <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0xf8c>
   203ef:	48 83 c6 01          	add    $0x1,%rsi
   203f3:	48 89 71 10          	mov    %rsi,0x10(%rcx)
   203f7:	45 31 ff             	xor    %r15d,%r15d
   203fa:	eb 81                	jmp    2037d <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0xf0d>
   203fc:	45 31 f6             	xor    %r14d,%r14d
   203ff:	41 b8 3e 00 00 00    	mov    $0x3e,%r8d
   20405:	48 39 f5             	cmp    %rsi,%rbp
   20408:	0f 86 9c 00 00 00    	jbe    204aa <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0x103a>
   2040e:	41 0f b6 04 31       	movzbl (%r9,%rsi,1),%eax
   20413:	3c 5f                	cmp    $0x5f,%al
   20415:	0f 84 82 00 00 00    	je     2049d <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0x102d>
   2041b:	8d 78 d0             	lea    -0x30(%rax),%edi
   2041e:	40 80 ff 0a          	cmp    $0xa,%dil
   20422:	72 18                	jb     2043c <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0xfcc>
   20424:	8d 50 9f             	lea    -0x61(%rax),%edx
   20427:	80 fa 1a             	cmp    $0x1a,%dl
   2042a:	73 04                	jae    20430 <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0xfc0>
   2042c:	04 a9                	add    $0xa9,%al
   2042e:	eb 0a                	jmp    2043a <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0xfca>
   20430:	8d 50 bf             	lea    -0x41(%rax),%edx
   20433:	80 fa 1a             	cmp    $0x1a,%dl
   20436:	73 72                	jae    204aa <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0x103a>
   20438:	04 e3                	add    $0xe3,%al
   2043a:	89 c7                	mov    %eax,%edi
   2043c:	48 83 c6 01          	add    $0x1,%rsi
   20440:	48 89 71 10          	mov    %rsi,0x10(%rcx)
   20444:	4c 89 f0             	mov    %r14,%rax
   20447:	49 f7 e0             	mul    %r8
   2044a:	70 5e                	jo     204aa <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0x103a>
   2044c:	49 89 c6             	mov    %rax,%r14
   2044f:	40 0f b6 c7          	movzbl %dil,%eax
   20453:	49 01 c6             	add    %rax,%r14
   20456:	73 ad                	jae    20405 <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0xf95>
   20458:	eb 50                	jmp    204aa <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0x103a>
   2045a:	48 83 c1 01          	add    $0x1,%rcx
   2045e:	48 89 4b 10          	mov    %rcx,0x10(%rbx)
   20462:	44 29 73 20          	sub    %r14d,0x20(%rbx)
   20466:	48 85 c0             	test   %rax,%rax
   20469:	48 0f 45 c3          	cmovne %rbx,%rax
   2046d:	0f 85 32 ff ff ff    	jne    203a5 <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0xf35>
   20473:	eb 35                	jmp    204aa <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0x103a>
   20475:	48 8b 43 18          	mov    0x18(%rbx),%rax
   20479:	48 8b 78 20          	mov    0x20(%rax),%rdi
   2047d:	48 8b 40 28          	mov    0x28(%rax),%rax
   20481:	48 8d 35 f8 cd 01 00 	lea    0x1cdf8(%rip),%rsi        # 3d280 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x920>
   20488:	ba 02 00 00 00       	mov    $0x2,%edx
   2048d:	ff 50 18             	callq  *0x18(%rax)
   20490:	84 c0                	test   %al,%al
   20492:	0f 84 1d f9 ff ff    	je     1fdb5 <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0x945>
   20498:	e9 0c fc ff ff       	jmpq   200a9 <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0xc39>
   2049d:	48 83 c6 01          	add    $0x1,%rsi
   204a1:	48 89 71 10          	mov    %rsi,0x10(%rcx)
   204a5:	49 ff c6             	inc    %r14
   204a8:	75 5e                	jne    20508 <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0x1098>
   204aa:	48 c7 03 00 00 00 00 	movq   $0x0,(%rbx)
   204b1:	48 8b 43 18          	mov    0x18(%rbx),%rax
   204b5:	48 8b 78 20          	mov    0x20(%rax),%rdi
   204b9:	48 8b 40 28          	mov    0x28(%rax),%rax
   204bd:	48 8b 40 18          	mov    0x18(%rax),%rax
   204c1:	48 8d 35 0c cd 01 00 	lea    0x1cd0c(%rip),%rsi        # 3d1d4 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x874>
   204c8:	ba 01 00 00 00       	mov    $0x1,%edx
   204cd:	48 81 c4 98 00 00 00 	add    $0x98,%rsp
   204d4:	5b                   	pop    %rbx
   204d5:	41 5c                	pop    %r12
   204d7:	41 5d                	pop    %r13
   204d9:	41 5e                	pop    %r14
   204db:	41 5f                	pop    %r15
   204dd:	5d                   	pop    %rbp
   204de:	ff e0                	jmpq   *%rax
   204e0:	48 8b 43 18          	mov    0x18(%rbx),%rax
   204e4:	48 8b 78 20          	mov    0x20(%rax),%rdi
   204e8:	48 8b 40 28          	mov    0x28(%rax),%rax
   204ec:	48 8d 35 7e cd 01 00 	lea    0x1cd7e(%rip),%rsi        # 3d271 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x911>
   204f3:	ba 02 00 00 00       	mov    $0x2,%edx
   204f8:	ff 50 18             	callq  *0x18(%rax)
   204fb:	84 c0                	test   %al,%al
   204fd:	0f 84 98 f7 ff ff    	je     1fc9b <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0x82b>
   20503:	e9 51 f7 ff ff       	jmpq   1fc59 <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0x7e9>
   20508:	4d 85 f6             	test   %r14,%r14
   2050b:	0f 84 b8 fb ff ff    	je     200c9 <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0xc59>
   20511:	48 8b 43 18          	mov    0x18(%rbx),%rax
   20515:	48 8b 78 20          	mov    0x20(%rax),%rdi
   20519:	48 8b 40 28          	mov    0x28(%rax),%rax
   2051d:	48 8d 35 4f cd 01 00 	lea    0x1cd4f(%rip),%rsi        # 3d273 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x913>
   20524:	ba 03 00 00 00       	mov    $0x3,%edx
   20529:	ff 50 18             	callq  *0x18(%rax)
   2052c:	84 c0                	test   %al,%al
   2052e:	0f 85 49 fe ff ff    	jne    2037d <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0xf0d>
   20534:	48 89 df             	mov    %rbx,%rdi
   20537:	4c 89 f6             	mov    %r14,%rsi
   2053a:	48 81 c4 98 00 00 00 	add    $0x98,%rsp
   20541:	5b                   	pop    %rbx
   20542:	41 5c                	pop    %r12
   20544:	41 5d                	pop    %r13
   20546:	41 5e                	pop    %r14
   20548:	41 5f                	pop    %r15
   2054a:	5d                   	pop    %rbp
   2054b:	e9 70 01 00 00       	jmpq   206c0 <_ZN14rustc_demangle2v07Printer25print_lifetime_from_index17ha0f25adf6efaca09E>
   20550:	48 8b 43 18          	mov    0x18(%rbx),%rax
   20554:	48 8b 78 20          	mov    0x20(%rax),%rdi
   20558:	48 8b 40 28          	mov    0x28(%rax),%rax
   2055c:	48 8d 35 0e cd 01 00 	lea    0x1cd0e(%rip),%rsi        # 3d271 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x911>
   20563:	ba 02 00 00 00       	mov    $0x2,%edx
   20568:	ff 50 18             	callq  *0x18(%rax)
   2056b:	84 c0                	test   %al,%al
   2056d:	0f 85 0a fe ff ff    	jne    2037d <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0xf0d>
   20573:	e9 77 f5 ff ff       	jmpq   1faef <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE+0x67f>
   20578:	48 8d 3d a2 cd 01 00 	lea    0x1cda2(%rip),%rdi        # 3d321 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x9c1>
   2057f:	48 8d 15 c2 67 22 00 	lea    0x2267c2(%rip),%rdx        # 246d48 <__init_array_end+0xd38>
   20586:	be 2b 00 00 00       	mov    $0x2b,%esi
   2058b:	e8 20 6e fe ff       	callq  73b0 <_ZN4core9panicking5panic17h6861470adfbddef8E>
   20590:	0f 0b                	ud2    
   20592:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   20599:	00 00 00 
   2059c:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000205a0 <_ZN14rustc_demangle2v07Printer17print_generic_arg17h2f9cff311bec59d9E>:
   205a0:	48 8b 07             	mov    (%rdi),%rax
   205a3:	48 89 f9             	mov    %rdi,%rcx
   205a6:	48 85 c0             	test   %rax,%rax
   205a9:	48 0f 44 c8          	cmove  %rax,%rcx
   205ad:	74 71                	je     20620 <_ZN14rustc_demangle2v07Printer17print_generic_arg17h2f9cff311bec59d9E+0x80>
   205af:	48 8b 51 10          	mov    0x10(%rcx),%rdx
   205b3:	48 39 51 08          	cmp    %rdx,0x8(%rcx)
   205b7:	76 4a                	jbe    20603 <_ZN14rustc_demangle2v07Printer17print_generic_arg17h2f9cff311bec59d9E+0x63>
   205b9:	48 8b 31             	mov    (%rcx),%rsi
   205bc:	80 3c 16 4c          	cmpb   $0x4c,(%rsi,%rdx,1)
   205c0:	75 41                	jne    20603 <_ZN14rustc_demangle2v07Printer17print_generic_arg17h2f9cff311bec59d9E+0x63>
   205c2:	48 83 c2 01          	add    $0x1,%rdx
   205c6:	48 89 51 10          	mov    %rdx,0x10(%rcx)
   205ca:	4c 8b 1f             	mov    (%rdi),%r11
   205cd:	4d 85 db             	test   %r11,%r11
   205d0:	4c 0f 45 df          	cmovne %rdi,%r11
   205d4:	0f 84 ab 00 00 00    	je     20685 <_ZN14rustc_demangle2v07Printer17print_generic_arg17h2f9cff311bec59d9E+0xe5>
   205da:	4d 8b 03             	mov    (%r11),%r8
   205dd:	4d 8b 4b 08          	mov    0x8(%r11),%r9
   205e1:	49 8b 73 10          	mov    0x10(%r11),%rsi
   205e5:	49 39 f1             	cmp    %rsi,%r9
   205e8:	76 3b                	jbe    20625 <_ZN14rustc_demangle2v07Printer17print_generic_arg17h2f9cff311bec59d9E+0x85>
   205ea:	41 80 3c 30 5f       	cmpb   $0x5f,(%r8,%rsi,1)
   205ef:	75 34                	jne    20625 <_ZN14rustc_demangle2v07Printer17print_generic_arg17h2f9cff311bec59d9E+0x85>
   205f1:	48 83 c6 01          	add    $0x1,%rsi
   205f5:	49 89 73 10          	mov    %rsi,0x10(%r11)
   205f9:	31 c0                	xor    %eax,%eax
   205fb:	48 89 c6             	mov    %rax,%rsi
   205fe:	e9 bd 00 00 00       	jmpq   206c0 <_ZN14rustc_demangle2v07Printer25print_lifetime_from_index17ha0f25adf6efaca09E>
   20603:	48 8b 4f 10          	mov    0x10(%rdi),%rcx
   20607:	48 39 4f 08          	cmp    %rcx,0x8(%rdi)
   2060b:	76 13                	jbe    20620 <_ZN14rustc_demangle2v07Printer17print_generic_arg17h2f9cff311bec59d9E+0x80>
   2060d:	80 3c 08 4b          	cmpb   $0x4b,(%rax,%rcx,1)
   20611:	75 0d                	jne    20620 <_ZN14rustc_demangle2v07Printer17print_generic_arg17h2f9cff311bec59d9E+0x80>
   20613:	48 83 c1 01          	add    $0x1,%rcx
   20617:	48 89 4f 10          	mov    %rcx,0x10(%rdi)
   2061b:	e9 90 02 00 00       	jmpq   208b0 <_ZN14rustc_demangle2v07Printer11print_const17hb4ae55c3854d33ecE>
   20620:	e9 4b ee ff ff       	jmpq   1f470 <_ZN14rustc_demangle2v07Printer10print_type17h166e317f27e11cffE>
   20625:	31 c0                	xor    %eax,%eax
   20627:	41 ba 3e 00 00 00    	mov    $0x3e,%r10d
   2062d:	0f 1f 00             	nopl   (%rax)
   20630:	49 39 f1             	cmp    %rsi,%r9
   20633:	76 50                	jbe    20685 <_ZN14rustc_demangle2v07Printer17print_generic_arg17h2f9cff311bec59d9E+0xe5>
   20635:	41 0f b6 14 30       	movzbl (%r8,%rsi,1),%edx
   2063a:	80 fa 5f             	cmp    $0x5f,%dl
   2063d:	74 39                	je     20678 <_ZN14rustc_demangle2v07Printer17print_generic_arg17h2f9cff311bec59d9E+0xd8>
   2063f:	8d 4a d0             	lea    -0x30(%rdx),%ecx
   20642:	80 f9 0a             	cmp    $0xa,%cl
   20645:	72 1a                	jb     20661 <_ZN14rustc_demangle2v07Printer17print_generic_arg17h2f9cff311bec59d9E+0xc1>
   20647:	8d 4a 9f             	lea    -0x61(%rdx),%ecx
   2064a:	80 f9 1a             	cmp    $0x1a,%cl
   2064d:	73 05                	jae    20654 <_ZN14rustc_demangle2v07Printer17print_generic_arg17h2f9cff311bec59d9E+0xb4>
   2064f:	80 c2 a9             	add    $0xa9,%dl
   20652:	eb 0b                	jmp    2065f <_ZN14rustc_demangle2v07Printer17print_generic_arg17h2f9cff311bec59d9E+0xbf>
   20654:	8d 4a bf             	lea    -0x41(%rdx),%ecx
   20657:	80 f9 1a             	cmp    $0x1a,%cl
   2065a:	73 29                	jae    20685 <_ZN14rustc_demangle2v07Printer17print_generic_arg17h2f9cff311bec59d9E+0xe5>
   2065c:	80 c2 e3             	add    $0xe3,%dl
   2065f:	89 d1                	mov    %edx,%ecx
   20661:	48 83 c6 01          	add    $0x1,%rsi
   20665:	49 89 73 10          	mov    %rsi,0x10(%r11)
   20669:	49 f7 e2             	mul    %r10
   2066c:	70 17                	jo     20685 <_ZN14rustc_demangle2v07Printer17print_generic_arg17h2f9cff311bec59d9E+0xe5>
   2066e:	0f b6 c9             	movzbl %cl,%ecx
   20671:	48 01 c8             	add    %rcx,%rax
   20674:	73 ba                	jae    20630 <_ZN14rustc_demangle2v07Printer17print_generic_arg17h2f9cff311bec59d9E+0x90>
   20676:	eb 0d                	jmp    20685 <_ZN14rustc_demangle2v07Printer17print_generic_arg17h2f9cff311bec59d9E+0xe5>
   20678:	48 83 c6 01          	add    $0x1,%rsi
   2067c:	49 89 73 10          	mov    %rsi,0x10(%r11)
   20680:	48 ff c0             	inc    %rax
   20683:	75 25                	jne    206aa <_ZN14rustc_demangle2v07Printer17print_generic_arg17h2f9cff311bec59d9E+0x10a>
   20685:	48 c7 07 00 00 00 00 	movq   $0x0,(%rdi)
   2068c:	48 8b 47 18          	mov    0x18(%rdi),%rax
   20690:	48 8b 78 20          	mov    0x20(%rax),%rdi
   20694:	48 8b 40 28          	mov    0x28(%rax),%rax
   20698:	48 8b 40 18          	mov    0x18(%rax),%rax
   2069c:	48 8d 35 31 cb 01 00 	lea    0x1cb31(%rip),%rsi        # 3d1d4 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x874>
   206a3:	ba 01 00 00 00       	mov    $0x1,%edx
   206a8:	ff e0                	jmpq   *%rax
   206aa:	48 89 c6             	mov    %rax,%rsi
   206ad:	e9 0e 00 00 00       	jmpq   206c0 <_ZN14rustc_demangle2v07Printer25print_lifetime_from_index17ha0f25adf6efaca09E>
   206b2:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   206b9:	00 00 00 
   206bc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000206c0 <_ZN14rustc_demangle2v07Printer25print_lifetime_from_index17ha0f25adf6efaca09E>:
   206c0:	55                   	push   %rbp
   206c1:	41 57                	push   %r15
   206c3:	41 56                	push   %r14
   206c5:	53                   	push   %rbx
   206c6:	48 83 ec 28          	sub    $0x28,%rsp
   206ca:	48 89 f3             	mov    %rsi,%rbx
   206cd:	49 89 fe             	mov    %rdi,%r14
   206d0:	48 8b 47 18          	mov    0x18(%rdi),%rax
   206d4:	48 8b 78 20          	mov    0x20(%rax),%rdi
   206d8:	48 8b 40 28          	mov    0x28(%rax),%rax
   206dc:	48 8d 35 65 cb 01 00 	lea    0x1cb65(%rip),%rsi        # 3d248 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x8e8>
   206e3:	ba 01 00 00 00       	mov    $0x1,%edx
   206e8:	ff 50 18             	callq  *0x18(%rax)
   206eb:	41 b7 01             	mov    $0x1,%r15b
   206ee:	84 c0                	test   %al,%al
   206f0:	74 0e                	je     20700 <_ZN14rustc_demangle2v07Printer25print_lifetime_from_index17ha0f25adf6efaca09E+0x40>
   206f2:	44 89 f8             	mov    %r15d,%eax
   206f5:	48 83 c4 28          	add    $0x28,%rsp
   206f9:	5b                   	pop    %rbx
   206fa:	41 5e                	pop    %r14
   206fc:	41 5f                	pop    %r15
   206fe:	5d                   	pop    %rbp
   206ff:	c3                   	retq   
   20700:	48 85 db             	test   %rbx,%rbx
   20703:	74 29                	je     2072e <_ZN14rustc_demangle2v07Printer25print_lifetime_from_index17ha0f25adf6efaca09E+0x6e>
   20705:	41 8b 6e 20          	mov    0x20(%r14),%ebp
   20709:	48 29 dd             	sub    %rbx,%rbp
   2070c:	73 48                	jae    20756 <_ZN14rustc_demangle2v07Printer25print_lifetime_from_index17ha0f25adf6efaca09E+0x96>
   2070e:	49 c7 06 00 00 00 00 	movq   $0x0,(%r14)
   20715:	49 8b 46 18          	mov    0x18(%r14),%rax
   20719:	48 8b 78 20          	mov    0x20(%rax),%rdi
   2071d:	48 8b 40 28          	mov    0x28(%rax),%rax
   20721:	48 8b 40 18          	mov    0x18(%rax),%rax
   20725:	48 8d 35 a8 ca 01 00 	lea    0x1caa8(%rip),%rsi        # 3d1d4 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x874>
   2072c:	eb 17                	jmp    20745 <_ZN14rustc_demangle2v07Printer25print_lifetime_from_index17ha0f25adf6efaca09E+0x85>
   2072e:	49 8b 46 18          	mov    0x18(%r14),%rax
   20732:	48 8b 78 20          	mov    0x20(%rax),%rdi
   20736:	48 8b 40 28          	mov    0x28(%rax),%rax
   2073a:	48 8b 40 18          	mov    0x18(%rax),%rax
   2073e:	48 8d 35 b3 ca 01 00 	lea    0x1cab3(%rip),%rsi        # 3d1f8 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x898>
   20745:	ba 01 00 00 00       	mov    $0x1,%edx
   2074a:	48 83 c4 28          	add    $0x28,%rsp
   2074e:	5b                   	pop    %rbx
   2074f:	41 5e                	pop    %r14
   20751:	41 5f                	pop    %r15
   20753:	5d                   	pop    %rbp
   20754:	ff e0                	jmpq   *%rax
   20756:	48 83 fd 1a          	cmp    $0x1a,%rbp
   2075a:	73 1e                	jae    2077a <_ZN14rustc_demangle2v07Printer25print_lifetime_from_index17ha0f25adf6efaca09E+0xba>
   2075c:	83 c5 61             	add    $0x61,%ebp
   2075f:	40 0f b6 c5          	movzbl %bpl,%eax
   20763:	89 04 24             	mov    %eax,(%rsp)
   20766:	49 8b 76 18          	mov    0x18(%r14),%rsi
   2076a:	48 89 e7             	mov    %rsp,%rdi
   2076d:	e8 5e a2 fe ff       	callq  a9d0 <_ZN43_$LT$char$u20$as$u20$core..fmt..Display$GT$3fmt17h7792e6955f0fb677E>
   20772:	41 89 c7             	mov    %eax,%r15d
   20775:	e9 78 ff ff ff       	jmpq   206f2 <_ZN14rustc_demangle2v07Printer25print_lifetime_from_index17ha0f25adf6efaca09E+0x32>
   2077a:	49 8b 46 18          	mov    0x18(%r14),%rax
   2077e:	48 8b 78 20          	mov    0x20(%rax),%rdi
   20782:	48 8b 40 28          	mov    0x28(%rax),%rax
   20786:	48 8d 35 6b ca 01 00 	lea    0x1ca6b(%rip),%rsi        # 3d1f8 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x898>
   2078d:	ba 01 00 00 00       	mov    $0x1,%edx
   20792:	ff 50 18             	callq  *0x18(%rax)
   20795:	84 c0                	test   %al,%al
   20797:	0f 85 55 ff ff ff    	jne    206f2 <_ZN14rustc_demangle2v07Printer25print_lifetime_from_index17ha0f25adf6efaca09E+0x32>
   2079d:	49 8b 7e 18          	mov    0x18(%r14),%rdi
   207a1:	b9 27 00 00 00       	mov    $0x27,%ecx
   207a6:	48 81 fd 10 27 00 00 	cmp    $0x2710,%rbp
   207ad:	72 72                	jb     20821 <_ZN14rustc_demangle2v07Printer25print_lifetime_from_index17ha0f25adf6efaca09E+0x161>
   207af:	b9 27 00 00 00       	mov    $0x27,%ecx
   207b4:	49 b8 4b 59 86 38 d6 	movabs $0x346dc5d63886594b,%r8
   207bb:	c5 6d 34 
   207be:	4c 8d 0d a5 ae 01 00 	lea    0x1aea5(%rip),%r9        # 3b66a <_ZN4core3str15UTF8_CHAR_WIDTH17h639c7c3d8ce7e983E+0x112>
   207c5:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   207cc:	00 00 00 
   207cf:	90                   	nop
   207d0:	48 89 e8             	mov    %rbp,%rax
   207d3:	49 f7 e0             	mul    %r8
   207d6:	48 c1 ea 0b          	shr    $0xb,%rdx
   207da:	69 c2 10 27 00 00    	imul   $0x2710,%edx,%eax
   207e0:	89 eb                	mov    %ebp,%ebx
   207e2:	29 c3                	sub    %eax,%ebx
   207e4:	0f b7 c3             	movzwl %bx,%eax
   207e7:	c1 e8 02             	shr    $0x2,%eax
   207ea:	69 c0 7b 14 00 00    	imul   $0x147b,%eax,%eax
   207f0:	c1 e8 11             	shr    $0x11,%eax
   207f3:	6b f0 64             	imul   $0x64,%eax,%esi
   207f6:	29 f3                	sub    %esi,%ebx
   207f8:	0f b7 f3             	movzwl %bx,%esi
   207fb:	41 0f b7 04 41       	movzwl (%r9,%rax,2),%eax
   20800:	66 89 44 0c fc       	mov    %ax,-0x4(%rsp,%rcx,1)
   20805:	41 0f b7 04 71       	movzwl (%r9,%rsi,2),%eax
   2080a:	66 89 44 0c fe       	mov    %ax,-0x2(%rsp,%rcx,1)
   2080f:	48 83 c1 fc          	add    $0xfffffffffffffffc,%rcx
   20813:	48 81 fd ff e0 f5 05 	cmp    $0x5f5e0ff,%rbp
   2081a:	48 89 d5             	mov    %rdx,%rbp
   2081d:	77 b1                	ja     207d0 <_ZN14rustc_demangle2v07Printer25print_lifetime_from_index17ha0f25adf6efaca09E+0x110>
   2081f:	eb 03                	jmp    20824 <_ZN14rustc_demangle2v07Printer25print_lifetime_from_index17ha0f25adf6efaca09E+0x164>
   20821:	48 89 ea             	mov    %rbp,%rdx
   20824:	48 83 fa 63          	cmp    $0x63,%rdx
   20828:	7e 2e                	jle    20858 <_ZN14rustc_demangle2v07Printer25print_lifetime_from_index17ha0f25adf6efaca09E+0x198>
   2082a:	0f b7 c2             	movzwl %dx,%eax
   2082d:	c1 e8 02             	shr    $0x2,%eax
   20830:	69 c0 7b 14 00 00    	imul   $0x147b,%eax,%eax
   20836:	c1 e8 11             	shr    $0x11,%eax
   20839:	6b f0 64             	imul   $0x64,%eax,%esi
   2083c:	29 f2                	sub    %esi,%edx
   2083e:	0f b7 d2             	movzwl %dx,%edx
   20841:	48 8d 35 22 ae 01 00 	lea    0x1ae22(%rip),%rsi        # 3b66a <_ZN4core3str15UTF8_CHAR_WIDTH17h639c7c3d8ce7e983E+0x112>
   20848:	0f b7 14 56          	movzwl (%rsi,%rdx,2),%edx
   2084c:	66 89 54 0c fe       	mov    %dx,-0x2(%rsp,%rcx,1)
   20851:	48 83 c1 fe          	add    $0xfffffffffffffffe,%rcx
   20855:	48 89 c2             	mov    %rax,%rdx
   20858:	48 83 fa 0a          	cmp    $0xa,%rdx
   2085c:	7d 0d                	jge    2086b <_ZN14rustc_demangle2v07Printer25print_lifetime_from_index17ha0f25adf6efaca09E+0x1ab>
   2085e:	80 c2 30             	add    $0x30,%dl
   20861:	88 54 0c ff          	mov    %dl,-0x1(%rsp,%rcx,1)
   20865:	48 83 c1 ff          	add    $0xffffffffffffffff,%rcx
   20869:	eb 14                	jmp    2087f <_ZN14rustc_demangle2v07Printer25print_lifetime_from_index17ha0f25adf6efaca09E+0x1bf>
   2086b:	48 8d 05 f8 ad 01 00 	lea    0x1adf8(%rip),%rax        # 3b66a <_ZN4core3str15UTF8_CHAR_WIDTH17h639c7c3d8ce7e983E+0x112>
   20872:	0f b7 04 50          	movzwl (%rax,%rdx,2),%eax
   20876:	66 89 44 0c fe       	mov    %ax,-0x2(%rsp,%rcx,1)
   2087b:	48 83 c1 fe          	add    $0xfffffffffffffffe,%rcx
   2087f:	4c 8d 04 0c          	lea    (%rsp,%rcx,1),%r8
   20883:	41 b9 27 00 00 00    	mov    $0x27,%r9d
   20889:	49 29 c9             	sub    %rcx,%r9
   2088c:	48 8d 15 a5 cb 01 00 	lea    0x1cba5(%rip),%rdx        # 3d438 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0xad8>
   20893:	be 01 00 00 00       	mov    $0x1,%esi
   20898:	31 c9                	xor    %ecx,%ecx
   2089a:	e8 51 6d fe ff       	callq  75f0 <_ZN4core3fmt9Formatter12pad_integral17hc55c32e78eb96054E>
   2089f:	41 89 c7             	mov    %eax,%r15d
   208a2:	e9 4b fe ff ff       	jmpq   206f2 <_ZN14rustc_demangle2v07Printer25print_lifetime_from_index17ha0f25adf6efaca09E+0x32>
   208a7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   208ae:	00 00 

00000000000208b0 <_ZN14rustc_demangle2v07Printer11print_const17hb4ae55c3854d33ecE>:
   208b0:	55                   	push   %rbp
   208b1:	41 57                	push   %r15
   208b3:	41 56                	push   %r14
   208b5:	41 55                	push   %r13
   208b7:	41 54                	push   %r12
   208b9:	53                   	push   %rbx
   208ba:	48 83 ec 48          	sub    $0x48,%rsp
   208be:	49 89 fc             	mov    %rdi,%r12
   208c1:	48 8b 1f             	mov    (%rdi),%rbx
   208c4:	48 89 f8             	mov    %rdi,%rax
   208c7:	48 85 db             	test   %rbx,%rbx
   208ca:	48 0f 44 c3          	cmove  %rbx,%rax
   208ce:	0f 84 e1 00 00 00    	je     209b5 <_ZN14rustc_demangle2v07Printer11print_const17hb4ae55c3854d33ecE+0x105>
   208d4:	48 8b 48 10          	mov    0x10(%rax),%rcx
   208d8:	48 39 48 08          	cmp    %rcx,0x8(%rax)
   208dc:	76 50                	jbe    2092e <_ZN14rustc_demangle2v07Printer11print_const17hb4ae55c3854d33ecE+0x7e>
   208de:	48 8b 10             	mov    (%rax),%rdx
   208e1:	80 3c 0a 42          	cmpb   $0x42,(%rdx,%rcx,1)
   208e5:	75 47                	jne    2092e <_ZN14rustc_demangle2v07Printer11print_const17hb4ae55c3854d33ecE+0x7e>
   208e7:	48 83 c1 01          	add    $0x1,%rcx
   208eb:	48 89 48 10          	mov    %rcx,0x10(%rax)
   208ef:	49 8b 1c 24          	mov    (%r12),%rbx
   208f3:	48 85 db             	test   %rbx,%rbx
   208f6:	49 0f 45 dc          	cmovne %r12,%rbx
   208fa:	0f 84 31 03 00 00    	je     20c31 <_ZN14rustc_demangle2v07Printer11print_const17hb4ae55c3854d33ecE+0x381>
   20900:	4c 8b 53 10          	mov    0x10(%rbx),%r10
   20904:	48 8b 3b             	mov    (%rbx),%rdi
   20907:	48 8b 4b 08          	mov    0x8(%rbx),%rcx
   2090b:	4c 39 d1             	cmp    %r10,%rcx
   2090e:	0f 86 d6 00 00 00    	jbe    209ea <_ZN14rustc_demangle2v07Printer11print_const17hb4ae55c3854d33ecE+0x13a>
   20914:	42 80 3c 17 5f       	cmpb   $0x5f,(%rdi,%r10,1)
   20919:	0f 85 cb 00 00 00    	jne    209ea <_ZN14rustc_demangle2v07Printer11print_const17hb4ae55c3854d33ecE+0x13a>
   2091f:	49 8d 42 01          	lea    0x1(%r10),%rax
   20923:	48 89 43 10          	mov    %rax,0x10(%rbx)
   20927:	31 c0                	xor    %eax,%eax
   20929:	e9 08 03 00 00       	jmpq   20c36 <_ZN14rustc_demangle2v07Printer11print_const17hb4ae55c3854d33ecE+0x386>
   2092e:	49 8b 74 24 08       	mov    0x8(%r12),%rsi
   20933:	49 8b 6c 24 10       	mov    0x10(%r12),%rbp
   20938:	49 89 f2             	mov    %rsi,%r10
   2093b:	49 29 ea             	sub    %rbp,%r10
   2093e:	76 75                	jbe    209b5 <_ZN14rustc_demangle2v07Printer11print_const17hb4ae55c3854d33ecE+0x105>
   20940:	8a 04 2b             	mov    (%rbx,%rbp,1),%al
   20943:	4c 8d 4d 01          	lea    0x1(%rbp),%r9
   20947:	4d 89 4c 24 10       	mov    %r9,0x10(%r12)
   2094c:	04 98                	add    $0x98,%al
   2094e:	3c 11                	cmp    $0x11,%al
   20950:	77 63                	ja     209b5 <_ZN14rustc_demangle2v07Printer11print_const17hb4ae55c3854d33ecE+0x105>
   20952:	4c 8d 35 9b c8 01 00 	lea    0x1c89b(%rip),%r14        # 3d1f4 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x894>
   20959:	41 bf 02 00 00 00    	mov    $0x2,%r15d
   2095f:	0f b6 c0             	movzbl %al,%eax
   20962:	48 8d 0d 7f a0 01 00 	lea    0x1a07f(%rip),%rcx        # 3a9e8 <_ZN4core7unicode12unicode_data2cc19BITSET_INDEX_CHUNKS17h8a1f39cd536e9344E+0x528>
   20969:	48 63 04 81          	movslq (%rcx,%rax,4),%rax
   2096d:	48 01 c8             	add    %rcx,%rax
   20970:	ff e0                	jmpq   *%rax
   20972:	4c 8d 35 6d c8 01 00 	lea    0x1c86d(%rip),%r14        # 3d1e6 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x886>
   20979:	41 bf 05 00 00 00    	mov    $0x5,%r15d
   2097f:	4c 39 ce             	cmp    %r9,%rsi
   20982:	0f 86 28 01 00 00    	jbe    20ab0 <_ZN14rustc_demangle2v07Printer11print_const17hb4ae55c3854d33ecE+0x200>
   20988:	42 80 3c 0b 70       	cmpb   $0x70,(%rbx,%r9,1)
   2098d:	0f 85 1d 01 00 00    	jne    20ab0 <_ZN14rustc_demangle2v07Printer11print_const17hb4ae55c3854d33ecE+0x200>
   20993:	48 83 c5 02          	add    $0x2,%rbp
   20997:	49 89 6c 24 10       	mov    %rbp,0x10(%r12)
   2099c:	49 8b 44 24 18       	mov    0x18(%r12),%rax
   209a1:	48 8b 78 20          	mov    0x20(%rax),%rdi
   209a5:	48 8b 40 28          	mov    0x28(%rax),%rax
   209a9:	48 8d 35 48 c8 01 00 	lea    0x1c848(%rip),%rsi        # 3d1f8 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x898>
   209b0:	e9 0a 02 00 00       	jmpq   20bbf <_ZN14rustc_demangle2v07Printer11print_const17hb4ae55c3854d33ecE+0x30f>
   209b5:	49 c7 04 24 00 00 00 	movq   $0x0,(%r12)
   209bc:	00 
   209bd:	49 8b 44 24 18       	mov    0x18(%r12),%rax
   209c2:	48 8b 78 20          	mov    0x20(%rax),%rdi
   209c6:	48 8b 40 28          	mov    0x28(%rax),%rax
   209ca:	48 8b 40 18          	mov    0x18(%rax),%rax
   209ce:	48 8d 35 ff c7 01 00 	lea    0x1c7ff(%rip),%rsi        # 3d1d4 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x874>
   209d5:	ba 01 00 00 00       	mov    $0x1,%edx
   209da:	48 83 c4 48          	add    $0x48,%rsp
   209de:	5b                   	pop    %rbx
   209df:	41 5c                	pop    %r12
   209e1:	41 5d                	pop    %r13
   209e3:	41 5e                	pop    %r14
   209e5:	41 5f                	pop    %r15
   209e7:	5d                   	pop    %rbp
   209e8:	ff e0                	jmpq   *%rax
   209ea:	45 31 c0             	xor    %r8d,%r8d
   209ed:	41 b9 3e 00 00 00    	mov    $0x3e,%r9d
   209f3:	4c 89 d5             	mov    %r10,%rbp
   209f6:	31 c0                	xor    %eax,%eax
   209f8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   209ff:	00 
   20a00:	48 39 e9             	cmp    %rbp,%rcx
   20a03:	76 48                	jbe    20a4d <_ZN14rustc_demangle2v07Printer11print_const17hb4ae55c3854d33ecE+0x19d>
   20a05:	0f b6 14 2f          	movzbl (%rdi,%rbp,1),%edx
   20a09:	80 fa 5f             	cmp    $0x5f,%dl
   20a0c:	0f 84 12 02 00 00    	je     20c24 <_ZN14rustc_demangle2v07Printer11print_const17hb4ae55c3854d33ecE+0x374>
   20a12:	8d 72 d0             	lea    -0x30(%rdx),%esi
   20a15:	40 80 fe 0a          	cmp    $0xa,%sil
   20a19:	72 1c                	jb     20a37 <_ZN14rustc_demangle2v07Printer11print_const17hb4ae55c3854d33ecE+0x187>
   20a1b:	8d 72 9f             	lea    -0x61(%rdx),%esi
   20a1e:	40 80 fe 1a          	cmp    $0x1a,%sil
   20a22:	73 05                	jae    20a29 <_ZN14rustc_demangle2v07Printer11print_const17hb4ae55c3854d33ecE+0x179>
   20a24:	80 c2 a9             	add    $0xa9,%dl
   20a27:	eb 0c                	jmp    20a35 <_ZN14rustc_demangle2v07Printer11print_const17hb4ae55c3854d33ecE+0x185>
   20a29:	8d 72 bf             	lea    -0x41(%rdx),%esi
   20a2c:	40 80 fe 1a          	cmp    $0x1a,%sil
   20a30:	73 1b                	jae    20a4d <_ZN14rustc_demangle2v07Printer11print_const17hb4ae55c3854d33ecE+0x19d>
   20a32:	80 c2 e3             	add    $0xe3,%dl
   20a35:	89 d6                	mov    %edx,%esi
   20a37:	48 83 c5 01          	add    $0x1,%rbp
   20a3b:	48 89 6b 10          	mov    %rbp,0x10(%rbx)
   20a3f:	49 f7 e1             	mul    %r9
   20a42:	70 09                	jo     20a4d <_ZN14rustc_demangle2v07Printer11print_const17hb4ae55c3854d33ecE+0x19d>
   20a44:	40 0f b6 d6          	movzbl %sil,%edx
   20a48:	48 01 d0             	add    %rdx,%rax
   20a4b:	73 b3                	jae    20a00 <_ZN14rustc_demangle2v07Printer11print_const17hb4ae55c3854d33ecE+0x150>
   20a4d:	e9 f2 01 00 00       	jmpq   20c44 <_ZN14rustc_demangle2v07Printer11print_const17hb4ae55c3854d33ecE+0x394>
   20a52:	4c 8d 35 95 c7 01 00 	lea    0x1c795(%rip),%r14        # 3d1ee <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x88e>
   20a59:	41 bf 03 00 00 00    	mov    $0x3,%r15d
   20a5f:	4c 39 ce             	cmp    %r9,%rsi
   20a62:	0f 87 20 ff ff ff    	ja     20988 <_ZN14rustc_demangle2v07Printer11print_const17hb4ae55c3854d33ecE+0xd8>
   20a68:	eb 46                	jmp    20ab0 <_ZN14rustc_demangle2v07Printer11print_const17hb4ae55c3854d33ecE+0x200>
   20a6a:	4c 8d 35 7a c7 01 00 	lea    0x1c77a(%rip),%r14        # 3d1eb <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x88b>
   20a71:	41 bf 03 00 00 00    	mov    $0x3,%r15d
   20a77:	4c 39 ce             	cmp    %r9,%rsi
   20a7a:	0f 87 08 ff ff ff    	ja     20988 <_ZN14rustc_demangle2v07Printer11print_const17hb4ae55c3854d33ecE+0xd8>
   20a80:	eb 2e                	jmp    20ab0 <_ZN14rustc_demangle2v07Printer11print_const17hb4ae55c3854d33ecE+0x200>
   20a82:	4c 8d 35 eb b9 01 00 	lea    0x1b9eb(%rip),%r14        # 3c474 <_ZN4core7unicode12unicode_data15grapheme_extend6BITSET17h68ce7f61ccfa32feE+0x9d4>
   20a89:	41 bf 04 00 00 00    	mov    $0x4,%r15d
   20a8f:	4c 39 ce             	cmp    %r9,%rsi
   20a92:	0f 87 f0 fe ff ff    	ja     20988 <_ZN14rustc_demangle2v07Printer11print_const17hb4ae55c3854d33ecE+0xd8>
   20a98:	eb 16                	jmp    20ab0 <_ZN14rustc_demangle2v07Printer11print_const17hb4ae55c3854d33ecE+0x200>
   20a9a:	4c 8d 35 50 c7 01 00 	lea    0x1c750(%rip),%r14        # 3d1f1 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x891>
   20aa1:	41 bf 03 00 00 00    	mov    $0x3,%r15d
   20aa7:	4c 39 ce             	cmp    %r9,%rsi
   20aaa:	0f 87 d8 fe ff ff    	ja     20988 <_ZN14rustc_demangle2v07Printer11print_const17hb4ae55c3854d33ecE+0xd8>
   20ab0:	48 8d 04 2b          	lea    (%rbx,%rbp,1),%rax
   20ab4:	31 d2                	xor    %edx,%edx
   20ab6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   20abd:	00 00 00 
   20ac0:	48 8d 0c 2a          	lea    (%rdx,%rbp,1),%rcx
   20ac4:	48 83 c1 01          	add    $0x1,%rcx
   20ac8:	48 39 ce             	cmp    %rcx,%rsi
   20acb:	0f 86 d2 00 00 00    	jbe    20ba3 <_ZN14rustc_demangle2v07Printer11print_const17hb4ae55c3854d33ecE+0x2f3>
   20ad1:	0f b6 4c 10 01       	movzbl 0x1(%rax,%rdx,1),%ecx
   20ad6:	48 8d 3c 2a          	lea    (%rdx,%rbp,1),%rdi
   20ada:	48 83 c7 02          	add    $0x2,%rdi
   20ade:	49 89 7c 24 10       	mov    %rdi,0x10(%r12)
   20ae3:	8d 79 d0             	lea    -0x30(%rcx),%edi
   20ae6:	48 83 c2 01          	add    $0x1,%rdx
   20aea:	40 80 ff 0a          	cmp    $0xa,%dil
   20aee:	72 d0                	jb     20ac0 <_ZN14rustc_demangle2v07Printer11print_const17hb4ae55c3854d33ecE+0x210>
   20af0:	8d 79 9f             	lea    -0x61(%rcx),%edi
   20af3:	40 80 ff 06          	cmp    $0x6,%dil
   20af7:	72 c7                	jb     20ac0 <_ZN14rustc_demangle2v07Printer11print_const17hb4ae55c3854d33ecE+0x210>
   20af9:	80 f9 5f             	cmp    $0x5f,%cl
   20afc:	0f 85 a1 00 00 00    	jne    20ba3 <_ZN14rustc_demangle2v07Printer11print_const17hb4ae55c3854d33ecE+0x2f3>
   20b02:	48 8d 0c 2a          	lea    (%rdx,%rbp,1),%rcx
   20b06:	48 89 5c 24 38       	mov    %rbx,0x38(%rsp)
   20b0b:	48 89 74 24 40       	mov    %rsi,0x40(%rsp)
   20b10:	4c 89 4c 24 28       	mov    %r9,0x28(%rsp)
   20b15:	48 89 4c 24 30       	mov    %rcx,0x30(%rsp)
   20b1a:	48 39 e9             	cmp    %rbp,%rcx
   20b1d:	0f 86 cc 03 00 00    	jbe    20eef <_ZN14rustc_demangle2v07Printer11print_const17hb4ae55c3854d33ecE+0x63f>
   20b23:	4c 39 ce             	cmp    %r9,%rsi
   20b26:	74 11                	je     20b39 <_ZN14rustc_demangle2v07Printer11print_const17hb4ae55c3854d33ecE+0x289>
   20b28:	0f 86 c1 03 00 00    	jbe    20eef <_ZN14rustc_demangle2v07Printer11print_const17hb4ae55c3854d33ecE+0x63f>
   20b2e:	42 80 3c 0b bf       	cmpb   $0xbf,(%rbx,%r9,1)
   20b33:	0f 8e b6 03 00 00    	jle    20eef <_ZN14rustc_demangle2v07Printer11print_const17hb4ae55c3854d33ecE+0x63f>
   20b39:	4c 8d 04 10          	lea    (%rax,%rdx,1),%r8
   20b3d:	49 39 d2             	cmp    %rdx,%r10
   20b40:	74 0a                	je     20b4c <_ZN14rustc_demangle2v07Printer11print_const17hb4ae55c3854d33ecE+0x29c>
   20b42:	41 80 38 bf          	cmpb   $0xbf,(%r8)
   20b46:	0f 8e a3 03 00 00    	jle    20eef <_ZN14rustc_demangle2v07Printer11print_const17hb4ae55c3854d33ecE+0x63f>
   20b4c:	4c 01 cb             	add    %r9,%rbx
   20b4f:	4c 8d 6a ff          	lea    -0x1(%rdx),%r13
   20b53:	49 83 fd 10          	cmp    $0x10,%r13
   20b57:	0f 86 ba 00 00 00    	jbe    20c17 <_ZN14rustc_demangle2v07Printer11print_const17hb4ae55c3854d33ecE+0x367>
   20b5d:	49 8b 44 24 18       	mov    0x18(%r12),%rax
   20b62:	48 8b 78 20          	mov    0x20(%rax),%rdi
   20b66:	48 8b 40 28          	mov    0x28(%rax),%rax
   20b6a:	48 8d 35 85 c6 01 00 	lea    0x1c685(%rip),%rsi        # 3d1f6 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x896>
   20b71:	ba 02 00 00 00       	mov    $0x2,%edx
   20b76:	ff 50 18             	callq  *0x18(%rax)
   20b79:	40 b5 01             	mov    $0x1,%bpl
   20b7c:	84 c0                	test   %al,%al
   20b7e:	0f 85 eb 00 00 00    	jne    20c6f <_ZN14rustc_demangle2v07Printer11print_const17hb4ae55c3854d33ecE+0x3bf>
   20b84:	49 8b 44 24 18       	mov    0x18(%r12),%rax
   20b89:	48 8b 78 20          	mov    0x20(%rax),%rdi
   20b8d:	48 8b 40 28          	mov    0x28(%rax),%rax
   20b91:	48 89 de             	mov    %rbx,%rsi
   20b94:	4c 89 ea             	mov    %r13,%rdx
   20b97:	ff 50 18             	callq  *0x18(%rax)
   20b9a:	84 c0                	test   %al,%al
   20b9c:	74 34                	je     20bd2 <_ZN14rustc_demangle2v07Printer11print_const17hb4ae55c3854d33ecE+0x322>
   20b9e:	e9 cc 00 00 00       	jmpq   20c6f <_ZN14rustc_demangle2v07Printer11print_const17hb4ae55c3854d33ecE+0x3bf>
   20ba3:	49 c7 04 24 00 00 00 	movq   $0x0,(%r12)
   20baa:	00 
   20bab:	49 8b 44 24 18       	mov    0x18(%r12),%rax
   20bb0:	48 8b 78 20          	mov    0x20(%rax),%rdi
   20bb4:	48 8b 40 28          	mov    0x28(%rax),%rax
   20bb8:	48 8d 35 15 c6 01 00 	lea    0x1c615(%rip),%rsi        # 3d1d4 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x874>
   20bbf:	ba 01 00 00 00       	mov    $0x1,%edx
   20bc4:	ff 50 18             	callq  *0x18(%rax)
   20bc7:	40 b5 01             	mov    $0x1,%bpl
   20bca:	84 c0                	test   %al,%al
   20bcc:	0f 85 9d 00 00 00    	jne    20c6f <_ZN14rustc_demangle2v07Printer11print_const17hb4ae55c3854d33ecE+0x3bf>
   20bd2:	49 8b 44 24 18       	mov    0x18(%r12),%rax
   20bd7:	f6 40 30 04          	testb  $0x4,0x30(%rax)
   20bdb:	75 36                	jne    20c13 <_ZN14rustc_demangle2v07Printer11print_const17hb4ae55c3854d33ecE+0x363>
   20bdd:	48 8b 78 20          	mov    0x20(%rax),%rdi
   20be1:	48 8b 40 28          	mov    0x28(%rax),%rax
   20be5:	48 8d 35 05 d0 01 00 	lea    0x1d005(%rip),%rsi        # 3dbf1 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x1291>
   20bec:	ba 02 00 00 00       	mov    $0x2,%edx
   20bf1:	ff 50 18             	callq  *0x18(%rax)
   20bf4:	40 b5 01             	mov    $0x1,%bpl
   20bf7:	84 c0                	test   %al,%al
   20bf9:	75 74                	jne    20c6f <_ZN14rustc_demangle2v07Printer11print_const17hb4ae55c3854d33ecE+0x3bf>
   20bfb:	49 8b 44 24 18       	mov    0x18(%r12),%rax
   20c00:	48 8b 78 20          	mov    0x20(%rax),%rdi
   20c04:	48 8b 40 28          	mov    0x28(%rax),%rax
   20c08:	4c 89 f6             	mov    %r14,%rsi
   20c0b:	4c 89 fa             	mov    %r15,%rdx
   20c0e:	ff 50 18             	callq  *0x18(%rax)
   20c11:	eb 5e                	jmp    20c71 <_ZN14rustc_demangle2v07Printer11print_const17hb4ae55c3854d33ecE+0x3c1>
   20c13:	31 ed                	xor    %ebp,%ebp
   20c15:	eb 58                	jmp    20c6f <_ZN14rustc_demangle2v07Printer11print_const17hb4ae55c3854d33ecE+0x3bf>
   20c17:	48 83 fa 01          	cmp    $0x1,%rdx
   20c1b:	75 63                	jne    20c80 <_ZN14rustc_demangle2v07Printer11print_const17hb4ae55c3854d33ecE+0x3d0>
   20c1d:	31 ed                	xor    %ebp,%ebp
   20c1f:	e9 b4 01 00 00       	jmpq   20dd8 <_ZN14rustc_demangle2v07Printer11print_const17hb4ae55c3854d33ecE+0x528>
   20c24:	48 83 c5 01          	add    $0x1,%rbp
   20c28:	48 89 6b 10          	mov    %rbp,0x10(%rbx)
   20c2c:	48 ff c0             	inc    %rax
   20c2f:	75 05                	jne    20c36 <_ZN14rustc_demangle2v07Printer11print_const17hb4ae55c3854d33ecE+0x386>
   20c31:	45 31 c0             	xor    %r8d,%r8d
   20c34:	eb 0e                	jmp    20c44 <_ZN14rustc_demangle2v07Printer11print_const17hb4ae55c3854d33ecE+0x394>
   20c36:	49 83 c2 ff          	add    $0xffffffffffffffff,%r10
   20c3a:	45 31 c0             	xor    %r8d,%r8d
   20c3d:	4c 39 d0             	cmp    %r10,%rax
   20c40:	4c 0f 42 c7          	cmovb  %rdi,%r8
   20c44:	49 8b 54 24 18       	mov    0x18(%r12),%rdx
   20c49:	41 8b 74 24 20       	mov    0x20(%r12),%esi
   20c4e:	4c 89 04 24          	mov    %r8,(%rsp)
   20c52:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
   20c57:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   20c5c:	48 89 54 24 18       	mov    %rdx,0x18(%rsp)
   20c61:	89 74 24 20          	mov    %esi,0x20(%rsp)
   20c65:	48 89 e7             	mov    %rsp,%rdi
   20c68:	e8 43 fc ff ff       	callq  208b0 <_ZN14rustc_demangle2v07Printer11print_const17hb4ae55c3854d33ecE>
   20c6d:	89 c5                	mov    %eax,%ebp
   20c6f:	89 e8                	mov    %ebp,%eax
   20c71:	48 83 c4 48          	add    $0x48,%rsp
   20c75:	5b                   	pop    %rbx
   20c76:	41 5c                	pop    %r12
   20c78:	41 5d                	pop    %r13
   20c7a:	41 5e                	pop    %r14
   20c7c:	41 5f                	pop    %r15
   20c7e:	5d                   	pop    %rbp
   20c7f:	c3                   	retq   
   20c80:	48 f7 d8             	neg    %rax
   20c83:	31 ed                	xor    %ebp,%ebp
   20c85:	0f b6 3b             	movzbl (%rbx),%edi
   20c88:	40 84 ff             	test   %dil,%dil
   20c8b:	79 2d                	jns    20cba <_ZN14rustc_demangle2v07Printer11print_const17hb4ae55c3854d33ecE+0x40a>
   20c8d:	eb 3c                	jmp    20ccb <_ZN14rustc_demangle2v07Printer11print_const17hb4ae55c3854d33ecE+0x41b>
   20c8f:	01 f7                	add    %esi,%edi
   20c91:	89 fe                	mov    %edi,%esi
   20c93:	83 ff 10             	cmp    $0x10,%edi
   20c96:	0f 83 22 01 00 00    	jae    20dbe <_ZN14rustc_demangle2v07Printer11print_const17hb4ae55c3854d33ecE+0x50e>
   20c9c:	48 8d 3c 03          	lea    (%rbx,%rax,1),%rdi
   20ca0:	48 c1 e5 04          	shl    $0x4,%rbp
   20ca4:	89 f6                	mov    %esi,%esi
   20ca6:	48 09 f5             	or     %rsi,%rbp
   20ca9:	48 39 d7             	cmp    %rdx,%rdi
   20cac:	0f 84 26 01 00 00    	je     20dd8 <_ZN14rustc_demangle2v07Printer11print_const17hb4ae55c3854d33ecE+0x528>
   20cb2:	0f b6 3b             	movzbl (%rbx),%edi
   20cb5:	40 84 ff             	test   %dil,%dil
   20cb8:	78 11                	js     20ccb <_ZN14rustc_demangle2v07Printer11print_const17hb4ae55c3854d33ecE+0x41b>
   20cba:	48 83 c3 01          	add    $0x1,%rbx
   20cbe:	8d 77 d0             	lea    -0x30(%rdi),%esi
   20cc1:	83 fe 0a             	cmp    $0xa,%esi
   20cc4:	72 d6                	jb     20c9c <_ZN14rustc_demangle2v07Printer11print_const17hb4ae55c3854d33ecE+0x3ec>
   20cc6:	e9 d1 00 00 00       	jmpq   20d9c <_ZN14rustc_demangle2v07Printer11print_const17hb4ae55c3854d33ecE+0x4ec>
   20ccb:	48 8d 34 03          	lea    (%rbx,%rax,1),%rsi
   20ccf:	48 83 c6 01          	add    $0x1,%rsi
   20cd3:	48 39 d6             	cmp    %rdx,%rsi
   20cd6:	74 4e                	je     20d26 <_ZN14rustc_demangle2v07Printer11print_const17hb4ae55c3854d33ecE+0x476>
   20cd8:	0f b6 4b 01          	movzbl 0x1(%rbx),%ecx
   20cdc:	48 83 c3 02          	add    $0x2,%rbx
   20ce0:	83 e1 3f             	and    $0x3f,%ecx
   20ce3:	41 89 fa             	mov    %edi,%r10d
   20ce6:	41 83 e2 1f          	and    $0x1f,%r10d
   20cea:	40 80 ff df          	cmp    $0xdf,%dil
   20cee:	76 48                	jbe    20d38 <_ZN14rustc_demangle2v07Printer11print_const17hb4ae55c3854d33ecE+0x488>
   20cf0:	48 8d 34 03          	lea    (%rbx,%rax,1),%rsi
   20cf4:	48 39 d6             	cmp    %rdx,%rsi
   20cf7:	74 45                	je     20d3e <_ZN14rustc_demangle2v07Printer11print_const17hb4ae55c3854d33ecE+0x48e>
   20cf9:	44 0f b6 0b          	movzbl (%rbx),%r9d
   20cfd:	48 83 c3 01          	add    $0x1,%rbx
   20d01:	41 83 e1 3f          	and    $0x3f,%r9d
   20d05:	c1 e1 06             	shl    $0x6,%ecx
   20d08:	44 09 c9             	or     %r9d,%ecx
   20d0b:	40 80 ff f0          	cmp    $0xf0,%dil
   20d0f:	72 3f                	jb     20d50 <_ZN14rustc_demangle2v07Printer11print_const17hb4ae55c3854d33ecE+0x4a0>
   20d11:	48 8d 34 03          	lea    (%rbx,%rax,1),%rsi
   20d15:	48 39 d6             	cmp    %rdx,%rsi
   20d18:	74 4d                	je     20d67 <_ZN14rustc_demangle2v07Printer11print_const17hb4ae55c3854d33ecE+0x4b7>
   20d1a:	0f b6 3b             	movzbl (%rbx),%edi
   20d1d:	48 83 c3 01          	add    $0x1,%rbx
   20d21:	83 e7 3f             	and    $0x3f,%edi
   20d24:	eb 46                	jmp    20d6c <_ZN14rustc_demangle2v07Printer11print_const17hb4ae55c3854d33ecE+0x4bc>
   20d26:	31 c9                	xor    %ecx,%ecx
   20d28:	4c 89 c3             	mov    %r8,%rbx
   20d2b:	41 89 fa             	mov    %edi,%r10d
   20d2e:	41 83 e2 1f          	and    $0x1f,%r10d
   20d32:	40 80 ff df          	cmp    $0xdf,%dil
   20d36:	77 b8                	ja     20cf0 <_ZN14rustc_demangle2v07Printer11print_const17hb4ae55c3854d33ecE+0x440>
   20d38:	41 c1 e2 06          	shl    $0x6,%r10d
   20d3c:	eb 16                	jmp    20d54 <_ZN14rustc_demangle2v07Printer11print_const17hb4ae55c3854d33ecE+0x4a4>
   20d3e:	45 31 c9             	xor    %r9d,%r9d
   20d41:	4c 89 c3             	mov    %r8,%rbx
   20d44:	c1 e1 06             	shl    $0x6,%ecx
   20d47:	44 09 c9             	or     %r9d,%ecx
   20d4a:	40 80 ff f0          	cmp    $0xf0,%dil
   20d4e:	73 c1                	jae    20d11 <_ZN14rustc_demangle2v07Printer11print_const17hb4ae55c3854d33ecE+0x461>
   20d50:	41 c1 e2 0c          	shl    $0xc,%r10d
   20d54:	44 09 d1             	or     %r10d,%ecx
   20d57:	89 cf                	mov    %ecx,%edi
   20d59:	8d 77 d0             	lea    -0x30(%rdi),%esi
   20d5c:	83 fe 0a             	cmp    $0xa,%esi
   20d5f:	0f 82 37 ff ff ff    	jb     20c9c <_ZN14rustc_demangle2v07Printer11print_const17hb4ae55c3854d33ecE+0x3ec>
   20d65:	eb 35                	jmp    20d9c <_ZN14rustc_demangle2v07Printer11print_const17hb4ae55c3854d33ecE+0x4ec>
   20d67:	31 ff                	xor    %edi,%edi
   20d69:	4c 89 c3             	mov    %r8,%rbx
   20d6c:	41 83 e2 07          	and    $0x7,%r10d
   20d70:	41 c1 e2 12          	shl    $0x12,%r10d
   20d74:	c1 e1 06             	shl    $0x6,%ecx
   20d77:	44 09 d1             	or     %r10d,%ecx
   20d7a:	09 f9                	or     %edi,%ecx
   20d7c:	89 cf                	mov    %ecx,%edi
   20d7e:	81 f9 00 00 11 00    	cmp    $0x110000,%ecx
   20d84:	74 52                	je     20dd8 <_ZN14rustc_demangle2v07Printer11print_const17hb4ae55c3854d33ecE+0x528>
   20d86:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   20d8d:	00 00 00 
   20d90:	8d 77 d0             	lea    -0x30(%rdi),%esi
   20d93:	83 fe 0a             	cmp    $0xa,%esi
   20d96:	0f 82 00 ff ff ff    	jb     20c9c <_ZN14rustc_demangle2v07Printer11print_const17hb4ae55c3854d33ecE+0x3ec>
   20d9c:	8d 4f 9f             	lea    -0x61(%rdi),%ecx
   20d9f:	be a9 ff ff ff       	mov    $0xffffffa9,%esi
   20da4:	83 f9 1a             	cmp    $0x1a,%ecx
   20da7:	0f 82 e2 fe ff ff    	jb     20c8f <_ZN14rustc_demangle2v07Printer11print_const17hb4ae55c3854d33ecE+0x3df>
   20dad:	8d 4f bf             	lea    -0x41(%rdi),%ecx
   20db0:	be c9 ff ff ff       	mov    $0xffffffc9,%esi
   20db5:	83 f9 19             	cmp    $0x19,%ecx
   20db8:	0f 86 d1 fe ff ff    	jbe    20c8f <_ZN14rustc_demangle2v07Printer11print_const17hb4ae55c3854d33ecE+0x3df>
   20dbe:	48 8d 3d 5c c5 01 00 	lea    0x1c55c(%rip),%rdi        # 3d321 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x9c1>
   20dc5:	48 8d 15 64 5f 22 00 	lea    0x225f64(%rip),%rdx        # 246d30 <__init_array_end+0xd20>
   20dcc:	be 2b 00 00 00       	mov    $0x2b,%esi
   20dd1:	e8 da 65 fe ff       	callq  73b0 <_ZN4core9panicking5panic17h6861470adfbddef8E>
   20dd6:	0f 0b                	ud2    
   20dd8:	49 8b 7c 24 18       	mov    0x18(%r12),%rdi
   20ddd:	be 27 00 00 00       	mov    $0x27,%esi
   20de2:	48 81 fd 10 27 00 00 	cmp    $0x2710,%rbp
   20de9:	72 76                	jb     20e61 <_ZN14rustc_demangle2v07Printer11print_const17hb4ae55c3854d33ecE+0x5b1>
   20deb:	be 27 00 00 00       	mov    $0x27,%esi
   20df0:	49 b8 4b 59 86 38 d6 	movabs $0x346dc5d63886594b,%r8
   20df7:	c5 6d 34 
   20dfa:	4c 8d 0d 69 a8 01 00 	lea    0x1a869(%rip),%r9        # 3b66a <_ZN4core3str15UTF8_CHAR_WIDTH17h639c7c3d8ce7e983E+0x112>
   20e01:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   20e08:	00 00 00 
   20e0b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   20e10:	48 89 e8             	mov    %rbp,%rax
   20e13:	49 f7 e0             	mul    %r8
   20e16:	48 c1 ea 0b          	shr    $0xb,%rdx
   20e1a:	69 c2 10 27 00 00    	imul   $0x2710,%edx,%eax
   20e20:	89 e9                	mov    %ebp,%ecx
   20e22:	29 c1                	sub    %eax,%ecx
   20e24:	0f b7 c1             	movzwl %cx,%eax
   20e27:	c1 e8 02             	shr    $0x2,%eax
   20e2a:	69 c0 7b 14 00 00    	imul   $0x147b,%eax,%eax
   20e30:	c1 e8 11             	shr    $0x11,%eax
   20e33:	6b d8 64             	imul   $0x64,%eax,%ebx
   20e36:	29 d9                	sub    %ebx,%ecx
   20e38:	0f b7 c9             	movzwl %cx,%ecx
   20e3b:	41 0f b7 04 41       	movzwl (%r9,%rax,2),%eax
   20e40:	66 89 44 34 fc       	mov    %ax,-0x4(%rsp,%rsi,1)
   20e45:	41 0f b7 04 49       	movzwl (%r9,%rcx,2),%eax
   20e4a:	66 89 44 34 fe       	mov    %ax,-0x2(%rsp,%rsi,1)
   20e4f:	48 83 c6 fc          	add    $0xfffffffffffffffc,%rsi
   20e53:	48 81 fd ff e0 f5 05 	cmp    $0x5f5e0ff,%rbp
   20e5a:	48 89 d5             	mov    %rdx,%rbp
   20e5d:	77 b1                	ja     20e10 <_ZN14rustc_demangle2v07Printer11print_const17hb4ae55c3854d33ecE+0x560>
   20e5f:	eb 03                	jmp    20e64 <_ZN14rustc_demangle2v07Printer11print_const17hb4ae55c3854d33ecE+0x5b4>
   20e61:	48 89 ea             	mov    %rbp,%rdx
   20e64:	48 83 fa 63          	cmp    $0x63,%rdx
   20e68:	7e 2e                	jle    20e98 <_ZN14rustc_demangle2v07Printer11print_const17hb4ae55c3854d33ecE+0x5e8>
   20e6a:	0f b7 c2             	movzwl %dx,%eax
   20e6d:	c1 e8 02             	shr    $0x2,%eax
   20e70:	69 c0 7b 14 00 00    	imul   $0x147b,%eax,%eax
   20e76:	c1 e8 11             	shr    $0x11,%eax
   20e79:	6b c8 64             	imul   $0x64,%eax,%ecx
   20e7c:	29 ca                	sub    %ecx,%edx
   20e7e:	0f b7 ca             	movzwl %dx,%ecx
   20e81:	48 8d 15 e2 a7 01 00 	lea    0x1a7e2(%rip),%rdx        # 3b66a <_ZN4core3str15UTF8_CHAR_WIDTH17h639c7c3d8ce7e983E+0x112>
   20e88:	0f b7 0c 4a          	movzwl (%rdx,%rcx,2),%ecx
   20e8c:	66 89 4c 34 fe       	mov    %cx,-0x2(%rsp,%rsi,1)
   20e91:	48 83 c6 fe          	add    $0xfffffffffffffffe,%rsi
   20e95:	48 89 c2             	mov    %rax,%rdx
   20e98:	48 83 fa 0a          	cmp    $0xa,%rdx
   20e9c:	7d 0d                	jge    20eab <_ZN14rustc_demangle2v07Printer11print_const17hb4ae55c3854d33ecE+0x5fb>
   20e9e:	80 c2 30             	add    $0x30,%dl
   20ea1:	88 54 34 ff          	mov    %dl,-0x1(%rsp,%rsi,1)
   20ea5:	48 83 c6 ff          	add    $0xffffffffffffffff,%rsi
   20ea9:	eb 14                	jmp    20ebf <_ZN14rustc_demangle2v07Printer11print_const17hb4ae55c3854d33ecE+0x60f>
   20eab:	48 8d 05 b8 a7 01 00 	lea    0x1a7b8(%rip),%rax        # 3b66a <_ZN4core3str15UTF8_CHAR_WIDTH17h639c7c3d8ce7e983E+0x112>
   20eb2:	0f b7 04 50          	movzwl (%rax,%rdx,2),%eax
   20eb6:	66 89 44 34 fe       	mov    %ax,-0x2(%rsp,%rsi,1)
   20ebb:	48 83 c6 fe          	add    $0xfffffffffffffffe,%rsi
   20ebf:	4c 8d 04 34          	lea    (%rsp,%rsi,1),%r8
   20ec3:	41 b9 27 00 00 00    	mov    $0x27,%r9d
   20ec9:	49 29 f1             	sub    %rsi,%r9
   20ecc:	48 8d 15 65 c5 01 00 	lea    0x1c565(%rip),%rdx        # 3d438 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0xad8>
   20ed3:	be 01 00 00 00       	mov    $0x1,%esi
   20ed8:	31 c9                	xor    %ecx,%ecx
   20eda:	e8 11 67 fe ff       	callq  75f0 <_ZN4core3fmt9Formatter12pad_integral17hc55c32e78eb96054E>
   20edf:	40 b5 01             	mov    $0x1,%bpl
   20ee2:	84 c0                	test   %al,%al
   20ee4:	0f 84 e8 fc ff ff    	je     20bd2 <_ZN14rustc_demangle2v07Printer11print_const17hb4ae55c3854d33ecE+0x322>
   20eea:	e9 80 fd ff ff       	jmpq   20c6f <_ZN14rustc_demangle2v07Printer11print_const17hb4ae55c3854d33ecE+0x3bf>
   20eef:	48 8d 44 24 38       	lea    0x38(%rsp),%rax
   20ef4:	48 89 04 24          	mov    %rax,(%rsp)
   20ef8:	48 8d 44 24 28       	lea    0x28(%rsp),%rax
   20efd:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   20f02:	48 8d 44 24 30       	lea    0x30(%rsp),%rax
   20f07:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   20f0c:	48 89 e7             	mov    %rsp,%rdi
   20f0f:	e8 cc cd ff ff       	callq  1dce0 <_ZN4core3str6traits101_$LT$impl$u20$core..slice..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..Range$LT$usize$GT$$GT$5index28_$u7b$$u7b$closure$u7d$$u7d$17hd529a7a73bc70800E>
   20f14:	0f 0b                	ud2    
   20f16:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   20f1d:	00 00 00 

0000000000020f20 <_ZN14rustc_demangle2v07Printer30print_path_maybe_open_generics17hb552f14f4c07e397E>:
   20f20:	41 57                	push   %r15
   20f22:	41 56                	push   %r14
   20f24:	41 54                	push   %r12
   20f26:	53                   	push   %rbx
   20f27:	48 83 ec 28          	sub    $0x28,%rsp
   20f2b:	49 89 fe             	mov    %rdi,%r14
   20f2e:	48 8b 07             	mov    (%rdi),%rax
   20f31:	48 89 f9             	mov    %rdi,%rcx
   20f34:	48 85 c0             	test   %rax,%rax
   20f37:	48 0f 44 c8          	cmove  %rax,%rcx
   20f3b:	0f 84 9e 00 00 00    	je     20fdf <_ZN14rustc_demangle2v07Printer30print_path_maybe_open_generics17hb552f14f4c07e397E+0xbf>
   20f41:	48 8b 51 10          	mov    0x10(%rcx),%rdx
   20f45:	48 39 51 08          	cmp    %rdx,0x8(%rcx)
   20f49:	76 47                	jbe    20f92 <_ZN14rustc_demangle2v07Printer30print_path_maybe_open_generics17hb552f14f4c07e397E+0x72>
   20f4b:	48 8b 31             	mov    (%rcx),%rsi
   20f4e:	80 3c 16 42          	cmpb   $0x42,(%rsi,%rdx,1)
   20f52:	75 3e                	jne    20f92 <_ZN14rustc_demangle2v07Printer30print_path_maybe_open_generics17hb552f14f4c07e397E+0x72>
   20f54:	48 83 c2 01          	add    $0x1,%rdx
   20f58:	48 89 51 10          	mov    %rdx,0x10(%rcx)
   20f5c:	49 8b 36             	mov    (%r14),%rsi
   20f5f:	48 85 f6             	test   %rsi,%rsi
   20f62:	49 0f 45 f6          	cmovne %r14,%rsi
   20f66:	0f 84 81 01 00 00    	je     210ed <_ZN14rustc_demangle2v07Printer30print_path_maybe_open_generics17hb552f14f4c07e397E+0x1cd>
   20f6c:	4c 8b 4e 10          	mov    0x10(%rsi),%r9
   20f70:	4c 8b 1e             	mov    (%rsi),%r11
   20f73:	48 8b 4e 08          	mov    0x8(%rsi),%rcx
   20f77:	4c 39 c9             	cmp    %r9,%rcx
   20f7a:	76 7f                	jbe    20ffb <_ZN14rustc_demangle2v07Printer30print_path_maybe_open_generics17hb552f14f4c07e397E+0xdb>
   20f7c:	43 80 3c 0b 5f       	cmpb   $0x5f,(%r11,%r9,1)
   20f81:	75 78                	jne    20ffb <_ZN14rustc_demangle2v07Printer30print_path_maybe_open_generics17hb552f14f4c07e397E+0xdb>
   20f83:	49 8d 41 01          	lea    0x1(%r9),%rax
   20f87:	48 89 46 10          	mov    %rax,0x10(%rsi)
   20f8b:	31 c0                	xor    %eax,%eax
   20f8d:	e9 60 01 00 00       	jmpq   210f2 <_ZN14rustc_demangle2v07Printer30print_path_maybe_open_generics17hb552f14f4c07e397E+0x1d2>
   20f92:	49 8b 4e 10          	mov    0x10(%r14),%rcx
   20f96:	49 39 4e 08          	cmp    %rcx,0x8(%r14)
   20f9a:	76 43                	jbe    20fdf <_ZN14rustc_demangle2v07Printer30print_path_maybe_open_generics17hb552f14f4c07e397E+0xbf>
   20f9c:	80 3c 08 49          	cmpb   $0x49,(%rax,%rcx,1)
   20fa0:	75 3d                	jne    20fdf <_ZN14rustc_demangle2v07Printer30print_path_maybe_open_generics17hb552f14f4c07e397E+0xbf>
   20fa2:	48 83 c1 01          	add    $0x1,%rcx
   20fa6:	49 89 4e 10          	mov    %rcx,0x10(%r14)
   20faa:	4c 89 f7             	mov    %r14,%rdi
   20fad:	31 f6                	xor    %esi,%esi
   20faf:	e8 5c cd ff ff       	callq  1dd10 <_ZN14rustc_demangle2v07Printer10print_path17haa095a98ac60aefaE>
   20fb4:	84 c0                	test   %al,%al
   20fb6:	75 23                	jne    20fdb <_ZN14rustc_demangle2v07Printer30print_path_maybe_open_generics17hb552f14f4c07e397E+0xbb>
   20fb8:	49 8b 46 18          	mov    0x18(%r14),%rax
   20fbc:	48 8b 78 20          	mov    0x20(%rax),%rdi
   20fc0:	48 8b 40 28          	mov    0x28(%rax),%rax
   20fc4:	48 8d 35 b2 c1 01 00 	lea    0x1c1b2(%rip),%rsi        # 3d17d <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x81d>
   20fcb:	ba 01 00 00 00       	mov    $0x1,%edx
   20fd0:	ff 50 18             	callq  *0x18(%rax)
   20fd3:	84 c0                	test   %al,%al
   20fd5:	0f 84 94 00 00 00    	je     2106f <_ZN14rustc_demangle2v07Printer30print_path_maybe_open_generics17hb552f14f4c07e397E+0x14f>
   20fdb:	b3 02                	mov    $0x2,%bl
   20fdd:	eb 0e                	jmp    20fed <_ZN14rustc_demangle2v07Printer30print_path_maybe_open_generics17hb552f14f4c07e397E+0xcd>
   20fdf:	4c 89 f7             	mov    %r14,%rdi
   20fe2:	31 f6                	xor    %esi,%esi
   20fe4:	e8 27 cd ff ff       	callq  1dd10 <_ZN14rustc_demangle2v07Printer10print_path17haa095a98ac60aefaE>
   20fe9:	89 c3                	mov    %eax,%ebx
   20feb:	00 c3                	add    %al,%bl
   20fed:	89 d8                	mov    %ebx,%eax
   20fef:	48 83 c4 28          	add    $0x28,%rsp
   20ff3:	5b                   	pop    %rbx
   20ff4:	41 5c                	pop    %r12
   20ff6:	41 5e                	pop    %r14
   20ff8:	41 5f                	pop    %r15
   20ffa:	c3                   	retq   
   20ffb:	45 31 c0             	xor    %r8d,%r8d
   20ffe:	41 ba 3e 00 00 00    	mov    $0x3e,%r10d
   21004:	4c 89 cb             	mov    %r9,%rbx
   21007:	31 c0                	xor    %eax,%eax
   21009:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   21010:	48 39 d9             	cmp    %rbx,%rcx
   21013:	0f 86 d7 00 00 00    	jbe    210f0 <_ZN14rustc_demangle2v07Printer30print_path_maybe_open_generics17hb552f14f4c07e397E+0x1d0>
   21019:	41 0f b6 14 1b       	movzbl (%r11,%rbx,1),%edx
   2101e:	80 fa 5f             	cmp    $0x5f,%dl
   21021:	0f 84 b9 00 00 00    	je     210e0 <_ZN14rustc_demangle2v07Printer30print_path_maybe_open_generics17hb552f14f4c07e397E+0x1c0>
   21027:	8d 7a d0             	lea    -0x30(%rdx),%edi
   2102a:	40 80 ff 0a          	cmp    $0xa,%dil
   2102e:	72 20                	jb     21050 <_ZN14rustc_demangle2v07Printer30print_path_maybe_open_generics17hb552f14f4c07e397E+0x130>
   21030:	8d 7a 9f             	lea    -0x61(%rdx),%edi
   21033:	40 80 ff 1a          	cmp    $0x1a,%dil
   21037:	73 05                	jae    2103e <_ZN14rustc_demangle2v07Printer30print_path_maybe_open_generics17hb552f14f4c07e397E+0x11e>
   21039:	80 c2 a9             	add    $0xa9,%dl
   2103c:	eb 10                	jmp    2104e <_ZN14rustc_demangle2v07Printer30print_path_maybe_open_generics17hb552f14f4c07e397E+0x12e>
   2103e:	8d 7a bf             	lea    -0x41(%rdx),%edi
   21041:	40 80 ff 1a          	cmp    $0x1a,%dil
   21045:	0f 83 a5 00 00 00    	jae    210f0 <_ZN14rustc_demangle2v07Printer30print_path_maybe_open_generics17hb552f14f4c07e397E+0x1d0>
   2104b:	80 c2 e3             	add    $0xe3,%dl
   2104e:	89 d7                	mov    %edx,%edi
   21050:	48 83 c3 01          	add    $0x1,%rbx
   21054:	48 89 5e 10          	mov    %rbx,0x10(%rsi)
   21058:	49 f7 e2             	mul    %r10
   2105b:	0f 80 8f 00 00 00    	jo     210f0 <_ZN14rustc_demangle2v07Printer30print_path_maybe_open_generics17hb552f14f4c07e397E+0x1d0>
   21061:	40 0f b6 d7          	movzbl %dil,%edx
   21065:	48 01 d0             	add    %rdx,%rax
   21068:	73 a6                	jae    21010 <_ZN14rustc_demangle2v07Printer30print_path_maybe_open_generics17hb552f14f4c07e397E+0xf0>
   2106a:	e9 81 00 00 00       	jmpq   210f0 <_ZN14rustc_demangle2v07Printer30print_path_maybe_open_generics17hb552f14f4c07e397E+0x1d0>
   2106f:	49 8b 06             	mov    (%r14),%rax
   21072:	b3 01                	mov    $0x1,%bl
   21074:	48 85 c0             	test   %rax,%rax
   21077:	0f 84 70 ff ff ff    	je     20fed <_ZN14rustc_demangle2v07Printer30print_path_maybe_open_generics17hb552f14f4c07e397E+0xcd>
   2107d:	45 31 e4             	xor    %r12d,%r12d
   21080:	4c 8d 3d 5d c1 01 00 	lea    0x1c15d(%rip),%r15        # 3d1e4 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x884>
   21087:	49 8b 4e 10          	mov    0x10(%r14),%rcx
   2108b:	49 39 4e 08          	cmp    %rcx,0x8(%r14)
   2108f:	76 0a                	jbe    2109b <_ZN14rustc_demangle2v07Printer30print_path_maybe_open_generics17hb552f14f4c07e397E+0x17b>
   21091:	80 3c 08 45          	cmpb   $0x45,(%rax,%rcx,1)
   21095:	0f 84 93 00 00 00    	je     2112e <_ZN14rustc_demangle2v07Printer30print_path_maybe_open_generics17hb552f14f4c07e397E+0x20e>
   2109b:	4d 85 e4             	test   %r12,%r12
   2109e:	74 1f                	je     210bf <_ZN14rustc_demangle2v07Printer30print_path_maybe_open_generics17hb552f14f4c07e397E+0x19f>
   210a0:	49 8b 46 18          	mov    0x18(%r14),%rax
   210a4:	48 8b 78 20          	mov    0x20(%rax),%rdi
   210a8:	48 8b 40 28          	mov    0x28(%rax),%rax
   210ac:	ba 02 00 00 00       	mov    $0x2,%edx
   210b1:	4c 89 fe             	mov    %r15,%rsi
   210b4:	ff 50 18             	callq  *0x18(%rax)
   210b7:	84 c0                	test   %al,%al
   210b9:	0f 85 1c ff ff ff    	jne    20fdb <_ZN14rustc_demangle2v07Printer30print_path_maybe_open_generics17hb552f14f4c07e397E+0xbb>
   210bf:	4c 89 f7             	mov    %r14,%rdi
   210c2:	e8 d9 f4 ff ff       	callq  205a0 <_ZN14rustc_demangle2v07Printer17print_generic_arg17h2f9cff311bec59d9E>
   210c7:	84 c0                	test   %al,%al
   210c9:	0f 85 0c ff ff ff    	jne    20fdb <_ZN14rustc_demangle2v07Printer30print_path_maybe_open_generics17hb552f14f4c07e397E+0xbb>
   210cf:	49 8b 06             	mov    (%r14),%rax
   210d2:	49 83 c4 ff          	add    $0xffffffffffffffff,%r12
   210d6:	48 85 c0             	test   %rax,%rax
   210d9:	75 ac                	jne    21087 <_ZN14rustc_demangle2v07Printer30print_path_maybe_open_generics17hb552f14f4c07e397E+0x167>
   210db:	e9 0d ff ff ff       	jmpq   20fed <_ZN14rustc_demangle2v07Printer30print_path_maybe_open_generics17hb552f14f4c07e397E+0xcd>
   210e0:	48 83 c3 01          	add    $0x1,%rbx
   210e4:	48 89 5e 10          	mov    %rbx,0x10(%rsi)
   210e8:	48 ff c0             	inc    %rax
   210eb:	75 05                	jne    210f2 <_ZN14rustc_demangle2v07Printer30print_path_maybe_open_generics17hb552f14f4c07e397E+0x1d2>
   210ed:	45 31 c0             	xor    %r8d,%r8d
   210f0:	eb 0e                	jmp    21100 <_ZN14rustc_demangle2v07Printer30print_path_maybe_open_generics17hb552f14f4c07e397E+0x1e0>
   210f2:	49 83 c1 ff          	add    $0xffffffffffffffff,%r9
   210f6:	45 31 c0             	xor    %r8d,%r8d
   210f9:	4c 39 c8             	cmp    %r9,%rax
   210fc:	4d 0f 42 c3          	cmovb  %r11,%r8
   21100:	49 8b 56 18          	mov    0x18(%r14),%rdx
   21104:	41 8b 76 20          	mov    0x20(%r14),%esi
   21108:	4c 89 04 24          	mov    %r8,(%rsp)
   2110c:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
   21111:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   21116:	48 89 54 24 18       	mov    %rdx,0x18(%rsp)
   2111b:	89 74 24 20          	mov    %esi,0x20(%rsp)
   2111f:	48 89 e7             	mov    %rsp,%rdi
   21122:	e8 f9 fd ff ff       	callq  20f20 <_ZN14rustc_demangle2v07Printer30print_path_maybe_open_generics17hb552f14f4c07e397E>
   21127:	89 c3                	mov    %eax,%ebx
   21129:	e9 bf fe ff ff       	jmpq   20fed <_ZN14rustc_demangle2v07Printer30print_path_maybe_open_generics17hb552f14f4c07e397E+0xcd>
   2112e:	48 83 c1 01          	add    $0x1,%rcx
   21132:	49 89 4e 10          	mov    %rcx,0x10(%r14)
   21136:	e9 b2 fe ff ff       	jmpq   20fed <_ZN14rustc_demangle2v07Printer30print_path_maybe_open_generics17hb552f14f4c07e397E+0xcd>
   2113b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000021140 <_ZN84_$LT$core..str..Split$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hf5473c068d5f22a4E>:
   21140:	55                   	push   %rbp
   21141:	41 57                	push   %r15
   21143:	41 56                	push   %r14
   21145:	41 55                	push   %r13
   21147:	41 54                	push   %r12
   21149:	53                   	push   %rbx
   2114a:	48 83 ec 38          	sub    $0x38,%rsp
   2114e:	80 7f 41 00          	cmpb   $0x0,0x41(%rdi)
   21152:	74 08                	je     2115c <_ZN84_$LT$core..str..Split$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hf5473c068d5f22a4E+0x1c>
   21154:	45 31 d2             	xor    %r10d,%r10d
   21157:	e9 23 04 00 00       	jmpq   2157f <_ZN84_$LT$core..str..Split$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hf5473c068d5f22a4E+0x43f>
   2115c:	49 89 f8             	mov    %rdi,%r8
   2115f:	4c 8b 57 10          	mov    0x10(%rdi),%r10
   21163:	4c 8b 77 20          	mov    0x20(%rdi),%r14
   21167:	4c 8b 5f 28          	mov    0x28(%rdi),%r11
   2116b:	4c 89 de             	mov    %r11,%rsi
   2116e:	4c 29 f6             	sub    %r14,%rsi
   21171:	0f 82 dd 03 00 00    	jb     21554 <_ZN84_$LT$core..str..Split$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hf5473c068d5f22a4E+0x414>
   21177:	4d 8b 68 18          	mov    0x18(%r8),%r13
   2117b:	4d 39 dd             	cmp    %r11,%r13
   2117e:	0f 82 d0 03 00 00    	jb     21554 <_ZN84_$LT$core..str..Split$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hf5473c068d5f22a4E+0x414>
   21184:	49 8b 50 30          	mov    0x30(%r8),%rdx
   21188:	4b 8d 0c 32          	lea    (%r10,%r14,1),%rcx
   2118c:	4c 89 44 24 08       	mov    %r8,0x8(%rsp)
   21191:	46 0f b6 4c 02 3b    	movzbl 0x3b(%rdx,%r8,1),%r9d
   21197:	89 c8                	mov    %ecx,%eax
   21199:	83 e0 07             	and    $0x7,%eax
   2119c:	31 ff                	xor    %edi,%edi
   2119e:	48 85 c0             	test   %rax,%rax
   211a1:	74 65                	je     21208 <_ZN84_$LT$core..str..Split$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hf5473c068d5f22a4E+0xc8>
   211a3:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   211a9:	49 29 c0             	sub    %rax,%r8
   211ac:	74 5a                	je     21208 <_ZN84_$LT$core..str..Split$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hf5473c068d5f22a4E+0xc8>
   211ae:	49 39 f0             	cmp    %rsi,%r8
   211b1:	4c 0f 47 c6          	cmova  %rsi,%r8
   211b5:	4c 89 c0             	mov    %r8,%rax
   211b8:	48 f7 d8             	neg    %rax
   211bb:	48 c7 c7 ff ff ff ff 	mov    $0xffffffffffffffff,%rdi
   211c2:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   211c9:	00 00 00 
   211cc:	0f 1f 40 00          	nopl   0x0(%rax)
   211d0:	48 8d 2c 38          	lea    (%rax,%rdi,1),%rbp
   211d4:	48 83 fd ff          	cmp    $0xffffffffffffffff,%rbp
   211d8:	74 2b                	je     21205 <_ZN84_$LT$core..str..Split$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hf5473c068d5f22a4E+0xc5>
   211da:	0f b6 5c 39 01       	movzbl 0x1(%rcx,%rdi,1),%ebx
   211df:	48 83 c7 01          	add    $0x1,%rdi
   211e3:	44 38 cb             	cmp    %r9b,%bl
   211e6:	75 e8                	jne    211d0 <_ZN84_$LT$core..str..Split$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hf5473c068d5f22a4E+0x90>
   211e8:	44 38 cb             	cmp    %r9b,%bl
   211eb:	0f 94 c0             	sete   %al
   211ee:	04 01                	add    $0x1,%al
   211f0:	44 0f b6 f8          	movzbl %al,%r15d
   211f4:	41 83 e7 01          	and    $0x1,%r15d
   211f8:	49 01 ff             	add    %rdi,%r15
   211fb:	4c 8b 44 24 08       	mov    0x8(%rsp),%r8
   21200:	e9 db 00 00 00       	jmpq   212e0 <_ZN84_$LT$core..str..Split$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hf5473c068d5f22a4E+0x1a0>
   21205:	4c 89 c7             	mov    %r8,%rdi
   21208:	48 83 fe 10          	cmp    $0x10,%rsi
   2120c:	0f 82 7e 00 00 00    	jb     21290 <_ZN84_$LT$core..str..Split$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hf5473c068d5f22a4E+0x150>
   21212:	48 8d 5e f0          	lea    -0x10(%rsi),%rbx
   21216:	48 39 df             	cmp    %rbx,%rdi
   21219:	4c 8b 44 24 08       	mov    0x8(%rsp),%r8
   2121e:	77 75                	ja     21295 <_ZN84_$LT$core..str..Split$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hf5473c068d5f22a4E+0x155>
   21220:	4c 89 c8             	mov    %r9,%rax
   21223:	48 bd 01 01 01 01 01 	movabs $0x101010101010101,%rbp
   2122a:	01 01 01 
   2122d:	48 0f af c5          	imul   %rbp,%rax
   21231:	66 48 0f 6e c0       	movq   %rax,%xmm0
   21236:	66 0f 70 c0 44       	pshufd $0x44,%xmm0,%xmm0
   2123b:	66 0f 6f 0d 4d 91 01 	movdqa 0x1914d(%rip),%xmm1        # 3a390 <_fini+0x4c>
   21242:	00 
   21243:	66 0f 6f 15 55 91 01 	movdqa 0x19155(%rip),%xmm2        # 3a3a0 <_fini+0x5c>
   2124a:	00 
   2124b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   21250:	f3 0f 6f 1c 39       	movdqu (%rcx,%rdi,1),%xmm3
   21255:	66 0f ef d8          	pxor   %xmm0,%xmm3
   21259:	66 0f 6f e3          	movdqa %xmm3,%xmm4
   2125d:	66 0f d4 e1          	paddq  %xmm1,%xmm4
   21261:	66 0f df dc          	pandn  %xmm4,%xmm3
   21265:	66 0f db da          	pand   %xmm2,%xmm3
   21269:	66 48 0f 7e d8       	movq   %xmm3,%rax
   2126e:	66 0f 70 db 4e       	pshufd $0x4e,%xmm3,%xmm3
   21273:	66 48 0f 7e dd       	movq   %xmm3,%rbp
   21278:	48 09 c5             	or     %rax,%rbp
   2127b:	75 09                	jne    21286 <_ZN84_$LT$core..str..Split$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hf5473c068d5f22a4E+0x146>
   2127d:	48 83 c7 10          	add    $0x10,%rdi
   21281:	48 39 df             	cmp    %rbx,%rdi
   21284:	76 ca                	jbe    21250 <_ZN84_$LT$core..str..Split$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hf5473c068d5f22a4E+0x110>
   21286:	48 39 f7             	cmp    %rsi,%rdi
   21289:	76 0a                	jbe    21295 <_ZN84_$LT$core..str..Split$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hf5473c068d5f22a4E+0x155>
   2128b:	e9 21 03 00 00       	jmpq   215b1 <_ZN84_$LT$core..str..Split$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hf5473c068d5f22a4E+0x471>
   21290:	4c 8b 44 24 08       	mov    0x8(%rsp),%r8
   21295:	4a 8d 04 37          	lea    (%rdi,%r14,1),%rax
   21299:	49 8d 2c 02          	lea    (%r10,%rax,1),%rbp
   2129d:	4c 89 de             	mov    %r11,%rsi
   212a0:	48 29 c6             	sub    %rax,%rsi
   212a3:	31 c9                	xor    %ecx,%ecx
   212a5:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   212ac:	00 00 00 
   212af:	90                   	nop
   212b0:	48 39 ce             	cmp    %rcx,%rsi
   212b3:	0f 84 97 02 00 00    	je     21550 <_ZN84_$LT$core..str..Split$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hf5473c068d5f22a4E+0x410>
   212b9:	0f b6 5c 0d 00       	movzbl 0x0(%rbp,%rcx,1),%ebx
   212be:	48 83 c1 01          	add    $0x1,%rcx
   212c2:	44 38 cb             	cmp    %r9b,%bl
   212c5:	75 e9                	jne    212b0 <_ZN84_$LT$core..str..Split$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hf5473c068d5f22a4E+0x170>
   212c7:	44 38 cb             	cmp    %r9b,%bl
   212ca:	0f 94 c0             	sete   %al
   212cd:	04 01                	add    $0x1,%al
   212cf:	0f b6 c0             	movzbl %al,%eax
   212d2:	83 e0 01             	and    $0x1,%eax
   212d5:	48 01 c7             	add    %rax,%rdi
   212d8:	4c 8d 3c 39          	lea    (%rcx,%rdi,1),%r15
   212dc:	49 83 c7 ff          	add    $0xffffffffffffffff,%r15
   212e0:	49 8d 40 3c          	lea    0x3c(%r8),%rax
   212e4:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   212e9:	49 8d 42 01          	lea    0x1(%r10),%rax
   212ed:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   212f2:	49 8d 43 ff          	lea    -0x1(%r11),%rax
   212f6:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   212fb:	66 0f 6f 1d 8d 90 01 	movdqa 0x1908d(%rip),%xmm3        # 3a390 <_fini+0x4c>
   21302:	00 
   21303:	66 0f 6f 25 95 90 01 	movdqa 0x19095(%rip),%xmm4        # 3a3a0 <_fini+0x5c>
   2130a:	00 
   2130b:	48 89 54 24 20       	mov    %rdx,0x20(%rsp)
   21310:	eb 1f                	jmp    21331 <_ZN84_$LT$core..str..Split$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hf5473c068d5f22a4E+0x1f1>
   21312:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   21319:	00 00 00 
   2131c:	0f 1f 40 00          	nopl   0x0(%rax)
   21320:	31 c0                	xor    %eax,%eax
   21322:	49 01 ff             	add    %rdi,%r15
   21325:	4d 89 e6             	mov    %r12,%r14
   21328:	48 85 c0             	test   %rax,%rax
   2132b:	0f 84 1f 02 00 00    	je     21550 <_ZN84_$LT$core..str..Split$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hf5473c068d5f22a4E+0x410>
   21331:	4f 8d 24 37          	lea    (%r15,%r14,1),%r12
   21335:	49 83 c4 01          	add    $0x1,%r12
   21339:	4d 89 60 20          	mov    %r12,0x20(%r8)
   2133d:	4c 89 e3             	mov    %r12,%rbx
   21340:	48 29 d3             	sub    %rdx,%rbx
   21343:	72 67                	jb     213ac <_ZN84_$LT$core..str..Split$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hf5473c068d5f22a4E+0x26c>
   21345:	4d 39 e5             	cmp    %r12,%r13
   21348:	72 62                	jb     213ac <_ZN84_$LT$core..str..Split$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hf5473c068d5f22a4E+0x26c>
   2134a:	48 83 fa 05          	cmp    $0x5,%rdx
   2134e:	0f 83 4e 02 00 00    	jae    215a2 <_ZN84_$LT$core..str..Split$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hf5473c068d5f22a4E+0x462>
   21354:	49 8d 3c 1a          	lea    (%r10,%rbx,1),%rdi
   21358:	48 3b 7c 24 18       	cmp    0x18(%rsp),%rdi
   2135d:	0f 84 31 02 00 00    	je     21594 <_ZN84_$LT$core..str..Split$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hf5473c068d5f22a4E+0x454>
   21363:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
   21368:	4c 89 d5             	mov    %r10,%rbp
   2136b:	4c 89 74 24 28       	mov    %r14,0x28(%rsp)
   21370:	4d 89 ee             	mov    %r13,%r14
   21373:	4d 89 dd             	mov    %r11,%r13
   21376:	ff 15 9c 6b 22 00    	callq  *0x226b9c(%rip)        # 247f18 <bcmp@GLIBC_2.2.5>
   2137c:	66 0f 6f 25 1c 90 01 	movdqa 0x1901c(%rip),%xmm4        # 3a3a0 <_fini+0x5c>
   21383:	00 
   21384:	66 0f 6f 1d 04 90 01 	movdqa 0x19004(%rip),%xmm3        # 3a390 <_fini+0x4c>
   2138b:	00 
   2138c:	4c 8b 44 24 08       	mov    0x8(%rsp),%r8
   21391:	4d 89 eb             	mov    %r13,%r11
   21394:	4d 89 f5             	mov    %r14,%r13
   21397:	4c 8b 74 24 28       	mov    0x28(%rsp),%r14
   2139c:	48 8b 54 24 20       	mov    0x20(%rsp),%rdx
   213a1:	49 89 ea             	mov    %rbp,%r10
   213a4:	85 c0                	test   %eax,%eax
   213a6:	0f 84 e8 01 00 00    	je     21594 <_ZN84_$LT$core..str..Split$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hf5473c068d5f22a4E+0x454>
   213ac:	4c 89 de             	mov    %r11,%rsi
   213af:	4c 29 e6             	sub    %r12,%rsi
   213b2:	0f 82 9c 01 00 00    	jb     21554 <_ZN84_$LT$core..str..Split$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hf5473c068d5f22a4E+0x414>
   213b8:	4d 39 dd             	cmp    %r11,%r13
   213bb:	0f 82 93 01 00 00    	jb     21554 <_ZN84_$LT$core..str..Split$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hf5473c068d5f22a4E+0x414>
   213c1:	4b 8d 0c 22          	lea    (%r10,%r12,1),%rcx
   213c5:	45 0f b6 4c 10 3b    	movzbl 0x3b(%r8,%rdx,1),%r9d
   213cb:	83 e1 07             	and    $0x7,%ecx
   213ce:	48 85 c9             	test   %rcx,%rcx
   213d1:	0f 84 09 01 00 00    	je     214e0 <_ZN84_$LT$core..str..Split$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hf5473c068d5f22a4E+0x3a0>
   213d7:	b8 08 00 00 00       	mov    $0x8,%eax
   213dc:	bf 00 00 00 00       	mov    $0x0,%edi
   213e1:	48 29 c8             	sub    %rcx,%rax
   213e4:	74 7d                	je     21463 <_ZN84_$LT$core..str..Split$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hf5473c068d5f22a4E+0x323>
   213e6:	48 39 f0             	cmp    %rsi,%rax
   213e9:	48 0f 47 c6          	cmova  %rsi,%rax
   213ed:	4b 8d 3c 37          	lea    (%r15,%r14,1),%rdi
   213f1:	48 03 7c 24 10       	add    0x10(%rsp),%rdi
   213f6:	48 89 c1             	mov    %rax,%rcx
   213f9:	48 f7 d9             	neg    %rcx
   213fc:	48 c7 c5 ff ff ff ff 	mov    $0xffffffffffffffff,%rbp
   21403:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2140a:	00 00 00 
   2140d:	0f 1f 00             	nopl   (%rax)
   21410:	48 8d 1c 29          	lea    (%rcx,%rbp,1),%rbx
   21414:	48 83 fb ff          	cmp    $0xffffffffffffffff,%rbx
   21418:	74 46                	je     21460 <_ZN84_$LT$core..str..Split$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hf5473c068d5f22a4E+0x320>
   2141a:	0f b6 5c 2f 01       	movzbl 0x1(%rdi,%rbp,1),%ebx
   2141f:	48 83 c5 01          	add    $0x1,%rbp
   21423:	44 38 cb             	cmp    %r9b,%bl
   21426:	75 e8                	jne    21410 <_ZN84_$LT$core..str..Split$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hf5473c068d5f22a4E+0x2d0>
   21428:	44 38 cb             	cmp    %r9b,%bl
   2142b:	0f 94 c0             	sete   %al
   2142e:	04 01                	add    $0x1,%al
   21430:	44 0f b6 f8          	movzbl %al,%r15d
   21434:	41 83 e7 01          	and    $0x1,%r15d
   21438:	49 01 ef             	add    %rbp,%r15
   2143b:	b8 01 00 00 00       	mov    $0x1,%eax
   21440:	4d 89 e6             	mov    %r12,%r14
   21443:	48 85 c0             	test   %rax,%rax
   21446:	0f 85 e5 fe ff ff    	jne    21331 <_ZN84_$LT$core..str..Split$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hf5473c068d5f22a4E+0x1f1>
   2144c:	e9 ff 00 00 00       	jmpq   21550 <_ZN84_$LT$core..str..Split$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hf5473c068d5f22a4E+0x410>
   21451:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   21458:	00 00 00 
   2145b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   21460:	48 89 c7             	mov    %rax,%rdi
   21463:	48 83 fe 10          	cmp    $0x10,%rsi
   21467:	0f 82 83 00 00 00    	jb     214f0 <_ZN84_$LT$core..str..Split$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hf5473c068d5f22a4E+0x3b0>
   2146d:	48 8d 4e f0          	lea    -0x10(%rsi),%rcx
   21471:	48 39 cf             	cmp    %rcx,%rdi
   21474:	77 7a                	ja     214f0 <_ZN84_$LT$core..str..Split$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hf5473c068d5f22a4E+0x3b0>
   21476:	4c 89 c8             	mov    %r9,%rax
   21479:	48 bb 01 01 01 01 01 	movabs $0x101010101010101,%rbx
   21480:	01 01 01 
   21483:	48 0f af c3          	imul   %rbx,%rax
   21487:	66 48 0f 6e c0       	movq   %rax,%xmm0
   2148c:	66 0f 70 c0 44       	pshufd $0x44,%xmm0,%xmm0
   21491:	4b 8d 04 37          	lea    (%r15,%r14,1),%rax
   21495:	48 03 44 24 10       	add    0x10(%rsp),%rax
   2149a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   214a0:	f3 0f 6f 0c 38       	movdqu (%rax,%rdi,1),%xmm1
   214a5:	66 0f ef c8          	pxor   %xmm0,%xmm1
   214a9:	66 0f 6f d1          	movdqa %xmm1,%xmm2
   214ad:	66 0f d4 d3          	paddq  %xmm3,%xmm2
   214b1:	66 0f df ca          	pandn  %xmm2,%xmm1
   214b5:	66 0f db cc          	pand   %xmm4,%xmm1
   214b9:	66 48 0f 7e cd       	movq   %xmm1,%rbp
   214be:	66 0f 70 c9 4e       	pshufd $0x4e,%xmm1,%xmm1
   214c3:	66 48 0f 7e cb       	movq   %xmm1,%rbx
   214c8:	48 09 eb             	or     %rbp,%rbx
   214cb:	75 09                	jne    214d6 <_ZN84_$LT$core..str..Split$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hf5473c068d5f22a4E+0x396>
   214cd:	48 83 c7 10          	add    $0x10,%rdi
   214d1:	48 39 cf             	cmp    %rcx,%rdi
   214d4:	76 ca                	jbe    214a0 <_ZN84_$LT$core..str..Split$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hf5473c068d5f22a4E+0x360>
   214d6:	48 39 f7             	cmp    %rsi,%rdi
   214d9:	76 15                	jbe    214f0 <_ZN84_$LT$core..str..Split$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hf5473c068d5f22a4E+0x3b0>
   214db:	e9 d1 00 00 00       	jmpq   215b1 <_ZN84_$LT$core..str..Split$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hf5473c068d5f22a4E+0x471>
   214e0:	31 ff                	xor    %edi,%edi
   214e2:	48 83 fe 10          	cmp    $0x10,%rsi
   214e6:	73 85                	jae    2146d <_ZN84_$LT$core..str..Split$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hf5473c068d5f22a4E+0x32d>
   214e8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   214ef:	00 
   214f0:	49 01 ff             	add    %rdi,%r15
   214f3:	4d 01 f7             	add    %r14,%r15
   214f6:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   214fb:	4a 8d 0c 38          	lea    (%rax,%r15,1),%rcx
   214ff:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
   21504:	4c 29 f8             	sub    %r15,%rax
   21507:	45 31 ff             	xor    %r15d,%r15d
   2150a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   21510:	4c 39 f8             	cmp    %r15,%rax
   21513:	0f 84 07 fe ff ff    	je     21320 <_ZN84_$LT$core..str..Split$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hf5473c068d5f22a4E+0x1e0>
   21519:	42 0f b6 1c 39       	movzbl (%rcx,%r15,1),%ebx
   2151e:	49 83 c7 01          	add    $0x1,%r15
   21522:	44 38 cb             	cmp    %r9b,%bl
   21525:	75 e9                	jne    21510 <_ZN84_$LT$core..str..Split$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hf5473c068d5f22a4E+0x3d0>
   21527:	44 38 cb             	cmp    %r9b,%bl
   2152a:	0f 94 c0             	sete   %al
   2152d:	04 01                	add    $0x1,%al
   2152f:	0f b6 c0             	movzbl %al,%eax
   21532:	83 e0 01             	and    $0x1,%eax
   21535:	49 01 c7             	add    %rax,%r15
   21538:	49 83 c7 ff          	add    $0xffffffffffffffff,%r15
   2153c:	b8 01 00 00 00       	mov    $0x1,%eax
   21541:	49 01 ff             	add    %rdi,%r15
   21544:	4d 89 e6             	mov    %r12,%r14
   21547:	48 85 c0             	test   %rax,%rax
   2154a:	0f 85 e1 fd ff ff    	jne    21331 <_ZN84_$LT$core..str..Split$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hf5473c068d5f22a4E+0x1f1>
   21550:	4d 89 58 20          	mov    %r11,0x20(%r8)
   21554:	41 80 78 40 00       	cmpb   $0x0,0x40(%r8)
   21559:	74 09                	je     21564 <_ZN84_$LT$core..str..Split$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hf5473c068d5f22a4E+0x424>
   2155b:	49 8b 00             	mov    (%r8),%rax
   2155e:	49 8b 58 08          	mov    0x8(%r8),%rbx
   21562:	eb 10                	jmp    21574 <_ZN84_$LT$core..str..Split$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hf5473c068d5f22a4E+0x434>
   21564:	49 8b 00             	mov    (%r8),%rax
   21567:	49 8b 58 08          	mov    0x8(%r8),%rbx
   2156b:	48 39 c3             	cmp    %rax,%rbx
   2156e:	0f 84 e0 fb ff ff    	je     21154 <_ZN84_$LT$core..str..Split$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hf5473c068d5f22a4E+0x14>
   21574:	41 c6 40 41 01       	movb   $0x1,0x41(%r8)
   21579:	49 01 c2             	add    %rax,%r10
   2157c:	48 29 c3             	sub    %rax,%rbx
   2157f:	4c 89 d0             	mov    %r10,%rax
   21582:	48 89 da             	mov    %rbx,%rdx
   21585:	48 83 c4 38          	add    $0x38,%rsp
   21589:	5b                   	pop    %rbx
   2158a:	41 5c                	pop    %r12
   2158c:	41 5d                	pop    %r13
   2158e:	41 5e                	pop    %r14
   21590:	41 5f                	pop    %r15
   21592:	5d                   	pop    %rbp
   21593:	c3                   	retq   
   21594:	49 8b 00             	mov    (%r8),%rax
   21597:	49 01 c2             	add    %rax,%r10
   2159a:	48 29 c3             	sub    %rax,%rbx
   2159d:	4d 89 20             	mov    %r12,(%r8)
   215a0:	eb dd                	jmp    2157f <_ZN84_$LT$core..str..Split$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hf5473c068d5f22a4E+0x43f>
   215a2:	be 04 00 00 00       	mov    $0x4,%esi
   215a7:	48 89 d7             	mov    %rdx,%rdi
   215aa:	e8 21 66 fe ff       	callq  7bd0 <_ZN4core5slice20slice_index_len_fail17h52736412c1ce1871E>
   215af:	0f 0b                	ud2    
   215b1:	e8 9a 66 fe ff       	callq  7c50 <_ZN4core5slice22slice_index_order_fail17h7bcf2f94ba9e06deE>
   215b6:	0f 0b                	ud2    
   215b8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   215bf:	00 

00000000000215c0 <_ZN14rustc_demangle2v06Parser9skip_type17hcade47368bc53de5E>:
   215c0:	41 57                	push   %r15
   215c2:	41 56                	push   %r14
   215c4:	53                   	push   %rbx
   215c5:	48 83 ec 20          	sub    $0x20,%rsp
   215c9:	48 89 fb             	mov    %rdi,%rbx
   215cc:	4c 8b 4f 08          	mov    0x8(%rdi),%r9
   215d0:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
   215d4:	49 39 f9             	cmp    %rdi,%r9
   215d7:	0f 86 3a 05 00 00    	jbe    21b17 <_ZN14rustc_demangle2v06Parser9skip_type17hcade47368bc53de5E+0x557>
   215dd:	4c 8b 03             	mov    (%rbx),%r8
   215e0:	41 8a 0c 38          	mov    (%r8,%rdi,1),%cl
   215e4:	48 8d 77 01          	lea    0x1(%rdi),%rsi
   215e8:	48 89 73 10          	mov    %rsi,0x10(%rbx)
   215ec:	80 c1 bf             	add    $0xbf,%cl
   215ef:	80 f9 39             	cmp    $0x39,%cl
   215f2:	0f 87 d3 00 00 00    	ja     216cb <_ZN14rustc_demangle2v06Parser9skip_type17hcade47368bc53de5E+0x10b>
   215f8:	4c 8d 7b 10          	lea    0x10(%rbx),%r15
   215fc:	31 c0                	xor    %eax,%eax
   215fe:	0f b6 c9             	movzbl %cl,%ecx
   21601:	48 8d 15 28 94 01 00 	lea    0x19428(%rip),%rdx        # 3aa30 <_ZN4core7unicode12unicode_data2cc19BITSET_INDEX_CHUNKS17h8a1f39cd536e9344E+0x570>
   21608:	48 63 0c 8a          	movslq (%rdx,%rcx,4),%rcx
   2160c:	48 01 d1             	add    %rdx,%rcx
   2160f:	ff e1                	jmpq   *%rcx
   21611:	49 39 f1             	cmp    %rsi,%r9
   21614:	0f 86 31 04 00 00    	jbe    21a4b <_ZN14rustc_demangle2v06Parser9skip_type17hcade47368bc53de5E+0x48b>
   2161a:	41 80 3c 30 4c       	cmpb   $0x4c,(%r8,%rsi,1)
   2161f:	0f 85 26 04 00 00    	jne    21a4b <_ZN14rustc_demangle2v06Parser9skip_type17hcade47368bc53de5E+0x48b>
   21625:	48 8d 77 02          	lea    0x2(%rdi),%rsi
   21629:	49 89 37             	mov    %rsi,(%r15)
   2162c:	49 39 f1             	cmp    %rsi,%r9
   2162f:	0f 86 95 01 00 00    	jbe    217ca <_ZN14rustc_demangle2v06Parser9skip_type17hcade47368bc53de5E+0x20a>
   21635:	41 80 3c 30 5f       	cmpb   $0x5f,(%r8,%rsi,1)
   2163a:	0f 85 8a 01 00 00    	jne    217ca <_ZN14rustc_demangle2v06Parser9skip_type17hcade47368bc53de5E+0x20a>
   21640:	48 83 c7 03          	add    $0x3,%rdi
   21644:	49 89 3f             	mov    %rdi,(%r15)
   21647:	e9 ff 03 00 00       	jmpq   21a4b <_ZN14rustc_demangle2v06Parser9skip_type17hcade47368bc53de5E+0x48b>
   2164c:	0f 1f 40 00          	nopl   0x0(%rax)
   21650:	48 89 df             	mov    %rbx,%rdi
   21653:	e8 68 ff ff ff       	callq  215c0 <_ZN14rustc_demangle2v06Parser9skip_type17hcade47368bc53de5E>
   21658:	84 c0                	test   %al,%al
   2165a:	0f 85 b7 04 00 00    	jne    21b17 <_ZN14rustc_demangle2v06Parser9skip_type17hcade47368bc53de5E+0x557>
   21660:	4c 8b 4b 08          	mov    0x8(%rbx),%r9
   21664:	48 8b 73 10          	mov    0x10(%rbx),%rsi
   21668:	49 39 f1             	cmp    %rsi,%r9
   2166b:	76 e3                	jbe    21650 <_ZN14rustc_demangle2v06Parser9skip_type17hcade47368bc53de5E+0x90>
   2166d:	48 8b 03             	mov    (%rbx),%rax
   21670:	80 3c 30 45          	cmpb   $0x45,(%rax,%rsi,1)
   21674:	75 da                	jne    21650 <_ZN14rustc_demangle2v06Parser9skip_type17hcade47368bc53de5E+0x90>
   21676:	48 83 c6 01          	add    $0x1,%rsi
   2167a:	49 89 37             	mov    %rsi,(%r15)
   2167d:	31 c0                	xor    %eax,%eax
   2167f:	e9 95 04 00 00       	jmpq   21b19 <_ZN14rustc_demangle2v06Parser9skip_type17hcade47368bc53de5E+0x559>
   21684:	48 89 df             	mov    %rbx,%rdi
   21687:	e8 34 ff ff ff       	callq  215c0 <_ZN14rustc_demangle2v06Parser9skip_type17hcade47368bc53de5E>
   2168c:	89 c1                	mov    %eax,%ecx
   2168e:	b0 01                	mov    $0x1,%al
   21690:	84 c9                	test   %cl,%cl
   21692:	0f 85 81 04 00 00    	jne    21b19 <_ZN14rustc_demangle2v06Parser9skip_type17hcade47368bc53de5E+0x559>
   21698:	48 89 df             	mov    %rbx,%rdi
   2169b:	48 83 c4 20          	add    $0x20,%rsp
   2169f:	5b                   	pop    %rbx
   216a0:	41 5e                	pop    %r14
   216a2:	41 5f                	pop    %r15
   216a4:	e9 87 04 00 00       	jmpq   21b30 <_ZN14rustc_demangle2v06Parser10skip_const17hb429e6fe7c0d0accE>
   216a9:	49 39 f1             	cmp    %rsi,%r9
   216ac:	0f 86 b3 00 00 00    	jbe    21765 <_ZN14rustc_demangle2v06Parser9skip_type17hcade47368bc53de5E+0x1a5>
   216b2:	41 80 3c 30 5f       	cmpb   $0x5f,(%r8,%rsi,1)
   216b7:	0f 85 a8 00 00 00    	jne    21765 <_ZN14rustc_demangle2v06Parser9skip_type17hcade47368bc53de5E+0x1a5>
   216bd:	48 8d 47 02          	lea    0x2(%rdi),%rax
   216c1:	49 89 07             	mov    %rax,(%r15)
   216c4:	31 c9                	xor    %ecx,%ecx
   216c6:	e9 42 02 00 00       	jmpq   2190d <_ZN14rustc_demangle2v06Parser9skip_type17hcade47368bc53de5E+0x34d>
   216cb:	48 89 7b 10          	mov    %rdi,0x10(%rbx)
   216cf:	48 89 df             	mov    %rbx,%rdi
   216d2:	48 83 c4 20          	add    $0x20,%rsp
   216d6:	5b                   	pop    %rbx
   216d7:	41 5e                	pop    %r14
   216d9:	41 5f                	pop    %r15
   216db:	e9 f0 d7 ff ff       	jmpq   1eed0 <_ZN14rustc_demangle2v06Parser9skip_path17h92f436ed624d331fE>
   216e0:	49 39 f1             	cmp    %rsi,%r9
   216e3:	0f 86 61 02 00 00    	jbe    2194a <_ZN14rustc_demangle2v06Parser9skip_type17hcade47368bc53de5E+0x38a>
   216e9:	41 80 3c 30 47       	cmpb   $0x47,(%r8,%rsi,1)
   216ee:	0f 85 56 02 00 00    	jne    2194a <_ZN14rustc_demangle2v06Parser9skip_type17hcade47368bc53de5E+0x38a>
   216f4:	48 8d 77 02          	lea    0x2(%rdi),%rsi
   216f8:	49 89 37             	mov    %rsi,(%r15)
   216fb:	49 39 f1             	cmp    %rsi,%r9
   216fe:	0f 86 2d 01 00 00    	jbe    21831 <_ZN14rustc_demangle2v06Parser9skip_type17hcade47368bc53de5E+0x271>
   21704:	41 80 3c 30 5f       	cmpb   $0x5f,(%r8,%rsi,1)
   21709:	0f 85 22 01 00 00    	jne    21831 <_ZN14rustc_demangle2v06Parser9skip_type17hcade47368bc53de5E+0x271>
   2170f:	48 83 c7 03          	add    $0x3,%rdi
   21713:	49 89 3f             	mov    %rdi,(%r15)
   21716:	48 89 fe             	mov    %rdi,%rsi
   21719:	e9 2c 02 00 00       	jmpq   2194a <_ZN14rustc_demangle2v06Parser9skip_type17hcade47368bc53de5E+0x38a>
   2171e:	49 39 f1             	cmp    %rsi,%r9
   21721:	0f 86 a8 02 00 00    	jbe    219cf <_ZN14rustc_demangle2v06Parser9skip_type17hcade47368bc53de5E+0x40f>
   21727:	41 80 3c 30 47       	cmpb   $0x47,(%r8,%rsi,1)
   2172c:	0f 85 9d 02 00 00    	jne    219cf <_ZN14rustc_demangle2v06Parser9skip_type17hcade47368bc53de5E+0x40f>
   21732:	48 8d 77 02          	lea    0x2(%rdi),%rsi
   21736:	49 89 37             	mov    %rsi,(%r15)
   21739:	49 39 f1             	cmp    %rsi,%r9
   2173c:	0f 86 54 01 00 00    	jbe    21896 <_ZN14rustc_demangle2v06Parser9skip_type17hcade47368bc53de5E+0x2d6>
   21742:	41 80 3c 30 5f       	cmpb   $0x5f,(%r8,%rsi,1)
   21747:	0f 85 49 01 00 00    	jne    21896 <_ZN14rustc_demangle2v06Parser9skip_type17hcade47368bc53de5E+0x2d6>
   2174d:	48 83 c7 03          	add    $0x3,%rdi
   21751:	49 89 3f             	mov    %rdi,(%r15)
   21754:	48 89 fe             	mov    %rdi,%rsi
   21757:	49 39 f1             	cmp    %rsi,%r9
   2175a:	0f 87 74 02 00 00    	ja     219d4 <_ZN14rustc_demangle2v06Parser9skip_type17hcade47368bc53de5E+0x414>
   21760:	e9 7d 02 00 00       	jmpq   219e2 <_ZN14rustc_demangle2v06Parser9skip_type17hcade47368bc53de5E+0x422>
   21765:	31 c9                	xor    %ecx,%ecx
   21767:	41 ba 3e 00 00 00    	mov    $0x3e,%r10d
   2176d:	49 39 f1             	cmp    %rsi,%r9
   21770:	0f 86 a1 03 00 00    	jbe    21b17 <_ZN14rustc_demangle2v06Parser9skip_type17hcade47368bc53de5E+0x557>
   21776:	41 0f b6 04 30       	movzbl (%r8,%rsi,1),%eax
   2177b:	3c 5f                	cmp    $0x5f,%al
   2177d:	0f 84 78 01 00 00    	je     218fb <_ZN14rustc_demangle2v06Parser9skip_type17hcade47368bc53de5E+0x33b>
   21783:	8d 58 d0             	lea    -0x30(%rax),%ebx
   21786:	80 fb 0a             	cmp    $0xa,%bl
   21789:	72 1c                	jb     217a7 <_ZN14rustc_demangle2v06Parser9skip_type17hcade47368bc53de5E+0x1e7>
   2178b:	8d 50 9f             	lea    -0x61(%rax),%edx
   2178e:	80 fa 1a             	cmp    $0x1a,%dl
   21791:	73 04                	jae    21797 <_ZN14rustc_demangle2v06Parser9skip_type17hcade47368bc53de5E+0x1d7>
   21793:	04 a9                	add    $0xa9,%al
   21795:	eb 0e                	jmp    217a5 <_ZN14rustc_demangle2v06Parser9skip_type17hcade47368bc53de5E+0x1e5>
   21797:	8d 50 bf             	lea    -0x41(%rax),%edx
   2179a:	80 fa 1a             	cmp    $0x1a,%dl
   2179d:	0f 83 74 03 00 00    	jae    21b17 <_ZN14rustc_demangle2v06Parser9skip_type17hcade47368bc53de5E+0x557>
   217a3:	04 e3                	add    $0xe3,%al
   217a5:	89 c3                	mov    %eax,%ebx
   217a7:	48 83 c6 01          	add    $0x1,%rsi
   217ab:	49 89 37             	mov    %rsi,(%r15)
   217ae:	48 89 c8             	mov    %rcx,%rax
   217b1:	49 f7 e2             	mul    %r10
   217b4:	0f 80 5d 03 00 00    	jo     21b17 <_ZN14rustc_demangle2v06Parser9skip_type17hcade47368bc53de5E+0x557>
   217ba:	48 89 c1             	mov    %rax,%rcx
   217bd:	0f b6 c3             	movzbl %bl,%eax
   217c0:	48 01 c1             	add    %rax,%rcx
   217c3:	73 a8                	jae    2176d <_ZN14rustc_demangle2v06Parser9skip_type17hcade47368bc53de5E+0x1ad>
   217c5:	e9 4d 03 00 00       	jmpq   21b17 <_ZN14rustc_demangle2v06Parser9skip_type17hcade47368bc53de5E+0x557>
   217ca:	31 c9                	xor    %ecx,%ecx
   217cc:	41 ba 3e 00 00 00    	mov    $0x3e,%r10d
   217d2:	49 39 f1             	cmp    %rsi,%r9
   217d5:	0f 86 3c 03 00 00    	jbe    21b17 <_ZN14rustc_demangle2v06Parser9skip_type17hcade47368bc53de5E+0x557>
   217db:	41 0f b6 04 30       	movzbl (%r8,%rsi,1),%eax
   217e0:	3c 5f                	cmp    $0x5f,%al
   217e2:	0f 84 30 01 00 00    	je     21918 <_ZN14rustc_demangle2v06Parser9skip_type17hcade47368bc53de5E+0x358>
   217e8:	8d 78 d0             	lea    -0x30(%rax),%edi
   217eb:	40 80 ff 0a          	cmp    $0xa,%dil
   217ef:	72 1c                	jb     2180d <_ZN14rustc_demangle2v06Parser9skip_type17hcade47368bc53de5E+0x24d>
   217f1:	8d 50 9f             	lea    -0x61(%rax),%edx
   217f4:	80 fa 1a             	cmp    $0x1a,%dl
   217f7:	73 04                	jae    217fd <_ZN14rustc_demangle2v06Parser9skip_type17hcade47368bc53de5E+0x23d>
   217f9:	04 a9                	add    $0xa9,%al
   217fb:	eb 0e                	jmp    2180b <_ZN14rustc_demangle2v06Parser9skip_type17hcade47368bc53de5E+0x24b>
   217fd:	8d 50 bf             	lea    -0x41(%rax),%edx
   21800:	80 fa 1a             	cmp    $0x1a,%dl
   21803:	0f 83 0e 03 00 00    	jae    21b17 <_ZN14rustc_demangle2v06Parser9skip_type17hcade47368bc53de5E+0x557>
   21809:	04 e3                	add    $0xe3,%al
   2180b:	89 c7                	mov    %eax,%edi
   2180d:	48 83 c6 01          	add    $0x1,%rsi
   21811:	49 89 37             	mov    %rsi,(%r15)
   21814:	48 89 c8             	mov    %rcx,%rax
   21817:	49 f7 e2             	mul    %r10
   2181a:	0f 80 f7 02 00 00    	jo     21b17 <_ZN14rustc_demangle2v06Parser9skip_type17hcade47368bc53de5E+0x557>
   21820:	48 89 c1             	mov    %rax,%rcx
   21823:	40 0f b6 c7          	movzbl %dil,%eax
   21827:	48 01 c1             	add    %rax,%rcx
   2182a:	73 a6                	jae    217d2 <_ZN14rustc_demangle2v06Parser9skip_type17hcade47368bc53de5E+0x212>
   2182c:	e9 e6 02 00 00       	jmpq   21b17 <_ZN14rustc_demangle2v06Parser9skip_type17hcade47368bc53de5E+0x557>
   21831:	31 c0                	xor    %eax,%eax
   21833:	b9 3e 00 00 00       	mov    $0x3e,%ecx
   21838:	49 39 f1             	cmp    %rsi,%r9
   2183b:	0f 86 d6 02 00 00    	jbe    21b17 <_ZN14rustc_demangle2v06Parser9skip_type17hcade47368bc53de5E+0x557>
   21841:	41 0f b6 14 30       	movzbl (%r8,%rsi,1),%edx
   21846:	80 fa 5f             	cmp    $0x5f,%dl
   21849:	0f 84 e1 00 00 00    	je     21930 <_ZN14rustc_demangle2v06Parser9skip_type17hcade47368bc53de5E+0x370>
   2184f:	8d 7a d0             	lea    -0x30(%rdx),%edi
   21852:	40 80 ff 0a          	cmp    $0xa,%dil
   21856:	72 20                	jb     21878 <_ZN14rustc_demangle2v06Parser9skip_type17hcade47368bc53de5E+0x2b8>
   21858:	8d 7a 9f             	lea    -0x61(%rdx),%edi
   2185b:	40 80 ff 1a          	cmp    $0x1a,%dil
   2185f:	73 05                	jae    21866 <_ZN14rustc_demangle2v06Parser9skip_type17hcade47368bc53de5E+0x2a6>
   21861:	80 c2 a9             	add    $0xa9,%dl
   21864:	eb 10                	jmp    21876 <_ZN14rustc_demangle2v06Parser9skip_type17hcade47368bc53de5E+0x2b6>
   21866:	8d 7a bf             	lea    -0x41(%rdx),%edi
   21869:	40 80 ff 1a          	cmp    $0x1a,%dil
   2186d:	0f 83 a4 02 00 00    	jae    21b17 <_ZN14rustc_demangle2v06Parser9skip_type17hcade47368bc53de5E+0x557>
   21873:	80 c2 e3             	add    $0xe3,%dl
   21876:	89 d7                	mov    %edx,%edi
   21878:	48 83 c6 01          	add    $0x1,%rsi
   2187c:	49 89 37             	mov    %rsi,(%r15)
   2187f:	48 f7 e1             	mul    %rcx
   21882:	0f 80 8f 02 00 00    	jo     21b17 <_ZN14rustc_demangle2v06Parser9skip_type17hcade47368bc53de5E+0x557>
   21888:	40 0f b6 d7          	movzbl %dil,%edx
   2188c:	48 01 d0             	add    %rdx,%rax
   2188f:	73 a7                	jae    21838 <_ZN14rustc_demangle2v06Parser9skip_type17hcade47368bc53de5E+0x278>
   21891:	e9 81 02 00 00       	jmpq   21b17 <_ZN14rustc_demangle2v06Parser9skip_type17hcade47368bc53de5E+0x557>
   21896:	31 c0                	xor    %eax,%eax
   21898:	b9 3e 00 00 00       	mov    $0x3e,%ecx
   2189d:	49 39 f1             	cmp    %rsi,%r9
   218a0:	0f 86 71 02 00 00    	jbe    21b17 <_ZN14rustc_demangle2v06Parser9skip_type17hcade47368bc53de5E+0x557>
   218a6:	41 0f b6 14 30       	movzbl (%r8,%rsi,1),%edx
   218ab:	80 fa 5f             	cmp    $0x5f,%dl
   218ae:	0f 84 01 01 00 00    	je     219b5 <_ZN14rustc_demangle2v06Parser9skip_type17hcade47368bc53de5E+0x3f5>
   218b4:	8d 7a d0             	lea    -0x30(%rdx),%edi
   218b7:	40 80 ff 0a          	cmp    $0xa,%dil
   218bb:	72 20                	jb     218dd <_ZN14rustc_demangle2v06Parser9skip_type17hcade47368bc53de5E+0x31d>
   218bd:	8d 7a 9f             	lea    -0x61(%rdx),%edi
   218c0:	40 80 ff 1a          	cmp    $0x1a,%dil
   218c4:	73 05                	jae    218cb <_ZN14rustc_demangle2v06Parser9skip_type17hcade47368bc53de5E+0x30b>
   218c6:	80 c2 a9             	add    $0xa9,%dl
   218c9:	eb 10                	jmp    218db <_ZN14rustc_demangle2v06Parser9skip_type17hcade47368bc53de5E+0x31b>
   218cb:	8d 7a bf             	lea    -0x41(%rdx),%edi
   218ce:	40 80 ff 1a          	cmp    $0x1a,%dil
   218d2:	0f 83 3f 02 00 00    	jae    21b17 <_ZN14rustc_demangle2v06Parser9skip_type17hcade47368bc53de5E+0x557>
   218d8:	80 c2 e3             	add    $0xe3,%dl
   218db:	89 d7                	mov    %edx,%edi
   218dd:	48 83 c6 01          	add    $0x1,%rsi
   218e1:	49 89 37             	mov    %rsi,(%r15)
   218e4:	48 f7 e1             	mul    %rcx
   218e7:	0f 80 2a 02 00 00    	jo     21b17 <_ZN14rustc_demangle2v06Parser9skip_type17hcade47368bc53de5E+0x557>
   218ed:	40 0f b6 d7          	movzbl %dil,%edx
   218f1:	48 01 d0             	add    %rdx,%rax
   218f4:	73 a7                	jae    2189d <_ZN14rustc_demangle2v06Parser9skip_type17hcade47368bc53de5E+0x2dd>
   218f6:	e9 1c 02 00 00       	jmpq   21b17 <_ZN14rustc_demangle2v06Parser9skip_type17hcade47368bc53de5E+0x557>
   218fb:	48 83 c6 01          	add    $0x1,%rsi
   218ff:	49 89 37             	mov    %rsi,(%r15)
   21902:	b0 01                	mov    $0x1,%al
   21904:	48 ff c1             	inc    %rcx
   21907:	0f 84 0c 02 00 00    	je     21b19 <_ZN14rustc_demangle2v06Parser9skip_type17hcade47368bc53de5E+0x559>
   2190d:	48 39 f9             	cmp    %rdi,%rcx
   21910:	0f 93 c0             	setae  %al
   21913:	e9 01 02 00 00       	jmpq   21b19 <_ZN14rustc_demangle2v06Parser9skip_type17hcade47368bc53de5E+0x559>
   21918:	48 83 c6 01          	add    $0x1,%rsi
   2191c:	49 89 37             	mov    %rsi,(%r15)
   2191f:	b0 01                	mov    $0x1,%al
   21921:	48 83 f9 ff          	cmp    $0xffffffffffffffff,%rcx
   21925:	0f 85 20 01 00 00    	jne    21a4b <_ZN14rustc_demangle2v06Parser9skip_type17hcade47368bc53de5E+0x48b>
   2192b:	e9 e9 01 00 00       	jmpq   21b19 <_ZN14rustc_demangle2v06Parser9skip_type17hcade47368bc53de5E+0x559>
   21930:	48 83 c6 01          	add    $0x1,%rsi
   21934:	49 89 37             	mov    %rsi,(%r15)
   21937:	48 ff c0             	inc    %rax
   2193a:	0f 84 d7 01 00 00    	je     21b17 <_ZN14rustc_demangle2v06Parser9skip_type17hcade47368bc53de5E+0x557>
   21940:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
   21944:	0f 84 cd 01 00 00    	je     21b17 <_ZN14rustc_demangle2v06Parser9skip_type17hcade47368bc53de5E+0x557>
   2194a:	49 89 e6             	mov    %rsp,%r14
   2194d:	49 39 f1             	cmp    %rsi,%r9
   21950:	76 0d                	jbe    2195f <_ZN14rustc_demangle2v06Parser9skip_type17hcade47368bc53de5E+0x39f>
   21952:	48 8b 0b             	mov    (%rbx),%rcx
   21955:	80 3c 31 45          	cmpb   $0x45,(%rcx,%rsi,1)
   21959:	0f 84 2d 01 00 00    	je     21a8c <_ZN14rustc_demangle2v06Parser9skip_type17hcade47368bc53de5E+0x4cc>
   2195f:	48 89 df             	mov    %rbx,%rdi
   21962:	e8 69 d5 ff ff       	callq  1eed0 <_ZN14rustc_demangle2v06Parser9skip_path17h92f436ed624d331fE>
   21967:	84 c0                	test   %al,%al
   21969:	0f 85 a8 01 00 00    	jne    21b17 <_ZN14rustc_demangle2v06Parser9skip_type17hcade47368bc53de5E+0x557>
   2196f:	90                   	nop
   21970:	4c 8b 4b 08          	mov    0x8(%rbx),%r9
   21974:	48 8b 73 10          	mov    0x10(%rbx),%rsi
   21978:	49 39 f1             	cmp    %rsi,%r9
   2197b:	76 d0                	jbe    2194d <_ZN14rustc_demangle2v06Parser9skip_type17hcade47368bc53de5E+0x38d>
   2197d:	48 8b 03             	mov    (%rbx),%rax
   21980:	80 3c 30 70          	cmpb   $0x70,(%rax,%rsi,1)
   21984:	75 c7                	jne    2194d <_ZN14rustc_demangle2v06Parser9skip_type17hcade47368bc53de5E+0x38d>
   21986:	48 83 c6 01          	add    $0x1,%rsi
   2198a:	48 89 73 10          	mov    %rsi,0x10(%rbx)
   2198e:	4c 89 f7             	mov    %r14,%rdi
   21991:	48 89 de             	mov    %rbx,%rsi
   21994:	e8 d7 cd ff ff       	callq  1e770 <_ZN14rustc_demangle2v06Parser5ident17hd92f34ac92f9dd66E>
   21999:	48 83 3c 24 00       	cmpq   $0x0,(%rsp)
   2199e:	0f 84 73 01 00 00    	je     21b17 <_ZN14rustc_demangle2v06Parser9skip_type17hcade47368bc53de5E+0x557>
   219a4:	48 89 df             	mov    %rbx,%rdi
   219a7:	e8 14 fc ff ff       	callq  215c0 <_ZN14rustc_demangle2v06Parser9skip_type17hcade47368bc53de5E>
   219ac:	84 c0                	test   %al,%al
   219ae:	74 c0                	je     21970 <_ZN14rustc_demangle2v06Parser9skip_type17hcade47368bc53de5E+0x3b0>
   219b0:	e9 62 01 00 00       	jmpq   21b17 <_ZN14rustc_demangle2v06Parser9skip_type17hcade47368bc53de5E+0x557>
   219b5:	48 83 c6 01          	add    $0x1,%rsi
   219b9:	49 89 37             	mov    %rsi,(%r15)
   219bc:	48 ff c0             	inc    %rax
   219bf:	0f 84 52 01 00 00    	je     21b17 <_ZN14rustc_demangle2v06Parser9skip_type17hcade47368bc53de5E+0x557>
   219c5:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
   219c9:	0f 84 48 01 00 00    	je     21b17 <_ZN14rustc_demangle2v06Parser9skip_type17hcade47368bc53de5E+0x557>
   219cf:	49 39 f1             	cmp    %rsi,%r9
   219d2:	76 0e                	jbe    219e2 <_ZN14rustc_demangle2v06Parser9skip_type17hcade47368bc53de5E+0x422>
   219d4:	41 80 3c 30 55       	cmpb   $0x55,(%r8,%rsi,1)
   219d9:	75 07                	jne    219e2 <_ZN14rustc_demangle2v06Parser9skip_type17hcade47368bc53de5E+0x422>
   219db:	48 83 c6 01          	add    $0x1,%rsi
   219df:	49 89 37             	mov    %rsi,(%r15)
   219e2:	49 39 f1             	cmp    %rsi,%r9
   219e5:	76 49                	jbe    21a30 <_ZN14rustc_demangle2v06Parser9skip_type17hcade47368bc53de5E+0x470>
   219e7:	41 80 3c 30 4b       	cmpb   $0x4b,(%r8,%rsi,1)
   219ec:	75 42                	jne    21a30 <_ZN14rustc_demangle2v06Parser9skip_type17hcade47368bc53de5E+0x470>
   219ee:	48 8d 46 01          	lea    0x1(%rsi),%rax
   219f2:	49 89 07             	mov    %rax,(%r15)
   219f5:	49 39 c1             	cmp    %rax,%r9
   219f8:	76 62                	jbe    21a5c <_ZN14rustc_demangle2v06Parser9skip_type17hcade47368bc53de5E+0x49c>
   219fa:	41 80 3c 00 43       	cmpb   $0x43,(%r8,%rax,1)
   219ff:	75 5b                	jne    21a5c <_ZN14rustc_demangle2v06Parser9skip_type17hcade47368bc53de5E+0x49c>
   21a01:	48 83 c6 02          	add    $0x2,%rsi
   21a05:	49 89 37             	mov    %rsi,(%r15)
   21a08:	48 8b 43 10          	mov    0x10(%rbx),%rax
   21a0c:	48 39 43 08          	cmp    %rax,0x8(%rbx)
   21a10:	77 28                	ja     21a3a <_ZN14rustc_demangle2v06Parser9skip_type17hcade47368bc53de5E+0x47a>
   21a12:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   21a19:	00 00 00 
   21a1c:	0f 1f 40 00          	nopl   0x0(%rax)
   21a20:	48 89 df             	mov    %rbx,%rdi
   21a23:	e8 98 fb ff ff       	callq  215c0 <_ZN14rustc_demangle2v06Parser9skip_type17hcade47368bc53de5E>
   21a28:	84 c0                	test   %al,%al
   21a2a:	0f 85 e7 00 00 00    	jne    21b17 <_ZN14rustc_demangle2v06Parser9skip_type17hcade47368bc53de5E+0x557>
   21a30:	48 8b 43 10          	mov    0x10(%rbx),%rax
   21a34:	48 39 43 08          	cmp    %rax,0x8(%rbx)
   21a38:	76 e6                	jbe    21a20 <_ZN14rustc_demangle2v06Parser9skip_type17hcade47368bc53de5E+0x460>
   21a3a:	48 8b 0b             	mov    (%rbx),%rcx
   21a3d:	80 3c 01 45          	cmpb   $0x45,(%rcx,%rax,1)
   21a41:	75 dd                	jne    21a20 <_ZN14rustc_demangle2v06Parser9skip_type17hcade47368bc53de5E+0x460>
   21a43:	48 83 c0 01          	add    $0x1,%rax
   21a47:	48 89 43 10          	mov    %rax,0x10(%rbx)
   21a4b:	48 89 df             	mov    %rbx,%rdi
   21a4e:	48 83 c4 20          	add    $0x20,%rsp
   21a52:	5b                   	pop    %rbx
   21a53:	41 5e                	pop    %r14
   21a55:	41 5f                	pop    %r15
   21a57:	e9 64 fb ff ff       	jmpq   215c0 <_ZN14rustc_demangle2v06Parser9skip_type17hcade47368bc53de5E>
   21a5c:	48 89 e7             	mov    %rsp,%rdi
   21a5f:	48 89 de             	mov    %rbx,%rsi
   21a62:	e8 09 cd ff ff       	callq  1e770 <_ZN14rustc_demangle2v06Parser5ident17hd92f34ac92f9dd66E>
   21a67:	48 83 3c 24 00       	cmpq   $0x0,(%rsp)
   21a6c:	0f 84 a5 00 00 00    	je     21b17 <_ZN14rustc_demangle2v06Parser9skip_type17hcade47368bc53de5E+0x557>
   21a72:	48 83 7c 24 08 00    	cmpq   $0x0,0x8(%rsp)
   21a78:	0f 84 99 00 00 00    	je     21b17 <_ZN14rustc_demangle2v06Parser9skip_type17hcade47368bc53de5E+0x557>
   21a7e:	48 83 7c 24 18 00    	cmpq   $0x0,0x18(%rsp)
   21a84:	0f 85 8d 00 00 00    	jne    21b17 <_ZN14rustc_demangle2v06Parser9skip_type17hcade47368bc53de5E+0x557>
   21a8a:	eb a4                	jmp    21a30 <_ZN14rustc_demangle2v06Parser9skip_type17hcade47368bc53de5E+0x470>
   21a8c:	48 8d 46 01          	lea    0x1(%rsi),%rax
   21a90:	49 89 07             	mov    %rax,(%r15)
   21a93:	49 39 c1             	cmp    %rax,%r9
   21a96:	76 7f                	jbe    21b17 <_ZN14rustc_demangle2v06Parser9skip_type17hcade47368bc53de5E+0x557>
   21a98:	80 3c 01 4c          	cmpb   $0x4c,(%rcx,%rax,1)
   21a9c:	75 79                	jne    21b17 <_ZN14rustc_demangle2v06Parser9skip_type17hcade47368bc53de5E+0x557>
   21a9e:	48 8d 7e 02          	lea    0x2(%rsi),%rdi
   21aa2:	49 89 3f             	mov    %rdi,(%r15)
   21aa5:	49 39 f9             	cmp    %rdi,%r9
   21aa8:	76 0f                	jbe    21ab9 <_ZN14rustc_demangle2v06Parser9skip_type17hcade47368bc53de5E+0x4f9>
   21aaa:	80 3c 39 5f          	cmpb   $0x5f,(%rcx,%rdi,1)
   21aae:	75 09                	jne    21ab9 <_ZN14rustc_demangle2v06Parser9skip_type17hcade47368bc53de5E+0x4f9>
   21ab0:	48 83 c6 03          	add    $0x3,%rsi
   21ab4:	e9 c1 fb ff ff       	jmpq   2167a <_ZN14rustc_demangle2v06Parser9skip_type17hcade47368bc53de5E+0xba>
   21ab9:	31 c0                	xor    %eax,%eax
   21abb:	be 3e 00 00 00       	mov    $0x3e,%esi
   21ac0:	49 39 f9             	cmp    %rdi,%r9
   21ac3:	76 52                	jbe    21b17 <_ZN14rustc_demangle2v06Parser9skip_type17hcade47368bc53de5E+0x557>
   21ac5:	0f b6 14 39          	movzbl (%rcx,%rdi,1),%edx
   21ac9:	80 fa 5f             	cmp    $0x5f,%dl
   21acc:	74 38                	je     21b06 <_ZN14rustc_demangle2v06Parser9skip_type17hcade47368bc53de5E+0x546>
   21ace:	8d 5a d0             	lea    -0x30(%rdx),%ebx
   21ad1:	80 fb 0a             	cmp    $0xa,%bl
   21ad4:	72 1a                	jb     21af0 <_ZN14rustc_demangle2v06Parser9skip_type17hcade47368bc53de5E+0x530>
   21ad6:	8d 5a 9f             	lea    -0x61(%rdx),%ebx
   21ad9:	80 fb 1a             	cmp    $0x1a,%bl
   21adc:	73 05                	jae    21ae3 <_ZN14rustc_demangle2v06Parser9skip_type17hcade47368bc53de5E+0x523>
   21ade:	80 c2 a9             	add    $0xa9,%dl
   21ae1:	eb 0b                	jmp    21aee <_ZN14rustc_demangle2v06Parser9skip_type17hcade47368bc53de5E+0x52e>
   21ae3:	8d 5a bf             	lea    -0x41(%rdx),%ebx
   21ae6:	80 fb 1a             	cmp    $0x1a,%bl
   21ae9:	73 2c                	jae    21b17 <_ZN14rustc_demangle2v06Parser9skip_type17hcade47368bc53de5E+0x557>
   21aeb:	80 c2 e3             	add    $0xe3,%dl
   21aee:	89 d3                	mov    %edx,%ebx
   21af0:	48 83 c7 01          	add    $0x1,%rdi
   21af4:	49 89 3f             	mov    %rdi,(%r15)
   21af7:	48 f7 e6             	mul    %rsi
   21afa:	70 1b                	jo     21b17 <_ZN14rustc_demangle2v06Parser9skip_type17hcade47368bc53de5E+0x557>
   21afc:	0f b6 d3             	movzbl %bl,%edx
   21aff:	48 01 d0             	add    %rdx,%rax
   21b02:	73 bc                	jae    21ac0 <_ZN14rustc_demangle2v06Parser9skip_type17hcade47368bc53de5E+0x500>
   21b04:	eb 11                	jmp    21b17 <_ZN14rustc_demangle2v06Parser9skip_type17hcade47368bc53de5E+0x557>
   21b06:	48 83 c7 01          	add    $0x1,%rdi
   21b0a:	49 89 3f             	mov    %rdi,(%r15)
   21b0d:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
   21b11:	74 04                	je     21b17 <_ZN14rustc_demangle2v06Parser9skip_type17hcade47368bc53de5E+0x557>
   21b13:	31 c0                	xor    %eax,%eax
   21b15:	eb 02                	jmp    21b19 <_ZN14rustc_demangle2v06Parser9skip_type17hcade47368bc53de5E+0x559>
   21b17:	b0 01                	mov    $0x1,%al
   21b19:	48 83 c4 20          	add    $0x20,%rsp
   21b1d:	5b                   	pop    %rbx
   21b1e:	41 5e                	pop    %r14
   21b20:	41 5f                	pop    %r15
   21b22:	c3                   	retq   
   21b23:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   21b2a:	00 00 00 
   21b2d:	0f 1f 00             	nopl   (%rax)

0000000000021b30 <_ZN14rustc_demangle2v06Parser10skip_const17hb429e6fe7c0d0accE>:
   21b30:	53                   	push   %rbx
   21b31:	48 83 ec 40          	sub    $0x40,%rsp
   21b35:	48 8b 4f 08          	mov    0x8(%rdi),%rcx
   21b39:	4c 8b 4f 10          	mov    0x10(%rdi),%r9
   21b3d:	41 b0 01             	mov    $0x1,%r8b
   21b40:	4c 39 c9             	cmp    %r9,%rcx
   21b43:	0f 86 6c 01 00 00    	jbe    21cb5 <_ZN14rustc_demangle2v06Parser10skip_const17hb429e6fe7c0d0accE+0x185>
   21b49:	48 8b 37             	mov    (%rdi),%rsi
   21b4c:	42 8a 04 0e          	mov    (%rsi,%r9,1),%al
   21b50:	4d 8d 51 01          	lea    0x1(%r9),%r10
   21b54:	4c 89 57 10          	mov    %r10,0x10(%rdi)
   21b58:	04 be                	add    $0xbe,%al
   21b5a:	3c 37                	cmp    $0x37,%al
   21b5c:	0f 87 53 01 00 00    	ja     21cb5 <_ZN14rustc_demangle2v06Parser10skip_const17hb429e6fe7c0d0accE+0x185>
   21b62:	0f b6 c0             	movzbl %al,%eax
   21b65:	48 ba 00 00 00 00 40 	movabs $0x84294000000000,%rdx
   21b6c:	29 84 00 
   21b6f:	48 0f a3 c2          	bt     %rax,%rdx
   21b73:	0f 83 af 00 00 00    	jae    21c28 <_ZN14rustc_demangle2v06Parser10skip_const17hb429e6fe7c0d0accE+0xf8>
   21b79:	4c 89 d0             	mov    %r10,%rax
   21b7c:	4c 39 d1             	cmp    %r10,%rcx
   21b7f:	76 1f                	jbe    21ba0 <_ZN14rustc_demangle2v06Parser10skip_const17hb429e6fe7c0d0accE+0x70>
   21b81:	42 80 3c 16 70       	cmpb   $0x70,(%rsi,%r10,1)
   21b86:	4c 89 d0             	mov    %r10,%rax
   21b89:	75 15                	jne    21ba0 <_ZN14rustc_demangle2v06Parser10skip_const17hb429e6fe7c0d0accE+0x70>
   21b8b:	49 83 c1 02          	add    $0x2,%r9
   21b8f:	4c 89 4f 10          	mov    %r9,0x10(%rdi)
   21b93:	e9 84 00 00 00       	jmpq   21c1c <_ZN14rustc_demangle2v06Parser10skip_const17hb429e6fe7c0d0accE+0xec>
   21b98:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   21b9f:	00 
   21ba0:	48 39 c1             	cmp    %rax,%rcx
   21ba3:	0f 86 0c 01 00 00    	jbe    21cb5 <_ZN14rustc_demangle2v06Parser10skip_const17hb429e6fe7c0d0accE+0x185>
   21ba9:	0f b6 14 06          	movzbl (%rsi,%rax,1),%edx
   21bad:	48 83 c0 01          	add    $0x1,%rax
   21bb1:	48 89 47 10          	mov    %rax,0x10(%rdi)
   21bb5:	8d 5a d0             	lea    -0x30(%rdx),%ebx
   21bb8:	80 fb 0a             	cmp    $0xa,%bl
   21bbb:	72 e3                	jb     21ba0 <_ZN14rustc_demangle2v06Parser10skip_const17hb429e6fe7c0d0accE+0x70>
   21bbd:	8d 5a 9f             	lea    -0x61(%rdx),%ebx
   21bc0:	80 fb 06             	cmp    $0x6,%bl
   21bc3:	72 db                	jb     21ba0 <_ZN14rustc_demangle2v06Parser10skip_const17hb429e6fe7c0d0accE+0x70>
   21bc5:	80 fa 5f             	cmp    $0x5f,%dl
   21bc8:	0f 85 e7 00 00 00    	jne    21cb5 <_ZN14rustc_demangle2v06Parser10skip_const17hb429e6fe7c0d0accE+0x185>
   21bce:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
   21bd2:	48 89 74 24 18       	mov    %rsi,0x18(%rsp)
   21bd7:	48 89 4c 24 20       	mov    %rcx,0x20(%rsp)
   21bdc:	4c 89 54 24 08       	mov    %r10,0x8(%rsp)
   21be1:	48 89 54 24 10       	mov    %rdx,0x10(%rsp)
   21be6:	4c 39 ca             	cmp    %r9,%rdx
   21be9:	0f 86 db 00 00 00    	jbe    21cca <_ZN14rustc_demangle2v06Parser10skip_const17hb429e6fe7c0d0accE+0x19a>
   21bef:	4c 39 d1             	cmp    %r10,%rcx
   21bf2:	74 11                	je     21c05 <_ZN14rustc_demangle2v06Parser10skip_const17hb429e6fe7c0d0accE+0xd5>
   21bf4:	0f 86 d0 00 00 00    	jbe    21cca <_ZN14rustc_demangle2v06Parser10skip_const17hb429e6fe7c0d0accE+0x19a>
   21bfa:	42 80 3c 16 bf       	cmpb   $0xbf,(%rsi,%r10,1)
   21bff:	0f 8e c5 00 00 00    	jle    21cca <_ZN14rustc_demangle2v06Parser10skip_const17hb429e6fe7c0d0accE+0x19a>
   21c05:	48 89 c2             	mov    %rax,%rdx
   21c08:	48 29 ca             	sub    %rcx,%rdx
   21c0b:	48 83 fa 01          	cmp    $0x1,%rdx
   21c0f:	74 0b                	je     21c1c <_ZN14rustc_demangle2v06Parser10skip_const17hb429e6fe7c0d0accE+0xec>
   21c11:	80 7c 06 ff bf       	cmpb   $0xbf,-0x1(%rsi,%rax,1)
   21c16:	0f 8e ae 00 00 00    	jle    21cca <_ZN14rustc_demangle2v06Parser10skip_const17hb429e6fe7c0d0accE+0x19a>
   21c1c:	45 31 c0             	xor    %r8d,%r8d
   21c1f:	44 89 c0             	mov    %r8d,%eax
   21c22:	48 83 c4 40          	add    $0x40,%rsp
   21c26:	5b                   	pop    %rbx
   21c27:	c3                   	retq   
   21c28:	48 85 c0             	test   %rax,%rax
   21c2b:	0f 85 84 00 00 00    	jne    21cb5 <_ZN14rustc_demangle2v06Parser10skip_const17hb429e6fe7c0d0accE+0x185>
   21c31:	4c 39 d1             	cmp    %r10,%rcx
   21c34:	76 13                	jbe    21c49 <_ZN14rustc_demangle2v06Parser10skip_const17hb429e6fe7c0d0accE+0x119>
   21c36:	42 80 3c 16 5f       	cmpb   $0x5f,(%rsi,%r10,1)
   21c3b:	75 0c                	jne    21c49 <_ZN14rustc_demangle2v06Parser10skip_const17hb429e6fe7c0d0accE+0x119>
   21c3d:	49 8d 41 02          	lea    0x2(%r9),%rax
   21c41:	48 89 47 10          	mov    %rax,0x10(%rdi)
   21c45:	31 c0                	xor    %eax,%eax
   21c47:	eb 75                	jmp    21cbe <_ZN14rustc_demangle2v06Parser10skip_const17hb429e6fe7c0d0accE+0x18e>
   21c49:	31 c0                	xor    %eax,%eax
   21c4b:	41 bb 3e 00 00 00    	mov    $0x3e,%r11d
   21c51:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   21c58:	00 00 00 
   21c5b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   21c60:	4c 39 d1             	cmp    %r10,%rcx
   21c63:	76 50                	jbe    21cb5 <_ZN14rustc_demangle2v06Parser10skip_const17hb429e6fe7c0d0accE+0x185>
   21c65:	42 0f b6 14 16       	movzbl (%rsi,%r10,1),%edx
   21c6a:	80 fa 5f             	cmp    $0x5f,%dl
   21c6d:	74 39                	je     21ca8 <_ZN14rustc_demangle2v06Parser10skip_const17hb429e6fe7c0d0accE+0x178>
   21c6f:	8d 5a d0             	lea    -0x30(%rdx),%ebx
   21c72:	80 fb 0a             	cmp    $0xa,%bl
   21c75:	72 1a                	jb     21c91 <_ZN14rustc_demangle2v06Parser10skip_const17hb429e6fe7c0d0accE+0x161>
   21c77:	8d 5a 9f             	lea    -0x61(%rdx),%ebx
   21c7a:	80 fb 1a             	cmp    $0x1a,%bl
   21c7d:	73 05                	jae    21c84 <_ZN14rustc_demangle2v06Parser10skip_const17hb429e6fe7c0d0accE+0x154>
   21c7f:	80 c2 a9             	add    $0xa9,%dl
   21c82:	eb 0b                	jmp    21c8f <_ZN14rustc_demangle2v06Parser10skip_const17hb429e6fe7c0d0accE+0x15f>
   21c84:	8d 5a bf             	lea    -0x41(%rdx),%ebx
   21c87:	80 fb 1a             	cmp    $0x1a,%bl
   21c8a:	73 29                	jae    21cb5 <_ZN14rustc_demangle2v06Parser10skip_const17hb429e6fe7c0d0accE+0x185>
   21c8c:	80 c2 e3             	add    $0xe3,%dl
   21c8f:	89 d3                	mov    %edx,%ebx
   21c91:	49 83 c2 01          	add    $0x1,%r10
   21c95:	4c 89 57 10          	mov    %r10,0x10(%rdi)
   21c99:	49 f7 e3             	mul    %r11
   21c9c:	70 17                	jo     21cb5 <_ZN14rustc_demangle2v06Parser10skip_const17hb429e6fe7c0d0accE+0x185>
   21c9e:	0f b6 d3             	movzbl %bl,%edx
   21ca1:	48 01 d0             	add    %rdx,%rax
   21ca4:	73 ba                	jae    21c60 <_ZN14rustc_demangle2v06Parser10skip_const17hb429e6fe7c0d0accE+0x130>
   21ca6:	eb 0d                	jmp    21cb5 <_ZN14rustc_demangle2v06Parser10skip_const17hb429e6fe7c0d0accE+0x185>
   21ca8:	49 83 c2 01          	add    $0x1,%r10
   21cac:	4c 89 57 10          	mov    %r10,0x10(%rdi)
   21cb0:	48 ff c0             	inc    %rax
   21cb3:	75 09                	jne    21cbe <_ZN14rustc_demangle2v06Parser10skip_const17hb429e6fe7c0d0accE+0x18e>
   21cb5:	44 89 c0             	mov    %r8d,%eax
   21cb8:	48 83 c4 40          	add    $0x40,%rsp
   21cbc:	5b                   	pop    %rbx
   21cbd:	c3                   	retq   
   21cbe:	4c 39 c8             	cmp    %r9,%rax
   21cc1:	0f 93 c0             	setae  %al
   21cc4:	48 83 c4 40          	add    $0x40,%rsp
   21cc8:	5b                   	pop    %rbx
   21cc9:	c3                   	retq   
   21cca:	48 8d 44 24 18       	lea    0x18(%rsp),%rax
   21ccf:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   21cd4:	48 8d 44 24 08       	lea    0x8(%rsp),%rax
   21cd9:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   21cde:	48 8d 44 24 10       	lea    0x10(%rsp),%rax
   21ce3:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   21ce8:	48 8d 7c 24 28       	lea    0x28(%rsp),%rdi
   21ced:	e8 ee bf ff ff       	callq  1dce0 <_ZN4core3str6traits101_$LT$impl$u20$core..slice..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..Range$LT$usize$GT$$GT$5index28_$u7b$$u7b$closure$u7d$$u7d$17hd529a7a73bc70800E>
   21cf2:	0f 0b                	ud2    
   21cf4:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   21cfb:	00 00 00 
   21cfe:	66 90                	xchg   %ax,%ax

0000000000021d00 <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE>:
   21d00:	55                   	push   %rbp
   21d01:	41 57                	push   %r15
   21d03:	41 56                	push   %r14
   21d05:	41 55                	push   %r13
   21d07:	41 54                	push   %r12
   21d09:	53                   	push   %rbx
   21d0a:	48 81 ec c8 00 00 00 	sub    $0xc8,%rsp
   21d11:	49 89 d4             	mov    %rdx,%r12
   21d14:	49 89 ff             	mov    %rdi,%r15
   21d17:	48 8d 0d 71 b5 01 00 	lea    0x1b571(%rip),%rcx        # 3d28f <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x92f>
   21d1e:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
   21d23:	41 b8 06 00 00 00    	mov    $0x6,%r8d
   21d29:	48 89 74 24 10       	mov    %rsi,0x10(%rsp)
   21d2e:	e8 8d 8d fe ff       	callq  aac0 <_ZN4core3str7pattern11StrSearcher3new17h5e55b3d26d3aed5eE>
   21d33:	48 83 7c 24 60 01    	cmpq   $0x1,0x60(%rsp)
   21d39:	0f 85 58 01 00 00    	jne    21e97 <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0x197>
   21d3f:	4c 89 bc 24 b8 00 00 	mov    %r15,0xb8(%rsp)
   21d46:	00 
   21d47:	48 8b ac 24 98 00 00 	mov    0x98(%rsp),%rbp
   21d4e:	00 
   21d4f:	48 8b 54 24 58       	mov    0x58(%rsp),%rdx
   21d54:	4c 8d 42 ff          	lea    -0x1(%rdx),%r8
   21d58:	4c 8b 4c 24 40       	mov    0x40(%rsp),%r9
   21d5d:	4c 8b 7c 24 48       	mov    0x48(%rsp),%r15
   21d62:	48 8b 7c 24 50       	mov    0x50(%rsp),%rdi
   21d67:	48 8b 9c 24 88 00 00 	mov    0x88(%rsp),%rbx
   21d6e:	00 
   21d6f:	48 8d 0c 1a          	lea    (%rdx,%rbx,1),%rcx
   21d73:	48 83 c1 ff          	add    $0xffffffffffffffff,%rcx
   21d77:	48 83 fd ff          	cmp    $0xffffffffffffffff,%rbp
   21d7b:	0f 84 91 02 00 00    	je     22012 <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0x312>
   21d81:	4c 39 f9             	cmp    %r15,%rcx
   21d84:	0f 83 16 0d 00 00    	jae    22aa0 <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0xda0>
   21d8a:	4c 8b 94 24 80 00 00 	mov    0x80(%rsp),%r10
   21d91:	00 
   21d92:	4c 8b 5c 24 68       	mov    0x68(%rsp),%r11
   21d97:	48 8b 44 24 78       	mov    0x78(%rsp),%rax
   21d9c:	48 89 d6             	mov    %rdx,%rsi
   21d9f:	48 89 84 24 b0 00 00 	mov    %rax,0xb0(%rsp)
   21da6:	00 
   21da7:	48 29 c6             	sub    %rax,%rsi
   21daa:	48 89 b4 24 a8 00 00 	mov    %rsi,0xa8(%rsp)
   21db1:	00 
   21db2:	4d 89 dd             	mov    %r11,%r13
   21db5:	49 f7 dd             	neg    %r13
   21db8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   21dbf:	00 
   21dc0:	41 0f b6 04 09       	movzbl (%r9,%rcx,1),%eax
   21dc5:	49 0f a3 c2          	bt     %rax,%r10
   21dc9:	73 55                	jae    21e20 <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0x120>
   21dcb:	49 39 eb             	cmp    %rbp,%r11
   21dce:	48 89 e9             	mov    %rbp,%rcx
   21dd1:	49 0f 47 cb          	cmova  %r11,%rcx
   21dd5:	4d 8d 34 19          	lea    (%r9,%rbx,1),%r14
   21dd9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   21de0:	48 39 d1             	cmp    %rdx,%rcx
   21de3:	73 4b                	jae    21e30 <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0x130>
   21de5:	48 8d 34 0b          	lea    (%rbx,%rcx,1),%rsi
   21de9:	4c 39 fe             	cmp    %r15,%rsi
   21dec:	0f 83 46 0d 00 00    	jae    22b38 <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0xe38>
   21df2:	0f b6 04 0f          	movzbl (%rdi,%rcx,1),%eax
   21df6:	41 3a 04 0e          	cmp    (%r14,%rcx,1),%al
   21dfa:	48 8d 49 01          	lea    0x1(%rcx),%rcx
   21dfe:	74 e0                	je     21de0 <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0xe0>
   21e00:	4c 01 eb             	add    %r13,%rbx
   21e03:	48 01 cb             	add    %rcx,%rbx
   21e06:	31 ed                	xor    %ebp,%ebp
   21e08:	4a 8d 0c 03          	lea    (%rbx,%r8,1),%rcx
   21e0c:	4c 39 f9             	cmp    %r15,%rcx
   21e0f:	72 af                	jb     21dc0 <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0xc0>
   21e11:	eb 77                	jmp    21e8a <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0x18a>
   21e13:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   21e1a:	00 00 00 
   21e1d:	0f 1f 00             	nopl   (%rax)
   21e20:	48 01 d3             	add    %rdx,%rbx
   21e23:	31 ed                	xor    %ebp,%ebp
   21e25:	4a 8d 0c 03          	lea    (%rbx,%r8,1),%rcx
   21e29:	4c 39 f9             	cmp    %r15,%rcx
   21e2c:	72 92                	jb     21dc0 <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0xc0>
   21e2e:	eb 5a                	jmp    21e8a <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0x18a>
   21e30:	4c 89 de             	mov    %r11,%rsi
   21e33:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   21e3a:	00 00 00 
   21e3d:	0f 1f 00             	nopl   (%rax)
   21e40:	48 39 f5             	cmp    %rsi,%rbp
   21e43:	0f 83 bd 02 00 00    	jae    22106 <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0x406>
   21e49:	48 83 c6 ff          	add    $0xffffffffffffffff,%rsi
   21e4d:	48 39 d6             	cmp    %rdx,%rsi
   21e50:	0f 83 29 0d 00 00    	jae    22b7f <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0xe7f>
   21e56:	48 8d 0c 1e          	lea    (%rsi,%rbx,1),%rcx
   21e5a:	4c 39 f9             	cmp    %r15,%rcx
   21e5d:	0f 83 2a 0d 00 00    	jae    22b8d <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0xe8d>
   21e63:	0f b6 04 37          	movzbl (%rdi,%rsi,1),%eax
   21e67:	41 3a 04 09          	cmp    (%r9,%rcx,1),%al
   21e6b:	74 d3                	je     21e40 <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0x140>
   21e6d:	48 03 9c 24 b0 00 00 	add    0xb0(%rsp),%rbx
   21e74:	00 
   21e75:	48 8b ac 24 a8 00 00 	mov    0xa8(%rsp),%rbp
   21e7c:	00 
   21e7d:	4a 8d 0c 03          	lea    (%rbx,%r8,1),%rcx
   21e81:	4c 39 f9             	cmp    %r15,%rcx
   21e84:	0f 82 36 ff ff ff    	jb     21dc0 <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0xc0>
   21e8a:	48 89 ac 24 98 00 00 	mov    %rbp,0x98(%rsp)
   21e91:	00 
   21e92:	e9 01 0c 00 00       	jmpq   22a98 <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0xd98>
   21e97:	44 8a 4c 24 78       	mov    0x78(%rsp),%r9b
   21e9c:	48 8b 74 24 68       	mov    0x68(%rsp),%rsi
   21ea1:	4c 8b 54 24 40       	mov    0x40(%rsp),%r10
   21ea6:	48 8b 4c 24 48       	mov    0x48(%rsp),%rcx
   21eab:	4d 8d 04 0a          	lea    (%r10,%rcx,1),%r8
   21eaf:	4c 8b 5c 24 10       	mov    0x10(%rsp),%r11
   21eb4:	eb 0d                	jmp    21ec3 <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0x1c3>
   21eb6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   21ebd:	00 00 00 
   21ec0:	48 01 c6             	add    %rax,%rsi
   21ec3:	44 89 ca             	mov    %r9d,%edx
   21ec6:	45 84 c9             	test   %r9b,%r9b
   21ec9:	41 0f 94 c1          	sete   %r9b
   21ecd:	4c 89 54 24 30       	mov    %r10,0x30(%rsp)
   21ed2:	48 89 4c 24 38       	mov    %rcx,0x38(%rsp)
   21ed7:	48 89 b4 24 c0 00 00 	mov    %rsi,0xc0(%rsp)
   21ede:	00 
   21edf:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
   21ee4:	48 85 f6             	test   %rsi,%rsi
   21ee7:	74 16                	je     21eff <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0x1ff>
   21ee9:	48 39 f1             	cmp    %rsi,%rcx
   21eec:	74 11                	je     21eff <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0x1ff>
   21eee:	0f 86 55 0c 00 00    	jbe    22b49 <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0xe49>
   21ef4:	41 80 3c 32 bf       	cmpb   $0xbf,(%r10,%rsi,1)
   21ef9:	0f 8e 4a 0c 00 00    	jle    22b49 <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0xe49>
   21eff:	bd 00 00 11 00       	mov    $0x110000,%ebp
   21f04:	48 39 f1             	cmp    %rsi,%rcx
   21f07:	74 0e                	je     21f17 <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0x217>
   21f09:	49 8d 1c 32          	lea    (%r10,%rsi,1),%rbx
   21f0d:	0f b6 3b             	movzbl (%rbx),%edi
   21f10:	40 84 ff             	test   %dil,%dil
   21f13:	78 48                	js     21f5d <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0x25d>
   21f15:	89 fd                	mov    %edi,%ebp
   21f17:	84 d2                	test   %dl,%dl
   21f19:	0f 85 23 02 00 00    	jne    22142 <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0x442>
   21f1f:	81 fd 00 00 11 00    	cmp    $0x110000,%ebp
   21f25:	0f 84 76 03 00 00    	je     222a1 <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0x5a1>
   21f2b:	b8 01 00 00 00       	mov    $0x1,%eax
   21f30:	81 fd 80 00 00 00    	cmp    $0x80,%ebp
   21f36:	72 88                	jb     21ec0 <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0x1c0>
   21f38:	b8 02 00 00 00       	mov    $0x2,%eax
   21f3d:	81 fd 00 08 00 00    	cmp    $0x800,%ebp
   21f43:	0f 82 77 ff ff ff    	jb     21ec0 <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0x1c0>
   21f49:	81 fd 00 00 01 00    	cmp    $0x10000,%ebp
   21f4f:	b8 04 00 00 00       	mov    $0x4,%eax
   21f54:	48 83 d8 00          	sbb    $0x0,%rax
   21f58:	e9 63 ff ff ff       	jmpq   21ec0 <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0x1c0>
   21f5d:	48 8d 43 01          	lea    0x1(%rbx),%rax
   21f61:	4c 39 c0             	cmp    %r8,%rax
   21f64:	74 40                	je     21fa6 <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0x2a6>
   21f66:	0f b6 6b 01          	movzbl 0x1(%rbx),%ebp
   21f6a:	48 83 c3 02          	add    $0x2,%rbx
   21f6e:	83 e5 3f             	and    $0x3f,%ebp
   21f71:	89 f8                	mov    %edi,%eax
   21f73:	83 e0 1f             	and    $0x1f,%eax
   21f76:	40 80 ff df          	cmp    $0xdf,%dil
   21f7a:	76 3a                	jbe    21fb6 <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0x2b6>
   21f7c:	4c 39 c3             	cmp    %r8,%rbx
   21f7f:	74 47                	je     21fc8 <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0x2c8>
   21f81:	44 0f b6 1b          	movzbl (%rbx),%r11d
   21f85:	48 83 c3 01          	add    $0x1,%rbx
   21f89:	41 83 e3 3f          	and    $0x3f,%r11d
   21f8d:	c1 e5 06             	shl    $0x6,%ebp
   21f90:	44 09 dd             	or     %r11d,%ebp
   21f93:	40 80 ff f0          	cmp    $0xf0,%dil
   21f97:	72 41                	jb     21fda <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0x2da>
   21f99:	4c 39 c3             	cmp    %r8,%rbx
   21f9c:	74 53                	je     21ff1 <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0x2f1>
   21f9e:	0f b6 3b             	movzbl (%rbx),%edi
   21fa1:	83 e7 3f             	and    $0x3f,%edi
   21fa4:	eb 4d                	jmp    21ff3 <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0x2f3>
   21fa6:	31 ed                	xor    %ebp,%ebp
   21fa8:	4c 89 c3             	mov    %r8,%rbx
   21fab:	89 f8                	mov    %edi,%eax
   21fad:	83 e0 1f             	and    $0x1f,%eax
   21fb0:	40 80 ff df          	cmp    $0xdf,%dil
   21fb4:	77 c6                	ja     21f7c <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0x27c>
   21fb6:	c1 e0 06             	shl    $0x6,%eax
   21fb9:	09 c5                	or     %eax,%ebp
   21fbb:	84 d2                	test   %dl,%dl
   21fbd:	0f 84 5c ff ff ff    	je     21f1f <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0x21f>
   21fc3:	e9 7a 01 00 00       	jmpq   22142 <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0x442>
   21fc8:	45 31 db             	xor    %r11d,%r11d
   21fcb:	4c 89 c3             	mov    %r8,%rbx
   21fce:	c1 e5 06             	shl    $0x6,%ebp
   21fd1:	44 09 dd             	or     %r11d,%ebp
   21fd4:	40 80 ff f0          	cmp    $0xf0,%dil
   21fd8:	73 bf                	jae    21f99 <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0x299>
   21fda:	c1 e0 0c             	shl    $0xc,%eax
   21fdd:	09 c5                	or     %eax,%ebp
   21fdf:	4c 8b 5c 24 10       	mov    0x10(%rsp),%r11
   21fe4:	84 d2                	test   %dl,%dl
   21fe6:	0f 84 33 ff ff ff    	je     21f1f <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0x21f>
   21fec:	e9 51 01 00 00       	jmpq   22142 <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0x442>
   21ff1:	31 ff                	xor    %edi,%edi
   21ff3:	4c 8b 5c 24 10       	mov    0x10(%rsp),%r11
   21ff8:	83 e0 07             	and    $0x7,%eax
   21ffb:	c1 e0 12             	shl    $0x12,%eax
   21ffe:	c1 e5 06             	shl    $0x6,%ebp
   22001:	09 c5                	or     %eax,%ebp
   22003:	09 fd                	or     %edi,%ebp
   22005:	84 d2                	test   %dl,%dl
   22007:	0f 84 12 ff ff ff    	je     21f1f <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0x21f>
   2200d:	e9 30 01 00 00       	jmpq   22142 <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0x442>
   22012:	4c 39 f9             	cmp    %r15,%rcx
   22015:	0f 83 85 0a 00 00    	jae    22aa0 <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0xda0>
   2201b:	4c 8b 94 24 80 00 00 	mov    0x80(%rsp),%r10
   22022:	00 
   22023:	48 8b 6c 24 68       	mov    0x68(%rsp),%rbp
   22028:	48 8b 44 24 78       	mov    0x78(%rsp),%rax
   2202d:	48 89 84 24 a8 00 00 	mov    %rax,0xa8(%rsp)
   22034:	00 
   22035:	48 8d 04 2f          	lea    (%rdi,%rbp,1),%rax
   22039:	48 89 84 24 b0 00 00 	mov    %rax,0xb0(%rsp)
   22040:	00 
   22041:	4d 8d 2c 29          	lea    (%r9,%rbp,1),%r13
   22045:	48 89 de             	mov    %rbx,%rsi
   22048:	41 0f b6 0c 09       	movzbl (%r9,%rcx,1),%ecx
   2204d:	49 0f a3 ca          	bt     %rcx,%r10
   22051:	72 21                	jb     22074 <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0x374>
   22053:	48 01 d6             	add    %rdx,%rsi
   22056:	48 89 f3             	mov    %rsi,%rbx
   22059:	4a 8d 0c 03          	lea    (%rbx,%r8,1),%rcx
   2205d:	4c 39 f9             	cmp    %r15,%rcx
   22060:	0f 83 32 0a 00 00    	jae    22a98 <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0xd98>
   22066:	48 89 de             	mov    %rbx,%rsi
   22069:	41 0f b6 0c 09       	movzbl (%r9,%rcx,1),%ecx
   2206e:	49 0f a3 ca          	bt     %rcx,%r10
   22072:	73 df                	jae    22053 <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0x353>
   22074:	45 31 db             	xor    %r11d,%r11d
   22077:	48 89 f3             	mov    %rsi,%rbx
   2207a:	4c 8b b4 24 b0 00 00 	mov    0xb0(%rsp),%r14
   22081:	00 
   22082:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   22089:	00 00 00 
   2208c:	0f 1f 40 00          	nopl   0x0(%rax)
   22090:	49 8d 0c 2b          	lea    (%r11,%rbp,1),%rcx
   22094:	48 39 d1             	cmp    %rdx,%rcx
   22097:	73 26                	jae    220bf <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0x3bf>
   22099:	48 8d 0c 2b          	lea    (%rbx,%rbp,1),%rcx
   2209d:	4c 39 f9             	cmp    %r15,%rcx
   220a0:	0f 83 d0 0a 00 00    	jae    22b76 <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0xe76>
   220a6:	41 0f b6 06          	movzbl (%r14),%eax
   220aa:	49 83 c6 01          	add    $0x1,%r14
   220ae:	49 83 c3 01          	add    $0x1,%r11
   220b2:	41 3a 44 1d 00       	cmp    0x0(%r13,%rbx,1),%al
   220b7:	48 8d 5b 01          	lea    0x1(%rbx),%rbx
   220bb:	74 d3                	je     22090 <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0x390>
   220bd:	eb 9a                	jmp    22059 <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0x359>
   220bf:	48 89 e9             	mov    %rbp,%rcx
   220c2:	4c 8b 5c 24 10       	mov    0x10(%rsp),%r11
   220c7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   220ce:	00 00 
   220d0:	48 85 c9             	test   %rcx,%rcx
   220d3:	74 5a                	je     2212f <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0x42f>
   220d5:	48 83 c1 ff          	add    $0xffffffffffffffff,%rcx
   220d9:	48 39 d1             	cmp    %rdx,%rcx
   220dc:	0f 83 bf 0a 00 00    	jae    22ba1 <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0xea1>
   220e2:	48 8d 1c 31          	lea    (%rcx,%rsi,1),%rbx
   220e6:	4c 39 fb             	cmp    %r15,%rbx
   220e9:	0f 83 c3 0a 00 00    	jae    22bb2 <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0xeb2>
   220ef:	0f b6 04 0f          	movzbl (%rdi,%rcx,1),%eax
   220f3:	41 3a 04 19          	cmp    (%r9,%rbx,1),%al
   220f7:	74 d7                	je     220d0 <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0x3d0>
   220f9:	48 03 b4 24 a8 00 00 	add    0xa8(%rsp),%rsi
   22100:	00 
   22101:	e9 50 ff ff ff       	jmpq   22056 <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0x356>
   22106:	48 01 da             	add    %rbx,%rdx
   22109:	48 89 94 24 88 00 00 	mov    %rdx,0x88(%rsp)
   22110:	00 
   22111:	48 c7 84 24 98 00 00 	movq   $0x0,0x98(%rsp)
   22118:	00 00 00 00 00 
   2211d:	48 89 de             	mov    %rbx,%rsi
   22120:	4c 8b bc 24 b8 00 00 	mov    0xb8(%rsp),%r15
   22127:	00 
   22128:	4c 8b 5c 24 10       	mov    0x10(%rsp),%r11
   2212d:	eb 13                	jmp    22142 <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0x442>
   2212f:	48 01 f2             	add    %rsi,%rdx
   22132:	48 89 94 24 88 00 00 	mov    %rdx,0x88(%rsp)
   22139:	00 
   2213a:	4c 8b bc 24 b8 00 00 	mov    0xb8(%rsp),%r15
   22141:	00 
   22142:	48 89 f0             	mov    %rsi,%rax
   22145:	4c 89 5c 24 18       	mov    %r11,0x18(%rsp)
   2214a:	4c 89 64 24 20       	mov    %r12,0x20(%rsp)
   2214f:	4c 89 64 24 30       	mov    %r12,0x30(%rsp)
   22154:	48 83 c0 06          	add    $0x6,%rax
   22158:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   2215d:	74 16                	je     22175 <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0x475>
   2215f:	4c 39 e0             	cmp    %r12,%rax
   22162:	74 11                	je     22175 <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0x475>
   22164:	0f 83 5c 0a 00 00    	jae    22bc6 <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0xec6>
   2216a:	41 80 3c 03 bf       	cmpb   $0xbf,(%r11,%rax,1)
   2216f:	0f 8e 51 0a 00 00    	jle    22bc6 <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0xec6>
   22175:	4c 39 e0             	cmp    %r12,%rax
   22178:	0f 84 39 01 00 00    	je     222b7 <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0x5b7>
   2217e:	4b 8d 0c 23          	lea    (%r11,%r12,1),%rcx
   22182:	4c 01 d8             	add    %r11,%rax
   22185:	48 8d 50 01          	lea    0x1(%rax),%rdx
   22189:	0f b6 38             	movzbl (%rax),%edi
   2218c:	40 84 ff             	test   %dil,%dil
   2218f:	79 24                	jns    221b5 <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0x4b5>
   22191:	eb 3d                	jmp    221d0 <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0x4d0>
   22193:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2219a:	00 00 00 
   2219d:	0f 1f 00             	nopl   (%rax)
   221a0:	48 39 c8             	cmp    %rcx,%rax
   221a3:	0f 84 0e 01 00 00    	je     222b7 <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0x5b7>
   221a9:	48 8d 50 01          	lea    0x1(%rax),%rdx
   221ad:	0f b6 38             	movzbl (%rax),%edi
   221b0:	40 84 ff             	test   %dil,%dil
   221b3:	78 1b                	js     221d0 <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0x4d0>
   221b5:	48 89 d0             	mov    %rdx,%rax
   221b8:	89 fa                	mov    %edi,%edx
   221ba:	8d 7a bf             	lea    -0x41(%rdx),%edi
   221bd:	83 ff 06             	cmp    $0x6,%edi
   221c0:	72 de                	jb     221a0 <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0x4a0>
   221c2:	e9 c5 00 00 00       	jmpq   2228c <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0x58c>
   221c7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   221ce:	00 00 
   221d0:	48 39 ca             	cmp    %rcx,%rdx
   221d3:	74 41                	je     22216 <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0x516>
   221d5:	0f b6 50 01          	movzbl 0x1(%rax),%edx
   221d9:	48 83 c0 02          	add    $0x2,%rax
   221dd:	83 e2 3f             	and    $0x3f,%edx
   221e0:	89 fd                	mov    %edi,%ebp
   221e2:	83 e5 1f             	and    $0x1f,%ebp
   221e5:	40 80 ff df          	cmp    $0xdf,%dil
   221e9:	76 3b                	jbe    22226 <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0x526>
   221eb:	48 39 c8             	cmp    %rcx,%rax
   221ee:	74 49                	je     22239 <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0x539>
   221f0:	0f b6 18             	movzbl (%rax),%ebx
   221f3:	48 83 c0 01          	add    $0x1,%rax
   221f7:	83 e3 3f             	and    $0x3f,%ebx
   221fa:	c1 e2 06             	shl    $0x6,%edx
   221fd:	09 da                	or     %ebx,%edx
   221ff:	40 80 ff f0          	cmp    $0xf0,%dil
   22203:	72 44                	jb     22249 <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0x549>
   22205:	48 39 c8             	cmp    %rcx,%rax
   22208:	74 52                	je     2225c <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0x55c>
   2220a:	0f b6 38             	movzbl (%rax),%edi
   2220d:	48 83 c0 01          	add    $0x1,%rax
   22211:	83 e7 3f             	and    $0x3f,%edi
   22214:	eb 4b                	jmp    22261 <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0x561>
   22216:	31 d2                	xor    %edx,%edx
   22218:	48 89 c8             	mov    %rcx,%rax
   2221b:	89 fd                	mov    %edi,%ebp
   2221d:	83 e5 1f             	and    $0x1f,%ebp
   22220:	40 80 ff df          	cmp    $0xdf,%dil
   22224:	77 c5                	ja     221eb <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0x4eb>
   22226:	c1 e5 06             	shl    $0x6,%ebp
   22229:	09 ea                	or     %ebp,%edx
   2222b:	8d 7a bf             	lea    -0x41(%rdx),%edi
   2222e:	83 ff 06             	cmp    $0x6,%edi
   22231:	0f 82 69 ff ff ff    	jb     221a0 <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0x4a0>
   22237:	eb 53                	jmp    2228c <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0x58c>
   22239:	31 db                	xor    %ebx,%ebx
   2223b:	48 89 c8             	mov    %rcx,%rax
   2223e:	c1 e2 06             	shl    $0x6,%edx
   22241:	09 da                	or     %ebx,%edx
   22243:	40 80 ff f0          	cmp    $0xf0,%dil
   22247:	73 bc                	jae    22205 <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0x505>
   22249:	c1 e5 0c             	shl    $0xc,%ebp
   2224c:	09 ea                	or     %ebp,%edx
   2224e:	8d 7a bf             	lea    -0x41(%rdx),%edi
   22251:	83 ff 06             	cmp    $0x6,%edi
   22254:	0f 82 46 ff ff ff    	jb     221a0 <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0x4a0>
   2225a:	eb 30                	jmp    2228c <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0x58c>
   2225c:	31 ff                	xor    %edi,%edi
   2225e:	48 89 c8             	mov    %rcx,%rax
   22261:	83 e5 07             	and    $0x7,%ebp
   22264:	c1 e5 12             	shl    $0x12,%ebp
   22267:	c1 e2 06             	shl    $0x6,%edx
   2226a:	09 ea                	or     %ebp,%edx
   2226c:	09 fa                	or     %edi,%edx
   2226e:	81 fa 00 00 11 00    	cmp    $0x110000,%edx
   22274:	74 41                	je     222b7 <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0x5b7>
   22276:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2227d:	00 00 00 
   22280:	8d 7a bf             	lea    -0x41(%rdx),%edi
   22283:	83 ff 06             	cmp    $0x6,%edi
   22286:	0f 82 14 ff ff ff    	jb     221a0 <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0x4a0>
   2228c:	83 fa 40             	cmp    $0x40,%edx
   2228f:	0f 84 0b ff ff ff    	je     221a0 <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0x4a0>
   22295:	83 c2 d0             	add    $0xffffffd0,%edx
   22298:	83 fa 09             	cmp    $0x9,%edx
   2229b:	0f 86 ff fe ff ff    	jbe    221a0 <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0x4a0>
   222a1:	49 83 fc 03          	cmp    $0x3,%r12
   222a5:	73 3e                	jae    222e5 <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0x5e5>
   222a7:	bd 03 00 00 00       	mov    $0x3,%ebp
   222ac:	49 83 fc 02          	cmp    $0x2,%r12
   222b0:	74 59                	je     2230b <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0x60b>
   222b2:	e9 29 08 00 00       	jmpq   22ae0 <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0xde0>
   222b7:	4c 89 5c 24 40       	mov    %r11,0x40(%rsp)
   222bc:	4c 89 64 24 48       	mov    %r12,0x48(%rsp)
   222c1:	48 85 f6             	test   %rsi,%rsi
   222c4:	74 16                	je     222dc <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0x5dc>
   222c6:	4c 39 e6             	cmp    %r12,%rsi
   222c9:	74 11                	je     222dc <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0x5dc>
   222cb:	0f 83 1f 09 00 00    	jae    22bf0 <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0xef0>
   222d1:	41 80 3c 33 bf       	cmpb   $0xbf,(%r11,%rsi,1)
   222d6:	0f 8e 14 09 00 00    	jle    22bf0 <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0xef0>
   222dc:	49 89 f4             	mov    %rsi,%r12
   222df:	49 83 fc 03          	cmp    $0x3,%r12
   222e3:	72 c2                	jb     222a7 <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0x5a7>
   222e5:	48 8d 05 a9 af 01 00 	lea    0x1afa9(%rip),%rax        # 3d295 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x935>
   222ec:	49 39 c3             	cmp    %rax,%r11
   222ef:	0f 84 94 00 00 00    	je     22389 <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0x689>
   222f5:	41 0f b7 03          	movzwl (%r11),%eax
   222f9:	35 5f 5a 00 00       	xor    $0x5a5f,%eax
   222fe:	41 0f b6 4b 02       	movzbl 0x2(%r11),%ecx
   22303:	83 f1 4e             	xor    $0x4e,%ecx
   22306:	66 09 c1             	or     %ax,%cx
   22309:	74 7e                	je     22389 <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0x689>
   2230b:	48 8d 05 86 af 01 00 	lea    0x1af86(%rip),%rax        # 3d298 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x938>
   22312:	49 39 c3             	cmp    %rax,%r11
   22315:	0f 84 a5 00 00 00    	je     223c0 <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0x6c0>
   2231b:	41 0f b7 03          	movzwl (%r11),%eax
   2231f:	3d 5a 4e 00 00       	cmp    $0x4e5a,%eax
   22324:	0f 84 96 00 00 00    	je     223c0 <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0x6c0>
   2232a:	49 83 fc 04          	cmp    $0x4,%r12
   2232e:	0f 82 48 03 00 00    	jb     2267c <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0x97c>
   22334:	48 8d 05 59 a1 01 00 	lea    0x1a159(%rip),%rax        # 3c494 <_ZN4core7unicode12unicode_data15grapheme_extend6BITSET17h68ce7f61ccfa32feE+0x9f4>
   2233b:	4c 8b 5c 24 10       	mov    0x10(%rsp),%r11
   22340:	49 39 c3             	cmp    %rax,%r11
   22343:	74 0d                	je     22352 <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0x652>
   22345:	41 81 3b 5f 5f 5a 4e 	cmpl   $0x4e5a5f5f,(%r11)
   2234c:	0f 85 35 03 00 00    	jne    22687 <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0x987>
   22352:	4c 89 5c 24 18       	mov    %r11,0x18(%rsp)
   22357:	4c 89 64 24 20       	mov    %r12,0x20(%rsp)
   2235c:	48 c7 44 24 08 04 00 	movq   $0x4,0x8(%rsp)
   22363:	00 00 
   22365:	4c 89 64 24 30       	mov    %r12,0x30(%rsp)
   2236a:	48 c7 c3 fc ff ff ff 	mov    $0xfffffffffffffffc,%rbx
   22371:	41 bd 04 00 00 00    	mov    $0x4,%r13d
   22377:	49 83 fc 04          	cmp    $0x4,%r12
   2237b:	74 79                	je     223f6 <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0x6f6>
   2237d:	41 80 7b 04 bf       	cmpb   $0xbf,0x4(%r11)
   22382:	7f 72                	jg     223f6 <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0x6f6>
   22384:	e9 3d 08 00 00       	jmpq   22bc6 <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0xec6>
   22389:	4c 89 5c 24 18       	mov    %r11,0x18(%rsp)
   2238e:	4c 89 64 24 20       	mov    %r12,0x20(%rsp)
   22393:	48 c7 44 24 08 03 00 	movq   $0x3,0x8(%rsp)
   2239a:	00 00 
   2239c:	4c 89 64 24 30       	mov    %r12,0x30(%rsp)
   223a1:	48 c7 c3 fd ff ff ff 	mov    $0xfffffffffffffffd,%rbx
   223a8:	41 bd 03 00 00 00    	mov    $0x3,%r13d
   223ae:	49 83 fc 03          	cmp    $0x3,%r12
   223b2:	74 42                	je     223f6 <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0x6f6>
   223b4:	41 80 7b 03 bf       	cmpb   $0xbf,0x3(%r11)
   223b9:	7f 3b                	jg     223f6 <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0x6f6>
   223bb:	e9 06 08 00 00       	jmpq   22bc6 <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0xec6>
   223c0:	4c 89 5c 24 18       	mov    %r11,0x18(%rsp)
   223c5:	4c 89 64 24 20       	mov    %r12,0x20(%rsp)
   223ca:	48 c7 44 24 08 02 00 	movq   $0x2,0x8(%rsp)
   223d1:	00 00 
   223d3:	4c 89 64 24 30       	mov    %r12,0x30(%rsp)
   223d8:	48 c7 c3 fe ff ff ff 	mov    $0xfffffffffffffffe,%rbx
   223df:	41 bd 02 00 00 00    	mov    $0x2,%r13d
   223e5:	49 83 fc 02          	cmp    $0x2,%r12
   223e9:	74 0b                	je     223f6 <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0x6f6>
   223eb:	41 80 7b 02 bf       	cmpb   $0xbf,0x2(%r11)
   223f0:	0f 8e d0 07 00 00    	jle    22bc6 <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0xec6>
   223f6:	4d 01 dd             	add    %r11,%r13
   223f9:	4c 01 e3             	add    %r12,%rbx
   223fc:	4e 8d 14 2b          	lea    (%rbx,%r13,1),%r10
   22400:	31 c0                	xor    %eax,%eax
   22402:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   22409:	00 00 00 
   2240c:	0f 1f 40 00          	nopl   0x0(%rax)
   22410:	48 39 c3             	cmp    %rax,%rbx
   22413:	74 11                	je     22426 <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0x726>
   22415:	41 80 7c 05 00 00    	cmpb   $0x0,0x0(%r13,%rax,1)
   2241b:	48 8d 40 01          	lea    0x1(%rax),%rax
   2241f:	79 ef                	jns    22410 <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0x710>
   22421:	e9 56 02 00 00       	jmpq   2267c <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0x97c>
   22426:	48 85 db             	test   %rbx,%rbx
   22429:	0f 84 4d 02 00 00    	je     2267c <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0x97c>
   2242f:	4d 8d 75 01          	lea    0x1(%r13),%r14
   22433:	41 0f b6 55 00       	movzbl 0x0(%r13),%edx
   22438:	84 d2                	test   %dl,%dl
   2243a:	0f 88 5a 04 00 00    	js     2289a <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0xb9a>
   22440:	89 d7                	mov    %edx,%edi
   22442:	83 ff 45             	cmp    $0x45,%edi
   22445:	0f 84 c3 04 00 00    	je     2290e <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0xc0e>
   2244b:	81 ff 00 00 11 00    	cmp    $0x110000,%edi
   22451:	0f 84 25 02 00 00    	je     2267c <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0x97c>
   22457:	45 31 c0             	xor    %r8d,%r8d
   2245a:	41 b9 0a 00 00 00    	mov    $0xa,%r9d
   22460:	4c 89 f6             	mov    %r14,%rsi
   22463:	83 c7 d0             	add    $0xffffffd0,%edi
   22466:	83 ff 09             	cmp    $0x9,%edi
   22469:	0f 87 0d 02 00 00    	ja     2267c <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0x97c>
   2246f:	31 c0                	xor    %eax,%eax
   22471:	48 89 c1             	mov    %rax,%rcx
   22474:	49 f7 e1             	mul    %r9
   22477:	71 24                	jno    2249d <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0x79d>
   22479:	e9 fe 01 00 00       	jmpq   2267c <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0x97c>
   2247e:	66 90                	xchg   %ax,%ax
   22480:	89 ea                	mov    %ebp,%edx
   22482:	48 89 fe             	mov    %rdi,%rsi
   22485:	8d 7a d0             	lea    -0x30(%rdx),%edi
   22488:	83 ff 0a             	cmp    $0xa,%edi
   2248b:	0f 83 e1 00 00 00    	jae    22572 <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0x872>
   22491:	48 89 c1             	mov    %rax,%rcx
   22494:	49 f7 e1             	mul    %r9
   22497:	0f 80 df 01 00 00    	jo     2267c <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0x97c>
   2249d:	41 89 fb             	mov    %edi,%r11d
   224a0:	4c 01 d8             	add    %r11,%rax
   224a3:	0f 82 d3 01 00 00    	jb     2267c <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0x97c>
   224a9:	4c 39 d6             	cmp    %r10,%rsi
   224ac:	0f 84 ca 01 00 00    	je     2267c <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0x97c>
   224b2:	48 8d 7e 01          	lea    0x1(%rsi),%rdi
   224b6:	0f b6 2e             	movzbl (%rsi),%ebp
   224b9:	40 84 ed             	test   %bpl,%bpl
   224bc:	79 c2                	jns    22480 <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0x780>
   224be:	4c 39 d7             	cmp    %r10,%rdi
   224c1:	74 44                	je     22507 <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0x807>
   224c3:	0f b6 56 01          	movzbl 0x1(%rsi),%edx
   224c7:	48 83 c6 02          	add    $0x2,%rsi
   224cb:	83 e2 3f             	and    $0x3f,%edx
   224ce:	89 ef                	mov    %ebp,%edi
   224d0:	83 e7 1f             	and    $0x1f,%edi
   224d3:	40 80 fd df          	cmp    $0xdf,%bpl
   224d7:	76 3e                	jbe    22517 <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0x817>
   224d9:	4c 39 d6             	cmp    %r10,%rsi
   224dc:	74 4c                	je     2252a <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0x82a>
   224de:	44 0f b6 36          	movzbl (%rsi),%r14d
   224e2:	48 83 c6 01          	add    $0x1,%rsi
   224e6:	41 83 e6 3f          	and    $0x3f,%r14d
   224ea:	c1 e2 06             	shl    $0x6,%edx
   224ed:	44 09 f2             	or     %r14d,%edx
   224f0:	40 80 fd f0          	cmp    $0xf0,%bpl
   224f4:	72 46                	jb     2253c <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0x83c>
   224f6:	4c 39 d6             	cmp    %r10,%rsi
   224f9:	74 54                	je     2254f <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0x84f>
   224fb:	0f b6 2e             	movzbl (%rsi),%ebp
   224fe:	48 83 c6 01          	add    $0x1,%rsi
   22502:	83 e5 3f             	and    $0x3f,%ebp
   22505:	eb 4d                	jmp    22554 <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0x854>
   22507:	31 d2                	xor    %edx,%edx
   22509:	4c 89 d6             	mov    %r10,%rsi
   2250c:	89 ef                	mov    %ebp,%edi
   2250e:	83 e7 1f             	and    $0x1f,%edi
   22511:	40 80 fd df          	cmp    $0xdf,%bpl
   22515:	77 c2                	ja     224d9 <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0x7d9>
   22517:	c1 e7 06             	shl    $0x6,%edi
   2251a:	09 fa                	or     %edi,%edx
   2251c:	8d 7a d0             	lea    -0x30(%rdx),%edi
   2251f:	83 ff 0a             	cmp    $0xa,%edi
   22522:	0f 82 69 ff ff ff    	jb     22491 <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0x791>
   22528:	eb 48                	jmp    22572 <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0x872>
   2252a:	45 31 f6             	xor    %r14d,%r14d
   2252d:	4c 89 d6             	mov    %r10,%rsi
   22530:	c1 e2 06             	shl    $0x6,%edx
   22533:	44 09 f2             	or     %r14d,%edx
   22536:	40 80 fd f0          	cmp    $0xf0,%bpl
   2253a:	73 ba                	jae    224f6 <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0x7f6>
   2253c:	c1 e7 0c             	shl    $0xc,%edi
   2253f:	09 fa                	or     %edi,%edx
   22541:	8d 7a d0             	lea    -0x30(%rdx),%edi
   22544:	83 ff 0a             	cmp    $0xa,%edi
   22547:	0f 82 44 ff ff ff    	jb     22491 <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0x791>
   2254d:	eb 23                	jmp    22572 <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0x872>
   2254f:	31 ed                	xor    %ebp,%ebp
   22551:	4c 89 d6             	mov    %r10,%rsi
   22554:	83 e7 07             	and    $0x7,%edi
   22557:	c1 e7 12             	shl    $0x12,%edi
   2255a:	c1 e2 06             	shl    $0x6,%edx
   2255d:	09 fa                	or     %edi,%edx
   2255f:	09 ea                	or     %ebp,%edx
   22561:	81 fa 00 00 11 00    	cmp    $0x110000,%edx
   22567:	0f 85 18 ff ff ff    	jne    22485 <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0x785>
   2256d:	e9 0a 01 00 00       	jmpq   2267c <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0x97c>
   22572:	48 85 c0             	test   %rax,%rax
   22575:	0f 84 e7 00 00 00    	je     22662 <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0x962>
   2257b:	48 8d 04 89          	lea    (%rcx,%rcx,4),%rax
   2257f:	49 8d 0c 43          	lea    (%r11,%rax,2),%rcx
   22583:	4c 39 d6             	cmp    %r10,%rsi
   22586:	75 1d                	jne    225a5 <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0x8a5>
   22588:	e9 ef 00 00 00       	jmpq   2267c <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0x97c>
   2258d:	89 fa                	mov    %edi,%edx
   2258f:	4c 89 f6             	mov    %r14,%rsi
   22592:	48 83 c1 ff          	add    $0xffffffffffffffff,%rcx
   22596:	0f 84 c9 00 00 00    	je     22665 <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0x965>
   2259c:	4c 39 d6             	cmp    %r10,%rsi
   2259f:	0f 84 d7 00 00 00    	je     2267c <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0x97c>
   225a5:	4c 8d 76 01          	lea    0x1(%rsi),%r14
   225a9:	0f b6 3e             	movzbl (%rsi),%edi
   225ac:	40 84 ff             	test   %dil,%dil
   225af:	79 dc                	jns    2258d <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0x88d>
   225b1:	4d 39 d6             	cmp    %r10,%r14
   225b4:	74 36                	je     225ec <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0x8ec>
   225b6:	0f b6 56 01          	movzbl 0x1(%rsi),%edx
   225ba:	48 83 c6 02          	add    $0x2,%rsi
   225be:	83 e2 3f             	and    $0x3f,%edx
   225c1:	49 89 f6             	mov    %rsi,%r14
   225c4:	89 fe                	mov    %edi,%esi
   225c6:	83 e6 1f             	and    $0x1f,%esi
   225c9:	40 80 ff df          	cmp    $0xdf,%dil
   225cd:	76 2d                	jbe    225fc <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0x8fc>
   225cf:	4d 39 d6             	cmp    %r10,%r14
   225d2:	74 38                	je     2260c <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0x90c>
   225d4:	41 0f b6 2e          	movzbl (%r14),%ebp
   225d8:	49 83 c6 01          	add    $0x1,%r14
   225dc:	83 e5 3f             	and    $0x3f,%ebp
   225df:	c1 e2 06             	shl    $0x6,%edx
   225e2:	09 ea                	or     %ebp,%edx
   225e4:	40 80 ff f0          	cmp    $0xf0,%dil
   225e8:	73 32                	jae    2261c <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0x91c>
   225ea:	eb 42                	jmp    2262e <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0x92e>
   225ec:	31 d2                	xor    %edx,%edx
   225ee:	4d 89 d6             	mov    %r10,%r14
   225f1:	89 fe                	mov    %edi,%esi
   225f3:	83 e6 1f             	and    $0x1f,%esi
   225f6:	40 80 ff df          	cmp    $0xdf,%dil
   225fa:	77 d3                	ja     225cf <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0x8cf>
   225fc:	c1 e6 06             	shl    $0x6,%esi
   225ff:	09 f2                	or     %esi,%edx
   22601:	4c 89 f6             	mov    %r14,%rsi
   22604:	48 83 c1 ff          	add    $0xffffffffffffffff,%rcx
   22608:	75 92                	jne    2259c <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0x89c>
   2260a:	eb 59                	jmp    22665 <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0x965>
   2260c:	31 ed                	xor    %ebp,%ebp
   2260e:	4d 89 d6             	mov    %r10,%r14
   22611:	c1 e2 06             	shl    $0x6,%edx
   22614:	09 ea                	or     %ebp,%edx
   22616:	40 80 ff f0          	cmp    $0xf0,%dil
   2261a:	72 12                	jb     2262e <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0x92e>
   2261c:	4d 39 d6             	cmp    %r10,%r14
   2261f:	74 21                	je     22642 <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0x942>
   22621:	41 0f b6 3e          	movzbl (%r14),%edi
   22625:	49 83 c6 01          	add    $0x1,%r14
   22629:	83 e7 3f             	and    $0x3f,%edi
   2262c:	eb 19                	jmp    22647 <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0x947>
   2262e:	c1 e6 0c             	shl    $0xc,%esi
   22631:	09 f2                	or     %esi,%edx
   22633:	4c 89 f6             	mov    %r14,%rsi
   22636:	48 83 c1 ff          	add    $0xffffffffffffffff,%rcx
   2263a:	0f 85 5c ff ff ff    	jne    2259c <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0x89c>
   22640:	eb 23                	jmp    22665 <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0x965>
   22642:	31 ff                	xor    %edi,%edi
   22644:	4d 89 d6             	mov    %r10,%r14
   22647:	83 e6 07             	and    $0x7,%esi
   2264a:	c1 e6 12             	shl    $0x12,%esi
   2264d:	c1 e2 06             	shl    $0x6,%edx
   22650:	09 f2                	or     %esi,%edx
   22652:	09 fa                	or     %edi,%edx
   22654:	81 fa 00 00 11 00    	cmp    $0x110000,%edx
   2265a:	0f 85 2f ff ff ff    	jne    2258f <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0x88f>
   22660:	eb 1a                	jmp    2267c <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0x97c>
   22662:	49 89 f6             	mov    %rsi,%r14
   22665:	49 83 c0 01          	add    $0x1,%r8
   22669:	89 d7                	mov    %edx,%edi
   2266b:	4c 89 f6             	mov    %r14,%rsi
   2266e:	83 fa 45             	cmp    $0x45,%edx
   22671:	0f 85 ec fd ff ff    	jne    22463 <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0x763>
   22677:	e9 95 02 00 00       	jmpq   22911 <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0xc11>
   2267c:	49 83 fc 03          	cmp    $0x3,%r12
   22680:	4c 8b 5c 24 10       	mov    0x10(%rsp),%r11
   22685:	72 56                	jb     226dd <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0x9dd>
   22687:	48 8d 05 0c ac 01 00 	lea    0x1ac0c(%rip),%rax        # 3d29a <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x93a>
   2268e:	49 39 c3             	cmp    %rax,%r11
   22691:	74 0b                	je     2269e <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0x99e>
   22693:	41 0f b7 03          	movzwl (%r11),%eax
   22697:	3d 5f 52 00 00       	cmp    $0x525f,%eax
   2269c:	75 4e                	jne    226ec <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0x9ec>
   2269e:	4c 89 5c 24 18       	mov    %r11,0x18(%rsp)
   226a3:	4c 89 64 24 20       	mov    %r12,0x20(%rsp)
   226a8:	48 c7 44 24 08 02 00 	movq   $0x2,0x8(%rsp)
   226af:	00 00 
   226b1:	4c 89 64 24 30       	mov    %r12,0x30(%rsp)
   226b6:	41 8a 43 02          	mov    0x2(%r11),%al
   226ba:	3c bf                	cmp    $0xbf,%al
   226bc:	0f 8e 04 05 00 00    	jle    22bc6 <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0xec6>
   226c2:	4d 8d 6b 02          	lea    0x2(%r11),%r13
   226c6:	48 c7 c3 fe ff ff ff 	mov    $0xfffffffffffffffe,%rbx
   226cd:	04 bf                	add    $0xbf,%al
   226cf:	bd 03 00 00 00       	mov    $0x3,%ebp
   226d4:	3c 19                	cmp    $0x19,%al
   226d6:	76 68                	jbe    22740 <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0xa40>
   226d8:	e9 03 04 00 00       	jmpq   22ae0 <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0xde0>
   226dd:	bd 03 00 00 00       	mov    $0x3,%ebp
   226e2:	49 83 fc 02          	cmp    $0x2,%r12
   226e6:	0f 85 f4 03 00 00    	jne    22ae0 <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0xde0>
   226ec:	48 8d 05 a9 ab 01 00 	lea    0x1aba9(%rip),%rax        # 3d29c <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x93c>
   226f3:	49 39 c3             	cmp    %rax,%r11
   226f6:	74 0a                	je     22702 <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0xa02>
   226f8:	41 80 3b 52          	cmpb   $0x52,(%r11)
   226fc:	0f 85 20 01 00 00    	jne    22822 <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0xb22>
   22702:	4c 89 5c 24 18       	mov    %r11,0x18(%rsp)
   22707:	4c 89 64 24 20       	mov    %r12,0x20(%rsp)
   2270c:	48 c7 44 24 08 01 00 	movq   $0x1,0x8(%rsp)
   22713:	00 00 
   22715:	4c 89 64 24 30       	mov    %r12,0x30(%rsp)
   2271a:	41 8a 43 01          	mov    0x1(%r11),%al
   2271e:	3c bf                	cmp    $0xbf,%al
   22720:	0f 8e a0 04 00 00    	jle    22bc6 <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0xec6>
   22726:	4d 8d 6b 01          	lea    0x1(%r11),%r13
   2272a:	48 c7 c3 ff ff ff ff 	mov    $0xffffffffffffffff,%rbx
   22731:	04 bf                	add    $0xbf,%al
   22733:	bd 03 00 00 00       	mov    $0x3,%ebp
   22738:	3c 19                	cmp    $0x19,%al
   2273a:	0f 87 a0 03 00 00    	ja     22ae0 <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0xde0>
   22740:	4c 01 e3             	add    %r12,%rbx
   22743:	31 c0                	xor    %eax,%eax
   22745:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2274c:	00 00 00 
   2274f:	90                   	nop
   22750:	48 39 c3             	cmp    %rax,%rbx
   22753:	74 11                	je     22766 <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0xa66>
   22755:	41 80 7c 05 00 00    	cmpb   $0x0,0x0(%r13,%rax,1)
   2275b:	48 8d 40 01          	lea    0x1(%rax),%rax
   2275f:	79 ef                	jns    22750 <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0xa50>
   22761:	e9 7a 03 00 00       	jmpq   22ae0 <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0xde0>
   22766:	4c 89 6c 24 18       	mov    %r13,0x18(%rsp)
   2276b:	48 89 5c 24 20       	mov    %rbx,0x20(%rsp)
   22770:	48 c7 44 24 28 00 00 	movq   $0x0,0x28(%rsp)
   22777:	00 00 
   22779:	48 8d 7c 24 18       	lea    0x18(%rsp),%rdi
   2277e:	e8 4d c7 ff ff       	callq  1eed0 <_ZN14rustc_demangle2v06Parser9skip_path17h92f436ed624d331fE>
   22783:	84 c0                	test   %al,%al
   22785:	0f 85 55 03 00 00    	jne    22ae0 <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0xde0>
   2278b:	4c 8b 54 24 20       	mov    0x20(%rsp),%r10
   22790:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
   22795:	49 39 ca             	cmp    %rcx,%r10
   22798:	76 2f                	jbe    227c9 <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0xac9>
   2279a:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   2279f:	8a 04 08             	mov    (%rax,%rcx,1),%al
   227a2:	04 bf                	add    $0xbf,%al
   227a4:	3c 19                	cmp    $0x19,%al
   227a6:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   227ab:	77 21                	ja     227ce <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0xace>
   227ad:	48 8d 7c 24 18       	lea    0x18(%rsp),%rdi
   227b2:	e8 19 c7 ff ff       	callq  1eed0 <_ZN14rustc_demangle2v06Parser9skip_path17h92f436ed624d331fE>
   227b7:	84 c0                	test   %al,%al
   227b9:	0f 85 21 03 00 00    	jne    22ae0 <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0xde0>
   227bf:	4c 8b 54 24 20       	mov    0x20(%rsp),%r10
   227c4:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
   227c9:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   227ce:	4c 8b 74 24 18       	mov    0x18(%rsp),%r14
   227d3:	4c 89 74 24 30       	mov    %r14,0x30(%rsp)
   227d8:	4c 89 54 24 38       	mov    %r10,0x38(%rsp)
   227dd:	48 89 8c 24 c0 00 00 	mov    %rcx,0xc0(%rsp)
   227e4:	00 
   227e5:	4c 89 54 24 08       	mov    %r10,0x8(%rsp)
   227ea:	48 85 c9             	test   %rcx,%rcx
   227ed:	74 16                	je     22805 <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0xb05>
   227ef:	49 39 ca             	cmp    %rcx,%r10
   227f2:	74 11                	je     22805 <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0xb05>
   227f4:	0f 86 02 04 00 00    	jbe    22bfc <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0xefc>
   227fa:	41 80 3c 0e bf       	cmpb   $0xbf,(%r14,%rcx,1)
   227ff:	0f 8e f7 03 00 00    	jle    22bfc <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0xefc>
   22805:	49 01 ce             	add    %rcx,%r14
   22808:	49 29 ca             	sub    %rcx,%r10
   2280b:	41 b9 01 00 00 00    	mov    $0x1,%r9d
   22811:	4d 85 d2             	test   %r10,%r10
   22814:	0f 85 0b 01 00 00    	jne    22925 <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0xc25>
   2281a:	45 31 d2             	xor    %r10d,%r10d
   2281d:	e9 9f 02 00 00       	jmpq   22ac1 <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0xdc1>
   22822:	bd 03 00 00 00       	mov    $0x3,%ebp
   22827:	49 83 fc 03          	cmp    $0x3,%r12
   2282b:	0f 86 af 02 00 00    	jbe    22ae0 <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0xde0>
   22831:	48 8d 05 65 aa 01 00 	lea    0x1aa65(%rip),%rax        # 3d29d <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x93d>
   22838:	49 39 c3             	cmp    %rax,%r11
   2283b:	74 1a                	je     22857 <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0xb57>
   2283d:	41 0f b7 03          	movzwl (%r11),%eax
   22841:	35 5f 5f 00 00       	xor    $0x5f5f,%eax
   22846:	41 0f b6 4b 02       	movzbl 0x2(%r11),%ecx
   2284b:	83 f1 52             	xor    $0x52,%ecx
   2284e:	66 09 c1             	or     %ax,%cx
   22851:	0f 85 89 02 00 00    	jne    22ae0 <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0xde0>
   22857:	4c 89 5c 24 18       	mov    %r11,0x18(%rsp)
   2285c:	4c 89 64 24 20       	mov    %r12,0x20(%rsp)
   22861:	48 c7 44 24 08 03 00 	movq   $0x3,0x8(%rsp)
   22868:	00 00 
   2286a:	4c 89 64 24 30       	mov    %r12,0x30(%rsp)
   2286f:	41 8a 43 03          	mov    0x3(%r11),%al
   22873:	3c bf                	cmp    $0xbf,%al
   22875:	0f 8e 4b 03 00 00    	jle    22bc6 <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0xec6>
   2287b:	4d 8d 6b 03          	lea    0x3(%r11),%r13
   2287f:	48 c7 c3 fd ff ff ff 	mov    $0xfffffffffffffffd,%rbx
   22886:	04 bf                	add    $0xbf,%al
   22888:	bd 03 00 00 00       	mov    $0x3,%ebp
   2288d:	3c 19                	cmp    $0x19,%al
   2288f:	0f 86 ab fe ff ff    	jbe    22740 <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0xa40>
   22895:	e9 46 02 00 00       	jmpq   22ae0 <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0xde0>
   2289a:	31 ff                	xor    %edi,%edi
   2289c:	4c 89 d6             	mov    %r10,%rsi
   2289f:	48 83 fb 01          	cmp    $0x1,%rbx
   228a3:	74 12                	je     228b7 <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0xbb7>
   228a5:	4d 89 ee             	mov    %r13,%r14
   228a8:	49 83 c6 02          	add    $0x2,%r14
   228ac:	41 0f b6 7d 01       	movzbl 0x1(%r13),%edi
   228b1:	83 e7 3f             	and    $0x3f,%edi
   228b4:	4c 89 f6             	mov    %r14,%rsi
   228b7:	89 d1                	mov    %edx,%ecx
   228b9:	83 e1 1f             	and    $0x1f,%ecx
   228bc:	80 fa df             	cmp    $0xdf,%dl
   228bf:	76 3f                	jbe    22900 <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0xc00>
   228c1:	4c 39 d6             	cmp    %r10,%rsi
   228c4:	0f 84 2b 02 00 00    	je     22af5 <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0xdf5>
   228ca:	0f b6 2e             	movzbl (%rsi),%ebp
   228cd:	48 83 c6 01          	add    $0x1,%rsi
   228d1:	83 e5 3f             	and    $0x3f,%ebp
   228d4:	49 89 f6             	mov    %rsi,%r14
   228d7:	c1 e7 06             	shl    $0x6,%edi
   228da:	09 ef                	or     %ebp,%edi
   228dc:	80 fa f0             	cmp    $0xf0,%dl
   228df:	0f 82 23 02 00 00    	jb     22b08 <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0xe08>
   228e5:	4c 39 d6             	cmp    %r10,%rsi
   228e8:	0f 84 2d 02 00 00    	je     22b1b <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0xe1b>
   228ee:	0f b6 16             	movzbl (%rsi),%edx
   228f1:	48 83 c6 01          	add    $0x1,%rsi
   228f5:	83 e2 3f             	and    $0x3f,%edx
   228f8:	49 89 f6             	mov    %rsi,%r14
   228fb:	e9 1d 02 00 00       	jmpq   22b1d <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0xe1d>
   22900:	c1 e1 06             	shl    $0x6,%ecx
   22903:	09 cf                	or     %ecx,%edi
   22905:	83 ff 45             	cmp    $0x45,%edi
   22908:	0f 85 3d fb ff ff    	jne    2244b <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0x74b>
   2290e:	45 31 c0             	xor    %r8d,%r8d
   22911:	4d 29 f2             	sub    %r14,%r10
   22914:	45 31 c9             	xor    %r9d,%r9d
   22917:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   2291c:	4d 85 d2             	test   %r10,%r10
   2291f:	0f 84 f5 fe ff ff    	je     2281a <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0xb1a>
   22925:	48 8d 05 f2 ac 01 00 	lea    0x1acf2(%rip),%rax        # 3d61e <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0xcbe>
   2292c:	49 39 c6             	cmp    %rax,%r14
   2292f:	74 0f                	je     22940 <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0xc40>
   22931:	bd 03 00 00 00       	mov    $0x3,%ebp
   22936:	41 80 3e 2e          	cmpb   $0x2e,(%r14)
   2293a:	0f 85 a0 01 00 00    	jne    22ae0 <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0xde0>
   22940:	4b 8d 14 16          	lea    (%r14,%r10,1),%rdx
   22944:	49 bb 3f 00 00 00 0f 	movabs $0xf0000003f,%r11
   2294b:	00 00 00 
   2294e:	4c 89 f7             	mov    %r14,%rdi
   22951:	48 8d 47 01          	lea    0x1(%rdi),%rax
   22955:	0f b6 2f             	movzbl (%rdi),%ebp
   22958:	40 84 ed             	test   %bpl,%bpl
   2295b:	79 22                	jns    2297f <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0xc7f>
   2295d:	eb 41                	jmp    229a0 <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0xca0>
   2295f:	90                   	nop
   22960:	49 0f a3 c3          	bt     %rax,%r11
   22964:	0f 83 1b 01 00 00    	jae    22a85 <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0xd85>
   2296a:	48 39 d7             	cmp    %rdx,%rdi
   2296d:	0f 84 49 01 00 00    	je     22abc <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0xdbc>
   22973:	48 8d 47 01          	lea    0x1(%rdi),%rax
   22977:	0f b6 2f             	movzbl (%rdi),%ebp
   2297a:	40 84 ed             	test   %bpl,%bpl
   2297d:	78 21                	js     229a0 <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0xca0>
   2297f:	48 89 c7             	mov    %rax,%rdi
   22982:	89 e9                	mov    %ebp,%ecx
   22984:	8d 41 df             	lea    -0x21(%rcx),%eax
   22987:	83 f8 0f             	cmp    $0xf,%eax
   2298a:	0f 83 cc 00 00 00    	jae    22a5c <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0xd5c>
   22990:	eb d8                	jmp    2296a <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0xc6a>
   22992:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   22999:	00 00 00 
   2299c:	0f 1f 40 00          	nopl   0x0(%rax)
   229a0:	48 39 d0             	cmp    %rdx,%rax
   229a3:	74 41                	je     229e6 <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0xce6>
   229a5:	0f b6 4f 01          	movzbl 0x1(%rdi),%ecx
   229a9:	48 83 c7 02          	add    $0x2,%rdi
   229ad:	83 e1 3f             	and    $0x3f,%ecx
   229b0:	89 ee                	mov    %ebp,%esi
   229b2:	83 e6 1f             	and    $0x1f,%esi
   229b5:	40 80 fd df          	cmp    $0xdf,%bpl
   229b9:	76 3b                	jbe    229f6 <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0xcf6>
   229bb:	48 39 d7             	cmp    %rdx,%rdi
   229be:	74 48                	je     22a08 <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0xd08>
   229c0:	0f b6 07             	movzbl (%rdi),%eax
   229c3:	48 83 c7 01          	add    $0x1,%rdi
   229c7:	83 e0 3f             	and    $0x3f,%eax
   229ca:	c1 e1 06             	shl    $0x6,%ecx
   229cd:	09 c1                	or     %eax,%ecx
   229cf:	40 80 fd f0          	cmp    $0xf0,%bpl
   229d3:	72 43                	jb     22a18 <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0xd18>
   229d5:	48 39 d7             	cmp    %rdx,%rdi
   229d8:	74 50                	je     22a2a <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0xd2a>
   229da:	0f b6 2f             	movzbl (%rdi),%ebp
   229dd:	48 83 c7 01          	add    $0x1,%rdi
   229e1:	83 e5 3f             	and    $0x3f,%ebp
   229e4:	eb 49                	jmp    22a2f <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0xd2f>
   229e6:	31 c9                	xor    %ecx,%ecx
   229e8:	48 89 d7             	mov    %rdx,%rdi
   229eb:	89 ee                	mov    %ebp,%esi
   229ed:	83 e6 1f             	and    $0x1f,%esi
   229f0:	40 80 fd df          	cmp    $0xdf,%bpl
   229f4:	77 c5                	ja     229bb <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0xcbb>
   229f6:	c1 e6 06             	shl    $0x6,%esi
   229f9:	09 f1                	or     %esi,%ecx
   229fb:	8d 41 df             	lea    -0x21(%rcx),%eax
   229fe:	83 f8 0f             	cmp    $0xf,%eax
   22a01:	73 59                	jae    22a5c <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0xd5c>
   22a03:	e9 62 ff ff ff       	jmpq   2296a <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0xc6a>
   22a08:	31 c0                	xor    %eax,%eax
   22a0a:	48 89 d7             	mov    %rdx,%rdi
   22a0d:	c1 e1 06             	shl    $0x6,%ecx
   22a10:	09 c1                	or     %eax,%ecx
   22a12:	40 80 fd f0          	cmp    $0xf0,%bpl
   22a16:	73 bd                	jae    229d5 <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0xcd5>
   22a18:	c1 e6 0c             	shl    $0xc,%esi
   22a1b:	09 f1                	or     %esi,%ecx
   22a1d:	8d 41 df             	lea    -0x21(%rcx),%eax
   22a20:	83 f8 0f             	cmp    $0xf,%eax
   22a23:	73 37                	jae    22a5c <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0xd5c>
   22a25:	e9 40 ff ff ff       	jmpq   2296a <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0xc6a>
   22a2a:	31 ed                	xor    %ebp,%ebp
   22a2c:	48 89 d7             	mov    %rdx,%rdi
   22a2f:	83 e6 07             	and    $0x7,%esi
   22a32:	c1 e6 12             	shl    $0x12,%esi
   22a35:	c1 e1 06             	shl    $0x6,%ecx
   22a38:	09 f1                	or     %esi,%ecx
   22a3a:	09 e9                	or     %ebp,%ecx
   22a3c:	81 f9 00 00 11 00    	cmp    $0x110000,%ecx
   22a42:	74 78                	je     22abc <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0xdbc>
   22a44:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   22a4b:	00 00 00 
   22a4e:	66 90                	xchg   %ax,%ax
   22a50:	8d 41 df             	lea    -0x21(%rcx),%eax
   22a53:	83 f8 0f             	cmp    $0xf,%eax
   22a56:	0f 82 0e ff ff ff    	jb     2296a <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0xc6a>
   22a5c:	8d 41 d0             	lea    -0x30(%rcx),%eax
   22a5f:	83 f8 0a             	cmp    $0xa,%eax
   22a62:	0f 82 02 ff ff ff    	jb     2296a <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0xc6a>
   22a68:	89 c8                	mov    %ecx,%eax
   22a6a:	83 e0 df             	and    $0xffffffdf,%eax
   22a6d:	83 c0 bf             	add    $0xffffffbf,%eax
   22a70:	83 f8 1a             	cmp    $0x1a,%eax
   22a73:	0f 82 f1 fe ff ff    	jb     2296a <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0xc6a>
   22a79:	8d 41 a5             	lea    -0x5b(%rcx),%eax
   22a7c:	83 f8 23             	cmp    $0x23,%eax
   22a7f:	0f 86 db fe ff ff    	jbe    22960 <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0xc60>
   22a85:	83 c1 c6             	add    $0xffffffc6,%ecx
   22a88:	83 f9 07             	cmp    $0x7,%ecx
   22a8b:	0f 82 d9 fe ff ff    	jb     2296a <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0xc6a>
   22a91:	bd 03 00 00 00       	mov    $0x3,%ebp
   22a96:	eb 48                	jmp    22ae0 <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0xde0>
   22a98:	48 89 9c 24 88 00 00 	mov    %rbx,0x88(%rsp)
   22a9f:	00 
   22aa0:	4c 8b bc 24 b8 00 00 	mov    0xb8(%rsp),%r15
   22aa7:	00 
   22aa8:	4c 8b 5c 24 10       	mov    0x10(%rsp),%r11
   22aad:	49 83 fc 03          	cmp    $0x3,%r12
   22ab1:	0f 82 f0 f7 ff ff    	jb     222a7 <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0x5a7>
   22ab7:	e9 29 f8 ff ff       	jmpq   222e5 <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0x5e5>
   22abc:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   22ac1:	4d 89 6f 08          	mov    %r13,0x8(%r15)
   22ac5:	49 89 5f 10          	mov    %rbx,0x10(%r15)
   22ac9:	4d 89 47 18          	mov    %r8,0x18(%r15)
   22acd:	49 89 47 20          	mov    %rax,0x20(%r15)
   22ad1:	4d 89 67 28          	mov    %r12,0x28(%r15)
   22ad5:	4d 89 77 30          	mov    %r14,0x30(%r15)
   22ad9:	4d 89 57 38          	mov    %r10,0x38(%r15)
   22add:	4c 89 cd             	mov    %r9,%rbp
   22ae0:	49 89 2f             	mov    %rbp,(%r15)
   22ae3:	48 81 c4 c8 00 00 00 	add    $0xc8,%rsp
   22aea:	5b                   	pop    %rbx
   22aeb:	41 5c                	pop    %r12
   22aed:	41 5d                	pop    %r13
   22aef:	41 5e                	pop    %r14
   22af1:	41 5f                	pop    %r15
   22af3:	5d                   	pop    %rbp
   22af4:	c3                   	retq   
   22af5:	31 ed                	xor    %ebp,%ebp
   22af7:	4c 89 d6             	mov    %r10,%rsi
   22afa:	c1 e7 06             	shl    $0x6,%edi
   22afd:	09 ef                	or     %ebp,%edi
   22aff:	80 fa f0             	cmp    $0xf0,%dl
   22b02:	0f 83 dd fd ff ff    	jae    228e5 <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0xbe5>
   22b08:	c1 e1 0c             	shl    $0xc,%ecx
   22b0b:	09 cf                	or     %ecx,%edi
   22b0d:	83 ff 45             	cmp    $0x45,%edi
   22b10:	0f 85 35 f9 ff ff    	jne    2244b <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0x74b>
   22b16:	e9 f3 fd ff ff       	jmpq   2290e <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0xc0e>
   22b1b:	31 d2                	xor    %edx,%edx
   22b1d:	83 e1 07             	and    $0x7,%ecx
   22b20:	c1 e1 12             	shl    $0x12,%ecx
   22b23:	c1 e7 06             	shl    $0x6,%edi
   22b26:	09 cf                	or     %ecx,%edi
   22b28:	09 d7                	or     %edx,%edi
   22b2a:	83 ff 45             	cmp    $0x45,%edi
   22b2d:	0f 85 18 f9 ff ff    	jne    2244b <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0x74b>
   22b33:	e9 d6 fd ff ff       	jmpq   2290e <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0xc0e>
   22b38:	48 8d 3d 19 47 22 00 	lea    0x224719(%rip),%rdi        # 247258 <__init_array_end+0x1248>
   22b3f:	4c 89 fa             	mov    %r15,%rdx
   22b42:	e8 b9 48 fe ff       	callq  7400 <_ZN4core9panicking18panic_bounds_check17h83121a2515f55ceeE>
   22b47:	0f 0b                	ud2    
   22b49:	48 8d 44 24 30       	lea    0x30(%rsp),%rax
   22b4e:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   22b53:	48 8d 84 24 c0 00 00 	lea    0xc0(%rsp),%rax
   22b5a:	00 
   22b5b:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   22b60:	48 8d 44 24 08       	lea    0x8(%rsp),%rax
   22b65:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   22b6a:	48 8d 7c 24 18       	lea    0x18(%rsp),%rdi
   22b6f:	e8 6c b1 ff ff       	callq  1dce0 <_ZN4core3str6traits101_$LT$impl$u20$core..slice..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..Range$LT$usize$GT$$GT$5index28_$u7b$$u7b$closure$u7d$$u7d$17hd529a7a73bc70800E>
   22b74:	0f 0b                	ud2    
   22b76:	48 8d 3d db 46 22 00 	lea    0x2246db(%rip),%rdi        # 247258 <__init_array_end+0x1248>
   22b7d:	eb 15                	jmp    22b94 <_ZN14rustc_demangle12try_demangle17hf842abb1db86492cE+0xe94>
   22b7f:	48 8d 3d ea 46 22 00 	lea    0x2246ea(%rip),%rdi        # 247270 <__init_array_end+0x1260>
   22b86:	e8 75 48 fe ff       	callq  7400 <_ZN4core9panicking18panic_bounds_check17h83121a2515f55ceeE>
   22b8b:	0f 0b                	ud2    
   22b8d:	48 8d 3d f4 46 22 00 	lea    0x2246f4(%rip),%rdi        # 247288 <__init_array_end+0x1278>
   22b94:	48 89 ce             	mov    %rcx,%rsi
   22b97:	4c 89 fa             	mov    %r15,%rdx
   22b9a:	e8 61 48 fe ff       	callq  7400 <_ZN4core9panicking18panic_bounds_check17h83121a2515f55ceeE>
   22b9f:	0f 0b                	ud2    
   22ba1:	48 8d 3d c8 46 22 00 	lea    0x2246c8(%rip),%rdi        # 247270 <__init_array_end+0x1260>
   22ba8:	48 89 ce             	mov    %rcx,%rsi
   22bab:	e8 50 48 fe ff       	callq  7400 <_ZN4core9panicking18panic_bounds_check17h83121a2515f55ceeE>
   22bb0:	0f 0b                	ud2    
   22bb2:	48 8d 3d cf 46 22 00 	lea    0x2246cf(%rip),%rdi        # 247288 <__init_array_end+0x1278>
   22bb9:	48 89 de             	mov    %rbx,%rsi
   22bbc:	4c 89 fa             	mov    %r15,%rdx
   22bbf:	e8 3c 48 fe ff       	callq  7400 <_ZN4core9panicking18panic_bounds_check17h83121a2515f55ceeE>
   22bc4:	0f 0b                	ud2    
   22bc6:	48 8d 44 24 18       	lea    0x18(%rsp),%rax
   22bcb:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
   22bd0:	48 8d 44 24 08       	lea    0x8(%rsp),%rax
   22bd5:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
   22bda:	48 8d 44 24 30       	lea    0x30(%rsp),%rax
   22bdf:	48 89 44 24 50       	mov    %rax,0x50(%rsp)
   22be4:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
   22be9:	e8 f2 b0 ff ff       	callq  1dce0 <_ZN4core3str6traits101_$LT$impl$u20$core..slice..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..Range$LT$usize$GT$$GT$5index28_$u7b$$u7b$closure$u7d$$u7d$17hd529a7a73bc70800E>
   22bee:	0f 0b                	ud2    
   22bf0:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
   22bf5:	e8 c6 b0 ff ff       	callq  1dcc0 <_ZN4core3str6traits103_$LT$impl$u20$core..slice..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..RangeTo$LT$usize$GT$$GT$5index28_$u7b$$u7b$closure$u7d$$u7d$17ha84ce7feeb82c1fdE>
   22bfa:	0f 0b                	ud2    
   22bfc:	48 8d 44 24 30       	lea    0x30(%rsp),%rax
   22c01:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
   22c06:	48 8d 84 24 c0 00 00 	lea    0xc0(%rsp),%rax
   22c0d:	00 
   22c0e:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
   22c13:	48 8d 44 24 08       	lea    0x8(%rsp),%rax
   22c18:	48 89 44 24 50       	mov    %rax,0x50(%rsp)
   22c1d:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
   22c22:	e8 b9 b0 ff ff       	callq  1dce0 <_ZN4core3str6traits101_$LT$impl$u20$core..slice..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..Range$LT$usize$GT$$GT$5index28_$u7b$$u7b$closure$u7d$$u7d$17hd529a7a73bc70800E>
   22c27:	0f 0b                	ud2    
   22c29:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000022c30 <_ZN3std3sys4unix4args3imp15ARGV_INIT_ARRAY12init_wrapper17h39a756b9627eb7efE>:
   22c30:	41 57                	push   %r15
   22c32:	41 56                	push   %r14
   22c34:	53                   	push   %rbx
   22c35:	49 89 f7             	mov    %rsi,%r15
   22c38:	48 63 df             	movslq %edi,%rbx
   22c3b:	4c 8d 35 46 54 22 00 	lea    0x225446(%rip),%r14        # 248088 <_ZN3std3sys4unix4args3imp4LOCK17h1d8f441b10ddb3ddE>
   22c42:	4c 89 f7             	mov    %r14,%rdi
   22c45:	ff 15 95 53 22 00    	callq  *0x225395(%rip)        # 247fe0 <pthread_mutex_lock@GLIBC_2.2.5>
   22c4b:	48 89 1d 5e 54 22 00 	mov    %rbx,0x22545e(%rip)        # 2480b0 <_ZN3std3sys4unix4args3imp4ARGC17h4e4d06cf3ef5a743E>
   22c52:	4c 89 3d 5f 54 22 00 	mov    %r15,0x22545f(%rip)        # 2480b8 <_ZN3std3sys4unix4args3imp4ARGV17he0db131b08904595E>
   22c59:	4c 89 f7             	mov    %r14,%rdi
   22c5c:	5b                   	pop    %rbx
   22c5d:	41 5e                	pop    %r14
   22c5f:	41 5f                	pop    %r15
   22c61:	ff 25 91 52 22 00    	jmpq   *0x225291(%rip)        # 247ef8 <pthread_mutex_unlock@GLIBC_2.2.5>
   22c67:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   22c6e:	00 00 

0000000000022c70 <_ZN68_$LT$std..thread..local..AccessError$u20$as$u20$core..fmt..Debug$GT$3fmt17hbf9bd5f9d73067fbE>:
   22c70:	48 8b 7e 20          	mov    0x20(%rsi),%rdi
   22c74:	48 8b 46 28          	mov    0x28(%rsi),%rax
   22c78:	48 8b 40 18          	mov    0x18(%rax),%rax
   22c7c:	48 8d 35 1d a6 01 00 	lea    0x1a61d(%rip),%rsi        # 3d2a0 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x940>
   22c83:	ba 0b 00 00 00       	mov    $0xb,%edx
   22c88:	ff e0                	jmpq   *%rax
   22c8a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000022c90 <_ZN3std6thread5local4fast12Key$LT$T$GT$14try_initialize17h181e6352b875e74bE>:
   22c90:	48 83 ec 38          	sub    $0x38,%rsp
   22c94:	64 8a 04 25 90 ff ff 	mov    %fs:0xffffffffffffff90,%al
   22c9b:	ff 
   22c9c:	84 c0                	test   %al,%al
   22c9e:	74 0b                	je     22cab <_ZN3std6thread5local4fast12Key$LT$T$GT$14try_initialize17h181e6352b875e74bE+0x1b>
   22ca0:	3c 01                	cmp    $0x1,%al
   22ca2:	74 5c                	je     22d00 <_ZN3std6thread5local4fast12Key$LT$T$GT$14try_initialize17h181e6352b875e74bE+0x70>
   22ca4:	31 c0                	xor    %eax,%eax
   22ca6:	48 83 c4 38          	add    $0x38,%rsp
   22caa:	c3                   	retq   
   22cab:	48 83 3d 2d 51 22 00 	cmpq   $0x0,0x22512d(%rip)        # 247de0 <__cxa_thread_atexit_impl@GLIBC_2.18>
   22cb2:	00 
   22cb3:	74 26                	je     22cdb <_ZN3std6thread5local4fast12Key$LT$T$GT$14try_initialize17h181e6352b875e74bE+0x4b>
   22cb5:	64 48 8b 04 25 00 00 	mov    %fs:0x0,%rax
   22cbc:	00 00 
   22cbe:	48 8d b0 60 ff ff ff 	lea    -0xa0(%rax),%rsi
   22cc5:	48 8d 3d 54 69 00 00 	lea    0x6954(%rip),%rdi        # 29620 <_ZN3std6thread5local4fast13destroy_value17hb9c4465a07b6d799E>
   22ccc:	48 8d 15 45 53 22 00 	lea    0x225345(%rip),%rdx        # 248018 <_rust_extern_with_linkage___dso_handle>
   22cd3:	ff 15 07 51 22 00    	callq  *0x225107(%rip)        # 247de0 <__cxa_thread_atexit_impl@GLIBC_2.18>
   22cd9:	eb 1c                	jmp    22cf7 <_ZN3std6thread5local4fast12Key$LT$T$GT$14try_initialize17h181e6352b875e74bE+0x67>
   22cdb:	64 48 8b 04 25 00 00 	mov    %fs:0x0,%rax
   22ce2:	00 00 
   22ce4:	48 8d b8 60 ff ff ff 	lea    -0xa0(%rax),%rdi
   22ceb:	48 8d 35 2e 69 00 00 	lea    0x692e(%rip),%rsi        # 29620 <_ZN3std6thread5local4fast13destroy_value17hb9c4465a07b6d799E>
   22cf2:	e8 49 48 00 00       	callq  27540 <_ZN3std10sys_common12thread_local22register_dtor_fallback17h1a2314bd3431add0E>
   22cf7:	64 c6 04 25 90 ff ff 	movb   $0x1,%fs:0xffffffffffffff90
   22cfe:	ff 01 
   22d00:	64 66 0f 6f 0c 25 60 	movdqa %fs:0xffffffffffffff60,%xmm1
   22d07:	ff ff ff 
   22d0a:	64 66 0f 6f 04 25 70 	movdqa %fs:0xffffffffffffff70,%xmm0
   22d11:	ff ff ff 
   22d14:	b8 01 00 00 00       	mov    $0x1,%eax
   22d19:	66 48 0f 6e d0       	movq   %rax,%xmm2
   22d1e:	64 66 0f 7f 14 25 60 	movdqa %xmm2,%fs:0xffffffffffffff60
   22d25:	ff ff ff 
   22d28:	b8 02 00 00 00       	mov    $0x2,%eax
   22d2d:	66 48 0f 6e d0       	movq   %rax,%xmm2
   22d32:	64 66 0f 7f 14 25 70 	movdqa %xmm2,%fs:0xffffffffffffff70
   22d39:	ff ff ff 
   22d3c:	f3 0f 7f 44 24 18    	movdqu %xmm0,0x18(%rsp)
   22d42:	f3 0f 7f 4c 24 08    	movdqu %xmm1,0x8(%rsp)
   22d48:	64 0f 28 14 25 80 ff 	movaps %fs:0xffffffffffffff80,%xmm2
   22d4f:	ff ff 
   22d51:	0f 11 54 24 28       	movups %xmm2,0x28(%rsp)
   22d56:	66 48 0f 7e c8       	movq   %xmm1,%rax
   22d5b:	48 85 c0             	test   %rax,%rax
   22d5e:	74 21                	je     22d81 <_ZN3std6thread5local4fast12Key$LT$T$GT$14try_initialize17h181e6352b875e74bE+0xf1>
   22d60:	66 48 0f 7e c0       	movq   %xmm0,%rax
   22d65:	48 83 f8 02          	cmp    $0x2,%rax
   22d69:	74 16                	je     22d81 <_ZN3std6thread5local4fast12Key$LT$T$GT$14try_initialize17h181e6352b875e74bE+0xf1>
   22d6b:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
   22d70:	f0 48 83 28 01       	lock subq $0x1,(%rax)
   22d75:	75 0a                	jne    22d81 <_ZN3std6thread5local4fast12Key$LT$T$GT$14try_initialize17h181e6352b875e74bE+0xf1>
   22d77:	48 8d 7c 24 30       	lea    0x30(%rsp),%rdi
   22d7c:	e8 8f 04 00 00       	callq  23210 <_ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17h671cd2375e6e21b7E>
   22d81:	64 48 8b 04 25 00 00 	mov    %fs:0x0,%rax
   22d88:	00 00 
   22d8a:	48 8d 80 68 ff ff ff 	lea    -0x98(%rax),%rax
   22d91:	48 83 c4 38          	add    $0x38,%rsp
   22d95:	c3                   	retq   
   22d96:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   22d9d:	00 00 00 

0000000000022da0 <_ZN4core3ptr13drop_in_place17ha26c711544338914E>:
   22da0:	48 8b 07             	mov    (%rdi),%rax
   22da3:	48 85 c0             	test   %rax,%rax
   22da6:	74 0c                	je     22db4 <_ZN4core3ptr13drop_in_place17ha26c711544338914E+0x14>
   22da8:	f0 48 83 28 01       	lock subq $0x1,(%rax)
   22dad:	75 05                	jne    22db4 <_ZN4core3ptr13drop_in_place17ha26c711544338914E+0x14>
   22daf:	e9 5c 04 00 00       	jmpq   23210 <_ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17h671cd2375e6e21b7E>
   22db4:	c3                   	retq   
   22db5:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   22dbc:	00 00 00 
   22dbf:	90                   	nop

0000000000022dc0 <_ZN3std10sys_common11thread_info10ThreadInfo4with28_$u7b$$u7b$closure$u7d$$u7d$17hc3ac9120fadfa13eE>:
   22dc0:	41 56                	push   %r14
   22dc2:	53                   	push   %rbx
   22dc3:	48 83 ec 48          	sub    $0x48,%rsp
   22dc7:	48 8b 07             	mov    (%rdi),%rax
   22dca:	48 8d 48 01          	lea    0x1(%rax),%rcx
   22dce:	48 85 c9             	test   %rcx,%rcx
   22dd1:	0f 8e ac 00 00 00    	jle    22e83 <_ZN3std10sys_common11thread_info10ThreadInfo4with28_$u7b$$u7b$closure$u7d$$u7d$17hc3ac9120fadfa13eE+0xc3>
   22dd7:	48 89 fb             	mov    %rdi,%rbx
   22dda:	48 83 7f 08 02       	cmpq   $0x2,0x8(%rdi)
   22ddf:	75 78                	jne    22e59 <_ZN3std10sys_common11thread_info10ThreadInfo4with28_$u7b$$u7b$closure$u7d$$u7d$17hc3ac9120fadfa13eE+0x99>
   22de1:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
   22de8:	00 00 
   22dea:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
   22def:	e8 6c 01 00 00       	callq  22f60 <_ZN3std6thread6Thread3new17h4aa6d776ccf79e9dE>
   22df4:	0f 10 44 24 10       	movups 0x10(%rsp),%xmm0
   22df9:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
   22e00:	00 00 
   22e02:	0f 11 44 24 18       	movups %xmm0,0x18(%rsp)
   22e07:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   22e0c:	48 83 3b 00          	cmpq   $0x0,(%rbx)
   22e10:	0f 85 d7 00 00 00    	jne    22eed <_ZN3std10sys_common11thread_info10ThreadInfo4with28_$u7b$$u7b$closure$u7d$$u7d$17hc3ac9120fadfa13eE+0x12d>
   22e16:	4c 8d 73 08          	lea    0x8(%rbx),%r14
   22e1a:	48 c7 03 ff ff ff ff 	movq   $0xffffffffffffffff,(%rbx)
   22e21:	48 83 7b 08 02       	cmpq   $0x2,0x8(%rbx)
   22e26:	74 14                	je     22e3c <_ZN3std10sys_common11thread_info10ThreadInfo4with28_$u7b$$u7b$closure$u7d$$u7d$17hc3ac9120fadfa13eE+0x7c>
   22e28:	48 8b 43 20          	mov    0x20(%rbx),%rax
   22e2c:	f0 48 83 28 01       	lock subq $0x1,(%rax)
   22e31:	75 09                	jne    22e3c <_ZN3std10sys_common11thread_info10ThreadInfo4with28_$u7b$$u7b$closure$u7d$$u7d$17hc3ac9120fadfa13eE+0x7c>
   22e33:	48 8d 7b 20          	lea    0x20(%rbx),%rdi
   22e37:	e8 d4 03 00 00       	callq  23210 <_ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17h671cd2375e6e21b7E>
   22e3c:	0f 10 44 24 10       	movups 0x10(%rsp),%xmm0
   22e41:	0f 10 4c 24 20       	movups 0x20(%rsp),%xmm1
   22e46:	41 0f 11 4e 10       	movups %xmm1,0x10(%r14)
   22e4b:	41 0f 11 06          	movups %xmm0,(%r14)
   22e4f:	48 8b 03             	mov    (%rbx),%rax
   22e52:	48 83 c0 01          	add    $0x1,%rax
   22e56:	48 89 03             	mov    %rax,(%rbx)
   22e59:	48 85 c0             	test   %rax,%rax
   22e5c:	75 4b                	jne    22ea9 <_ZN3std10sys_common11thread_info10ThreadInfo4with28_$u7b$$u7b$closure$u7d$$u7d$17hc3ac9120fadfa13eE+0xe9>
   22e5e:	48 c7 03 ff ff ff ff 	movq   $0xffffffffffffffff,(%rbx)
   22e65:	48 83 7b 08 02       	cmpq   $0x2,0x8(%rbx)
   22e6a:	74 63                	je     22ecf <_ZN3std10sys_common11thread_info10ThreadInfo4with28_$u7b$$u7b$closure$u7d$$u7d$17hc3ac9120fadfa13eE+0x10f>
   22e6c:	48 8b 43 20          	mov    0x20(%rbx),%rax
   22e70:	f0 48 83 00 01       	lock addq $0x1,(%rax)
   22e75:	7e 72                	jle    22ee9 <_ZN3std10sys_common11thread_info10ThreadInfo4with28_$u7b$$u7b$closure$u7d$$u7d$17hc3ac9120fadfa13eE+0x129>
   22e77:	48 83 03 01          	addq   $0x1,(%rbx)
   22e7b:	48 83 c4 48          	add    $0x48,%rsp
   22e7f:	5b                   	pop    %rbx
   22e80:	41 5e                	pop    %r14
   22e82:	c3                   	retq   
   22e83:	48 8d 3d 7f a4 01 00 	lea    0x1a47f(%rip),%rdi        # 3d309 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x9a9>
   22e8a:	48 8d 0d 17 3f 22 00 	lea    0x223f17(%rip),%rcx        # 246da8 <__init_array_end+0xd98>
   22e91:	4c 8d 05 30 3f 22 00 	lea    0x223f30(%rip),%r8        # 246dc8 <__init_array_end+0xdb8>
   22e98:	48 8d 54 24 08       	lea    0x8(%rsp),%rdx
   22e9d:	be 18 00 00 00       	mov    $0x18,%esi
   22ea2:	e8 b9 6d fe ff       	callq  9c60 <_ZN4core6option18expect_none_failed17he0fec195c6e4c2ecE>
   22ea7:	eb 68                	jmp    22f11 <_ZN3std10sys_common11thread_info10ThreadInfo4with28_$u7b$$u7b$closure$u7d$$u7d$17hc3ac9120fadfa13eE+0x151>
   22ea9:	48 8d 3d 30 76 01 00 	lea    0x17630(%rip),%rdi        # 3a4e0 <_ZN4core7unicode12unicode_data2cc19BITSET_INDEX_CHUNKS17h8a1f39cd536e9344E+0x20>
   22eb0:	48 8d 0d 29 3f 22 00 	lea    0x223f29(%rip),%rcx        # 246de0 <__init_array_end+0xdd0>
   22eb7:	4c 8d 05 42 3f 22 00 	lea    0x223f42(%rip),%r8        # 246e00 <__init_array_end+0xdf0>
   22ebe:	48 8d 54 24 08       	lea    0x8(%rsp),%rdx
   22ec3:	be 10 00 00 00       	mov    $0x10,%esi
   22ec8:	e8 93 6d fe ff       	callq  9c60 <_ZN4core6option18expect_none_failed17he0fec195c6e4c2ecE>
   22ecd:	eb 42                	jmp    22f11 <_ZN3std10sys_common11thread_info10ThreadInfo4with28_$u7b$$u7b$closure$u7d$$u7d$17hc3ac9120fadfa13eE+0x151>
   22ecf:	48 8d 3d 4b a4 01 00 	lea    0x1a44b(%rip),%rdi        # 3d321 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x9c1>
   22ed6:	48 8d 15 3b 3f 22 00 	lea    0x223f3b(%rip),%rdx        # 246e18 <__init_array_end+0xe08>
   22edd:	be 2b 00 00 00       	mov    $0x2b,%esi
   22ee2:	e8 c9 44 fe ff       	callq  73b0 <_ZN4core9panicking5panic17h6861470adfbddef8E>
   22ee7:	eb 28                	jmp    22f11 <_ZN3std10sys_common11thread_info10ThreadInfo4with28_$u7b$$u7b$closure$u7d$$u7d$17hc3ac9120fadfa13eE+0x151>
   22ee9:	0f 0b                	ud2    
   22eeb:	0f 0b                	ud2    
   22eed:	48 8d 3d ec 75 01 00 	lea    0x175ec(%rip),%rdi        # 3a4e0 <_ZN4core7unicode12unicode_data2cc19BITSET_INDEX_CHUNKS17h8a1f39cd536e9344E+0x20>
   22ef4:	48 8d 0d e5 3e 22 00 	lea    0x223ee5(%rip),%rcx        # 246de0 <__init_array_end+0xdd0>
   22efb:	4c 8d 05 fe 3e 22 00 	lea    0x223efe(%rip),%r8        # 246e00 <__init_array_end+0xdf0>
   22f02:	48 8d 54 24 08       	lea    0x8(%rsp),%rdx
   22f07:	be 10 00 00 00       	mov    $0x10,%esi
   22f0c:	e8 4f 6d fe ff       	callq  9c60 <_ZN4core6option18expect_none_failed17he0fec195c6e4c2ecE>
   22f11:	0f 0b                	ud2    
   22f13:	49 89 c6             	mov    %rax,%r14
   22f16:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
   22f1b:	e8 60 03 00 00       	callq  23280 <_ZN4core3ptr13drop_in_place17h18d5975e844cd51eE>
   22f20:	4c 89 f7             	mov    %r14,%rdi
   22f23:	e8 78 11 fe ff       	callq  40a0 <_Unwind_Resume@plt>
   22f28:	0f 0b                	ud2    
   22f2a:	49 89 c6             	mov    %rax,%r14
   22f2d:	48 89 df             	mov    %rbx,%rdi
   22f30:	e8 6b 03 00 00       	callq  232a0 <_ZN4core3ptr13drop_in_place17h0a2d35d27e5f386dE>
   22f35:	4c 89 f7             	mov    %r14,%rdi
   22f38:	e8 63 11 fe ff       	callq  40a0 <_Unwind_Resume@plt>
   22f3d:	0f 0b                	ud2    
   22f3f:	49 89 c6             	mov    %rax,%r14
   22f42:	4c 89 f7             	mov    %r14,%rdi
   22f45:	e8 56 11 fe ff       	callq  40a0 <_Unwind_Resume@plt>
   22f4a:	0f 0b                	ud2    
   22f4c:	49 89 c6             	mov    %rax,%r14
   22f4f:	4c 89 f7             	mov    %r14,%rdi
   22f52:	e8 49 11 fe ff       	callq  40a0 <_Unwind_Resume@plt>
   22f57:	0f 0b                	ud2    
   22f59:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000022f60 <_ZN3std6thread6Thread3new17h4aa6d776ccf79e9dE>:
   22f60:	41 57                	push   %r15
   22f62:	41 56                	push   %r14
   22f64:	41 55                	push   %r13
   22f66:	41 54                	push   %r12
   22f68:	53                   	push   %rbx
   22f69:	48 83 ec 50          	sub    $0x50,%rsp
   22f6d:	48 8b 1f             	mov    (%rdi),%rbx
   22f70:	48 85 db             	test   %rbx,%rbx
   22f73:	74 3d                	je     22fb2 <_ZN3std6thread6Thread3new17h4aa6d776ccf79e9dE+0x52>
   22f75:	4c 8b 7f 08          	mov    0x8(%rdi),%r15
   22f79:	4c 8b 77 10          	mov    0x10(%rdi),%r14
   22f7d:	48 89 df             	mov    %rbx,%rdi
   22f80:	31 f6                	xor    %esi,%esi
   22f82:	4c 89 f2             	mov    %r14,%rdx
   22f85:	ff 15 05 4f 22 00    	callq  *0x224f05(%rip)        # 247e90 <memchr@GLIBC_2.2.5>
   22f8b:	48 85 c0             	test   %rax,%rax
   22f8e:	0f 85 ef 01 00 00    	jne    23183 <_ZN3std6thread6Thread3new17h4aa6d776ccf79e9dE+0x223>
   22f94:	48 89 1c 24          	mov    %rbx,(%rsp)
   22f98:	4c 89 7c 24 08       	mov    %r15,0x8(%rsp)
   22f9d:	4c 89 74 24 10       	mov    %r14,0x10(%rsp)
   22fa2:	48 89 e7             	mov    %rsp,%rdi
   22fa5:	e8 36 03 00 00       	callq  232e0 <_ZN3std3ffi5c_str7CString18from_vec_unchecked17hd6fe62231ec4fbf9E>
   22faa:	49 89 c7             	mov    %rax,%r15
   22fad:	49 89 d6             	mov    %rdx,%r14
   22fb0:	eb 03                	jmp    22fb5 <_ZN3std6thread6Thread3new17h4aa6d776ccf79e9dE+0x55>
   22fb2:	45 31 ff             	xor    %r15d,%r15d
   22fb5:	4c 89 7c 24 30       	mov    %r15,0x30(%rsp)
   22fba:	4c 89 74 24 38       	mov    %r14,0x38(%rsp)
   22fbf:	48 8d 1d fa 50 22 00 	lea    0x2250fa(%rip),%rbx        # 2480c0 <_ZN3std6thread8ThreadId3new5GUARD17hd336e10a773b7e25E>
   22fc6:	48 89 df             	mov    %rbx,%rdi
   22fc9:	ff 15 11 50 22 00    	callq  *0x225011(%rip)        # 247fe0 <pthread_mutex_lock@GLIBC_2.2.5>
   22fcf:	48 89 1c 24          	mov    %rbx,(%rsp)
   22fd3:	4c 8b 2d 2e 50 22 00 	mov    0x22502e(%rip),%r13        # 248008 <_ZN3std6thread8ThreadId3new7COUNTER17hecce2c719085c728E>
   22fda:	49 83 fd ff          	cmp    $0xffffffffffffffff,%r13
   22fde:	0f 84 35 01 00 00    	je     23119 <_ZN3std6thread6Thread3new17h4aa6d776ccf79e9dE+0x1b9>
   22fe4:	49 8d 45 01          	lea    0x1(%r13),%rax
   22fe8:	48 89 05 19 50 22 00 	mov    %rax,0x225019(%rip)        # 248008 <_ZN3std6thread8ThreadId3new7COUNTER17hecce2c719085c728E>
   22fef:	4d 85 ed             	test   %r13,%r13
   22ff2:	0f 84 3e 01 00 00    	je     23136 <_ZN3std6thread6Thread3new17h4aa6d776ccf79e9dE+0x1d6>
   22ff8:	48 8d 3d c1 50 22 00 	lea    0x2250c1(%rip),%rdi        # 2480c0 <_ZN3std6thread8ThreadId3new5GUARD17hd336e10a773b7e25E>
   22fff:	ff 15 f3 4e 22 00    	callq  *0x224ef3(%rip)        # 247ef8 <pthread_mutex_unlock@GLIBC_2.2.5>
   23005:	bf 28 00 00 00       	mov    $0x28,%edi
   2300a:	be 08 00 00 00       	mov    $0x8,%esi
   2300f:	e8 ac 23 fe ff       	callq  53c0 <__rust_alloc>
   23014:	48 85 c0             	test   %rax,%rax
   23017:	0f 84 33 01 00 00    	je     23150 <_ZN3std6thread6Thread3new17h4aa6d776ccf79e9dE+0x1f0>
   2301d:	48 89 c3             	mov    %rax,%rbx
   23020:	0f 57 c0             	xorps  %xmm0,%xmm0
   23023:	0f 11 40 10          	movups %xmm0,0x10(%rax)
   23027:	0f 11 00             	movups %xmm0,(%rax)
   2302a:	48 c7 40 20 00 00 00 	movq   $0x0,0x20(%rax)
   23031:	00 
   23032:	49 89 e4             	mov    %rsp,%r12
   23035:	4c 89 e7             	mov    %r12,%rdi
   23038:	ff 15 02 4e 22 00    	callq  *0x224e02(%rip)        # 247e40 <pthread_mutexattr_init@GLIBC_2.2.5>
   2303e:	4c 89 e7             	mov    %r12,%rdi
   23041:	31 f6                	xor    %esi,%esi
   23043:	ff 15 b7 4e 22 00    	callq  *0x224eb7(%rip)        # 247f00 <pthread_mutexattr_settype@GLIBC_2.2.5>
   23049:	48 89 df             	mov    %rbx,%rdi
   2304c:	4c 89 e6             	mov    %r12,%rsi
   2304f:	ff 15 7b 4f 22 00    	callq  *0x224f7b(%rip)        # 247fd0 <pthread_mutex_init@GLIBC_2.2.5>
   23055:	4c 89 e7             	mov    %r12,%rdi
   23058:	ff 15 c2 4d 22 00    	callq  *0x224dc2(%rip)        # 247e20 <pthread_mutexattr_destroy@GLIBC_2.2.5>
   2305e:	48 89 5c 24 20       	mov    %rbx,0x20(%rsp)
   23063:	c6 44 24 28 00       	movb   $0x0,0x28(%rsp)
   23068:	8b 04 24             	mov    (%rsp),%eax
   2306b:	8b 4c 24 03          	mov    0x3(%rsp),%ecx
   2306f:	89 44 24 29          	mov    %eax,0x29(%rsp)
   23073:	89 4c 24 2c          	mov    %ecx,0x2c(%rsp)
   23077:	bf 30 00 00 00       	mov    $0x30,%edi
   2307c:	be 08 00 00 00       	mov    $0x8,%esi
   23081:	e8 3a 23 fe ff       	callq  53c0 <__rust_alloc>
   23086:	48 85 c0             	test   %rax,%rax
   23089:	0f 84 d2 00 00 00    	je     23161 <_ZN3std6thread6Thread3new17h4aa6d776ccf79e9dE+0x201>
   2308f:	0f 57 c0             	xorps  %xmm0,%xmm0
   23092:	0f 11 40 20          	movups %xmm0,0x20(%rax)
   23096:	0f 11 40 10          	movups %xmm0,0x10(%rax)
   2309a:	0f 11 00             	movups %xmm0,(%rax)
   2309d:	48 89 04 24          	mov    %rax,(%rsp)
   230a1:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
   230a8:	00 00 
   230aa:	48 89 c7             	mov    %rax,%rdi
   230ad:	e8 6e 04 00 00       	callq  23520 <_ZN3std3sys4unix7condvar7Condvar4init17h0d9dfb02507b432dE>
   230b2:	0f 10 04 24          	movups (%rsp),%xmm0
   230b6:	0f 29 44 24 40       	movaps %xmm0,0x40(%rsp)
   230bb:	0f 10 44 24 20       	movups 0x20(%rsp),%xmm0
   230c0:	0f 29 04 24          	movaps %xmm0,(%rsp)
   230c4:	bf 50 00 00 00       	mov    $0x50,%edi
   230c9:	be 08 00 00 00       	mov    $0x8,%esi
   230ce:	e8 ed 22 fe ff       	callq  53c0 <__rust_alloc>
   230d3:	48 85 c0             	test   %rax,%rax
   230d6:	0f 84 96 00 00 00    	je     23172 <_ZN3std6thread6Thread3new17h4aa6d776ccf79e9dE+0x212>
   230dc:	0f 28 05 ed 72 01 00 	movaps 0x172ed(%rip),%xmm0        # 3a3d0 <_fini+0x8c>
   230e3:	0f 11 00             	movups %xmm0,(%rax)
   230e6:	4c 89 78 10          	mov    %r15,0x10(%rax)
   230ea:	4c 89 70 18          	mov    %r14,0x18(%rax)
   230ee:	4c 89 68 20          	mov    %r13,0x20(%rax)
   230f2:	48 c7 40 28 00 00 00 	movq   $0x0,0x28(%rax)
   230f9:	00 
   230fa:	0f 28 04 24          	movaps (%rsp),%xmm0
   230fe:	0f 11 40 30          	movups %xmm0,0x30(%rax)
   23102:	0f 28 44 24 40       	movaps 0x40(%rsp),%xmm0
   23107:	0f 11 40 40          	movups %xmm0,0x40(%rax)
   2310b:	48 83 c4 50          	add    $0x50,%rsp
   2310f:	5b                   	pop    %rbx
   23110:	41 5c                	pop    %r12
   23112:	41 5d                	pop    %r13
   23114:	41 5e                	pop    %r14
   23116:	41 5f                	pop    %r15
   23118:	c3                   	retq   
   23119:	48 8d 3d c2 a2 01 00 	lea    0x1a2c2(%rip),%rdi        # 3d3e2 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0xa82>
   23120:	48 8d 15 41 3d 22 00 	lea    0x223d41(%rip),%rdx        # 246e68 <__init_array_end+0xe58>
   23127:	be 37 00 00 00       	mov    $0x37,%esi
   2312c:	e8 8f 03 00 00       	callq  234c0 <_ZN3std9panicking11begin_panic17hc5f3eabb2c219d56E>
   23131:	e9 85 00 00 00       	jmpq   231bb <_ZN3std6thread6Thread3new17h4aa6d776ccf79e9dE+0x25b>
   23136:	48 8d 3d e4 a1 01 00 	lea    0x1a1e4(%rip),%rdi        # 3d321 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x9c1>
   2313d:	48 8d 15 3c 3d 22 00 	lea    0x223d3c(%rip),%rdx        # 246e80 <__init_array_end+0xe70>
   23144:	be 2b 00 00 00       	mov    $0x2b,%esi
   23149:	e8 62 42 fe ff       	callq  73b0 <_ZN4core9panicking5panic17h6861470adfbddef8E>
   2314e:	eb 6b                	jmp    231bb <_ZN3std6thread6Thread3new17h4aa6d776ccf79e9dE+0x25b>
   23150:	bf 28 00 00 00       	mov    $0x28,%edi
   23155:	be 08 00 00 00       	mov    $0x8,%esi
   2315a:	e8 61 23 fe ff       	callq  54c0 <_ZN5alloc5alloc18handle_alloc_error17hf7bb8682f6c8b1d7E>
   2315f:	0f 0b                	ud2    
   23161:	bf 30 00 00 00       	mov    $0x30,%edi
   23166:	be 08 00 00 00       	mov    $0x8,%esi
   2316b:	e8 50 23 fe ff       	callq  54c0 <_ZN5alloc5alloc18handle_alloc_error17hf7bb8682f6c8b1d7E>
   23170:	0f 0b                	ud2    
   23172:	bf 50 00 00 00       	mov    $0x50,%edi
   23177:	be 08 00 00 00       	mov    $0x8,%esi
   2317c:	e8 3f 23 fe ff       	callq  54c0 <_ZN5alloc5alloc18handle_alloc_error17hf7bb8682f6c8b1d7E>
   23181:	0f 0b                	ud2    
   23183:	48 29 d8             	sub    %rbx,%rax
   23186:	48 89 04 24          	mov    %rax,(%rsp)
   2318a:	48 89 5c 24 08       	mov    %rbx,0x8(%rsp)
   2318f:	4c 89 7c 24 10       	mov    %r15,0x10(%rsp)
   23194:	4c 89 74 24 18       	mov    %r14,0x18(%rsp)
   23199:	48 8d 3d 13 a2 01 00 	lea    0x1a213(%rip),%rdi        # 3d3b3 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0xa53>
   231a0:	48 8d 0d 89 3c 22 00 	lea    0x223c89(%rip),%rcx        # 246e30 <__init_array_end+0xe20>
   231a7:	4c 8d 05 a2 3c 22 00 	lea    0x223ca2(%rip),%r8        # 246e50 <__init_array_end+0xe40>
   231ae:	48 89 e2             	mov    %rsp,%rdx
   231b1:	be 2f 00 00 00       	mov    $0x2f,%esi
   231b6:	e8 a5 6a fe ff       	callq  9c60 <_ZN4core6option18expect_none_failed17he0fec195c6e4c2ecE>
   231bb:	0f 0b                	ud2    
   231bd:	48 89 c3             	mov    %rax,%rbx
   231c0:	48 89 e7             	mov    %rsp,%rdi
   231c3:	e8 f8 00 00 00       	callq  232c0 <_ZN4core3ptr13drop_in_place17he84a32225855c477E>
   231c8:	48 89 df             	mov    %rbx,%rdi
   231cb:	e8 d0 0e fe ff       	callq  40a0 <_Unwind_Resume@plt>
   231d0:	0f 0b                	ud2    
   231d2:	48 89 c3             	mov    %rax,%rbx
   231d5:	48 89 e7             	mov    %rsp,%rdi
   231d8:	e8 13 03 00 00       	callq  234f0 <_ZN4core3ptr13drop_in_place17hdc1814fe4f8f9b15E>
   231dd:	eb 15                	jmp    231f4 <_ZN3std6thread6Thread3new17h4aa6d776ccf79e9dE+0x294>
   231df:	48 89 c3             	mov    %rax,%rbx
   231e2:	48 89 e7             	mov    %rsp,%rdi
   231e5:	e8 a6 05 00 00       	callq  23790 <_ZN4core3ptr13drop_in_place17h2d183e1f8ab9667fE>
   231ea:	48 8d 7c 24 20       	lea    0x20(%rsp),%rdi
   231ef:	e8 bc 05 00 00       	callq  237b0 <_ZN4core3ptr13drop_in_place17h017f82f6988ac582E>
   231f4:	48 8d 7c 24 30       	lea    0x30(%rsp),%rdi
   231f9:	e8 02 03 00 00       	callq  23500 <_ZN4core3ptr13drop_in_place17h05eb0579767fba66E>
   231fe:	48 89 df             	mov    %rbx,%rdi
   23201:	e8 9a 0e fe ff       	callq  40a0 <_Unwind_Resume@plt>
   23206:	0f 0b                	ud2    
   23208:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   2320f:	00 

0000000000023210 <_ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17h671cd2375e6e21b7E>:
   23210:	41 56                	push   %r14
   23212:	53                   	push   %rbx
   23213:	50                   	push   %rax
   23214:	49 89 fe             	mov    %rdi,%r14
   23217:	48 8b 1f             	mov    (%rdi),%rbx
   2321a:	48 8b 43 10          	mov    0x10(%rbx),%rax
   2321e:	48 85 c0             	test   %rax,%rax
   23221:	74 13                	je     23236 <_ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17h671cd2375e6e21b7E+0x26>
   23223:	c6 00 00             	movb   $0x0,(%rax)
   23226:	48 83 7b 18 00       	cmpq   $0x0,0x18(%rbx)
   2322b:	74 09                	je     23236 <_ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17h671cd2375e6e21b7E+0x26>
   2322d:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
   23231:	e8 da 21 fe ff       	callq  5410 <__rust_dealloc>
   23236:	48 8b 7b 30          	mov    0x30(%rbx),%rdi
   2323a:	ff 15 f8 4b 22 00    	callq  *0x224bf8(%rip)        # 247e38 <pthread_mutex_destroy@GLIBC_2.2.5>
   23240:	48 8b 7b 30          	mov    0x30(%rbx),%rdi
   23244:	e8 c7 21 fe ff       	callq  5410 <__rust_dealloc>
   23249:	48 8b 7b 40          	mov    0x40(%rbx),%rdi
   2324d:	ff 15 1d 4d 22 00    	callq  *0x224d1d(%rip)        # 247f70 <pthread_cond_destroy@GLIBC_2.3.2>
   23253:	48 8b 7b 40          	mov    0x40(%rbx),%rdi
   23257:	e8 b4 21 fe ff       	callq  5410 <__rust_dealloc>
   2325c:	49 8b 06             	mov    (%r14),%rax
   2325f:	f0 48 83 68 08 01    	lock subq $0x1,0x8(%rax)
   23265:	75 0f                	jne    23276 <_ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17h671cd2375e6e21b7E+0x66>
   23267:	49 8b 3e             	mov    (%r14),%rdi
   2326a:	48 83 c4 08          	add    $0x8,%rsp
   2326e:	5b                   	pop    %rbx
   2326f:	41 5e                	pop    %r14
   23271:	e9 9a 21 fe ff       	jmpq   5410 <__rust_dealloc>
   23276:	48 83 c4 08          	add    $0x8,%rsp
   2327a:	5b                   	pop    %rbx
   2327b:	41 5e                	pop    %r14
   2327d:	c3                   	retq   
   2327e:	66 90                	xchg   %ax,%ax

0000000000023280 <_ZN4core3ptr13drop_in_place17h18d5975e844cd51eE>:
   23280:	48 83 3f 02          	cmpq   $0x2,(%rdi)
   23284:	74 14                	je     2329a <_ZN4core3ptr13drop_in_place17h18d5975e844cd51eE+0x1a>
   23286:	48 8b 47 18          	mov    0x18(%rdi),%rax
   2328a:	f0 48 83 28 01       	lock subq $0x1,(%rax)
   2328f:	75 09                	jne    2329a <_ZN4core3ptr13drop_in_place17h18d5975e844cd51eE+0x1a>
   23291:	48 83 c7 18          	add    $0x18,%rdi
   23295:	e9 76 ff ff ff       	jmpq   23210 <_ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17h671cd2375e6e21b7E>
   2329a:	c3                   	retq   
   2329b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000232a0 <_ZN4core3ptr13drop_in_place17h0a2d35d27e5f386dE>:
   232a0:	48 83 07 01          	addq   $0x1,(%rdi)
   232a4:	c3                   	retq   
   232a5:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   232ac:	00 00 00 
   232af:	90                   	nop

00000000000232b0 <_ZN4core3ptr13drop_in_place17h009c3646b2ea06bcE>:
   232b0:	c3                   	retq   
   232b1:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   232b8:	00 00 00 
   232bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000232c0 <_ZN4core3ptr13drop_in_place17he84a32225855c477E>:
   232c0:	48 83 7f 10 00       	cmpq   $0x0,0x10(%rdi)
   232c5:	74 09                	je     232d0 <_ZN4core3ptr13drop_in_place17he84a32225855c477E+0x10>
   232c7:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
   232cb:	e9 40 21 fe ff       	jmpq   5410 <__rust_dealloc>
   232d0:	c3                   	retq   
   232d1:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   232d8:	00 00 00 
   232db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000232e0 <_ZN3std3ffi5c_str7CString18from_vec_unchecked17hd6fe62231ec4fbf9E>:
   232e0:	41 57                	push   %r15
   232e2:	41 56                	push   %r14
   232e4:	41 54                	push   %r12
   232e6:	53                   	push   %rbx
   232e7:	48 83 ec 18          	sub    $0x18,%rsp
   232eb:	49 89 ff             	mov    %rdi,%r15
   232ee:	48 8b 5f 08          	mov    0x8(%rdi),%rbx
   232f2:	4c 8b 77 10          	mov    0x10(%rdi),%r14
   232f6:	4c 39 f3             	cmp    %r14,%rbx
   232f9:	75 4b                	jne    23346 <_ZN3std3ffi5c_str7CString18from_vec_unchecked17hd6fe62231ec4fbf9E+0x66>
   232fb:	4c 89 f3             	mov    %r14,%rbx
   232fe:	48 ff c3             	inc    %rbx
   23301:	0f 84 60 01 00 00    	je     23467 <_ZN3std3ffi5c_str7CString18from_vec_unchecked17hd6fe62231ec4fbf9E+0x187>
   23307:	4d 85 f6             	test   %r14,%r14
   2330a:	74 1d                	je     23329 <_ZN3std3ffi5c_str7CString18from_vec_unchecked17hd6fe62231ec4fbf9E+0x49>
   2330c:	49 8b 3f             	mov    (%r15),%rdi
   2330f:	ba 01 00 00 00       	mov    $0x1,%edx
   23314:	4c 89 f6             	mov    %r14,%rsi
   23317:	48 89 d9             	mov    %rbx,%rcx
   2331a:	e8 01 21 fe ff       	callq  5420 <__rust_realloc>
   2331f:	48 85 c0             	test   %rax,%rax
   23322:	75 1b                	jne    2333f <_ZN3std3ffi5c_str7CString18from_vec_unchecked17hd6fe62231ec4fbf9E+0x5f>
   23324:	e9 2f 01 00 00       	jmpq   23458 <_ZN3std3ffi5c_str7CString18from_vec_unchecked17hd6fe62231ec4fbf9E+0x178>
   23329:	be 01 00 00 00       	mov    $0x1,%esi
   2332e:	48 89 df             	mov    %rbx,%rdi
   23331:	e8 8a 20 fe ff       	callq  53c0 <__rust_alloc>
   23336:	48 85 c0             	test   %rax,%rax
   23339:	0f 84 19 01 00 00    	je     23458 <_ZN3std3ffi5c_str7CString18from_vec_unchecked17hd6fe62231ec4fbf9E+0x178>
   2333f:	49 89 07             	mov    %rax,(%r15)
   23342:	49 89 5f 08          	mov    %rbx,0x8(%r15)
   23346:	49 39 de             	cmp    %rbx,%r14
   23349:	75 45                	jne    23390 <_ZN3std3ffi5c_str7CString18from_vec_unchecked17hd6fe62231ec4fbf9E+0xb0>
   2334b:	4c 89 f3             	mov    %r14,%rbx
   2334e:	48 ff c3             	inc    %rbx
   23351:	0f 84 17 01 00 00    	je     2346e <_ZN3std3ffi5c_str7CString18from_vec_unchecked17hd6fe62231ec4fbf9E+0x18e>
   23357:	4f 8d 24 36          	lea    (%r14,%r14,1),%r12
   2335b:	49 39 dc             	cmp    %rbx,%r12
   2335e:	4c 0f 46 e3          	cmovbe %rbx,%r12
   23362:	4d 85 f6             	test   %r14,%r14
   23365:	0f 84 90 00 00 00    	je     233fb <_ZN3std3ffi5c_str7CString18from_vec_unchecked17hd6fe62231ec4fbf9E+0x11b>
   2336b:	49 8b 3f             	mov    (%r15),%rdi
   2336e:	ba 01 00 00 00       	mov    $0x1,%edx
   23373:	4c 89 f6             	mov    %r14,%rsi
   23376:	4c 89 e1             	mov    %r12,%rcx
   23379:	e8 a2 20 fe ff       	callq  5420 <__rust_realloc>
   2337e:	48 85 c0             	test   %rax,%rax
   23381:	0f 84 8a 00 00 00    	je     23411 <_ZN3std3ffi5c_str7CString18from_vec_unchecked17hd6fe62231ec4fbf9E+0x131>
   23387:	49 89 07             	mov    %rax,(%r15)
   2338a:	4d 89 67 08          	mov    %r12,0x8(%r15)
   2338e:	eb 07                	jmp    23397 <_ZN3std3ffi5c_str7CString18from_vec_unchecked17hd6fe62231ec4fbf9E+0xb7>
   23390:	49 8b 07             	mov    (%r15),%rax
   23393:	49 8d 5e 01          	lea    0x1(%r14),%rbx
   23397:	42 c6 04 30 00       	movb   $0x0,(%rax,%r14,1)
   2339c:	49 89 5f 10          	mov    %rbx,0x10(%r15)
   233a0:	49 8b 07             	mov    (%r15),%rax
   233a3:	48 89 04 24          	mov    %rax,(%rsp)
   233a7:	49 8b 47 08          	mov    0x8(%r15),%rax
   233ab:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   233b0:	49 8b 5f 10          	mov    0x10(%r15),%rbx
   233b4:	48 89 5c 24 10       	mov    %rbx,0x10(%rsp)
   233b9:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
   233be:	48 39 de             	cmp    %rbx,%rsi
   233c1:	75 06                	jne    233c9 <_ZN3std3ffi5c_str7CString18from_vec_unchecked17hd6fe62231ec4fbf9E+0xe9>
   233c3:	48 8b 0c 24          	mov    (%rsp),%rcx
   233c7:	eb 7d                	jmp    23446 <_ZN3std3ffi5c_str7CString18from_vec_unchecked17hd6fe62231ec4fbf9E+0x166>
   233c9:	0f 82 a6 00 00 00    	jb     23475 <_ZN3std3ffi5c_str7CString18from_vec_unchecked17hd6fe62231ec4fbf9E+0x195>
   233cf:	48 85 db             	test   %rbx,%rbx
   233d2:	74 4c                	je     23420 <_ZN3std3ffi5c_str7CString18from_vec_unchecked17hd6fe62231ec4fbf9E+0x140>
   233d4:	48 8b 3c 24          	mov    (%rsp),%rdi
   233d8:	ba 01 00 00 00       	mov    $0x1,%edx
   233dd:	48 89 d9             	mov    %rbx,%rcx
   233e0:	e8 3b 20 fe ff       	callq  5420 <__rust_realloc>
   233e5:	48 85 c0             	test   %rax,%rax
   233e8:	74 6e                	je     23458 <_ZN3std3ffi5c_str7CString18from_vec_unchecked17hd6fe62231ec4fbf9E+0x178>
   233ea:	48 89 c1             	mov    %rax,%rcx
   233ed:	48 89 04 24          	mov    %rax,(%rsp)
   233f1:	48 89 5c 24 08       	mov    %rbx,0x8(%rsp)
   233f6:	48 89 de             	mov    %rbx,%rsi
   233f9:	eb 4b                	jmp    23446 <_ZN3std3ffi5c_str7CString18from_vec_unchecked17hd6fe62231ec4fbf9E+0x166>
   233fb:	be 01 00 00 00       	mov    $0x1,%esi
   23400:	4c 89 e7             	mov    %r12,%rdi
   23403:	e8 b8 1f fe ff       	callq  53c0 <__rust_alloc>
   23408:	48 85 c0             	test   %rax,%rax
   2340b:	0f 85 76 ff ff ff    	jne    23387 <_ZN3std3ffi5c_str7CString18from_vec_unchecked17hd6fe62231ec4fbf9E+0xa7>
   23411:	be 01 00 00 00       	mov    $0x1,%esi
   23416:	4c 89 e7             	mov    %r12,%rdi
   23419:	e8 a2 20 fe ff       	callq  54c0 <_ZN5alloc5alloc18handle_alloc_error17hf7bb8682f6c8b1d7E>
   2341e:	0f 0b                	ud2    
   23420:	48 85 f6             	test   %rsi,%rsi
   23423:	74 09                	je     2342e <_ZN3std3ffi5c_str7CString18from_vec_unchecked17hd6fe62231ec4fbf9E+0x14e>
   23425:	48 8b 3c 24          	mov    (%rsp),%rdi
   23429:	e8 e2 1f fe ff       	callq  5410 <__rust_dealloc>
   2342e:	48 c7 04 24 01 00 00 	movq   $0x1,(%rsp)
   23435:	00 
   23436:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
   2343d:	00 00 
   2343f:	b9 01 00 00 00       	mov    $0x1,%ecx
   23444:	31 f6                	xor    %esi,%esi
   23446:	48 89 c8             	mov    %rcx,%rax
   23449:	48 89 f2             	mov    %rsi,%rdx
   2344c:	48 83 c4 18          	add    $0x18,%rsp
   23450:	5b                   	pop    %rbx
   23451:	41 5c                	pop    %r12
   23453:	41 5e                	pop    %r14
   23455:	41 5f                	pop    %r15
   23457:	c3                   	retq   
   23458:	be 01 00 00 00       	mov    $0x1,%esi
   2345d:	48 89 df             	mov    %rbx,%rdi
   23460:	e8 5b 20 fe ff       	callq  54c0 <_ZN5alloc5alloc18handle_alloc_error17hf7bb8682f6c8b1d7E>
   23465:	0f 0b                	ud2    
   23467:	e8 64 20 fe ff       	callq  54d0 <_ZN5alloc7raw_vec17capacity_overflow17h9be7d3ce681ac1a6E>
   2346c:	eb 1f                	jmp    2348d <_ZN3std3ffi5c_str7CString18from_vec_unchecked17hd6fe62231ec4fbf9E+0x1ad>
   2346e:	e8 5d 20 fe ff       	callq  54d0 <_ZN5alloc7raw_vec17capacity_overflow17h9be7d3ce681ac1a6E>
   23473:	eb 18                	jmp    2348d <_ZN3std3ffi5c_str7CString18from_vec_unchecked17hd6fe62231ec4fbf9E+0x1ad>
   23475:	48 8d 3d f0 a1 01 00 	lea    0x1a1f0(%rip),%rdi        # 3d66c <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0xd0c>
   2347c:	48 8d 15 55 3e 22 00 	lea    0x223e55(%rip),%rdx        # 2472d8 <__init_array_end+0x12c8>
   23483:	be 24 00 00 00       	mov    $0x24,%esi
   23488:	e8 23 3f fe ff       	callq  73b0 <_ZN4core9panicking5panic17h6861470adfbddef8E>
   2348d:	0f 0b                	ud2    
   2348f:	48 89 c3             	mov    %rax,%rbx
   23492:	48 89 e7             	mov    %rsp,%rdi
   23495:	e8 16 1a 00 00       	callq  24eb0 <_ZN4core3ptr13drop_in_place17h5563ae43ca5ac214E>
   2349a:	48 89 df             	mov    %rbx,%rdi
   2349d:	e8 fe 0b fe ff       	callq  40a0 <_Unwind_Resume@plt>
   234a2:	0f 0b                	ud2    
   234a4:	48 89 c3             	mov    %rax,%rbx
   234a7:	4c 89 ff             	mov    %r15,%rdi
   234aa:	e8 01 1a 00 00       	callq  24eb0 <_ZN4core3ptr13drop_in_place17h5563ae43ca5ac214E>
   234af:	48 89 df             	mov    %rbx,%rdi
   234b2:	e8 e9 0b fe ff       	callq  40a0 <_Unwind_Resume@plt>
   234b7:	0f 0b                	ud2    
   234b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000234c0 <_ZN3std9panicking11begin_panic17hc5f3eabb2c219d56E>:
   234c0:	48 83 ec 18          	sub    $0x18,%rsp
   234c4:	48 89 d1             	mov    %rdx,%rcx
   234c7:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
   234cc:	48 89 74 24 10       	mov    %rsi,0x10(%rsp)
   234d1:	48 8d 35 90 3f 22 00 	lea    0x223f90(%rip),%rsi        # 247468 <__init_array_end+0x1458>
   234d8:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   234dd:	31 d2                	xor    %edx,%edx
   234df:	e8 9c 05 00 00       	callq  23a80 <_ZN3std9panicking20rust_panic_with_hook17h7de8cfa1730f3618E>
   234e4:	0f 0b                	ud2    
   234e6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   234ed:	00 00 00 

00000000000234f0 <_ZN4core3ptr13drop_in_place17hdc1814fe4f8f9b15E>:
   234f0:	48 8b 3f             	mov    (%rdi),%rdi
   234f3:	ff 25 ff 49 22 00    	jmpq   *0x2249ff(%rip)        # 247ef8 <pthread_mutex_unlock@GLIBC_2.2.5>
   234f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000023500 <_ZN4core3ptr13drop_in_place17h05eb0579767fba66E>:
   23500:	48 8b 07             	mov    (%rdi),%rax
   23503:	48 85 c0             	test   %rax,%rax
   23506:	74 12                	je     2351a <_ZN4core3ptr13drop_in_place17h05eb0579767fba66E+0x1a>
   23508:	c6 00 00             	movb   $0x0,(%rax)
   2350b:	48 83 7f 08 00       	cmpq   $0x0,0x8(%rdi)
   23510:	74 08                	je     2351a <_ZN4core3ptr13drop_in_place17h05eb0579767fba66E+0x1a>
   23512:	48 8b 3f             	mov    (%rdi),%rdi
   23515:	e9 f6 1e fe ff       	jmpq   5410 <__rust_dealloc>
   2351a:	c3                   	retq   
   2351b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000023520 <_ZN3std3sys4unix7condvar7Condvar4init17h0d9dfb02507b432dE>:
   23520:	53                   	push   %rbx
   23521:	48 81 ec 80 00 00 00 	sub    $0x80,%rsp
   23528:	48 89 fb             	mov    %rdi,%rbx
   2352b:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   23530:	ff 15 22 4a 22 00    	callq  *0x224a22(%rip)        # 247f58 <pthread_condattr_init@GLIBC_2.2.5>
   23536:	89 44 24 70          	mov    %eax,0x70(%rsp)
   2353a:	85 c0                	test   %eax,%eax
   2353c:	75 56                	jne    23594 <_ZN3std3sys4unix7condvar7Condvar4init17h0d9dfb02507b432dE+0x74>
   2353e:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   23543:	be 01 00 00 00       	mov    $0x1,%esi
   23548:	ff 15 da 49 22 00    	callq  *0x2249da(%rip)        # 247f28 <pthread_condattr_setclock@GLIBC_2.3.3>
   2354e:	89 44 24 74          	mov    %eax,0x74(%rsp)
   23552:	85 c0                	test   %eax,%eax
   23554:	0f 85 b9 00 00 00    	jne    23613 <_ZN3std3sys4unix7condvar7Condvar4init17h0d9dfb02507b432dE+0xf3>
   2355a:	48 8d 74 24 08       	lea    0x8(%rsp),%rsi
   2355f:	48 89 df             	mov    %rbx,%rdi
   23562:	ff 15 80 49 22 00    	callq  *0x224980(%rip)        # 247ee8 <pthread_cond_init@GLIBC_2.3.2>
   23568:	89 44 24 78          	mov    %eax,0x78(%rsp)
   2356c:	85 c0                	test   %eax,%eax
   2356e:	0f 85 1e 01 00 00    	jne    23692 <_ZN3std3sys4unix7condvar7Condvar4init17h0d9dfb02507b432dE+0x172>
   23574:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   23579:	ff 15 d9 48 22 00    	callq  *0x2248d9(%rip)        # 247e58 <pthread_condattr_destroy@GLIBC_2.2.5>
   2357f:	89 44 24 7c          	mov    %eax,0x7c(%rsp)
   23583:	85 c0                	test   %eax,%eax
   23585:	0f 85 86 01 00 00    	jne    23711 <_ZN3std3sys4unix7condvar7Condvar4init17h0d9dfb02507b432dE+0x1f1>
   2358b:	48 81 c4 80 00 00 00 	add    $0x80,%rsp
   23592:	5b                   	pop    %rbx
   23593:	c3                   	retq   
   23594:	48 8d 44 24 70       	lea    0x70(%rsp),%rax
   23599:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   2359e:	48 8d 05 f3 8e 01 00 	lea    0x18ef3(%rip),%rax        # 3c498 <_ZN4core7unicode12unicode_data15grapheme_extend6BITSET17h68ce7f61ccfa32feE+0x9f8>
   235a5:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   235aa:	48 8d 44 24 10       	lea    0x10(%rsp),%rax
   235af:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   235b4:	48 8d 05 15 02 00 00 	lea    0x215(%rip),%rax        # 237d0 <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h60ee9c74ee2aa888E>
   235bb:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   235c0:	48 8d 4c 24 18       	lea    0x18(%rsp),%rcx
   235c5:	48 89 4c 24 30       	mov    %rcx,0x30(%rsp)
   235ca:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   235cf:	48 8d 05 c2 38 22 00 	lea    0x2238c2(%rip),%rax        # 246e98 <__init_array_end+0xe88>
   235d6:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
   235db:	48 c7 44 24 48 03 00 	movq   $0x3,0x48(%rsp)
   235e2:	00 00 
   235e4:	48 c7 44 24 50 00 00 	movq   $0x0,0x50(%rsp)
   235eb:	00 00 
   235ed:	48 8d 44 24 20       	lea    0x20(%rsp),%rax
   235f2:	48 89 44 24 60       	mov    %rax,0x60(%rsp)
   235f7:	48 c7 44 24 68 02 00 	movq   $0x2,0x68(%rsp)
   235fe:	00 00 
   23600:	48 8d 35 c1 38 22 00 	lea    0x2238c1(%rip),%rsi        # 246ec8 <__init_array_end+0xeb8>
   23607:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
   2360c:	e8 cf 03 00 00       	callq  239e0 <_ZN3std9panicking15begin_panic_fmt17h7fd3ef9bf535b4d1E>
   23611:	0f 0b                	ud2    
   23613:	48 8d 44 24 74       	lea    0x74(%rsp),%rax
   23618:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   2361d:	48 8d 05 74 8e 01 00 	lea    0x18e74(%rip),%rax        # 3c498 <_ZN4core7unicode12unicode_data15grapheme_extend6BITSET17h68ce7f61ccfa32feE+0x9f8>
   23624:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   23629:	48 8d 44 24 10       	lea    0x10(%rsp),%rax
   2362e:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   23633:	48 8d 05 96 01 00 00 	lea    0x196(%rip),%rax        # 237d0 <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h60ee9c74ee2aa888E>
   2363a:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   2363f:	48 8d 4c 24 18       	lea    0x18(%rsp),%rcx
   23644:	48 89 4c 24 30       	mov    %rcx,0x30(%rsp)
   23649:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   2364e:	48 8d 05 43 38 22 00 	lea    0x223843(%rip),%rax        # 246e98 <__init_array_end+0xe88>
   23655:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
   2365a:	48 c7 44 24 48 03 00 	movq   $0x3,0x48(%rsp)
   23661:	00 00 
   23663:	48 c7 44 24 50 00 00 	movq   $0x0,0x50(%rsp)
   2366a:	00 00 
   2366c:	48 8d 44 24 20       	lea    0x20(%rsp),%rax
   23671:	48 89 44 24 60       	mov    %rax,0x60(%rsp)
   23676:	48 c7 44 24 68 02 00 	movq   $0x2,0x68(%rsp)
   2367d:	00 00 
   2367f:	48 8d 35 5a 38 22 00 	lea    0x22385a(%rip),%rsi        # 246ee0 <__init_array_end+0xed0>
   23686:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
   2368b:	e8 50 03 00 00       	callq  239e0 <_ZN3std9panicking15begin_panic_fmt17h7fd3ef9bf535b4d1E>
   23690:	0f 0b                	ud2    
   23692:	48 8d 44 24 78       	lea    0x78(%rsp),%rax
   23697:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   2369c:	48 8d 05 f5 8d 01 00 	lea    0x18df5(%rip),%rax        # 3c498 <_ZN4core7unicode12unicode_data15grapheme_extend6BITSET17h68ce7f61ccfa32feE+0x9f8>
   236a3:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   236a8:	48 8d 44 24 10       	lea    0x10(%rsp),%rax
   236ad:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   236b2:	48 8d 05 17 01 00 00 	lea    0x117(%rip),%rax        # 237d0 <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h60ee9c74ee2aa888E>
   236b9:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   236be:	48 8d 4c 24 18       	lea    0x18(%rsp),%rcx
   236c3:	48 89 4c 24 30       	mov    %rcx,0x30(%rsp)
   236c8:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   236cd:	48 8d 05 c4 37 22 00 	lea    0x2237c4(%rip),%rax        # 246e98 <__init_array_end+0xe88>
   236d4:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
   236d9:	48 c7 44 24 48 03 00 	movq   $0x3,0x48(%rsp)
   236e0:	00 00 
   236e2:	48 c7 44 24 50 00 00 	movq   $0x0,0x50(%rsp)
   236e9:	00 00 
   236eb:	48 8d 44 24 20       	lea    0x20(%rsp),%rax
   236f0:	48 89 44 24 60       	mov    %rax,0x60(%rsp)
   236f5:	48 c7 44 24 68 02 00 	movq   $0x2,0x68(%rsp)
   236fc:	00 00 
   236fe:	48 8d 35 f3 37 22 00 	lea    0x2237f3(%rip),%rsi        # 246ef8 <__init_array_end+0xee8>
   23705:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
   2370a:	e8 d1 02 00 00       	callq  239e0 <_ZN3std9panicking15begin_panic_fmt17h7fd3ef9bf535b4d1E>
   2370f:	0f 0b                	ud2    
   23711:	48 8d 44 24 7c       	lea    0x7c(%rsp),%rax
   23716:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   2371b:	48 8d 05 76 8d 01 00 	lea    0x18d76(%rip),%rax        # 3c498 <_ZN4core7unicode12unicode_data15grapheme_extend6BITSET17h68ce7f61ccfa32feE+0x9f8>
   23722:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   23727:	48 8d 44 24 10       	lea    0x10(%rsp),%rax
   2372c:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   23731:	48 8d 05 98 00 00 00 	lea    0x98(%rip),%rax        # 237d0 <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h60ee9c74ee2aa888E>
   23738:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   2373d:	48 8d 4c 24 18       	lea    0x18(%rsp),%rcx
   23742:	48 89 4c 24 30       	mov    %rcx,0x30(%rsp)
   23747:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   2374c:	48 8d 05 45 37 22 00 	lea    0x223745(%rip),%rax        # 246e98 <__init_array_end+0xe88>
   23753:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
   23758:	48 c7 44 24 48 03 00 	movq   $0x3,0x48(%rsp)
   2375f:	00 00 
   23761:	48 c7 44 24 50 00 00 	movq   $0x0,0x50(%rsp)
   23768:	00 00 
   2376a:	48 8d 44 24 20       	lea    0x20(%rsp),%rax
   2376f:	48 89 44 24 60       	mov    %rax,0x60(%rsp)
   23774:	48 c7 44 24 68 02 00 	movq   $0x2,0x68(%rsp)
   2377b:	00 00 
   2377d:	48 8d 35 8c 37 22 00 	lea    0x22378c(%rip),%rsi        # 246f10 <__init_array_end+0xf00>
   23784:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
   23789:	e8 52 02 00 00       	callq  239e0 <_ZN3std9panicking15begin_panic_fmt17h7fd3ef9bf535b4d1E>
   2378e:	0f 0b                	ud2    

0000000000023790 <_ZN4core3ptr13drop_in_place17h2d183e1f8ab9667fE>:
   23790:	53                   	push   %rbx
   23791:	48 89 fb             	mov    %rdi,%rbx
   23794:	48 8b 3f             	mov    (%rdi),%rdi
   23797:	ff 15 d3 47 22 00    	callq  *0x2247d3(%rip)        # 247f70 <pthread_cond_destroy@GLIBC_2.3.2>
   2379d:	48 8b 3b             	mov    (%rbx),%rdi
   237a0:	5b                   	pop    %rbx
   237a1:	e9 6a 1c fe ff       	jmpq   5410 <__rust_dealloc>
   237a6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   237ad:	00 00 00 

00000000000237b0 <_ZN4core3ptr13drop_in_place17h017f82f6988ac582E>:
   237b0:	53                   	push   %rbx
   237b1:	48 89 fb             	mov    %rdi,%rbx
   237b4:	48 8b 3f             	mov    (%rdi),%rdi
   237b7:	ff 15 7b 46 22 00    	callq  *0x22467b(%rip)        # 247e38 <pthread_mutex_destroy@GLIBC_2.2.5>
   237bd:	48 8b 3b             	mov    (%rbx),%rdi
   237c0:	5b                   	pop    %rbx
   237c1:	e9 4a 1c fe ff       	jmpq   5410 <__rust_dealloc>
   237c6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   237cd:	00 00 00 

00000000000237d0 <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h60ee9c74ee2aa888E>:
   237d0:	53                   	push   %rbx
   237d1:	48 81 ec 80 00 00 00 	sub    $0x80,%rsp
   237d8:	49 89 f2             	mov    %rsi,%r10
   237db:	48 8b 07             	mov    (%rdi),%rax
   237de:	8b 4e 30             	mov    0x30(%rsi),%ecx
   237e1:	f6 c1 10             	test   $0x10,%cl
   237e4:	0f 85 e7 00 00 00    	jne    238d1 <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h60ee9c74ee2aa888E+0x101>
   237ea:	8b 30                	mov    (%rax),%esi
   237ec:	f6 c1 20             	test   $0x20,%cl
   237ef:	0f 85 18 01 00 00    	jne    2390d <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h60ee9c74ee2aa888E+0x13d>
   237f5:	48 63 c6             	movslq %esi,%rax
   237f8:	48 89 c7             	mov    %rax,%rdi
   237fb:	48 f7 df             	neg    %rdi
   237fe:	48 0f 4c f8          	cmovl  %rax,%rdi
   23802:	41 bb 27 00 00 00    	mov    $0x27,%r11d
   23808:	48 81 ff 10 27 00 00 	cmp    $0x2710,%rdi
   2380f:	0f 82 6a 01 00 00    	jb     2397f <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h60ee9c74ee2aa888E+0x1af>
   23815:	41 bb 27 00 00 00    	mov    $0x27,%r11d
   2381b:	49 b8 4b 59 86 38 d6 	movabs $0x346dc5d63886594b,%r8
   23822:	c5 6d 34 
   23825:	4c 8d 0d 3e 7e 01 00 	lea    0x17e3e(%rip),%r9        # 3b66a <_ZN4core3str15UTF8_CHAR_WIDTH17h639c7c3d8ce7e983E+0x112>
   2382c:	0f 1f 40 00          	nopl   0x0(%rax)
   23830:	48 89 f8             	mov    %rdi,%rax
   23833:	49 f7 e0             	mul    %r8
   23836:	48 c1 ea 0b          	shr    $0xb,%rdx
   2383a:	69 c2 10 27 00 00    	imul   $0x2710,%edx,%eax
   23840:	89 f9                	mov    %edi,%ecx
   23842:	29 c1                	sub    %eax,%ecx
   23844:	0f b7 c1             	movzwl %cx,%eax
   23847:	c1 e8 02             	shr    $0x2,%eax
   2384a:	69 c0 7b 14 00 00    	imul   $0x147b,%eax,%eax
   23850:	c1 e8 11             	shr    $0x11,%eax
   23853:	6b d8 64             	imul   $0x64,%eax,%ebx
   23856:	29 d9                	sub    %ebx,%ecx
   23858:	0f b7 c9             	movzwl %cx,%ecx
   2385b:	41 0f b7 04 41       	movzwl (%r9,%rax,2),%eax
   23860:	66 42 89 44 1c fc    	mov    %ax,-0x4(%rsp,%r11,1)
   23866:	41 0f b7 04 49       	movzwl (%r9,%rcx,2),%eax
   2386b:	66 42 89 44 1c fe    	mov    %ax,-0x2(%rsp,%r11,1)
   23871:	49 83 c3 fc          	add    $0xfffffffffffffffc,%r11
   23875:	48 81 ff ff e0 f5 05 	cmp    $0x5f5e0ff,%rdi
   2387c:	48 89 d7             	mov    %rdx,%rdi
   2387f:	77 af                	ja     23830 <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h60ee9c74ee2aa888E+0x60>
   23881:	48 83 fa 63          	cmp    $0x63,%rdx
   23885:	76 2f                	jbe    238b6 <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h60ee9c74ee2aa888E+0xe6>
   23887:	0f b7 c2             	movzwl %dx,%eax
   2388a:	c1 e8 02             	shr    $0x2,%eax
   2388d:	69 c0 7b 14 00 00    	imul   $0x147b,%eax,%eax
   23893:	c1 e8 11             	shr    $0x11,%eax
   23896:	6b c8 64             	imul   $0x64,%eax,%ecx
   23899:	29 ca                	sub    %ecx,%edx
   2389b:	0f b7 ca             	movzwl %dx,%ecx
   2389e:	48 8d 15 c5 7d 01 00 	lea    0x17dc5(%rip),%rdx        # 3b66a <_ZN4core3str15UTF8_CHAR_WIDTH17h639c7c3d8ce7e983E+0x112>
   238a5:	0f b7 0c 4a          	movzwl (%rdx,%rcx,2),%ecx
   238a9:	66 42 89 4c 1c fe    	mov    %cx,-0x2(%rsp,%r11,1)
   238af:	49 83 c3 fe          	add    $0xfffffffffffffffe,%r11
   238b3:	48 89 c2             	mov    %rax,%rdx
   238b6:	48 83 fa 0a          	cmp    $0xa,%rdx
   238ba:	0f 8d d1 00 00 00    	jge    23991 <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h60ee9c74ee2aa888E+0x1c1>
   238c0:	80 c2 30             	add    $0x30,%dl
   238c3:	42 88 54 1c ff       	mov    %dl,-0x1(%rsp,%r11,1)
   238c8:	49 83 c3 ff          	add    $0xffffffffffffffff,%r11
   238cc:	e9 d5 00 00 00       	jmpq   239a6 <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h60ee9c74ee2aa888E+0x1d6>
   238d1:	8b 08                	mov    (%rax),%ecx
   238d3:	4c 8d 84 24 80 00 00 	lea    0x80(%rsp),%r8
   238da:	00 
   238db:	45 31 c9             	xor    %r9d,%r9d
   238de:	89 c8                	mov    %ecx,%eax
   238e0:	c1 e8 04             	shr    $0x4,%eax
   238e3:	80 e1 0f             	and    $0xf,%cl
   238e6:	8d 51 30             	lea    0x30(%rcx),%edx
   238e9:	8d 71 57             	lea    0x57(%rcx),%esi
   238ec:	80 f9 0a             	cmp    $0xa,%cl
   238ef:	0f b6 ca             	movzbl %dl,%ecx
   238f2:	40 0f b6 d6          	movzbl %sil,%edx
   238f6:	0f 42 d1             	cmovb  %ecx,%edx
   238f9:	41 88 50 ff          	mov    %dl,-0x1(%r8)
   238fd:	49 83 c0 ff          	add    $0xffffffffffffffff,%r8
   23901:	49 83 c1 01          	add    $0x1,%r9
   23905:	89 c1                	mov    %eax,%ecx
   23907:	85 c0                	test   %eax,%eax
   23909:	75 d5                	jne    238e0 <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h60ee9c74ee2aa888E+0x110>
   2390b:	eb 3f                	jmp    2394c <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h60ee9c74ee2aa888E+0x17c>
   2390d:	4c 8d 84 24 80 00 00 	lea    0x80(%rsp),%r8
   23914:	00 
   23915:	45 31 c9             	xor    %r9d,%r9d
   23918:	89 f0                	mov    %esi,%eax
   2391a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   23920:	c1 e8 04             	shr    $0x4,%eax
   23923:	40 80 e6 0f          	and    $0xf,%sil
   23927:	8d 4e 30             	lea    0x30(%rsi),%ecx
   2392a:	8d 56 37             	lea    0x37(%rsi),%edx
   2392d:	40 80 fe 0a          	cmp    $0xa,%sil
   23931:	0f b6 c9             	movzbl %cl,%ecx
   23934:	0f b6 d2             	movzbl %dl,%edx
   23937:	0f 42 d1             	cmovb  %ecx,%edx
   2393a:	41 88 50 ff          	mov    %dl,-0x1(%r8)
   2393e:	49 83 c0 ff          	add    $0xffffffffffffffff,%r8
   23942:	49 83 c1 01          	add    $0x1,%r9
   23946:	89 c6                	mov    %eax,%esi
   23948:	85 c0                	test   %eax,%eax
   2394a:	75 d4                	jne    23920 <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h60ee9c74ee2aa888E+0x150>
   2394c:	bf 80 00 00 00       	mov    $0x80,%edi
   23951:	4c 29 cf             	sub    %r9,%rdi
   23954:	48 81 ff 81 00 00 00 	cmp    $0x81,%rdi
   2395b:	73 75                	jae    239d2 <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h60ee9c74ee2aa888E+0x202>
   2395d:	48 8d 15 92 98 01 00 	lea    0x19892(%rip),%rdx        # 3d1f6 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x896>
   23964:	b9 02 00 00 00       	mov    $0x2,%ecx
   23969:	4c 89 d7             	mov    %r10,%rdi
   2396c:	be 01 00 00 00       	mov    $0x1,%esi
   23971:	e8 7a 3c fe ff       	callq  75f0 <_ZN4core3fmt9Formatter12pad_integral17hc55c32e78eb96054E>
   23976:	48 81 c4 80 00 00 00 	add    $0x80,%rsp
   2397d:	5b                   	pop    %rbx
   2397e:	c3                   	retq   
   2397f:	48 89 fa             	mov    %rdi,%rdx
   23982:	48 83 fa 63          	cmp    $0x63,%rdx
   23986:	0f 87 fb fe ff ff    	ja     23887 <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h60ee9c74ee2aa888E+0xb7>
   2398c:	e9 25 ff ff ff       	jmpq   238b6 <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h60ee9c74ee2aa888E+0xe6>
   23991:	48 8d 05 d2 7c 01 00 	lea    0x17cd2(%rip),%rax        # 3b66a <_ZN4core3str15UTF8_CHAR_WIDTH17h639c7c3d8ce7e983E+0x112>
   23998:	0f b7 04 50          	movzwl (%rax,%rdx,2),%eax
   2399c:	66 42 89 44 1c fe    	mov    %ax,-0x2(%rsp,%r11,1)
   239a2:	49 83 c3 fe          	add    $0xfffffffffffffffe,%r11
   239a6:	4e 8d 04 1c          	lea    (%rsp,%r11,1),%r8
   239aa:	41 b9 27 00 00 00    	mov    $0x27,%r9d
   239b0:	4d 29 d9             	sub    %r11,%r9
   239b3:	f7 d6                	not    %esi
   239b5:	c1 ee 1f             	shr    $0x1f,%esi
   239b8:	48 8d 15 79 9a 01 00 	lea    0x19a79(%rip),%rdx        # 3d438 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0xad8>
   239bf:	4c 89 d7             	mov    %r10,%rdi
   239c2:	31 c9                	xor    %ecx,%ecx
   239c4:	e8 27 3c fe ff       	callq  75f0 <_ZN4core3fmt9Formatter12pad_integral17hc55c32e78eb96054E>
   239c9:	48 81 c4 80 00 00 00 	add    $0x80,%rsp
   239d0:	5b                   	pop    %rbx
   239d1:	c3                   	retq   
   239d2:	be 80 00 00 00       	mov    $0x80,%esi
   239d7:	e8 74 42 fe ff       	callq  7c50 <_ZN4core5slice22slice_index_order_fail17h7bcf2f94ba9e06deE>
   239dc:	0f 0b                	ud2    
   239de:	66 90                	xchg   %ax,%ax

00000000000239e0 <_ZN3std9panicking15begin_panic_fmt17h7fd3ef9bf535b4d1E>:
   239e0:	48 83 ec 28          	sub    $0x28,%rsp
   239e4:	48 8d 05 4d 9a 01 00 	lea    0x19a4d(%rip),%rax        # 3d438 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0xad8>
   239eb:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   239f0:	48 8d 05 31 35 22 00 	lea    0x223531(%rip),%rax        # 246f28 <__init_array_end+0xf18>
   239f7:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   239fc:	48 89 7c 24 18       	mov    %rdi,0x18(%rsp)
   23a01:	48 89 74 24 20       	mov    %rsi,0x20(%rsp)
   23a06:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   23a0b:	e8 10 00 00 00       	callq  23a20 <rust_begin_unwind>
   23a10:	0f 0b                	ud2    
   23a12:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   23a19:	00 00 00 
   23a1c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000023a20 <rust_begin_unwind>:
   23a20:	53                   	push   %rbx
   23a21:	48 83 ec 20          	sub    $0x20,%rsp
   23a25:	48 8b 57 10          	mov    0x10(%rdi),%rdx
   23a29:	48 85 d2             	test   %rdx,%rdx
   23a2c:	75 1a                	jne    23a48 <rust_begin_unwind+0x28>
   23a2e:	48 8d 3d ec 98 01 00 	lea    0x198ec(%rip),%rdi        # 3d321 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x9c1>
   23a35:	48 8d 15 0c 35 22 00 	lea    0x22350c(%rip),%rdx        # 246f48 <__init_array_end+0xf38>
   23a3c:	be 2b 00 00 00       	mov    $0x2b,%esi
   23a41:	e8 6a 39 fe ff       	callq  73b0 <_ZN4core9panicking5panic17h6861470adfbddef8E>
   23a46:	0f 0b                	ud2    
   23a48:	48 8b 4f 18          	mov    0x18(%rdi),%rcx
   23a4c:	48 89 14 24          	mov    %rdx,(%rsp)
   23a50:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
   23a57:	00 00 
   23a59:	48 8d 35 00 35 22 00 	lea    0x223500(%rip),%rsi        # 246f60 <__init_array_end+0xf50>
   23a60:	48 89 e7             	mov    %rsp,%rdi
   23a63:	e8 18 00 00 00       	callq  23a80 <_ZN3std9panicking20rust_panic_with_hook17h7de8cfa1730f3618E>
   23a68:	0f 0b                	ud2    
   23a6a:	48 89 c3             	mov    %rax,%rbx
   23a6d:	48 89 e7             	mov    %rsp,%rdi
   23a70:	e8 9b 05 00 00       	callq  24010 <_ZN4core3ptr13drop_in_place17ha378f3426b2dbd88E>
   23a75:	48 89 df             	mov    %rbx,%rdi
   23a78:	e8 23 06 fe ff       	callq  40a0 <_Unwind_Resume@plt>
   23a7d:	0f 0b                	ud2    
   23a7f:	90                   	nop

0000000000023a80 <_ZN3std9panicking20rust_panic_with_hook17h7de8cfa1730f3618E>:
   23a80:	55                   	push   %rbp
   23a81:	41 57                	push   %r15
   23a83:	41 56                	push   %r14
   23a85:	41 55                	push   %r13
   23a87:	41 54                	push   %r12
   23a89:	53                   	push   %rbx
   23a8a:	48 81 ec a8 00 00 00 	sub    $0xa8,%rsp
   23a91:	48 89 cb             	mov    %rcx,%rbx
   23a94:	49 89 f6             	mov    %rsi,%r14
   23a97:	49 89 ff             	mov    %rdi,%r15
   23a9a:	64 48 83 3c 25 a0 ff 	cmpq   $0x1,%fs:0xffffffffffffffa0
   23aa1:	ff ff 01 
   23aa4:	75 5d                	jne    23b03 <_ZN3std9panicking20rust_panic_with_hook17h7de8cfa1730f3618E+0x83>
   23aa6:	64 48 8b 2c 25 a8 ff 	mov    %fs:0xffffffffffffffa8,%rbp
   23aad:	ff ff 
   23aaf:	48 83 c5 01          	add    $0x1,%rbp
   23ab3:	64 48 89 2c 25 a8 ff 	mov    %rbp,%fs:0xffffffffffffffa8
   23aba:	ff ff 
   23abc:	48 83 fd 02          	cmp    $0x2,%rbp
   23ac0:	76 58                	jbe    23b1a <_ZN3std9panicking20rust_panic_with_hook17h7de8cfa1730f3618E+0x9a>
   23ac2:	48 8d 05 07 35 22 00 	lea    0x223507(%rip),%rax        # 246fd0 <__init_array_end+0xfc0>
   23ac9:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   23ace:	48 c7 44 24 18 01 00 	movq   $0x1,0x18(%rsp)
   23ad5:	00 00 
   23ad7:	48 c7 44 24 20 00 00 	movq   $0x0,0x20(%rsp)
   23ade:	00 00 
   23ae0:	48 8d 05 51 99 01 00 	lea    0x19951(%rip),%rax        # 3d438 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0xad8>
   23ae7:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   23aec:	48 c7 44 24 38 00 00 	movq   $0x0,0x38(%rsp)
   23af3:	00 00 
   23af5:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
   23afa:	e8 31 05 00 00       	callq  24030 <_ZN3std10sys_common4util10dumb_print17hee149336858ece96E>
   23aff:	0f 0b                	ud2    
   23b01:	0f 0b                	ud2    
   23b03:	66 0f 6f 05 c5 68 01 	movdqa 0x168c5(%rip),%xmm0        # 3a3d0 <_fini+0x8c>
   23b0a:	00 
   23b0b:	64 66 0f 7f 04 25 a0 	movdqa %xmm0,%fs:0xffffffffffffffa0
   23b12:	ff ff ff 
   23b15:	bd 01 00 00 00       	mov    $0x1,%ebp
   23b1a:	48 8d 3d c7 45 22 00 	lea    0x2245c7(%rip),%rdi        # 2480e8 <_ZN3std9panicking9HOOK_LOCK17ha86a6c31c40c0ce5E>
   23b21:	ff 15 89 43 22 00    	callq  *0x224389(%rip)        # 247eb0 <pthread_rwlock_rdlock@GLIBC_2.2.5>
   23b27:	89 44 24 78          	mov    %eax,0x78(%rsp)
   23b2b:	85 c0                	test   %eax,%eax
   23b2d:	74 28                	je     23b57 <_ZN3std9panicking20rust_panic_with_hook17h7de8cfa1730f3618E+0xd7>
   23b2f:	83 f8 23             	cmp    $0x23,%eax
   23b32:	0f 84 fb 00 00 00    	je     23c33 <_ZN3std9panicking20rust_panic_with_hook17h7de8cfa1730f3618E+0x1b3>
   23b38:	83 f8 0b             	cmp    $0xb,%eax
   23b3b:	75 64                	jne    23ba1 <_ZN3std9panicking20rust_panic_with_hook17h7de8cfa1730f3618E+0x121>
   23b3d:	48 8d 3d f4 98 01 00 	lea    0x198f4(%rip),%rdi        # 3d438 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0xad8>
   23b44:	48 8d 15 3d 34 22 00 	lea    0x22343d(%rip),%rdx        # 246f88 <__init_array_end+0xf78>
   23b4b:	be 24 00 00 00       	mov    $0x24,%esi
   23b50:	e8 6b f9 ff ff       	callq  234c0 <_ZN3std9panicking11begin_panic17hc5f3eabb2c219d56E>
   23b55:	0f 0b                	ud2    
   23b57:	80 3d ca 45 22 00 00 	cmpb   $0x0,0x2245ca(%rip)        # 248128 <_ZN3std9panicking9HOOK_LOCK17ha86a6c31c40c0ce5E+0x40>
   23b5e:	0f 85 c2 00 00 00    	jne    23c26 <_ZN3std9panicking20rust_panic_with_hook17h7de8cfa1730f3618E+0x1a6>
   23b64:	f0 48 83 05 b3 45 22 	lock addq $0x1,0x2245b3(%rip)        # 248120 <_ZN3std9panicking9HOOK_LOCK17ha86a6c31c40c0ce5E+0x38>
   23b6b:	00 01 
   23b6d:	4c 89 ff             	mov    %r15,%rdi
   23b70:	41 ff 56 20          	callq  *0x20(%r14)
   23b74:	49 89 c4             	mov    %rax,%r12
   23b77:	49 89 d5             	mov    %rdx,%r13
   23b7a:	64 48 83 3c 25 a0 ff 	cmpq   $0x1,%fs:0xffffffffffffffa0
   23b81:	ff ff 01 
   23b84:	0f 85 c3 00 00 00    	jne    23c4d <_ZN3std9panicking20rust_panic_with_hook17h7de8cfa1730f3618E+0x1cd>
   23b8a:	b0 01                	mov    $0x1,%al
   23b8c:	64 48 83 3c 25 a8 ff 	cmpq   $0x1,%fs:0xffffffffffffffa8
   23b93:	ff ff 01 
   23b96:	0f 86 c5 00 00 00    	jbe    23c61 <_ZN3std9panicking20rust_panic_with_hook17h7de8cfa1730f3618E+0x1e1>
   23b9c:	e9 a5 01 00 00       	jmpq   23d46 <_ZN3std9panicking20rust_panic_with_hook17h7de8cfa1730f3618E+0x2c6>
   23ba1:	48 8d 44 24 78       	lea    0x78(%rsp),%rax
   23ba6:	48 89 84 24 88 00 00 	mov    %rax,0x88(%rsp)
   23bad:	00 
   23bae:	48 8d 05 e3 88 01 00 	lea    0x188e3(%rip),%rax        # 3c498 <_ZN4core7unicode12unicode_data15grapheme_extend6BITSET17h68ce7f61ccfa32feE+0x9f8>
   23bb5:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
   23bba:	48 8d 84 24 88 00 00 	lea    0x88(%rsp),%rax
   23bc1:	00 
   23bc2:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
   23bc7:	48 8d 05 02 fc ff ff 	lea    -0x3fe(%rip),%rax        # 237d0 <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h60ee9c74ee2aa888E>
   23bce:	48 89 44 24 60       	mov    %rax,0x60(%rsp)
   23bd3:	48 8d 4c 24 48       	lea    0x48(%rsp),%rcx
   23bd8:	48 89 4c 24 68       	mov    %rcx,0x68(%rsp)
   23bdd:	48 89 44 24 70       	mov    %rax,0x70(%rsp)
   23be2:	48 8d 05 af 32 22 00 	lea    0x2232af(%rip),%rax        # 246e98 <__init_array_end+0xe88>
   23be9:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   23bee:	48 c7 44 24 18 03 00 	movq   $0x3,0x18(%rsp)
   23bf5:	00 00 
   23bf7:	48 c7 44 24 20 00 00 	movq   $0x0,0x20(%rsp)
   23bfe:	00 00 
   23c00:	48 8d 44 24 58       	lea    0x58(%rsp),%rax
   23c05:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   23c0a:	48 c7 44 24 38 02 00 	movq   $0x2,0x38(%rsp)
   23c11:	00 00 
   23c13:	48 8d 35 9e 33 22 00 	lea    0x22339e(%rip),%rsi        # 246fb8 <__init_array_end+0xfa8>
   23c1a:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
   23c1f:	e8 bc fd ff ff       	callq  239e0 <_ZN3std9panicking15begin_panic_fmt17h7fd3ef9bf535b4d1E>
   23c24:	0f 0b                	ud2    
   23c26:	48 8d 3d bb 44 22 00 	lea    0x2244bb(%rip),%rdi        # 2480e8 <_ZN3std9panicking9HOOK_LOCK17ha86a6c31c40c0ce5E>
   23c2d:	ff 15 ed 42 22 00    	callq  *0x2242ed(%rip)        # 247f20 <pthread_rwlock_unlock@GLIBC_2.2.5>
   23c33:	48 8d 3d 22 98 01 00 	lea    0x19822(%rip),%rdi        # 3d45c <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0xafc>
   23c3a:	48 8d 15 5f 33 22 00 	lea    0x22335f(%rip),%rdx        # 246fa0 <__init_array_end+0xf90>
   23c41:	be 29 00 00 00       	mov    $0x29,%esi
   23c46:	e8 75 f8 ff ff       	callq  234c0 <_ZN3std9panicking11begin_panic17hc5f3eabb2c219d56E>
   23c4b:	0f 0b                	ud2    
   23c4d:	b8 01 00 00 00       	mov    $0x1,%eax
   23c52:	66 48 0f 6e c0       	movq   %rax,%xmm0
   23c57:	64 66 0f 7f 04 25 a0 	movdqa %xmm0,%fs:0xffffffffffffffa0
   23c5e:	ff ff ff 
   23c61:	48 8b 0d c8 44 22 00 	mov    0x2244c8(%rip),%rcx        # 248130 <_ZN3std10sys_common9backtrace18rust_backtrace_env7ENABLED17hed6d151c7f082a9aE>
   23c68:	48 83 f9 02          	cmp    $0x2,%rcx
   23c6c:	74 38                	je     23ca6 <_ZN3std9panicking20rust_panic_with_hook17h7de8cfa1730f3618E+0x226>
   23c6e:	48 83 f9 01          	cmp    $0x1,%rcx
   23c72:	74 39                	je     23cad <_ZN3std9panicking20rust_panic_with_hook17h7de8cfa1730f3618E+0x22d>
   23c74:	b0 01                	mov    $0x1,%al
   23c76:	48 85 c9             	test   %rcx,%rcx
   23c79:	0f 85 c7 00 00 00    	jne    23d46 <_ZN3std9panicking20rust_panic_with_hook17h7de8cfa1730f3618E+0x2c6>
   23c7f:	48 8d 35 40 98 01 00 	lea    0x19840(%rip),%rsi        # 3d4c6 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0xb66>
   23c86:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
   23c8b:	ba 0e 00 00 00       	mov    $0xe,%edx
   23c90:	e8 1b 05 00 00       	callq  241b0 <_ZN3std3env7_var_os17ha8d89ced89fe941fE>
   23c95:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
   23c9a:	48 85 ff             	test   %rdi,%rdi
   23c9d:	75 15                	jne    23cb4 <_ZN3std9panicking20rust_panic_with_hook17h7de8cfa1730f3618E+0x234>
   23c9f:	b2 05                	mov    $0x5,%dl
   23ca1:	e9 82 00 00 00       	jmpq   23d28 <_ZN3std9panicking20rust_panic_with_hook17h7de8cfa1730f3618E+0x2a8>
   23ca6:	31 c0                	xor    %eax,%eax
   23ca8:	e9 99 00 00 00       	jmpq   23d46 <_ZN3std9panicking20rust_panic_with_hook17h7de8cfa1730f3618E+0x2c6>
   23cad:	b0 04                	mov    $0x4,%al
   23caf:	e9 92 00 00 00       	jmpq   23d46 <_ZN3std9panicking20rust_panic_with_hook17h7de8cfa1730f3618E+0x2c6>
   23cb4:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   23cb9:	48 8b 4c 24 20       	mov    0x20(%rsp),%rcx
   23cbe:	48 83 f9 04          	cmp    $0x4,%rcx
   23cc2:	74 20                	je     23ce4 <_ZN3std9panicking20rust_panic_with_hook17h7de8cfa1730f3618E+0x264>
   23cc4:	48 83 f9 01          	cmp    $0x1,%rcx
   23cc8:	75 35                	jne    23cff <_ZN3std9panicking20rust_panic_with_hook17h7de8cfa1730f3618E+0x27f>
   23cca:	b2 04                	mov    $0x4,%dl
   23ccc:	be 01 00 00 00       	mov    $0x1,%esi
   23cd1:	48 8d 0d fc 97 01 00 	lea    0x197fc(%rip),%rcx        # 3d4d4 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0xb74>
   23cd8:	48 39 cf             	cmp    %rcx,%rdi
   23cdb:	74 29                	je     23d06 <_ZN3std9panicking20rust_panic_with_hook17h7de8cfa1730f3618E+0x286>
   23cdd:	80 3f 30             	cmpb   $0x30,(%rdi)
   23ce0:	75 1d                	jne    23cff <_ZN3std9panicking20rust_panic_with_hook17h7de8cfa1730f3618E+0x27f>
   23ce2:	eb 22                	jmp    23d06 <_ZN3std9panicking20rust_panic_with_hook17h7de8cfa1730f3618E+0x286>
   23ce4:	b2 01                	mov    $0x1,%dl
   23ce6:	be 03 00 00 00       	mov    $0x3,%esi
   23ceb:	48 8d 0d aa 87 01 00 	lea    0x187aa(%rip),%rcx        # 3c49c <_ZN4core7unicode12unicode_data15grapheme_extend6BITSET17h68ce7f61ccfa32feE+0x9fc>
   23cf2:	48 39 cf             	cmp    %rcx,%rdi
   23cf5:	74 0f                	je     23d06 <_ZN3std9panicking20rust_panic_with_hook17h7de8cfa1730f3618E+0x286>
   23cf7:	81 3f 66 75 6c 6c    	cmpl   $0x6c6c7566,(%rdi)
   23cfd:	74 07                	je     23d06 <_ZN3std9panicking20rust_panic_with_hook17h7de8cfa1730f3618E+0x286>
   23cff:	be 02 00 00 00       	mov    $0x2,%esi
   23d04:	31 d2                	xor    %edx,%edx
   23d06:	48 85 c0             	test   %rax,%rax
   23d09:	74 1d                	je     23d28 <_ZN3std9panicking20rust_panic_with_hook17h7de8cfa1730f3618E+0x2a8>
   23d0b:	89 54 24 44          	mov    %edx,0x44(%rsp)
   23d0f:	48 89 b4 24 98 00 00 	mov    %rsi,0x98(%rsp)
   23d16:	00 
   23d17:	e8 f4 16 fe ff       	callq  5410 <__rust_dealloc>
   23d1c:	48 8b b4 24 98 00 00 	mov    0x98(%rsp),%rsi
   23d23:	00 
   23d24:	8b 54 24 44          	mov    0x44(%rsp),%edx
   23d28:	80 fa 05             	cmp    $0x5,%dl
   23d2b:	b9 01 00 00 00       	mov    $0x1,%ecx
   23d30:	48 0f 45 ce          	cmovne %rsi,%rcx
   23d34:	0f b6 d2             	movzbl %dl,%edx
   23d37:	b8 04 00 00 00       	mov    $0x4,%eax
   23d3c:	0f 45 c2             	cmovne %edx,%eax
   23d3f:	48 87 0d ea 43 22 00 	xchg   %rcx,0x2243ea(%rip)        # 248130 <_ZN3std10sys_common9backtrace18rust_backtrace_env7ENABLED17hed6d151c7f082a9aE>
   23d46:	88 44 24 07          	mov    %al,0x7(%rsp)
   23d4a:	48 89 9c 24 a0 00 00 	mov    %rbx,0xa0(%rsp)
   23d51:	00 
   23d52:	49 8b 5d 18          	mov    0x18(%r13),%rbx
   23d56:	4c 89 e7             	mov    %r12,%rdi
   23d59:	ff d3                	callq  *%rbx
   23d5b:	48 b9 64 97 b0 70 d9 	movabs $0x111094d970b09764,%rcx
   23d62:	94 10 11 
   23d65:	48 39 c8             	cmp    %rcx,%rax
   23d68:	75 34                	jne    23d9e <_ZN3std9panicking20rust_panic_with_hook17h7de8cfa1730f3618E+0x31e>
   23d6a:	49 8b 0c 24          	mov    (%r12),%rcx
   23d6e:	49 8b 44 24 08       	mov    0x8(%r12),%rax
   23d73:	48 89 4c 24 78       	mov    %rcx,0x78(%rsp)
   23d78:	48 89 84 24 80 00 00 	mov    %rax,0x80(%rsp)
   23d7f:	00 
   23d80:	64 48 83 3c 25 60 ff 	cmpq   $0x1,%fs:0xffffffffffffff60
   23d87:	ff ff 01 
   23d8a:	75 48                	jne    23dd4 <_ZN3std9panicking20rust_panic_with_hook17h7de8cfa1730f3618E+0x354>
   23d8c:	64 48 8b 04 25 00 00 	mov    %fs:0x0,%rax
   23d93:	00 00 
   23d95:	48 8d b8 68 ff ff ff 	lea    -0x98(%rax),%rdi
   23d9c:	eb 53                	jmp    23df1 <_ZN3std9panicking20rust_panic_with_hook17h7de8cfa1730f3618E+0x371>
   23d9e:	4c 89 e7             	mov    %r12,%rdi
   23da1:	ff d3                	callq  *%rbx
   23da3:	48 b9 7a 15 59 df af 	movabs $0xf3f27bafdf59157a,%rcx
   23daa:	7b f2 f3 
   23dad:	48 39 c8             	cmp    %rcx,%rax
   23db0:	75 74                	jne    23e26 <_ZN3std9panicking20rust_panic_with_hook17h7de8cfa1730f3618E+0x3a6>
   23db2:	49 8b 0c 24          	mov    (%r12),%rcx
   23db6:	49 8b 44 24 10       	mov    0x10(%r12),%rax
   23dbb:	48 89 4c 24 78       	mov    %rcx,0x78(%rsp)
   23dc0:	48 89 84 24 80 00 00 	mov    %rax,0x80(%rsp)
   23dc7:	00 
   23dc8:	64 48 83 3c 25 60 ff 	cmpq   $0x1,%fs:0xffffffffffffff60
   23dcf:	ff ff 01 
   23dd2:	74 b8                	je     23d8c <_ZN3std9panicking20rust_panic_with_hook17h7de8cfa1730f3618E+0x30c>
   23dd4:	e8 b7 ee ff ff       	callq  22c90 <_ZN3std6thread5local4fast12Key$LT$T$GT$14try_initialize17h181e6352b875e74bE>
   23dd9:	48 89 c7             	mov    %rax,%rdi
   23ddc:	48 85 c0             	test   %rax,%rax
   23ddf:	75 10                	jne    23df1 <_ZN3std9panicking20rust_panic_with_hook17h7de8cfa1730f3618E+0x371>
   23de1:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
   23de8:	00 00 
   23dea:	45 31 ed             	xor    %r13d,%r13d
   23ded:	31 c0                	xor    %eax,%eax
   23def:	eb 63                	jmp    23e54 <_ZN3std9panicking20rust_panic_with_hook17h7de8cfa1730f3618E+0x3d4>
   23df1:	e8 ca ef ff ff       	callq  22dc0 <_ZN3std10sys_common11thread_info10ThreadInfo4with28_$u7b$$u7b$closure$u7d$$u7d$17hc3ac9120fadfa13eE>
   23df6:	49 89 c5             	mov    %rax,%r13
   23df9:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   23dfe:	48 83 c0 10          	add    $0x10,%rax
   23e02:	49 8b 4d 10          	mov    0x10(%r13),%rcx
   23e06:	48 85 c9             	test   %rcx,%rcx
   23e09:	48 0f 44 c1          	cmove  %rcx,%rax
   23e0d:	75 04                	jne    23e13 <_ZN3std9panicking20rust_panic_with_hook17h7de8cfa1730f3618E+0x393>
   23e0f:	31 c0                	xor    %eax,%eax
   23e11:	eb 41                	jmp    23e54 <_ZN3std9panicking20rust_panic_with_hook17h7de8cfa1730f3618E+0x3d4>
   23e13:	48 8b 78 08          	mov    0x8(%rax),%rdi
   23e17:	48 83 ef 01          	sub    $0x1,%rdi
   23e1b:	73 34                	jae    23e51 <_ZN3std9panicking20rust_panic_with_hook17h7de8cfa1730f3618E+0x3d1>
   23e1d:	31 f6                	xor    %esi,%esi
   23e1f:	e8 ac 3d fe ff       	callq  7bd0 <_ZN4core5slice20slice_index_len_fail17h52736412c1ce1871E>
   23e24:	0f 0b                	ud2    
   23e26:	48 8d 0d eb 68 01 00 	lea    0x168eb(%rip),%rcx        # 3a718 <_ZN4core7unicode12unicode_data2cc19BITSET_INDEX_CHUNKS17h8a1f39cd536e9344E+0x258>
   23e2d:	b8 08 00 00 00       	mov    $0x8,%eax
   23e32:	48 89 4c 24 78       	mov    %rcx,0x78(%rsp)
   23e37:	48 89 84 24 80 00 00 	mov    %rax,0x80(%rsp)
   23e3e:	00 
   23e3f:	64 48 83 3c 25 60 ff 	cmpq   $0x1,%fs:0xffffffffffffff60
   23e46:	ff ff 01 
   23e49:	0f 84 3d ff ff ff    	je     23d8c <_ZN3std9panicking20rust_panic_with_hook17h7de8cfa1730f3618E+0x30c>
   23e4f:	eb 83                	jmp    23dd4 <_ZN3std9panicking20rust_panic_with_hook17h7de8cfa1730f3618E+0x354>
   23e51:	48 8b 00             	mov    (%rax),%rax
   23e54:	48 85 c0             	test   %rax,%rax
   23e57:	b9 09 00 00 00       	mov    $0x9,%ecx
   23e5c:	48 0f 45 cf          	cmovne %rdi,%rcx
   23e60:	48 8d 15 6e 96 01 00 	lea    0x1966e(%rip),%rdx        # 3d4d5 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0xb75>
   23e67:	48 0f 45 d0          	cmovne %rax,%rdx
   23e6b:	48 89 94 24 88 00 00 	mov    %rdx,0x88(%rsp)
   23e72:	00 
   23e73:	48 89 8c 24 90 00 00 	mov    %rcx,0x90(%rsp)
   23e7a:	00 
   23e7b:	48 8d 84 24 88 00 00 	lea    0x88(%rsp),%rax
   23e82:	00 
   23e83:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   23e88:	48 8d 44 24 78       	lea    0x78(%rsp),%rax
   23e8d:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   23e92:	48 8d 84 24 a0 00 00 	lea    0xa0(%rsp),%rax
   23e99:	00 
   23e9a:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   23e9f:	48 8d 44 24 07       	lea    0x7(%rsp),%rax
   23ea4:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   23ea9:	31 ff                	xor    %edi,%edi
   23eab:	e8 20 06 00 00       	callq  244d0 <_ZN3std2io5stdio9set_panic17haf0faa6f833bfa0aE>
   23eb0:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
   23eb5:	48 89 54 24 50       	mov    %rdx,0x50(%rsp)
   23eba:	48 85 c0             	test   %rax,%rax
   23ebd:	75 1a                	jne    23ed9 <_ZN3std9panicking20rust_panic_with_hook17h7de8cfa1730f3618E+0x459>
   23ebf:	b3 01                	mov    $0x1,%bl
   23ec1:	48 8d 15 a0 31 22 00 	lea    0x2231a0(%rip),%rdx        # 247068 <__init_array_end+0x1058>
   23ec8:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
   23ecd:	48 8d 74 24 58       	lea    0x58(%rsp),%rsi
   23ed2:	e8 b9 07 00 00       	callq  24690 <_ZN3std9panicking12default_hook28_$u7b$$u7b$closure$u7d$$u7d$17haac34625f45d0048E>
   23ed7:	eb 50                	jmp    23f29 <_ZN3std9panicking20rust_panic_with_hook17h7de8cfa1730f3618E+0x4a9>
   23ed9:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
   23ede:	48 89 54 24 60       	mov    %rdx,0x60(%rsp)
   23ee3:	48 8d 15 36 31 22 00 	lea    0x223136(%rip),%rdx        # 247020 <__init_array_end+0x1010>
   23eea:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
   23eef:	48 8d 74 24 58       	lea    0x58(%rsp),%rsi
   23ef4:	e8 97 07 00 00       	callq  24690 <_ZN3std9panicking12default_hook28_$u7b$$u7b$closure$u7d$$u7d$17haac34625f45d0048E>
   23ef9:	48 8b 7c 24 58       	mov    0x58(%rsp),%rdi
   23efe:	48 8b 74 24 60       	mov    0x60(%rsp),%rsi
   23f03:	e8 c8 05 00 00       	callq  244d0 <_ZN3std2io5stdio9set_panic17haf0faa6f833bfa0aE>
   23f08:	49 89 c4             	mov    %rax,%r12
   23f0b:	48 85 c0             	test   %rax,%rax
   23f0e:	74 17                	je     23f27 <_ZN3std9panicking20rust_panic_with_hook17h7de8cfa1730f3618E+0x4a7>
   23f10:	48 89 d3             	mov    %rdx,%rbx
   23f13:	4c 89 e7             	mov    %r12,%rdi
   23f16:	ff 12                	callq  *(%rdx)
   23f18:	48 83 7b 08 00       	cmpq   $0x0,0x8(%rbx)
   23f1d:	74 08                	je     23f27 <_ZN3std9panicking20rust_panic_with_hook17h7de8cfa1730f3618E+0x4a7>
   23f1f:	4c 89 e7             	mov    %r12,%rdi
   23f22:	e8 e9 14 fe ff       	callq  5410 <__rust_dealloc>
   23f27:	31 db                	xor    %ebx,%ebx
   23f29:	4d 85 ed             	test   %r13,%r13
   23f2c:	74 12                	je     23f40 <_ZN3std9panicking20rust_panic_with_hook17h7de8cfa1730f3618E+0x4c0>
   23f2e:	f0 49 83 6d 00 01    	lock subq $0x1,0x0(%r13)
   23f34:	75 0a                	jne    23f40 <_ZN3std9panicking20rust_panic_with_hook17h7de8cfa1730f3618E+0x4c0>
   23f36:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   23f3b:	e8 d0 f2 ff ff       	callq  23210 <_ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17h671cd2375e6e21b7E>
   23f40:	84 db                	test   %bl,%bl
   23f42:	74 26                	je     23f6a <_ZN3std9panicking20rust_panic_with_hook17h7de8cfa1730f3618E+0x4ea>
   23f44:	48 8b 5c 24 48       	mov    0x48(%rsp),%rbx
   23f49:	48 85 db             	test   %rbx,%rbx
   23f4c:	74 1c                	je     23f6a <_ZN3std9panicking20rust_panic_with_hook17h7de8cfa1730f3618E+0x4ea>
   23f4e:	4c 8b 64 24 50       	mov    0x50(%rsp),%r12
   23f53:	48 89 df             	mov    %rbx,%rdi
   23f56:	41 ff 14 24          	callq  *(%r12)
   23f5a:	49 83 7c 24 08 00    	cmpq   $0x0,0x8(%r12)
   23f60:	74 08                	je     23f6a <_ZN3std9panicking20rust_panic_with_hook17h7de8cfa1730f3618E+0x4ea>
   23f62:	48 89 df             	mov    %rbx,%rdi
   23f65:	e8 a6 14 fe ff       	callq  5410 <__rust_dealloc>
   23f6a:	f0 48 83 2d ad 41 22 	lock subq $0x1,0x2241ad(%rip)        # 248120 <_ZN3std9panicking9HOOK_LOCK17ha86a6c31c40c0ce5E+0x38>
   23f71:	00 01 
   23f73:	48 8d 3d 6e 41 22 00 	lea    0x22416e(%rip),%rdi        # 2480e8 <_ZN3std9panicking9HOOK_LOCK17ha86a6c31c40c0ce5E>
   23f7a:	ff 15 a0 3f 22 00    	callq  *0x223fa0(%rip)        # 247f20 <pthread_rwlock_unlock@GLIBC_2.2.5>
   23f80:	48 83 fd 01          	cmp    $0x1,%rbp
   23f84:	76 0c                	jbe    23f92 <_ZN3std9panicking20rust_panic_with_hook17h7de8cfa1730f3618E+0x512>
   23f86:	48 8d 05 53 30 22 00 	lea    0x223053(%rip),%rax        # 246fe0 <__init_array_end+0xfd0>
   23f8d:	e9 37 fb ff ff       	jmpq   23ac9 <_ZN3std9panicking20rust_panic_with_hook17h7de8cfa1730f3618E+0x49>
   23f92:	4c 89 ff             	mov    %r15,%rdi
   23f95:	4c 89 f6             	mov    %r14,%rsi
   23f98:	e8 33 01 00 00       	callq  240d0 <rust_panic>
   23f9d:	0f 0b                	ud2    
   23f9f:	49 89 c6             	mov    %rax,%r14
   23fa2:	4c 89 e7             	mov    %r12,%rdi
   23fa5:	48 89 de             	mov    %rbx,%rsi
   23fa8:	e8 63 09 00 00       	callq  24910 <_ZN5alloc5alloc8box_free17h3741427eaa5804e6E>
   23fad:	eb 4d                	jmp    23ffc <_ZN3std9panicking20rust_panic_with_hook17h7de8cfa1730f3618E+0x57c>
   23faf:	49 89 c6             	mov    %rax,%r14
   23fb2:	48 89 df             	mov    %rbx,%rdi
   23fb5:	4c 89 e6             	mov    %r12,%rsi
   23fb8:	e8 53 09 00 00       	callq  24910 <_ZN5alloc5alloc8box_free17h3741427eaa5804e6E>
   23fbd:	4c 89 f7             	mov    %r14,%rdi
   23fc0:	e8 db 00 fe ff       	callq  40a0 <_Unwind_Resume@plt>
   23fc5:	0f 0b                	ud2    
   23fc7:	eb 30                	jmp    23ff9 <_ZN3std9panicking20rust_panic_with_hook17h7de8cfa1730f3618E+0x579>
   23fc9:	49 89 c6             	mov    %rax,%r14
   23fcc:	48 8d 7c 24 58       	lea    0x58(%rsp),%rdi
   23fd1:	e8 9a 09 00 00       	callq  24970 <_ZN4core3ptr13drop_in_place17h012f1dfb78ca1ae1E>
   23fd6:	eb 24                	jmp    23ffc <_ZN3std9panicking20rust_panic_with_hook17h7de8cfa1730f3618E+0x57c>
   23fd8:	49 89 c6             	mov    %rax,%r14
   23fdb:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   23fe0:	e8 bb ed ff ff       	callq  22da0 <_ZN4core3ptr13drop_in_place17ha26c711544338914E>
   23fe5:	48 8d 7c 24 48       	lea    0x48(%rsp),%rdi
   23fea:	e8 31 09 00 00       	callq  24920 <_ZN4core3ptr13drop_in_place17h0897c195c9d674a2E>
   23fef:	4c 89 f7             	mov    %r14,%rdi
   23ff2:	e8 a9 00 fe ff       	callq  40a0 <_Unwind_Resume@plt>
   23ff7:	0f 0b                	ud2    
   23ff9:	49 89 c6             	mov    %rax,%r14
   23ffc:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   24001:	e8 9a ed ff ff       	callq  22da0 <_ZN4core3ptr13drop_in_place17ha26c711544338914E>
   24006:	4c 89 f7             	mov    %r14,%rdi
   24009:	e8 92 00 fe ff       	callq  40a0 <_Unwind_Resume@plt>
   2400e:	0f 0b                	ud2    

0000000000024010 <_ZN4core3ptr13drop_in_place17ha378f3426b2dbd88E>:
   24010:	48 89 f8             	mov    %rdi,%rax
   24013:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
   24017:	48 85 ff             	test   %rdi,%rdi
   2401a:	74 0c                	je     24028 <_ZN4core3ptr13drop_in_place17ha378f3426b2dbd88E+0x18>
   2401c:	48 83 78 10 00       	cmpq   $0x0,0x10(%rax)
   24021:	74 05                	je     24028 <_ZN4core3ptr13drop_in_place17ha378f3426b2dbd88E+0x18>
   24023:	e9 e8 13 fe ff       	jmpq   5410 <__rust_dealloc>
   24028:	c3                   	retq   
   24029:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000024030 <_ZN3std10sys_common4util10dumb_print17hee149336858ece96E>:
   24030:	41 56                	push   %r14
   24032:	53                   	push   %rbx
   24033:	48 83 ec 58          	sub    $0x58,%rsp
   24037:	0f 10 07             	movups (%rdi),%xmm0
   2403a:	0f 10 4f 10          	movups 0x10(%rdi),%xmm1
   2403e:	0f 10 57 20          	movups 0x20(%rdi),%xmm2
   24042:	0f 29 54 24 40       	movaps %xmm2,0x40(%rsp)
   24047:	0f 29 4c 24 30       	movaps %xmm1,0x30(%rsp)
   2404c:	0f 29 44 24 20       	movaps %xmm0,0x20(%rsp)
   24051:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
   24056:	48 8d 74 24 08       	lea    0x8(%rsp),%rsi
   2405b:	48 8d 54 24 20       	lea    0x20(%rsp),%rdx
   24060:	e8 fb 0b 00 00       	callq  24c60 <_ZN3std2io5Write9write_fmt17h51ff6798850372b7E>
   24065:	8a 44 24 10          	mov    0x10(%rsp),%al
   24069:	3c 03                	cmp    $0x3,%al
   2406b:	77 0c                	ja     24079 <_ZN3std10sys_common4util10dumb_print17hee149336858ece96E+0x49>
   2406d:	3c 02                	cmp    $0x2,%al
   2406f:	74 08                	je     24079 <_ZN3std10sys_common4util10dumb_print17hee149336858ece96E+0x49>
   24071:	48 83 c4 58          	add    $0x58,%rsp
   24075:	5b                   	pop    %rbx
   24076:	41 5e                	pop    %r14
   24078:	c3                   	retq   
   24079:	48 8b 5c 24 18       	mov    0x18(%rsp),%rbx
   2407e:	48 8b 3b             	mov    (%rbx),%rdi
   24081:	48 8b 43 08          	mov    0x8(%rbx),%rax
   24085:	ff 10                	callq  *(%rax)
   24087:	48 8b 43 08          	mov    0x8(%rbx),%rax
   2408b:	48 83 78 08 00       	cmpq   $0x0,0x8(%rax)
   24090:	74 08                	je     2409a <_ZN3std10sys_common4util10dumb_print17hee149336858ece96E+0x6a>
   24092:	48 8b 3b             	mov    (%rbx),%rdi
   24095:	e8 76 13 fe ff       	callq  5410 <__rust_dealloc>
   2409a:	48 89 df             	mov    %rbx,%rdi
   2409d:	e8 6e 13 fe ff       	callq  5410 <__rust_dealloc>
   240a2:	48 83 c4 58          	add    $0x58,%rsp
   240a6:	5b                   	pop    %rbx
   240a7:	41 5e                	pop    %r14
   240a9:	c3                   	retq   
   240aa:	49 89 c6             	mov    %rax,%r14
   240ad:	48 8b 3b             	mov    (%rbx),%rdi
   240b0:	48 8b 73 08          	mov    0x8(%rbx),%rsi
   240b4:	e8 57 08 00 00       	callq  24910 <_ZN5alloc5alloc8box_free17h3741427eaa5804e6E>
   240b9:	48 89 df             	mov    %rbx,%rdi
   240bc:	e8 6f 0d 00 00       	callq  24e30 <_ZN5alloc5alloc8box_free17h20e506aa40102463E>
   240c1:	4c 89 f7             	mov    %r14,%rdi
   240c4:	e8 d7 ff fd ff       	callq  40a0 <_Unwind_Resume@plt>
   240c9:	0f 0b                	ud2    
   240cb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000240d0 <rust_panic>:
   240d0:	48 83 ec 58          	sub    $0x58,%rsp
   240d4:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
   240d9:	48 89 74 24 10       	mov    %rsi,0x10(%rsp)
   240de:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   240e3:	e8 b8 2c ff ff       	callq  16da0 <__rust_start_panic>
   240e8:	89 44 24 04          	mov    %eax,0x4(%rsp)
   240ec:	48 8d 44 24 04       	lea    0x4(%rsp),%rax
   240f1:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   240f6:	48 8d 05 03 5c fe ff 	lea    -0x1a3fd(%rip),%rax        # 9d00 <_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$u32$GT$3fmt17h0d5c971f484cf42aE>
   240fd:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   24102:	48 8d 05 e7 2e 22 00 	lea    0x222ee7(%rip),%rax        # 246ff0 <__init_array_end+0xfe0>
   24109:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   2410e:	48 c7 44 24 30 01 00 	movq   $0x1,0x30(%rsp)
   24115:	00 00 
   24117:	48 c7 44 24 38 00 00 	movq   $0x0,0x38(%rsp)
   2411e:	00 00 
   24120:	48 8d 44 24 18       	lea    0x18(%rsp),%rax
   24125:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
   2412a:	48 c7 44 24 50 01 00 	movq   $0x1,0x50(%rsp)
   24131:	00 00 
   24133:	48 8d 7c 24 28       	lea    0x28(%rsp),%rdi
   24138:	e8 03 00 00 00       	callq  24140 <_ZN3std10sys_common4util5abort17hf0f03bd92b6237cbE>
   2413d:	0f 0b                	ud2    
   2413f:	90                   	nop

0000000000024140 <_ZN3std10sys_common4util5abort17hf0f03bd92b6237cbE>:
   24140:	48 83 ec 48          	sub    $0x48,%rsp
   24144:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
   24149:	48 8d 05 80 63 fe ff 	lea    -0x19c80(%rip),%rax        # a4d0 <_ZN57_$LT$core..fmt..Arguments$u20$as$u20$core..fmt..Debug$GT$3fmt17hdeddc72b2c89543dE>
   24150:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   24155:	48 8d 05 a4 2e 22 00 	lea    0x222ea4(%rip),%rax        # 247000 <__init_array_end+0xff0>
   2415c:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   24161:	48 c7 44 24 20 02 00 	movq   $0x2,0x20(%rsp)
   24168:	00 00 
   2416a:	48 c7 44 24 28 00 00 	movq   $0x0,0x28(%rsp)
   24171:	00 00 
   24173:	48 8d 44 24 08       	lea    0x8(%rsp),%rax
   24178:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   2417d:	48 c7 44 24 40 01 00 	movq   $0x1,0x40(%rsp)
   24184:	00 00 
   24186:	48 8d 7c 24 18       	lea    0x18(%rsp),%rdi
   2418b:	e8 a0 fe ff ff       	callq  24030 <_ZN3std10sys_common4util10dumb_print17hee149336858ece96E>
   24190:	e8 0b 00 00 00       	callq  241a0 <_ZN3std3sys4unix14abort_internal17h7f749c8888a2e168E>
   24195:	0f 0b                	ud2    
   24197:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   2419e:	00 00 

00000000000241a0 <_ZN3std3sys4unix14abort_internal17h7f749c8888a2e168E>:
   241a0:	50                   	push   %rax
   241a1:	ff 15 e9 3b 22 00    	callq  *0x223be9(%rip)        # 247d90 <abort@GLIBC_2.2.5>
   241a7:	0f 0b                	ud2    
   241a9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000241b0 <_ZN3std3env7_var_os17ha8d89ced89fe941fE>:
   241b0:	55                   	push   %rbp
   241b1:	41 57                	push   %r15
   241b3:	41 56                	push   %r14
   241b5:	41 55                	push   %r13
   241b7:	41 54                	push   %r12
   241b9:	53                   	push   %rbx
   241ba:	48 83 ec 78          	sub    $0x78,%rsp
   241be:	48 89 d3             	mov    %rdx,%rbx
   241c1:	49 89 f5             	mov    %rsi,%r13
   241c4:	49 89 fe             	mov    %rdi,%r14
   241c7:	48 89 74 24 68       	mov    %rsi,0x68(%rsp)
   241cc:	48 89 54 24 70       	mov    %rdx,0x70(%rsp)
   241d1:	49 89 d4             	mov    %rdx,%r12
   241d4:	49 ff c4             	inc    %r12
   241d7:	75 33                	jne    2420c <_ZN3std3env7_var_os17ha8d89ced89fe941fE+0x5c>
   241d9:	49 c7 c4 ff ff ff ff 	mov    $0xffffffffffffffff,%r12
   241e0:	be 01 00 00 00       	mov    $0x1,%esi
   241e5:	48 c7 c7 ff ff ff ff 	mov    $0xffffffffffffffff,%rdi
   241ec:	e8 cf 11 fe ff       	callq  53c0 <__rust_alloc>
   241f1:	49 89 c7             	mov    %rax,%r15
   241f4:	48 85 c0             	test   %rax,%rax
   241f7:	75 2c                	jne    24225 <_ZN3std3env7_var_os17ha8d89ced89fe941fE+0x75>
   241f9:	be 01 00 00 00       	mov    $0x1,%esi
   241fe:	48 c7 c7 ff ff ff ff 	mov    $0xffffffffffffffff,%rdi
   24205:	e8 b6 12 fe ff       	callq  54c0 <_ZN5alloc5alloc18handle_alloc_error17hf7bb8682f6c8b1d7E>
   2420a:	0f 0b                	ud2    
   2420c:	be 01 00 00 00       	mov    $0x1,%esi
   24211:	4c 89 e7             	mov    %r12,%rdi
   24214:	e8 a7 11 fe ff       	callq  53c0 <__rust_alloc>
   24219:	48 85 c0             	test   %rax,%rax
   2421c:	0f 84 36 01 00 00    	je     24358 <_ZN3std3env7_var_os17ha8d89ced89fe941fE+0x1a8>
   24222:	49 89 c7             	mov    %rax,%r15
   24225:	4c 89 ff             	mov    %r15,%rdi
   24228:	4c 89 ee             	mov    %r13,%rsi
   2422b:	48 89 da             	mov    %rbx,%rdx
   2422e:	ff 15 9c 3c 22 00    	callq  *0x223c9c(%rip)        # 247ed0 <memcpy@GLIBC_2.14>
   24234:	4c 89 ff             	mov    %r15,%rdi
   24237:	31 f6                	xor    %esi,%esi
   24239:	48 89 da             	mov    %rbx,%rdx
   2423c:	ff 15 4e 3c 22 00    	callq  *0x223c4e(%rip)        # 247e90 <memchr@GLIBC_2.2.5>
   24242:	48 85 c0             	test   %rax,%rax
   24245:	0f 85 d8 00 00 00    	jne    24323 <_ZN3std3env7_var_os17ha8d89ced89fe941fE+0x173>
   2424b:	4c 89 7c 24 08       	mov    %r15,0x8(%rsp)
   24250:	4c 89 64 24 10       	mov    %r12,0x10(%rsp)
   24255:	48 89 5c 24 18       	mov    %rbx,0x18(%rsp)
   2425a:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   2425f:	e8 7c f0 ff ff       	callq  232e0 <_ZN3std3ffi5c_str7CString18from_vec_unchecked17hd6fe62231ec4fbf9E>
   24264:	49 89 c4             	mov    %rax,%r12
   24267:	49 89 d7             	mov    %rdx,%r15
   2426a:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   2426f:	48 89 54 24 40       	mov    %rdx,0x40(%rsp)
   24274:	48 8d 1d e5 3e 22 00 	lea    0x223ee5(%rip),%rbx        # 248160 <_ZN3std3sys4unix2os8env_lock8ENV_LOCK17h9b7b3f4bfce68972E>
   2427b:	48 89 df             	mov    %rbx,%rdi
   2427e:	ff 15 5c 3d 22 00    	callq  *0x223d5c(%rip)        # 247fe0 <pthread_mutex_lock@GLIBC_2.2.5>
   24284:	48 89 5c 24 08       	mov    %rbx,0x8(%rsp)
   24289:	4c 89 e7             	mov    %r12,%rdi
   2428c:	ff 15 d6 3a 22 00    	callq  *0x223ad6(%rip)        # 247d68 <getenv@GLIBC_2.2.5>
   24292:	48 85 c0             	test   %rax,%rax
   24295:	74 4e                	je     242e5 <_ZN3std3env7_var_os17ha8d89ced89fe941fE+0x135>
   24297:	48 89 c5             	mov    %rax,%rbp
   2429a:	48 89 c7             	mov    %rax,%rdi
   2429d:	ff 15 75 3b 22 00    	callq  *0x223b75(%rip)        # 247e18 <strlen@GLIBC_2.2.5>
   242a3:	48 89 c3             	mov    %rax,%rbx
   242a6:	41 bd 01 00 00 00    	mov    $0x1,%r13d
   242ac:	48 85 c0             	test   %rax,%rax
   242af:	74 23                	je     242d4 <_ZN3std3env7_var_os17ha8d89ced89fe941fE+0x124>
   242b1:	48 83 fb ff          	cmp    $0xffffffffffffffff,%rbx
   242b5:	0f 84 8d 00 00 00    	je     24348 <_ZN3std3env7_var_os17ha8d89ced89fe941fE+0x198>
   242bb:	be 01 00 00 00       	mov    $0x1,%esi
   242c0:	48 89 df             	mov    %rbx,%rdi
   242c3:	e8 f8 10 fe ff       	callq  53c0 <__rust_alloc>
   242c8:	49 89 c5             	mov    %rax,%r13
   242cb:	48 85 c0             	test   %rax,%rax
   242ce:	0f 84 fe 00 00 00    	je     243d2 <_ZN3std3env7_var_os17ha8d89ced89fe941fE+0x222>
   242d4:	4c 89 ef             	mov    %r13,%rdi
   242d7:	48 89 ee             	mov    %rbp,%rsi
   242da:	48 89 da             	mov    %rbx,%rdx
   242dd:	ff 15 ed 3b 22 00    	callq  *0x223bed(%rip)        # 247ed0 <memcpy@GLIBC_2.14>
   242e3:	eb 03                	jmp    242e8 <_ZN3std3env7_var_os17ha8d89ced89fe941fE+0x138>
   242e5:	45 31 ed             	xor    %r13d,%r13d
   242e8:	48 8d 3d 71 3e 22 00 	lea    0x223e71(%rip),%rdi        # 248160 <_ZN3std3sys4unix2os8env_lock8ENV_LOCK17h9b7b3f4bfce68972E>
   242ef:	ff 15 03 3c 22 00    	callq  *0x223c03(%rip)        # 247ef8 <pthread_mutex_unlock@GLIBC_2.2.5>
   242f5:	41 c6 04 24 00       	movb   $0x0,(%r12)
   242fa:	4d 85 ff             	test   %r15,%r15
   242fd:	74 0a                	je     24309 <_ZN3std3env7_var_os17ha8d89ced89fe941fE+0x159>
   242ff:	48 8b 7c 24 38       	mov    0x38(%rsp),%rdi
   24304:	e8 07 11 fe ff       	callq  5410 <__rust_dealloc>
   24309:	4d 89 2e             	mov    %r13,(%r14)
   2430c:	49 89 5e 08          	mov    %rbx,0x8(%r14)
   24310:	49 89 5e 10          	mov    %rbx,0x10(%r14)
   24314:	48 83 c4 78          	add    $0x78,%rsp
   24318:	5b                   	pop    %rbx
   24319:	41 5c                	pop    %r12
   2431b:	41 5d                	pop    %r13
   2431d:	41 5e                	pop    %r14
   2431f:	41 5f                	pop    %r15
   24321:	5d                   	pop    %rbp
   24322:	c3                   	retq   
   24323:	bf 21 00 00 00       	mov    $0x21,%edi
   24328:	be 01 00 00 00       	mov    $0x1,%esi
   2432d:	e8 8e 10 fe ff       	callq  53c0 <__rust_alloc>
   24332:	48 85 c0             	test   %rax,%rax
   24335:	75 30                	jne    24367 <_ZN3std3env7_var_os17ha8d89ced89fe941fE+0x1b7>
   24337:	bf 21 00 00 00       	mov    $0x21,%edi
   2433c:	be 01 00 00 00       	mov    $0x1,%esi
   24341:	e8 7a 11 fe ff       	callq  54c0 <_ZN5alloc5alloc18handle_alloc_error17hf7bb8682f6c8b1d7E>
   24346:	0f 0b                	ud2    
   24348:	48 c7 c7 ff ff ff ff 	mov    $0xffffffffffffffff,%rdi
   2434f:	31 f6                	xor    %esi,%esi
   24351:	e8 7a 38 fe ff       	callq  7bd0 <_ZN4core5slice20slice_index_len_fail17h52736412c1ce1871E>
   24356:	0f 0b                	ud2    
   24358:	be 01 00 00 00       	mov    $0x1,%esi
   2435d:	4c 89 e7             	mov    %r12,%rdi
   24360:	e8 5b 11 fe ff       	callq  54c0 <_ZN5alloc5alloc18handle_alloc_error17hf7bb8682f6c8b1d7E>
   24365:	0f 0b                	ud2    
   24367:	48 89 c3             	mov    %rax,%rbx
   2436a:	8a 05 02 96 01 00    	mov    0x19602(%rip),%al        # 3d972 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x1012>
   24370:	88 43 20             	mov    %al,0x20(%rbx)
   24373:	0f 10 05 e8 95 01 00 	movups 0x195e8(%rip),%xmm0        # 3d962 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x1002>
   2437a:	0f 11 43 10          	movups %xmm0,0x10(%rbx)
   2437e:	0f 10 05 cd 95 01 00 	movups 0x195cd(%rip),%xmm0        # 3d952 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0xff2>
   24385:	0f 11 03             	movups %xmm0,(%rbx)
   24388:	bf 18 00 00 00       	mov    $0x18,%edi
   2438d:	be 08 00 00 00       	mov    $0x8,%esi
   24392:	e8 29 10 fe ff       	callq  53c0 <__rust_alloc>
   24397:	48 85 c0             	test   %rax,%rax
   2439a:	74 25                	je     243c1 <_ZN3std3env7_var_os17ha8d89ced89fe941fE+0x211>
   2439c:	48 89 c5             	mov    %rax,%rbp
   2439f:	48 89 18             	mov    %rbx,(%rax)
   243a2:	0f 28 05 b7 60 01 00 	movaps 0x160b7(%rip),%xmm0        # 3a460 <_fini+0x11c>
   243a9:	0f 11 40 08          	movups %xmm0,0x8(%rax)
   243ad:	bf 18 00 00 00       	mov    $0x18,%edi
   243b2:	be 08 00 00 00       	mov    $0x8,%esi
   243b7:	e8 04 10 fe ff       	callq  53c0 <__rust_alloc>
   243bc:	48 85 c0             	test   %rax,%rax
   243bf:	75 20                	jne    243e1 <_ZN3std3env7_var_os17ha8d89ced89fe941fE+0x231>
   243c1:	bf 18 00 00 00       	mov    $0x18,%edi
   243c6:	be 08 00 00 00       	mov    $0x8,%esi
   243cb:	e8 f0 10 fe ff       	callq  54c0 <_ZN5alloc5alloc18handle_alloc_error17hf7bb8682f6c8b1d7E>
   243d0:	0f 0b                	ud2    
   243d2:	be 01 00 00 00       	mov    $0x1,%esi
   243d7:	48 89 df             	mov    %rbx,%rdi
   243da:	e8 e1 10 fe ff       	callq  54c0 <_ZN5alloc5alloc18handle_alloc_error17hf7bb8682f6c8b1d7E>
   243df:	0f 0b                	ud2    
   243e1:	48 89 c3             	mov    %rax,%rbx
   243e4:	48 89 28             	mov    %rbp,(%rax)
   243e7:	48 8d 05 f2 2c 22 00 	lea    0x222cf2(%rip),%rax        # 2470e0 <__init_array_end+0x10d0>
   243ee:	48 89 43 08          	mov    %rax,0x8(%rbx)
   243f2:	c6 43 10 0b          	movb   $0xb,0x10(%rbx)
   243f6:	8b 44 24 08          	mov    0x8(%rsp),%eax
   243fa:	8b 4c 24 0b          	mov    0xb(%rsp),%ecx
   243fe:	89 43 11             	mov    %eax,0x11(%rbx)
   24401:	89 4b 14             	mov    %ecx,0x14(%rbx)
   24404:	4c 89 ff             	mov    %r15,%rdi
   24407:	e8 04 10 fe ff       	callq  5410 <__rust_dealloc>
   2440c:	48 c7 44 24 58 02 00 	movq   $0x2,0x58(%rsp)
   24413:	00 00 
   24415:	48 89 5c 24 60       	mov    %rbx,0x60(%rsp)
   2441a:	48 8d 44 24 68       	lea    0x68(%rsp),%rax
   2441f:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   24424:	48 8d 05 f5 39 00 00 	lea    0x39f5(%rip),%rax        # 27e20 <_ZN55_$LT$std..path..Display$u20$as$u20$core..fmt..Debug$GT$3fmt17h6de65bdb23bc7e99E>
   2442b:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
   24430:	48 8d 44 24 58       	lea    0x58(%rsp),%rax
   24435:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
   2443a:	48 8d 05 ff 39 00 00 	lea    0x39ff(%rip),%rax        # 27e40 <_ZN60_$LT$std..io..error..Error$u20$as$u20$core..fmt..Display$GT$3fmt17hbf6e43c0b945c8c2E>
   24441:	48 89 44 24 50       	mov    %rax,0x50(%rsp)
   24446:	48 8d 05 03 2f 22 00 	lea    0x222f03(%rip),%rax        # 247350 <__init_array_end+0x1340>
   2444d:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   24452:	48 c7 44 24 10 02 00 	movq   $0x2,0x10(%rsp)
   24459:	00 00 
   2445b:	48 c7 44 24 18 00 00 	movq   $0x0,0x18(%rsp)
   24462:	00 00 
   24464:	48 8d 44 24 38       	lea    0x38(%rsp),%rax
   24469:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   2446e:	48 c7 44 24 30 02 00 	movq   $0x2,0x30(%rsp)
   24475:	00 00 
   24477:	48 8d 35 f2 2e 22 00 	lea    0x222ef2(%rip),%rsi        # 247370 <__init_array_end+0x1360>
   2447e:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   24483:	e8 58 f5 ff ff       	callq  239e0 <_ZN3std9panicking15begin_panic_fmt17h7fd3ef9bf535b4d1E>
   24488:	e9 c9 fe ff ff       	jmpq   24356 <_ZN3std3env7_var_os17ha8d89ced89fe941fE+0x1a6>
   2448d:	48 89 c3             	mov    %rax,%rbx
   24490:	48 8d 7c 24 58       	lea    0x58(%rsp),%rdi
   24495:	e8 16 3c 00 00       	callq  280b0 <_ZN4core3ptr13drop_in_place17h0756a94afff92eb4E>
   2449a:	48 89 df             	mov    %rbx,%rdi
   2449d:	e8 fe fb fd ff       	callq  40a0 <_Unwind_Resume@plt>
   244a2:	0f 0b                	ud2    
   244a4:	48 89 c3             	mov    %rax,%rbx
   244a7:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   244ac:	e8 3f f0 ff ff       	callq  234f0 <_ZN4core3ptr13drop_in_place17hdc1814fe4f8f9b15E>
   244b1:	48 8d 7c 24 38       	lea    0x38(%rsp),%rdi
   244b6:	e8 45 39 00 00       	callq  27e00 <_ZN4core3ptr13drop_in_place17h6bed1153d7cfe84cE>
   244bb:	48 89 df             	mov    %rbx,%rdi
   244be:	e8 dd fb fd ff       	callq  40a0 <_Unwind_Resume@plt>
   244c3:	0f 0b                	ud2    
   244c5:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   244cc:	00 00 00 
   244cf:	90                   	nop

00000000000244d0 <_ZN3std2io5stdio9set_panic17haf0faa6f833bfa0aE>:
   244d0:	41 57                	push   %r15
   244d2:	41 56                	push   %r14
   244d4:	53                   	push   %rbx
   244d5:	48 83 ec 30          	sub    $0x30,%rsp
   244d9:	48 89 f3             	mov    %rsi,%rbx
   244dc:	49 89 ff             	mov    %rdi,%r15
   244df:	48 89 7c 24 10       	mov    %rdi,0x10(%rsp)
   244e4:	48 89 74 24 18       	mov    %rsi,0x18(%rsp)
   244e9:	64 48 83 3c 25 c0 ff 	cmpq   $0x1,%fs:0xffffffffffffffc0
   244f0:	ff ff 01 
   244f3:	75 25                	jne    2451a <_ZN3std2io5stdio9set_panic17haf0faa6f833bfa0aE+0x4a>
   244f5:	64 48 8b 04 25 00 00 	mov    %fs:0x0,%rax
   244fc:	00 00 
   244fe:	48 8d 80 c8 ff ff ff 	lea    -0x38(%rax),%rax
   24505:	4c 89 7c 24 20       	mov    %r15,0x20(%rsp)
   2450a:	48 89 5c 24 28       	mov    %rbx,0x28(%rsp)
   2450f:	48 83 38 00          	cmpq   $0x0,(%rax)
   24513:	74 27                	je     2453c <_ZN3std2io5stdio9set_panic17haf0faa6f833bfa0aE+0x6c>
   24515:	e9 a5 00 00 00       	jmpq   245bf <_ZN3std2io5stdio9set_panic17haf0faa6f833bfa0aE+0xef>
   2451a:	e8 c1 2e 00 00       	callq  273e0 <_ZN3std6thread5local4fast12Key$LT$T$GT$14try_initialize17hce561547681d9a74E>
   2451f:	48 85 c0             	test   %rax,%rax
   24522:	0f 84 bd 00 00 00    	je     245e5 <_ZN3std2io5stdio9set_panic17haf0faa6f833bfa0aE+0x115>
   24528:	4c 89 7c 24 20       	mov    %r15,0x20(%rsp)
   2452d:	48 89 5c 24 28       	mov    %rbx,0x28(%rsp)
   24532:	48 83 38 00          	cmpq   $0x0,(%rax)
   24536:	0f 85 83 00 00 00    	jne    245bf <_ZN3std2io5stdio9set_panic17haf0faa6f833bfa0aE+0xef>
   2453c:	f3 0f 6f 40 08       	movdqu 0x8(%rax),%xmm0
   24541:	4c 89 78 08          	mov    %r15,0x8(%rax)
   24545:	48 89 58 10          	mov    %rbx,0x10(%rax)
   24549:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   24550:	66 48 0f 7e c3       	movq   %xmm0,%rbx
   24555:	66 0f 70 c0 4e       	pshufd $0x4e,%xmm0,%xmm0
   2455a:	66 49 0f 7e c6       	movq   %xmm0,%r14
   2455f:	48 85 db             	test   %rbx,%rbx
   24562:	74 4b                	je     245af <_ZN3std2io5stdio9set_panic17haf0faa6f833bfa0aE+0xdf>
   24564:	48 89 5c 24 10       	mov    %rbx,0x10(%rsp)
   24569:	4c 89 74 24 18       	mov    %r14,0x18(%rsp)
   2456e:	48 8d 7c 24 20       	lea    0x20(%rsp),%rdi
   24573:	48 89 de             	mov    %rbx,%rsi
   24576:	41 ff 56 28          	callq  *0x28(%r14)
   2457a:	8a 44 24 20          	mov    0x20(%rsp),%al
   2457e:	3c 03                	cmp    $0x3,%al
   24580:	77 04                	ja     24586 <_ZN3std2io5stdio9set_panic17haf0faa6f833bfa0aE+0xb6>
   24582:	3c 02                	cmp    $0x2,%al
   24584:	75 29                	jne    245af <_ZN3std2io5stdio9set_panic17haf0faa6f833bfa0aE+0xdf>
   24586:	4c 8b 7c 24 28       	mov    0x28(%rsp),%r15
   2458b:	49 8b 3f             	mov    (%r15),%rdi
   2458e:	49 8b 47 08          	mov    0x8(%r15),%rax
   24592:	ff 10                	callq  *(%rax)
   24594:	49 8b 47 08          	mov    0x8(%r15),%rax
   24598:	48 83 78 08 00       	cmpq   $0x0,0x8(%rax)
   2459d:	74 08                	je     245a7 <_ZN3std2io5stdio9set_panic17haf0faa6f833bfa0aE+0xd7>
   2459f:	49 8b 3f             	mov    (%r15),%rdi
   245a2:	e8 69 0e fe ff       	callq  5410 <__rust_dealloc>
   245a7:	4c 89 ff             	mov    %r15,%rdi
   245aa:	e8 61 0e fe ff       	callq  5410 <__rust_dealloc>
   245af:	48 89 d8             	mov    %rbx,%rax
   245b2:	4c 89 f2             	mov    %r14,%rdx
   245b5:	48 83 c4 30          	add    $0x30,%rsp
   245b9:	5b                   	pop    %rbx
   245ba:	41 5e                	pop    %r14
   245bc:	41 5f                	pop    %r15
   245be:	c3                   	retq   
   245bf:	48 8d 3d 1a 5f 01 00 	lea    0x15f1a(%rip),%rdi        # 3a4e0 <_ZN4core7unicode12unicode_data2cc19BITSET_INDEX_CHUNKS17h8a1f39cd536e9344E+0x20>
   245c6:	48 8d 0d 13 28 22 00 	lea    0x222813(%rip),%rcx        # 246de0 <__init_array_end+0xdd0>
   245cd:	4c 8d 05 2c 28 22 00 	lea    0x22282c(%rip),%r8        # 246e00 <__init_array_end+0xdf0>
   245d4:	48 8d 54 24 08       	lea    0x8(%rsp),%rdx
   245d9:	be 10 00 00 00       	mov    $0x10,%esi
   245de:	e8 7d 56 fe ff       	callq  9c60 <_ZN4core6option18expect_none_failed17he0fec195c6e4c2ecE>
   245e3:	0f 0b                	ud2    
   245e5:	4d 85 ff             	test   %r15,%r15
   245e8:	74 14                	je     245fe <_ZN3std2io5stdio9set_panic17haf0faa6f833bfa0aE+0x12e>
   245ea:	4c 89 ff             	mov    %r15,%rdi
   245ed:	ff 13                	callq  *(%rbx)
   245ef:	48 83 7b 08 00       	cmpq   $0x0,0x8(%rbx)
   245f4:	74 08                	je     245fe <_ZN3std2io5stdio9set_panic17haf0faa6f833bfa0aE+0x12e>
   245f6:	4c 89 ff             	mov    %r15,%rdi
   245f9:	e8 12 0e fe ff       	callq  5410 <__rust_dealloc>
   245fe:	48 8d 3d bb 90 01 00 	lea    0x190bb(%rip),%rdi        # 3d6c0 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0xd60>
   24605:	48 8d 0d e4 2c 22 00 	lea    0x222ce4(%rip),%rcx        # 2472f0 <__init_array_end+0x12e0>
   2460c:	4c 8d 05 fd 2c 22 00 	lea    0x222cfd(%rip),%r8        # 247310 <__init_array_end+0x1300>
   24613:	48 8d 54 24 08       	lea    0x8(%rsp),%rdx
   24618:	be 46 00 00 00       	mov    $0x46,%esi
   2461d:	e8 3e 56 fe ff       	callq  9c60 <_ZN4core6option18expect_none_failed17he0fec195c6e4c2ecE>
   24622:	0f 0b                	ud2    
   24624:	49 89 c6             	mov    %rax,%r14
   24627:	4c 89 ff             	mov    %r15,%rdi
   2462a:	48 89 de             	mov    %rbx,%rsi
   2462d:	e8 de 02 00 00       	callq  24910 <_ZN5alloc5alloc8box_free17h3741427eaa5804e6E>
   24632:	4c 89 f7             	mov    %r14,%rdi
   24635:	e8 66 fa fd ff       	callq  40a0 <_Unwind_Resume@plt>
   2463a:	0f 0b                	ud2    
   2463c:	49 89 c6             	mov    %rax,%r14
   2463f:	48 8d 7c 24 20       	lea    0x20(%rsp),%rdi
   24644:	eb 21                	jmp    24667 <_ZN3std2io5stdio9set_panic17haf0faa6f833bfa0aE+0x197>
   24646:	49 89 c6             	mov    %rax,%r14
   24649:	49 8b 3f             	mov    (%r15),%rdi
   2464c:	49 8b 77 08          	mov    0x8(%r15),%rsi
   24650:	e8 bb 02 00 00       	callq  24910 <_ZN5alloc5alloc8box_free17h3741427eaa5804e6E>
   24655:	4c 89 ff             	mov    %r15,%rdi
   24658:	e8 d3 07 00 00       	callq  24e30 <_ZN5alloc5alloc8box_free17h20e506aa40102463E>
   2465d:	eb 1a                	jmp    24679 <_ZN3std2io5stdio9set_panic17haf0faa6f833bfa0aE+0x1a9>
   2465f:	49 89 c6             	mov    %rax,%r14
   24662:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
   24667:	e8 b4 02 00 00       	callq  24920 <_ZN4core3ptr13drop_in_place17h0897c195c9d674a2E>
   2466c:	4c 89 f7             	mov    %r14,%rdi
   2466f:	e8 2c fa fd ff       	callq  40a0 <_Unwind_Resume@plt>
   24674:	0f 0b                	ud2    
   24676:	49 89 c6             	mov    %rax,%r14
   24679:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
   2467e:	e8 ed 02 00 00       	callq  24970 <_ZN4core3ptr13drop_in_place17h012f1dfb78ca1ae1E>
   24683:	4c 89 f7             	mov    %r14,%rdi
   24686:	e8 15 fa fd ff       	callq  40a0 <_Unwind_Resume@plt>
   2468b:	0f 0b                	ud2    
   2468d:	0f 1f 00             	nopl   (%rax)

0000000000024690 <_ZN3std9panicking12default_hook28_$u7b$$u7b$closure$u7d$$u7d$17haac34625f45d0048E>:
   24690:	41 57                	push   %r15
   24692:	41 56                	push   %r14
   24694:	41 55                	push   %r13
   24696:	41 54                	push   %r12
   24698:	53                   	push   %rbx
   24699:	48 81 ec 80 00 00 00 	sub    $0x80,%rsp
   246a0:	49 89 f7             	mov    %rsi,%r15
   246a3:	48 89 fb             	mov    %rdi,%rbx
   246a6:	48 8b 07             	mov    (%rdi),%rax
   246a9:	48 8b 4f 08          	mov    0x8(%rdi),%rcx
   246ad:	48 8b 77 10          	mov    0x10(%rdi),%rsi
   246b1:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   246b6:	48 8d 05 43 0c 00 00 	lea    0xc43(%rip),%rax        # 25300 <_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h9716022a15e5b13cE>
   246bd:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   246c2:	48 89 4c 24 20       	mov    %rcx,0x20(%rsp)
   246c7:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   246cc:	48 89 74 24 30       	mov    %rsi,0x30(%rsp)
   246d1:	48 8d 05 48 0c 00 00 	lea    0xc48(%rip),%rax        # 25320 <_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17he9403749bfc5234aE>
   246d8:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   246dd:	48 8d 05 7c 2a 22 00 	lea    0x222a7c(%rip),%rax        # 247160 <__init_array_end+0x1150>
   246e4:	48 89 44 24 50       	mov    %rax,0x50(%rsp)
   246e9:	48 c7 44 24 58 04 00 	movq   $0x4,0x58(%rsp)
   246f0:	00 00 
   246f2:	48 c7 44 24 60 00 00 	movq   $0x0,0x60(%rsp)
   246f9:	00 00 
   246fb:	48 8d 44 24 10       	lea    0x10(%rsp),%rax
   24700:	48 89 44 24 70       	mov    %rax,0x70(%rsp)
   24705:	48 c7 44 24 78 03 00 	movq   $0x3,0x78(%rsp)
   2470c:	00 00 
   2470e:	4c 8b 6a 38          	mov    0x38(%rdx),%r13
   24712:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
   24717:	4c 8d 74 24 50       	lea    0x50(%rsp),%r14
   2471c:	4c 89 fe             	mov    %r15,%rsi
   2471f:	4c 89 f2             	mov    %r14,%rdx
   24722:	41 ff d5             	callq  *%r13
   24725:	8a 44 24 40          	mov    0x40(%rsp),%al
   24729:	3c 03                	cmp    $0x3,%al
   2472b:	77 04                	ja     24731 <_ZN3std9panicking12default_hook28_$u7b$$u7b$closure$u7d$$u7d$17haac34625f45d0048E+0xa1>
   2472d:	3c 02                	cmp    $0x2,%al
   2472f:	75 2d                	jne    2475e <_ZN3std9panicking12default_hook28_$u7b$$u7b$closure$u7d$$u7d$17haac34625f45d0048E+0xce>
   24731:	4c 8b 64 24 48       	mov    0x48(%rsp),%r12
   24736:	49 8b 3c 24          	mov    (%r12),%rdi
   2473a:	49 8b 44 24 08       	mov    0x8(%r12),%rax
   2473f:	ff 10                	callq  *(%rax)
   24741:	49 8b 44 24 08       	mov    0x8(%r12),%rax
   24746:	48 83 78 08 00       	cmpq   $0x0,0x8(%rax)
   2474b:	74 09                	je     24756 <_ZN3std9panicking12default_hook28_$u7b$$u7b$closure$u7d$$u7d$17haac34625f45d0048E+0xc6>
   2474d:	49 8b 3c 24          	mov    (%r12),%rdi
   24751:	e8 ba 0c fe ff       	callq  5410 <__rust_dealloc>
   24756:	4c 89 e7             	mov    %r12,%rdi
   24759:	e8 b2 0c fe ff       	callq  5410 <__rust_dealloc>
   2475e:	48 8b 43 18          	mov    0x18(%rbx),%rax
   24762:	8a 18                	mov    (%rax),%bl
   24764:	8d 43 fd             	lea    -0x3(%rbx),%eax
   24767:	0f b6 c8             	movzbl %al,%ecx
   2476a:	48 8d 51 01          	lea    0x1(%rcx),%rdx
   2476e:	31 c0                	xor    %eax,%eax
   24770:	80 f9 02             	cmp    $0x2,%cl
   24773:	48 0f 42 c2          	cmovb  %rdx,%rax
   24777:	48 85 c0             	test   %rax,%rax
   2477a:	0f 84 80 00 00 00    	je     24800 <_ZN3std9panicking12default_hook28_$u7b$$u7b$closure$u7d$$u7d$17haac34625f45d0048E+0x170>
   24780:	48 83 f8 01          	cmp    $0x1,%rax
   24784:	0f 84 1b 01 00 00    	je     248a5 <_ZN3std9panicking12default_hook28_$u7b$$u7b$closure$u7d$$u7d$17haac34625f45d0048E+0x215>
   2478a:	31 c0                	xor    %eax,%eax
   2478c:	86 05 7e 38 22 00    	xchg   %al,0x22387e(%rip)        # 248010 <_ZN3std9panicking12default_hook28_$u7b$$u7b$closure$u7d$$u7d$11FIRST_PANIC17h755ca28f32da079fE>
   24792:	84 c0                	test   %al,%al
   24794:	0f 84 0b 01 00 00    	je     248a5 <_ZN3std9panicking12default_hook28_$u7b$$u7b$closure$u7d$$u7d$17haac34625f45d0048E+0x215>
   2479a:	48 8d 05 0f 2a 22 00 	lea    0x222a0f(%rip),%rax        # 2471b0 <__init_array_end+0x11a0>
   247a1:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   247a6:	48 c7 44 24 18 01 00 	movq   $0x1,0x18(%rsp)
   247ad:	00 00 
   247af:	48 c7 44 24 20 00 00 	movq   $0x0,0x20(%rsp)
   247b6:	00 00 
   247b8:	48 8d 05 79 8c 01 00 	lea    0x18c79(%rip),%rax        # 3d438 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0xad8>
   247bf:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   247c4:	48 c7 44 24 38 00 00 	movq   $0x0,0x38(%rsp)
   247cb:	00 00 
   247cd:	48 8d 7c 24 50       	lea    0x50(%rsp),%rdi
   247d2:	48 8d 54 24 10       	lea    0x10(%rsp),%rdx
   247d7:	4c 89 fe             	mov    %r15,%rsi
   247da:	41 ff d5             	callq  *%r13
   247dd:	8a 44 24 50          	mov    0x50(%rsp),%al
   247e1:	3c 03                	cmp    $0x3,%al
   247e3:	77 08                	ja     247ed <_ZN3std9panicking12default_hook28_$u7b$$u7b$closure$u7d$$u7d$17haac34625f45d0048E+0x15d>
   247e5:	3c 02                	cmp    $0x2,%al
   247e7:	0f 85 b8 00 00 00    	jne    248a5 <_ZN3std9panicking12default_hook28_$u7b$$u7b$closure$u7d$$u7d$17haac34625f45d0048E+0x215>
   247ed:	48 8b 5c 24 58       	mov    0x58(%rsp),%rbx
   247f2:	48 8b 3b             	mov    (%rbx),%rdi
   247f5:	48 8b 43 08          	mov    0x8(%rbx),%rax
   247f9:	ff 10                	callq  *(%rax)
   247fb:	e9 8a 00 00 00       	jmpq   2488a <_ZN3std9panicking12default_hook28_$u7b$$u7b$closure$u7d$$u7d$17haac34625f45d0048E+0x1fa>
   24800:	48 8d 3d 31 39 22 00 	lea    0x223931(%rip),%rdi        # 248138 <_ZN3std10sys_common9backtrace4lock4LOCK17h66f9e39c481363abE>
   24807:	ff 15 d3 37 22 00    	callq  *0x2237d3(%rip)        # 247fe0 <pthread_mutex_lock@GLIBC_2.2.5>
   2480d:	88 5c 24 0f          	mov    %bl,0xf(%rsp)
   24811:	48 8d 44 24 0f       	lea    0xf(%rsp),%rax
   24816:	48 89 44 24 50       	mov    %rax,0x50(%rsp)
   2481b:	48 8d 05 8e 0b 00 00 	lea    0xb8e(%rip),%rax        # 253b0 <_ZN91_$LT$std..sys_common..backtrace.._print..DisplayBacktrace$u20$as$u20$core..fmt..Display$GT$3fmt17h228ad95b0f9e829eE>
   24822:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
   24827:	48 8d 05 72 29 22 00 	lea    0x222972(%rip),%rax        # 2471a0 <__init_array_end+0x1190>
   2482e:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   24833:	48 c7 44 24 18 01 00 	movq   $0x1,0x18(%rsp)
   2483a:	00 00 
   2483c:	48 c7 44 24 20 00 00 	movq   $0x0,0x20(%rsp)
   24843:	00 00 
   24845:	4c 89 74 24 30       	mov    %r14,0x30(%rsp)
   2484a:	48 c7 44 24 38 01 00 	movq   $0x1,0x38(%rsp)
   24851:	00 00 
   24853:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
   24858:	48 8d 54 24 10       	lea    0x10(%rsp),%rdx
   2485d:	4c 89 fe             	mov    %r15,%rsi
   24860:	41 ff d5             	callq  *%r13
   24863:	48 8d 3d ce 38 22 00 	lea    0x2238ce(%rip),%rdi        # 248138 <_ZN3std10sys_common9backtrace4lock4LOCK17h66f9e39c481363abE>
   2486a:	ff 15 88 36 22 00    	callq  *0x223688(%rip)        # 247ef8 <pthread_mutex_unlock@GLIBC_2.2.5>
   24870:	8a 44 24 40          	mov    0x40(%rsp),%al
   24874:	3c 03                	cmp    $0x3,%al
   24876:	77 04                	ja     2487c <_ZN3std9panicking12default_hook28_$u7b$$u7b$closure$u7d$$u7d$17haac34625f45d0048E+0x1ec>
   24878:	3c 02                	cmp    $0x2,%al
   2487a:	75 29                	jne    248a5 <_ZN3std9panicking12default_hook28_$u7b$$u7b$closure$u7d$$u7d$17haac34625f45d0048E+0x215>
   2487c:	48 8b 5c 24 48       	mov    0x48(%rsp),%rbx
   24881:	48 8b 3b             	mov    (%rbx),%rdi
   24884:	48 8b 43 08          	mov    0x8(%rbx),%rax
   24888:	ff 10                	callq  *(%rax)
   2488a:	48 8b 43 08          	mov    0x8(%rbx),%rax
   2488e:	48 83 78 08 00       	cmpq   $0x0,0x8(%rax)
   24893:	74 08                	je     2489d <_ZN3std9panicking12default_hook28_$u7b$$u7b$closure$u7d$$u7d$17haac34625f45d0048E+0x20d>
   24895:	48 8b 3b             	mov    (%rbx),%rdi
   24898:	e8 73 0b fe ff       	callq  5410 <__rust_dealloc>
   2489d:	48 89 df             	mov    %rbx,%rdi
   248a0:	e8 6b 0b fe ff       	callq  5410 <__rust_dealloc>
   248a5:	48 81 c4 80 00 00 00 	add    $0x80,%rsp
   248ac:	5b                   	pop    %rbx
   248ad:	41 5c                	pop    %r12
   248af:	41 5d                	pop    %r13
   248b1:	41 5e                	pop    %r14
   248b3:	41 5f                	pop    %r15
   248b5:	c3                   	retq   
   248b6:	eb 00                	jmp    248b8 <_ZN3std9panicking12default_hook28_$u7b$$u7b$closure$u7d$$u7d$17haac34625f45d0048E+0x228>
   248b8:	49 89 c6             	mov    %rax,%r14
   248bb:	48 8b 3b             	mov    (%rbx),%rdi
   248be:	48 8b 73 08          	mov    0x8(%rbx),%rsi
   248c2:	e8 49 00 00 00       	callq  24910 <_ZN5alloc5alloc8box_free17h3741427eaa5804e6E>
   248c7:	48 89 df             	mov    %rbx,%rdi
   248ca:	eb 14                	jmp    248e0 <_ZN3std9panicking12default_hook28_$u7b$$u7b$closure$u7d$$u7d$17haac34625f45d0048E+0x250>
   248cc:	49 89 c6             	mov    %rax,%r14
   248cf:	49 8b 3c 24          	mov    (%r12),%rdi
   248d3:	49 8b 74 24 08       	mov    0x8(%r12),%rsi
   248d8:	e8 33 00 00 00       	callq  24910 <_ZN5alloc5alloc8box_free17h3741427eaa5804e6E>
   248dd:	4c 89 e7             	mov    %r12,%rdi
   248e0:	e8 4b 05 00 00       	callq  24e30 <_ZN5alloc5alloc8box_free17h20e506aa40102463E>
   248e5:	4c 89 f7             	mov    %r14,%rdi
   248e8:	e8 b3 f7 fd ff       	callq  40a0 <_Unwind_Resume@plt>
   248ed:	0f 0b                	ud2    
   248ef:	49 89 c6             	mov    %rax,%r14
   248f2:	e8 c9 0e 00 00       	callq  257c0 <_ZN4core3ptr13drop_in_place17h82668df6929d5fb6E>
   248f7:	4c 89 f7             	mov    %r14,%rdi
   248fa:	e8 a1 f7 fd ff       	callq  40a0 <_Unwind_Resume@plt>
   248ff:	0f 0b                	ud2    
   24901:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   24908:	00 00 00 
   2490b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000024910 <_ZN5alloc5alloc8box_free17h3741427eaa5804e6E>:
   24910:	48 83 7e 08 00       	cmpq   $0x0,0x8(%rsi)
   24915:	74 05                	je     2491c <_ZN5alloc5alloc8box_free17h3741427eaa5804e6E+0xc>
   24917:	e9 f4 0a fe ff       	jmpq   5410 <__rust_dealloc>
   2491c:	c3                   	retq   
   2491d:	0f 1f 00             	nopl   (%rax)

0000000000024920 <_ZN4core3ptr13drop_in_place17h0897c195c9d674a2E>:
   24920:	41 56                	push   %r14
   24922:	53                   	push   %rbx
   24923:	50                   	push   %rax
   24924:	48 89 fb             	mov    %rdi,%rbx
   24927:	48 8b 3f             	mov    (%rdi),%rdi
   2492a:	48 85 ff             	test   %rdi,%rdi
   2492d:	74 20                	je     2494f <_ZN4core3ptr13drop_in_place17h0897c195c9d674a2E+0x2f>
   2492f:	48 8b 43 08          	mov    0x8(%rbx),%rax
   24933:	ff 10                	callq  *(%rax)
   24935:	48 8b 43 08          	mov    0x8(%rbx),%rax
   24939:	48 83 78 08 00       	cmpq   $0x0,0x8(%rax)
   2493e:	74 0f                	je     2494f <_ZN4core3ptr13drop_in_place17h0897c195c9d674a2E+0x2f>
   24940:	48 8b 3b             	mov    (%rbx),%rdi
   24943:	48 83 c4 08          	add    $0x8,%rsp
   24947:	5b                   	pop    %rbx
   24948:	41 5e                	pop    %r14
   2494a:	e9 c1 0a fe ff       	jmpq   5410 <__rust_dealloc>
   2494f:	48 83 c4 08          	add    $0x8,%rsp
   24953:	5b                   	pop    %rbx
   24954:	41 5e                	pop    %r14
   24956:	c3                   	retq   
   24957:	49 89 c6             	mov    %rax,%r14
   2495a:	48 8b 3b             	mov    (%rbx),%rdi
   2495d:	48 8b 73 08          	mov    0x8(%rbx),%rsi
   24961:	e8 aa ff ff ff       	callq  24910 <_ZN5alloc5alloc8box_free17h3741427eaa5804e6E>
   24966:	4c 89 f7             	mov    %r14,%rdi
   24969:	e8 32 f7 fd ff       	callq  40a0 <_Unwind_Resume@plt>
   2496e:	0f 0b                	ud2    

0000000000024970 <_ZN4core3ptr13drop_in_place17h012f1dfb78ca1ae1E>:
   24970:	41 56                	push   %r14
   24972:	53                   	push   %rbx
   24973:	50                   	push   %rax
   24974:	48 89 fb             	mov    %rdi,%rbx
   24977:	48 8b 3f             	mov    (%rdi),%rdi
   2497a:	48 8b 43 08          	mov    0x8(%rbx),%rax
   2497e:	ff 10                	callq  *(%rax)
   24980:	48 8b 43 08          	mov    0x8(%rbx),%rax
   24984:	48 83 78 08 00       	cmpq   $0x0,0x8(%rax)
   24989:	74 0f                	je     2499a <_ZN4core3ptr13drop_in_place17h012f1dfb78ca1ae1E+0x2a>
   2498b:	48 8b 3b             	mov    (%rbx),%rdi
   2498e:	48 83 c4 08          	add    $0x8,%rsp
   24992:	5b                   	pop    %rbx
   24993:	41 5e                	pop    %r14
   24995:	e9 76 0a fe ff       	jmpq   5410 <__rust_dealloc>
   2499a:	48 83 c4 08          	add    $0x8,%rsp
   2499e:	5b                   	pop    %rbx
   2499f:	41 5e                	pop    %r14
   249a1:	c3                   	retq   
   249a2:	49 89 c6             	mov    %rax,%r14
   249a5:	48 8b 3b             	mov    (%rbx),%rdi
   249a8:	48 8b 73 08          	mov    0x8(%rbx),%rsi
   249ac:	e8 5f ff ff ff       	callq  24910 <_ZN5alloc5alloc8box_free17h3741427eaa5804e6E>
   249b1:	4c 89 f7             	mov    %r14,%rdi
   249b4:	e8 e7 f6 fd ff       	callq  40a0 <_Unwind_Resume@plt>
   249b9:	0f 0b                	ud2    
   249bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000249c0 <_ZN64_$LT$std..sys..unix..stdio..Stderr$u20$as$u20$std..io..Write$GT$5write17h4657cdf0848351faE>:
   249c0:	53                   	push   %rbx
   249c1:	48 89 fb             	mov    %rdi,%rbx
   249c4:	48 b8 ff ff ff ff ff 	movabs $0x7fffffffffffffff,%rax
   249cb:	ff ff 7f 
   249ce:	48 39 c1             	cmp    %rax,%rcx
   249d1:	48 0f 42 c1          	cmovb  %rcx,%rax
   249d5:	bf 02 00 00 00       	mov    $0x2,%edi
   249da:	48 89 d6             	mov    %rdx,%rsi
   249dd:	48 89 c2             	mov    %rax,%rdx
   249e0:	ff 15 12 34 22 00    	callq  *0x223412(%rip)        # 247df8 <write@GLIBC_2.2.5>
   249e6:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
   249ea:	74 04                	je     249f0 <_ZN64_$LT$std..sys..unix..stdio..Stderr$u20$as$u20$std..io..Write$GT$5write17h4657cdf0848351faE+0x30>
   249ec:	31 c9                	xor    %ecx,%ecx
   249ee:	eb 11                	jmp    24a01 <_ZN64_$LT$std..sys..unix..stdio..Stderr$u20$as$u20$std..io..Write$GT$5write17h4657cdf0848351faE+0x41>
   249f0:	ff 15 aa 33 22 00    	callq  *0x2233aa(%rip)        # 247da0 <__errno_location@GLIBC_2.2.5>
   249f6:	8b 00                	mov    (%rax),%eax
   249f8:	48 c1 e0 20          	shl    $0x20,%rax
   249fc:	b9 01 00 00 00       	mov    $0x1,%ecx
   24a01:	48 89 43 08          	mov    %rax,0x8(%rbx)
   24a05:	48 89 0b             	mov    %rcx,(%rbx)
   24a08:	48 89 d8             	mov    %rbx,%rax
   24a0b:	5b                   	pop    %rbx
   24a0c:	c3                   	retq   
   24a0d:	0f 1f 00             	nopl   (%rax)

0000000000024a10 <_ZN64_$LT$std..sys..unix..stdio..Stderr$u20$as$u20$std..io..Write$GT$14write_vectored17h2113875b6797059fE>:
   24a10:	53                   	push   %rbx
   24a11:	48 89 fb             	mov    %rdi,%rbx
   24a14:	48 81 f9 ff ff ff 7f 	cmp    $0x7fffffff,%rcx
   24a1b:	b8 ff ff ff 7f       	mov    $0x7fffffff,%eax
   24a20:	0f 42 c1             	cmovb  %ecx,%eax
   24a23:	bf 02 00 00 00       	mov    $0x2,%edi
   24a28:	48 89 d6             	mov    %rdx,%rsi
   24a2b:	89 c2                	mov    %eax,%edx
   24a2d:	ff 15 8d 33 22 00    	callq  *0x22338d(%rip)        # 247dc0 <writev@GLIBC_2.2.5>
   24a33:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
   24a37:	74 04                	je     24a3d <_ZN64_$LT$std..sys..unix..stdio..Stderr$u20$as$u20$std..io..Write$GT$14write_vectored17h2113875b6797059fE+0x2d>
   24a39:	31 c9                	xor    %ecx,%ecx
   24a3b:	eb 11                	jmp    24a4e <_ZN64_$LT$std..sys..unix..stdio..Stderr$u20$as$u20$std..io..Write$GT$14write_vectored17h2113875b6797059fE+0x3e>
   24a3d:	ff 15 5d 33 22 00    	callq  *0x22335d(%rip)        # 247da0 <__errno_location@GLIBC_2.2.5>
   24a43:	8b 00                	mov    (%rax),%eax
   24a45:	48 c1 e0 20          	shl    $0x20,%rax
   24a49:	b9 01 00 00 00       	mov    $0x1,%ecx
   24a4e:	48 89 43 08          	mov    %rax,0x8(%rbx)
   24a52:	48 89 0b             	mov    %rcx,(%rbx)
   24a55:	48 89 d8             	mov    %rbx,%rax
   24a58:	5b                   	pop    %rbx
   24a59:	c3                   	retq   
   24a5a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000024a60 <_ZN60_$LT$std..io..stdio..StderrRaw$u20$as$u20$std..io..Write$GT$5flush17hd17537c3d9309133E>:
   24a60:	48 89 f8             	mov    %rdi,%rax
   24a63:	c6 07 03             	movb   $0x3,(%rdi)
   24a66:	c3                   	retq   
   24a67:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   24a6e:	00 00 

0000000000024a70 <_ZN3std2io5Write9write_all17hf4575799b15b41c1E>:
   24a70:	55                   	push   %rbp
   24a71:	41 57                	push   %r15
   24a73:	41 56                	push   %r14
   24a75:	41 55                	push   %r13
   24a77:	41 54                	push   %r12
   24a79:	53                   	push   %rbx
   24a7a:	48 83 ec 28          	sub    $0x28,%rsp
   24a7e:	49 89 fe             	mov    %rdi,%r14
   24a81:	48 85 c9             	test   %rcx,%rcx
   24a84:	0f 84 a7 00 00 00    	je     24b31 <_ZN3std2io5Write9write_all17hf4575799b15b41c1E+0xc1>
   24a8a:	48 89 cb             	mov    %rcx,%rbx
   24a8d:	49 89 d7             	mov    %rdx,%r15
   24a90:	49 bd ff ff ff ff ff 	movabs $0x7fffffffffffffff,%r13
   24a97:	ff ff 7f 
   24a9a:	48 8b 2d 57 33 22 00 	mov    0x223357(%rip),%rbp        # 247df8 <write@GLIBC_2.2.5>
   24aa1:	4c 8b 25 f8 32 22 00 	mov    0x2232f8(%rip),%r12        # 247da0 <__errno_location@GLIBC_2.2.5>
   24aa8:	48 89 da             	mov    %rbx,%rdx
   24aab:	4c 39 eb             	cmp    %r13,%rbx
   24aae:	72 47                	jb     24af7 <_ZN3std2io5Write9write_all17hf4575799b15b41c1E+0x87>
   24ab0:	eb 42                	jmp    24af4 <_ZN3std2io5Write9write_all17hf4575799b15b41c1E+0x84>
   24ab2:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   24ab9:	00 00 00 
   24abc:	0f 1f 40 00          	nopl   0x0(%rax)
   24ac0:	41 ff d4             	callq  *%r12
   24ac3:	8b 38                	mov    (%rax),%edi
   24ac5:	48 89 f8             	mov    %rdi,%rax
   24ac8:	48 c1 e0 20          	shl    $0x20,%rax
   24acc:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   24ad1:	48 c7 44 24 10 01 00 	movq   $0x1,0x10(%rsp)
   24ad8:	00 00 
   24ada:	e8 61 07 00 00       	callq  25240 <_ZN3std3sys4unix17decode_error_kind17h568cc869969c08a6E>
   24adf:	3c 0f                	cmp    $0xf,%al
   24ae1:	0f 85 08 01 00 00    	jne    24bef <_ZN3std2io5Write9write_all17hf4575799b15b41c1E+0x17f>
   24ae7:	48 85 db             	test   %rbx,%rbx
   24aea:	74 45                	je     24b31 <_ZN3std2io5Write9write_all17hf4575799b15b41c1E+0xc1>
   24aec:	48 89 da             	mov    %rbx,%rdx
   24aef:	4c 39 eb             	cmp    %r13,%rbx
   24af2:	72 03                	jb     24af7 <_ZN3std2io5Write9write_all17hf4575799b15b41c1E+0x87>
   24af4:	4c 89 ea             	mov    %r13,%rdx
   24af7:	bf 02 00 00 00       	mov    $0x2,%edi
   24afc:	4c 89 fe             	mov    %r15,%rsi
   24aff:	ff d5                	callq  *%rbp
   24b01:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
   24b05:	74 b9                	je     24ac0 <_ZN3std2io5Write9write_all17hf4575799b15b41c1E+0x50>
   24b07:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   24b0c:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
   24b13:	00 00 
   24b15:	48 85 c0             	test   %rax,%rax
   24b18:	74 20                	je     24b3a <_ZN3std2io5Write9write_all17hf4575799b15b41c1E+0xca>
   24b1a:	48 89 d9             	mov    %rbx,%rcx
   24b1d:	48 29 c1             	sub    %rax,%rcx
   24b20:	0f 82 e7 00 00 00    	jb     24c0d <_ZN3std2io5Write9write_all17hf4575799b15b41c1E+0x19d>
   24b26:	49 01 c7             	add    %rax,%r15
   24b29:	48 89 cb             	mov    %rcx,%rbx
   24b2c:	48 85 db             	test   %rbx,%rbx
   24b2f:	75 bb                	jne    24aec <_ZN3std2io5Write9write_all17hf4575799b15b41c1E+0x7c>
   24b31:	41 c6 06 03          	movb   $0x3,(%r14)
   24b35:	e9 c1 00 00 00       	jmpq   24bfb <_ZN3std2io5Write9write_all17hf4575799b15b41c1E+0x18b>
   24b3a:	bf 1c 00 00 00       	mov    $0x1c,%edi
   24b3f:	be 01 00 00 00       	mov    $0x1,%esi
   24b44:	e8 77 08 fe ff       	callq  53c0 <__rust_alloc>
   24b49:	48 85 c0             	test   %rax,%rax
   24b4c:	0f 84 d9 00 00 00    	je     24c2b <_ZN3std2io5Write9write_all17hf4575799b15b41c1E+0x1bb>
   24b52:	49 89 c7             	mov    %rax,%r15
   24b55:	0f 10 05 9d 89 01 00 	movups 0x1899d(%rip),%xmm0        # 3d4f9 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0xb99>
   24b5c:	0f 11 40 0c          	movups %xmm0,0xc(%rax)
   24b60:	0f 10 05 86 89 01 00 	movups 0x18986(%rip),%xmm0        # 3d4ed <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0xb8d>
   24b67:	0f 11 00             	movups %xmm0,(%rax)
   24b6a:	bf 18 00 00 00       	mov    $0x18,%edi
   24b6f:	be 08 00 00 00       	mov    $0x8,%esi
   24b74:	e8 47 08 fe ff       	callq  53c0 <__rust_alloc>
   24b79:	48 85 c0             	test   %rax,%rax
   24b7c:	0f 84 98 00 00 00    	je     24c1a <_ZN3std2io5Write9write_all17hf4575799b15b41c1E+0x1aa>
   24b82:	48 89 c3             	mov    %rax,%rbx
   24b85:	4c 89 38             	mov    %r15,(%rax)
   24b88:	0f 28 05 e1 58 01 00 	movaps 0x158e1(%rip),%xmm0        # 3a470 <_fini+0x12c>
   24b8f:	0f 11 40 08          	movups %xmm0,0x8(%rax)
   24b93:	bf 18 00 00 00       	mov    $0x18,%edi
   24b98:	be 08 00 00 00       	mov    $0x8,%esi
   24b9d:	e8 1e 08 fe ff       	callq  53c0 <__rust_alloc>
   24ba2:	48 85 c0             	test   %rax,%rax
   24ba5:	74 73                	je     24c1a <_ZN3std2io5Write9write_all17hf4575799b15b41c1E+0x1aa>
   24ba7:	48 89 18             	mov    %rbx,(%rax)
   24baa:	48 8d 0d 2f 25 22 00 	lea    0x22252f(%rip),%rcx        # 2470e0 <__init_array_end+0x10d0>
   24bb1:	48 89 48 08          	mov    %rcx,0x8(%rax)
   24bb5:	c6 40 10 0e          	movb   $0xe,0x10(%rax)
   24bb9:	8b 4c 24 09          	mov    0x9(%rsp),%ecx
   24bbd:	8b 54 24 0c          	mov    0xc(%rsp),%edx
   24bc1:	89 50 14             	mov    %edx,0x14(%rax)
   24bc4:	89 48 11             	mov    %ecx,0x11(%rax)
   24bc7:	8b 4c 24 09          	mov    0x9(%rsp),%ecx
   24bcb:	8b 54 24 0c          	mov    0xc(%rsp),%edx
   24bcf:	89 0c 24             	mov    %ecx,(%rsp)
   24bd2:	89 54 24 03          	mov    %edx,0x3(%rsp)
   24bd6:	41 c6 06 02          	movb   $0x2,(%r14)
   24bda:	8b 0c 24             	mov    (%rsp),%ecx
   24bdd:	8b 54 24 03          	mov    0x3(%rsp),%edx
   24be1:	41 89 4e 01          	mov    %ecx,0x1(%r14)
   24be5:	41 89 56 04          	mov    %edx,0x4(%r14)
   24be9:	49 89 46 08          	mov    %rax,0x8(%r14)
   24bed:	eb 0c                	jmp    24bfb <_ZN3std2io5Write9write_all17hf4575799b15b41c1E+0x18b>
   24bef:	48 8d 44 24 18       	lea    0x18(%rsp),%rax
   24bf4:	0f 10 00             	movups (%rax),%xmm0
   24bf7:	41 0f 11 06          	movups %xmm0,(%r14)
   24bfb:	4c 89 f0             	mov    %r14,%rax
   24bfe:	48 83 c4 28          	add    $0x28,%rsp
   24c02:	5b                   	pop    %rbx
   24c03:	41 5c                	pop    %r12
   24c05:	41 5d                	pop    %r13
   24c07:	41 5e                	pop    %r14
   24c09:	41 5f                	pop    %r15
   24c0b:	5d                   	pop    %rbp
   24c0c:	c3                   	retq   
   24c0d:	48 89 c7             	mov    %rax,%rdi
   24c10:	48 89 de             	mov    %rbx,%rsi
   24c13:	e8 38 30 fe ff       	callq  7c50 <_ZN4core5slice22slice_index_order_fail17h7bcf2f94ba9e06deE>
   24c18:	0f 0b                	ud2    
   24c1a:	bf 18 00 00 00       	mov    $0x18,%edi
   24c1f:	be 08 00 00 00       	mov    $0x8,%esi
   24c24:	e8 97 08 fe ff       	callq  54c0 <_ZN5alloc5alloc18handle_alloc_error17hf7bb8682f6c8b1d7E>
   24c29:	0f 0b                	ud2    
   24c2b:	bf 1c 00 00 00       	mov    $0x1c,%edi
   24c30:	be 01 00 00 00       	mov    $0x1,%esi
   24c35:	e8 86 08 fe ff       	callq  54c0 <_ZN5alloc5alloc18handle_alloc_error17hf7bb8682f6c8b1d7E>
   24c3a:	0f 0b                	ud2    
   24c3c:	48 89 c3             	mov    %rax,%rbx
   24c3f:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
   24c44:	e8 47 06 00 00       	callq  25290 <_ZN4core3ptr13drop_in_place17h8847733603e5d167E>
   24c49:	48 89 df             	mov    %rbx,%rdi
   24c4c:	e8 4f f4 fd ff       	callq  40a0 <_Unwind_Resume@plt>
   24c51:	0f 0b                	ud2    
   24c53:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   24c5a:	00 00 00 
   24c5d:	0f 1f 00             	nopl   (%rax)

0000000000024c60 <_ZN3std2io5Write9write_fmt17h51ff6798850372b7E>:
   24c60:	41 57                	push   %r15
   24c62:	41 56                	push   %r14
   24c64:	53                   	push   %rbx
   24c65:	48 83 ec 50          	sub    $0x50,%rsp
   24c69:	49 89 fe             	mov    %rdi,%r14
   24c6c:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
   24c71:	c6 44 24 10 03       	movb   $0x3,0x10(%rsp)
   24c76:	0f 10 02             	movups (%rdx),%xmm0
   24c79:	0f 10 4a 10          	movups 0x10(%rdx),%xmm1
   24c7d:	0f 10 52 20          	movups 0x20(%rdx),%xmm2
   24c81:	0f 29 54 24 40       	movaps %xmm2,0x40(%rsp)
   24c86:	0f 29 4c 24 30       	movaps %xmm1,0x30(%rsp)
   24c8b:	0f 29 44 24 20       	movaps %xmm0,0x20(%rsp)
   24c90:	48 8d 35 19 24 22 00 	lea    0x222419(%rip),%rsi        # 2470b0 <__init_array_end+0x10a0>
   24c97:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   24c9c:	48 8d 54 24 20       	lea    0x20(%rsp),%rdx
   24ca1:	e8 8a 3d fe ff       	callq  8a30 <_ZN4core3fmt5write17h0db54a985afb558eE>
   24ca6:	84 c0                	test   %al,%al
   24ca8:	0f 84 c4 00 00 00    	je     24d72 <_ZN3std2io5Write9write_fmt17h51ff6798850372b7E+0x112>
   24cae:	80 7c 24 10 03       	cmpb   $0x3,0x10(%rsp)
   24cb3:	0f 85 f6 00 00 00    	jne    24daf <_ZN3std2io5Write9write_fmt17h51ff6798850372b7E+0x14f>
   24cb9:	bf 0f 00 00 00       	mov    $0xf,%edi
   24cbe:	be 01 00 00 00       	mov    $0x1,%esi
   24cc3:	e8 f8 06 fe ff       	callq  53c0 <__rust_alloc>
   24cc8:	48 85 c0             	test   %rax,%rax
   24ccb:	0f 84 08 01 00 00    	je     24dd9 <_ZN3std2io5Write9write_fmt17h51ff6798850372b7E+0x179>
   24cd1:	49 89 c7             	mov    %rax,%r15
   24cd4:	48 8b 05 0a 88 01 00 	mov    0x1880a(%rip),%rax        # 3d4e5 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0xb85>
   24cdb:	49 89 47 07          	mov    %rax,0x7(%r15)
   24cdf:	48 8b 05 f8 87 01 00 	mov    0x187f8(%rip),%rax        # 3d4de <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0xb7e>
   24ce6:	49 89 07             	mov    %rax,(%r15)
   24ce9:	bf 18 00 00 00       	mov    $0x18,%edi
   24cee:	be 08 00 00 00       	mov    $0x8,%esi
   24cf3:	e8 c8 06 fe ff       	callq  53c0 <__rust_alloc>
   24cf8:	48 85 c0             	test   %rax,%rax
   24cfb:	0f 84 c7 00 00 00    	je     24dc8 <_ZN3std2io5Write9write_fmt17h51ff6798850372b7E+0x168>
   24d01:	48 89 c3             	mov    %rax,%rbx
   24d04:	4c 89 38             	mov    %r15,(%rax)
   24d07:	0f 28 05 72 57 01 00 	movaps 0x15772(%rip),%xmm0        # 3a480 <_fini+0x13c>
   24d0e:	0f 11 40 08          	movups %xmm0,0x8(%rax)
   24d12:	bf 18 00 00 00       	mov    $0x18,%edi
   24d17:	be 08 00 00 00       	mov    $0x8,%esi
   24d1c:	e8 9f 06 fe ff       	callq  53c0 <__rust_alloc>
   24d21:	48 85 c0             	test   %rax,%rax
   24d24:	0f 84 9e 00 00 00    	je     24dc8 <_ZN3std2io5Write9write_fmt17h51ff6798850372b7E+0x168>
   24d2a:	48 89 18             	mov    %rbx,(%rax)
   24d2d:	48 8d 0d ac 23 22 00 	lea    0x2223ac(%rip),%rcx        # 2470e0 <__init_array_end+0x10d0>
   24d34:	48 89 48 08          	mov    %rcx,0x8(%rax)
   24d38:	c6 40 10 10          	movb   $0x10,0x10(%rax)
   24d3c:	8b 4c 24 20          	mov    0x20(%rsp),%ecx
   24d40:	8b 54 24 23          	mov    0x23(%rsp),%edx
   24d44:	89 50 14             	mov    %edx,0x14(%rax)
   24d47:	89 48 11             	mov    %ecx,0x11(%rax)
   24d4a:	8b 4c 24 20          	mov    0x20(%rsp),%ecx
   24d4e:	8b 54 24 23          	mov    0x23(%rsp),%edx
   24d52:	89 0c 24             	mov    %ecx,(%rsp)
   24d55:	89 54 24 03          	mov    %edx,0x3(%rsp)
   24d59:	41 c6 06 02          	movb   $0x2,(%r14)
   24d5d:	8b 0c 24             	mov    (%rsp),%ecx
   24d60:	8b 54 24 03          	mov    0x3(%rsp),%edx
   24d64:	41 89 4e 01          	mov    %ecx,0x1(%r14)
   24d68:	41 89 56 04          	mov    %edx,0x4(%r14)
   24d6c:	49 89 46 08          	mov    %rax,0x8(%r14)
   24d70:	eb 49                	jmp    24dbb <_ZN3std2io5Write9write_fmt17h51ff6798850372b7E+0x15b>
   24d72:	41 c6 06 03          	movb   $0x3,(%r14)
   24d76:	8a 44 24 10          	mov    0x10(%rsp),%al
   24d7a:	3c 03                	cmp    $0x3,%al
   24d7c:	77 04                	ja     24d82 <_ZN3std2io5Write9write_fmt17h51ff6798850372b7E+0x122>
   24d7e:	3c 02                	cmp    $0x2,%al
   24d80:	75 39                	jne    24dbb <_ZN3std2io5Write9write_fmt17h51ff6798850372b7E+0x15b>
   24d82:	48 8b 5c 24 18       	mov    0x18(%rsp),%rbx
   24d87:	48 8b 3b             	mov    (%rbx),%rdi
   24d8a:	48 8b 43 08          	mov    0x8(%rbx),%rax
   24d8e:	ff 10                	callq  *(%rax)
   24d90:	48 8b 43 08          	mov    0x8(%rbx),%rax
   24d94:	48 83 78 08 00       	cmpq   $0x0,0x8(%rax)
   24d99:	74 08                	je     24da3 <_ZN3std2io5Write9write_fmt17h51ff6798850372b7E+0x143>
   24d9b:	48 8b 3b             	mov    (%rbx),%rdi
   24d9e:	e8 6d 06 fe ff       	callq  5410 <__rust_dealloc>
   24da3:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
   24da8:	e8 63 06 fe ff       	callq  5410 <__rust_dealloc>
   24dad:	eb 0c                	jmp    24dbb <_ZN3std2io5Write9write_fmt17h51ff6798850372b7E+0x15b>
   24daf:	48 8d 44 24 10       	lea    0x10(%rsp),%rax
   24db4:	0f 10 00             	movups (%rax),%xmm0
   24db7:	41 0f 11 06          	movups %xmm0,(%r14)
   24dbb:	4c 89 f0             	mov    %r14,%rax
   24dbe:	48 83 c4 50          	add    $0x50,%rsp
   24dc2:	5b                   	pop    %rbx
   24dc3:	41 5e                	pop    %r14
   24dc5:	41 5f                	pop    %r15
   24dc7:	c3                   	retq   
   24dc8:	bf 18 00 00 00       	mov    $0x18,%edi
   24dcd:	be 08 00 00 00       	mov    $0x8,%esi
   24dd2:	e8 e9 06 fe ff       	callq  54c0 <_ZN5alloc5alloc18handle_alloc_error17hf7bb8682f6c8b1d7E>
   24dd7:	0f 0b                	ud2    
   24dd9:	bf 0f 00 00 00       	mov    $0xf,%edi
   24dde:	be 01 00 00 00       	mov    $0x1,%esi
   24de3:	e8 d8 06 fe ff       	callq  54c0 <_ZN5alloc5alloc18handle_alloc_error17hf7bb8682f6c8b1d7E>
   24de8:	0f 0b                	ud2    
   24dea:	49 89 c6             	mov    %rax,%r14
   24ded:	48 8b 3b             	mov    (%rbx),%rdi
   24df0:	48 8b 73 08          	mov    0x8(%rbx),%rsi
   24df4:	e8 17 fb ff ff       	callq  24910 <_ZN5alloc5alloc8box_free17h3741427eaa5804e6E>
   24df9:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
   24dfe:	e8 2d 00 00 00       	callq  24e30 <_ZN5alloc5alloc8box_free17h20e506aa40102463E>
   24e03:	4c 89 f7             	mov    %r14,%rdi
   24e06:	e8 95 f2 fd ff       	callq  40a0 <_Unwind_Resume@plt>
   24e0b:	0f 0b                	ud2    
   24e0d:	49 89 c6             	mov    %rax,%r14
   24e10:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   24e15:	e8 26 00 00 00       	callq  24e40 <_ZN4core3ptr13drop_in_place17h498b8d0149e9a9baE>
   24e1a:	4c 89 f7             	mov    %r14,%rdi
   24e1d:	e8 7e f2 fd ff       	callq  40a0 <_Unwind_Resume@plt>
   24e22:	0f 0b                	ud2    
   24e24:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   24e2b:	00 00 00 
   24e2e:	66 90                	xchg   %ax,%ax

0000000000024e30 <_ZN5alloc5alloc8box_free17h20e506aa40102463E>:
   24e30:	e9 db 05 fe ff       	jmpq   5410 <__rust_dealloc>
   24e35:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   24e3c:	00 00 00 
   24e3f:	90                   	nop

0000000000024e40 <_ZN4core3ptr13drop_in_place17h498b8d0149e9a9baE>:
   24e40:	41 57                	push   %r15
   24e42:	41 56                	push   %r14
   24e44:	53                   	push   %rbx
   24e45:	48 89 fb             	mov    %rdi,%rbx
   24e48:	8a 47 08             	mov    0x8(%rdi),%al
   24e4b:	3c 03                	cmp    $0x3,%al
   24e4d:	77 0a                	ja     24e59 <_ZN4core3ptr13drop_in_place17h498b8d0149e9a9baE+0x19>
   24e4f:	3c 02                	cmp    $0x2,%al
   24e51:	74 06                	je     24e59 <_ZN4core3ptr13drop_in_place17h498b8d0149e9a9baE+0x19>
   24e53:	5b                   	pop    %rbx
   24e54:	41 5e                	pop    %r14
   24e56:	41 5f                	pop    %r15
   24e58:	c3                   	retq   
   24e59:	4c 8b 7b 10          	mov    0x10(%rbx),%r15
   24e5d:	49 8b 3f             	mov    (%r15),%rdi
   24e60:	49 8b 47 08          	mov    0x8(%r15),%rax
   24e64:	ff 10                	callq  *(%rax)
   24e66:	49 8b 47 08          	mov    0x8(%r15),%rax
   24e6a:	48 83 78 08 00       	cmpq   $0x0,0x8(%rax)
   24e6f:	74 08                	je     24e79 <_ZN4core3ptr13drop_in_place17h498b8d0149e9a9baE+0x39>
   24e71:	49 8b 3f             	mov    (%r15),%rdi
   24e74:	e8 97 05 fe ff       	callq  5410 <__rust_dealloc>
   24e79:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
   24e7d:	5b                   	pop    %rbx
   24e7e:	41 5e                	pop    %r14
   24e80:	41 5f                	pop    %r15
   24e82:	e9 89 05 fe ff       	jmpq   5410 <__rust_dealloc>
   24e87:	49 89 c6             	mov    %rax,%r14
   24e8a:	49 8b 3f             	mov    (%r15),%rdi
   24e8d:	49 8b 77 08          	mov    0x8(%r15),%rsi
   24e91:	e8 7a fa ff ff       	callq  24910 <_ZN5alloc5alloc8box_free17h3741427eaa5804e6E>
   24e96:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
   24e9a:	e8 91 ff ff ff       	callq  24e30 <_ZN5alloc5alloc8box_free17h20e506aa40102463E>
   24e9f:	4c 89 f7             	mov    %r14,%rdi
   24ea2:	e8 f9 f1 fd ff       	callq  40a0 <_Unwind_Resume@plt>
   24ea7:	0f 0b                	ud2    
   24ea9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000024eb0 <_ZN4core3ptr13drop_in_place17h5563ae43ca5ac214E>:
   24eb0:	48 83 7f 08 00       	cmpq   $0x0,0x8(%rdi)
   24eb5:	74 08                	je     24ebf <_ZN4core3ptr13drop_in_place17h5563ae43ca5ac214E+0xf>
   24eb7:	48 8b 3f             	mov    (%rdi),%rdi
   24eba:	e9 51 05 fe ff       	jmpq   5410 <__rust_dealloc>
   24ebf:	c3                   	retq   

0000000000024ec0 <_ZN3std5error5Error5cause17hfd0627bb8dffce73E>:
   24ec0:	31 c0                	xor    %eax,%eax
   24ec2:	c3                   	retq   
   24ec3:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   24eca:	00 00 00 
   24ecd:	0f 1f 00             	nopl   (%rax)

0000000000024ed0 <_ZN3std5error5Error7type_id17hb41013441dd09d43E>:
   24ed0:	48 b8 78 3a f8 7d d6 	movabs $0x12d298d67df83a78,%rax
   24ed7:	98 d2 12 
   24eda:	c3                   	retq   
   24edb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000024ee0 <_ZN3std5error5Error9backtrace17h3a25b17b44bbdb62E>:
   24ee0:	31 c0                	xor    %eax,%eax
   24ee2:	c3                   	retq   
   24ee3:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   24eea:	00 00 00 
   24eed:	0f 1f 00             	nopl   (%rax)

0000000000024ef0 <_ZN243_$LT$std..error..$LT$impl$u20$core..convert..From$LT$alloc..string..String$GT$$u20$for$u20$alloc..boxed..Box$LT$dyn$u20$std..error..Error$u2b$core..marker..Sync$u2b$core..marker..Send$GT$$GT$..from..StringError$u20$as$u20$std..error..Error$GT$11description17hfce560ba87b912afE>:
   24ef0:	48 8b 07             	mov    (%rdi),%rax
   24ef3:	48 8b 57 10          	mov    0x10(%rdi),%rdx
   24ef7:	c3                   	retq   
   24ef8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   24eff:	00 

0000000000024f00 <_ZN244_$LT$std..error..$LT$impl$u20$core..convert..From$LT$alloc..string..String$GT$$u20$for$u20$alloc..boxed..Box$LT$dyn$u20$std..error..Error$u2b$core..marker..Sync$u2b$core..marker..Send$GT$$GT$..from..StringError$u20$as$u20$core..fmt..Display$GT$3fmt17h1e9de55a8056f72cE>:
   24f00:	48 89 f0             	mov    %rsi,%rax
   24f03:	48 8b 37             	mov    (%rdi),%rsi
   24f06:	48 8b 57 10          	mov    0x10(%rdi),%rdx
   24f0a:	48 89 c7             	mov    %rax,%rdi
   24f0d:	e9 be 2d fe ff       	jmpq   7cd0 <_ZN4core3fmt9Formatter3pad17h7ef001ba65c2db9cE>
   24f12:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   24f19:	00 00 00 
   24f1c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000024f20 <_ZN242_$LT$std..error..$LT$impl$u20$core..convert..From$LT$alloc..string..String$GT$$u20$for$u20$alloc..boxed..Box$LT$dyn$u20$std..error..Error$u2b$core..marker..Sync$u2b$core..marker..Send$GT$$GT$..from..StringError$u20$as$u20$core..fmt..Debug$GT$3fmt17h898680d90905038dE>:
   24f20:	48 89 f2             	mov    %rsi,%rdx
   24f23:	48 8b 07             	mov    (%rdi),%rax
   24f26:	48 8b 77 10          	mov    0x10(%rdi),%rsi
   24f2a:	48 89 c7             	mov    %rax,%rdi
   24f2d:	e9 de 55 fe ff       	jmpq   a510 <_ZN40_$LT$str$u20$as$u20$core..fmt..Debug$GT$3fmt17h942f30b282040ce2E>
   24f32:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   24f39:	00 00 00 
   24f3c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000024f40 <_ZN80_$LT$std..io..Write..write_fmt..Adaptor$LT$T$GT$$u20$as$u20$core..fmt..Write$GT$9write_str17h0cdcb358d147d431E>:
   24f40:	41 57                	push   %r15
   24f42:	41 56                	push   %r14
   24f44:	41 54                	push   %r12
   24f46:	53                   	push   %rbx
   24f47:	48 83 ec 28          	sub    $0x28,%rsp
   24f4b:	48 89 d1             	mov    %rdx,%rcx
   24f4e:	48 89 f2             	mov    %rsi,%rdx
   24f51:	48 89 fb             	mov    %rdi,%rbx
   24f54:	48 8b 37             	mov    (%rdi),%rsi
   24f57:	48 8d 7c 24 18       	lea    0x18(%rsp),%rdi
   24f5c:	e8 0f fb ff ff       	callq  24a70 <_ZN3std2io5Write9write_all17hf4575799b15b41c1E>
   24f61:	80 7c 24 18 03       	cmpb   $0x3,0x18(%rsp)
   24f66:	75 04                	jne    24f6c <_ZN80_$LT$std..io..Write..write_fmt..Adaptor$LT$T$GT$$u20$as$u20$core..fmt..Write$GT$9write_str17h0cdcb358d147d431E+0x2c>
   24f68:	31 c0                	xor    %eax,%eax
   24f6a:	eb 4f                	jmp    24fbb <_ZN80_$LT$std..io..Write..write_fmt..Adaptor$LT$T$GT$$u20$as$u20$core..fmt..Write$GT$9write_str17h0cdcb358d147d431E+0x7b>
   24f6c:	0f 10 44 24 18       	movups 0x18(%rsp),%xmm0
   24f71:	0f 29 04 24          	movaps %xmm0,(%rsp)
   24f75:	4c 8d 7b 08          	lea    0x8(%rbx),%r15
   24f79:	8a 43 08             	mov    0x8(%rbx),%al
   24f7c:	3c 03                	cmp    $0x3,%al
   24f7e:	77 04                	ja     24f84 <_ZN80_$LT$std..io..Write..write_fmt..Adaptor$LT$T$GT$$u20$as$u20$core..fmt..Write$GT$9write_str17h0cdcb358d147d431E+0x44>
   24f80:	3c 02                	cmp    $0x2,%al
   24f82:	75 2d                	jne    24fb1 <_ZN80_$LT$std..io..Write..write_fmt..Adaptor$LT$T$GT$$u20$as$u20$core..fmt..Write$GT$9write_str17h0cdcb358d147d431E+0x71>
   24f84:	4c 8b 63 10          	mov    0x10(%rbx),%r12
   24f88:	49 8b 3c 24          	mov    (%r12),%rdi
   24f8c:	49 8b 44 24 08       	mov    0x8(%r12),%rax
   24f91:	ff 10                	callq  *(%rax)
   24f93:	49 8b 44 24 08       	mov    0x8(%r12),%rax
   24f98:	48 83 78 08 00       	cmpq   $0x0,0x8(%rax)
   24f9d:	74 09                	je     24fa8 <_ZN80_$LT$std..io..Write..write_fmt..Adaptor$LT$T$GT$$u20$as$u20$core..fmt..Write$GT$9write_str17h0cdcb358d147d431E+0x68>
   24f9f:	49 8b 3c 24          	mov    (%r12),%rdi
   24fa3:	e8 68 04 fe ff       	callq  5410 <__rust_dealloc>
   24fa8:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
   24fac:	e8 5f 04 fe ff       	callq  5410 <__rust_dealloc>
   24fb1:	0f 28 04 24          	movaps (%rsp),%xmm0
   24fb5:	41 0f 11 07          	movups %xmm0,(%r15)
   24fb9:	b0 01                	mov    $0x1,%al
   24fbb:	48 83 c4 28          	add    $0x28,%rsp
   24fbf:	5b                   	pop    %rbx
   24fc0:	41 5c                	pop    %r12
   24fc2:	41 5e                	pop    %r14
   24fc4:	41 5f                	pop    %r15
   24fc6:	c3                   	retq   
   24fc7:	49 89 c6             	mov    %rax,%r14
   24fca:	49 8b 3c 24          	mov    (%r12),%rdi
   24fce:	49 8b 74 24 08       	mov    0x8(%r12),%rsi
   24fd3:	e8 38 f9 ff ff       	callq  24910 <_ZN5alloc5alloc8box_free17h3741427eaa5804e6E>
   24fd8:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
   24fdc:	e8 4f fe ff ff       	callq  24e30 <_ZN5alloc5alloc8box_free17h20e506aa40102463E>
   24fe1:	0f 28 04 24          	movaps (%rsp),%xmm0
   24fe5:	41 0f 11 07          	movups %xmm0,(%r15)
   24fe9:	4c 89 f7             	mov    %r14,%rdi
   24fec:	e8 af f0 fd ff       	callq  40a0 <_Unwind_Resume@plt>
   24ff1:	0f 0b                	ud2    
   24ff3:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   24ffa:	00 00 00 
   24ffd:	0f 1f 00             	nopl   (%rax)

0000000000025000 <_ZN4core3fmt5Write10write_char17h9f5b9d9a2bb59f7eE>:
   25000:	50                   	push   %rax
   25001:	89 f0                	mov    %esi,%eax
   25003:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%rsp)
   2500a:	00 
   2500b:	81 fe 80 00 00 00    	cmp    $0x80,%esi
   25011:	73 15                	jae    25028 <_ZN4core3fmt5Write10write_char17h9f5b9d9a2bb59f7eE+0x28>
   25013:	48 8d 74 24 04       	lea    0x4(%rsp),%rsi
   25018:	88 44 24 04          	mov    %al,0x4(%rsp)
   2501c:	ba 01 00 00 00       	mov    $0x1,%edx
   25021:	e8 1a ff ff ff       	callq  24f40 <_ZN80_$LT$std..io..Write..write_fmt..Adaptor$LT$T$GT$$u20$as$u20$core..fmt..Write$GT$9write_str17h0cdcb358d147d431E>
   25026:	59                   	pop    %rcx
   25027:	c3                   	retq   
   25028:	48 8d 74 24 04       	lea    0x4(%rsp),%rsi
   2502d:	89 c1                	mov    %eax,%ecx
   2502f:	3d 00 08 00 00       	cmp    $0x800,%eax
   25034:	73 21                	jae    25057 <_ZN4core3fmt5Write10write_char17h9f5b9d9a2bb59f7eE+0x57>
   25036:	c1 e9 06             	shr    $0x6,%ecx
   25039:	80 e1 1f             	and    $0x1f,%cl
   2503c:	80 c9 c0             	or     $0xc0,%cl
   2503f:	88 4c 24 04          	mov    %cl,0x4(%rsp)
   25043:	24 3f                	and    $0x3f,%al
   25045:	0c 80                	or     $0x80,%al
   25047:	88 44 24 05          	mov    %al,0x5(%rsp)
   2504b:	ba 02 00 00 00       	mov    $0x2,%edx
   25050:	e8 eb fe ff ff       	callq  24f40 <_ZN80_$LT$std..io..Write..write_fmt..Adaptor$LT$T$GT$$u20$as$u20$core..fmt..Write$GT$9write_str17h0cdcb358d147d431E>
   25055:	59                   	pop    %rcx
   25056:	c3                   	retq   
   25057:	3d 00 00 01 00       	cmp    $0x10000,%eax
   2505c:	73 30                	jae    2508e <_ZN4core3fmt5Write10write_char17h9f5b9d9a2bb59f7eE+0x8e>
   2505e:	c1 e9 0c             	shr    $0xc,%ecx
   25061:	80 e1 0f             	and    $0xf,%cl
   25064:	80 c9 e0             	or     $0xe0,%cl
   25067:	88 4c 24 04          	mov    %cl,0x4(%rsp)
   2506b:	89 c1                	mov    %eax,%ecx
   2506d:	c1 e9 06             	shr    $0x6,%ecx
   25070:	80 e1 3f             	and    $0x3f,%cl
   25073:	80 c9 80             	or     $0x80,%cl
   25076:	88 4c 24 05          	mov    %cl,0x5(%rsp)
   2507a:	24 3f                	and    $0x3f,%al
   2507c:	0c 80                	or     $0x80,%al
   2507e:	88 44 24 06          	mov    %al,0x6(%rsp)
   25082:	ba 03 00 00 00       	mov    $0x3,%edx
   25087:	e8 b4 fe ff ff       	callq  24f40 <_ZN80_$LT$std..io..Write..write_fmt..Adaptor$LT$T$GT$$u20$as$u20$core..fmt..Write$GT$9write_str17h0cdcb358d147d431E>
   2508c:	59                   	pop    %rcx
   2508d:	c3                   	retq   
   2508e:	c1 e9 12             	shr    $0x12,%ecx
   25091:	80 c9 f0             	or     $0xf0,%cl
   25094:	88 4c 24 04          	mov    %cl,0x4(%rsp)
   25098:	89 c1                	mov    %eax,%ecx
   2509a:	c1 e9 0c             	shr    $0xc,%ecx
   2509d:	80 e1 3f             	and    $0x3f,%cl
   250a0:	80 c9 80             	or     $0x80,%cl
   250a3:	88 4c 24 05          	mov    %cl,0x5(%rsp)
   250a7:	89 c1                	mov    %eax,%ecx
   250a9:	c1 e9 06             	shr    $0x6,%ecx
   250ac:	80 e1 3f             	and    $0x3f,%cl
   250af:	80 c9 80             	or     $0x80,%cl
   250b2:	88 4c 24 06          	mov    %cl,0x6(%rsp)
   250b6:	24 3f                	and    $0x3f,%al
   250b8:	0c 80                	or     $0x80,%al
   250ba:	88 44 24 07          	mov    %al,0x7(%rsp)
   250be:	ba 04 00 00 00       	mov    $0x4,%edx
   250c3:	e8 78 fe ff ff       	callq  24f40 <_ZN80_$LT$std..io..Write..write_fmt..Adaptor$LT$T$GT$$u20$as$u20$core..fmt..Write$GT$9write_str17h0cdcb358d147d431E>
   250c8:	59                   	pop    %rcx
   250c9:	c3                   	retq   
   250ca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000000250d0 <_ZN4core3fmt5Write9write_fmt17hc03c358a1dffd24fE>:
   250d0:	48 83 ec 48          	sub    $0x48,%rsp
   250d4:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
   250d9:	0f 10 06             	movups (%rsi),%xmm0
   250dc:	0f 10 4e 10          	movups 0x10(%rsi),%xmm1
   250e0:	0f 10 56 20          	movups 0x20(%rsi),%xmm2
   250e4:	0f 29 54 24 30       	movaps %xmm2,0x30(%rsp)
   250e9:	0f 29 4c 24 20       	movaps %xmm1,0x20(%rsp)
   250ee:	0f 29 44 24 10       	movaps %xmm0,0x10(%rsp)
   250f3:	48 8d 35 36 20 22 00 	lea    0x222036(%rip),%rsi        # 247130 <__init_array_end+0x1120>
   250fa:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   250ff:	48 8d 54 24 10       	lea    0x10(%rsp),%rdx
   25104:	e8 27 39 fe ff       	callq  8a30 <_ZN4core3fmt5write17h0db54a985afb558eE>
   25109:	48 83 c4 48          	add    $0x48,%rsp
   2510d:	c3                   	retq   
   2510e:	66 90                	xchg   %ax,%ax

0000000000025110 <_ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$9write_str17hb1ebbdf7a6e5c589E>:
   25110:	48 8b 3f             	mov    (%rdi),%rdi
   25113:	e9 28 fe ff ff       	jmpq   24f40 <_ZN80_$LT$std..io..Write..write_fmt..Adaptor$LT$T$GT$$u20$as$u20$core..fmt..Write$GT$9write_str17h0cdcb358d147d431E>
   25118:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   2511f:	00 

0000000000025120 <_ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$10write_char17hf44f1666a442d57cE>:
   25120:	50                   	push   %rax
   25121:	89 f0                	mov    %esi,%eax
   25123:	48 8b 3f             	mov    (%rdi),%rdi
   25126:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%rsp)
   2512d:	00 
   2512e:	81 fe 80 00 00 00    	cmp    $0x80,%esi
   25134:	73 15                	jae    2514b <_ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$10write_char17hf44f1666a442d57cE+0x2b>
   25136:	48 8d 74 24 04       	lea    0x4(%rsp),%rsi
   2513b:	88 44 24 04          	mov    %al,0x4(%rsp)
   2513f:	ba 01 00 00 00       	mov    $0x1,%edx
   25144:	e8 f7 fd ff ff       	callq  24f40 <_ZN80_$LT$std..io..Write..write_fmt..Adaptor$LT$T$GT$$u20$as$u20$core..fmt..Write$GT$9write_str17h0cdcb358d147d431E>
   25149:	59                   	pop    %rcx
   2514a:	c3                   	retq   
   2514b:	48 8d 74 24 04       	lea    0x4(%rsp),%rsi
   25150:	89 c1                	mov    %eax,%ecx
   25152:	3d 00 08 00 00       	cmp    $0x800,%eax
   25157:	73 21                	jae    2517a <_ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$10write_char17hf44f1666a442d57cE+0x5a>
   25159:	c1 e9 06             	shr    $0x6,%ecx
   2515c:	80 e1 1f             	and    $0x1f,%cl
   2515f:	80 c9 c0             	or     $0xc0,%cl
   25162:	88 4c 24 04          	mov    %cl,0x4(%rsp)
   25166:	24 3f                	and    $0x3f,%al
   25168:	0c 80                	or     $0x80,%al
   2516a:	88 44 24 05          	mov    %al,0x5(%rsp)
   2516e:	ba 02 00 00 00       	mov    $0x2,%edx
   25173:	e8 c8 fd ff ff       	callq  24f40 <_ZN80_$LT$std..io..Write..write_fmt..Adaptor$LT$T$GT$$u20$as$u20$core..fmt..Write$GT$9write_str17h0cdcb358d147d431E>
   25178:	59                   	pop    %rcx
   25179:	c3                   	retq   
   2517a:	3d 00 00 01 00       	cmp    $0x10000,%eax
   2517f:	73 30                	jae    251b1 <_ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$10write_char17hf44f1666a442d57cE+0x91>
   25181:	c1 e9 0c             	shr    $0xc,%ecx
   25184:	80 e1 0f             	and    $0xf,%cl
   25187:	80 c9 e0             	or     $0xe0,%cl
   2518a:	88 4c 24 04          	mov    %cl,0x4(%rsp)
   2518e:	89 c1                	mov    %eax,%ecx
   25190:	c1 e9 06             	shr    $0x6,%ecx
   25193:	80 e1 3f             	and    $0x3f,%cl
   25196:	80 c9 80             	or     $0x80,%cl
   25199:	88 4c 24 05          	mov    %cl,0x5(%rsp)
   2519d:	24 3f                	and    $0x3f,%al
   2519f:	0c 80                	or     $0x80,%al
   251a1:	88 44 24 06          	mov    %al,0x6(%rsp)
   251a5:	ba 03 00 00 00       	mov    $0x3,%edx
   251aa:	e8 91 fd ff ff       	callq  24f40 <_ZN80_$LT$std..io..Write..write_fmt..Adaptor$LT$T$GT$$u20$as$u20$core..fmt..Write$GT$9write_str17h0cdcb358d147d431E>
   251af:	59                   	pop    %rcx
   251b0:	c3                   	retq   
   251b1:	c1 e9 12             	shr    $0x12,%ecx
   251b4:	80 c9 f0             	or     $0xf0,%cl
   251b7:	88 4c 24 04          	mov    %cl,0x4(%rsp)
   251bb:	89 c1                	mov    %eax,%ecx
   251bd:	c1 e9 0c             	shr    $0xc,%ecx
   251c0:	80 e1 3f             	and    $0x3f,%cl
   251c3:	80 c9 80             	or     $0x80,%cl
   251c6:	88 4c 24 05          	mov    %cl,0x5(%rsp)
   251ca:	89 c1                	mov    %eax,%ecx
   251cc:	c1 e9 06             	shr    $0x6,%ecx
   251cf:	80 e1 3f             	and    $0x3f,%cl
   251d2:	80 c9 80             	or     $0x80,%cl
   251d5:	88 4c 24 06          	mov    %cl,0x6(%rsp)
   251d9:	24 3f                	and    $0x3f,%al
   251db:	0c 80                	or     $0x80,%al
   251dd:	88 44 24 07          	mov    %al,0x7(%rsp)
   251e1:	ba 04 00 00 00       	mov    $0x4,%edx
   251e6:	e8 55 fd ff ff       	callq  24f40 <_ZN80_$LT$std..io..Write..write_fmt..Adaptor$LT$T$GT$$u20$as$u20$core..fmt..Write$GT$9write_str17h0cdcb358d147d431E>
   251eb:	59                   	pop    %rcx
   251ec:	c3                   	retq   
   251ed:	0f 1f 00             	nopl   (%rax)

00000000000251f0 <_ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$9write_fmt17ha7b48f3145a25c59E>:
   251f0:	48 83 ec 48          	sub    $0x48,%rsp
   251f4:	48 8b 07             	mov    (%rdi),%rax
   251f7:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   251fc:	0f 10 06             	movups (%rsi),%xmm0
   251ff:	0f 10 4e 10          	movups 0x10(%rsi),%xmm1
   25203:	0f 10 56 20          	movups 0x20(%rsi),%xmm2
   25207:	0f 29 54 24 30       	movaps %xmm2,0x30(%rsp)
   2520c:	0f 29 4c 24 20       	movaps %xmm1,0x20(%rsp)
   25211:	0f 29 44 24 10       	movaps %xmm0,0x10(%rsp)
   25216:	48 8d 35 13 1f 22 00 	lea    0x221f13(%rip),%rsi        # 247130 <__init_array_end+0x1120>
   2521d:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   25222:	48 8d 54 24 10       	lea    0x10(%rsp),%rdx
   25227:	e8 04 38 fe ff       	callq  8a30 <_ZN4core3fmt5write17h0db54a985afb558eE>
   2522c:	48 83 c4 48          	add    $0x48,%rsp
   25230:	c3                   	retq   
   25231:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   25238:	00 00 00 
   2523b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000025240 <_ZN3std3sys4unix17decode_error_kind17h568cc869969c08a6E>:
   25240:	b1 10                	mov    $0x10,%cl
   25242:	83 c7 ff             	add    $0xffffffff,%edi
   25245:	83 ff 6e             	cmp    $0x6e,%edi
   25248:	77 1d                	ja     25267 <_ZN3std3sys4unix17decode_error_kind17h568cc869969c08a6E+0x27>
   2524a:	b0 02                	mov    $0x2,%al
   2524c:	48 8d 15 c5 58 01 00 	lea    0x158c5(%rip),%rdx        # 3ab18 <_ZN4core7unicode12unicode_data2cc19BITSET_INDEX_CHUNKS17h8a1f39cd536e9344E+0x658>
   25253:	48 63 34 ba          	movslq (%rdx,%rdi,4),%rsi
   25257:	48 01 d6             	add    %rdx,%rsi
   2525a:	ff e6                	jmpq   *%rsi
   2525c:	b0 01                	mov    $0x1,%al
   2525e:	c3                   	retq   
   2525f:	31 c0                	xor    %eax,%eax
   25261:	c3                   	retq   
   25262:	b0 0f                	mov    $0xf,%al
   25264:	c3                   	retq   
   25265:	b1 0a                	mov    $0xa,%cl
   25267:	89 c8                	mov    %ecx,%eax
   25269:	c3                   	retq   
   2526a:	b0 09                	mov    $0x9,%al
   2526c:	c3                   	retq   
   2526d:	b0 0b                	mov    $0xb,%al
   2526f:	c3                   	retq   
   25270:	b0 06                	mov    $0x6,%al
   25272:	c3                   	retq   
   25273:	b0 07                	mov    $0x7,%al
   25275:	c3                   	retq   
   25276:	b0 04                	mov    $0x4,%al
   25278:	c3                   	retq   
   25279:	b0 03                	mov    $0x3,%al
   2527b:	c3                   	retq   
   2527c:	b0 05                	mov    $0x5,%al
   2527e:	c3                   	retq   
   2527f:	b0 0d                	mov    $0xd,%al
   25281:	c3                   	retq   
   25282:	b0 08                	mov    $0x8,%al
   25284:	c3                   	retq   
   25285:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2528c:	00 00 00 
   2528f:	90                   	nop

0000000000025290 <_ZN4core3ptr13drop_in_place17h8847733603e5d167E>:
   25290:	41 57                	push   %r15
   25292:	41 56                	push   %r14
   25294:	53                   	push   %rbx
   25295:	48 83 3f 00          	cmpq   $0x0,(%rdi)
   25299:	74 09                	je     252a4 <_ZN4core3ptr13drop_in_place17h8847733603e5d167E+0x14>
   2529b:	48 89 fb             	mov    %rdi,%rbx
   2529e:	80 7f 08 02          	cmpb   $0x2,0x8(%rdi)
   252a2:	73 06                	jae    252aa <_ZN4core3ptr13drop_in_place17h8847733603e5d167E+0x1a>
   252a4:	5b                   	pop    %rbx
   252a5:	41 5e                	pop    %r14
   252a7:	41 5f                	pop    %r15
   252a9:	c3                   	retq   
   252aa:	4c 8b 7b 10          	mov    0x10(%rbx),%r15
   252ae:	49 8b 3f             	mov    (%r15),%rdi
   252b1:	49 8b 47 08          	mov    0x8(%r15),%rax
   252b5:	ff 10                	callq  *(%rax)
   252b7:	49 8b 47 08          	mov    0x8(%r15),%rax
   252bb:	48 83 78 08 00       	cmpq   $0x0,0x8(%rax)
   252c0:	74 08                	je     252ca <_ZN4core3ptr13drop_in_place17h8847733603e5d167E+0x3a>
   252c2:	49 8b 3f             	mov    (%r15),%rdi
   252c5:	e8 46 01 fe ff       	callq  5410 <__rust_dealloc>
   252ca:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
   252ce:	5b                   	pop    %rbx
   252cf:	41 5e                	pop    %r14
   252d1:	41 5f                	pop    %r15
   252d3:	e9 38 01 fe ff       	jmpq   5410 <__rust_dealloc>
   252d8:	49 89 c6             	mov    %rax,%r14
   252db:	49 8b 3f             	mov    (%r15),%rdi
   252de:	49 8b 77 08          	mov    0x8(%r15),%rsi
   252e2:	e8 29 f6 ff ff       	callq  24910 <_ZN5alloc5alloc8box_free17h3741427eaa5804e6E>
   252e7:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
   252eb:	e8 40 fb ff ff       	callq  24e30 <_ZN5alloc5alloc8box_free17h20e506aa40102463E>
   252f0:	4c 89 f7             	mov    %r14,%rdi
   252f3:	e8 a8 ed fd ff       	callq  40a0 <_Unwind_Resume@plt>
   252f8:	0f 0b                	ud2    
   252fa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000025300 <_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h9716022a15e5b13cE>:
   25300:	48 89 f0             	mov    %rsi,%rax
   25303:	48 8b 37             	mov    (%rdi),%rsi
   25306:	48 8b 57 08          	mov    0x8(%rdi),%rdx
   2530a:	48 89 c7             	mov    %rax,%rdi
   2530d:	e9 be 29 fe ff       	jmpq   7cd0 <_ZN4core3fmt9Formatter3pad17h7ef001ba65c2db9cE>
   25312:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   25319:	00 00 00 
   2531c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000025320 <_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17he9403749bfc5234aE>:
   25320:	48 83 ec 68          	sub    $0x68,%rsp
   25324:	48 8b 07             	mov    (%rdi),%rax
   25327:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   2532c:	48 8d 48 10          	lea    0x10(%rax),%rcx
   25330:	48 8d 40 14          	lea    0x14(%rax),%rax
   25334:	48 8d 15 c5 ff ff ff 	lea    -0x3b(%rip),%rdx        # 25300 <_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h9716022a15e5b13cE>
   2533b:	48 89 54 24 10       	mov    %rdx,0x10(%rsp)
   25340:	48 89 4c 24 18       	mov    %rcx,0x18(%rsp)
   25345:	48 8d 0d b4 49 fe ff 	lea    -0x1b64c(%rip),%rcx        # 9d00 <_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$u32$GT$3fmt17h0d5c971f484cf42aE>
   2534c:	48 89 4c 24 20       	mov    %rcx,0x20(%rsp)
   25351:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   25356:	48 89 4c 24 30       	mov    %rcx,0x30(%rsp)
   2535b:	48 8b 7e 20          	mov    0x20(%rsi),%rdi
   2535f:	48 8b 76 28          	mov    0x28(%rsi),%rsi
   25363:	48 8d 05 fe 12 22 00 	lea    0x2212fe(%rip),%rax        # 246668 <__init_array_end+0x658>
   2536a:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   2536f:	48 c7 44 24 40 03 00 	movq   $0x3,0x40(%rsp)
   25376:	00 00 
   25378:	48 c7 44 24 48 00 00 	movq   $0x0,0x48(%rsp)
   2537f:	00 00 
   25381:	48 8d 44 24 08       	lea    0x8(%rsp),%rax
   25386:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
   2538b:	48 c7 44 24 60 03 00 	movq   $0x3,0x60(%rsp)
   25392:	00 00 
   25394:	48 8d 54 24 38       	lea    0x38(%rsp),%rdx
   25399:	e8 92 36 fe ff       	callq  8a30 <_ZN4core3fmt5write17h0db54a985afb558eE>
   2539e:	48 83 c4 68          	add    $0x68,%rsp
   253a2:	c3                   	retq   
   253a3:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   253aa:	00 00 00 
   253ad:	0f 1f 00             	nopl   (%rax)

00000000000253b0 <_ZN91_$LT$std..sys_common..backtrace.._print..DisplayBacktrace$u20$as$u20$core..fmt..Display$GT$3fmt17h228ad95b0f9e829eE>:
   253b0:	55                   	push   %rbp
   253b1:	41 57                	push   %r15
   253b3:	41 56                	push   %r14
   253b5:	41 55                	push   %r13
   253b7:	41 54                	push   %r12
   253b9:	53                   	push   %rbx
   253ba:	48 81 ec a8 00 00 00 	sub    $0xa8,%rsp
   253c1:	48 89 f5             	mov    %rsi,%rbp
   253c4:	44 8a 37             	mov    (%rdi),%r14b
   253c7:	44 88 74 24 0e       	mov    %r14b,0xe(%rsp)
   253cc:	bb 00 02 00 00       	mov    $0x200,%ebx
   253d1:	bf 00 02 00 00       	mov    $0x200,%edi
   253d6:	be 01 00 00 00       	mov    $0x1,%esi
   253db:	e8 e0 ff fd ff       	callq  53c0 <__rust_alloc>
   253e0:	48 85 c0             	test   %rax,%rax
   253e3:	0f 84 7b 03 00 00    	je     25764 <_ZN91_$LT$std..sys_common..backtrace.._print..DisplayBacktrace$u20$as$u20$core..fmt..Display$GT$3fmt17h228ad95b0f9e829eE+0x3b4>
   253e9:	49 89 c7             	mov    %rax,%r15
   253ec:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   253f1:	66 48 0f 6e c3       	movq   %rbx,%xmm0
   253f6:	f3 0f 7f 44 24 18    	movdqu %xmm0,0x18(%rsp)
   253fc:	be 00 02 00 00       	mov    $0x200,%esi
   25401:	48 89 c7             	mov    %rax,%rdi
   25404:	ff 15 56 2a 22 00    	callq  *0x222a56(%rip)        # 247e60 <getcwd@GLIBC_2.2.5>
   2540a:	48 85 c0             	test   %rax,%rax
   2540d:	74 64                	je     25473 <_ZN91_$LT$std..sys_common..backtrace.._print..DisplayBacktrace$u20$as$u20$core..fmt..Display$GT$3fmt17h228ad95b0f9e829eE+0xc3>
   2540f:	4c 89 ff             	mov    %r15,%rdi
   25412:	ff 15 00 2a 22 00    	callq  *0x222a00(%rip)        # 247e18 <strlen@GLIBC_2.2.5>
   25418:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
   2541c:	0f 84 0d 03 00 00    	je     2572f <_ZN91_$LT$std..sys_common..backtrace.._print..DisplayBacktrace$u20$as$u20$core..fmt..Display$GT$3fmt17h228ad95b0f9e829eE+0x37f>
   25422:	49 89 c4             	mov    %rax,%r12
   25425:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   2542a:	48 39 c3             	cmp    %rax,%rbx
   2542d:	0f 84 40 01 00 00    	je     25573 <_ZN91_$LT$std..sys_common..backtrace.._print..DisplayBacktrace$u20$as$u20$core..fmt..Display$GT$3fmt17h228ad95b0f9e829eE+0x1c3>
   25433:	0f 82 3c 03 00 00    	jb     25775 <_ZN91_$LT$std..sys_common..backtrace.._print..DisplayBacktrace$u20$as$u20$core..fmt..Display$GT$3fmt17h228ad95b0f9e829eE+0x3c5>
   25439:	4d 85 e4             	test   %r12,%r12
   2543c:	0f 84 0f 01 00 00    	je     25551 <_ZN91_$LT$std..sys_common..backtrace.._print..DisplayBacktrace$u20$as$u20$core..fmt..Display$GT$3fmt17h228ad95b0f9e829eE+0x1a1>
   25442:	ba 01 00 00 00       	mov    $0x1,%edx
   25447:	4c 89 ff             	mov    %r15,%rdi
   2544a:	48 89 de             	mov    %rbx,%rsi
   2544d:	4c 89 e1             	mov    %r12,%rcx
   25450:	e8 cb ff fd ff       	callq  5420 <__rust_realloc>
   25455:	49 89 c5             	mov    %rax,%r13
   25458:	4c 89 e3             	mov    %r12,%rbx
   2545b:	48 85 c0             	test   %rax,%rax
   2545e:	0f 85 02 01 00 00    	jne    25566 <_ZN91_$LT$std..sys_common..backtrace.._print..DisplayBacktrace$u20$as$u20$core..fmt..Display$GT$3fmt17h228ad95b0f9e829eE+0x1b6>
   25464:	be 01 00 00 00       	mov    $0x1,%esi
   25469:	4c 89 e7             	mov    %r12,%rdi
   2546c:	e8 4f 00 fe ff       	callq  54c0 <_ZN5alloc5alloc18handle_alloc_error17hf7bb8682f6c8b1d7E>
   25471:	0f 0b                	ud2    
   25473:	ff 15 27 29 22 00    	callq  *0x222927(%rip)        # 247da0 <__errno_location@GLIBC_2.2.5>
   25479:	83 38 22             	cmpl   $0x22,(%rax)
   2547c:	0f 85 ab 00 00 00    	jne    2552d <_ZN91_$LT$std..sys_common..backtrace.._print..DisplayBacktrace$u20$as$u20$core..fmt..Display$GT$3fmt17h228ad95b0f9e829eE+0x17d>
   25482:	48 89 6c 24 40       	mov    %rbp,0x40(%rsp)
   25487:	bb 00 02 00 00       	mov    $0x200,%ebx
   2548c:	48 8b 2d cd 29 22 00 	mov    0x2229cd(%rip),%rbp        # 247e60 <getcwd@GLIBC_2.2.5>
   25493:	4c 8b 2d 06 29 22 00 	mov    0x222906(%rip),%r13        # 247da0 <__errno_location@GLIBC_2.2.5>
   2549a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   254a0:	49 89 dc             	mov    %rbx,%r12
   254a3:	48 ff c3             	inc    %rbx
   254a6:	0f 84 93 02 00 00    	je     2573f <_ZN91_$LT$std..sys_common..backtrace.._print..DisplayBacktrace$u20$as$u20$core..fmt..Display$GT$3fmt17h228ad95b0f9e829eE+0x38f>
   254ac:	4b 8d 04 24          	lea    (%r12,%r12,1),%rax
   254b0:	48 39 d8             	cmp    %rbx,%rax
   254b3:	48 0f 47 d8          	cmova  %rax,%rbx
   254b7:	4d 85 e4             	test   %r12,%r12
   254ba:	74 24                	je     254e0 <_ZN91_$LT$std..sys_common..backtrace.._print..DisplayBacktrace$u20$as$u20$core..fmt..Display$GT$3fmt17h228ad95b0f9e829eE+0x130>
   254bc:	ba 01 00 00 00       	mov    $0x1,%edx
   254c1:	4c 89 ff             	mov    %r15,%rdi
   254c4:	4c 89 e6             	mov    %r12,%rsi
   254c7:	48 89 d9             	mov    %rbx,%rcx
   254ca:	e8 51 ff fd ff       	callq  5420 <__rust_realloc>
   254cf:	49 89 c7             	mov    %rax,%r15
   254d2:	48 85 c0             	test   %rax,%rax
   254d5:	75 22                	jne    254f9 <_ZN91_$LT$std..sys_common..backtrace.._print..DisplayBacktrace$u20$as$u20$core..fmt..Display$GT$3fmt17h228ad95b0f9e829eE+0x149>
   254d7:	e9 79 02 00 00       	jmpq   25755 <_ZN91_$LT$std..sys_common..backtrace.._print..DisplayBacktrace$u20$as$u20$core..fmt..Display$GT$3fmt17h228ad95b0f9e829eE+0x3a5>
   254dc:	0f 1f 40 00          	nopl   0x0(%rax)
   254e0:	be 01 00 00 00       	mov    $0x1,%esi
   254e5:	48 89 df             	mov    %rbx,%rdi
   254e8:	e8 d3 fe fd ff       	callq  53c0 <__rust_alloc>
   254ed:	49 89 c7             	mov    %rax,%r15
   254f0:	48 85 c0             	test   %rax,%rax
   254f3:	0f 84 5c 02 00 00    	je     25755 <_ZN91_$LT$std..sys_common..backtrace.._print..DisplayBacktrace$u20$as$u20$core..fmt..Display$GT$3fmt17h228ad95b0f9e829eE+0x3a5>
   254f9:	4c 89 ff             	mov    %r15,%rdi
   254fc:	48 89 de             	mov    %rbx,%rsi
   254ff:	ff d5                	callq  *%rbp
   25501:	48 85 c0             	test   %rax,%rax
   25504:	0f 85 fe 01 00 00    	jne    25708 <_ZN91_$LT$std..sys_common..backtrace.._print..DisplayBacktrace$u20$as$u20$core..fmt..Display$GT$3fmt17h228ad95b0f9e829eE+0x358>
   2550a:	41 ff d5             	callq  *%r13
   2550d:	83 38 22             	cmpl   $0x22,(%rax)
   25510:	74 8e                	je     254a0 <_ZN91_$LT$std..sys_common..backtrace.._print..DisplayBacktrace$u20$as$u20$core..fmt..Display$GT$3fmt17h228ad95b0f9e829eE+0xf0>
   25512:	4c 89 64 24 20       	mov    %r12,0x20(%rsp)
   25517:	4c 89 7c 24 10       	mov    %r15,0x10(%rsp)
   2551c:	48 89 5c 24 18       	mov    %rbx,0x18(%rsp)
   25521:	48 85 db             	test   %rbx,%rbx
   25524:	48 8b 6c 24 40       	mov    0x40(%rsp),%rbp
   25529:	75 19                	jne    25544 <_ZN91_$LT$std..sys_common..backtrace.._print..DisplayBacktrace$u20$as$u20$core..fmt..Display$GT$3fmt17h228ad95b0f9e829eE+0x194>
   2552b:	eb 1f                	jmp    2554c <_ZN91_$LT$std..sys_common..backtrace.._print..DisplayBacktrace$u20$as$u20$core..fmt..Display$GT$3fmt17h228ad95b0f9e829eE+0x19c>
   2552d:	48 c7 44 24 20 00 00 	movq   $0x0,0x20(%rsp)
   25534:	00 00 
   25536:	4c 89 7c 24 10       	mov    %r15,0x10(%rsp)
   2553b:	48 c7 44 24 18 00 02 	movq   $0x200,0x18(%rsp)
   25542:	00 00 
   25544:	4c 89 ff             	mov    %r15,%rdi
   25547:	e8 c4 fe fd ff       	callq  5410 <__rust_dealloc>
   2554c:	45 31 ff             	xor    %r15d,%r15d
   2554f:	eb 22                	jmp    25573 <_ZN91_$LT$std..sys_common..backtrace.._print..DisplayBacktrace$u20$as$u20$core..fmt..Display$GT$3fmt17h228ad95b0f9e829eE+0x1c3>
   25551:	41 bd 01 00 00 00    	mov    $0x1,%r13d
   25557:	48 85 db             	test   %rbx,%rbx
   2555a:	74 08                	je     25564 <_ZN91_$LT$std..sys_common..backtrace.._print..DisplayBacktrace$u20$as$u20$core..fmt..Display$GT$3fmt17h228ad95b0f9e829eE+0x1b4>
   2555c:	4c 89 ff             	mov    %r15,%rdi
   2555f:	e8 ac fe fd ff       	callq  5410 <__rust_dealloc>
   25564:	31 db                	xor    %ebx,%ebx
   25566:	4c 89 6c 24 10       	mov    %r13,0x10(%rsp)
   2556b:	48 89 5c 24 18       	mov    %rbx,0x18(%rsp)
   25570:	4d 89 ef             	mov    %r13,%r15
   25573:	44 88 74 24 60       	mov    %r14b,0x60(%rsp)
   25578:	4c 89 7c 24 48       	mov    %r15,0x48(%rsp)
   2557d:	48 89 5c 24 50       	mov    %rbx,0x50(%rsp)
   25582:	4c 89 64 24 58       	mov    %r12,0x58(%rsp)
   25587:	48 8b 7d 20          	mov    0x20(%rbp),%rdi
   2558b:	48 8b 75 28          	mov    0x28(%rbp),%rsi
   2558f:	48 8d 05 2a 1c 22 00 	lea    0x221c2a(%rip),%rax        # 2471c0 <__init_array_end+0x11b0>
   25596:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   2559b:	48 c7 44 24 18 01 00 	movq   $0x1,0x18(%rsp)
   255a2:	00 00 
   255a4:	48 c7 44 24 20 00 00 	movq   $0x0,0x20(%rsp)
   255ab:	00 00 
   255ad:	4c 8d 25 84 7e 01 00 	lea    0x17e84(%rip),%r12        # 3d438 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0xad8>
   255b4:	4c 89 64 24 30       	mov    %r12,0x30(%rsp)
   255b9:	48 c7 44 24 38 00 00 	movq   $0x0,0x38(%rsp)
   255c0:	00 00 
   255c2:	48 8d 5c 24 10       	lea    0x10(%rsp),%rbx
   255c7:	48 89 da             	mov    %rbx,%rdx
   255ca:	e8 61 34 fe ff       	callq  8a30 <_ZN4core3fmt5write17h0db54a985afb558eE>
   255cf:	84 c0                	test   %al,%al
   255d1:	0f 85 a0 00 00 00    	jne    25677 <_ZN91_$LT$std..sys_common..backtrace.._print..DisplayBacktrace$u20$as$u20$core..fmt..Display$GT$3fmt17h228ad95b0f9e829eE+0x2c7>
   255d7:	48 89 ac 24 80 00 00 	mov    %rbp,0x80(%rsp)
   255de:	00 
   255df:	48 c7 84 24 88 00 00 	movq   $0x0,0x88(%rsp)
   255e6:	00 00 00 00 00 
   255eb:	44 88 b4 24 a0 00 00 	mov    %r14b,0xa0(%rsp)
   255f2:	00 
   255f3:	48 8d 44 24 48       	lea    0x48(%rsp),%rax
   255f8:	48 89 84 24 90 00 00 	mov    %rax,0x90(%rsp)
   255ff:	00 
   25600:	48 8d 05 c9 1b 22 00 	lea    0x221bc9(%rip),%rax        # 2471d0 <__init_array_end+0x11c0>
   25607:	48 89 84 24 98 00 00 	mov    %rax,0x98(%rsp)
   2560e:	00 
   2560f:	48 c7 44 24 68 00 00 	movq   $0x0,0x68(%rsp)
   25616:	00 00 
   25618:	c6 44 24 0f 00       	movb   $0x0,0xf(%rsp)
   2561d:	48 8d 44 24 0e       	lea    0xe(%rsp),%rax
   25622:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   25627:	48 8d 44 24 68       	lea    0x68(%rsp),%rax
   2562c:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   25631:	48 8d 84 24 80 00 00 	lea    0x80(%rsp),%rax
   25638:	00 
   25639:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   2563e:	48 8d 44 24 0f       	lea    0xf(%rsp),%rax
   25643:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   25648:	48 89 5c 24 70       	mov    %rbx,0x70(%rsp)
   2564d:	48 8d 05 a4 1b 22 00 	lea    0x221ba4(%rip),%rax        # 2471f8 <__init_array_end+0x11e8>
   25654:	48 89 44 24 78       	mov    %rax,0x78(%rsp)
   25659:	48 8d 3d 90 1b fe ff 	lea    -0x1e470(%rip),%rdi        # 71f0 <_ZN9backtrace9backtrace9libunwind5trace8trace_fn17hd9e9e3922687a990E>
   25660:	48 8d 74 24 70       	lea    0x70(%rsp),%rsi
   25665:	ff 15 2d 27 22 00    	callq  *0x22272d(%rip)        # 247d98 <_Unwind_Backtrace@GCC_3.3>
   2566b:	80 7c 24 0f 00       	cmpb   $0x0,0xf(%rsp)
   25670:	74 30                	je     256a2 <_ZN91_$LT$std..sys_common..backtrace.._print..DisplayBacktrace$u20$as$u20$core..fmt..Display$GT$3fmt17h228ad95b0f9e829eE+0x2f2>
   25672:	4c 8b 7c 24 48       	mov    0x48(%rsp),%r15
   25677:	b3 01                	mov    $0x1,%bl
   25679:	4d 85 ff             	test   %r15,%r15
   2567c:	74 10                	je     2568e <_ZN91_$LT$std..sys_common..backtrace.._print..DisplayBacktrace$u20$as$u20$core..fmt..Display$GT$3fmt17h228ad95b0f9e829eE+0x2de>
   2567e:	48 83 7c 24 50 00    	cmpq   $0x0,0x50(%rsp)
   25684:	74 08                	je     2568e <_ZN91_$LT$std..sys_common..backtrace.._print..DisplayBacktrace$u20$as$u20$core..fmt..Display$GT$3fmt17h228ad95b0f9e829eE+0x2de>
   25686:	4c 89 ff             	mov    %r15,%rdi
   25689:	e8 82 fd fd ff       	callq  5410 <__rust_dealloc>
   2568e:	89 d8                	mov    %ebx,%eax
   25690:	48 81 c4 a8 00 00 00 	add    $0xa8,%rsp
   25697:	5b                   	pop    %rbx
   25698:	41 5c                	pop    %r12
   2569a:	41 5d                	pop    %r13
   2569c:	41 5e                	pop    %r14
   2569e:	41 5f                	pop    %r15
   256a0:	5d                   	pop    %rbp
   256a1:	c3                   	retq   
   256a2:	80 7c 24 0e 00       	cmpb   $0x0,0xe(%rsp)
   256a7:	75 42                	jne    256eb <_ZN91_$LT$std..sys_common..backtrace.._print..DisplayBacktrace$u20$as$u20$core..fmt..Display$GT$3fmt17h228ad95b0f9e829eE+0x33b>
   256a9:	48 8b 7d 20          	mov    0x20(%rbp),%rdi
   256ad:	48 8b 75 28          	mov    0x28(%rbp),%rsi
   256b1:	48 8d 05 68 1b 22 00 	lea    0x221b68(%rip),%rax        # 247220 <__init_array_end+0x1210>
   256b8:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   256bd:	48 c7 44 24 18 01 00 	movq   $0x1,0x18(%rsp)
   256c4:	00 00 
   256c6:	48 c7 44 24 20 00 00 	movq   $0x0,0x20(%rsp)
   256cd:	00 00 
   256cf:	4c 89 64 24 30       	mov    %r12,0x30(%rsp)
   256d4:	48 c7 44 24 38 00 00 	movq   $0x0,0x38(%rsp)
   256db:	00 00 
   256dd:	48 8d 54 24 10       	lea    0x10(%rsp),%rdx
   256e2:	e8 49 33 fe ff       	callq  8a30 <_ZN4core3fmt5write17h0db54a985afb558eE>
   256e7:	84 c0                	test   %al,%al
   256e9:	75 87                	jne    25672 <_ZN91_$LT$std..sys_common..backtrace.._print..DisplayBacktrace$u20$as$u20$core..fmt..Display$GT$3fmt17h228ad95b0f9e829eE+0x2c2>
   256eb:	48 8b 7c 24 48       	mov    0x48(%rsp),%rdi
   256f0:	31 db                	xor    %ebx,%ebx
   256f2:	48 85 ff             	test   %rdi,%rdi
   256f5:	74 97                	je     2568e <_ZN91_$LT$std..sys_common..backtrace.._print..DisplayBacktrace$u20$as$u20$core..fmt..Display$GT$3fmt17h228ad95b0f9e829eE+0x2de>
   256f7:	48 83 7c 24 50 00    	cmpq   $0x0,0x50(%rsp)
   256fd:	74 8f                	je     2568e <_ZN91_$LT$std..sys_common..backtrace.._print..DisplayBacktrace$u20$as$u20$core..fmt..Display$GT$3fmt17h228ad95b0f9e829eE+0x2de>
   256ff:	e8 0c fd fd ff       	callq  5410 <__rust_dealloc>
   25704:	31 db                	xor    %ebx,%ebx
   25706:	eb 86                	jmp    2568e <_ZN91_$LT$std..sys_common..backtrace.._print..DisplayBacktrace$u20$as$u20$core..fmt..Display$GT$3fmt17h228ad95b0f9e829eE+0x2de>
   25708:	4c 89 64 24 20       	mov    %r12,0x20(%rsp)
   2570d:	4c 89 7c 24 10       	mov    %r15,0x10(%rsp)
   25712:	48 89 5c 24 18       	mov    %rbx,0x18(%rsp)
   25717:	48 8b 6c 24 40       	mov    0x40(%rsp),%rbp
   2571c:	4c 89 ff             	mov    %r15,%rdi
   2571f:	ff 15 f3 26 22 00    	callq  *0x2226f3(%rip)        # 247e18 <strlen@GLIBC_2.2.5>
   25725:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
   25729:	0f 85 f3 fc ff ff    	jne    25422 <_ZN91_$LT$std..sys_common..backtrace.._print..DisplayBacktrace$u20$as$u20$core..fmt..Display$GT$3fmt17h228ad95b0f9e829eE+0x72>
   2572f:	48 c7 c7 ff ff ff ff 	mov    $0xffffffffffffffff,%rdi
   25736:	31 f6                	xor    %esi,%esi
   25738:	e8 93 24 fe ff       	callq  7bd0 <_ZN4core5slice20slice_index_len_fail17h52736412c1ce1871E>
   2573d:	eb 14                	jmp    25753 <_ZN91_$LT$std..sys_common..backtrace.._print..DisplayBacktrace$u20$as$u20$core..fmt..Display$GT$3fmt17h228ad95b0f9e829eE+0x3a3>
   2573f:	4c 89 64 24 20       	mov    %r12,0x20(%rsp)
   25744:	4c 89 7c 24 10       	mov    %r15,0x10(%rsp)
   25749:	4c 89 64 24 18       	mov    %r12,0x18(%rsp)
   2574e:	e8 7d fd fd ff       	callq  54d0 <_ZN5alloc7raw_vec17capacity_overflow17h9be7d3ce681ac1a6E>
   25753:	0f 0b                	ud2    
   25755:	be 01 00 00 00       	mov    $0x1,%esi
   2575a:	48 89 df             	mov    %rbx,%rdi
   2575d:	e8 5e fd fd ff       	callq  54c0 <_ZN5alloc5alloc18handle_alloc_error17hf7bb8682f6c8b1d7E>
   25762:	0f 0b                	ud2    
   25764:	bf 00 02 00 00       	mov    $0x200,%edi
   25769:	be 01 00 00 00       	mov    $0x1,%esi
   2576e:	e8 4d fd fd ff       	callq  54c0 <_ZN5alloc5alloc18handle_alloc_error17hf7bb8682f6c8b1d7E>
   25773:	0f 0b                	ud2    
   25775:	48 8d 3d f0 7e 01 00 	lea    0x17ef0(%rip),%rdi        # 3d66c <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0xd0c>
   2577c:	48 8d 15 55 1b 22 00 	lea    0x221b55(%rip),%rdx        # 2472d8 <__init_array_end+0x12c8>
   25783:	be 24 00 00 00       	mov    $0x24,%esi
   25788:	e8 23 1c fe ff       	callq  73b0 <_ZN4core9panicking5panic17h6861470adfbddef8E>
   2578d:	eb c4                	jmp    25753 <_ZN91_$LT$std..sys_common..backtrace.._print..DisplayBacktrace$u20$as$u20$core..fmt..Display$GT$3fmt17h228ad95b0f9e829eE+0x3a3>
   2578f:	48 89 c3             	mov    %rax,%rbx
   25792:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
   25797:	e8 14 f7 ff ff       	callq  24eb0 <_ZN4core3ptr13drop_in_place17h5563ae43ca5ac214E>
   2579c:	48 89 df             	mov    %rbx,%rdi
   2579f:	e8 fc e8 fd ff       	callq  40a0 <_Unwind_Resume@plt>
   257a4:	0f 0b                	ud2    
   257a6:	48 89 c3             	mov    %rax,%rbx
   257a9:	48 8d 7c 24 48       	lea    0x48(%rsp),%rdi
   257ae:	e8 1d 00 00 00       	callq  257d0 <_ZN4core3ptr13drop_in_place17hc4ea61dcc7b1eda9E>
   257b3:	48 89 df             	mov    %rbx,%rdi
   257b6:	e8 e5 e8 fd ff       	callq  40a0 <_Unwind_Resume@plt>
   257bb:	0f 0b                	ud2    
   257bd:	0f 1f 00             	nopl   (%rax)

00000000000257c0 <_ZN4core3ptr13drop_in_place17h82668df6929d5fb6E>:
   257c0:	48 8d 3d 71 29 22 00 	lea    0x222971(%rip),%rdi        # 248138 <_ZN3std10sys_common9backtrace4lock4LOCK17h66f9e39c481363abE>
   257c7:	ff 25 2b 27 22 00    	jmpq   *0x22272b(%rip)        # 247ef8 <pthread_mutex_unlock@GLIBC_2.2.5>
   257cd:	0f 1f 00             	nopl   (%rax)

00000000000257d0 <_ZN4core3ptr13drop_in_place17hc4ea61dcc7b1eda9E>:
   257d0:	48 89 f8             	mov    %rdi,%rax
   257d3:	48 8b 3f             	mov    (%rdi),%rdi
   257d6:	48 85 ff             	test   %rdi,%rdi
   257d9:	74 0c                	je     257e7 <_ZN4core3ptr13drop_in_place17hc4ea61dcc7b1eda9E+0x17>
   257db:	48 83 78 08 00       	cmpq   $0x0,0x8(%rax)
   257e0:	74 05                	je     257e7 <_ZN4core3ptr13drop_in_place17hc4ea61dcc7b1eda9E+0x17>
   257e2:	e9 29 fc fd ff       	jmpq   5410 <__rust_dealloc>
   257e7:	c3                   	retq   
   257e8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   257ef:	00 

00000000000257f0 <_ZN3std10sys_common9backtrace10_print_fmt28_$u7b$$u7b$closure$u7d$$u7d$17h130807a5a075e2f9E>:
   257f0:	41 57                	push   %r15
   257f2:	41 56                	push   %r14
   257f4:	53                   	push   %rbx
   257f5:	48 81 ec f0 00 00 00 	sub    $0xf0,%rsp
   257fc:	49 89 f7             	mov    %rsi,%r15
   257ff:	49 89 fe             	mov    %rdi,%r14
   25802:	48 89 b4 24 88 00 00 	mov    %rsi,0x88(%rsp)
   25809:	00 
   2580a:	48 8b 07             	mov    (%rdi),%rax
   2580d:	80 38 00             	cmpb   $0x0,(%rax)
   25810:	75 0e                	jne    25820 <_ZN3std10sys_common9backtrace10_print_fmt28_$u7b$$u7b$closure$u7d$$u7d$17h130807a5a075e2f9E+0x30>
   25812:	49 8b 4e 08          	mov    0x8(%r14),%rcx
   25816:	48 83 39 64          	cmpq   $0x64,(%rcx)
   2581a:	0f 87 2b 01 00 00    	ja     2594b <_ZN3std10sys_common9backtrace10_print_fmt28_$u7b$$u7b$closure$u7d$$u7d$17h130807a5a075e2f9E+0x15b>
   25820:	c6 44 24 0d 00       	movb   $0x0,0xd(%rsp)
   25825:	c6 44 24 0e 00       	movb   $0x0,0xe(%rsp)
   2582a:	49 8b 4e 10          	mov    0x10(%r14),%rcx
   2582e:	49 8b 56 18          	mov    0x18(%r14),%rdx
   25832:	48 8d 74 24 0d       	lea    0xd(%rsp),%rsi
   25837:	48 89 b4 24 a0 00 00 	mov    %rsi,0xa0(%rsp)
   2583e:	00 
   2583f:	48 89 84 24 a8 00 00 	mov    %rax,0xa8(%rsp)
   25846:	00 
   25847:	48 8d 44 24 0e       	lea    0xe(%rsp),%rax
   2584c:	48 89 84 24 b0 00 00 	mov    %rax,0xb0(%rsp)
   25853:	00 
   25854:	48 89 8c 24 b8 00 00 	mov    %rcx,0xb8(%rsp)
   2585b:	00 
   2585c:	48 8d 84 24 88 00 00 	lea    0x88(%rsp),%rax
   25863:	00 
   25864:	48 89 84 24 c0 00 00 	mov    %rax,0xc0(%rsp)
   2586b:	00 
   2586c:	48 89 94 24 c8 00 00 	mov    %rdx,0xc8(%rsp)
   25873:	00 
   25874:	48 8d 84 24 a0 00 00 	lea    0xa0(%rsp),%rax
   2587b:	00 
   2587c:	48 89 84 24 90 00 00 	mov    %rax,0x90(%rsp)
   25883:	00 
   25884:	48 8d 05 a5 19 22 00 	lea    0x2219a5(%rip),%rax        # 247230 <__init_array_end+0x1220>
   2588b:	48 89 84 24 98 00 00 	mov    %rax,0x98(%rsp)
   25892:	00 
   25893:	49 83 3f 01          	cmpq   $0x1,(%r15)
   25897:	75 06                	jne    2589f <_ZN3std10sys_common9backtrace10_print_fmt28_$u7b$$u7b$closure$u7d$$u7d$17h130807a5a075e2f9E+0xaf>
   25899:	49 8b 47 08          	mov    0x8(%r15),%rax
   2589d:	eb 0a                	jmp    258a9 <_ZN3std10sys_common9backtrace10_print_fmt28_$u7b$$u7b$closure$u7d$$u7d$17h130807a5a075e2f9E+0xb9>
   2589f:	49 8b 7f 08          	mov    0x8(%r15),%rdi
   258a3:	ff 15 37 26 22 00    	callq  *0x222637(%rip)        # 247ee0 <_Unwind_GetIP@GCC_3.0>
   258a9:	48 8d 58 ff          	lea    -0x1(%rax),%rbx
   258ad:	48 85 c0             	test   %rax,%rax
   258b0:	48 0f 44 d8          	cmove  %rax,%rbx
   258b4:	48 8b 3d 9d 27 22 00 	mov    0x22279d(%rip),%rdi        # 248058 <_ZN9backtrace9symbolize12libbacktrace10init_state5STATE17hda2ae0499012601eE>
   258bb:	48 85 ff             	test   %rdi,%rdi
   258be:	75 26                	jne    258e6 <_ZN3std10sys_common9backtrace10_print_fmt28_$u7b$$u7b$closure$u7d$$u7d$17h130807a5a075e2f9E+0xf6>
   258c0:	48 8d 15 89 19 fe ff 	lea    -0x1e677(%rip),%rdx        # 7250 <_ZN9backtrace9symbolize12libbacktrace8error_cb17h86374d9caead850cE>
   258c7:	31 ff                	xor    %edi,%edi
   258c9:	31 f6                	xor    %esi,%esi
   258cb:	31 c9                	xor    %ecx,%ecx
   258cd:	ff 15 f5 24 22 00    	callq  *0x2224f5(%rip)        # 247dc8 <_GLOBAL_OFFSET_TABLE_+0xd8>
   258d3:	48 89 c7             	mov    %rax,%rdi
   258d6:	48 89 05 7b 27 22 00 	mov    %rax,0x22277b(%rip)        # 248058 <_ZN9backtrace9symbolize12libbacktrace10init_state5STATE17hda2ae0499012601eE>
   258dd:	48 85 c0             	test   %rax,%rax
   258e0:	0f 84 43 01 00 00    	je     25a29 <_ZN3std10sys_common9backtrace10_print_fmt28_$u7b$$u7b$closure$u7d$$u7d$17h130807a5a075e2f9E+0x239>
   258e6:	c6 44 24 0f 00       	movb   $0x0,0xf(%rsp)
   258eb:	48 8d 44 24 0f       	lea    0xf(%rsp),%rax
   258f0:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   258f5:	48 8d 84 24 90 00 00 	lea    0x90(%rsp),%rax
   258fc:	00 
   258fd:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   25902:	48 8d 44 24 10       	lea    0x10(%rsp),%rax
   25907:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   2590c:	48 8d 05 2d 08 22 00 	lea    0x22082d(%rip),%rax        # 246140 <__init_array_end+0x130>
   25913:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
   25918:	48 89 5c 24 48       	mov    %rbx,0x48(%rsp)
   2591d:	48 8d 15 3c 19 fe ff 	lea    -0x1e6c4(%rip),%rdx        # 7260 <_ZN9backtrace9symbolize12libbacktrace10syminfo_cb17hfad1c2595b5b9bc6E>
   25924:	48 8d 0d 25 19 fe ff 	lea    -0x1e6db(%rip),%rcx        # 7250 <_ZN9backtrace9symbolize12libbacktrace8error_cb17h86374d9caead850cE>
   2592b:	4c 8d 44 24 38       	lea    0x38(%rsp),%r8
   25930:	48 89 de             	mov    %rbx,%rsi
   25933:	ff 15 37 25 22 00    	callq  *0x222537(%rip)        # 247e70 <_GLOBAL_OFFSET_TABLE_+0x180>
   25939:	80 7c 24 0f 00       	cmpb   $0x0,0xf(%rsp)
   2593e:	74 12                	je     25952 <_ZN3std10sys_common9backtrace10_print_fmt28_$u7b$$u7b$closure$u7d$$u7d$17h130807a5a075e2f9E+0x162>
   25940:	80 7c 24 0e 00       	cmpb   $0x0,0xe(%rsp)
   25945:	0f 84 a6 00 00 00    	je     259f1 <_ZN3std10sys_common9backtrace10_print_fmt28_$u7b$$u7b$closure$u7d$$u7d$17h130807a5a075e2f9E+0x201>
   2594b:	31 c0                	xor    %eax,%eax
   2594d:	e9 d3 01 00 00       	jmpq   25b25 <_ZN3std10sys_common9backtrace10_print_fmt28_$u7b$$u7b$closure$u7d$$u7d$17h130807a5a075e2f9E+0x335>
   25952:	49 83 3f 01          	cmpq   $0x1,(%r15)
   25956:	75 06                	jne    2595e <_ZN3std10sys_common9backtrace10_print_fmt28_$u7b$$u7b$closure$u7d$$u7d$17h130807a5a075e2f9E+0x16e>
   25958:	49 8b 47 08          	mov    0x8(%r15),%rax
   2595c:	eb 0a                	jmp    25968 <_ZN3std10sys_common9backtrace10_print_fmt28_$u7b$$u7b$closure$u7d$$u7d$17h130807a5a075e2f9E+0x178>
   2595e:	49 8b 7f 08          	mov    0x8(%r15),%rdi
   25962:	ff 15 78 25 22 00    	callq  *0x222578(%rip)        # 247ee0 <_Unwind_GetIP@GCC_3.0>
   25968:	48 8b 9c 24 90 00 00 	mov    0x90(%rsp),%rbx
   2596f:	00 
   25970:	4c 8b bc 24 98 00 00 	mov    0x98(%rsp),%r15
   25977:	00 
   25978:	0f 57 c0             	xorps  %xmm0,%xmm0
   2597b:	0f 29 44 24 70       	movaps %xmm0,0x70(%rsp)
   25980:	0f 29 44 24 60       	movaps %xmm0,0x60(%rsp)
   25985:	48 85 c0             	test   %rax,%rax
   25988:	74 b6                	je     25940 <_ZN3std10sys_common9backtrace10_print_fmt28_$u7b$$u7b$closure$u7d$$u7d$17h130807a5a075e2f9E+0x150>
   2598a:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
   2598e:	74 b0                	je     25940 <_ZN3std10sys_common9backtrace10_print_fmt28_$u7b$$u7b$closure$u7d$$u7d$17h130807a5a075e2f9E+0x150>
   25990:	48 8d 74 24 60       	lea    0x60(%rsp),%rsi
   25995:	48 89 c7             	mov    %rax,%rdi
   25998:	ff 15 aa 24 22 00    	callq  *0x2224aa(%rip)        # 247e48 <dladdr@GLIBC_2.2.5>
   2599e:	85 c0                	test   %eax,%eax
   259a0:	74 9e                	je     25940 <_ZN3std10sys_common9backtrace10_print_fmt28_$u7b$$u7b$closure$u7d$$u7d$17h130807a5a075e2f9E+0x150>
   259a2:	0f 28 44 24 60       	movaps 0x60(%rsp),%xmm0
   259a7:	0f 28 4c 24 70       	movaps 0x70(%rsp),%xmm1
   259ac:	0f 11 44 24 14       	movups %xmm0,0x14(%rsp)
   259b1:	0f 11 4c 24 24       	movups %xmm1,0x24(%rsp)
   259b6:	c7 44 24 38 02 00 00 	movl   $0x2,0x38(%rsp)
   259bd:	00 
   259be:	0f 10 44 24 10       	movups 0x10(%rsp),%xmm0
   259c3:	0f 11 44 24 3c       	movups %xmm0,0x3c(%rsp)
   259c8:	0f 10 44 24 20       	movups 0x20(%rsp),%xmm0
   259cd:	0f 11 44 24 4c       	movups %xmm0,0x4c(%rsp)
   259d2:	8b 44 24 30          	mov    0x30(%rsp),%eax
   259d6:	89 44 24 5c          	mov    %eax,0x5c(%rsp)
   259da:	48 8d 74 24 38       	lea    0x38(%rsp),%rsi
   259df:	48 89 df             	mov    %rbx,%rdi
   259e2:	41 ff 57 18          	callq  *0x18(%r15)
   259e6:	80 7c 24 0e 00       	cmpb   $0x0,0xe(%rsp)
   259eb:	0f 85 5a ff ff ff    	jne    2594b <_ZN3std10sys_common9backtrace10_print_fmt28_$u7b$$u7b$closure$u7d$$u7d$17h130807a5a075e2f9E+0x15b>
   259f1:	80 7c 24 0d 00       	cmpb   $0x0,0xd(%rsp)
   259f6:	0f 85 17 01 00 00    	jne    25b13 <_ZN3std10sys_common9backtrace10_print_fmt28_$u7b$$u7b$closure$u7d$$u7d$17h130807a5a075e2f9E+0x323>
   259fc:	49 8b 46 10          	mov    0x10(%r14),%rax
   25a00:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   25a05:	48 c7 44 24 18 00 00 	movq   $0x0,0x18(%rsp)
   25a0c:	00 00 
   25a0e:	48 8b 84 24 88 00 00 	mov    0x88(%rsp),%rax
   25a15:	00 
   25a16:	48 83 38 01          	cmpq   $0x1,(%rax)
   25a1a:	0f 85 a7 00 00 00    	jne    25ac7 <_ZN3std10sys_common9backtrace10_print_fmt28_$u7b$$u7b$closure$u7d$$u7d$17h130807a5a075e2f9E+0x2d7>
   25a20:	48 8b 70 08          	mov    0x8(%rax),%rsi
   25a24:	e9 ab 00 00 00       	jmpq   25ad4 <_ZN3std10sys_common9backtrace10_print_fmt28_$u7b$$u7b$closure$u7d$$u7d$17h130807a5a075e2f9E+0x2e4>
   25a29:	49 83 3f 01          	cmpq   $0x1,(%r15)
   25a2d:	0f 85 ff 00 00 00    	jne    25b32 <_ZN3std10sys_common9backtrace10_print_fmt28_$u7b$$u7b$closure$u7d$$u7d$17h130807a5a075e2f9E+0x342>
   25a33:	49 8b 47 08          	mov    0x8(%r15),%rax
   25a37:	0f 57 c0             	xorps  %xmm0,%xmm0
   25a3a:	48 85 c0             	test   %rax,%rax
   25a3d:	0f 84 05 01 00 00    	je     25b48 <_ZN3std10sys_common9backtrace10_print_fmt28_$u7b$$u7b$closure$u7d$$u7d$17h130807a5a075e2f9E+0x358>
   25a43:	0f 29 44 24 70       	movaps %xmm0,0x70(%rsp)
   25a48:	0f 29 44 24 60       	movaps %xmm0,0x60(%rsp)
   25a4d:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
   25a51:	0f 84 e9 fe ff ff    	je     25940 <_ZN3std10sys_common9backtrace10_print_fmt28_$u7b$$u7b$closure$u7d$$u7d$17h130807a5a075e2f9E+0x150>
   25a57:	48 8d 74 24 60       	lea    0x60(%rsp),%rsi
   25a5c:	48 89 c7             	mov    %rax,%rdi
   25a5f:	ff 15 e3 23 22 00    	callq  *0x2223e3(%rip)        # 247e48 <dladdr@GLIBC_2.2.5>
   25a65:	85 c0                	test   %eax,%eax
   25a67:	0f 84 d3 fe ff ff    	je     25940 <_ZN3std10sys_common9backtrace10_print_fmt28_$u7b$$u7b$closure$u7d$$u7d$17h130807a5a075e2f9E+0x150>
   25a6d:	0f 28 44 24 60       	movaps 0x60(%rsp),%xmm0
   25a72:	0f 28 4c 24 70       	movaps 0x70(%rsp),%xmm1
   25a77:	0f 11 44 24 14       	movups %xmm0,0x14(%rsp)
   25a7c:	0f 11 4c 24 24       	movups %xmm1,0x24(%rsp)
   25a81:	c7 44 24 38 02 00 00 	movl   $0x2,0x38(%rsp)
   25a88:	00 
   25a89:	0f 10 44 24 10       	movups 0x10(%rsp),%xmm0
   25a8e:	0f 11 44 24 3c       	movups %xmm0,0x3c(%rsp)
   25a93:	0f 10 44 24 20       	movups 0x20(%rsp),%xmm0
   25a98:	0f 11 44 24 4c       	movups %xmm0,0x4c(%rsp)
   25a9d:	8b 44 24 30          	mov    0x30(%rsp),%eax
   25aa1:	89 44 24 5c          	mov    %eax,0x5c(%rsp)
   25aa5:	48 8d bc 24 a0 00 00 	lea    0xa0(%rsp),%rdi
   25aac:	00 
   25aad:	48 8d 74 24 38       	lea    0x38(%rsp),%rsi
   25ab2:	e8 e9 00 00 00       	callq  25ba0 <_ZN3std10sys_common9backtrace10_print_fmt28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$17h1bc3c048d874664bE>
   25ab7:	80 7c 24 0e 00       	cmpb   $0x0,0xe(%rsp)
   25abc:	0f 85 89 fe ff ff    	jne    2594b <_ZN3std10sys_common9backtrace10_print_fmt28_$u7b$$u7b$closure$u7d$$u7d$17h130807a5a075e2f9E+0x15b>
   25ac2:	e9 2a ff ff ff       	jmpq   259f1 <_ZN3std10sys_common9backtrace10_print_fmt28_$u7b$$u7b$closure$u7d$$u7d$17h130807a5a075e2f9E+0x201>
   25ac7:	48 8b 78 08          	mov    0x8(%rax),%rdi
   25acb:	ff 15 0f 24 22 00    	callq  *0x22240f(%rip)        # 247ee0 <_Unwind_GetIP@GCC_3.0>
   25ad1:	48 89 c6             	mov    %rax,%rsi
   25ad4:	48 c7 84 24 b0 00 00 	movq   $0x4,0xb0(%rsp)
   25adb:	00 04 00 00 00 
   25ae0:	48 c7 44 24 38 02 00 	movq   $0x2,0x38(%rsp)
   25ae7:	00 00 
   25ae9:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
   25aee:	48 8d 94 24 a0 00 00 	lea    0xa0(%rsp),%rdx
   25af5:	00 
   25af6:	48 8d 4c 24 38       	lea    0x38(%rsp),%rcx
   25afb:	45 31 c0             	xor    %r8d,%r8d
   25afe:	e8 0d fd fd ff       	callq  5810 <_ZN9backtrace5print17BacktraceFrameFmt9print_raw17h69930da516f47357E>
   25b03:	49 8b 4e 18          	mov    0x18(%r14),%rcx
   25b07:	88 01                	mov    %al,(%rcx)
   25b09:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   25b0e:	48 83 40 08 01       	addq   $0x1,0x8(%rax)
   25b13:	49 8b 46 08          	mov    0x8(%r14),%rax
   25b17:	48 83 00 01          	addq   $0x1,(%rax)
   25b1b:	49 8b 46 18          	mov    0x18(%r14),%rax
   25b1f:	80 38 00             	cmpb   $0x0,(%rax)
   25b22:	0f 94 c0             	sete   %al
   25b25:	48 81 c4 f0 00 00 00 	add    $0xf0,%rsp
   25b2c:	5b                   	pop    %rbx
   25b2d:	41 5e                	pop    %r14
   25b2f:	41 5f                	pop    %r15
   25b31:	c3                   	retq   
   25b32:	49 8b 7f 08          	mov    0x8(%r15),%rdi
   25b36:	ff 15 a4 23 22 00    	callq  *0x2223a4(%rip)        # 247ee0 <_Unwind_GetIP@GCC_3.0>
   25b3c:	0f 57 c0             	xorps  %xmm0,%xmm0
   25b3f:	48 85 c0             	test   %rax,%rax
   25b42:	0f 85 fb fe ff ff    	jne    25a43 <_ZN3std10sys_common9backtrace10_print_fmt28_$u7b$$u7b$closure$u7d$$u7d$17h130807a5a075e2f9E+0x253>
   25b48:	0f 29 44 24 70       	movaps %xmm0,0x70(%rsp)
   25b4d:	0f 29 44 24 60       	movaps %xmm0,0x60(%rsp)
   25b52:	80 7c 24 0e 00       	cmpb   $0x0,0xe(%rsp)
   25b57:	0f 85 ee fd ff ff    	jne    2594b <_ZN3std10sys_common9backtrace10_print_fmt28_$u7b$$u7b$closure$u7d$$u7d$17h130807a5a075e2f9E+0x15b>
   25b5d:	e9 8f fe ff ff       	jmpq   259f1 <_ZN3std10sys_common9backtrace10_print_fmt28_$u7b$$u7b$closure$u7d$$u7d$17h130807a5a075e2f9E+0x201>
   25b62:	48 89 c3             	mov    %rax,%rbx
   25b65:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
   25b6a:	e8 21 00 00 00       	callq  25b90 <_ZN4core3ptr13drop_in_place17h02bbdb4fc418546cE>
   25b6f:	48 89 df             	mov    %rbx,%rdi
   25b72:	e8 29 e5 fd ff       	callq  40a0 <_Unwind_Resume@plt>
   25b77:	0f 0b                	ud2    
   25b79:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000025b80 <_ZN4core3ops8function6FnOnce40call_once$u7b$$u7b$vtable.shim$u7d$$u7d$17hbc1665a78fda0fddE>:
   25b80:	e9 6b fc ff ff       	jmpq   257f0 <_ZN3std10sys_common9backtrace10_print_fmt28_$u7b$$u7b$closure$u7d$$u7d$17h130807a5a075e2f9E>
   25b85:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   25b8c:	00 00 00 
   25b8f:	90                   	nop

0000000000025b90 <_ZN4core3ptr13drop_in_place17h02bbdb4fc418546cE>:
   25b90:	48 8b 07             	mov    (%rdi),%rax
   25b93:	48 83 40 08 01       	addq   $0x1,0x8(%rax)
   25b98:	c3                   	retq   
   25b99:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000025ba0 <_ZN3std10sys_common9backtrace10_print_fmt28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$17h1bc3c048d874664bE>:
   25ba0:	55                   	push   %rbp
   25ba1:	41 57                	push   %r15
   25ba3:	41 56                	push   %r14
   25ba5:	41 55                	push   %r13
   25ba7:	41 54                	push   %r12
   25ba9:	53                   	push   %rbx
   25baa:	48 81 ec b8 00 00 00 	sub    $0xb8,%rsp
   25bb1:	49 89 f6             	mov    %rsi,%r14
   25bb4:	49 89 ff             	mov    %rdi,%r15
   25bb7:	48 8b 07             	mov    (%rdi),%rax
   25bba:	c6 00 01             	movb   $0x1,(%rax)
   25bbd:	48 8b 47 08          	mov    0x8(%rdi),%rax
   25bc1:	80 38 00             	cmpb   $0x0,(%rax)
   25bc4:	75 1c                	jne    25be2 <_ZN3std10sys_common9backtrace10_print_fmt28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$17h1bc3c048d874664bE+0x42>
   25bc6:	48 8d 7c 24 38       	lea    0x38(%rsp),%rdi
   25bcb:	4c 89 f6             	mov    %r14,%rsi
   25bce:	e8 ed f9 fd ff       	callq  55c0 <_ZN9backtrace9symbolize6Symbol4name17h05b3ddd11e7b9af9E>
   25bd3:	48 8b 44 24 48       	mov    0x48(%rsp),%rax
   25bd8:	48 83 f8 04          	cmp    $0x4,%rax
   25bdc:	0f 85 ba 00 00 00    	jne    25c9c <_ZN3std10sys_common9backtrace10_print_fmt28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$17h1bc3c048d874664bE+0xfc>
   25be2:	49 8b 47 18          	mov    0x18(%r15),%rax
   25be6:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   25beb:	48 c7 44 24 28 00 00 	movq   $0x0,0x28(%rsp)
   25bf2:	00 00 
   25bf4:	49 8b 47 20          	mov    0x20(%r15),%rax
   25bf8:	48 8b 00             	mov    (%rax),%rax
   25bfb:	48 83 38 01          	cmpq   $0x1,(%rax)
   25bff:	75 06                	jne    25c07 <_ZN3std10sys_common9backtrace10_print_fmt28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$17h1bc3c048d874664bE+0x67>
   25c01:	4c 8b 60 08          	mov    0x8(%rax),%r12
   25c05:	eb 0d                	jmp    25c14 <_ZN3std10sys_common9backtrace10_print_fmt28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$17h1bc3c048d874664bE+0x74>
   25c07:	48 8b 78 08          	mov    0x8(%rax),%rdi
   25c0b:	ff 15 cf 22 22 00    	callq  *0x2222cf(%rip)        # 247ee0 <_Unwind_GetIP@GCC_3.0>
   25c11:	49 89 c4             	mov    %rax,%r12
   25c14:	48 8d 7c 24 38       	lea    0x38(%rsp),%rdi
   25c19:	4c 89 f6             	mov    %r14,%rsi
   25c1c:	e8 9f f9 fd ff       	callq  55c0 <_ZN9backtrace9symbolize6Symbol4name17h05b3ddd11e7b9af9E>
   25c21:	41 8b 2e             	mov    (%r14),%ebp
   25c24:	83 fd 01             	cmp    $0x1,%ebp
   25c27:	75 26                	jne    25c4f <_ZN3std10sys_common9backtrace10_print_fmt28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$17h1bc3c048d874664bE+0xaf>
   25c29:	49 8b 5e 10          	mov    0x10(%r14),%rbx
   25c2d:	48 85 db             	test   %rbx,%rbx
   25c30:	74 1d                	je     25c4f <_ZN3std10sys_common9backtrace10_print_fmt28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$17h1bc3c048d874664bE+0xaf>
   25c32:	48 89 df             	mov    %rbx,%rdi
   25c35:	ff 15 dd 21 22 00    	callq  *0x2221dd(%rip)        # 247e18 <strlen@GLIBC_2.2.5>
   25c3b:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
   25c42:	00 
   25c43:	48 89 5c 24 08       	mov    %rbx,0x8(%rsp)
   25c48:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   25c4d:	eb 08                	jmp    25c57 <_ZN3std10sys_common9backtrace10_print_fmt28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$17h1bc3c048d874664bE+0xb7>
   25c4f:	48 c7 04 24 02 00 00 	movq   $0x2,(%rsp)
   25c56:	00 
   25c57:	45 31 c0             	xor    %r8d,%r8d
   25c5a:	83 fd 01             	cmp    $0x1,%ebp
   25c5d:	41 0f 94 c0          	sete   %r8b
   25c61:	45 8b 4e 04          	mov    0x4(%r14),%r9d
   25c65:	48 8d 7c 24 20       	lea    0x20(%rsp),%rdi
   25c6a:	48 8d 54 24 38       	lea    0x38(%rsp),%rdx
   25c6f:	48 89 e1             	mov    %rsp,%rcx
   25c72:	4c 89 e6             	mov    %r12,%rsi
   25c75:	e8 96 fb fd ff       	callq  5810 <_ZN9backtrace5print17BacktraceFrameFmt9print_raw17h69930da516f47357E>
   25c7a:	49 8b 4f 28          	mov    0x28(%r15),%rcx
   25c7e:	88 01                	mov    %al,(%rcx)
   25c80:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
   25c85:	48 83 40 08 01       	addq   $0x1,0x8(%rax)
   25c8a:	48 81 c4 b8 00 00 00 	add    $0xb8,%rsp
   25c91:	5b                   	pop    %rbx
   25c92:	41 5c                	pop    %r12
   25c94:	41 5d                	pop    %r13
   25c96:	41 5e                	pop    %r14
   25c98:	41 5f                	pop    %r15
   25c9a:	5d                   	pop    %rbp
   25c9b:	c3                   	retq   
   25c9c:	48 83 f8 03          	cmp    $0x3,%rax
   25ca0:	75 32                	jne    25cd4 <_ZN3std10sys_common9backtrace10_print_fmt28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$17h1bc3c048d874664bE+0x134>
   25ca2:	48 8b 74 24 38       	mov    0x38(%rsp),%rsi
   25ca7:	48 8b 54 24 40       	mov    0x40(%rsp),%rdx
   25cac:	48 89 e7             	mov    %rsp,%rdi
   25caf:	e8 ac 5a fe ff       	callq  b760 <_ZN4core3str9from_utf817ha5f1d279f7594d61E>
   25cb4:	48 83 3c 24 01       	cmpq   $0x1,(%rsp)
   25cb9:	0f 84 23 ff ff ff    	je     25be2 <_ZN3std10sys_common9backtrace10_print_fmt28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$17h1bc3c048d874664bE+0x42>
   25cbf:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
   25cc4:	48 85 f6             	test   %rsi,%rsi
   25cc7:	0f 84 15 ff ff ff    	je     25be2 <_ZN3std10sys_common9backtrace10_print_fmt28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$17h1bc3c048d874664bE+0x42>
   25ccd:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
   25cd2:	eb 0a                	jmp    25cde <_ZN3std10sys_common9backtrace10_print_fmt28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$17h1bc3c048d874664bE+0x13e>
   25cd4:	48 8b 74 24 68       	mov    0x68(%rsp),%rsi
   25cd9:	48 8b 54 24 70       	mov    0x70(%rsp),%rdx
   25cde:	48 8d 0d ca 78 01 00 	lea    0x178ca(%rip),%rcx        # 3d5af <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0xc4f>
   25ce5:	48 8d 7c 24 38       	lea    0x38(%rsp),%rdi
   25cea:	41 b8 1c 00 00 00    	mov    $0x1c,%r8d
   25cf0:	e8 cb 4d fe ff       	callq  aac0 <_ZN4core3str7pattern11StrSearcher3new17h5e55b3d26d3aed5eE>
   25cf5:	48 83 7c 24 58 01    	cmpq   $0x1,0x58(%rsp)
   25cfb:	0f 85 48 01 00 00    	jne    25e49 <_ZN3std10sys_common9backtrace10_print_fmt28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$17h1bc3c048d874664bE+0x2a9>
   25d01:	4c 8b 94 24 90 00 00 	mov    0x90(%rsp),%r10
   25d08:	00 
   25d09:	48 8b 44 24 50       	mov    0x50(%rsp),%rax
   25d0e:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
   25d12:	48 89 4c 24 30       	mov    %rcx,0x30(%rsp)
   25d17:	4c 8b 44 24 38       	mov    0x38(%rsp),%r8
   25d1c:	48 8b 54 24 40       	mov    0x40(%rsp),%rdx
   25d21:	4c 8b 4c 24 48       	mov    0x48(%rsp),%r9
   25d26:	4c 8b 9c 24 80 00 00 	mov    0x80(%rsp),%r11
   25d2d:	00 
   25d2e:	4a 8d 0c 18          	lea    (%rax,%r11,1),%rcx
   25d32:	48 83 c1 ff          	add    $0xffffffffffffffff,%rcx
   25d36:	49 83 fa ff          	cmp    $0xffffffffffffffff,%r10
   25d3a:	0f 84 6a 02 00 00    	je     25faa <_ZN3std10sys_common9backtrace10_print_fmt28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$17h1bc3c048d874664bE+0x40a>
   25d40:	48 39 d1             	cmp    %rdx,%rcx
   25d43:	0f 83 99 fe ff ff    	jae    25be2 <_ZN3std10sys_common9backtrace10_print_fmt28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$17h1bc3c048d874664bE+0x42>
   25d49:	48 8b 6c 24 78       	mov    0x78(%rsp),%rbp
   25d4e:	4c 8b 64 24 60       	mov    0x60(%rsp),%r12
   25d53:	48 8b 74 24 70       	mov    0x70(%rsp),%rsi
   25d58:	48 89 c7             	mov    %rax,%rdi
   25d5b:	48 89 74 24 18       	mov    %rsi,0x18(%rsp)
   25d60:	48 29 f7             	sub    %rsi,%rdi
   25d63:	48 89 bc 24 a0 00 00 	mov    %rdi,0xa0(%rsp)
   25d6a:	00 
   25d6b:	4d 89 e5             	mov    %r12,%r13
   25d6e:	49 f7 dd             	neg    %r13
   25d71:	41 0f b6 0c 08       	movzbl (%r8,%rcx,1),%ecx
   25d76:	48 0f a3 cd          	bt     %rcx,%rbp
   25d7a:	72 22                	jb     25d9e <_ZN3std10sys_common9backtrace10_print_fmt28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$17h1bc3c048d874664bE+0x1fe>
   25d7c:	49 01 c3             	add    %rax,%r11
   25d7f:	45 31 d2             	xor    %r10d,%r10d
   25d82:	48 8b 4c 24 30       	mov    0x30(%rsp),%rcx
   25d87:	4c 01 d9             	add    %r11,%rcx
   25d8a:	48 39 d1             	cmp    %rdx,%rcx
   25d8d:	0f 83 a9 00 00 00    	jae    25e3c <_ZN3std10sys_common9backtrace10_print_fmt28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$17h1bc3c048d874664bE+0x29c>
   25d93:	41 0f b6 0c 08       	movzbl (%r8,%rcx,1),%ecx
   25d98:	48 0f a3 cd          	bt     %rcx,%rbp
   25d9c:	73 de                	jae    25d7c <_ZN3std10sys_common9backtrace10_print_fmt28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$17h1bc3c048d874664bE+0x1dc>
   25d9e:	4d 39 d4             	cmp    %r10,%r12
   25da1:	4c 89 d1             	mov    %r10,%rcx
   25da4:	49 0f 47 cc          	cmova  %r12,%rcx
   25da8:	49 8d 34 0b          	lea    (%r11,%rcx,1),%rsi
   25dac:	0f 1f 40 00          	nopl   0x0(%rax)
   25db0:	48 39 c1             	cmp    %rax,%rcx
   25db3:	73 37                	jae    25dec <_ZN3std10sys_common9backtrace10_print_fmt28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$17h1bc3c048d874664bE+0x24c>
   25db5:	48 39 d6             	cmp    %rdx,%rsi
   25db8:	0f 83 f3 02 00 00    	jae    260b1 <_ZN3std10sys_common9backtrace10_print_fmt28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$17h1bc3c048d874664bE+0x511>
   25dbe:	41 0f b6 1c 09       	movzbl (%r9,%rcx,1),%ebx
   25dc3:	48 83 c1 01          	add    $0x1,%rcx
   25dc7:	48 8d 7e 01          	lea    0x1(%rsi),%rdi
   25dcb:	41 3a 1c 30          	cmp    (%r8,%rsi,1),%bl
   25dcf:	48 89 fe             	mov    %rdi,%rsi
   25dd2:	74 dc                	je     25db0 <_ZN3std10sys_common9backtrace10_print_fmt28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$17h1bc3c048d874664bE+0x210>
   25dd4:	4c 01 ef             	add    %r13,%rdi
   25dd7:	45 31 d2             	xor    %r10d,%r10d
   25dda:	49 89 fb             	mov    %rdi,%r11
   25ddd:	48 8b 4c 24 30       	mov    0x30(%rsp),%rcx
   25de2:	4c 01 d9             	add    %r11,%rcx
   25de5:	48 39 d1             	cmp    %rdx,%rcx
   25de8:	72 a9                	jb     25d93 <_ZN3std10sys_common9backtrace10_print_fmt28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$17h1bc3c048d874664bE+0x1f3>
   25dea:	eb 50                	jmp    25e3c <_ZN3std10sys_common9backtrace10_print_fmt28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$17h1bc3c048d874664bE+0x29c>
   25dec:	4c 89 e6             	mov    %r12,%rsi
   25def:	90                   	nop
   25df0:	49 39 f2             	cmp    %rsi,%r10
   25df3:	0f 83 7b 02 00 00    	jae    26074 <_ZN3std10sys_common9backtrace10_print_fmt28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$17h1bc3c048d874664bE+0x4d4>
   25df9:	48 83 c6 ff          	add    $0xffffffffffffffff,%rsi
   25dfd:	48 39 c6             	cmp    %rax,%rsi
   25e00:	0f 83 e6 02 00 00    	jae    260ec <_ZN3std10sys_common9backtrace10_print_fmt28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$17h1bc3c048d874664bE+0x54c>
   25e06:	4a 8d 0c 1e          	lea    (%rsi,%r11,1),%rcx
   25e0a:	48 39 d1             	cmp    %rdx,%rcx
   25e0d:	0f 83 ea 02 00 00    	jae    260fd <_ZN3std10sys_common9backtrace10_print_fmt28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$17h1bc3c048d874664bE+0x55d>
   25e13:	41 0f b6 1c 31       	movzbl (%r9,%rsi,1),%ebx
   25e18:	41 3a 1c 08          	cmp    (%r8,%rcx,1),%bl
   25e1c:	74 d2                	je     25df0 <_ZN3std10sys_common9backtrace10_print_fmt28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$17h1bc3c048d874664bE+0x250>
   25e1e:	4c 03 5c 24 18       	add    0x18(%rsp),%r11
   25e23:	4c 8b 94 24 a0 00 00 	mov    0xa0(%rsp),%r10
   25e2a:	00 
   25e2b:	48 8b 4c 24 30       	mov    0x30(%rsp),%rcx
   25e30:	4c 01 d9             	add    %r11,%rcx
   25e33:	48 39 d1             	cmp    %rdx,%rcx
   25e36:	0f 82 57 ff ff ff    	jb     25d93 <_ZN3std10sys_common9backtrace10_print_fmt28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$17h1bc3c048d874664bE+0x1f3>
   25e3c:	4c 89 94 24 90 00 00 	mov    %r10,0x90(%rsp)
   25e43:	00 
   25e44:	e9 5b 02 00 00       	jmpq   260a4 <_ZN3std10sys_common9backtrace10_print_fmt28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$17h1bc3c048d874664bE+0x504>
   25e49:	44 8a 4c 24 70       	mov    0x70(%rsp),%r9b
   25e4e:	48 8b 44 24 60       	mov    0x60(%rsp),%rax
   25e53:	4c 8b 54 24 38       	mov    0x38(%rsp),%r10
   25e58:	48 8b 54 24 40       	mov    0x40(%rsp),%rdx
   25e5d:	4d 8d 04 12          	lea    (%r10,%rdx,1),%r8
   25e61:	eb 10                	jmp    25e73 <_ZN3std10sys_common9backtrace10_print_fmt28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$17h1bc3c048d874664bE+0x2d3>
   25e63:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   25e6a:	00 00 00 
   25e6d:	0f 1f 00             	nopl   (%rax)
   25e70:	48 01 c8             	add    %rcx,%rax
   25e73:	44 89 cb             	mov    %r9d,%ebx
   25e76:	45 84 c9             	test   %r9b,%r9b
   25e79:	41 0f 94 c1          	sete   %r9b
   25e7d:	4c 89 54 24 20       	mov    %r10,0x20(%rsp)
   25e82:	48 89 54 24 28       	mov    %rdx,0x28(%rsp)
   25e87:	48 89 84 24 a8 00 00 	mov    %rax,0xa8(%rsp)
   25e8e:	00 
   25e8f:	48 89 94 24 b0 00 00 	mov    %rdx,0xb0(%rsp)
   25e96:	00 
   25e97:	48 85 c0             	test   %rax,%rax
   25e9a:	74 16                	je     25eb2 <_ZN3std10sys_common9backtrace10_print_fmt28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$17h1bc3c048d874664bE+0x312>
   25e9c:	48 39 c2             	cmp    %rax,%rdx
   25e9f:	74 11                	je     25eb2 <_ZN3std10sys_common9backtrace10_print_fmt28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$17h1bc3c048d874664bE+0x312>
   25ea1:	0f 86 18 02 00 00    	jbe    260bf <_ZN3std10sys_common9backtrace10_print_fmt28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$17h1bc3c048d874664bE+0x51f>
   25ea7:	41 80 3c 02 bf       	cmpb   $0xbf,(%r10,%rax,1)
   25eac:	0f 8e 0d 02 00 00    	jle    260bf <_ZN3std10sys_common9backtrace10_print_fmt28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$17h1bc3c048d874664bE+0x51f>
   25eb2:	bd 00 00 11 00       	mov    $0x110000,%ebp
   25eb7:	48 39 c2             	cmp    %rax,%rdx
   25eba:	0f 84 a0 00 00 00    	je     25f60 <_ZN3std10sys_common9backtrace10_print_fmt28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$17h1bc3c048d874664bE+0x3c0>
   25ec0:	49 8d 0c 02          	lea    (%r10,%rax,1),%rcx
   25ec4:	0f b6 29             	movzbl (%rcx),%ebp
   25ec7:	40 84 ed             	test   %bpl,%bpl
   25eca:	0f 89 90 00 00 00    	jns    25f60 <_ZN3std10sys_common9backtrace10_print_fmt28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$17h1bc3c048d874664bE+0x3c0>
   25ed0:	48 8d 71 01          	lea    0x1(%rcx),%rsi
   25ed4:	4c 39 c6             	cmp    %r8,%rsi
   25ed7:	74 40                	je     25f19 <_ZN3std10sys_common9backtrace10_print_fmt28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$17h1bc3c048d874664bE+0x379>
   25ed9:	0f b6 71 01          	movzbl 0x1(%rcx),%esi
   25edd:	48 83 c1 02          	add    $0x2,%rcx
   25ee1:	83 e6 3f             	and    $0x3f,%esi
   25ee4:	89 ef                	mov    %ebp,%edi
   25ee6:	83 e7 1f             	and    $0x1f,%edi
   25ee9:	40 80 fd df          	cmp    $0xdf,%bpl
   25eed:	76 3a                	jbe    25f29 <_ZN3std10sys_common9backtrace10_print_fmt28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$17h1bc3c048d874664bE+0x389>
   25eef:	4c 39 c1             	cmp    %r8,%rcx
   25ef2:	74 3c                	je     25f30 <_ZN3std10sys_common9backtrace10_print_fmt28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$17h1bc3c048d874664bE+0x390>
   25ef4:	44 0f b6 19          	movzbl (%rcx),%r11d
   25ef8:	48 83 c1 01          	add    $0x1,%rcx
   25efc:	41 83 e3 3f          	and    $0x3f,%r11d
   25f00:	c1 e6 06             	shl    $0x6,%esi
   25f03:	44 09 de             	or     %r11d,%esi
   25f06:	40 80 fd f0          	cmp    $0xf0,%bpl
   25f0a:	72 36                	jb     25f42 <_ZN3std10sys_common9backtrace10_print_fmt28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$17h1bc3c048d874664bE+0x3a2>
   25f0c:	4c 39 c1             	cmp    %r8,%rcx
   25f0f:	74 38                	je     25f49 <_ZN3std10sys_common9backtrace10_print_fmt28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$17h1bc3c048d874664bE+0x3a9>
   25f11:	0f b6 09             	movzbl (%rcx),%ecx
   25f14:	83 e1 3f             	and    $0x3f,%ecx
   25f17:	eb 32                	jmp    25f4b <_ZN3std10sys_common9backtrace10_print_fmt28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$17h1bc3c048d874664bE+0x3ab>
   25f19:	31 f6                	xor    %esi,%esi
   25f1b:	4c 89 c1             	mov    %r8,%rcx
   25f1e:	89 ef                	mov    %ebp,%edi
   25f20:	83 e7 1f             	and    $0x1f,%edi
   25f23:	40 80 fd df          	cmp    $0xdf,%bpl
   25f27:	77 c6                	ja     25eef <_ZN3std10sys_common9backtrace10_print_fmt28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$17h1bc3c048d874664bE+0x34f>
   25f29:	c1 e7 06             	shl    $0x6,%edi
   25f2c:	09 fe                	or     %edi,%esi
   25f2e:	eb 28                	jmp    25f58 <_ZN3std10sys_common9backtrace10_print_fmt28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$17h1bc3c048d874664bE+0x3b8>
   25f30:	45 31 db             	xor    %r11d,%r11d
   25f33:	4c 89 c1             	mov    %r8,%rcx
   25f36:	c1 e6 06             	shl    $0x6,%esi
   25f39:	44 09 de             	or     %r11d,%esi
   25f3c:	40 80 fd f0          	cmp    $0xf0,%bpl
   25f40:	73 ca                	jae    25f0c <_ZN3std10sys_common9backtrace10_print_fmt28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$17h1bc3c048d874664bE+0x36c>
   25f42:	c1 e7 0c             	shl    $0xc,%edi
   25f45:	09 fe                	or     %edi,%esi
   25f47:	eb 0f                	jmp    25f58 <_ZN3std10sys_common9backtrace10_print_fmt28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$17h1bc3c048d874664bE+0x3b8>
   25f49:	31 c9                	xor    %ecx,%ecx
   25f4b:	83 e7 07             	and    $0x7,%edi
   25f4e:	c1 e7 12             	shl    $0x12,%edi
   25f51:	c1 e6 06             	shl    $0x6,%esi
   25f54:	09 fe                	or     %edi,%esi
   25f56:	09 ce                	or     %ecx,%esi
   25f58:	89 f5                	mov    %esi,%ebp
   25f5a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   25f60:	84 db                	test   %bl,%bl
   25f62:	0f 85 30 01 00 00    	jne    26098 <_ZN3std10sys_common9backtrace10_print_fmt28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$17h1bc3c048d874664bE+0x4f8>
   25f68:	81 fd 00 00 11 00    	cmp    $0x110000,%ebp
   25f6e:	0f 84 6e fc ff ff    	je     25be2 <_ZN3std10sys_common9backtrace10_print_fmt28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$17h1bc3c048d874664bE+0x42>
   25f74:	b9 01 00 00 00       	mov    $0x1,%ecx
   25f79:	81 fd 80 00 00 00    	cmp    $0x80,%ebp
   25f7f:	0f 82 eb fe ff ff    	jb     25e70 <_ZN3std10sys_common9backtrace10_print_fmt28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$17h1bc3c048d874664bE+0x2d0>
   25f85:	b9 02 00 00 00       	mov    $0x2,%ecx
   25f8a:	81 fd 00 08 00 00    	cmp    $0x800,%ebp
   25f90:	0f 82 da fe ff ff    	jb     25e70 <_ZN3std10sys_common9backtrace10_print_fmt28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$17h1bc3c048d874664bE+0x2d0>
   25f96:	81 fd 00 00 01 00    	cmp    $0x10000,%ebp
   25f9c:	b9 04 00 00 00       	mov    $0x4,%ecx
   25fa1:	48 83 d9 00          	sbb    $0x0,%rcx
   25fa5:	e9 c6 fe ff ff       	jmpq   25e70 <_ZN3std10sys_common9backtrace10_print_fmt28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$17h1bc3c048d874664bE+0x2d0>
   25faa:	48 39 d1             	cmp    %rdx,%rcx
   25fad:	0f 83 2f fc ff ff    	jae    25be2 <_ZN3std10sys_common9backtrace10_print_fmt28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$17h1bc3c048d874664bE+0x42>
   25fb3:	4c 8b 54 24 78       	mov    0x78(%rsp),%r10
   25fb8:	48 8b 6c 24 60       	mov    0x60(%rsp),%rbp
   25fbd:	48 8b 74 24 70       	mov    0x70(%rsp),%rsi
   25fc2:	48 89 74 24 18       	mov    %rsi,0x18(%rsp)
   25fc7:	4d 8d 24 28          	lea    (%r8,%rbp,1),%r12
   25fcb:	4d 8d 2c 29          	lea    (%r9,%rbp,1),%r13
   25fcf:	4c 89 df             	mov    %r11,%rdi
   25fd2:	41 0f b6 0c 08       	movzbl (%r8,%rcx,1),%ecx
   25fd7:	49 0f a3 ca          	bt     %rcx,%r10
   25fdb:	72 25                	jb     26002 <_ZN3std10sys_common9backtrace10_print_fmt28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$17h1bc3c048d874664bE+0x462>
   25fdd:	48 01 c7             	add    %rax,%rdi
   25fe0:	49 89 fb             	mov    %rdi,%r11
   25fe3:	48 8b 4c 24 30       	mov    0x30(%rsp),%rcx
   25fe8:	4c 01 d9             	add    %r11,%rcx
   25feb:	48 39 d1             	cmp    %rdx,%rcx
   25fee:	0f 83 b0 00 00 00    	jae    260a4 <_ZN3std10sys_common9backtrace10_print_fmt28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$17h1bc3c048d874664bE+0x504>
   25ff4:	4c 89 df             	mov    %r11,%rdi
   25ff7:	41 0f b6 0c 08       	movzbl (%r8,%rcx,1),%ecx
   25ffc:	49 0f a3 ca          	bt     %rcx,%r10
   26000:	73 db                	jae    25fdd <_ZN3std10sys_common9backtrace10_print_fmt28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$17h1bc3c048d874664bE+0x43d>
   26002:	31 c9                	xor    %ecx,%ecx
   26004:	49 89 fb             	mov    %rdi,%r11
   26007:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   2600e:	00 00 
   26010:	48 8d 34 29          	lea    (%rcx,%rbp,1),%rsi
   26014:	48 39 c6             	cmp    %rax,%rsi
   26017:	73 23                	jae    2603c <_ZN3std10sys_common9backtrace10_print_fmt28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$17h1bc3c048d874664bE+0x49c>
   26019:	49 8d 34 2b          	lea    (%r11,%rbp,1),%rsi
   2601d:	48 39 d6             	cmp    %rdx,%rsi
   26020:	0f 83 8b 00 00 00    	jae    260b1 <_ZN3std10sys_common9backtrace10_print_fmt28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$17h1bc3c048d874664bE+0x511>
   26026:	41 0f b6 5c 0d 00    	movzbl 0x0(%r13,%rcx,1),%ebx
   2602c:	48 83 c1 01          	add    $0x1,%rcx
   26030:	43 3a 1c 1c          	cmp    (%r12,%r11,1),%bl
   26034:	4d 8d 5b 01          	lea    0x1(%r11),%r11
   26038:	74 d6                	je     26010 <_ZN3std10sys_common9backtrace10_print_fmt28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$17h1bc3c048d874664bE+0x470>
   2603a:	eb a7                	jmp    25fe3 <_ZN3std10sys_common9backtrace10_print_fmt28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$17h1bc3c048d874664bE+0x443>
   2603c:	48 89 ee             	mov    %rbp,%rsi
   2603f:	90                   	nop
   26040:	48 85 f6             	test   %rsi,%rsi
   26043:	74 48                	je     2608d <_ZN3std10sys_common9backtrace10_print_fmt28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$17h1bc3c048d874664bE+0x4ed>
   26045:	48 83 c6 ff          	add    $0xffffffffffffffff,%rsi
   26049:	48 39 c6             	cmp    %rax,%rsi
   2604c:	0f 83 9a 00 00 00    	jae    260ec <_ZN3std10sys_common9backtrace10_print_fmt28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$17h1bc3c048d874664bE+0x54c>
   26052:	48 8d 0c 3e          	lea    (%rsi,%rdi,1),%rcx
   26056:	48 39 d1             	cmp    %rdx,%rcx
   26059:	0f 83 9e 00 00 00    	jae    260fd <_ZN3std10sys_common9backtrace10_print_fmt28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$17h1bc3c048d874664bE+0x55d>
   2605f:	41 0f b6 1c 31       	movzbl (%r9,%rsi,1),%ebx
   26064:	41 3a 1c 08          	cmp    (%r8,%rcx,1),%bl
   26068:	74 d6                	je     26040 <_ZN3std10sys_common9backtrace10_print_fmt28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$17h1bc3c048d874664bE+0x4a0>
   2606a:	48 03 7c 24 18       	add    0x18(%rsp),%rdi
   2606f:	e9 6c ff ff ff       	jmpq   25fe0 <_ZN3std10sys_common9backtrace10_print_fmt28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$17h1bc3c048d874664bE+0x440>
   26074:	49 01 c3             	add    %rax,%r11
   26077:	4c 89 9c 24 80 00 00 	mov    %r11,0x80(%rsp)
   2607e:	00 
   2607f:	48 c7 84 24 90 00 00 	movq   $0x0,0x90(%rsp)
   26086:	00 00 00 00 00 
   2608b:	eb 0b                	jmp    26098 <_ZN3std10sys_common9backtrace10_print_fmt28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$17h1bc3c048d874664bE+0x4f8>
   2608d:	48 01 c7             	add    %rax,%rdi
   26090:	48 89 bc 24 80 00 00 	mov    %rdi,0x80(%rsp)
   26097:	00 
   26098:	49 8b 47 10          	mov    0x10(%r15),%rax
   2609c:	c6 00 01             	movb   $0x1,(%rax)
   2609f:	e9 e6 fb ff ff       	jmpq   25c8a <_ZN3std10sys_common9backtrace10_print_fmt28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$17h1bc3c048d874664bE+0xea>
   260a4:	4c 89 9c 24 80 00 00 	mov    %r11,0x80(%rsp)
   260ab:	00 
   260ac:	e9 31 fb ff ff       	jmpq   25be2 <_ZN3std10sys_common9backtrace10_print_fmt28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$17h1bc3c048d874664bE+0x42>
   260b1:	48 8d 3d a0 11 22 00 	lea    0x2211a0(%rip),%rdi        # 247258 <__init_array_end+0x1248>
   260b8:	e8 43 13 fe ff       	callq  7400 <_ZN4core9panicking18panic_bounds_check17h83121a2515f55ceeE>
   260bd:	0f 0b                	ud2    
   260bf:	48 8d 44 24 20       	lea    0x20(%rsp),%rax
   260c4:	48 89 04 24          	mov    %rax,(%rsp)
   260c8:	48 8d 84 24 a8 00 00 	lea    0xa8(%rsp),%rax
   260cf:	00 
   260d0:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   260d5:	48 8d 84 24 b0 00 00 	lea    0xb0(%rsp),%rax
   260dc:	00 
   260dd:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   260e2:	48 89 e7             	mov    %rsp,%rdi
   260e5:	e8 f6 7b ff ff       	callq  1dce0 <_ZN4core3str6traits101_$LT$impl$u20$core..slice..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..Range$LT$usize$GT$$GT$5index28_$u7b$$u7b$closure$u7d$$u7d$17hd529a7a73bc70800E>
   260ea:	0f 0b                	ud2    
   260ec:	48 8d 3d 7d 11 22 00 	lea    0x22117d(%rip),%rdi        # 247270 <__init_array_end+0x1260>
   260f3:	48 89 c2             	mov    %rax,%rdx
   260f6:	e8 05 13 fe ff       	callq  7400 <_ZN4core9panicking18panic_bounds_check17h83121a2515f55ceeE>
   260fb:	0f 0b                	ud2    
   260fd:	48 8d 3d 84 11 22 00 	lea    0x221184(%rip),%rdi        # 247288 <__init_array_end+0x1278>
   26104:	48 89 ce             	mov    %rcx,%rsi
   26107:	e8 f4 12 fe ff       	callq  7400 <_ZN4core9panicking18panic_bounds_check17h83121a2515f55ceeE>
   2610c:	0f 0b                	ud2    
   2610e:	48 89 c3             	mov    %rax,%rbx
   26111:	48 8d 7c 24 20       	lea    0x20(%rsp),%rdi
   26116:	e8 75 fa ff ff       	callq  25b90 <_ZN4core3ptr13drop_in_place17h02bbdb4fc418546cE>
   2611b:	48 89 df             	mov    %rbx,%rdi
   2611e:	e8 7d df fd ff       	callq  40a0 <_Unwind_Resume@plt>
   26123:	0f 0b                	ud2    
   26125:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2612c:	00 00 00 
   2612f:	90                   	nop

0000000000026130 <_ZN4core3ops8function6FnOnce40call_once$u7b$$u7b$vtable.shim$u7d$$u7d$17hd2f2bd009ac57652E>:
   26130:	e9 6b fa ff ff       	jmpq   25ba0 <_ZN3std10sys_common9backtrace10_print_fmt28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$17h1bc3c048d874664bE>
   26135:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2613c:	00 00 00 
   2613f:	90                   	nop

0000000000026140 <_ZN3std10sys_common9backtrace10_print_fmt28_$u7b$$u7b$closure$u7d$$u7d$17heb4a3b24214c2d58E>:
   26140:	49 89 f2             	mov    %rsi,%r10
   26143:	48 8b 32             	mov    (%rdx),%rsi
   26146:	48 8b 42 08          	mov    0x8(%rdx),%rax
   2614a:	48 8b 4a 10          	mov    0x10(%rdx),%rcx
   2614e:	4c 8b 0f             	mov    (%rdi),%r9
   26151:	4d 85 c9             	test   %r9,%r9
   26154:	4c 0f 45 cf          	cmovne %rdi,%r9
   26158:	44 8b 47 18          	mov    0x18(%rdi),%r8d
   2615c:	4c 89 d7             	mov    %r10,%rdi
   2615f:	48 89 c2             	mov    %rax,%rdx
   26162:	e9 79 00 00 00       	jmpq   261e0 <_ZN3std10sys_common9backtrace15output_filename17hc0523369a697b0dbE>
   26167:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   2616e:	00 00 

0000000000026170 <_ZN4core3ops8function6FnOnce40call_once$u7b$$u7b$vtable.shim$u7d$$u7d$17he5456651bdc3695eE>:
   26170:	55                   	push   %rbp
   26171:	53                   	push   %rbx
   26172:	50                   	push   %rax
   26173:	48 89 f0             	mov    %rsi,%rax
   26176:	48 89 fb             	mov    %rdi,%rbx
   26179:	48 8b 32             	mov    (%rdx),%rsi
   2617c:	48 8b 6a 08          	mov    0x8(%rdx),%rbp
   26180:	48 8b 4a 10          	mov    0x10(%rdx),%rcx
   26184:	4c 8b 0f             	mov    (%rdi),%r9
   26187:	4d 85 c9             	test   %r9,%r9
   2618a:	4c 0f 45 cf          	cmovne %rdi,%r9
   2618e:	44 8b 47 18          	mov    0x18(%rdi),%r8d
   26192:	48 89 c7             	mov    %rax,%rdi
   26195:	48 89 ea             	mov    %rbp,%rdx
   26198:	e8 43 00 00 00       	callq  261e0 <_ZN3std10sys_common9backtrace15output_filename17hc0523369a697b0dbE>
   2619d:	89 c5                	mov    %eax,%ebp
   2619f:	48 8b 3b             	mov    (%rbx),%rdi
   261a2:	48 85 ff             	test   %rdi,%rdi
   261a5:	74 0c                	je     261b3 <_ZN4core3ops8function6FnOnce40call_once$u7b$$u7b$vtable.shim$u7d$$u7d$17he5456651bdc3695eE+0x43>
   261a7:	48 83 7b 08 00       	cmpq   $0x0,0x8(%rbx)
   261ac:	74 05                	je     261b3 <_ZN4core3ops8function6FnOnce40call_once$u7b$$u7b$vtable.shim$u7d$$u7d$17he5456651bdc3695eE+0x43>
   261ae:	e8 5d f2 fd ff       	callq  5410 <__rust_dealloc>
   261b3:	89 e8                	mov    %ebp,%eax
   261b5:	48 83 c4 08          	add    $0x8,%rsp
   261b9:	5b                   	pop    %rbx
   261ba:	5d                   	pop    %rbp
   261bb:	c3                   	retq   
   261bc:	48 89 c5             	mov    %rax,%rbp
   261bf:	48 89 df             	mov    %rbx,%rdi
   261c2:	e8 09 f6 ff ff       	callq  257d0 <_ZN4core3ptr13drop_in_place17hc4ea61dcc7b1eda9E>
   261c7:	48 89 ef             	mov    %rbp,%rdi
   261ca:	e8 d1 de fd ff       	callq  40a0 <_Unwind_Resume@plt>
   261cf:	0f 0b                	ud2    
   261d1:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   261d8:	00 00 00 
   261db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000261e0 <_ZN3std10sys_common9backtrace15output_filename17hc0523369a697b0dbE>:
   261e0:	55                   	push   %rbp
   261e1:	41 57                	push   %r15
   261e3:	41 56                	push   %r14
   261e5:	41 55                	push   %r13
   261e7:	41 54                	push   %r12
   261e9:	53                   	push   %rbx
   261ea:	48 81 ec e8 01 00 00 	sub    $0x1e8,%rsp
   261f1:	49 89 fd             	mov    %rdi,%r13
   261f4:	48 83 fe 01          	cmp    $0x1,%rsi
   261f8:	75 1e                	jne    26218 <_ZN3std10sys_common9backtrace15output_filename17hc0523369a697b0dbE+0x38>
   261fa:	48 8d 05 14 74 01 00 	lea    0x17414(%rip),%rax        # 3d615 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0xcb5>
   26201:	48 89 84 24 a0 00 00 	mov    %rax,0xa0(%rsp)
   26208:	00 
   26209:	48 89 84 24 90 01 00 	mov    %rax,0x190(%rsp)
   26210:	00 
   26211:	b9 09 00 00 00       	mov    $0x9,%ecx
   26216:	eb 10                	jmp    26228 <_ZN3std10sys_common9backtrace15output_filename17hc0523369a697b0dbE+0x48>
   26218:	48 89 94 24 a0 00 00 	mov    %rdx,0xa0(%rsp)
   2621f:	00 
   26220:	48 89 94 24 90 01 00 	mov    %rdx,0x190(%rsp)
   26227:	00 
   26228:	48 89 8c 24 98 01 00 	mov    %rcx,0x198(%rsp)
   2622f:	00 
   26230:	48 c7 84 24 88 01 00 	movq   $0x0,0x188(%rsp)
   26237:	00 00 00 00 00 
   2623c:	45 84 c0             	test   %r8b,%r8b
   2623f:	48 89 cb             	mov    %rcx,%rbx
   26242:	48 89 8c 24 a8 00 00 	mov    %rcx,0xa8(%rsp)
   26249:	00 
   2624a:	0f 85 63 07 00 00    	jne    269b3 <_ZN3std10sys_common9backtrace15output_filename17hc0523369a697b0dbE+0x7d3>
   26250:	48 85 db             	test   %rbx,%rbx
   26253:	0f 84 5a 07 00 00    	je     269b3 <_ZN3std10sys_common9backtrace15output_filename17hc0523369a697b0dbE+0x7d3>
   26259:	4d 85 c9             	test   %r9,%r9
   2625c:	48 89 dd             	mov    %rbx,%rbp
   2625f:	48 8b 94 24 a0 00 00 	mov    0xa0(%rsp),%rdx
   26266:	00 
   26267:	0f 84 5a 07 00 00    	je     269c7 <_ZN3std10sys_common9backtrace15output_filename17hc0523369a697b0dbE+0x7e7>
   2626d:	80 3a 2f             	cmpb   $0x2f,(%rdx)
   26270:	0f 85 51 07 00 00    	jne    269c7 <_ZN3std10sys_common9backtrace15output_filename17hc0523369a697b0dbE+0x7e7>
   26276:	4c 89 6c 24 08       	mov    %r13,0x8(%rsp)
   2627b:	49 8b 01             	mov    (%r9),%rax
   2627e:	49 8b 49 10          	mov    0x10(%r9),%rcx
   26282:	66 48 0f 6e c5       	movq   %rbp,%xmm0
   26287:	66 48 0f 6e ca       	movq   %rdx,%xmm1
   2628c:	66 0f 7f 8c 24 90 00 	movdqa %xmm1,0x90(%rsp)
   26293:	00 00 
   26295:	48 85 c9             	test   %rcx,%rcx
   26298:	74 07                	je     262a1 <_ZN3std10sys_common9backtrace15output_filename17hc0523369a697b0dbE+0xc1>
   2629a:	b2 01                	mov    $0x1,%dl
   2629c:	80 38 2f             	cmpb   $0x2f,(%rax)
   2629f:	74 02                	je     262a3 <_ZN3std10sys_common9backtrace15output_filename17hc0523369a697b0dbE+0xc3>
   262a1:	31 d2                	xor    %edx,%edx
   262a3:	66 0f 6f 8c 24 90 00 	movdqa 0x90(%rsp),%xmm1
   262aa:	00 00 
   262ac:	66 0f 6c c8          	punpcklqdq %xmm0,%xmm1
   262b0:	66 0f 7f 8c 24 90 00 	movdqa %xmm1,0x90(%rsp)
   262b7:	00 00 
   262b9:	48 89 84 24 a8 01 00 	mov    %rax,0x1a8(%rsp)
   262c0:	00 
   262c1:	48 89 8c 24 b0 01 00 	mov    %rcx,0x1b0(%rsp)
   262c8:	00 
   262c9:	c6 84 24 b8 01 00 00 	movb   $0x6,0x1b8(%rsp)
   262d0:	06 
   262d1:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   262d6:	48 8b 4c 24 17       	mov    0x17(%rsp),%rcx
   262db:	48 89 84 24 b9 01 00 	mov    %rax,0x1b9(%rsp)
   262e2:	00 
   262e3:	48 89 8c 24 c0 01 00 	mov    %rcx,0x1c0(%rsp)
   262ea:	00 
   262eb:	88 94 24 e0 01 00 00 	mov    %dl,0x1e0(%rsp)
   262f2:	66 c7 84 24 e1 01 00 	movw   $0x200,0x1e1(%rsp)
   262f9:	00 00 02 
   262fc:	4c 8d a4 24 01 01 00 	lea    0x101(%rsp),%r12
   26303:	00 
   26304:	b1 02                	mov    $0x2,%cl
   26306:	40 b5 06             	mov    $0x6,%bpl
   26309:	41 b7 01             	mov    $0x1,%r15b
   2630c:	48 8d 5c 24 50       	lea    0x50(%rsp),%rbx
   26311:	31 d2                	xor    %edx,%edx
   26313:	41 b6 02             	mov    $0x2,%r14b
   26316:	40 80 fd 06          	cmp    $0x6,%bpl
   2631a:	0f 84 b7 00 00 00    	je     263d7 <_ZN3std10sys_common9backtrace15output_filename17hc0523369a697b0dbE+0x1f7>
   26320:	48 8b 84 24 4f 01 00 	mov    0x14f(%rsp),%rax
   26327:	00 
   26328:	48 89 84 24 cf 00 00 	mov    %rax,0xcf(%rsp)
   2632f:	00 
   26330:	f3 0f 6f 84 24 30 01 	movdqu 0x130(%rsp),%xmm0
   26337:	00 00 
   26339:	f3 0f 6f 8c 24 40 01 	movdqu 0x140(%rsp),%xmm1
   26340:	00 00 
   26342:	66 0f 7f 8c 24 c0 00 	movdqa %xmm1,0xc0(%rsp)
   26349:	00 00 
   2634b:	66 0f 7f 84 24 b0 00 	movdqa %xmm0,0xb0(%rsp)
   26352:	00 00 
   26354:	e9 7e 00 00 00       	jmpq   263d7 <_ZN3std10sys_common9backtrace15output_filename17hc0523369a697b0dbE+0x1f7>
   26359:	0f b6 44 24 29       	movzbl 0x29(%rsp),%eax
   2635e:	3a 44 24 69          	cmp    0x69(%rsp),%al
   26362:	0f 85 7f 02 00 00    	jne    265e7 <_ZN3std10sys_common9backtrace15output_filename17hc0523369a697b0dbE+0x407>
   26368:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   2636f:	00 
   26370:	0f 28 84 24 f0 00 00 	movaps 0xf0(%rsp),%xmm0
   26377:	00 
   26378:	0f 29 84 24 90 00 00 	movaps %xmm0,0x90(%rsp)
   2637f:	00 
   26380:	0f b6 ac 24 00 01 00 	movzbl 0x100(%rsp),%ebp
   26387:	00 
   26388:	f3 41 0f 6f 04 24    	movdqu (%r12),%xmm0
   2638e:	f3 41 0f 6f 4c 24 10 	movdqu 0x10(%r12),%xmm1
   26395:	66 0f 7f 84 24 30 01 	movdqa %xmm0,0x130(%rsp)
   2639c:	00 00 
   2639e:	66 0f 7f 8c 24 40 01 	movdqa %xmm1,0x140(%rsp)
   263a5:	00 00 
   263a7:	49 8b 44 24 1f       	mov    0x1f(%r12),%rax
   263ac:	48 89 84 24 4f 01 00 	mov    %rax,0x14f(%rsp)
   263b3:	00 
   263b4:	44 0f b6 bc 24 28 01 	movzbl 0x128(%rsp),%r15d
   263bb:	00 00 
   263bd:	0f b6 94 24 29 01 00 	movzbl 0x129(%rsp),%edx
   263c4:	00 
   263c5:	0f b6 8c 24 2a 01 00 	movzbl 0x12a(%rsp),%ecx
   263cc:	00 
   263cd:	40 80 fd 06          	cmp    $0x6,%bpl
   263d1:	0f 85 49 ff ff ff    	jne    26320 <_ZN3std10sys_common9backtrace15output_filename17hc0523369a697b0dbE+0x140>
   263d7:	45 84 ff             	test   %r15b,%r15b
   263da:	0f 28 84 24 90 00 00 	movaps 0x90(%rsp),%xmm0
   263e1:	00 
   263e2:	0f 29 84 24 f0 00 00 	movaps %xmm0,0xf0(%rsp)
   263e9:	00 
   263ea:	40 88 ac 24 00 01 00 	mov    %bpl,0x100(%rsp)
   263f1:	00 
   263f2:	48 8b 84 24 cf 00 00 	mov    0xcf(%rsp),%rax
   263f9:	00 
   263fa:	49 89 44 24 1f       	mov    %rax,0x1f(%r12)
   263ff:	0f 28 84 24 b0 00 00 	movaps 0xb0(%rsp),%xmm0
   26406:	00 
   26407:	0f 28 8c 24 c0 00 00 	movaps 0xc0(%rsp),%xmm1
   2640e:	00 
   2640f:	41 0f 11 4c 24 10    	movups %xmm1,0x10(%r12)
   26415:	41 0f 11 04 24       	movups %xmm0,(%r12)
   2641a:	0f 95 84 24 28 01 00 	setne  0x128(%rsp)
   26421:	00 
   26422:	41 89 d5             	mov    %edx,%r13d
   26425:	88 94 24 29 01 00 00 	mov    %dl,0x129(%rsp)
   2642c:	88 4c 24 07          	mov    %cl,0x7(%rsp)
   26430:	88 8c 24 2a 01 00 00 	mov    %cl,0x12a(%rsp)
   26437:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
   2643c:	48 8d b4 24 f0 00 00 	lea    0xf0(%rsp),%rsi
   26443:	00 
   26444:	e8 a7 09 00 00       	callq  26df0 <_ZN80_$LT$std..path..Components$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hede1176d26c248aaE>
   26449:	48 8d bc 24 b0 00 00 	lea    0xb0(%rsp),%rdi
   26450:	00 
   26451:	48 8d b4 24 a8 01 00 	lea    0x1a8(%rsp),%rsi
   26458:	00 
   26459:	e8 92 09 00 00       	callq  26df0 <_ZN80_$LT$std..path..Components$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hede1176d26c248aaE>
   2645e:	0f 10 84 24 b0 00 00 	movups 0xb0(%rsp),%xmm0
   26465:	00 
   26466:	0f 10 8c 24 c0 00 00 	movups 0xc0(%rsp),%xmm1
   2646d:	00 
   2646e:	0f 10 94 24 d0 00 00 	movups 0xd0(%rsp),%xmm2
   26475:	00 
   26476:	0f 10 9c 24 e0 00 00 	movups 0xe0(%rsp),%xmm3
   2647d:	00 
   2647e:	0f 11 5b 30          	movups %xmm3,0x30(%rbx)
   26482:	0f 11 53 20          	movups %xmm2,0x20(%rbx)
   26486:	0f 11 4b 10          	movups %xmm1,0x10(%rbx)
   2648a:	0f 11 03             	movups %xmm0,(%rbx)
   2648d:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   26492:	48 8b 4c 24 50       	mov    0x50(%rsp),%rcx
   26497:	48 83 f8 05          	cmp    $0x5,%rax
   2649b:	0f 84 06 01 00 00    	je     265a7 <_ZN3std10sys_common9backtrace15output_filename17hc0523369a697b0dbE+0x3c7>
   264a1:	48 83 f9 05          	cmp    $0x5,%rcx
   264a5:	0f 84 05 01 00 00    	je     265b0 <_ZN3std10sys_common9backtrace15output_filename17hc0523369a697b0dbE+0x3d0>
   264ab:	48 39 c8             	cmp    %rcx,%rax
   264ae:	0f 85 33 01 00 00    	jne    265e7 <_ZN3std10sys_common9backtrace15output_filename17hc0523369a697b0dbE+0x407>
   264b4:	48 83 f8 04          	cmp    $0x4,%rax
   264b8:	74 76                	je     26530 <_ZN3std10sys_common9backtrace15output_filename17hc0523369a697b0dbE+0x350>
   264ba:	48 85 c0             	test   %rax,%rax
   264bd:	0f 85 ad fe ff ff    	jne    26370 <_ZN3std10sys_common9backtrace15output_filename17hc0523369a697b0dbE+0x190>
   264c3:	0f b6 44 24 28       	movzbl 0x28(%rsp),%eax
   264c8:	3a 44 24 68          	cmp    0x68(%rsp),%al
   264cc:	0f 85 15 01 00 00    	jne    265e7 <_ZN3std10sys_common9backtrace15output_filename17hc0523369a697b0dbE+0x407>
   264d2:	48 8d 0d fb 47 01 00 	lea    0x147fb(%rip),%rcx        # 3acd4 <_ZN4core7unicode12unicode_data2cc19BITSET_INDEX_CHUNKS17h8a1f39cd536e9344E+0x814>
   264d9:	48 63 04 81          	movslq (%rcx,%rax,4),%rax
   264dd:	48 01 c8             	add    %rcx,%rax
   264e0:	ff e0                	jmpq   *%rax
   264e2:	48 8b 54 24 38       	mov    0x38(%rsp),%rdx
   264e7:	48 3b 54 24 78       	cmp    0x78(%rsp),%rdx
   264ec:	0f 85 f5 00 00 00    	jne    265e7 <_ZN3std10sys_common9backtrace15output_filename17hc0523369a697b0dbE+0x407>
   264f2:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
   264f7:	48 8b 74 24 70       	mov    0x70(%rsp),%rsi
   264fc:	48 39 f7             	cmp    %rsi,%rdi
   264ff:	0f 84 6b fe ff ff    	je     26370 <_ZN3std10sys_common9backtrace15output_filename17hc0523369a697b0dbE+0x190>
   26505:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2650c:	00 00 00 
   2650f:	90                   	nop
   26510:	ff 15 02 1a 22 00    	callq  *0x221a02(%rip)        # 247f18 <bcmp@GLIBC_2.2.5>
   26516:	85 c0                	test   %eax,%eax
   26518:	0f 84 52 fe ff ff    	je     26370 <_ZN3std10sys_common9backtrace15output_filename17hc0523369a697b0dbE+0x190>
   2651e:	e9 c4 00 00 00       	jmpq   265e7 <_ZN3std10sys_common9backtrace15output_filename17hc0523369a697b0dbE+0x407>
   26523:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2652a:	00 00 00 
   2652d:	0f 1f 00             	nopl   (%rax)
   26530:	48 8b 54 24 20       	mov    0x20(%rsp),%rdx
   26535:	48 3b 54 24 60       	cmp    0x60(%rsp),%rdx
   2653a:	0f 85 a7 00 00 00    	jne    265e7 <_ZN3std10sys_common9backtrace15output_filename17hc0523369a697b0dbE+0x407>
   26540:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
   26545:	48 8b 74 24 58       	mov    0x58(%rsp),%rsi
   2654a:	48 39 f7             	cmp    %rsi,%rdi
   2654d:	75 c1                	jne    26510 <_ZN3std10sys_common9backtrace15output_filename17hc0523369a697b0dbE+0x330>
   2654f:	e9 1c fe ff ff       	jmpq   26370 <_ZN3std10sys_common9backtrace15output_filename17hc0523369a697b0dbE+0x190>
   26554:	48 8b 54 24 38       	mov    0x38(%rsp),%rdx
   26559:	48 3b 54 24 78       	cmp    0x78(%rsp),%rdx
   2655e:	0f 85 83 00 00 00    	jne    265e7 <_ZN3std10sys_common9backtrace15output_filename17hc0523369a697b0dbE+0x407>
   26564:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
   26569:	48 8b 74 24 70       	mov    0x70(%rsp),%rsi
   2656e:	48 39 f7             	cmp    %rsi,%rdi
   26571:	74 0a                	je     2657d <_ZN3std10sys_common9backtrace15output_filename17hc0523369a697b0dbE+0x39d>
   26573:	ff 15 9f 19 22 00    	callq  *0x22199f(%rip)        # 247f18 <bcmp@GLIBC_2.2.5>
   26579:	85 c0                	test   %eax,%eax
   2657b:	75 6a                	jne    265e7 <_ZN3std10sys_common9backtrace15output_filename17hc0523369a697b0dbE+0x407>
   2657d:	48 8b 54 24 48       	mov    0x48(%rsp),%rdx
   26582:	48 3b 94 24 88 00 00 	cmp    0x88(%rsp),%rdx
   26589:	00 
   2658a:	75 5b                	jne    265e7 <_ZN3std10sys_common9backtrace15output_filename17hc0523369a697b0dbE+0x407>
   2658c:	48 8b 7c 24 40       	mov    0x40(%rsp),%rdi
   26591:	48 8b b4 24 80 00 00 	mov    0x80(%rsp),%rsi
   26598:	00 
   26599:	48 39 f7             	cmp    %rsi,%rdi
   2659c:	0f 85 6e ff ff ff    	jne    26510 <_ZN3std10sys_common9backtrace15output_filename17hc0523369a697b0dbE+0x330>
   265a2:	e9 c9 fd ff ff       	jmpq   26370 <_ZN3std10sys_common9backtrace15output_filename17hc0523369a697b0dbE+0x190>
   265a7:	41 b6 02             	mov    $0x2,%r14b
   265aa:	48 83 f9 05          	cmp    $0x5,%rcx
   265ae:	75 37                	jne    265e7 <_ZN3std10sys_common9backtrace15output_filename17hc0523369a697b0dbE+0x407>
   265b0:	48 8b 84 24 4f 01 00 	mov    0x14f(%rsp),%rax
   265b7:	00 
   265b8:	48 89 84 24 7f 01 00 	mov    %rax,0x17f(%rsp)
   265bf:	00 
   265c0:	66 0f 6f 84 24 30 01 	movdqa 0x130(%rsp),%xmm0
   265c7:	00 00 
   265c9:	66 0f 6f 8c 24 40 01 	movdqa 0x140(%rsp),%xmm1
   265d0:	00 00 
   265d2:	66 0f 7f 8c 24 70 01 	movdqa %xmm1,0x170(%rsp)
   265d9:	00 00 
   265db:	66 0f 7f 84 24 60 01 	movdqa %xmm0,0x160(%rsp)
   265e2:	00 00 
   265e4:	45 89 fe             	mov    %r15d,%r14d
   265e7:	41 80 fe 02          	cmp    $0x2,%r14b
   265eb:	75 12                	jne    265ff <_ZN3std10sys_common9backtrace15output_filename17hc0523369a697b0dbE+0x41f>
   265ed:	48 8b 9c 24 a8 00 00 	mov    0xa8(%rsp),%rbx
   265f4:	00 
   265f5:	4c 8b 6c 24 08       	mov    0x8(%rsp),%r13
   265fa:	e9 b4 03 00 00       	jmpq   269b3 <_ZN3std10sys_common9backtrace15output_filename17hc0523369a697b0dbE+0x7d3>
   265ff:	48 8b 84 24 7f 01 00 	mov    0x17f(%rsp),%rax
   26606:	00 
   26607:	48 89 84 24 0f 01 00 	mov    %rax,0x10f(%rsp)
   2660e:	00 
   2660f:	0f 28 84 24 60 01 00 	movaps 0x160(%rsp),%xmm0
   26616:	00 
   26617:	0f 28 8c 24 70 01 00 	movaps 0x170(%rsp),%xmm1
   2661e:	00 
   2661f:	0f 29 8c 24 00 01 00 	movaps %xmm1,0x100(%rsp)
   26626:	00 
   26627:	0f 29 84 24 f0 00 00 	movaps %xmm0,0xf0(%rsp)
   2662e:	00 
   2662f:	66 0f 6f 84 24 90 00 	movdqa 0x90(%rsp),%xmm0
   26636:	00 00 
   26638:	66 49 0f 7e c4       	movq   %xmm0,%r12
   2663d:	66 0f 70 c0 4e       	pshufd $0x4e,%xmm0,%xmm0
   26642:	66 48 0f 7e c3       	movq   %xmm0,%rbx
   26647:	40 80 fd 06          	cmp    $0x6,%bpl
   2664b:	74 32                	je     2667f <_ZN3std10sys_common9backtrace15output_filename17hc0523369a697b0dbE+0x49f>
   2664d:	48 8b 84 24 0f 01 00 	mov    0x10f(%rsp),%rax
   26654:	00 
   26655:	48 89 84 24 cf 00 00 	mov    %rax,0xcf(%rsp)
   2665c:	00 
   2665d:	66 0f 6f 84 24 f0 00 	movdqa 0xf0(%rsp),%xmm0
   26664:	00 00 
   26666:	0f 28 8c 24 00 01 00 	movaps 0x100(%rsp),%xmm1
   2666d:	00 
   2666e:	0f 29 8c 24 c0 00 00 	movaps %xmm1,0xc0(%rsp)
   26675:	00 
   26676:	66 0f 7f 84 24 b0 00 	movdqa %xmm0,0xb0(%rsp)
   2667d:	00 00 
   2667f:	45 84 f6             	test   %r14b,%r14b
   26682:	4c 89 64 24 10       	mov    %r12,0x10(%rsp)
   26687:	48 89 5c 24 18       	mov    %rbx,0x18(%rsp)
   2668c:	41 89 ee             	mov    %ebp,%r14d
   2668f:	40 88 6c 24 20       	mov    %bpl,0x20(%rsp)
   26694:	66 0f 6f 84 24 b0 00 	movdqa 0xb0(%rsp),%xmm0
   2669b:	00 00 
   2669d:	66 0f 6f 8c 24 c0 00 	movdqa 0xc0(%rsp),%xmm1
   266a4:	00 00 
   266a6:	f3 0f 7f 44 24 21    	movdqu %xmm0,0x21(%rsp)
   266ac:	f3 0f 7f 4c 24 31    	movdqu %xmm1,0x31(%rsp)
   266b2:	48 8b 84 24 cf 00 00 	mov    0xcf(%rsp),%rax
   266b9:	00 
   266ba:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
   266bf:	0f 95 44 24 48       	setne  0x48(%rsp)
   266c4:	44 88 6c 24 49       	mov    %r13b,0x49(%rsp)
   266c9:	40 8a 74 24 07       	mov    0x7(%rsp),%sil
   266ce:	40 88 74 24 4a       	mov    %sil,0x4a(%rsp)
   266d3:	48 85 db             	test   %rbx,%rbx
   266d6:	0f 84 e6 01 00 00    	je     268c2 <_ZN3std10sys_common9backtrace15output_filename17hc0523369a697b0dbE+0x6e2>
   266dc:	41 80 fd 02          	cmp    $0x2,%r13b
   266e0:	0f 85 af 00 00 00    	jne    26795 <_ZN3std10sys_common9backtrace15output_filename17hc0523369a697b0dbE+0x5b5>
   266e6:	31 c9                	xor    %ecx,%ecx
   266e8:	41 80 fe 03          	cmp    $0x3,%r14b
   266ec:	0f 92 c1             	setb   %cl
   266ef:	41 80 fe 06          	cmp    $0x6,%r14b
   266f3:	b8 02 00 00 00       	mov    $0x2,%eax
   266f8:	0f 45 c1             	cmovne %ecx,%eax
   266fb:	3c 02                	cmp    $0x2,%al
   266fd:	4c 8b 6c 24 08       	mov    0x8(%rsp),%r13
   26702:	0f 84 90 03 00 00    	je     26a98 <_ZN3std10sys_common9backtrace15output_filename17hc0523369a697b0dbE+0x8b8>
   26708:	24 01                	and    $0x1,%al
   2670a:	0f 84 88 03 00 00    	je     26a98 <_ZN3std10sys_common9backtrace15output_filename17hc0523369a697b0dbE+0x8b8>
   26710:	48 89 da             	mov    %rbx,%rdx
   26713:	48 f7 da             	neg    %rdx
   26716:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
   2671d:	0f 1f 00             	nopl   (%rax)
   26720:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
   26724:	48 83 f9 ff          	cmp    $0xffffffffffffffff,%rcx
   26728:	74 36                	je     26760 <_ZN3std10sys_common9backtrace15output_filename17hc0523369a697b0dbE+0x580>
   2672a:	41 0f b6 4c 04 01    	movzbl 0x1(%r12,%rax,1),%ecx
   26730:	48 83 c0 01          	add    $0x1,%rax
   26734:	80 f9 2f             	cmp    $0x2f,%cl
   26737:	75 e7                	jne    26720 <_ZN3std10sys_common9backtrace15output_filename17hc0523369a697b0dbE+0x540>
   26739:	0f 94 c2             	sete   %dl
   2673c:	80 c2 01             	add    $0x1,%dl
   2673f:	0f b6 d2             	movzbl %dl,%edx
   26742:	83 e2 01             	and    $0x1,%edx
   26745:	48 01 c2             	add    %rax,%rdx
   26748:	bf 01 00 00 00       	mov    $0x1,%edi
   2674d:	48 39 d3             	cmp    %rdx,%rbx
   26750:	73 13                	jae    26765 <_ZN3std10sys_common9backtrace15output_filename17hc0523369a697b0dbE+0x585>
   26752:	e9 0b 04 00 00       	jmpq   26b62 <_ZN3std10sys_common9backtrace15output_filename17hc0523369a697b0dbE+0x982>
   26757:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   2675e:	00 00 
   26760:	48 89 da             	mov    %rbx,%rdx
   26763:	31 ff                	xor    %edi,%edi
   26765:	48 85 d2             	test   %rdx,%rdx
   26768:	75 30                	jne    2679a <_ZN3std10sys_common9backtrace15output_filename17hc0523369a697b0dbE+0x5ba>
   2676a:	48 01 d7             	add    %rdx,%rdi
   2676d:	48 39 fb             	cmp    %rdi,%rbx
   26770:	0f 82 c8 03 00 00    	jb     26b3e <_ZN3std10sys_common9backtrace15output_filename17hc0523369a697b0dbE+0x95e>
   26776:	49 01 fc             	add    %rdi,%r12
   26779:	4c 89 64 24 10       	mov    %r12,0x10(%rsp)
   2677e:	48 29 fb             	sub    %rdi,%rbx
   26781:	48 89 5c 24 18       	mov    %rbx,0x18(%rsp)
   26786:	75 88                	jne    26710 <_ZN3std10sys_common9backtrace15output_filename17hc0523369a697b0dbE+0x530>
   26788:	31 db                	xor    %ebx,%ebx
   2678a:	40 80 fe 02          	cmp    $0x2,%sil
   2678e:	74 14                	je     267a4 <_ZN3std10sys_common9backtrace15output_filename17hc0523369a697b0dbE+0x5c4>
   26790:	e9 3c 01 00 00       	jmpq   268d1 <_ZN3std10sys_common9backtrace15output_filename17hc0523369a697b0dbE+0x6f1>
   26795:	4c 8b 6c 24 08       	mov    0x8(%rsp),%r13
   2679a:	40 80 fe 02          	cmp    $0x2,%sil
   2679e:	0f 85 2d 01 00 00    	jne    268d1 <_ZN3std10sys_common9backtrace15output_filename17hc0523369a697b0dbE+0x6f1>
   267a4:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
   267a9:	e8 52 04 00 00       	callq  26c00 <_ZN3std4path10Components15len_before_body17h91c7353a6092624aE>
   267ae:	48 39 c3             	cmp    %rax,%rbx
   267b1:	0f 86 f6 00 00 00    	jbe    268ad <_ZN3std10sys_common9backtrace15output_filename17hc0523369a697b0dbE+0x6cd>
   267b7:	4d 8d 7c 24 ff       	lea    -0x1(%r12),%r15
   267bc:	49 8d 44 24 01       	lea    0x1(%r12),%rax
   267c1:	48 89 84 24 90 00 00 	mov    %rax,0x90(%rsp)
   267c8:	00 
   267c9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   267d0:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
   267d5:	e8 26 04 00 00       	callq  26c00 <_ZN3std4path10Components15len_before_body17h91c7353a6092624aE>
   267da:	48 39 c3             	cmp    %rax,%rbx
   267dd:	0f 82 65 03 00 00    	jb     26b48 <_ZN3std10sys_common9backtrace15output_filename17hc0523369a697b0dbE+0x968>
   267e3:	49 8d 0c 04          	lea    (%r12,%rax,1),%rcx
   267e7:	49 8d 34 1c          	lea    (%r12,%rbx,1),%rsi
   267eb:	49 8d 3c 1f          	lea    (%r15,%rbx,1),%rdi
   267ef:	48 89 c5             	mov    %rax,%rbp
   267f2:	48 29 dd             	sub    %rbx,%rbp
   267f5:	31 d2                	xor    %edx,%edx
   267f7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   267fe:	00 00 
   26800:	48 39 d5             	cmp    %rdx,%rbp
   26803:	74 3e                	je     26843 <_ZN3std10sys_common9backtrace15output_filename17hc0523369a697b0dbE+0x663>
   26805:	80 3c 17 2f          	cmpb   $0x2f,(%rdi,%rdx,1)
   26809:	48 8d 52 ff          	lea    -0x1(%rdx),%rdx
   2680d:	75 f1                	jne    26800 <_ZN3std10sys_common9backtrace15output_filename17hc0523369a697b0dbE+0x620>
   2680f:	48 01 c6             	add    %rax,%rsi
   26812:	48 29 ce             	sub    %rcx,%rsi
   26815:	48 8d 04 16          	lea    (%rsi,%rdx,1),%rax
   26819:	48 83 c0 01          	add    $0x1,%rax
   2681d:	48 39 c3             	cmp    %rax,%rbx
   26820:	0f 82 6a 03 00 00    	jb     26b90 <_ZN3std10sys_common9backtrace15output_filename17hc0523369a697b0dbE+0x9b0>
   26826:	48 03 b4 24 90 00 00 	add    0x90(%rsp),%rsi
   2682d:	00 
   2682e:	48 01 d6             	add    %rdx,%rsi
   26831:	ba 01 00 00 00       	mov    $0x1,%edx
   26836:	48 89 f1             	mov    %rsi,%rcx
   26839:	48 89 de             	mov    %rbx,%rsi
   2683c:	48 29 c6             	sub    %rax,%rsi
   2683f:	75 0c                	jne    2684d <_ZN3std10sys_common9backtrace15output_filename17hc0523369a697b0dbE+0x66d>
   26841:	eb 3e                	jmp    26881 <_ZN3std10sys_common9backtrace15output_filename17hc0523369a697b0dbE+0x6a1>
   26843:	31 d2                	xor    %edx,%edx
   26845:	48 89 de             	mov    %rbx,%rsi
   26848:	48 29 c6             	sub    %rax,%rsi
   2684b:	74 34                	je     26881 <_ZN3std10sys_common9backtrace15output_filename17hc0523369a697b0dbE+0x6a1>
   2684d:	48 83 fe 01          	cmp    $0x1,%rsi
   26851:	75 5a                	jne    268ad <_ZN3std10sys_common9backtrace15output_filename17hc0523369a697b0dbE+0x6cd>
   26853:	48 8d 05 c4 6d 01 00 	lea    0x16dc4(%rip),%rax        # 3d61e <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0xcbe>
   2685a:	48 39 c1             	cmp    %rax,%rcx
   2685d:	74 05                	je     26864 <_ZN3std10sys_common9backtrace15output_filename17hc0523369a697b0dbE+0x684>
   2685f:	80 39 2e             	cmpb   $0x2e,(%rcx)
   26862:	75 49                	jne    268ad <_ZN3std10sys_common9backtrace15output_filename17hc0523369a697b0dbE+0x6cd>
   26864:	31 c0                	xor    %eax,%eax
   26866:	41 80 fe 03          	cmp    $0x3,%r14b
   2686a:	0f 92 c0             	setb   %al
   2686d:	41 80 fe 06          	cmp    $0x6,%r14b
   26871:	b9 02 00 00 00       	mov    $0x2,%ecx
   26876:	0f 44 c1             	cmove  %ecx,%eax
   26879:	3c 02                	cmp    $0x2,%al
   2687b:	74 04                	je     26881 <_ZN3std10sys_common9backtrace15output_filename17hc0523369a697b0dbE+0x6a1>
   2687d:	24 01                	and    $0x1,%al
   2687f:	75 2c                	jne    268ad <_ZN3std10sys_common9backtrace15output_filename17hc0523369a697b0dbE+0x6cd>
   26881:	48 01 f2             	add    %rsi,%rdx
   26884:	48 89 dd             	mov    %rbx,%rbp
   26887:	48 29 d5             	sub    %rdx,%rbp
   2688a:	0f 82 c5 02 00 00    	jb     26b55 <_ZN3std10sys_common9backtrace15output_filename17hc0523369a697b0dbE+0x975>
   26890:	48 89 6c 24 18       	mov    %rbp,0x18(%rsp)
   26895:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
   2689a:	e8 61 03 00 00       	callq  26c00 <_ZN3std4path10Components15len_before_body17h91c7353a6092624aE>
   2689f:	48 89 eb             	mov    %rbp,%rbx
   268a2:	48 39 c5             	cmp    %rax,%rbp
   268a5:	0f 87 25 ff ff ff    	ja     267d0 <_ZN3std10sys_common9backtrace15output_filename17hc0523369a697b0dbE+0x5f0>
   268ab:	eb 27                	jmp    268d4 <_ZN3std10sys_common9backtrace15output_filename17hc0523369a697b0dbE+0x6f4>
   268ad:	48 89 dd             	mov    %rbx,%rbp
   268b0:	4d 85 e4             	test   %r12,%r12
   268b3:	48 8b 9c 24 a8 00 00 	mov    0xa8(%rsp),%rbx
   268ba:	00 
   268bb:	75 28                	jne    268e5 <_ZN3std10sys_common9backtrace15output_filename17hc0523369a697b0dbE+0x705>
   268bd:	e9 f1 00 00 00       	jmpq   269b3 <_ZN3std10sys_common9backtrace15output_filename17hc0523369a697b0dbE+0x7d3>
   268c2:	4c 8b 6c 24 08       	mov    0x8(%rsp),%r13
   268c7:	40 80 fe 02          	cmp    $0x2,%sil
   268cb:	0f 84 d3 fe ff ff    	je     267a4 <_ZN3std10sys_common9backtrace15output_filename17hc0523369a697b0dbE+0x5c4>
   268d1:	48 89 dd             	mov    %rbx,%rbp
   268d4:	4d 85 e4             	test   %r12,%r12
   268d7:	48 8b 9c 24 a8 00 00 	mov    0xa8(%rsp),%rbx
   268de:	00 
   268df:	0f 84 ce 00 00 00    	je     269b3 <_ZN3std10sys_common9backtrace15output_filename17hc0523369a697b0dbE+0x7d3>
   268e5:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
   268ea:	4c 89 e6             	mov    %r12,%rsi
   268ed:	48 89 ea             	mov    %rbp,%rdx
   268f0:	e8 6b 4e fe ff       	callq  b760 <_ZN4core3str9from_utf817ha5f1d279f7594d61E>
   268f5:	48 83 7c 24 10 01    	cmpq   $0x1,0x10(%rsp)
   268fb:	0f 84 b2 00 00 00    	je     269b3 <_ZN3std10sys_common9backtrace15output_filename17hc0523369a697b0dbE+0x7d3>
   26901:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   26906:	48 85 c0             	test   %rax,%rax
   26909:	0f 84 a4 00 00 00    	je     269b3 <_ZN3std10sys_common9backtrace15output_filename17hc0523369a697b0dbE+0x7d3>
   2690f:	48 8b 4c 24 20       	mov    0x20(%rsp),%rcx
   26914:	48 89 84 24 f0 00 00 	mov    %rax,0xf0(%rsp)
   2691b:	00 
   2691c:	48 89 8c 24 f8 00 00 	mov    %rcx,0xf8(%rsp)
   26923:	00 
   26924:	48 8d 05 a5 40 fe ff 	lea    -0x1bf5b(%rip),%rax        # a9d0 <_ZN43_$LT$char$u20$as$u20$core..fmt..Display$GT$3fmt17h7792e6955f0fb677E>
   2692b:	66 48 0f 6e c0       	movq   %rax,%xmm0
   26930:	48 8d 05 69 5b 01 00 	lea    0x15b69(%rip),%rax        # 3c4a0 <_ZN4core7unicode12unicode_data15grapheme_extend6BITSET17h68ce7f61ccfa32feE+0xa00>
   26937:	66 48 0f 6e c8       	movq   %rax,%xmm1
   2693c:	66 0f 6c c8          	punpcklqdq %xmm0,%xmm1
   26940:	66 0f 7f 8c 24 b0 00 	movdqa %xmm1,0xb0(%rsp)
   26947:	00 00 
   26949:	48 8d 84 24 f0 00 00 	lea    0xf0(%rsp),%rax
   26950:	00 
   26951:	48 89 84 24 c0 00 00 	mov    %rax,0xc0(%rsp)
   26958:	00 
   26959:	48 8d 05 a0 e9 ff ff 	lea    -0x1660(%rip),%rax        # 25300 <_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h9716022a15e5b13cE>
   26960:	48 89 84 24 c8 00 00 	mov    %rax,0xc8(%rsp)
   26967:	00 
   26968:	49 8b 7d 20          	mov    0x20(%r13),%rdi
   2696c:	49 8b 75 28          	mov    0x28(%r13),%rsi
   26970:	48 8d 05 29 09 22 00 	lea    0x220929(%rip),%rax        # 2472a0 <__init_array_end+0x1290>
   26977:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   2697c:	48 c7 44 24 18 02 00 	movq   $0x2,0x18(%rsp)
   26983:	00 00 
   26985:	48 c7 44 24 20 00 00 	movq   $0x0,0x20(%rsp)
   2698c:	00 00 
   2698e:	48 8d 84 24 b0 00 00 	lea    0xb0(%rsp),%rax
   26995:	00 
   26996:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   2699b:	48 c7 44 24 38 02 00 	movq   $0x2,0x38(%rsp)
   269a2:	00 00 
   269a4:	48 8d 54 24 10       	lea    0x10(%rsp),%rdx
   269a9:	e8 82 20 fe ff       	callq  8a30 <_ZN4core3fmt5write17h0db54a985afb558eE>
   269ae:	e9 cf 00 00 00       	jmpq   26a82 <_ZN3std10sys_common9backtrace15output_filename17hc0523369a697b0dbE+0x8a2>
   269b3:	48 85 db             	test   %rbx,%rbx
   269b6:	48 89 dd             	mov    %rbx,%rbp
   269b9:	48 8b 94 24 a0 00 00 	mov    0xa0(%rsp),%rdx
   269c0:	00 
   269c1:	0f 84 94 00 00 00    	je     26a5b <_ZN3std10sys_common9backtrace15output_filename17hc0523369a697b0dbE+0x87b>
   269c7:	48 89 94 24 b0 00 00 	mov    %rdx,0xb0(%rsp)
   269ce:	00 
   269cf:	48 89 ac 24 b8 00 00 	mov    %rbp,0xb8(%rsp)
   269d6:	00 
   269d7:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
   269dc:	48 8d b4 24 b0 00 00 	lea    0xb0(%rsp),%rsi
   269e3:	00 
   269e4:	e8 17 4a fe ff       	callq  b400 <_ZN96_$LT$core..str..lossy..Utf8LossyChunksIter$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hf04031f9d61ea481E>
   269e9:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
   269ee:	48 85 f6             	test   %rsi,%rsi
   269f1:	74 64                	je     26a57 <_ZN3std10sys_common9backtrace15output_filename17hc0523369a697b0dbE+0x877>
   269f3:	4c 8d 7c 24 10       	lea    0x10(%rsp),%r15
   269f8:	4c 8d b4 24 b0 00 00 	lea    0xb0(%rsp),%r14
   269ff:	00 
   26a00:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
   26a05:	48 8b 5c 24 28       	mov    0x28(%rsp),%rbx
   26a0a:	48 39 ea             	cmp    %rbp,%rdx
   26a0d:	74 5f                	je     26a6e <_ZN3std10sys_common9backtrace15output_filename17hc0523369a697b0dbE+0x88e>
   26a0f:	49 8b 7d 20          	mov    0x20(%r13),%rdi
   26a13:	49 8b 45 28          	mov    0x28(%r13),%rax
   26a17:	ff 50 18             	callq  *0x18(%rax)
   26a1a:	40 b5 01             	mov    $0x1,%bpl
   26a1d:	84 c0                	test   %al,%al
   26a1f:	75 63                	jne    26a84 <_ZN3std10sys_common9backtrace15output_filename17hc0523369a697b0dbE+0x8a4>
   26a21:	48 85 db             	test   %rbx,%rbx
   26a24:	74 14                	je     26a3a <_ZN3std10sys_common9backtrace15output_filename17hc0523369a697b0dbE+0x85a>
   26a26:	49 8b 7d 20          	mov    0x20(%r13),%rdi
   26a2a:	49 8b 45 28          	mov    0x28(%r13),%rax
   26a2e:	be fd ff 00 00       	mov    $0xfffd,%esi
   26a33:	ff 50 20             	callq  *0x20(%rax)
   26a36:	84 c0                	test   %al,%al
   26a38:	75 4a                	jne    26a84 <_ZN3std10sys_common9backtrace15output_filename17hc0523369a697b0dbE+0x8a4>
   26a3a:	4c 89 ff             	mov    %r15,%rdi
   26a3d:	4c 89 f6             	mov    %r14,%rsi
   26a40:	e8 bb 49 fe ff       	callq  b400 <_ZN96_$LT$core..str..lossy..Utf8LossyChunksIter$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hf04031f9d61ea481E>
   26a45:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
   26a4a:	48 85 f6             	test   %rsi,%rsi
   26a4d:	48 8b ac 24 a8 00 00 	mov    0xa8(%rsp),%rbp
   26a54:	00 
   26a55:	75 a9                	jne    26a00 <_ZN3std10sys_common9backtrace15output_filename17hc0523369a697b0dbE+0x820>
   26a57:	31 ed                	xor    %ebp,%ebp
   26a59:	eb 29                	jmp    26a84 <_ZN3std10sys_common9backtrace15output_filename17hc0523369a697b0dbE+0x8a4>
   26a5b:	48 8d 35 d6 69 01 00 	lea    0x169d6(%rip),%rsi        # 3d438 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0xad8>
   26a62:	4c 89 ef             	mov    %r13,%rdi
   26a65:	31 d2                	xor    %edx,%edx
   26a67:	e8 64 12 fe ff       	callq  7cd0 <_ZN4core3fmt9Formatter3pad17h7ef001ba65c2db9cE>
   26a6c:	eb 14                	jmp    26a82 <_ZN3std10sys_common9backtrace15output_filename17hc0523369a697b0dbE+0x8a2>
   26a6e:	48 85 db             	test   %rbx,%rbx
   26a71:	0f 85 2b 01 00 00    	jne    26ba2 <_ZN3std10sys_common9backtrace15output_filename17hc0523369a697b0dbE+0x9c2>
   26a77:	4c 89 ef             	mov    %r13,%rdi
   26a7a:	48 89 ea             	mov    %rbp,%rdx
   26a7d:	e8 4e 12 fe ff       	callq  7cd0 <_ZN4core3fmt9Formatter3pad17h7ef001ba65c2db9cE>
   26a82:	89 c5                	mov    %eax,%ebp
   26a84:	89 e8                	mov    %ebp,%eax
   26a86:	48 81 c4 e8 01 00 00 	add    $0x1e8,%rsp
   26a8d:	5b                   	pop    %rbx
   26a8e:	41 5c                	pop    %r12
   26a90:	41 5d                	pop    %r13
   26a92:	41 5e                	pop    %r14
   26a94:	41 5f                	pop    %r15
   26a96:	5d                   	pop    %rbp
   26a97:	c3                   	retq   
   26a98:	48 8d 35 7f 6b 01 00 	lea    0x16b7f(%rip),%rsi        # 3d61e <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0xcbe>
   26a9f:	90                   	nop
   26aa0:	48 89 da             	mov    %rbx,%rdx
   26aa3:	48 f7 da             	neg    %rdx
   26aa6:	48 c7 c1 ff ff ff ff 	mov    $0xffffffffffffffff,%rcx
   26aad:	0f 1f 00             	nopl   (%rax)
   26ab0:	48 8d 04 0a          	lea    (%rdx,%rcx,1),%rax
   26ab4:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
   26ab8:	74 46                	je     26b00 <_ZN3std10sys_common9backtrace15output_filename17hc0523369a697b0dbE+0x920>
   26aba:	41 0f b6 44 0c 01    	movzbl 0x1(%r12,%rcx,1),%eax
   26ac0:	48 83 c1 01          	add    $0x1,%rcx
   26ac4:	3c 2f                	cmp    $0x2f,%al
   26ac6:	75 e8                	jne    26ab0 <_ZN3std10sys_common9backtrace15output_filename17hc0523369a697b0dbE+0x8d0>
   26ac8:	0f 94 c2             	sete   %dl
   26acb:	80 c2 01             	add    $0x1,%dl
   26ace:	0f b6 d2             	movzbl %dl,%edx
   26ad1:	83 e2 01             	and    $0x1,%edx
   26ad4:	48 01 ca             	add    %rcx,%rdx
   26ad7:	bf 01 00 00 00       	mov    $0x1,%edi
   26adc:	48 39 d3             	cmp    %rdx,%rbx
   26adf:	0f 82 91 00 00 00    	jb     26b76 <_ZN3std10sys_common9backtrace15output_filename17hc0523369a697b0dbE+0x996>
   26ae5:	48 85 d2             	test   %rdx,%rdx
   26ae8:	74 20                	je     26b0a <_ZN3std10sys_common9backtrace15output_filename17hc0523369a697b0dbE+0x92a>
   26aea:	48 83 fa 01          	cmp    $0x1,%rdx
   26aee:	75 3a                	jne    26b2a <_ZN3std10sys_common9backtrace15output_filename17hc0523369a697b0dbE+0x94a>
   26af0:	49 39 f4             	cmp    %rsi,%r12
   26af3:	74 15                	je     26b0a <_ZN3std10sys_common9backtrace15output_filename17hc0523369a697b0dbE+0x92a>
   26af5:	41 80 3c 24 2e       	cmpb   $0x2e,(%r12)
   26afa:	74 0e                	je     26b0a <_ZN3std10sys_common9backtrace15output_filename17hc0523369a697b0dbE+0x92a>
   26afc:	eb 2c                	jmp    26b2a <_ZN3std10sys_common9backtrace15output_filename17hc0523369a697b0dbE+0x94a>
   26afe:	66 90                	xchg   %ax,%ax
   26b00:	48 89 da             	mov    %rbx,%rdx
   26b03:	31 ff                	xor    %edi,%edi
   26b05:	48 85 d2             	test   %rdx,%rdx
   26b08:	75 e0                	jne    26aea <_ZN3std10sys_common9backtrace15output_filename17hc0523369a697b0dbE+0x90a>
   26b0a:	48 01 d7             	add    %rdx,%rdi
   26b0d:	48 39 fb             	cmp    %rdi,%rbx
   26b10:	72 2c                	jb     26b3e <_ZN3std10sys_common9backtrace15output_filename17hc0523369a697b0dbE+0x95e>
   26b12:	49 01 fc             	add    %rdi,%r12
   26b15:	4c 89 64 24 10       	mov    %r12,0x10(%rsp)
   26b1a:	48 29 fb             	sub    %rdi,%rbx
   26b1d:	48 89 5c 24 18       	mov    %rbx,0x18(%rsp)
   26b22:	0f 85 78 ff ff ff    	jne    26aa0 <_ZN3std10sys_common9backtrace15output_filename17hc0523369a697b0dbE+0x8c0>
   26b28:	31 db                	xor    %ebx,%ebx
   26b2a:	40 8a 74 24 07       	mov    0x7(%rsp),%sil
   26b2f:	40 80 fe 02          	cmp    $0x2,%sil
   26b33:	0f 84 6b fc ff ff    	je     267a4 <_ZN3std10sys_common9backtrace15output_filename17hc0523369a697b0dbE+0x5c4>
   26b39:	e9 93 fd ff ff       	jmpq   268d1 <_ZN3std10sys_common9backtrace15output_filename17hc0523369a697b0dbE+0x6f1>
   26b3e:	48 89 de             	mov    %rbx,%rsi
   26b41:	e8 0a 11 fe ff       	callq  7c50 <_ZN4core5slice22slice_index_order_fail17h7bcf2f94ba9e06deE>
   26b46:	eb 72                	jmp    26bba <_ZN3std10sys_common9backtrace15output_filename17hc0523369a697b0dbE+0x9da>
   26b48:	48 89 c7             	mov    %rax,%rdi
   26b4b:	48 89 de             	mov    %rbx,%rsi
   26b4e:	e8 fd 10 fe ff       	callq  7c50 <_ZN4core5slice22slice_index_order_fail17h7bcf2f94ba9e06deE>
   26b53:	eb 65                	jmp    26bba <_ZN3std10sys_common9backtrace15output_filename17hc0523369a697b0dbE+0x9da>
   26b55:	48 89 ef             	mov    %rbp,%rdi
   26b58:	48 89 de             	mov    %rbx,%rsi
   26b5b:	e8 70 10 fe ff       	callq  7bd0 <_ZN4core5slice20slice_index_len_fail17h52736412c1ce1871E>
   26b60:	eb 58                	jmp    26bba <_ZN3std10sys_common9backtrace15output_filename17hc0523369a697b0dbE+0x9da>
   26b62:	80 f9 2f             	cmp    $0x2f,%cl
   26b65:	0f 94 c1             	sete   %cl
   26b68:	80 c1 01             	add    $0x1,%cl
   26b6b:	0f b6 f9             	movzbl %cl,%edi
   26b6e:	83 e7 01             	and    $0x1,%edi
   26b71:	48 01 c7             	add    %rax,%rdi
   26b74:	eb 10                	jmp    26b86 <_ZN3std10sys_common9backtrace15output_filename17hc0523369a697b0dbE+0x9a6>
   26b76:	3c 2f                	cmp    $0x2f,%al
   26b78:	0f 94 c0             	sete   %al
   26b7b:	04 01                	add    $0x1,%al
   26b7d:	0f b6 f8             	movzbl %al,%edi
   26b80:	83 e7 01             	and    $0x1,%edi
   26b83:	48 01 cf             	add    %rcx,%rdi
   26b86:	48 89 de             	mov    %rbx,%rsi
   26b89:	e8 42 10 fe ff       	callq  7bd0 <_ZN4core5slice20slice_index_len_fail17h52736412c1ce1871E>
   26b8e:	eb 2a                	jmp    26bba <_ZN3std10sys_common9backtrace15output_filename17hc0523369a697b0dbE+0x9da>
   26b90:	48 8d 3c 16          	lea    (%rsi,%rdx,1),%rdi
   26b94:	48 83 c7 01          	add    $0x1,%rdi
   26b98:	48 89 de             	mov    %rbx,%rsi
   26b9b:	e8 b0 10 fe ff       	callq  7c50 <_ZN4core5slice22slice_index_order_fail17h7bcf2f94ba9e06deE>
   26ba0:	eb 18                	jmp    26bba <_ZN3std10sys_common9backtrace15output_filename17hc0523369a697b0dbE+0x9da>
   26ba2:	48 8d 3d c7 5c 01 00 	lea    0x15cc7(%rip),%rdi        # 3c870 <str.1+0xc0>
   26ba9:	48 8d 15 90 fb 21 00 	lea    0x21fb90(%rip),%rdx        # 246740 <__init_array_end+0x730>
   26bb0:	be 23 00 00 00       	mov    $0x23,%esi
   26bb5:	e8 f6 07 fe ff       	callq  73b0 <_ZN4core9panicking5panic17h6861470adfbddef8E>
   26bba:	0f 0b                	ud2    
   26bbc:	eb 04                	jmp    26bc2 <_ZN3std10sys_common9backtrace15output_filename17hc0523369a697b0dbE+0x9e2>
   26bbe:	eb 02                	jmp    26bc2 <_ZN3std10sys_common9backtrace15output_filename17hc0523369a697b0dbE+0x9e2>
   26bc0:	eb 00                	jmp    26bc2 <_ZN3std10sys_common9backtrace15output_filename17hc0523369a697b0dbE+0x9e2>
   26bc2:	48 89 c3             	mov    %rax,%rbx
   26bc5:	48 8d bc 24 88 01 00 	lea    0x188(%rsp),%rdi
   26bcc:	00 
   26bcd:	e8 0e 00 00 00       	callq  26be0 <_ZN4core3ptr13drop_in_place17h27725f2abd080a6dE>
   26bd2:	48 89 df             	mov    %rbx,%rdi
   26bd5:	e8 c6 d4 fd ff       	callq  40a0 <_Unwind_Resume@plt>
   26bda:	0f 0b                	ud2    
   26bdc:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000026be0 <_ZN4core3ptr13drop_in_place17h27725f2abd080a6dE>:
   26be0:	48 83 3f 00          	cmpq   $0x0,(%rdi)
   26be4:	74 10                	je     26bf6 <_ZN4core3ptr13drop_in_place17h27725f2abd080a6dE+0x16>
   26be6:	48 83 7f 10 00       	cmpq   $0x0,0x10(%rdi)
   26beb:	74 09                	je     26bf6 <_ZN4core3ptr13drop_in_place17h27725f2abd080a6dE+0x16>
   26bed:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
   26bf1:	e9 1a e8 fd ff       	jmpq   5410 <__rust_dealloc>
   26bf6:	c3                   	retq   
   26bf7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   26bfe:	00 00 

0000000000026c00 <_ZN3std4path10Components15len_before_body17h91c7353a6092624aE>:
   26c00:	50                   	push   %rax
   26c01:	8a 4f 39             	mov    0x39(%rdi),%cl
   26c04:	31 c0                	xor    %eax,%eax
   26c06:	84 c9                	test   %cl,%cl
   26c08:	0f 95 c0             	setne  %al
   26c0b:	31 d2                	xor    %edx,%edx
   26c0d:	80 f9 01             	cmp    $0x1,%cl
   26c10:	48 8d 74 00 ff       	lea    -0x1(%rax,%rax,1),%rsi
   26c15:	48 0f 44 f2          	cmove  %rdx,%rsi
   26c19:	48 83 c6 01          	add    $0x1,%rsi
   26c1d:	b8 00 00 00 00       	mov    $0x0,%eax
   26c22:	48 83 fe 01          	cmp    $0x1,%rsi
   26c26:	0f 87 6f 01 00 00    	ja     26d9b <_ZN3std4path10Components15len_before_body17h91c7353a6092624aE+0x19b>
   26c2c:	0f b6 57 38          	movzbl 0x38(%rdi),%edx
   26c30:	48 83 fe 01          	cmp    $0x1,%rsi
   26c34:	77 04                	ja     26c3a <_ZN3std4path10Components15len_before_body17h91c7353a6092624aE+0x3a>
   26c36:	84 d2                	test   %dl,%dl
   26c38:	74 42                	je     26c7c <_ZN3std4path10Components15len_before_body17h91c7353a6092624aE+0x7c>
   26c3a:	31 c0                	xor    %eax,%eax
   26c3c:	84 c9                	test   %cl,%cl
   26c3e:	0f 85 5f 01 00 00    	jne    26da3 <_ZN3std4path10Components15len_before_body17h91c7353a6092624aE+0x1a3>
   26c44:	31 c9                	xor    %ecx,%ecx
   26c46:	80 7f 10 06          	cmpb   $0x6,0x10(%rdi)
   26c4a:	48 8d 77 10          	lea    0x10(%rdi),%rsi
   26c4e:	48 0f 44 f1          	cmove  %rcx,%rsi
   26c52:	74 20                	je     26c74 <_ZN3std4path10Components15len_before_body17h91c7353a6092624aE+0x74>
   26c54:	0f b6 3e             	movzbl (%rsi),%edi
   26c57:	b9 02 00 00 00       	mov    $0x2,%ecx
   26c5c:	4c 8d 05 a1 40 01 00 	lea    0x140a1(%rip),%r8        # 3ad04 <_ZN4core7unicode12unicode_data2cc19BITSET_INDEX_CHUNKS17h8a1f39cd536e9344E+0x844>
   26c63:	49 63 3c b8          	movslq (%r8,%rdi,4),%rdi
   26c67:	4c 01 c7             	add    %r8,%rdi
   26c6a:	ff e7                	jmpq   *%rdi
   26c6c:	48 8b 4e 10          	mov    0x10(%rsi),%rcx
   26c70:	48 83 c1 04          	add    $0x4,%rcx
   26c74:	48 01 d0             	add    %rdx,%rax
   26c77:	48 01 c8             	add    %rcx,%rax
   26c7a:	59                   	pop    %rcx
   26c7b:	c3                   	retq   
   26c7c:	8a 47 10             	mov    0x10(%rdi),%al
   26c7f:	8d 50 fb             	lea    -0x5(%rax),%edx
   26c82:	80 fa 01             	cmp    $0x1,%dl
   26c85:	0f 87 0c 01 00 00    	ja     26d97 <_ZN3std4path10Components15len_before_body17h91c7353a6092624aE+0x197>
   26c8b:	48 8b 77 08          	mov    0x8(%rdi),%rsi
   26c8f:	4c 8d 47 10          	lea    0x10(%rdi),%r8
   26c93:	31 d2                	xor    %edx,%edx
   26c95:	3c 06                	cmp    $0x6,%al
   26c97:	4c 0f 44 c2          	cmove  %rdx,%r8
   26c9b:	0f 84 da 00 00 00    	je     26d7b <_ZN3std4path10Components15len_before_body17h91c7353a6092624aE+0x17b>
   26ca1:	41 0f b6 00          	movzbl (%r8),%eax
   26ca5:	ba 02 00 00 00       	mov    $0x2,%edx
   26caa:	4c 8d 0d 3b 40 01 00 	lea    0x1403b(%rip),%r9        # 3acec <_ZN4core7unicode12unicode_data2cc19BITSET_INDEX_CHUNKS17h8a1f39cd536e9344E+0x82c>
   26cb1:	49 63 04 81          	movslq (%r9,%rax,4),%rax
   26cb5:	4c 01 c8             	add    %r9,%rax
   26cb8:	ff e0                	jmpq   *%rax
   26cba:	49 8b 50 10          	mov    0x10(%r8),%rdx
   26cbe:	48 83 c2 04          	add    $0x4,%rdx
   26cc2:	48 39 d6             	cmp    %rdx,%rsi
   26cc5:	0f 83 b0 00 00 00    	jae    26d7b <_ZN3std4path10Components15len_before_body17h91c7353a6092624aE+0x17b>
   26ccb:	48 89 d7             	mov    %rdx,%rdi
   26cce:	e8 7d 0f fe ff       	callq  7c50 <_ZN4core5slice22slice_index_order_fail17h7bcf2f94ba9e06deE>
   26cd3:	0f 0b                	ud2    
   26cd5:	b9 06 00 00 00       	mov    $0x6,%ecx
   26cda:	48 01 d0             	add    %rdx,%rax
   26cdd:	48 01 c8             	add    %rcx,%rax
   26ce0:	59                   	pop    %rcx
   26ce1:	c3                   	retq   
   26ce2:	48 8b 4e 10          	mov    0x10(%rsi),%rcx
   26ce6:	48 8b 76 20          	mov    0x20(%rsi),%rsi
   26cea:	48 8d 7e 01          	lea    0x1(%rsi),%rdi
   26cee:	48 85 f6             	test   %rsi,%rsi
   26cf1:	48 0f 44 fe          	cmove  %rsi,%rdi
   26cf5:	48 01 f9             	add    %rdi,%rcx
   26cf8:	48 83 c1 08          	add    $0x8,%rcx
   26cfc:	48 01 d0             	add    %rdx,%rax
   26cff:	48 01 c8             	add    %rcx,%rax
   26d02:	59                   	pop    %rcx
   26d03:	c3                   	retq   
   26d04:	48 8b 4e 10          	mov    0x10(%rsi),%rcx
   26d08:	48 8b 76 20          	mov    0x20(%rsi),%rsi
   26d0c:	48 8d 7e 01          	lea    0x1(%rsi),%rdi
   26d10:	48 85 f6             	test   %rsi,%rsi
   26d13:	48 0f 44 fe          	cmove  %rsi,%rdi
   26d17:	48 01 f9             	add    %rdi,%rcx
   26d1a:	48 83 c1 02          	add    $0x2,%rcx
   26d1e:	48 01 d0             	add    %rdx,%rax
   26d21:	48 01 c8             	add    %rcx,%rax
   26d24:	59                   	pop    %rcx
   26d25:	c3                   	retq   
   26d26:	ba 06 00 00 00       	mov    $0x6,%edx
   26d2b:	48 39 d6             	cmp    %rdx,%rsi
   26d2e:	73 4b                	jae    26d7b <_ZN3std4path10Components15len_before_body17h91c7353a6092624aE+0x17b>
   26d30:	eb 99                	jmp    26ccb <_ZN3std4path10Components15len_before_body17h91c7353a6092624aE+0xcb>
   26d32:	4d 8b 48 10          	mov    0x10(%r8),%r9
   26d36:	49 8b 50 20          	mov    0x20(%r8),%rdx
   26d3a:	48 8d 42 01          	lea    0x1(%rdx),%rax
   26d3e:	48 85 d2             	test   %rdx,%rdx
   26d41:	48 0f 44 c2          	cmove  %rdx,%rax
   26d45:	49 8d 14 01          	lea    (%r9,%rax,1),%rdx
   26d49:	48 83 c2 08          	add    $0x8,%rdx
   26d4d:	48 39 d6             	cmp    %rdx,%rsi
   26d50:	73 29                	jae    26d7b <_ZN3std4path10Components15len_before_body17h91c7353a6092624aE+0x17b>
   26d52:	e9 74 ff ff ff       	jmpq   26ccb <_ZN3std4path10Components15len_before_body17h91c7353a6092624aE+0xcb>
   26d57:	4d 8b 48 10          	mov    0x10(%r8),%r9
   26d5b:	49 8b 50 20          	mov    0x20(%r8),%rdx
   26d5f:	48 8d 42 01          	lea    0x1(%rdx),%rax
   26d63:	48 85 d2             	test   %rdx,%rdx
   26d66:	48 0f 44 c2          	cmove  %rdx,%rax
   26d6a:	49 8d 14 01          	lea    (%r9,%rax,1),%rdx
   26d6e:	48 83 c2 02          	add    $0x2,%rdx
   26d72:	48 39 d6             	cmp    %rdx,%rsi
   26d75:	0f 82 50 ff ff ff    	jb     26ccb <_ZN3std4path10Components15len_before_body17h91c7353a6092624aE+0xcb>
   26d7b:	48 8b 07             	mov    (%rdi),%rax
   26d7e:	4c 8d 0c 10          	lea    (%rax,%rdx,1),%r9
   26d82:	45 31 c0             	xor    %r8d,%r8d
   26d85:	48 39 f2             	cmp    %rsi,%rdx
   26d88:	41 0f 95 c2          	setne  %r10b
   26d8c:	4c 8d 5c 10 01       	lea    0x1(%rax,%rdx,1),%r11
   26d91:	4d 0f 44 d9          	cmove  %r9,%r11
   26d95:	75 16                	jne    26dad <_ZN3std4path10Components15len_before_body17h91c7353a6092624aE+0x1ad>
   26d97:	31 d2                	xor    %edx,%edx
   26d99:	31 c0                	xor    %eax,%eax
   26d9b:	84 c9                	test   %cl,%cl
   26d9d:	0f 84 a1 fe ff ff    	je     26c44 <_ZN3std4path10Components15len_before_body17h91c7353a6092624aE+0x44>
   26da3:	31 c9                	xor    %ecx,%ecx
   26da5:	48 01 d0             	add    %rdx,%rax
   26da8:	48 01 c8             	add    %rcx,%rax
   26dab:	59                   	pop    %rcx
   26dac:	c3                   	retq   
   26dad:	48 01 f0             	add    %rsi,%rax
   26db0:	41 8a 31             	mov    (%r9),%sil
   26db3:	49 39 c3             	cmp    %rax,%r11
   26db6:	74 12                	je     26dca <_ZN3std4path10Components15len_before_body17h91c7353a6092624aE+0x1ca>
   26db8:	40 80 fe 2e          	cmp    $0x2e,%sil
   26dbc:	75 0c                	jne    26dca <_ZN3std4path10Components15len_before_body17h91c7353a6092624aE+0x1ca>
   26dbe:	45 88 d0             	mov    %r10b,%r8b
   26dc1:	43 80 3c 01 2f       	cmpb   $0x2f,(%r9,%r8,1)
   26dc6:	75 cf                	jne    26d97 <_ZN3std4path10Components15len_before_body17h91c7353a6092624aE+0x197>
   26dc8:	eb 16                	jmp    26de0 <_ZN3std4path10Components15len_before_body17h91c7353a6092624aE+0x1e0>
   26dca:	31 d2                	xor    %edx,%edx
   26dcc:	49 39 c3             	cmp    %rax,%r11
   26dcf:	0f 85 65 fe ff ff    	jne    26c3a <_ZN3std4path10Components15len_before_body17h91c7353a6092624aE+0x3a>
   26dd5:	b8 00 00 00 00       	mov    $0x0,%eax
   26dda:	40 80 fe 2e          	cmp    $0x2e,%sil
   26dde:	75 bb                	jne    26d9b <_ZN3std4path10Components15len_before_body17h91c7353a6092624aE+0x19b>
   26de0:	b8 01 00 00 00       	mov    $0x1,%eax
   26de5:	31 d2                	xor    %edx,%edx
   26de7:	84 c9                	test   %cl,%cl
   26de9:	75 b8                	jne    26da3 <_ZN3std4path10Components15len_before_body17h91c7353a6092624aE+0x1a3>
   26deb:	e9 54 fe ff ff       	jmpq   26c44 <_ZN3std4path10Components15len_before_body17h91c7353a6092624aE+0x44>

0000000000026df0 <_ZN80_$LT$std..path..Components$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hede1176d26c248aaE>:
   26df0:	55                   	push   %rbp
   26df1:	41 57                	push   %r15
   26df3:	41 56                	push   %r14
   26df5:	53                   	push   %rbx
   26df6:	48 83 ec 58          	sub    $0x58,%rsp
   26dfa:	8a 46 39             	mov    0x39(%rsi),%al
   26dfd:	44 8a 76 3a          	mov    0x3a(%rsi),%r14b
   26e01:	44 38 f0             	cmp    %r14b,%al
   26e04:	0f 87 b9 03 00 00    	ja     271c3 <_ZN80_$LT$std..path..Components$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hede1176d26c248aaE+0x3d3>
   26e0a:	3c 03                	cmp    $0x3,%al
   26e0c:	0f 84 b1 03 00 00    	je     271c3 <_ZN80_$LT$std..path..Components$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hede1176d26c248aaE+0x3d3>
   26e12:	41 80 fe 03          	cmp    $0x3,%r14b
   26e16:	0f 84 a7 03 00 00    	je     271c3 <_ZN80_$LT$std..path..Components$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hede1176d26c248aaE+0x3d3>
   26e1c:	0f b6 c0             	movzbl %al,%eax
   26e1f:	4c 8d 05 f6 3e 01 00 	lea    0x13ef6(%rip),%r8        # 3ad1c <_ZN4core7unicode12unicode_data2cc19BITSET_INDEX_CHUNKS17h8a1f39cd536e9344E+0x85c>
   26e26:	49 63 04 80          	movslq (%r8,%rax,4),%rax
   26e2a:	4c 01 c0             	add    %r8,%rax
   26e2d:	ff e0                	jmpq   *%rax
   26e2f:	c6 46 39 02          	movb   $0x2,0x39(%rsi)
   26e33:	80 7e 38 00          	cmpb   $0x0,0x38(%rsi)
   26e37:	75 79                	jne    26eb2 <_ZN80_$LT$std..path..Components$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hede1176d26c248aaE+0xc2>
   26e39:	8a 46 10             	mov    0x10(%rsi),%al
   26e3c:	b2 02                	mov    $0x2,%dl
   26e3e:	3c 03                	cmp    $0x3,%al
   26e40:	0f 82 6d 02 00 00    	jb     270b3 <_ZN80_$LT$std..path..Components$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hede1176d26c248aaE+0x2c3>
   26e46:	3c 05                	cmp    $0x5,%al
   26e48:	0f 84 65 02 00 00    	je     270b3 <_ZN80_$LT$std..path..Components$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hede1176d26c248aaE+0x2c3>
   26e4e:	3c 06                	cmp    $0x6,%al
   26e50:	75 75                	jne    26ec7 <_ZN80_$LT$std..path..Components$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hede1176d26c248aaE+0xd7>
   26e52:	48 8b 2e             	mov    (%rsi),%rbp
   26e55:	48 8b 46 08          	mov    0x8(%rsi),%rax
   26e59:	4c 8d 7d 01          	lea    0x1(%rbp),%r15
   26e5d:	4c 89 f9             	mov    %r15,%rcx
   26e60:	48 85 c0             	test   %rax,%rax
   26e63:	48 0f 44 cd          	cmove  %rbp,%rcx
   26e67:	0f 84 46 02 00 00    	je     270b3 <_ZN80_$LT$std..path..Components$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hede1176d26c248aaE+0x2c3>
   26e6d:	48 8d 1c 28          	lea    (%rax,%rbp,1),%rbx
   26e71:	44 8a 5d 00          	mov    0x0(%rbp),%r11b
   26e75:	48 39 d9             	cmp    %rbx,%rcx
   26e78:	74 11                	je     26e8b <_ZN80_$LT$std..path..Components$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hede1176d26c248aaE+0x9b>
   26e7a:	41 80 fb 2e          	cmp    $0x2e,%r11b
   26e7e:	75 0b                	jne    26e8b <_ZN80_$LT$std..path..Components$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hede1176d26c248aaE+0x9b>
   26e80:	80 39 2f             	cmpb   $0x2f,(%rcx)
   26e83:	0f 85 2a 02 00 00    	jne    270b3 <_ZN80_$LT$std..path..Components$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hede1176d26c248aaE+0x2c3>
   26e89:	eb 13                	jmp    26e9e <_ZN80_$LT$std..path..Components$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hede1176d26c248aaE+0xae>
   26e8b:	48 39 d9             	cmp    %rbx,%rcx
   26e8e:	0f 85 1f 02 00 00    	jne    270b3 <_ZN80_$LT$std..path..Components$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hede1176d26c248aaE+0x2c3>
   26e94:	41 80 fb 2e          	cmp    $0x2e,%r11b
   26e98:	0f 85 15 02 00 00    	jne    270b3 <_ZN80_$LT$std..path..Components$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hede1176d26c248aaE+0x2c3>
   26e9e:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
   26ea2:	4c 89 3e             	mov    %r15,(%rsi)
   26ea5:	48 89 46 08          	mov    %rax,0x8(%rsi)
   26ea9:	48 c7 07 02 00 00 00 	movq   $0x2,(%rdi)
   26eb0:	eb 2c                	jmp    26ede <_ZN80_$LT$std..path..Components$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hede1176d26c248aaE+0xee>
   26eb2:	48 8b 46 08          	mov    0x8(%rsi),%rax
   26eb6:	48 85 c0             	test   %rax,%rax
   26eb9:	74 15                	je     26ed0 <_ZN80_$LT$std..path..Components$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hede1176d26c248aaE+0xe0>
   26ebb:	48 83 06 01          	addq   $0x1,(%rsi)
   26ebf:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
   26ec3:	48 89 46 08          	mov    %rax,0x8(%rsi)
   26ec7:	48 c7 07 01 00 00 00 	movq   $0x1,(%rdi)
   26ece:	eb 0e                	jmp    26ede <_ZN80_$LT$std..path..Components$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hede1176d26c248aaE+0xee>
   26ed0:	bf 01 00 00 00       	mov    $0x1,%edi
   26ed5:	31 f6                	xor    %esi,%esi
   26ed7:	e8 74 0d fe ff       	callq  7c50 <_ZN4core5slice22slice_index_order_fail17h7bcf2f94ba9e06deE>
   26edc:	0f 0b                	ud2    
   26ede:	48 83 c4 58          	add    $0x58,%rsp
   26ee2:	5b                   	pop    %rbx
   26ee3:	41 5e                	pop    %r14
   26ee5:	41 5f                	pop    %r15
   26ee7:	5d                   	pop    %rbp
   26ee8:	c3                   	retq   
   26ee9:	48 8d 3d 31 67 01 00 	lea    0x16731(%rip),%rdi        # 3d621 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0xcc1>
   26ef0:	48 8d 15 c9 03 22 00 	lea    0x2203c9(%rip),%rdx        # 2472c0 <__init_array_end+0x12b0>
   26ef7:	be 28 00 00 00       	mov    $0x28,%esi
   26efc:	e8 bf c5 ff ff       	callq  234c0 <_ZN3std9panicking11begin_panic17hc5f3eabb2c219d56E>
   26f01:	0f 0b                	ud2    
   26f03:	48 8d 4e 10          	lea    0x10(%rsi),%rcx
   26f07:	44 8a 19             	mov    (%rcx),%r11b
   26f0a:	31 c0                	xor    %eax,%eax
   26f0c:	41 80 fb 06          	cmp    $0x6,%r11b
   26f10:	48 0f 45 c1          	cmovne %rcx,%rax
   26f14:	0f 85 c7 00 00 00    	jne    26fe1 <_ZN80_$LT$std..path..Components$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hede1176d26c248aaE+0x1f1>
   26f1a:	c6 46 39 01          	movb   $0x1,0x39(%rsi)
   26f1e:	b2 01                	mov    $0x1,%dl
   26f20:	44 38 f2             	cmp    %r14b,%dl
   26f23:	0f 87 9a 02 00 00    	ja     271c3 <_ZN80_$LT$std..path..Components$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hede1176d26c248aaE+0x3d3>
   26f29:	0f b6 c2             	movzbl %dl,%eax
   26f2c:	49 63 04 80          	movslq (%r8,%rax,4),%rax
   26f30:	4c 01 c0             	add    %r8,%rax
   26f33:	ff e0                	jmpq   *%rax
   26f35:	4c 8b 5e 08          	mov    0x8(%rsi),%r11
   26f39:	4d 85 db             	test   %r11,%r11
   26f3c:	0f 84 7d 02 00 00    	je     271bf <_ZN80_$LT$std..path..Components$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hede1176d26c248aaE+0x3cf>
   26f42:	48 8b 16             	mov    (%rsi),%rdx
   26f45:	4c 89 d8             	mov    %r11,%rax
   26f48:	48 f7 d8             	neg    %rax
   26f4b:	48 c7 c3 ff ff ff ff 	mov    $0xffffffffffffffff,%rbx
   26f52:	31 ed                	xor    %ebp,%ebp
   26f54:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   26f5b:	00 00 00 
   26f5e:	66 90                	xchg   %ax,%ax
   26f60:	48 8d 0c 18          	lea    (%rax,%rbx,1),%rcx
   26f64:	48 83 f9 ff          	cmp    $0xffffffffffffffff,%rcx
   26f68:	0f 84 c4 00 00 00    	je     27032 <_ZN80_$LT$std..path..Components$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hede1176d26c248aaE+0x242>
   26f6e:	0f b6 4c 1a 01       	movzbl 0x1(%rdx,%rbx,1),%ecx
   26f73:	48 83 c3 01          	add    $0x1,%rbx
   26f77:	80 f9 2f             	cmp    $0x2f,%cl
   26f7a:	75 e4                	jne    26f60 <_ZN80_$LT$std..path..Components$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hede1176d26c248aaE+0x170>
   26f7c:	0f 94 c0             	sete   %al
   26f7f:	04 01                	add    $0x1,%al
   26f81:	0f b6 c0             	movzbl %al,%eax
   26f84:	83 e0 01             	and    $0x1,%eax
   26f87:	48 01 d8             	add    %rbx,%rax
   26f8a:	bd 01 00 00 00       	mov    $0x1,%ebp
   26f8f:	49 39 c3             	cmp    %rax,%r11
   26f92:	0f 82 66 03 00 00    	jb     272fe <_ZN80_$LT$std..path..Components$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hede1176d26c248aaE+0x50e>
   26f98:	48 01 c5             	add    %rax,%rbp
   26f9b:	48 85 c0             	test   %rax,%rax
   26f9e:	0f 84 9d 00 00 00    	je     27041 <_ZN80_$LT$std..path..Components$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hede1176d26c248aaE+0x251>
   26fa4:	48 83 f8 01          	cmp    $0x1,%rax
   26fa8:	0f 84 9d 00 00 00    	je     2704b <_ZN80_$LT$std..path..Components$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hede1176d26c248aaE+0x25b>
   26fae:	48 83 f8 02          	cmp    $0x2,%rax
   26fb2:	0f 85 d8 00 00 00    	jne    27090 <_ZN80_$LT$std..path..Components$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hede1176d26c248aaE+0x2a0>
   26fb8:	48 8d 05 60 66 01 00 	lea    0x16660(%rip),%rax        # 3d61f <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0xcbf>
   26fbf:	48 39 c2             	cmp    %rax,%rdx
   26fc2:	0f 84 f9 00 00 00    	je     270c1 <_ZN80_$LT$std..path..Components$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hede1176d26c248aaE+0x2d1>
   26fc8:	0f b7 02             	movzwl (%rdx),%eax
   26fcb:	3d 2e 2e 00 00       	cmp    $0x2e2e,%eax
   26fd0:	0f 84 eb 00 00 00    	je     270c1 <_ZN80_$LT$std..path..Components$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hede1176d26c248aaE+0x2d1>
   26fd6:	41 b9 02 00 00 00    	mov    $0x2,%r9d
   26fdc:	e9 82 01 00 00       	jmpq   27163 <_ZN80_$LT$std..path..Components$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hede1176d26c248aaE+0x373>
   26fe1:	0f b6 08             	movzbl (%rax),%ecx
   26fe4:	48 8d 15 41 3d 01 00 	lea    0x13d41(%rip),%rdx        # 3ad2c <_ZN4core7unicode12unicode_data2cc19BITSET_INDEX_CHUNKS17h8a1f39cd536e9344E+0x86c>
   26feb:	48 63 1c 8a          	movslq (%rdx,%rcx,4),%rbx
   26fef:	48 01 d3             	add    %rdx,%rbx
   26ff2:	ff e3                	jmpq   *%rbx
   26ff4:	c6 46 39 01          	movb   $0x1,0x39(%rsi)
   26ff8:	4c 8b 0e             	mov    (%rsi),%r9
   26ffb:	4c 8b 46 08          	mov    0x8(%rsi),%r8
   26fff:	bb 02 00 00 00       	mov    $0x2,%ebx
   27004:	48 8d 15 39 3d 01 00 	lea    0x13d39(%rip),%rdx        # 3ad44 <_ZN4core7unicode12unicode_data2cc19BITSET_INDEX_CHUNKS17h8a1f39cd536e9344E+0x884>
   2700b:	48 63 2c 8a          	movslq (%rdx,%rcx,4),%rbp
   2700f:	48 01 d5             	add    %rdx,%rbp
   27012:	ff e5                	jmpq   *%rbp
   27014:	48 8b 58 10          	mov    0x10(%rax),%rbx
   27018:	48 83 c3 04          	add    $0x4,%rbx
   2701c:	49 39 d8             	cmp    %rbx,%r8
   2701f:	0f 83 02 02 00 00    	jae    27227 <_ZN80_$LT$std..path..Components$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hede1176d26c248aaE+0x437>
   27025:	48 89 df             	mov    %rbx,%rdi
   27028:	4c 89 c6             	mov    %r8,%rsi
   2702b:	e8 a0 0b fe ff       	callq  7bd0 <_ZN4core5slice20slice_index_len_fail17h52736412c1ce1871E>
   27030:	0f 0b                	ud2    
   27032:	4c 89 d8             	mov    %r11,%rax
   27035:	48 01 c5             	add    %rax,%rbp
   27038:	48 85 c0             	test   %rax,%rax
   2703b:	0f 85 63 ff ff ff    	jne    26fa4 <_ZN80_$LT$std..path..Components$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hede1176d26c248aaE+0x1b4>
   27041:	bb 05 00 00 00       	mov    $0x5,%ebx
   27046:	e9 20 01 00 00       	jmpq   2716b <_ZN80_$LT$std..path..Components$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hede1176d26c248aaE+0x37b>
   2704b:	48 8d 05 cc 65 01 00 	lea    0x165cc(%rip),%rax        # 3d61e <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0xcbe>
   27052:	48 39 c2             	cmp    %rax,%rdx
   27055:	74 09                	je     27060 <_ZN80_$LT$std..path..Components$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hede1176d26c248aaE+0x270>
   27057:	80 3a 2e             	cmpb   $0x2e,(%rdx)
   2705a:	0f 85 fd 00 00 00    	jne    2715d <_ZN80_$LT$std..path..Components$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hede1176d26c248aaE+0x36d>
   27060:	8a 46 10             	mov    0x10(%rsi),%al
   27063:	31 c9                	xor    %ecx,%ecx
   27065:	3c 03                	cmp    $0x3,%al
   27067:	0f 92 c1             	setb   %cl
   2706a:	3c 06                	cmp    $0x6,%al
   2706c:	b8 02 00 00 00       	mov    $0x2,%eax
   27071:	0f 45 c1             	cmovne %ecx,%eax
   27074:	31 c9                	xor    %ecx,%ecx
   27076:	a8 01                	test   $0x1,%al
   27078:	0f 94 c1             	sete   %cl
   2707b:	3c 02                	cmp    $0x2,%al
   2707d:	48 8d 44 49 02       	lea    0x2(%rcx,%rcx,2),%rax
   27082:	bb 05 00 00 00       	mov    $0x5,%ebx
   27087:	48 0f 45 d8          	cmovne %rax,%rbx
   2708b:	e9 db 00 00 00       	jmpq   2716b <_ZN80_$LT$std..path..Components$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hede1176d26c248aaE+0x37b>
   27090:	bb 04 00 00 00       	mov    $0x4,%ebx
   27095:	49 89 d2             	mov    %rdx,%r10
   27098:	49 89 c1             	mov    %rax,%r9
   2709b:	e9 cb 00 00 00       	jmpq   2716b <_ZN80_$LT$std..path..Components$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hede1176d26c248aaE+0x37b>
   270a0:	48 8b 58 10          	mov    0x10(%rax),%rbx
   270a4:	48 83 c3 04          	add    $0x4,%rbx
   270a8:	c6 46 39 01          	movb   $0x1,0x39(%rsi)
   270ac:	b2 01                	mov    $0x1,%dl
   270ae:	48 85 db             	test   %rbx,%rbx
   270b1:	75 66                	jne    27119 <_ZN80_$LT$std..path..Components$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hede1176d26c248aaE+0x329>
   270b3:	44 38 f2             	cmp    %r14b,%dl
   270b6:	0f 86 6d fe ff ff    	jbe    26f29 <_ZN80_$LT$std..path..Components$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hede1176d26c248aaE+0x139>
   270bc:	e9 02 01 00 00       	jmpq   271c3 <_ZN80_$LT$std..path..Components$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hede1176d26c248aaE+0x3d3>
   270c1:	bb 03 00 00 00       	mov    $0x3,%ebx
   270c6:	e9 a0 00 00 00       	jmpq   2716b <_ZN80_$LT$std..path..Components$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hede1176d26c248aaE+0x37b>
   270cb:	48 8b 50 10          	mov    0x10(%rax),%rdx
   270cf:	48 8b 58 20          	mov    0x20(%rax),%rbx
   270d3:	48 8d 6b 01          	lea    0x1(%rbx),%rbp
   270d7:	48 85 db             	test   %rbx,%rbx
   270da:	48 0f 44 eb          	cmove  %rbx,%rbp
   270de:	48 8d 1c 2a          	lea    (%rdx,%rbp,1),%rbx
   270e2:	48 83 c3 08          	add    $0x8,%rbx
   270e6:	c6 46 39 01          	movb   $0x1,0x39(%rsi)
   270ea:	b2 01                	mov    $0x1,%dl
   270ec:	48 85 db             	test   %rbx,%rbx
   270ef:	74 c2                	je     270b3 <_ZN80_$LT$std..path..Components$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hede1176d26c248aaE+0x2c3>
   270f1:	eb 26                	jmp    27119 <_ZN80_$LT$std..path..Components$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hede1176d26c248aaE+0x329>
   270f3:	48 8b 50 10          	mov    0x10(%rax),%rdx
   270f7:	48 8b 58 20          	mov    0x20(%rax),%rbx
   270fb:	48 8d 6b 01          	lea    0x1(%rbx),%rbp
   270ff:	48 85 db             	test   %rbx,%rbx
   27102:	48 0f 44 eb          	cmove  %rbx,%rbp
   27106:	48 8d 1c 2a          	lea    (%rdx,%rbp,1),%rbx
   2710a:	48 83 c3 02          	add    $0x2,%rbx
   2710e:	c6 46 39 01          	movb   $0x1,0x39(%rsi)
   27112:	b2 01                	mov    $0x1,%dl
   27114:	48 85 db             	test   %rbx,%rbx
   27117:	74 9a                	je     270b3 <_ZN80_$LT$std..path..Components$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hede1176d26c248aaE+0x2c3>
   27119:	4c 8b 0e             	mov    (%rsi),%r9
   2711c:	4c 8b 46 08          	mov    0x8(%rsi),%r8
   27120:	bb 02 00 00 00       	mov    $0x2,%ebx
   27125:	48 8d 15 18 3c 01 00 	lea    0x13c18(%rip),%rdx        # 3ad44 <_ZN4core7unicode12unicode_data2cc19BITSET_INDEX_CHUNKS17h8a1f39cd536e9344E+0x884>
   2712c:	48 63 2c 8a          	movslq (%rdx,%rcx,4),%rbp
   27130:	48 01 d5             	add    %rdx,%rbp
   27133:	ff e5                	jmpq   *%rbp
   27135:	48 8b 50 10          	mov    0x10(%rax),%rdx
   27139:	48 8b 68 20          	mov    0x20(%rax),%rbp
   2713d:	48 8d 5d 01          	lea    0x1(%rbp),%rbx
   27141:	48 85 ed             	test   %rbp,%rbp
   27144:	48 0f 44 dd          	cmove  %rbp,%rbx
   27148:	48 01 d3             	add    %rdx,%rbx
   2714b:	48 83 c3 08          	add    $0x8,%rbx
   2714f:	49 39 d8             	cmp    %rbx,%r8
   27152:	0f 83 cf 00 00 00    	jae    27227 <_ZN80_$LT$std..path..Components$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hede1176d26c248aaE+0x437>
   27158:	e9 c8 fe ff ff       	jmpq   27025 <_ZN80_$LT$std..path..Components$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hede1176d26c248aaE+0x235>
   2715d:	41 b9 01 00 00 00    	mov    $0x1,%r9d
   27163:	bb 04 00 00 00       	mov    $0x4,%ebx
   27168:	49 89 d2             	mov    %rdx,%r10
   2716b:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
   27170:	48 89 44 24 50       	mov    %rax,0x50(%rsp)
   27175:	0f 10 04 24          	movups (%rsp),%xmm0
   27179:	0f 10 4c 24 10       	movups 0x10(%rsp),%xmm1
   2717e:	0f 29 4c 24 40       	movaps %xmm1,0x40(%rsp)
   27183:	0f 29 44 24 30       	movaps %xmm0,0x30(%rsp)
   27188:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   2718d:	0f 29 4c 24 10       	movaps %xmm1,0x10(%rsp)
   27192:	0f 29 04 24          	movaps %xmm0,(%rsp)
   27196:	4c 89 d8             	mov    %r11,%rax
   27199:	48 29 e8             	sub    %rbp,%rax
   2719c:	0f 82 4f 01 00 00    	jb     272f1 <_ZN80_$LT$std..path..Components$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hede1176d26c248aaE+0x501>
   271a2:	48 01 ea             	add    %rbp,%rdx
   271a5:	48 89 16             	mov    %rdx,(%rsi)
   271a8:	48 89 46 08          	mov    %rax,0x8(%rsi)
   271ac:	48 83 fb 05          	cmp    $0x5,%rbx
   271b0:	75 1d                	jne    271cf <_ZN80_$LT$std..path..Components$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hede1176d26c248aaE+0x3df>
   271b2:	b2 02                	mov    $0x2,%dl
   271b4:	44 38 f2             	cmp    %r14b,%dl
   271b7:	0f 86 6c fd ff ff    	jbe    26f29 <_ZN80_$LT$std..path..Components$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hede1176d26c248aaE+0x139>
   271bd:	eb 04                	jmp    271c3 <_ZN80_$LT$std..path..Components$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hede1176d26c248aaE+0x3d3>
   271bf:	c6 46 39 03          	movb   $0x3,0x39(%rsi)
   271c3:	48 c7 07 05 00 00 00 	movq   $0x5,(%rdi)
   271ca:	e9 0f fd ff ff       	jmpq   26ede <_ZN80_$LT$std..path..Components$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hede1176d26c248aaE+0xee>
   271cf:	48 89 1f             	mov    %rbx,(%rdi)
   271d2:	4c 89 57 08          	mov    %r10,0x8(%rdi)
   271d6:	4c 89 4f 10          	mov    %r9,0x10(%rdi)
   271da:	0f 28 04 24          	movaps (%rsp),%xmm0
   271de:	0f 28 4c 24 10       	movaps 0x10(%rsp),%xmm1
   271e3:	0f 11 47 18          	movups %xmm0,0x18(%rdi)
   271e7:	0f 11 4f 28          	movups %xmm1,0x28(%rdi)
   271eb:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
   271f0:	e9 8d 00 00 00       	jmpq   27282 <_ZN80_$LT$std..path..Components$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hede1176d26c248aaE+0x492>
   271f5:	bb 06 00 00 00       	mov    $0x6,%ebx
   271fa:	49 39 d8             	cmp    %rbx,%r8
   271fd:	73 28                	jae    27227 <_ZN80_$LT$std..path..Components$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hede1176d26c248aaE+0x437>
   271ff:	e9 21 fe ff ff       	jmpq   27025 <_ZN80_$LT$std..path..Components$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hede1176d26c248aaE+0x235>
   27204:	48 8b 50 10          	mov    0x10(%rax),%rdx
   27208:	48 8b 68 20          	mov    0x20(%rax),%rbp
   2720c:	48 8d 5d 01          	lea    0x1(%rbp),%rbx
   27210:	48 85 ed             	test   %rbp,%rbp
   27213:	48 0f 44 dd          	cmove  %rbp,%rbx
   27217:	48 01 d3             	add    %rdx,%rbx
   2721a:	48 83 c3 02          	add    $0x2,%rbx
   2721e:	49 39 d8             	cmp    %rbx,%r8
   27221:	0f 82 fe fd ff ff    	jb     27025 <_ZN80_$LT$std..path..Components$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hede1176d26c248aaE+0x235>
   27227:	ba 02 00 00 00       	mov    $0x2,%edx
   2722c:	48 8d 2d 29 3b 01 00 	lea    0x13b29(%rip),%rbp        # 3ad5c <_ZN4core7unicode12unicode_data2cc19BITSET_INDEX_CHUNKS17h8a1f39cd536e9344E+0x89c>
   27233:	48 63 4c 8d 00       	movslq 0x0(%rbp,%rcx,4),%rcx
   27238:	48 01 e9             	add    %rbp,%rcx
   2723b:	ff e1                	jmpq   *%rcx
   2723d:	48 8b 50 10          	mov    0x10(%rax),%rdx
   27241:	48 83 c2 04          	add    $0x4,%rdx
   27245:	4c 89 c0             	mov    %r8,%rax
   27248:	48 29 d0             	sub    %rdx,%rax
   2724b:	0f 82 93 00 00 00    	jb     272e4 <_ZN80_$LT$std..path..Components$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hede1176d26c248aaE+0x4f4>
   27251:	4c 01 ca             	add    %r9,%rdx
   27254:	48 89 16             	mov    %rdx,(%rsi)
   27257:	48 89 46 08          	mov    %rax,0x8(%rsi)
   2725b:	48 c7 07 00 00 00 00 	movq   $0x0,(%rdi)
   27262:	4c 89 4f 08          	mov    %r9,0x8(%rdi)
   27266:	48 89 5f 10          	mov    %rbx,0x10(%rdi)
   2726a:	44 88 5f 18          	mov    %r11b,0x18(%rdi)
   2726e:	0f 10 46 11          	movups 0x11(%rsi),%xmm0
   27272:	0f 10 4e 21          	movups 0x21(%rsi),%xmm1
   27276:	0f 11 47 19          	movups %xmm0,0x19(%rdi)
   2727a:	0f 11 4f 29          	movups %xmm1,0x29(%rdi)
   2727e:	48 8b 46 30          	mov    0x30(%rsi),%rax
   27282:	48 89 47 38          	mov    %rax,0x38(%rdi)
   27286:	e9 53 fc ff ff       	jmpq   26ede <_ZN80_$LT$std..path..Components$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hede1176d26c248aaE+0xee>
   2728b:	ba 06 00 00 00       	mov    $0x6,%edx
   27290:	4c 89 c0             	mov    %r8,%rax
   27293:	48 29 d0             	sub    %rdx,%rax
   27296:	73 b9                	jae    27251 <_ZN80_$LT$std..path..Components$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hede1176d26c248aaE+0x461>
   27298:	eb 4a                	jmp    272e4 <_ZN80_$LT$std..path..Components$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hede1176d26c248aaE+0x4f4>
   2729a:	48 8b 48 10          	mov    0x10(%rax),%rcx
   2729e:	48 8b 40 20          	mov    0x20(%rax),%rax
   272a2:	48 8d 50 01          	lea    0x1(%rax),%rdx
   272a6:	48 85 c0             	test   %rax,%rax
   272a9:	48 0f 44 d0          	cmove  %rax,%rdx
   272ad:	48 01 ca             	add    %rcx,%rdx
   272b0:	48 83 c2 08          	add    $0x8,%rdx
   272b4:	4c 89 c0             	mov    %r8,%rax
   272b7:	48 29 d0             	sub    %rdx,%rax
   272ba:	73 95                	jae    27251 <_ZN80_$LT$std..path..Components$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hede1176d26c248aaE+0x461>
   272bc:	eb 26                	jmp    272e4 <_ZN80_$LT$std..path..Components$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hede1176d26c248aaE+0x4f4>
   272be:	48 8b 48 10          	mov    0x10(%rax),%rcx
   272c2:	48 8b 40 20          	mov    0x20(%rax),%rax
   272c6:	48 8d 50 01          	lea    0x1(%rax),%rdx
   272ca:	48 85 c0             	test   %rax,%rax
   272cd:	48 0f 44 d0          	cmove  %rax,%rdx
   272d1:	48 01 ca             	add    %rcx,%rdx
   272d4:	48 83 c2 02          	add    $0x2,%rdx
   272d8:	4c 89 c0             	mov    %r8,%rax
   272db:	48 29 d0             	sub    %rdx,%rax
   272de:	0f 83 6d ff ff ff    	jae    27251 <_ZN80_$LT$std..path..Components$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hede1176d26c248aaE+0x461>
   272e4:	48 89 d7             	mov    %rdx,%rdi
   272e7:	4c 89 c6             	mov    %r8,%rsi
   272ea:	e8 61 09 fe ff       	callq  7c50 <_ZN4core5slice22slice_index_order_fail17h7bcf2f94ba9e06deE>
   272ef:	0f 0b                	ud2    
   272f1:	48 89 ef             	mov    %rbp,%rdi
   272f4:	4c 89 de             	mov    %r11,%rsi
   272f7:	e8 54 09 fe ff       	callq  7c50 <_ZN4core5slice22slice_index_order_fail17h7bcf2f94ba9e06deE>
   272fc:	0f 0b                	ud2    
   272fe:	80 f9 2f             	cmp    $0x2f,%cl
   27301:	0f 94 c0             	sete   %al
   27304:	04 01                	add    $0x1,%al
   27306:	0f b6 f8             	movzbl %al,%edi
   27309:	83 e7 01             	and    $0x1,%edi
   2730c:	48 01 df             	add    %rbx,%rdi
   2730f:	4c 89 de             	mov    %r11,%rsi
   27312:	e8 b9 08 fe ff       	callq  7bd0 <_ZN4core5slice20slice_index_len_fail17h52736412c1ce1871E>
   27317:	0f 0b                	ud2    
   27319:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000027320 <_ZN3std2io5impls71_$LT$impl$u20$std..io..Write$u20$for$u20$alloc..boxed..Box$LT$W$GT$$GT$5write17h9d991366b20b67d4E>:
   27320:	53                   	push   %rbx
   27321:	48 89 fb             	mov    %rdi,%rbx
   27324:	48 8b 06             	mov    (%rsi),%rax
   27327:	4c 8b 46 08          	mov    0x8(%rsi),%r8
   2732b:	48 89 c6             	mov    %rax,%rsi
   2732e:	41 ff 50 18          	callq  *0x18(%r8)
   27332:	48 89 d8             	mov    %rbx,%rax
   27335:	5b                   	pop    %rbx
   27336:	c3                   	retq   
   27337:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   2733e:	00 00 

0000000000027340 <_ZN3std2io5impls71_$LT$impl$u20$std..io..Write$u20$for$u20$alloc..boxed..Box$LT$W$GT$$GT$14write_vectored17hf5e285795ee077c4E>:
   27340:	53                   	push   %rbx
   27341:	48 89 fb             	mov    %rdi,%rbx
   27344:	48 8b 06             	mov    (%rsi),%rax
   27347:	4c 8b 46 08          	mov    0x8(%rsi),%r8
   2734b:	48 89 c6             	mov    %rax,%rsi
   2734e:	41 ff 50 20          	callq  *0x20(%r8)
   27352:	48 89 d8             	mov    %rbx,%rax
   27355:	5b                   	pop    %rbx
   27356:	c3                   	retq   
   27357:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   2735e:	00 00 

0000000000027360 <_ZN3std2io5impls71_$LT$impl$u20$std..io..Write$u20$for$u20$alloc..boxed..Box$LT$W$GT$$GT$5flush17h8d7a873c863a9110E>:
   27360:	53                   	push   %rbx
   27361:	48 89 fb             	mov    %rdi,%rbx
   27364:	48 8b 06             	mov    (%rsi),%rax
   27367:	48 8b 4e 08          	mov    0x8(%rsi),%rcx
   2736b:	48 89 c6             	mov    %rax,%rsi
   2736e:	ff 51 28             	callq  *0x28(%rcx)
   27371:	48 89 d8             	mov    %rbx,%rax
   27374:	5b                   	pop    %rbx
   27375:	c3                   	retq   
   27376:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2737d:	00 00 00 

0000000000027380 <_ZN3std2io5impls71_$LT$impl$u20$std..io..Write$u20$for$u20$alloc..boxed..Box$LT$W$GT$$GT$9write_all17h6b4993436058b3f3E>:
   27380:	53                   	push   %rbx
   27381:	48 89 fb             	mov    %rdi,%rbx
   27384:	48 8b 06             	mov    (%rsi),%rax
   27387:	4c 8b 46 08          	mov    0x8(%rsi),%r8
   2738b:	48 89 c6             	mov    %rax,%rsi
   2738e:	41 ff 50 30          	callq  *0x30(%r8)
   27392:	48 89 d8             	mov    %rbx,%rax
   27395:	5b                   	pop    %rbx
   27396:	c3                   	retq   
   27397:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   2739e:	00 00 

00000000000273a0 <_ZN3std2io5impls71_$LT$impl$u20$std..io..Write$u20$for$u20$alloc..boxed..Box$LT$W$GT$$GT$9write_fmt17h718c75e20fc10695E>:
   273a0:	53                   	push   %rbx
   273a1:	48 83 ec 30          	sub    $0x30,%rsp
   273a5:	48 89 fb             	mov    %rdi,%rbx
   273a8:	48 8b 06             	mov    (%rsi),%rax
   273ab:	48 8b 4e 08          	mov    0x8(%rsi),%rcx
   273af:	0f 10 02             	movups (%rdx),%xmm0
   273b2:	0f 10 4a 10          	movups 0x10(%rdx),%xmm1
   273b6:	0f 10 52 20          	movups 0x20(%rdx),%xmm2
   273ba:	0f 29 54 24 20       	movaps %xmm2,0x20(%rsp)
   273bf:	0f 29 4c 24 10       	movaps %xmm1,0x10(%rsp)
   273c4:	0f 29 04 24          	movaps %xmm0,(%rsp)
   273c8:	48 89 e2             	mov    %rsp,%rdx
   273cb:	48 89 c6             	mov    %rax,%rsi
   273ce:	ff 51 38             	callq  *0x38(%rcx)
   273d1:	48 89 d8             	mov    %rbx,%rax
   273d4:	48 83 c4 30          	add    $0x30,%rsp
   273d8:	5b                   	pop    %rbx
   273d9:	c3                   	retq   
   273da:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000000273e0 <_ZN3std6thread5local4fast12Key$LT$T$GT$14try_initialize17hce561547681d9a74E>:
   273e0:	41 57                	push   %r15
   273e2:	41 56                	push   %r14
   273e4:	53                   	push   %rbx
   273e5:	64 8a 04 25 e0 ff ff 	mov    %fs:0xffffffffffffffe0,%al
   273ec:	ff 
   273ed:	84 c0                	test   %al,%al
   273ef:	74 0c                	je     273fd <_ZN3std6thread5local4fast12Key$LT$T$GT$14try_initialize17hce561547681d9a74E+0x1d>
   273f1:	3c 01                	cmp    $0x1,%al
   273f3:	74 5d                	je     27452 <_ZN3std6thread5local4fast12Key$LT$T$GT$14try_initialize17hce561547681d9a74E+0x72>
   273f5:	31 c0                	xor    %eax,%eax
   273f7:	5b                   	pop    %rbx
   273f8:	41 5e                	pop    %r14
   273fa:	41 5f                	pop    %r15
   273fc:	c3                   	retq   
   273fd:	48 83 3d db 09 22 00 	cmpq   $0x0,0x2209db(%rip)        # 247de0 <__cxa_thread_atexit_impl@GLIBC_2.18>
   27404:	00 
   27405:	74 26                	je     2742d <_ZN3std6thread5local4fast12Key$LT$T$GT$14try_initialize17hce561547681d9a74E+0x4d>
   27407:	64 48 8b 04 25 00 00 	mov    %fs:0x0,%rax
   2740e:	00 00 
   27410:	48 8d b0 c0 ff ff ff 	lea    -0x40(%rax),%rsi
   27417:	48 8d 3d c2 00 00 00 	lea    0xc2(%rip),%rdi        # 274e0 <_ZN3std6thread5local4fast13destroy_value17h364ead5469cc499cE>
   2741e:	48 8d 15 f3 0b 22 00 	lea    0x220bf3(%rip),%rdx        # 248018 <_rust_extern_with_linkage___dso_handle>
   27425:	ff 15 b5 09 22 00    	callq  *0x2209b5(%rip)        # 247de0 <__cxa_thread_atexit_impl@GLIBC_2.18>
   2742b:	eb 1c                	jmp    27449 <_ZN3std6thread5local4fast12Key$LT$T$GT$14try_initialize17hce561547681d9a74E+0x69>
   2742d:	64 48 8b 04 25 00 00 	mov    %fs:0x0,%rax
   27434:	00 00 
   27436:	48 8d b8 c0 ff ff ff 	lea    -0x40(%rax),%rdi
   2743d:	48 8d 35 9c 00 00 00 	lea    0x9c(%rip),%rsi        # 274e0 <_ZN3std6thread5local4fast13destroy_value17h364ead5469cc499cE>
   27444:	e8 f7 00 00 00       	callq  27540 <_ZN3std10sys_common12thread_local22register_dtor_fallback17h1a2314bd3431add0E>
   27449:	64 c6 04 25 e0 ff ff 	movb   $0x1,%fs:0xffffffffffffffe0
   27450:	ff 01 
   27452:	64 66 0f 6f 04 25 d0 	movdqa %fs:0xffffffffffffffd0,%xmm0
   27459:	ff ff ff 
   2745c:	0f 57 c9             	xorps  %xmm1,%xmm1
   2745f:	64 0f 29 0c 25 d0 ff 	movaps %xmm1,%fs:0xffffffffffffffd0
   27466:	ff ff 
   27468:	b8 01 00 00 00       	mov    $0x1,%eax
   2746d:	66 48 0f 6e c8       	movq   %rax,%xmm1
   27472:	64 48 83 3c 25 c0 ff 	cmpq   $0x0,%fs:0xffffffffffffffc0
   27479:	ff ff 00 
   2747c:	64 66 0f 7f 0c 25 c0 	movdqa %xmm1,%fs:0xffffffffffffffc0
   27483:	ff ff ff 
   27486:	74 29                	je     274b1 <_ZN3std6thread5local4fast12Key$LT$T$GT$14try_initialize17hce561547681d9a74E+0xd1>
   27488:	66 48 0f 7e c3       	movq   %xmm0,%rbx
   2748d:	48 85 db             	test   %rbx,%rbx
   27490:	74 1f                	je     274b1 <_ZN3std6thread5local4fast12Key$LT$T$GT$14try_initialize17hce561547681d9a74E+0xd1>
   27492:	66 0f 70 c0 4e       	pshufd $0x4e,%xmm0,%xmm0
   27497:	66 49 0f 7e c6       	movq   %xmm0,%r14
   2749c:	48 89 df             	mov    %rbx,%rdi
   2749f:	41 ff 16             	callq  *(%r14)
   274a2:	49 83 7e 08 00       	cmpq   $0x0,0x8(%r14)
   274a7:	74 08                	je     274b1 <_ZN3std6thread5local4fast12Key$LT$T$GT$14try_initialize17hce561547681d9a74E+0xd1>
   274a9:	48 89 df             	mov    %rbx,%rdi
   274ac:	e8 5f df fd ff       	callq  5410 <__rust_dealloc>
   274b1:	64 48 8b 04 25 00 00 	mov    %fs:0x0,%rax
   274b8:	00 00 
   274ba:	48 8d 80 c8 ff ff ff 	lea    -0x38(%rax),%rax
   274c1:	5b                   	pop    %rbx
   274c2:	41 5e                	pop    %r14
   274c4:	41 5f                	pop    %r15
   274c6:	c3                   	retq   
   274c7:	49 89 c7             	mov    %rax,%r15
   274ca:	48 89 df             	mov    %rbx,%rdi
   274cd:	4c 89 f6             	mov    %r14,%rsi
   274d0:	e8 3b d4 ff ff       	callq  24910 <_ZN5alloc5alloc8box_free17h3741427eaa5804e6E>
   274d5:	4c 89 ff             	mov    %r15,%rdi
   274d8:	e8 c3 cb fd ff       	callq  40a0 <_Unwind_Resume@plt>
   274dd:	0f 0b                	ud2    
   274df:	90                   	nop

00000000000274e0 <_ZN3std6thread5local4fast13destroy_value17h364ead5469cc499cE>:
   274e0:	41 57                	push   %r15
   274e2:	41 56                	push   %r14
   274e4:	53                   	push   %rbx
   274e5:	48 8b 5f 10          	mov    0x10(%rdi),%rbx
   274e9:	4c 8b 77 18          	mov    0x18(%rdi),%r14
   274ed:	0f 57 c0             	xorps  %xmm0,%xmm0
   274f0:	48 83 3f 00          	cmpq   $0x0,(%rdi)
   274f4:	0f 11 07             	movups %xmm0,(%rdi)
   274f7:	c6 47 20 02          	movb   $0x2,0x20(%rdi)
   274fb:	74 1f                	je     2751c <_ZN3std6thread5local4fast13destroy_value17h364ead5469cc499cE+0x3c>
   274fd:	48 85 db             	test   %rbx,%rbx
   27500:	74 1a                	je     2751c <_ZN3std6thread5local4fast13destroy_value17h364ead5469cc499cE+0x3c>
   27502:	48 89 df             	mov    %rbx,%rdi
   27505:	41 ff 16             	callq  *(%r14)
   27508:	49 83 7e 08 00       	cmpq   $0x0,0x8(%r14)
   2750d:	74 0d                	je     2751c <_ZN3std6thread5local4fast13destroy_value17h364ead5469cc499cE+0x3c>
   2750f:	48 89 df             	mov    %rbx,%rdi
   27512:	5b                   	pop    %rbx
   27513:	41 5e                	pop    %r14
   27515:	41 5f                	pop    %r15
   27517:	e9 f4 de fd ff       	jmpq   5410 <__rust_dealloc>
   2751c:	5b                   	pop    %rbx
   2751d:	41 5e                	pop    %r14
   2751f:	41 5f                	pop    %r15
   27521:	c3                   	retq   
   27522:	49 89 c7             	mov    %rax,%r15
   27525:	48 89 df             	mov    %rbx,%rdi
   27528:	4c 89 f6             	mov    %r14,%rsi
   2752b:	e8 e0 d3 ff ff       	callq  24910 <_ZN5alloc5alloc8box_free17h3741427eaa5804e6E>
   27530:	4c 89 ff             	mov    %r15,%rdi
   27533:	e8 68 cb fd ff       	callq  40a0 <_Unwind_Resume@plt>
   27538:	0f 0b                	ud2    
   2753a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000027540 <_ZN3std10sys_common12thread_local22register_dtor_fallback17h1a2314bd3431add0E>:
   27540:	55                   	push   %rbp
   27541:	41 57                	push   %r15
   27543:	41 56                	push   %r14
   27545:	41 55                	push   %r13
   27547:	41 54                	push   %r12
   27549:	53                   	push   %rbx
   2754a:	48 83 ec 68          	sub    $0x68,%rsp
   2754e:	49 89 f6             	mov    %rsi,%r14
   27551:	49 89 ff             	mov    %rdi,%r15
   27554:	48 8b 3d c5 0a 22 00 	mov    0x220ac5(%rip),%rdi        # 248020 <_ZN3std10sys_common12thread_local22register_dtor_fallback5DTORS17he3e41e2067f59ce3E>
   2755b:	48 85 ff             	test   %rdi,%rdi
   2755e:	75 7b                	jne    275db <_ZN3std10sys_common12thread_local22register_dtor_fallback17h1a2314bd3431add0E+0x9b>
   27560:	48 8b 35 c1 0a 22 00 	mov    0x220ac1(%rip),%rsi        # 248028 <_ZN3std10sys_common12thread_local22register_dtor_fallback5DTORS17he3e41e2067f59ce3E+0x8>
   27567:	c7 04 24 00 00 00 00 	movl   $0x0,(%rsp)
   2756e:	48 89 e7             	mov    %rsp,%rdi
   27571:	ff 15 d1 09 22 00    	callq  *0x2209d1(%rip)        # 247f48 <pthread_key_create@GLIBC_2.2.5>
   27577:	89 44 24 04          	mov    %eax,0x4(%rsp)
   2757b:	85 c0                	test   %eax,%eax
   2757d:	0f 85 6f 02 00 00    	jne    277f2 <_ZN3std10sys_common12thread_local22register_dtor_fallback17h1a2314bd3431add0E+0x2b2>
   27583:	8b 1c 24             	mov    (%rsp),%ebx
   27586:	85 db                	test   %ebx,%ebx
   27588:	75 36                	jne    275c0 <_ZN3std10sys_common12thread_local22register_dtor_fallback17h1a2314bd3431add0E+0x80>
   2758a:	48 8b 35 97 0a 22 00 	mov    0x220a97(%rip),%rsi        # 248028 <_ZN3std10sys_common12thread_local22register_dtor_fallback5DTORS17he3e41e2067f59ce3E+0x8>
   27591:	c7 04 24 00 00 00 00 	movl   $0x0,(%rsp)
   27598:	48 89 e7             	mov    %rsp,%rdi
   2759b:	ff 15 a7 09 22 00    	callq  *0x2209a7(%rip)        # 247f48 <pthread_key_create@GLIBC_2.2.5>
   275a1:	89 44 24 04          	mov    %eax,0x4(%rsp)
   275a5:	85 c0                	test   %eax,%eax
   275a7:	0f 85 45 02 00 00    	jne    277f2 <_ZN3std10sys_common12thread_local22register_dtor_fallback17h1a2314bd3431add0E+0x2b2>
   275ad:	8b 1c 24             	mov    (%rsp),%ebx
   275b0:	31 ff                	xor    %edi,%edi
   275b2:	ff 15 d8 09 22 00    	callq  *0x2209d8(%rip)        # 247f90 <pthread_key_delete@GLIBC_2.2.5>
   275b8:	85 db                	test   %ebx,%ebx
   275ba:	0f 84 c9 02 00 00    	je     27889 <_ZN3std10sys_common12thread_local22register_dtor_fallback17h1a2314bd3431add0E+0x349>
   275c0:	89 df                	mov    %ebx,%edi
   275c2:	31 c0                	xor    %eax,%eax
   275c4:	f0 48 0f b1 3d 53 0a 	lock cmpxchg %rdi,0x220a53(%rip)        # 248020 <_ZN3std10sys_common12thread_local22register_dtor_fallback5DTORS17he3e41e2067f59ce3E>
   275cb:	22 00 
   275cd:	74 0c                	je     275db <_ZN3std10sys_common12thread_local22register_dtor_fallback17h1a2314bd3431add0E+0x9b>
   275cf:	48 89 c3             	mov    %rax,%rbx
   275d2:	ff 15 b8 09 22 00    	callq  *0x2209b8(%rip)        # 247f90 <pthread_key_delete@GLIBC_2.2.5>
   275d8:	48 89 df             	mov    %rbx,%rdi
   275db:	ff 15 0f 09 22 00    	callq  *0x22090f(%rip)        # 247ef0 <pthread_getspecific@GLIBC_2.2.5>
   275e1:	48 85 c0             	test   %rax,%rax
   275e4:	74 15                	je     275fb <_ZN3std10sys_common12thread_local22register_dtor_fallback17h1a2314bd3431add0E+0xbb>
   275e6:	48 8b 3d 33 0a 22 00 	mov    0x220a33(%rip),%rdi        # 248020 <_ZN3std10sys_common12thread_local22register_dtor_fallback5DTORS17he3e41e2067f59ce3E>
   275ed:	48 85 ff             	test   %rdi,%rdi
   275f0:	0f 85 45 01 00 00    	jne    2773b <_ZN3std10sys_common12thread_local22register_dtor_fallback17h1a2314bd3431add0E+0x1fb>
   275f6:	e9 c5 00 00 00       	jmpq   276c0 <_ZN3std10sys_common12thread_local22register_dtor_fallback17h1a2314bd3431add0E+0x180>
   275fb:	bf 18 00 00 00       	mov    $0x18,%edi
   27600:	be 08 00 00 00       	mov    $0x8,%esi
   27605:	e8 b6 dd fd ff       	callq  53c0 <__rust_alloc>
   2760a:	48 85 c0             	test   %rax,%rax
   2760d:	0f 84 65 02 00 00    	je     27878 <_ZN3std10sys_common12thread_local22register_dtor_fallback17h1a2314bd3431add0E+0x338>
   27613:	48 89 c3             	mov    %rax,%rbx
   27616:	48 c7 00 08 00 00 00 	movq   $0x8,(%rax)
   2761d:	0f 57 c0             	xorps  %xmm0,%xmm0
   27620:	0f 11 40 08          	movups %xmm0,0x8(%rax)
   27624:	48 8b 3d f5 09 22 00 	mov    0x2209f5(%rip),%rdi        # 248020 <_ZN3std10sys_common12thread_local22register_dtor_fallback5DTORS17he3e41e2067f59ce3E>
   2762b:	48 85 ff             	test   %rdi,%rdi
   2762e:	75 7b                	jne    276ab <_ZN3std10sys_common12thread_local22register_dtor_fallback17h1a2314bd3431add0E+0x16b>
   27630:	48 8b 35 f1 09 22 00 	mov    0x2209f1(%rip),%rsi        # 248028 <_ZN3std10sys_common12thread_local22register_dtor_fallback5DTORS17he3e41e2067f59ce3E+0x8>
   27637:	c7 04 24 00 00 00 00 	movl   $0x0,(%rsp)
   2763e:	48 89 e7             	mov    %rsp,%rdi
   27641:	ff 15 01 09 22 00    	callq  *0x220901(%rip)        # 247f48 <pthread_key_create@GLIBC_2.2.5>
   27647:	89 44 24 04          	mov    %eax,0x4(%rsp)
   2764b:	85 c0                	test   %eax,%eax
   2764d:	0f 85 9f 01 00 00    	jne    277f2 <_ZN3std10sys_common12thread_local22register_dtor_fallback17h1a2314bd3431add0E+0x2b2>
   27653:	8b 2c 24             	mov    (%rsp),%ebp
   27656:	85 ed                	test   %ebp,%ebp
   27658:	75 36                	jne    27690 <_ZN3std10sys_common12thread_local22register_dtor_fallback17h1a2314bd3431add0E+0x150>
   2765a:	48 8b 35 c7 09 22 00 	mov    0x2209c7(%rip),%rsi        # 248028 <_ZN3std10sys_common12thread_local22register_dtor_fallback5DTORS17he3e41e2067f59ce3E+0x8>
   27661:	c7 04 24 00 00 00 00 	movl   $0x0,(%rsp)
   27668:	48 89 e7             	mov    %rsp,%rdi
   2766b:	ff 15 d7 08 22 00    	callq  *0x2208d7(%rip)        # 247f48 <pthread_key_create@GLIBC_2.2.5>
   27671:	89 44 24 04          	mov    %eax,0x4(%rsp)
   27675:	85 c0                	test   %eax,%eax
   27677:	0f 85 75 01 00 00    	jne    277f2 <_ZN3std10sys_common12thread_local22register_dtor_fallback17h1a2314bd3431add0E+0x2b2>
   2767d:	8b 2c 24             	mov    (%rsp),%ebp
   27680:	31 ff                	xor    %edi,%edi
   27682:	ff 15 08 09 22 00    	callq  *0x220908(%rip)        # 247f90 <pthread_key_delete@GLIBC_2.2.5>
   27688:	85 ed                	test   %ebp,%ebp
   2768a:	0f 84 f9 01 00 00    	je     27889 <_ZN3std10sys_common12thread_local22register_dtor_fallback17h1a2314bd3431add0E+0x349>
   27690:	89 ef                	mov    %ebp,%edi
   27692:	31 c0                	xor    %eax,%eax
   27694:	f0 48 0f b1 3d 83 09 	lock cmpxchg %rdi,0x220983(%rip)        # 248020 <_ZN3std10sys_common12thread_local22register_dtor_fallback5DTORS17he3e41e2067f59ce3E>
   2769b:	22 00 
   2769d:	74 0c                	je     276ab <_ZN3std10sys_common12thread_local22register_dtor_fallback17h1a2314bd3431add0E+0x16b>
   2769f:	48 89 c5             	mov    %rax,%rbp
   276a2:	ff 15 e8 08 22 00    	callq  *0x2208e8(%rip)        # 247f90 <pthread_key_delete@GLIBC_2.2.5>
   276a8:	48 89 ef             	mov    %rbp,%rdi
   276ab:	48 89 de             	mov    %rbx,%rsi
   276ae:	ff 15 7c 07 22 00    	callq  *0x22077c(%rip)        # 247e30 <pthread_setspecific@GLIBC_2.2.5>
   276b4:	48 8b 3d 65 09 22 00 	mov    0x220965(%rip),%rdi        # 248020 <_ZN3std10sys_common12thread_local22register_dtor_fallback5DTORS17he3e41e2067f59ce3E>
   276bb:	48 85 ff             	test   %rdi,%rdi
   276be:	75 7b                	jne    2773b <_ZN3std10sys_common12thread_local22register_dtor_fallback17h1a2314bd3431add0E+0x1fb>
   276c0:	48 8b 35 61 09 22 00 	mov    0x220961(%rip),%rsi        # 248028 <_ZN3std10sys_common12thread_local22register_dtor_fallback5DTORS17he3e41e2067f59ce3E+0x8>
   276c7:	c7 04 24 00 00 00 00 	movl   $0x0,(%rsp)
   276ce:	48 89 e7             	mov    %rsp,%rdi
   276d1:	ff 15 71 08 22 00    	callq  *0x220871(%rip)        # 247f48 <pthread_key_create@GLIBC_2.2.5>
   276d7:	89 44 24 04          	mov    %eax,0x4(%rsp)
   276db:	85 c0                	test   %eax,%eax
   276dd:	0f 85 0f 01 00 00    	jne    277f2 <_ZN3std10sys_common12thread_local22register_dtor_fallback17h1a2314bd3431add0E+0x2b2>
   276e3:	8b 1c 24             	mov    (%rsp),%ebx
   276e6:	85 db                	test   %ebx,%ebx
   276e8:	75 36                	jne    27720 <_ZN3std10sys_common12thread_local22register_dtor_fallback17h1a2314bd3431add0E+0x1e0>
   276ea:	48 8b 35 37 09 22 00 	mov    0x220937(%rip),%rsi        # 248028 <_ZN3std10sys_common12thread_local22register_dtor_fallback5DTORS17he3e41e2067f59ce3E+0x8>
   276f1:	c7 04 24 00 00 00 00 	movl   $0x0,(%rsp)
   276f8:	48 89 e7             	mov    %rsp,%rdi
   276fb:	ff 15 47 08 22 00    	callq  *0x220847(%rip)        # 247f48 <pthread_key_create@GLIBC_2.2.5>
   27701:	89 44 24 04          	mov    %eax,0x4(%rsp)
   27705:	85 c0                	test   %eax,%eax
   27707:	0f 85 e5 00 00 00    	jne    277f2 <_ZN3std10sys_common12thread_local22register_dtor_fallback17h1a2314bd3431add0E+0x2b2>
   2770d:	8b 1c 24             	mov    (%rsp),%ebx
   27710:	31 ff                	xor    %edi,%edi
   27712:	ff 15 78 08 22 00    	callq  *0x220878(%rip)        # 247f90 <pthread_key_delete@GLIBC_2.2.5>
   27718:	85 db                	test   %ebx,%ebx
   2771a:	0f 84 69 01 00 00    	je     27889 <_ZN3std10sys_common12thread_local22register_dtor_fallback17h1a2314bd3431add0E+0x349>
   27720:	89 df                	mov    %ebx,%edi
   27722:	31 c0                	xor    %eax,%eax
   27724:	f0 48 0f b1 3d f3 08 	lock cmpxchg %rdi,0x2208f3(%rip)        # 248020 <_ZN3std10sys_common12thread_local22register_dtor_fallback5DTORS17he3e41e2067f59ce3E>
   2772b:	22 00 
   2772d:	74 0c                	je     2773b <_ZN3std10sys_common12thread_local22register_dtor_fallback17h1a2314bd3431add0E+0x1fb>
   2772f:	48 89 c3             	mov    %rax,%rbx
   27732:	ff 15 58 08 22 00    	callq  *0x220858(%rip)        # 247f90 <pthread_key_delete@GLIBC_2.2.5>
   27738:	48 89 df             	mov    %rbx,%rdi
   2773b:	ff 15 af 07 22 00    	callq  *0x2207af(%rip)        # 247ef0 <pthread_getspecific@GLIBC_2.2.5>
   27741:	48 89 c3             	mov    %rax,%rbx
   27744:	48 8b 70 10          	mov    0x10(%rax),%rsi
   27748:	48 3b 70 08          	cmp    0x8(%rax),%rsi
   2774c:	75 63                	jne    277b1 <_ZN3std10sys_common12thread_local22register_dtor_fallback17h1a2314bd3431add0E+0x271>
   2774e:	49 89 f4             	mov    %rsi,%r12
   27751:	49 ff c4             	inc    %r12
   27754:	0f 84 17 01 00 00    	je     27871 <_ZN3std10sys_common12thread_local22register_dtor_fallback17h1a2314bd3431add0E+0x331>
   2775a:	48 8d 04 36          	lea    (%rsi,%rsi,1),%rax
   2775e:	4c 39 e0             	cmp    %r12,%rax
   27761:	4c 0f 47 e0          	cmova  %rax,%r12
   27765:	b9 10 00 00 00       	mov    $0x10,%ecx
   2776a:	45 31 ed             	xor    %r13d,%r13d
   2776d:	4c 89 e0             	mov    %r12,%rax
   27770:	48 f7 e1             	mul    %rcx
   27773:	48 89 c5             	mov    %rax,%rbp
   27776:	0f 91 c0             	setno  %al
   27779:	0f 80 f2 00 00 00    	jo     27871 <_ZN3std10sys_common12thread_local22register_dtor_fallback17h1a2314bd3431add0E+0x331>
   2777f:	41 88 c5             	mov    %al,%r13b
   27782:	49 c1 e5 03          	shl    $0x3,%r13
   27786:	48 85 f6             	test   %rsi,%rsi
   27789:	74 4a                	je     277d5 <_ZN3std10sys_common12thread_local22register_dtor_fallback17h1a2314bd3431add0E+0x295>
   2778b:	48 c1 e6 04          	shl    $0x4,%rsi
   2778f:	48 8b 3b             	mov    (%rbx),%rdi
   27792:	ba 08 00 00 00       	mov    $0x8,%edx
   27797:	48 89 e9             	mov    %rbp,%rcx
   2779a:	e8 81 dc fd ff       	callq  5420 <__rust_realloc>
   2779f:	48 85 c0             	test   %rax,%rax
   277a2:	74 41                	je     277e5 <_ZN3std10sys_common12thread_local22register_dtor_fallback17h1a2314bd3431add0E+0x2a5>
   277a4:	48 89 03             	mov    %rax,(%rbx)
   277a7:	4c 89 63 08          	mov    %r12,0x8(%rbx)
   277ab:	48 8b 73 10          	mov    0x10(%rbx),%rsi
   277af:	eb 03                	jmp    277b4 <_ZN3std10sys_common12thread_local22register_dtor_fallback17h1a2314bd3431add0E+0x274>
   277b1:	48 8b 03             	mov    (%rbx),%rax
   277b4:	48 c1 e6 04          	shl    $0x4,%rsi
   277b8:	4c 89 3c 30          	mov    %r15,(%rax,%rsi,1)
   277bc:	4c 89 74 30 08       	mov    %r14,0x8(%rax,%rsi,1)
   277c1:	48 83 43 10 01       	addq   $0x1,0x10(%rbx)
   277c6:	48 83 c4 68          	add    $0x68,%rsp
   277ca:	5b                   	pop    %rbx
   277cb:	41 5c                	pop    %r12
   277cd:	41 5d                	pop    %r13
   277cf:	41 5e                	pop    %r14
   277d1:	41 5f                	pop    %r15
   277d3:	5d                   	pop    %rbp
   277d4:	c3                   	retq   
   277d5:	48 89 ef             	mov    %rbp,%rdi
   277d8:	4c 89 ee             	mov    %r13,%rsi
   277db:	e8 e0 db fd ff       	callq  53c0 <__rust_alloc>
   277e0:	48 85 c0             	test   %rax,%rax
   277e3:	75 bf                	jne    277a4 <_ZN3std10sys_common12thread_local22register_dtor_fallback17h1a2314bd3431add0E+0x264>
   277e5:	48 89 ef             	mov    %rbp,%rdi
   277e8:	4c 89 ee             	mov    %r13,%rsi
   277eb:	e8 d0 dc fd ff       	callq  54c0 <_ZN5alloc5alloc18handle_alloc_error17hf7bb8682f6c8b1d7E>
   277f0:	0f 0b                	ud2    
   277f2:	48 8d 44 24 04       	lea    0x4(%rsp),%rax
   277f7:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   277fc:	48 8d 05 95 4c 01 00 	lea    0x14c95(%rip),%rax        # 3c498 <_ZN4core7unicode12unicode_data15grapheme_extend6BITSET17h68ce7f61ccfa32feE+0x9f8>
   27803:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   27808:	48 8d 44 24 08       	lea    0x8(%rsp),%rax
   2780d:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
   27812:	48 8d 05 b7 bf ff ff 	lea    -0x4049(%rip),%rax        # 237d0 <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h60ee9c74ee2aa888E>
   27819:	48 89 44 24 50       	mov    %rax,0x50(%rsp)
   2781e:	48 8d 4c 24 10       	lea    0x10(%rsp),%rcx
   27823:	48 89 4c 24 58       	mov    %rcx,0x58(%rsp)
   27828:	48 89 44 24 60       	mov    %rax,0x60(%rsp)
   2782d:	48 8d 05 64 f6 21 00 	lea    0x21f664(%rip),%rax        # 246e98 <__init_array_end+0xe88>
   27834:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   27839:	48 c7 44 24 20 03 00 	movq   $0x3,0x20(%rsp)
   27840:	00 00 
   27842:	48 c7 44 24 28 00 00 	movq   $0x0,0x28(%rsp)
   27849:	00 00 
   2784b:	48 8d 44 24 48       	lea    0x48(%rsp),%rax
   27850:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   27855:	48 c7 44 24 40 02 00 	movq   $0x2,0x40(%rsp)
   2785c:	00 00 
   2785e:	48 8d 35 c3 fa 21 00 	lea    0x21fac3(%rip),%rsi        # 247328 <__init_array_end+0x1318>
   27865:	48 8d 7c 24 18       	lea    0x18(%rsp),%rdi
   2786a:	e8 71 c1 ff ff       	callq  239e0 <_ZN3std9panicking15begin_panic_fmt17h7fd3ef9bf535b4d1E>
   2786f:	0f 0b                	ud2    
   27871:	e8 5a dc fd ff       	callq  54d0 <_ZN5alloc7raw_vec17capacity_overflow17h9be7d3ce681ac1a6E>
   27876:	0f 0b                	ud2    
   27878:	bf 18 00 00 00       	mov    $0x18,%edi
   2787d:	be 08 00 00 00       	mov    $0x8,%esi
   27882:	e8 39 dc fd ff       	callq  54c0 <_ZN5alloc5alloc18handle_alloc_error17hf7bb8682f6c8b1d7E>
   27887:	0f 0b                	ud2    
   27889:	48 8d 05 b0 fa 21 00 	lea    0x21fab0(%rip),%rax        # 247340 <__init_array_end+0x1330>
   27890:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   27895:	48 c7 44 24 20 01 00 	movq   $0x1,0x20(%rsp)
   2789c:	00 00 
   2789e:	48 c7 44 24 28 00 00 	movq   $0x0,0x28(%rsp)
   278a5:	00 00 
   278a7:	48 8d 05 8a 5b 01 00 	lea    0x15b8a(%rip),%rax        # 3d438 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0xad8>
   278ae:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   278b3:	48 c7 44 24 40 00 00 	movq   $0x0,0x40(%rsp)
   278ba:	00 00 
   278bc:	48 8d 7c 24 18       	lea    0x18(%rsp),%rdi
   278c1:	e8 7a c8 ff ff       	callq  24140 <_ZN3std10sys_common4util5abort17hf0f03bd92b6237cbE>
   278c6:	0f 0b                	ud2    
   278c8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   278cf:	00 

00000000000278d0 <_ZN3std10sys_common12thread_local22register_dtor_fallback9run_dtors17h42216a8e22b36032E>:
   278d0:	55                   	push   %rbp
   278d1:	41 57                	push   %r15
   278d3:	41 56                	push   %r14
   278d5:	41 55                	push   %r13
   278d7:	41 54                	push   %r12
   278d9:	53                   	push   %rbx
   278da:	48 83 ec 78          	sub    $0x78,%rsp
   278de:	48 85 ff             	test   %rdi,%rdi
   278e1:	75 29                	jne    2790c <_ZN3std10sys_common12thread_local22register_dtor_fallback9run_dtors17h42216a8e22b36032E+0x3c>
   278e3:	e9 0d 02 00 00       	jmpq   27af5 <_ZN3std10sys_common12thread_local22register_dtor_fallback9run_dtors17h42216a8e22b36032E+0x225>
   278e8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   278ef:	00 
   278f0:	31 f6                	xor    %esi,%esi
   278f2:	ff 15 38 05 22 00    	callq  *0x220538(%rip)        # 247e30 <pthread_setspecific@GLIBC_2.2.5>
   278f8:	4c 89 f7             	mov    %r14,%rdi
   278fb:	e8 10 db fd ff       	callq  5410 <__rust_dealloc>
   27900:	48 89 df             	mov    %rbx,%rdi
   27903:	48 85 db             	test   %rbx,%rbx
   27906:	0f 84 e9 01 00 00    	je     27af5 <_ZN3std10sys_common12thread_local22register_dtor_fallback9run_dtors17h42216a8e22b36032E+0x225>
   2790c:	4c 8b 3f             	mov    (%rdi),%r15
   2790f:	4c 8b 67 08          	mov    0x8(%rdi),%r12
   27913:	48 89 7c 24 70       	mov    %rdi,0x70(%rsp)
   27918:	4c 8b 77 10          	mov    0x10(%rdi),%r14
   2791c:	4c 89 f5             	mov    %r14,%rbp
   2791f:	48 c1 e5 04          	shl    $0x4,%rbp
   27923:	4d 8d 2c 2f          	lea    (%r15,%rbp,1),%r13
   27927:	4c 89 7c 24 20       	mov    %r15,0x20(%rsp)
   2792c:	4c 89 64 24 28       	mov    %r12,0x28(%rsp)
   27931:	4c 89 7c 24 30       	mov    %r15,0x30(%rsp)
   27936:	4c 89 6c 24 38       	mov    %r13,0x38(%rsp)
   2793b:	4c 89 fb             	mov    %r15,%rbx
   2793e:	66 90                	xchg   %ax,%ax
   27940:	48 85 ed             	test   %rbp,%rbp
   27943:	74 22                	je     27967 <_ZN3std10sys_common12thread_local22register_dtor_fallback9run_dtors17h42216a8e22b36032E+0x97>
   27945:	48 8b 43 08          	mov    0x8(%rbx),%rax
   27949:	48 85 c0             	test   %rax,%rax
   2794c:	74 12                	je     27960 <_ZN3std10sys_common12thread_local22register_dtor_fallback9run_dtors17h42216a8e22b36032E+0x90>
   2794e:	48 8b 3b             	mov    (%rbx),%rdi
   27951:	48 83 c3 10          	add    $0x10,%rbx
   27955:	48 83 c5 f0          	add    $0xfffffffffffffff0,%rbp
   27959:	ff d0                	callq  *%rax
   2795b:	eb e3                	jmp    27940 <_ZN3std10sys_common12thread_local22register_dtor_fallback9run_dtors17h42216a8e22b36032E+0x70>
   2795d:	0f 1f 00             	nopl   (%rax)
   27960:	48 83 c3 10          	add    $0x10,%rbx
   27964:	49 89 dd             	mov    %rbx,%r13
   27967:	4c 89 6c 24 30       	mov    %r13,0x30(%rsp)
   2796c:	49 c1 e6 04          	shl    $0x4,%r14
   27970:	4d 01 fe             	add    %r15,%r14
   27973:	4d 29 ee             	sub    %r13,%r14
   27976:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2797d:	00 00 00 
   27980:	4d 85 f6             	test   %r14,%r14
   27983:	74 17                	je     2799c <_ZN3std10sys_common12thread_local22register_dtor_fallback9run_dtors17h42216a8e22b36032E+0xcc>
   27985:	49 8d 45 10          	lea    0x10(%r13),%rax
   27989:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   2798e:	49 83 c6 f0          	add    $0xfffffffffffffff0,%r14
   27992:	49 83 7d 08 00       	cmpq   $0x0,0x8(%r13)
   27997:	49 89 c5             	mov    %rax,%r13
   2799a:	75 e4                	jne    27980 <_ZN3std10sys_common12thread_local22register_dtor_fallback9run_dtors17h42216a8e22b36032E+0xb0>
   2799c:	4d 85 e4             	test   %r12,%r12
   2799f:	74 08                	je     279a9 <_ZN3std10sys_common12thread_local22register_dtor_fallback9run_dtors17h42216a8e22b36032E+0xd9>
   279a1:	4c 89 ff             	mov    %r15,%rdi
   279a4:	e8 67 da fd ff       	callq  5410 <__rust_dealloc>
   279a9:	48 8b 3d 70 06 22 00 	mov    0x220670(%rip),%rdi        # 248020 <_ZN3std10sys_common12thread_local22register_dtor_fallback5DTORS17he3e41e2067f59ce3E>
   279b0:	48 85 ff             	test   %rdi,%rdi
   279b3:	4c 8b 74 24 70       	mov    0x70(%rsp),%r14
   279b8:	0f 85 92 00 00 00    	jne    27a50 <_ZN3std10sys_common12thread_local22register_dtor_fallback9run_dtors17h42216a8e22b36032E+0x180>
   279be:	48 8b 35 63 06 22 00 	mov    0x220663(%rip),%rsi        # 248028 <_ZN3std10sys_common12thread_local22register_dtor_fallback5DTORS17he3e41e2067f59ce3E+0x8>
   279c5:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%rsp)
   279cc:	00 
   279cd:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   279d2:	ff 15 70 05 22 00    	callq  *0x220570(%rip)        # 247f48 <pthread_key_create@GLIBC_2.2.5>
   279d8:	89 44 24 0c          	mov    %eax,0xc(%rsp)
   279dc:	85 c0                	test   %eax,%eax
   279de:	0f 85 20 01 00 00    	jne    27b04 <_ZN3std10sys_common12thread_local22register_dtor_fallback9run_dtors17h42216a8e22b36032E+0x234>
   279e4:	8b 5c 24 08          	mov    0x8(%rsp),%ebx
   279e8:	85 db                	test   %ebx,%ebx
   279ea:	75 3a                	jne    27a26 <_ZN3std10sys_common12thread_local22register_dtor_fallback9run_dtors17h42216a8e22b36032E+0x156>
   279ec:	48 8b 35 35 06 22 00 	mov    0x220635(%rip),%rsi        # 248028 <_ZN3std10sys_common12thread_local22register_dtor_fallback5DTORS17he3e41e2067f59ce3E+0x8>
   279f3:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%rsp)
   279fa:	00 
   279fb:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   27a00:	ff 15 42 05 22 00    	callq  *0x220542(%rip)        # 247f48 <pthread_key_create@GLIBC_2.2.5>
   27a06:	89 44 24 0c          	mov    %eax,0xc(%rsp)
   27a0a:	85 c0                	test   %eax,%eax
   27a0c:	0f 85 f6 01 00 00    	jne    27c08 <_ZN3std10sys_common12thread_local22register_dtor_fallback9run_dtors17h42216a8e22b36032E+0x338>
   27a12:	8b 5c 24 08          	mov    0x8(%rsp),%ebx
   27a16:	31 ff                	xor    %edi,%edi
   27a18:	ff 15 72 05 22 00    	callq  *0x220572(%rip)        # 247f90 <pthread_key_delete@GLIBC_2.2.5>
   27a1e:	85 db                	test   %ebx,%ebx
   27a20:	0f 84 64 02 00 00    	je     27c8a <_ZN3std10sys_common12thread_local22register_dtor_fallback9run_dtors17h42216a8e22b36032E+0x3ba>
   27a26:	89 df                	mov    %ebx,%edi
   27a28:	31 c0                	xor    %eax,%eax
   27a2a:	f0 48 0f b1 3d ed 05 	lock cmpxchg %rdi,0x2205ed(%rip)        # 248020 <_ZN3std10sys_common12thread_local22register_dtor_fallback5DTORS17he3e41e2067f59ce3E>
   27a31:	22 00 
   27a33:	74 1b                	je     27a50 <_ZN3std10sys_common12thread_local22register_dtor_fallback9run_dtors17h42216a8e22b36032E+0x180>
   27a35:	48 89 c3             	mov    %rax,%rbx
   27a38:	ff 15 52 05 22 00    	callq  *0x220552(%rip)        # 247f90 <pthread_key_delete@GLIBC_2.2.5>
   27a3e:	48 89 df             	mov    %rbx,%rdi
   27a41:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   27a48:	00 00 00 
   27a4b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   27a50:	ff 15 9a 04 22 00    	callq  *0x22049a(%rip)        # 247ef0 <pthread_getspecific@GLIBC_2.2.5>
   27a56:	48 89 c3             	mov    %rax,%rbx
   27a59:	48 8b 3d c0 05 22 00 	mov    0x2205c0(%rip),%rdi        # 248020 <_ZN3std10sys_common12thread_local22register_dtor_fallback5DTORS17he3e41e2067f59ce3E>
   27a60:	48 85 ff             	test   %rdi,%rdi
   27a63:	0f 85 87 fe ff ff    	jne    278f0 <_ZN3std10sys_common12thread_local22register_dtor_fallback9run_dtors17h42216a8e22b36032E+0x20>
   27a69:	48 8b 35 b8 05 22 00 	mov    0x2205b8(%rip),%rsi        # 248028 <_ZN3std10sys_common12thread_local22register_dtor_fallback5DTORS17he3e41e2067f59ce3E+0x8>
   27a70:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%rsp)
   27a77:	00 
   27a78:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   27a7d:	ff 15 c5 04 22 00    	callq  *0x2204c5(%rip)        # 247f48 <pthread_key_create@GLIBC_2.2.5>
   27a83:	89 44 24 0c          	mov    %eax,0xc(%rsp)
   27a87:	85 c0                	test   %eax,%eax
   27a89:	0f 85 f7 00 00 00    	jne    27b86 <_ZN3std10sys_common12thread_local22register_dtor_fallback9run_dtors17h42216a8e22b36032E+0x2b6>
   27a8f:	8b 6c 24 08          	mov    0x8(%rsp),%ebp
   27a93:	85 ed                	test   %ebp,%ebp
   27a95:	75 3a                	jne    27ad1 <_ZN3std10sys_common12thread_local22register_dtor_fallback9run_dtors17h42216a8e22b36032E+0x201>
   27a97:	48 8b 35 8a 05 22 00 	mov    0x22058a(%rip),%rsi        # 248028 <_ZN3std10sys_common12thread_local22register_dtor_fallback5DTORS17he3e41e2067f59ce3E+0x8>
   27a9e:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%rsp)
   27aa5:	00 
   27aa6:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   27aab:	ff 15 97 04 22 00    	callq  *0x220497(%rip)        # 247f48 <pthread_key_create@GLIBC_2.2.5>
   27ab1:	89 44 24 0c          	mov    %eax,0xc(%rsp)
   27ab5:	85 c0                	test   %eax,%eax
   27ab7:	0f 85 0f 02 00 00    	jne    27ccc <_ZN3std10sys_common12thread_local22register_dtor_fallback9run_dtors17h42216a8e22b36032E+0x3fc>
   27abd:	8b 6c 24 08          	mov    0x8(%rsp),%ebp
   27ac1:	31 ff                	xor    %edi,%edi
   27ac3:	ff 15 c7 04 22 00    	callq  *0x2204c7(%rip)        # 247f90 <pthread_key_delete@GLIBC_2.2.5>
   27ac9:	85 ed                	test   %ebp,%ebp
   27acb:	0f 84 7a 02 00 00    	je     27d4b <_ZN3std10sys_common12thread_local22register_dtor_fallback9run_dtors17h42216a8e22b36032E+0x47b>
   27ad1:	89 ef                	mov    %ebp,%edi
   27ad3:	31 c0                	xor    %eax,%eax
   27ad5:	f0 48 0f b1 3d 42 05 	lock cmpxchg %rdi,0x220542(%rip)        # 248020 <_ZN3std10sys_common12thread_local22register_dtor_fallback5DTORS17he3e41e2067f59ce3E>
   27adc:	22 00 
   27ade:	0f 84 0c fe ff ff    	je     278f0 <_ZN3std10sys_common12thread_local22register_dtor_fallback9run_dtors17h42216a8e22b36032E+0x20>
   27ae4:	49 89 c4             	mov    %rax,%r12
   27ae7:	ff 15 a3 04 22 00    	callq  *0x2204a3(%rip)        # 247f90 <pthread_key_delete@GLIBC_2.2.5>
   27aed:	4c 89 e7             	mov    %r12,%rdi
   27af0:	e9 fb fd ff ff       	jmpq   278f0 <_ZN3std10sys_common12thread_local22register_dtor_fallback9run_dtors17h42216a8e22b36032E+0x20>
   27af5:	48 83 c4 78          	add    $0x78,%rsp
   27af9:	5b                   	pop    %rbx
   27afa:	41 5c                	pop    %r12
   27afc:	41 5d                	pop    %r13
   27afe:	41 5e                	pop    %r14
   27b00:	41 5f                	pop    %r15
   27b02:	5d                   	pop    %rbp
   27b03:	c3                   	retq   
   27b04:	48 8d 44 24 0c       	lea    0xc(%rsp),%rax
   27b09:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   27b0e:	48 8d 05 83 49 01 00 	lea    0x14983(%rip),%rax        # 3c498 <_ZN4core7unicode12unicode_data15grapheme_extend6BITSET17h68ce7f61ccfa32feE+0x9f8>
   27b15:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   27b1a:	48 8d 44 24 10       	lea    0x10(%rsp),%rax
   27b1f:	48 89 44 24 50       	mov    %rax,0x50(%rsp)
   27b24:	48 8d 05 a5 bc ff ff 	lea    -0x435b(%rip),%rax        # 237d0 <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h60ee9c74ee2aa888E>
   27b2b:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
   27b30:	48 8d 4c 24 18       	lea    0x18(%rsp),%rcx
   27b35:	48 89 4c 24 60       	mov    %rcx,0x60(%rsp)
   27b3a:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
   27b3f:	48 8d 05 52 f3 21 00 	lea    0x21f352(%rip),%rax        # 246e98 <__init_array_end+0xe88>
   27b46:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   27b4b:	48 c7 44 24 28 03 00 	movq   $0x3,0x28(%rsp)
   27b52:	00 00 
   27b54:	48 c7 44 24 30 00 00 	movq   $0x0,0x30(%rsp)
   27b5b:	00 00 
   27b5d:	48 8d 44 24 50       	lea    0x50(%rsp),%rax
   27b62:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
   27b67:	48 c7 44 24 48 02 00 	movq   $0x2,0x48(%rsp)
   27b6e:	00 00 
   27b70:	48 8d 35 b1 f7 21 00 	lea    0x21f7b1(%rip),%rsi        # 247328 <__init_array_end+0x1318>
   27b77:	48 8d 7c 24 20       	lea    0x20(%rsp),%rdi
   27b7c:	e8 5f be ff ff       	callq  239e0 <_ZN3std9panicking15begin_panic_fmt17h7fd3ef9bf535b4d1E>
   27b81:	e9 02 02 00 00       	jmpq   27d88 <_ZN3std10sys_common12thread_local22register_dtor_fallback9run_dtors17h42216a8e22b36032E+0x4b8>
   27b86:	48 8d 44 24 0c       	lea    0xc(%rsp),%rax
   27b8b:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   27b90:	48 8d 05 01 49 01 00 	lea    0x14901(%rip),%rax        # 3c498 <_ZN4core7unicode12unicode_data15grapheme_extend6BITSET17h68ce7f61ccfa32feE+0x9f8>
   27b97:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   27b9c:	48 8d 44 24 10       	lea    0x10(%rsp),%rax
   27ba1:	48 89 44 24 50       	mov    %rax,0x50(%rsp)
   27ba6:	48 8d 05 23 bc ff ff 	lea    -0x43dd(%rip),%rax        # 237d0 <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h60ee9c74ee2aa888E>
   27bad:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
   27bb2:	48 8d 4c 24 18       	lea    0x18(%rsp),%rcx
   27bb7:	48 89 4c 24 60       	mov    %rcx,0x60(%rsp)
   27bbc:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
   27bc1:	48 8d 05 d0 f2 21 00 	lea    0x21f2d0(%rip),%rax        # 246e98 <__init_array_end+0xe88>
   27bc8:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   27bcd:	48 c7 44 24 28 03 00 	movq   $0x3,0x28(%rsp)
   27bd4:	00 00 
   27bd6:	48 c7 44 24 30 00 00 	movq   $0x0,0x30(%rsp)
   27bdd:	00 00 
   27bdf:	48 8d 44 24 50       	lea    0x50(%rsp),%rax
   27be4:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
   27be9:	48 c7 44 24 48 02 00 	movq   $0x2,0x48(%rsp)
   27bf0:	00 00 
   27bf2:	48 8d 35 2f f7 21 00 	lea    0x21f72f(%rip),%rsi        # 247328 <__init_array_end+0x1318>
   27bf9:	48 8d 7c 24 20       	lea    0x20(%rsp),%rdi
   27bfe:	e8 dd bd ff ff       	callq  239e0 <_ZN3std9panicking15begin_panic_fmt17h7fd3ef9bf535b4d1E>
   27c03:	e9 80 01 00 00       	jmpq   27d88 <_ZN3std10sys_common12thread_local22register_dtor_fallback9run_dtors17h42216a8e22b36032E+0x4b8>
   27c08:	48 8d 44 24 0c       	lea    0xc(%rsp),%rax
   27c0d:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   27c12:	48 8d 05 7f 48 01 00 	lea    0x1487f(%rip),%rax        # 3c498 <_ZN4core7unicode12unicode_data15grapheme_extend6BITSET17h68ce7f61ccfa32feE+0x9f8>
   27c19:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   27c1e:	48 8d 44 24 10       	lea    0x10(%rsp),%rax
   27c23:	48 89 44 24 50       	mov    %rax,0x50(%rsp)
   27c28:	48 8d 05 a1 bb ff ff 	lea    -0x445f(%rip),%rax        # 237d0 <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h60ee9c74ee2aa888E>
   27c2f:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
   27c34:	48 8d 4c 24 18       	lea    0x18(%rsp),%rcx
   27c39:	48 89 4c 24 60       	mov    %rcx,0x60(%rsp)
   27c3e:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
   27c43:	48 8d 05 4e f2 21 00 	lea    0x21f24e(%rip),%rax        # 246e98 <__init_array_end+0xe88>
   27c4a:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   27c4f:	48 c7 44 24 28 03 00 	movq   $0x3,0x28(%rsp)
   27c56:	00 00 
   27c58:	48 c7 44 24 30 00 00 	movq   $0x0,0x30(%rsp)
   27c5f:	00 00 
   27c61:	48 8d 44 24 50       	lea    0x50(%rsp),%rax
   27c66:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
   27c6b:	48 c7 44 24 48 02 00 	movq   $0x2,0x48(%rsp)
   27c72:	00 00 
   27c74:	48 8d 35 ad f6 21 00 	lea    0x21f6ad(%rip),%rsi        # 247328 <__init_array_end+0x1318>
   27c7b:	48 8d 7c 24 20       	lea    0x20(%rsp),%rdi
   27c80:	e8 5b bd ff ff       	callq  239e0 <_ZN3std9panicking15begin_panic_fmt17h7fd3ef9bf535b4d1E>
   27c85:	e9 fe 00 00 00       	jmpq   27d88 <_ZN3std10sys_common12thread_local22register_dtor_fallback9run_dtors17h42216a8e22b36032E+0x4b8>
   27c8a:	48 8d 05 af f6 21 00 	lea    0x21f6af(%rip),%rax        # 247340 <__init_array_end+0x1330>
   27c91:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   27c96:	48 c7 44 24 28 01 00 	movq   $0x1,0x28(%rsp)
   27c9d:	00 00 
   27c9f:	48 c7 44 24 30 00 00 	movq   $0x0,0x30(%rsp)
   27ca6:	00 00 
   27ca8:	48 8d 05 89 57 01 00 	lea    0x15789(%rip),%rax        # 3d438 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0xad8>
   27caf:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
   27cb4:	48 c7 44 24 48 00 00 	movq   $0x0,0x48(%rsp)
   27cbb:	00 00 
   27cbd:	48 8d 7c 24 20       	lea    0x20(%rsp),%rdi
   27cc2:	e8 79 c4 ff ff       	callq  24140 <_ZN3std10sys_common4util5abort17hf0f03bd92b6237cbE>
   27cc7:	e9 bc 00 00 00       	jmpq   27d88 <_ZN3std10sys_common12thread_local22register_dtor_fallback9run_dtors17h42216a8e22b36032E+0x4b8>
   27ccc:	48 8d 44 24 0c       	lea    0xc(%rsp),%rax
   27cd1:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   27cd6:	48 8d 05 bb 47 01 00 	lea    0x147bb(%rip),%rax        # 3c498 <_ZN4core7unicode12unicode_data15grapheme_extend6BITSET17h68ce7f61ccfa32feE+0x9f8>
   27cdd:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   27ce2:	48 8d 44 24 10       	lea    0x10(%rsp),%rax
   27ce7:	48 89 44 24 50       	mov    %rax,0x50(%rsp)
   27cec:	48 8d 05 dd ba ff ff 	lea    -0x4523(%rip),%rax        # 237d0 <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h60ee9c74ee2aa888E>
   27cf3:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
   27cf8:	48 8d 4c 24 18       	lea    0x18(%rsp),%rcx
   27cfd:	48 89 4c 24 60       	mov    %rcx,0x60(%rsp)
   27d02:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
   27d07:	48 8d 05 8a f1 21 00 	lea    0x21f18a(%rip),%rax        # 246e98 <__init_array_end+0xe88>
   27d0e:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   27d13:	48 c7 44 24 28 03 00 	movq   $0x3,0x28(%rsp)
   27d1a:	00 00 
   27d1c:	48 c7 44 24 30 00 00 	movq   $0x0,0x30(%rsp)
   27d23:	00 00 
   27d25:	48 8d 44 24 50       	lea    0x50(%rsp),%rax
   27d2a:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
   27d2f:	48 c7 44 24 48 02 00 	movq   $0x2,0x48(%rsp)
   27d36:	00 00 
   27d38:	48 8d 35 e9 f5 21 00 	lea    0x21f5e9(%rip),%rsi        # 247328 <__init_array_end+0x1318>
   27d3f:	48 8d 7c 24 20       	lea    0x20(%rsp),%rdi
   27d44:	e8 97 bc ff ff       	callq  239e0 <_ZN3std9panicking15begin_panic_fmt17h7fd3ef9bf535b4d1E>
   27d49:	eb 3d                	jmp    27d88 <_ZN3std10sys_common12thread_local22register_dtor_fallback9run_dtors17h42216a8e22b36032E+0x4b8>
   27d4b:	48 8d 05 ee f5 21 00 	lea    0x21f5ee(%rip),%rax        # 247340 <__init_array_end+0x1330>
   27d52:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   27d57:	48 c7 44 24 28 01 00 	movq   $0x1,0x28(%rsp)
   27d5e:	00 00 
   27d60:	48 c7 44 24 30 00 00 	movq   $0x0,0x30(%rsp)
   27d67:	00 00 
   27d69:	48 8d 05 c8 56 01 00 	lea    0x156c8(%rip),%rax        # 3d438 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0xad8>
   27d70:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
   27d75:	48 c7 44 24 48 00 00 	movq   $0x0,0x48(%rsp)
   27d7c:	00 00 
   27d7e:	48 8d 7c 24 20       	lea    0x20(%rsp),%rdi
   27d83:	e8 b8 c3 ff ff       	callq  24140 <_ZN3std10sys_common4util5abort17hf0f03bd92b6237cbE>
   27d88:	0f 0b                	ud2    
   27d8a:	48 89 c5             	mov    %rax,%rbp
   27d8d:	eb 17                	jmp    27da6 <_ZN3std10sys_common12thread_local22register_dtor_fallback9run_dtors17h42216a8e22b36032E+0x4d6>
   27d8f:	48 89 c5             	mov    %rax,%rbp
   27d92:	eb 12                	jmp    27da6 <_ZN3std10sys_common12thread_local22register_dtor_fallback9run_dtors17h42216a8e22b36032E+0x4d6>
   27d94:	48 89 c5             	mov    %rax,%rbp
   27d97:	48 89 5c 24 30       	mov    %rbx,0x30(%rsp)
   27d9c:	48 8d 7c 24 20       	lea    0x20(%rsp),%rdi
   27da1:	e8 1a 00 00 00       	callq  27dc0 <_ZN4core3ptr13drop_in_place17hc1135dc1f667a1a9E>
   27da6:	48 8b 7c 24 70       	mov    0x70(%rsp),%rdi
   27dab:	e8 80 d0 ff ff       	callq  24e30 <_ZN5alloc5alloc8box_free17h20e506aa40102463E>
   27db0:	48 89 ef             	mov    %rbp,%rdi
   27db3:	e8 e8 c2 fd ff       	callq  40a0 <_Unwind_Resume@plt>
   27db8:	0f 0b                	ud2    
   27dba:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000027dc0 <_ZN4core3ptr13drop_in_place17hc1135dc1f667a1a9E>:
   27dc0:	48 8b 4f 10          	mov    0x10(%rdi),%rcx
   27dc4:	48 8b 47 18          	mov    0x18(%rdi),%rax
   27dc8:	48 29 c8             	sub    %rcx,%rax
   27dcb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   27dd0:	48 85 c0             	test   %rax,%rax
   27dd3:	74 16                	je     27deb <_ZN4core3ptr13drop_in_place17hc1135dc1f667a1a9E+0x2b>
   27dd5:	48 8d 51 10          	lea    0x10(%rcx),%rdx
   27dd9:	48 89 57 10          	mov    %rdx,0x10(%rdi)
   27ddd:	48 83 c0 f0          	add    $0xfffffffffffffff0,%rax
   27de1:	48 83 79 08 00       	cmpq   $0x0,0x8(%rcx)
   27de6:	48 89 d1             	mov    %rdx,%rcx
   27de9:	75 e5                	jne    27dd0 <_ZN4core3ptr13drop_in_place17hc1135dc1f667a1a9E+0x10>
   27deb:	48 83 7f 08 00       	cmpq   $0x0,0x8(%rdi)
   27df0:	74 08                	je     27dfa <_ZN4core3ptr13drop_in_place17hc1135dc1f667a1a9E+0x3a>
   27df2:	48 8b 3f             	mov    (%rdi),%rdi
   27df5:	e9 16 d6 fd ff       	jmpq   5410 <__rust_dealloc>
   27dfa:	c3                   	retq   
   27dfb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000027e00 <_ZN4core3ptr13drop_in_place17h6bed1153d7cfe84cE>:
   27e00:	48 8b 07             	mov    (%rdi),%rax
   27e03:	c6 00 00             	movb   $0x0,(%rax)
   27e06:	48 83 7f 08 00       	cmpq   $0x0,0x8(%rdi)
   27e0b:	74 08                	je     27e15 <_ZN4core3ptr13drop_in_place17h6bed1153d7cfe84cE+0x15>
   27e0d:	48 8b 3f             	mov    (%rdi),%rdi
   27e10:	e9 fb d5 fd ff       	jmpq   5410 <__rust_dealloc>
   27e15:	c3                   	retq   
   27e16:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   27e1d:	00 00 00 

0000000000027e20 <_ZN55_$LT$std..path..Display$u20$as$u20$core..fmt..Debug$GT$3fmt17h6de65bdb23bc7e99E>:
   27e20:	48 89 f2             	mov    %rsi,%rdx
   27e23:	48 8b 07             	mov    (%rdi),%rax
   27e26:	48 8b 77 08          	mov    0x8(%rdi),%rsi
   27e2a:	48 89 c7             	mov    %rax,%rdi
   27e2d:	e9 5e 04 00 00       	jmpq   28290 <_ZN73_$LT$std..sys_common..os_str_bytes..Slice$u20$as$u20$core..fmt..Debug$GT$3fmt17hcaa46c22a4717bfdE>
   27e32:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   27e39:	00 00 00 
   27e3c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000027e40 <_ZN60_$LT$std..io..error..Error$u20$as$u20$core..fmt..Display$GT$3fmt17hbf6e43c0b945c8c2E>:
   27e40:	41 56                	push   %r14
   27e42:	53                   	push   %rbx
   27e43:	48 83 ec 78          	sub    $0x78,%rsp
   27e47:	49 89 f6             	mov    %rsi,%r14
   27e4a:	0f b6 07             	movzbl (%rdi),%eax
   27e4d:	48 85 c0             	test   %rax,%rax
   27e50:	74 52                	je     27ea4 <_ZN60_$LT$std..io..error..Error$u20$as$u20$core..fmt..Display$GT$3fmt17hbf6e43c0b945c8c2E+0x64>
   27e52:	48 83 f8 02          	cmp    $0x2,%rax
   27e56:	74 31                	je     27e89 <_ZN60_$LT$std..io..error..Error$u20$as$u20$core..fmt..Display$GT$3fmt17hbf6e43c0b945c8c2E+0x49>
   27e58:	0f b6 57 01          	movzbl 0x1(%rdi),%edx
   27e5c:	48 8d 05 3c 5a 01 00 	lea    0x15a3c(%rip),%rax        # 3d89f <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0xf3f>
   27e63:	b9 16 00 00 00       	mov    $0x16,%ecx
   27e68:	48 8d 35 05 2f 01 00 	lea    0x12f05(%rip),%rsi        # 3ad74 <_ZN4core7unicode12unicode_data2cc19BITSET_INDEX_CHUNKS17h8a1f39cd536e9344E+0x8b4>
   27e6f:	48 63 14 96          	movslq (%rsi,%rdx,4),%rdx
   27e73:	48 01 f2             	add    %rsi,%rdx
   27e76:	ff e2                	jmpq   *%rdx
   27e78:	48 8d 05 81 26 01 00 	lea    0x12681(%rip),%rax        # 3a500 <_ZN4core7unicode12unicode_data2cc19BITSET_INDEX_CHUNKS17h8a1f39cd536e9344E+0x40>
   27e7f:	b9 10 00 00 00       	mov    $0x10,%ecx
   27e84:	e9 a1 01 00 00       	jmpq   2802a <_ZN60_$LT$std..io..error..Error$u20$as$u20$core..fmt..Display$GT$3fmt17hbf6e43c0b945c8c2E+0x1ea>
   27e89:	48 8b 47 08          	mov    0x8(%rdi),%rax
   27e8d:	48 8b 38             	mov    (%rax),%rdi
   27e90:	48 8b 40 08          	mov    0x8(%rax),%rax
   27e94:	48 8b 40 40          	mov    0x40(%rax),%rax
   27e98:	4c 89 f6             	mov    %r14,%rsi
   27e9b:	48 83 c4 78          	add    $0x78,%rsp
   27e9f:	5b                   	pop    %rbx
   27ea0:	41 5e                	pop    %r14
   27ea2:	ff e0                	jmpq   *%rax
   27ea4:	8b 77 04             	mov    0x4(%rdi),%esi
   27ea7:	89 74 24 0c          	mov    %esi,0xc(%rsp)
   27eab:	48 8d 5c 24 10       	lea    0x10(%rsp),%rbx
   27eb0:	48 89 df             	mov    %rbx,%rdi
   27eb3:	e8 68 02 00 00       	callq  28120 <_ZN3std3sys4unix2os12error_string17h4bc904258f32ea6cE>
   27eb8:	48 89 5c 24 28       	mov    %rbx,0x28(%rsp)
   27ebd:	48 8d 05 ac 03 00 00 	lea    0x3ac(%rip),%rax        # 28270 <_ZN60_$LT$alloc..string..String$u20$as$u20$core..fmt..Display$GT$3fmt17h1bf3245f72a90dd7E>
   27ec4:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   27ec9:	48 8d 44 24 0c       	lea    0xc(%rsp),%rax
   27ece:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   27ed3:	48 8d 05 46 7d fe ff 	lea    -0x182ba(%rip),%rax        # fc20 <_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$i32$GT$3fmt17h96181bf4e3064f5cE>
   27eda:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
   27edf:	49 8b 7e 20          	mov    0x20(%r14),%rdi
   27ee3:	49 8b 76 28          	mov    0x28(%r14),%rsi
   27ee7:	48 8d 05 9a f4 21 00 	lea    0x21f49a(%rip),%rax        # 247388 <__init_array_end+0x1378>
   27eee:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
   27ef3:	48 c7 44 24 50 03 00 	movq   $0x3,0x50(%rsp)
   27efa:	00 00 
   27efc:	48 c7 44 24 58 00 00 	movq   $0x0,0x58(%rsp)
   27f03:	00 00 
   27f05:	48 8d 44 24 28       	lea    0x28(%rsp),%rax
   27f0a:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
   27f0f:	48 c7 44 24 70 02 00 	movq   $0x2,0x70(%rsp)
   27f16:	00 00 
   27f18:	48 8d 54 24 48       	lea    0x48(%rsp),%rdx
   27f1d:	e8 0e 0b fe ff       	callq  8a30 <_ZN4core3fmt5write17h0db54a985afb558eE>
   27f22:	89 c3                	mov    %eax,%ebx
   27f24:	48 83 7c 24 18 00    	cmpq   $0x0,0x18(%rsp)
   27f2a:	0f 84 5f 01 00 00    	je     2808f <_ZN60_$LT$std..io..error..Error$u20$as$u20$core..fmt..Display$GT$3fmt17hbf6e43c0b945c8c2E+0x24f>
   27f30:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
   27f35:	e8 d6 d4 fd ff       	callq  5410 <__rust_dealloc>
   27f3a:	e9 50 01 00 00       	jmpq   2808f <_ZN60_$LT$std..io..error..Error$u20$as$u20$core..fmt..Display$GT$3fmt17hbf6e43c0b945c8c2E+0x24f>
   27f3f:	48 8d 05 48 59 01 00 	lea    0x15948(%rip),%rax        # 3d88e <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0xf2e>
   27f46:	b9 11 00 00 00       	mov    $0x11,%ecx
   27f4b:	e9 da 00 00 00       	jmpq   2802a <_ZN60_$LT$std..io..error..Error$u20$as$u20$core..fmt..Display$GT$3fmt17hbf6e43c0b945c8c2E+0x1ea>
   27f50:	48 8d 05 25 59 01 00 	lea    0x15925(%rip),%rax        # 3d87c <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0xf1c>
   27f57:	b9 12 00 00 00       	mov    $0x12,%ecx
   27f5c:	e9 c9 00 00 00       	jmpq   2802a <_ZN60_$LT$std..io..error..Error$u20$as$u20$core..fmt..Display$GT$3fmt17hbf6e43c0b945c8c2E+0x1ea>
   27f61:	48 8d 05 88 25 01 00 	lea    0x12588(%rip),%rax        # 3a4f0 <_ZN4core7unicode12unicode_data2cc19BITSET_INDEX_CHUNKS17h8a1f39cd536e9344E+0x30>
   27f68:	b9 10 00 00 00       	mov    $0x10,%ecx
   27f6d:	e9 b8 00 00 00       	jmpq   2802a <_ZN60_$LT$std..io..error..Error$u20$as$u20$core..fmt..Display$GT$3fmt17hbf6e43c0b945c8c2E+0x1ea>
   27f72:	48 8d 05 f1 58 01 00 	lea    0x158f1(%rip),%rax        # 3d86a <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0xf0a>
   27f79:	b9 12 00 00 00       	mov    $0x12,%ecx
   27f7e:	e9 a7 00 00 00       	jmpq   2802a <_ZN60_$LT$std..io..error..Error$u20$as$u20$core..fmt..Display$GT$3fmt17hbf6e43c0b945c8c2E+0x1ea>
   27f83:	48 8d 05 d3 58 01 00 	lea    0x158d3(%rip),%rax        # 3d85d <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0xefd>
   27f8a:	b9 0d 00 00 00       	mov    $0xd,%ecx
   27f8f:	e9 96 00 00 00       	jmpq   2802a <_ZN60_$LT$std..io..error..Error$u20$as$u20$core..fmt..Display$GT$3fmt17hbf6e43c0b945c8c2E+0x1ea>
   27f94:	48 8d 05 b4 58 01 00 	lea    0x158b4(%rip),%rax        # 3d84f <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0xeef>
   27f9b:	e9 85 00 00 00       	jmpq   28025 <_ZN60_$LT$std..io..error..Error$u20$as$u20$core..fmt..Display$GT$3fmt17hbf6e43c0b945c8c2E+0x1e5>
   27fa0:	48 8d 05 93 58 01 00 	lea    0x15893(%rip),%rax        # 3d83a <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0xeda>
   27fa7:	b9 15 00 00 00       	mov    $0x15,%ecx
   27fac:	eb 7c                	jmp    2802a <_ZN60_$LT$std..io..error..Error$u20$as$u20$core..fmt..Display$GT$3fmt17hbf6e43c0b945c8c2E+0x1ea>
   27fae:	48 8d 05 7a 58 01 00 	lea    0x1587a(%rip),%rax        # 3d82f <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0xecf>
   27fb5:	b9 0b 00 00 00       	mov    $0xb,%ecx
   27fba:	eb 6e                	jmp    2802a <_ZN60_$LT$std..io..error..Error$u20$as$u20$core..fmt..Display$GT$3fmt17hbf6e43c0b945c8c2E+0x1ea>
   27fbc:	48 8d 05 57 58 01 00 	lea    0x15857(%rip),%rax        # 3d81a <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0xeba>
   27fc3:	b9 15 00 00 00       	mov    $0x15,%ecx
   27fc8:	eb 60                	jmp    2802a <_ZN60_$LT$std..io..error..Error$u20$as$u20$core..fmt..Display$GT$3fmt17hbf6e43c0b945c8c2E+0x1ea>
   27fca:	48 8d 05 34 58 01 00 	lea    0x15834(%rip),%rax        # 3d805 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0xea5>
   27fd1:	b9 15 00 00 00       	mov    $0x15,%ecx
   27fd6:	eb 52                	jmp    2802a <_ZN60_$LT$std..io..error..Error$u20$as$u20$core..fmt..Display$GT$3fmt17hbf6e43c0b945c8c2E+0x1ea>
   27fd8:	48 8d 05 0f 58 01 00 	lea    0x1580f(%rip),%rax        # 3d7ee <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0xe8e>
   27fdf:	b9 17 00 00 00       	mov    $0x17,%ecx
   27fe4:	eb 44                	jmp    2802a <_ZN60_$LT$std..io..error..Error$u20$as$u20$core..fmt..Display$GT$3fmt17hbf6e43c0b945c8c2E+0x1ea>
   27fe6:	48 8d 05 f5 57 01 00 	lea    0x157f5(%rip),%rax        # 3d7e2 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0xe82>
   27fed:	b9 0c 00 00 00       	mov    $0xc,%ecx
   27ff2:	eb 36                	jmp    2802a <_ZN60_$LT$std..io..error..Error$u20$as$u20$core..fmt..Display$GT$3fmt17hbf6e43c0b945c8c2E+0x1ea>
   27ff4:	48 8d 05 de 57 01 00 	lea    0x157de(%rip),%rax        # 3d7d9 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0xe79>
   27ffb:	b9 09 00 00 00       	mov    $0x9,%ecx
   28000:	eb 28                	jmp    2802a <_ZN60_$LT$std..io..error..Error$u20$as$u20$core..fmt..Display$GT$3fmt17hbf6e43c0b945c8c2E+0x1ea>
   28002:	48 8d 05 c6 57 01 00 	lea    0x157c6(%rip),%rax        # 3d7cf <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0xe6f>
   28009:	b9 0a 00 00 00       	mov    $0xa,%ecx
   2800e:	eb 1a                	jmp    2802a <_ZN60_$LT$std..io..error..Error$u20$as$u20$core..fmt..Display$GT$3fmt17hbf6e43c0b945c8c2E+0x1ea>
   28010:	48 8d 05 a3 57 01 00 	lea    0x157a3(%rip),%rax        # 3d7ba <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0xe5a>
   28017:	b9 15 00 00 00       	mov    $0x15,%ecx
   2801c:	eb 0c                	jmp    2802a <_ZN60_$LT$std..io..error..Error$u20$as$u20$core..fmt..Display$GT$3fmt17hbf6e43c0b945c8c2E+0x1ea>
   2801e:	48 8d 05 87 57 01 00 	lea    0x15787(%rip),%rax        # 3d7ac <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0xe4c>
   28025:	b9 0e 00 00 00       	mov    $0xe,%ecx
   2802a:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   2802f:	48 89 4c 24 30       	mov    %rcx,0x30(%rsp)
   28034:	48 8d 44 24 28       	lea    0x28(%rsp),%rax
   28039:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   2803e:	48 8d 05 bb d2 ff ff 	lea    -0x2d45(%rip),%rax        # 25300 <_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h9716022a15e5b13cE>
   28045:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   2804a:	49 8b 7e 20          	mov    0x20(%r14),%rdi
   2804e:	49 8b 76 28          	mov    0x28(%r14),%rsi
   28052:	48 8d 05 47 f1 21 00 	lea    0x21f147(%rip),%rax        # 2471a0 <__init_array_end+0x1190>
   28059:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
   2805e:	48 c7 44 24 50 01 00 	movq   $0x1,0x50(%rsp)
   28065:	00 00 
   28067:	48 c7 44 24 58 00 00 	movq   $0x0,0x58(%rsp)
   2806e:	00 00 
   28070:	48 8d 44 24 10       	lea    0x10(%rsp),%rax
   28075:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
   2807a:	48 c7 44 24 70 01 00 	movq   $0x1,0x70(%rsp)
   28081:	00 00 
   28083:	48 8d 54 24 48       	lea    0x48(%rsp),%rdx
   28088:	e8 a3 09 fe ff       	callq  8a30 <_ZN4core3fmt5write17h0db54a985afb558eE>
   2808d:	89 c3                	mov    %eax,%ebx
   2808f:	89 d8                	mov    %ebx,%eax
   28091:	48 83 c4 78          	add    $0x78,%rsp
   28095:	5b                   	pop    %rbx
   28096:	41 5e                	pop    %r14
   28098:	c3                   	retq   
   28099:	48 89 c3             	mov    %rax,%rbx
   2809c:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
   280a1:	e8 0a ce ff ff       	callq  24eb0 <_ZN4core3ptr13drop_in_place17h5563ae43ca5ac214E>
   280a6:	48 89 df             	mov    %rbx,%rdi
   280a9:	e8 f2 bf fd ff       	callq  40a0 <_Unwind_Resume@plt>
   280ae:	0f 0b                	ud2    

00000000000280b0 <_ZN4core3ptr13drop_in_place17h0756a94afff92eb4E>:
   280b0:	41 57                	push   %r15
   280b2:	41 56                	push   %r14
   280b4:	53                   	push   %rbx
   280b5:	80 3f 02             	cmpb   $0x2,(%rdi)
   280b8:	73 06                	jae    280c0 <_ZN4core3ptr13drop_in_place17h0756a94afff92eb4E+0x10>
   280ba:	5b                   	pop    %rbx
   280bb:	41 5e                	pop    %r14
   280bd:	41 5f                	pop    %r15
   280bf:	c3                   	retq   
   280c0:	49 89 ff             	mov    %rdi,%r15
   280c3:	48 8b 5f 08          	mov    0x8(%rdi),%rbx
   280c7:	48 8b 3b             	mov    (%rbx),%rdi
   280ca:	48 8b 43 08          	mov    0x8(%rbx),%rax
   280ce:	ff 10                	callq  *(%rax)
   280d0:	48 8b 43 08          	mov    0x8(%rbx),%rax
   280d4:	48 83 78 08 00       	cmpq   $0x0,0x8(%rax)
   280d9:	74 08                	je     280e3 <_ZN4core3ptr13drop_in_place17h0756a94afff92eb4E+0x33>
   280db:	48 8b 3b             	mov    (%rbx),%rdi
   280de:	e8 2d d3 fd ff       	callq  5410 <__rust_dealloc>
   280e3:	49 8b 7f 08          	mov    0x8(%r15),%rdi
   280e7:	5b                   	pop    %rbx
   280e8:	41 5e                	pop    %r14
   280ea:	41 5f                	pop    %r15
   280ec:	e9 1f d3 fd ff       	jmpq   5410 <__rust_dealloc>
   280f1:	49 89 c6             	mov    %rax,%r14
   280f4:	48 8b 3b             	mov    (%rbx),%rdi
   280f7:	48 8b 73 08          	mov    0x8(%rbx),%rsi
   280fb:	e8 10 c8 ff ff       	callq  24910 <_ZN5alloc5alloc8box_free17h3741427eaa5804e6E>
   28100:	49 8b 7f 08          	mov    0x8(%r15),%rdi
   28104:	e8 27 cd ff ff       	callq  24e30 <_ZN5alloc5alloc8box_free17h20e506aa40102463E>
   28109:	4c 89 f7             	mov    %r14,%rdi
   2810c:	e8 8f bf fd ff       	callq  40a0 <_Unwind_Resume@plt>
   28111:	0f 0b                	ud2    
   28113:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2811a:	00 00 00 
   2811d:	0f 1f 00             	nopl   (%rax)

0000000000028120 <_ZN3std3sys4unix2os12error_string17h4bc904258f32ea6cE>:
   28120:	41 57                	push   %r15
   28122:	41 56                	push   %r14
   28124:	41 54                	push   %r12
   28126:	53                   	push   %rbx
   28127:	48 81 ec b8 00 00 00 	sub    $0xb8,%rsp
   2812e:	89 f0                	mov    %esi,%eax
   28130:	49 89 fe             	mov    %rdi,%r14
   28133:	0f 57 c0             	xorps  %xmm0,%xmm0
   28136:	0f 29 84 24 a0 00 00 	movaps %xmm0,0xa0(%rsp)
   2813d:	00 
   2813e:	0f 29 84 24 90 00 00 	movaps %xmm0,0x90(%rsp)
   28145:	00 
   28146:	0f 29 84 24 80 00 00 	movaps %xmm0,0x80(%rsp)
   2814d:	00 
   2814e:	0f 29 44 24 70       	movaps %xmm0,0x70(%rsp)
   28153:	0f 29 44 24 60       	movaps %xmm0,0x60(%rsp)
   28158:	0f 29 44 24 50       	movaps %xmm0,0x50(%rsp)
   2815d:	0f 29 44 24 40       	movaps %xmm0,0x40(%rsp)
   28162:	0f 29 44 24 30       	movaps %xmm0,0x30(%rsp)
   28167:	48 8d 74 24 30       	lea    0x30(%rsp),%rsi
   2816c:	ba 80 00 00 00       	mov    $0x80,%edx
   28171:	89 c7                	mov    %eax,%edi
   28173:	ff 15 6f fc 21 00    	callq  *0x21fc6f(%rip)        # 247de8 <__xpg_strerror_r@GLIBC_2.3.4>
   28179:	85 c0                	test   %eax,%eax
   2817b:	0f 88 95 00 00 00    	js     28216 <_ZN3std3sys4unix2os12error_string17h4bc904258f32ea6cE+0xf6>
   28181:	48 8d 7c 24 30       	lea    0x30(%rsp),%rdi
   28186:	ff 15 8c fc 21 00    	callq  *0x21fc8c(%rip)        # 247e18 <strlen@GLIBC_2.2.5>
   2818c:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
   28190:	0f 84 9a 00 00 00    	je     28230 <_ZN3std3sys4unix2os12error_string17h4bc904258f32ea6cE+0x110>
   28196:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   2819b:	48 8d 74 24 30       	lea    0x30(%rsp),%rsi
   281a0:	48 89 c2             	mov    %rax,%rdx
   281a3:	e8 b8 35 fe ff       	callq  b760 <_ZN4core3str9from_utf817ha5f1d279f7594d61E>
   281a8:	48 83 7c 24 08 01    	cmpq   $0x1,0x8(%rsp)
   281ae:	0f 84 8c 00 00 00    	je     28240 <_ZN3std3sys4unix2os12error_string17h4bc904258f32ea6cE+0x120>
   281b4:	4c 8b 7c 24 10       	mov    0x10(%rsp),%r15
   281b9:	48 8b 5c 24 18       	mov    0x18(%rsp),%rbx
   281be:	48 85 db             	test   %rbx,%rbx
   281c1:	74 24                	je     281e7 <_ZN3std3sys4unix2os12error_string17h4bc904258f32ea6cE+0xc7>
   281c3:	be 01 00 00 00       	mov    $0x1,%esi
   281c8:	48 89 df             	mov    %rbx,%rdi
   281cb:	e8 f0 d1 fd ff       	callq  53c0 <__rust_alloc>
   281d0:	49 89 c4             	mov    %rax,%r12
   281d3:	48 85 c0             	test   %rax,%rax
   281d6:	75 15                	jne    281ed <_ZN3std3sys4unix2os12error_string17h4bc904258f32ea6cE+0xcd>
   281d8:	be 01 00 00 00       	mov    $0x1,%esi
   281dd:	48 89 df             	mov    %rbx,%rdi
   281e0:	e8 db d2 fd ff       	callq  54c0 <_ZN5alloc5alloc18handle_alloc_error17hf7bb8682f6c8b1d7E>
   281e5:	0f 0b                	ud2    
   281e7:	41 bc 01 00 00 00    	mov    $0x1,%r12d
   281ed:	4c 89 e7             	mov    %r12,%rdi
   281f0:	4c 89 fe             	mov    %r15,%rsi
   281f3:	48 89 da             	mov    %rbx,%rdx
   281f6:	ff 15 d4 fc 21 00    	callq  *0x21fcd4(%rip)        # 247ed0 <memcpy@GLIBC_2.14>
   281fc:	4d 89 26             	mov    %r12,(%r14)
   281ff:	49 89 5e 08          	mov    %rbx,0x8(%r14)
   28203:	49 89 5e 10          	mov    %rbx,0x10(%r14)
   28207:	48 81 c4 b8 00 00 00 	add    $0xb8,%rsp
   2820e:	5b                   	pop    %rbx
   2820f:	41 5c                	pop    %r12
   28211:	41 5e                	pop    %r14
   28213:	41 5f                	pop    %r15
   28215:	c3                   	retq   
   28216:	48 8d 3d cf 56 01 00 	lea    0x156cf(%rip),%rdi        # 3d8ec <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0xf8c>
   2821d:	48 8d 15 cc f1 21 00 	lea    0x21f1cc(%rip),%rdx        # 2473f0 <__init_array_end+0x13e0>
   28224:	be 12 00 00 00       	mov    $0x12,%esi
   28229:	e8 92 b2 ff ff       	callq  234c0 <_ZN3std9panicking11begin_panic17hc5f3eabb2c219d56E>
   2822e:	0f 0b                	ud2    
   28230:	48 c7 c7 ff ff ff ff 	mov    $0xffffffffffffffff,%rdi
   28237:	31 f6                	xor    %esi,%esi
   28239:	e8 92 f9 fd ff       	callq  7bd0 <_ZN4core5slice20slice_index_len_fail17h52736412c1ce1871E>
   2823e:	0f 0b                	ud2    
   28240:	0f 10 44 24 10       	movups 0x10(%rsp),%xmm0
   28245:	0f 29 44 24 20       	movaps %xmm0,0x20(%rsp)
   2824a:	48 8d 3d 70 56 01 00 	lea    0x15670(%rip),%rdi        # 3d8c1 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0xf61>
   28251:	48 8d 0d 60 f1 21 00 	lea    0x21f160(%rip),%rcx        # 2473b8 <__init_array_end+0x13a8>
   28258:	4c 8d 05 79 f1 21 00 	lea    0x21f179(%rip),%r8        # 2473d8 <__init_array_end+0x13c8>
   2825f:	48 8d 54 24 20       	lea    0x20(%rsp),%rdx
   28264:	be 2b 00 00 00       	mov    $0x2b,%esi
   28269:	e8 f2 19 fe ff       	callq  9c60 <_ZN4core6option18expect_none_failed17he0fec195c6e4c2ecE>
   2826e:	0f 0b                	ud2    

0000000000028270 <_ZN60_$LT$alloc..string..String$u20$as$u20$core..fmt..Display$GT$3fmt17h1bf3245f72a90dd7E>:
   28270:	48 89 f0             	mov    %rsi,%rax
   28273:	48 8b 37             	mov    (%rdi),%rsi
   28276:	48 8b 57 10          	mov    0x10(%rdi),%rdx
   2827a:	48 89 c7             	mov    %rax,%rdi
   2827d:	e9 4e fa fd ff       	jmpq   7cd0 <_ZN4core3fmt9Formatter3pad17h7ef001ba65c2db9cE>
   28282:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   28289:	00 00 00 
   2828c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000028290 <_ZN73_$LT$std..sys_common..os_str_bytes..Slice$u20$as$u20$core..fmt..Debug$GT$3fmt17hcaa46c22a4717bfdE>:
   28290:	55                   	push   %rbp
   28291:	41 57                	push   %r15
   28293:	41 56                	push   %r14
   28295:	41 55                	push   %r13
   28297:	41 54                	push   %r12
   28299:	53                   	push   %rbx
   2829a:	48 81 ec 88 00 00 00 	sub    $0x88,%rsp
   282a1:	48 89 f3             	mov    %rsi,%rbx
   282a4:	48 89 fd             	mov    %rdi,%rbp
   282a7:	48 8b 7a 20          	mov    0x20(%rdx),%rdi
   282ab:	48 89 54 24 10       	mov    %rdx,0x10(%rsp)
   282b0:	48 8b 42 28          	mov    0x28(%rdx),%rax
   282b4:	48 8d 35 5c 56 01 00 	lea    0x1565c(%rip),%rsi        # 3d917 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0xfb7>
   282bb:	ba 01 00 00 00       	mov    $0x1,%edx
   282c0:	ff 50 18             	callq  *0x18(%rax)
   282c3:	b1 01                	mov    $0x1,%cl
   282c5:	84 c0                	test   %al,%al
   282c7:	0f 85 19 05 00 00    	jne    287e6 <_ZN73_$LT$std..sys_common..os_str_bytes..Slice$u20$as$u20$core..fmt..Debug$GT$3fmt17hcaa46c22a4717bfdE+0x556>
   282cd:	48 89 6c 24 60       	mov    %rbp,0x60(%rsp)
   282d2:	48 89 5c 24 68       	mov    %rbx,0x68(%rsp)
   282d7:	48 8d 7c 24 28       	lea    0x28(%rsp),%rdi
   282dc:	48 8d 74 24 60       	lea    0x60(%rsp),%rsi
   282e1:	e8 1a 31 fe ff       	callq  b400 <_ZN96_$LT$core..str..lossy..Utf8LossyChunksIter$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hf04031f9d61ea481E>
   282e6:	48 8b 6c 24 28       	mov    0x28(%rsp),%rbp
   282eb:	48 85 ed             	test   %rbp,%rbp
   282ee:	0f 84 d0 04 00 00    	je     287c4 <_ZN73_$LT$std..sys_common..os_str_bytes..Slice$u20$as$u20$core..fmt..Debug$GT$3fmt17hcaa46c22a4717bfdE+0x534>
   282f4:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
   282f9:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   282fe:	48 8b 44 24 40       	mov    0x40(%rsp),%rax
   28303:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   28308:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
   2830d:	48 01 e8             	add    %rbp,%rax
   28310:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
   28315:	41 bf 04 00 00 00    	mov    $0x4,%r15d
   2831b:	45 89 e5             	mov    %r12d,%r13d
   2831e:	41 89 d6             	mov    %edx,%r14d
   28321:	89 cb                	mov    %ecx,%ebx
   28323:	eb 32                	jmp    28357 <_ZN73_$LT$std..sys_common..os_str_bytes..Slice$u20$as$u20$core..fmt..Debug$GT$3fmt17hcaa46c22a4717bfdE+0xc7>
   28325:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2832c:	00 00 00 
   2832f:	90                   	nop
   28330:	45 31 ff             	xor    %r15d,%r15d
   28333:	41 89 d5             	mov    %edx,%r13d
   28336:	44 89 cb             	mov    %r9d,%ebx
   28339:	41 89 d0             	mov    %edx,%r8d
   2833c:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   28341:	48 8b 78 20          	mov    0x20(%rax),%rdi
   28345:	48 8b 40 28          	mov    0x28(%rax),%rax
   28349:	44 89 c6             	mov    %r8d,%esi
   2834c:	ff 50 20             	callq  *0x20(%rax)
   2834f:	84 c0                	test   %al,%al
   28351:	0f 85 8d 04 00 00    	jne    287e4 <_ZN73_$LT$std..sys_common..os_str_bytes..Slice$u20$as$u20$core..fmt..Debug$GT$3fmt17hcaa46c22a4717bfdE+0x554>
   28357:	41 b8 5c 00 00 00    	mov    $0x5c,%r8d
   2835d:	44 89 f8             	mov    %r15d,%eax
   28360:	48 8d 0d 55 2a 01 00 	lea    0x12a55(%rip),%rcx        # 3adbc <_ZN4core7unicode12unicode_data2cc19BITSET_INDEX_CHUNKS17h8a1f39cd536e9344E+0x8fc>
   28367:	48 63 34 81          	movslq (%rcx,%rax,4),%rsi
   2836b:	48 01 ce             	add    %rcx,%rsi
   2836e:	41 89 d9             	mov    %ebx,%r9d
   28371:	44 89 ea             	mov    %r13d,%edx
   28374:	44 89 f8             	mov    %r15d,%eax
   28377:	45 89 f2             	mov    %r14d,%r10d
   2837a:	48 89 e9             	mov    %rbp,%rcx
   2837d:	45 89 ec             	mov    %r13d,%r12d
   28380:	41 bf 01 00 00 00    	mov    $0x1,%r15d
   28386:	ff e6                	jmpq   *%rsi
   28388:	48 8b 7c 24 58       	mov    0x58(%rsp),%rdi
   2838d:	48 39 f9             	cmp    %rdi,%rcx
   28390:	0f 84 5b 03 00 00    	je     286f1 <_ZN73_$LT$std..sys_common..os_str_bytes..Slice$u20$as$u20$core..fmt..Debug$GT$3fmt17hcaa46c22a4717bfdE+0x461>
   28396:	48 8d 69 01          	lea    0x1(%rcx),%rbp
   2839a:	44 0f b6 31          	movzbl (%rcx),%r14d
   2839e:	45 84 f6             	test   %r14b,%r14b
   283a1:	0f 89 b9 00 00 00    	jns    28460 <_ZN73_$LT$std..sys_common..os_str_bytes..Slice$u20$as$u20$core..fmt..Debug$GT$3fmt17hcaa46c22a4717bfdE+0x1d0>
   283a7:	48 39 fd             	cmp    %rdi,%rbp
   283aa:	74 4c                	je     283f8 <_ZN73_$LT$std..sys_common..os_str_bytes..Slice$u20$as$u20$core..fmt..Debug$GT$3fmt17hcaa46c22a4717bfdE+0x168>
   283ac:	0f b6 41 01          	movzbl 0x1(%rcx),%eax
   283b0:	48 83 c1 02          	add    $0x2,%rcx
   283b4:	83 e0 3f             	and    $0x3f,%eax
   283b7:	48 89 cd             	mov    %rcx,%rbp
   283ba:	44 89 f1             	mov    %r14d,%ecx
   283bd:	83 e1 1f             	and    $0x1f,%ecx
   283c0:	41 80 fe df          	cmp    $0xdf,%r14b
   283c4:	76 43                	jbe    28409 <_ZN73_$LT$std..sys_common..os_str_bytes..Slice$u20$as$u20$core..fmt..Debug$GT$3fmt17hcaa46c22a4717bfdE+0x179>
   283c6:	48 39 fd             	cmp    %rdi,%rbp
   283c9:	74 43                	je     2840e <_ZN73_$LT$std..sys_common..os_str_bytes..Slice$u20$as$u20$core..fmt..Debug$GT$3fmt17hcaa46c22a4717bfdE+0x17e>
   283cb:	0f b6 75 00          	movzbl 0x0(%rbp),%esi
   283cf:	48 83 c5 01          	add    $0x1,%rbp
   283d3:	83 e6 3f             	and    $0x3f,%esi
   283d6:	48 89 ea             	mov    %rbp,%rdx
   283d9:	c1 e0 06             	shl    $0x6,%eax
   283dc:	09 f0                	or     %esi,%eax
   283de:	41 80 fe f0          	cmp    $0xf0,%r14b
   283e2:	72 3a                	jb     2841e <_ZN73_$LT$std..sys_common..os_str_bytes..Slice$u20$as$u20$core..fmt..Debug$GT$3fmt17hcaa46c22a4717bfdE+0x18e>
   283e4:	48 39 fa             	cmp    %rdi,%rdx
   283e7:	74 4d                	je     28436 <_ZN73_$LT$std..sys_common..os_str_bytes..Slice$u20$as$u20$core..fmt..Debug$GT$3fmt17hcaa46c22a4717bfdE+0x1a6>
   283e9:	0f b6 32             	movzbl (%rdx),%esi
   283ec:	48 83 c2 01          	add    $0x1,%rdx
   283f0:	83 e6 3f             	and    $0x3f,%esi
   283f3:	48 89 d5             	mov    %rdx,%rbp
   283f6:	eb 40                	jmp    28438 <_ZN73_$LT$std..sys_common..os_str_bytes..Slice$u20$as$u20$core..fmt..Debug$GT$3fmt17hcaa46c22a4717bfdE+0x1a8>
   283f8:	31 c0                	xor    %eax,%eax
   283fa:	48 89 fd             	mov    %rdi,%rbp
   283fd:	44 89 f1             	mov    %r14d,%ecx
   28400:	83 e1 1f             	and    $0x1f,%ecx
   28403:	41 80 fe df          	cmp    $0xdf,%r14b
   28407:	77 bd                	ja     283c6 <_ZN73_$LT$std..sys_common..os_str_bytes..Slice$u20$as$u20$core..fmt..Debug$GT$3fmt17hcaa46c22a4717bfdE+0x136>
   28409:	c1 e1 06             	shl    $0x6,%ecx
   2840c:	eb 13                	jmp    28421 <_ZN73_$LT$std..sys_common..os_str_bytes..Slice$u20$as$u20$core..fmt..Debug$GT$3fmt17hcaa46c22a4717bfdE+0x191>
   2840e:	31 f6                	xor    %esi,%esi
   28410:	48 89 fa             	mov    %rdi,%rdx
   28413:	c1 e0 06             	shl    $0x6,%eax
   28416:	09 f0                	or     %esi,%eax
   28418:	41 80 fe f0          	cmp    $0xf0,%r14b
   2841c:	73 c6                	jae    283e4 <_ZN73_$LT$std..sys_common..os_str_bytes..Slice$u20$as$u20$core..fmt..Debug$GT$3fmt17hcaa46c22a4717bfdE+0x154>
   2841e:	c1 e1 0c             	shl    $0xc,%ecx
   28421:	09 c8                	or     %ecx,%eax
   28423:	41 89 c6             	mov    %eax,%r14d
   28426:	b3 05                	mov    $0x5,%bl
   28428:	41 8d 46 f7          	lea    -0x9(%r14),%eax
   2842c:	83 f8 1e             	cmp    $0x1e,%eax
   2842f:	76 3a                	jbe    2846b <_ZN73_$LT$std..sys_common..os_str_bytes..Slice$u20$as$u20$core..fmt..Debug$GT$3fmt17hcaa46c22a4717bfdE+0x1db>
   28431:	e9 8d 00 00 00       	jmpq   284c3 <_ZN73_$LT$std..sys_common..os_str_bytes..Slice$u20$as$u20$core..fmt..Debug$GT$3fmt17hcaa46c22a4717bfdE+0x233>
   28436:	31 f6                	xor    %esi,%esi
   28438:	83 e1 07             	and    $0x7,%ecx
   2843b:	c1 e1 12             	shl    $0x12,%ecx
   2843e:	c1 e0 06             	shl    $0x6,%eax
   28441:	09 c8                	or     %ecx,%eax
   28443:	09 f0                	or     %esi,%eax
   28445:	41 89 c6             	mov    %eax,%r14d
   28448:	3d 00 00 11 00       	cmp    $0x110000,%eax
   2844d:	0f 84 9e 02 00 00    	je     286f1 <_ZN73_$LT$std..sys_common..os_str_bytes..Slice$u20$as$u20$core..fmt..Debug$GT$3fmt17hcaa46c22a4717bfdE+0x461>
   28453:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2845a:	00 00 00 
   2845d:	0f 1f 00             	nopl   (%rax)
   28460:	b3 05                	mov    $0x5,%bl
   28462:	41 8d 46 f7          	lea    -0x9(%r14),%eax
   28466:	83 f8 1e             	cmp    $0x1e,%eax
   28469:	77 58                	ja     284c3 <_ZN73_$LT$std..sys_common..os_str_bytes..Slice$u20$as$u20$core..fmt..Debug$GT$3fmt17hcaa46c22a4717bfdE+0x233>
   2846b:	41 bd 74 00 00 00    	mov    $0x74,%r13d
   28471:	41 bf 02 00 00 00    	mov    $0x2,%r15d
   28477:	48 8d 0d 6a 29 01 00 	lea    0x1296a(%rip),%rcx        # 3ade8 <_ZN4core7unicode12unicode_data2cc19BITSET_INDEX_CHUNKS17h8a1f39cd536e9344E+0x928>
   2847e:	48 63 04 81          	movslq (%rcx,%rax,4),%rax
   28482:	48 01 c8             	add    %rcx,%rax
   28485:	ff e0                	jmpq   *%rax
   28487:	41 b1 05             	mov    $0x5,%r9b
   2848a:	ba 6e 00 00 00       	mov    $0x6e,%edx
   2848f:	b8 02 00 00 00       	mov    $0x2,%eax
   28494:	89 c1                	mov    %eax,%ecx
   28496:	48 8d 35 1f 29 01 00 	lea    0x1291f(%rip),%rsi        # 3adbc <_ZN4core7unicode12unicode_data2cc19BITSET_INDEX_CHUNKS17h8a1f39cd536e9344E+0x8fc>
   2849d:	48 89 f7             	mov    %rsi,%rdi
   284a0:	48 63 34 8e          	movslq (%rsi,%rcx,4),%rsi
   284a4:	48 01 fe             	add    %rdi,%rsi
   284a7:	45 89 f2             	mov    %r14d,%r10d
   284aa:	48 89 e9             	mov    %rbp,%rcx
   284ad:	41 bc 6e 00 00 00    	mov    $0x6e,%r12d
   284b3:	41 bd 6e 00 00 00    	mov    $0x6e,%r13d
   284b9:	41 bf 01 00 00 00    	mov    $0x1,%r15d
   284bf:	b3 05                	mov    $0x5,%bl
   284c1:	ff e6                	jmpq   *%rsi
   284c3:	41 83 fe 5c          	cmp    $0x5c,%r14d
   284c7:	75 31                	jne    284fa <_ZN73_$LT$std..sys_common..os_str_bytes..Slice$u20$as$u20$core..fmt..Debug$GT$3fmt17hcaa46c22a4717bfdE+0x26a>
   284c9:	41 b1 05             	mov    $0x5,%r9b
   284cc:	b8 02 00 00 00       	mov    $0x2,%eax
   284d1:	89 c1                	mov    %eax,%ecx
   284d3:	48 8d 15 e2 28 01 00 	lea    0x128e2(%rip),%rdx        # 3adbc <_ZN4core7unicode12unicode_data2cc19BITSET_INDEX_CHUNKS17h8a1f39cd536e9344E+0x8fc>
   284da:	48 63 34 8a          	movslq (%rdx,%rcx,4),%rsi
   284de:	48 01 d6             	add    %rdx,%rsi
   284e1:	44 89 f2             	mov    %r14d,%edx
   284e4:	45 89 f2             	mov    %r14d,%r10d
   284e7:	48 89 e9             	mov    %rbp,%rcx
   284ea:	45 89 f4             	mov    %r14d,%r12d
   284ed:	45 89 f5             	mov    %r14d,%r13d
   284f0:	41 bf 01 00 00 00    	mov    $0x1,%r15d
   284f6:	b3 05                	mov    $0x5,%bl
   284f8:	ff e6                	jmpq   *%rsi
   284fa:	44 89 f0             	mov    %r14d,%eax
   284fd:	c1 e8 06             	shr    $0x6,%eax
   28500:	48 89 c1             	mov    %rax,%rcx
   28503:	48 c1 e9 04          	shr    $0x4,%rcx
   28507:	41 81 fe 00 ec 01 00 	cmp    $0x1ec00,%r14d
   2850e:	72 4f                	jb     2855f <_ZN73_$LT$std..sys_common..os_str_bytes..Slice$u20$as$u20$core..fmt..Debug$GT$3fmt17hcaa46c22a4717bfdE+0x2cf>
   28510:	be 1e 00 00 00       	mov    $0x1e,%esi
   28515:	48 81 f9 80 03 00 00 	cmp    $0x380,%rcx
   2851c:	74 56                	je     28574 <_ZN73_$LT$std..sys_common..os_str_bytes..Slice$u20$as$u20$core..fmt..Debug$GT$3fmt17hcaa46c22a4717bfdE+0x2e4>
   2851e:	e9 c3 00 00 00       	jmpq   285e6 <_ZN73_$LT$std..sys_common..os_str_bytes..Slice$u20$as$u20$core..fmt..Debug$GT$3fmt17hcaa46c22a4717bfdE+0x356>
   28523:	41 b1 05             	mov    $0x5,%r9b
   28526:	ba 72 00 00 00       	mov    $0x72,%edx
   2852b:	b8 02 00 00 00       	mov    $0x2,%eax
   28530:	89 c1                	mov    %eax,%ecx
   28532:	48 8d 35 83 28 01 00 	lea    0x12883(%rip),%rsi        # 3adbc <_ZN4core7unicode12unicode_data2cc19BITSET_INDEX_CHUNKS17h8a1f39cd536e9344E+0x8fc>
   28539:	48 89 f7             	mov    %rsi,%rdi
   2853c:	48 63 34 8e          	movslq (%rsi,%rcx,4),%rsi
   28540:	48 01 fe             	add    %rdi,%rsi
   28543:	45 89 f2             	mov    %r14d,%r10d
   28546:	48 89 e9             	mov    %rbp,%rcx
   28549:	41 bc 72 00 00 00    	mov    $0x72,%r12d
   2854f:	41 bd 72 00 00 00    	mov    $0x72,%r13d
   28555:	41 bf 01 00 00 00    	mov    $0x1,%r15d
   2855b:	b3 05                	mov    $0x5,%bl
   2855d:	ff e6                	jmpq   *%rsi
   2855f:	48 8d 15 cd 32 01 00 	lea    0x132cd(%rip),%rdx        # 3b833 <_ZN4core7unicode12unicode_data15grapheme_extend17BITSET_CHUNKS_MAP17he1ca2faf12a885b8E>
   28566:	0f b6 34 11          	movzbl (%rcx,%rdx,1),%esi
   2856a:	48 83 fe 1e          	cmp    $0x1e,%rsi
   2856e:	0f 87 86 02 00 00    	ja     287fa <_ZN73_$LT$std..sys_common..os_str_bytes..Slice$u20$as$u20$core..fmt..Debug$GT$3fmt17hcaa46c22a4717bfdE+0x56a>
   28574:	83 e0 0f             	and    $0xf,%eax
   28577:	48 c1 e6 04          	shl    $0x4,%rsi
   2857b:	48 8d 0d 2c 33 01 00 	lea    0x1332c(%rip),%rcx        # 3b8ae <_ZN4core7unicode12unicode_data15grapheme_extend19BITSET_INDEX_CHUNKS17h8c26348c7fad7845E>
   28582:	48 01 ce             	add    %rcx,%rsi
   28585:	0f b6 34 30          	movzbl (%rax,%rsi,1),%esi
   28589:	48 81 fe 8b 00 00 00 	cmp    $0x8b,%rsi
   28590:	0f 83 77 02 00 00    	jae    2880d <_ZN73_$LT$std..sys_common..os_str_bytes..Slice$u20$as$u20$core..fmt..Debug$GT$3fmt17hcaa46c22a4717bfdE+0x57d>
   28596:	48 8d 05 03 35 01 00 	lea    0x13503(%rip),%rax        # 3baa0 <_ZN4core7unicode12unicode_data15grapheme_extend6BITSET17h68ce7f61ccfa32feE>
   2859d:	48 8b 04 f0          	mov    (%rax,%rsi,8),%rax
   285a1:	4c 0f a3 f0          	bt     %r14,%rax
   285a5:	73 3f                	jae    285e6 <_ZN73_$LT$std..sys_common..os_str_bytes..Slice$u20$as$u20$core..fmt..Debug$GT$3fmt17hcaa46c22a4717bfdE+0x356>
   285a7:	44 89 f0             	mov    %r14d,%eax
   285aa:	83 c8 01             	or     $0x1,%eax
   285ad:	0f bd c0             	bsr    %eax,%eax
   285b0:	83 f0 1c             	xor    $0x1c,%eax
   285b3:	c1 e8 02             	shr    $0x2,%eax
   285b6:	83 f0 07             	xor    $0x7,%eax
   285b9:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   285be:	41 b1 05             	mov    $0x5,%r9b
   285c1:	b8 03 00 00 00       	mov    $0x3,%eax
   285c6:	89 c1                	mov    %eax,%ecx
   285c8:	48 8d 15 ed 27 01 00 	lea    0x127ed(%rip),%rdx        # 3adbc <_ZN4core7unicode12unicode_data2cc19BITSET_INDEX_CHUNKS17h8a1f39cd536e9344E+0x8fc>
   285cf:	48 63 34 8a          	movslq (%rdx,%rcx,4),%rsi
   285d3:	48 01 d6             	add    %rdx,%rsi
   285d6:	45 89 f2             	mov    %r14d,%r10d
   285d9:	48 89 e9             	mov    %rbp,%rcx
   285dc:	41 bf 01 00 00 00    	mov    $0x1,%r15d
   285e2:	b3 05                	mov    $0x5,%bl
   285e4:	ff e6                	jmpq   *%rsi
   285e6:	44 89 f7             	mov    %r14d,%edi
   285e9:	e8 62 09 fe ff       	callq  8f50 <_ZN4core7unicode9printable12is_printable17hf3d1ac2cea80390bE>
   285ee:	41 bf 01 00 00 00    	mov    $0x1,%r15d
   285f4:	84 c0                	test   %al,%al
   285f6:	0f 85 ed 00 00 00    	jne    286e9 <_ZN73_$LT$std..sys_common..os_str_bytes..Slice$u20$as$u20$core..fmt..Debug$GT$3fmt17hcaa46c22a4717bfdE+0x459>
   285fc:	44 89 f0             	mov    %r14d,%eax
   285ff:	83 c8 01             	or     $0x1,%eax
   28602:	0f bd c0             	bsr    %eax,%eax
   28605:	83 f0 1c             	xor    $0x1c,%eax
   28608:	c1 e8 02             	shr    $0x2,%eax
   2860b:	83 f0 07             	xor    $0x7,%eax
   2860e:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   28613:	41 b1 05             	mov    $0x5,%r9b
   28616:	b8 03 00 00 00       	mov    $0x3,%eax
   2861b:	41 bf 01 00 00 00    	mov    $0x1,%r15d
   28621:	89 c1                	mov    %eax,%ecx
   28623:	48 8d 15 92 27 01 00 	lea    0x12792(%rip),%rdx        # 3adbc <_ZN4core7unicode12unicode_data2cc19BITSET_INDEX_CHUNKS17h8a1f39cd536e9344E+0x8fc>
   2862a:	48 63 34 8a          	movslq (%rdx,%rcx,4),%rsi
   2862e:	48 01 d6             	add    %rdx,%rsi
   28631:	45 89 f2             	mov    %r14d,%r10d
   28634:	48 89 e9             	mov    %rbp,%rcx
   28637:	b3 05                	mov    $0x5,%bl
   28639:	41 b8 5c 00 00 00    	mov    $0x5c,%r8d
   2863f:	ff e6                	jmpq   *%rsi
   28641:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   28648:	00 00 00 
   2864b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   28650:	b3 04                	mov    $0x4,%bl
   28652:	41 0f b6 f1          	movzbl %r9b,%esi
   28656:	48 8d 0d 73 27 01 00 	lea    0x12773(%rip),%rcx        # 3add0 <_ZN4core7unicode12unicode_data2cc19BITSET_INDEX_CHUNKS17h8a1f39cd536e9344E+0x910>
   2865d:	48 63 3c b1          	movslq (%rcx,%rsi,4),%rdi
   28661:	48 01 cf             	add    %rcx,%rdi
   28664:	45 89 f2             	mov    %r14d,%r10d
   28667:	48 89 e9             	mov    %rbp,%rcx
   2866a:	41 89 d4             	mov    %edx,%r12d
   2866d:	41 89 d5             	mov    %edx,%r13d
   28670:	41 89 c7             	mov    %eax,%r15d
   28673:	ff e7                	jmpq   *%rdi
   28675:	41 b8 7d 00 00 00    	mov    $0x7d,%r8d
   2867b:	31 db                	xor    %ebx,%ebx
   2867d:	eb 5f                	jmp    286de <_ZN73_$LT$std..sys_common..os_str_bytes..Slice$u20$as$u20$core..fmt..Debug$GT$3fmt17hcaa46c22a4717bfdE+0x44e>
   2867f:	48 8b 5c 24 08       	mov    0x8(%rsp),%rbx
   28684:	8d 0c 9d 00 00 00 00 	lea    0x0(,%rbx,4),%ecx
   2868b:	44 89 f7             	mov    %r14d,%edi
   2868e:	d3 ef                	shr    %cl,%edi
   28690:	83 e7 0f             	and    $0xf,%edi
   28693:	8d 4f 30             	lea    0x30(%rdi),%ecx
   28696:	41 89 f8             	mov    %edi,%r8d
   28699:	41 83 c0 57          	add    $0x57,%r8d
   2869d:	40 80 ff 0a          	cmp    $0xa,%dil
   286a1:	44 0f 42 c1          	cmovb  %ecx,%r8d
   286a5:	48 83 eb 01          	sub    $0x1,%rbx
   286a9:	b9 00 00 00 00       	mov    $0x0,%ecx
   286ae:	48 0f 42 d9          	cmovb  %rcx,%rbx
   286b2:	48 89 5c 24 08       	mov    %rbx,0x8(%rsp)
   286b7:	b9 01 00 00 00       	mov    $0x1,%ecx
   286bc:	0f 42 f1             	cmovb  %ecx,%esi
   286bf:	41 89 d5             	mov    %edx,%r13d
   286c2:	41 89 c7             	mov    %eax,%r15d
   286c5:	89 f3                	mov    %esi,%ebx
   286c7:	e9 70 fc ff ff       	jmpq   2833c <_ZN73_$LT$std..sys_common..os_str_bytes..Slice$u20$as$u20$core..fmt..Debug$GT$3fmt17hcaa46c22a4717bfdE+0xac>
   286cc:	41 b8 7b 00 00 00    	mov    $0x7b,%r8d
   286d2:	b3 02                	mov    $0x2,%bl
   286d4:	eb 08                	jmp    286de <_ZN73_$LT$std..sys_common..os_str_bytes..Slice$u20$as$u20$core..fmt..Debug$GT$3fmt17hcaa46c22a4717bfdE+0x44e>
   286d6:	41 b8 75 00 00 00    	mov    $0x75,%r8d
   286dc:	b3 03                	mov    $0x3,%bl
   286de:	41 89 d5             	mov    %edx,%r13d
   286e1:	41 89 c7             	mov    %eax,%r15d
   286e4:	e9 53 fc ff ff       	jmpq   2833c <_ZN73_$LT$std..sys_common..os_str_bytes..Slice$u20$as$u20$core..fmt..Debug$GT$3fmt17hcaa46c22a4717bfdE+0xac>
   286e9:	45 89 f5             	mov    %r14d,%r13d
   286ec:	e9 66 fc ff ff       	jmpq   28357 <_ZN73_$LT$std..sys_common..os_str_bytes..Slice$u20$as$u20$core..fmt..Debug$GT$3fmt17hcaa46c22a4717bfdE+0xc7>
   286f1:	45 89 d7             	mov    %r10d,%r15d
   286f4:	45 89 ce             	mov    %r9d,%r14d
   286f7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   286fe:	00 00 
   28700:	48 8b 5c 24 20       	mov    0x20(%rsp),%rbx
   28705:	48 85 db             	test   %rbx,%rbx
   28708:	0f 84 93 00 00 00    	je     287a1 <_ZN73_$LT$std..sys_common..os_str_bytes..Slice$u20$as$u20$core..fmt..Debug$GT$3fmt17hcaa46c22a4717bfdE+0x511>
   2870e:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   28713:	48 89 44 24 70       	mov    %rax,0x70(%rsp)
   28718:	48 83 c0 01          	add    $0x1,%rax
   2871c:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   28721:	48 8d 44 24 70       	lea    0x70(%rsp),%rax
   28726:	48 89 44 24 78       	mov    %rax,0x78(%rsp)
   2872b:	48 8d 05 ee 00 00 00 	lea    0xee(%rip),%rax        # 28820 <_ZN45_$LT$$RF$T$u20$as$u20$core..fmt..UpperHex$GT$3fmt17h2b11f0d8b0a52fa6E>
   28732:	48 89 84 24 80 00 00 	mov    %rax,0x80(%rsp)
   28739:	00 
   2873a:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   2873f:	48 8b 78 20          	mov    0x20(%rax),%rdi
   28743:	48 8b 70 28          	mov    0x28(%rax),%rsi
   28747:	48 8d 05 ba ec 21 00 	lea    0x21ecba(%rip),%rax        # 247408 <__init_array_end+0x13f8>
   2874e:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   28753:	48 c7 44 24 30 01 00 	movq   $0x1,0x30(%rsp)
   2875a:	00 00 
   2875c:	48 8d 05 b5 51 01 00 	lea    0x151b5(%rip),%rax        # 3d918 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0xfb8>
   28763:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   28768:	48 c7 44 24 40 01 00 	movq   $0x1,0x40(%rsp)
   2876f:	00 00 
   28771:	48 8d 44 24 78       	lea    0x78(%rsp),%rax
   28776:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
   2877b:	48 c7 44 24 50 01 00 	movq   $0x1,0x50(%rsp)
   28782:	00 00 
   28784:	48 8d 54 24 28       	lea    0x28(%rsp),%rdx
   28789:	e8 a2 02 fe ff       	callq  8a30 <_ZN4core3fmt5write17h0db54a985afb558eE>
   2878e:	48 83 c3 ff          	add    $0xffffffffffffffff,%rbx
   28792:	48 89 5c 24 20       	mov    %rbx,0x20(%rsp)
   28797:	84 c0                	test   %al,%al
   28799:	0f 84 61 ff ff ff    	je     28700 <_ZN73_$LT$std..sys_common..os_str_bytes..Slice$u20$as$u20$core..fmt..Debug$GT$3fmt17hcaa46c22a4717bfdE+0x470>
   2879f:	eb 43                	jmp    287e4 <_ZN73_$LT$std..sys_common..os_str_bytes..Slice$u20$as$u20$core..fmt..Debug$GT$3fmt17hcaa46c22a4717bfdE+0x554>
   287a1:	48 8d 7c 24 28       	lea    0x28(%rsp),%rdi
   287a6:	48 8d 74 24 60       	lea    0x60(%rsp),%rsi
   287ab:	e8 50 2c fe ff       	callq  b400 <_ZN96_$LT$core..str..lossy..Utf8LossyChunksIter$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hf04031f9d61ea481E>
   287b0:	48 8b 6c 24 28       	mov    0x28(%rsp),%rbp
   287b5:	48 85 ed             	test   %rbp,%rbp
   287b8:	44 89 f1             	mov    %r14d,%ecx
   287bb:	44 89 fa             	mov    %r15d,%edx
   287be:	0f 85 30 fb ff ff    	jne    282f4 <_ZN73_$LT$std..sys_common..os_str_bytes..Slice$u20$as$u20$core..fmt..Debug$GT$3fmt17hcaa46c22a4717bfdE+0x64>
   287c4:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   287c9:	48 8b 78 20          	mov    0x20(%rax),%rdi
   287cd:	48 8b 40 28          	mov    0x28(%rax),%rax
   287d1:	48 8d 35 3f 51 01 00 	lea    0x1513f(%rip),%rsi        # 3d917 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0xfb7>
   287d8:	ba 01 00 00 00       	mov    $0x1,%edx
   287dd:	ff 50 18             	callq  *0x18(%rax)
   287e0:	89 c1                	mov    %eax,%ecx
   287e2:	eb 02                	jmp    287e6 <_ZN73_$LT$std..sys_common..os_str_bytes..Slice$u20$as$u20$core..fmt..Debug$GT$3fmt17hcaa46c22a4717bfdE+0x556>
   287e4:	b1 01                	mov    $0x1,%cl
   287e6:	89 c8                	mov    %ecx,%eax
   287e8:	48 81 c4 88 00 00 00 	add    $0x88,%rsp
   287ef:	5b                   	pop    %rbx
   287f0:	41 5c                	pop    %r12
   287f2:	41 5d                	pop    %r13
   287f4:	41 5e                	pop    %r14
   287f6:	41 5f                	pop    %r15
   287f8:	5d                   	pop    %rbp
   287f9:	c3                   	retq   
   287fa:	48 8d 3d 8f db 21 00 	lea    0x21db8f(%rip),%rdi        # 246390 <__init_array_end+0x380>
   28801:	ba 1f 00 00 00       	mov    $0x1f,%edx
   28806:	e8 f5 eb fd ff       	callq  7400 <_ZN4core9panicking18panic_bounds_check17h83121a2515f55ceeE>
   2880b:	0f 0b                	ud2    
   2880d:	48 8d 3d 94 db 21 00 	lea    0x21db94(%rip),%rdi        # 2463a8 <__init_array_end+0x398>
   28814:	ba 8b 00 00 00       	mov    $0x8b,%edx
   28819:	e8 e2 eb fd ff       	callq  7400 <_ZN4core9panicking18panic_bounds_check17h83121a2515f55ceeE>
   2881e:	0f 0b                	ud2    

0000000000028820 <_ZN45_$LT$$RF$T$u20$as$u20$core..fmt..UpperHex$GT$3fmt17h2b11f0d8b0a52fa6E>:
   28820:	48 81 ec 88 00 00 00 	sub    $0x88,%rsp
   28827:	48 8b 07             	mov    (%rdi),%rax
   2882a:	8a 00                	mov    (%rax),%al
   2882c:	4c 8d 84 24 88 00 00 	lea    0x88(%rsp),%r8
   28833:	00 
   28834:	45 31 c9             	xor    %r9d,%r9d
   28837:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   2883e:	00 00 
   28840:	89 c1                	mov    %eax,%ecx
   28842:	80 e1 0f             	and    $0xf,%cl
   28845:	c0 e8 04             	shr    $0x4,%al
   28848:	8d 51 30             	lea    0x30(%rcx),%edx
   2884b:	8d 79 37             	lea    0x37(%rcx),%edi
   2884e:	80 f9 0a             	cmp    $0xa,%cl
   28851:	0f b6 ca             	movzbl %dl,%ecx
   28854:	40 0f b6 d7          	movzbl %dil,%edx
   28858:	0f 42 d1             	cmovb  %ecx,%edx
   2885b:	41 88 50 ff          	mov    %dl,-0x1(%r8)
   2885f:	49 83 c0 ff          	add    $0xffffffffffffffff,%r8
   28863:	49 83 c1 01          	add    $0x1,%r9
   28867:	84 c0                	test   %al,%al
   28869:	75 d5                	jne    28840 <_ZN45_$LT$$RF$T$u20$as$u20$core..fmt..UpperHex$GT$3fmt17h2b11f0d8b0a52fa6E+0x20>
   2886b:	bf 80 00 00 00       	mov    $0x80,%edi
   28870:	4c 29 cf             	sub    %r9,%rdi
   28873:	48 81 ff 81 00 00 00 	cmp    $0x81,%rdi
   2887a:	73 21                	jae    2889d <_ZN45_$LT$$RF$T$u20$as$u20$core..fmt..UpperHex$GT$3fmt17h2b11f0d8b0a52fa6E+0x7d>
   2887c:	48 8d 15 73 49 01 00 	lea    0x14973(%rip),%rdx        # 3d1f6 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x896>
   28883:	b9 02 00 00 00       	mov    $0x2,%ecx
   28888:	48 89 f7             	mov    %rsi,%rdi
   2888b:	be 01 00 00 00       	mov    $0x1,%esi
   28890:	e8 5b ed fd ff       	callq  75f0 <_ZN4core3fmt9Formatter12pad_integral17hc55c32e78eb96054E>
   28895:	48 81 c4 88 00 00 00 	add    $0x88,%rsp
   2889c:	c3                   	retq   
   2889d:	be 80 00 00 00       	mov    $0x80,%esi
   288a2:	e8 a9 f3 fd ff       	callq  7c50 <_ZN4core5slice22slice_index_order_fail17h7bcf2f94ba9e06deE>
   288a7:	0f 0b                	ud2    
   288a9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000288b0 <_ZN90_$LT$std..panicking..begin_panic_handler..PanicPayload$u20$as$u20$core..panic..BoxMeUp$GT$8take_box17h7a4d2c8cdff35537E>:
   288b0:	41 56                	push   %r14
   288b2:	53                   	push   %rbx
   288b3:	48 83 ec 58          	sub    $0x58,%rsp
   288b7:	48 89 fb             	mov    %rdi,%rbx
   288ba:	4c 8b 77 08          	mov    0x8(%rdi),%r14
   288be:	4d 85 f6             	test   %r14,%r14
   288c1:	0f 85 8b 00 00 00    	jne    28952 <_ZN90_$LT$std..panicking..begin_panic_handler..PanicPayload$u20$as$u20$core..panic..BoxMeUp$GT$8take_box17h7a4d2c8cdff35537E+0xa2>
   288c7:	48 8b 03             	mov    (%rbx),%rax
   288ca:	48 c7 04 24 01 00 00 	movq   $0x1,(%rsp)
   288d1:	00 
   288d2:	0f 57 c0             	xorps  %xmm0,%xmm0
   288d5:	0f 11 44 24 08       	movups %xmm0,0x8(%rsp)
   288da:	48 89 e1             	mov    %rsp,%rcx
   288dd:	48 89 4c 24 18       	mov    %rcx,0x18(%rsp)
   288e2:	0f 10 00             	movups (%rax),%xmm0
   288e5:	0f 10 48 10          	movups 0x10(%rax),%xmm1
   288e9:	0f 10 50 20          	movups 0x20(%rax),%xmm2
   288ed:	0f 29 54 24 40       	movaps %xmm2,0x40(%rsp)
   288f2:	0f 29 4c 24 30       	movaps %xmm1,0x30(%rsp)
   288f7:	0f 29 44 24 20       	movaps %xmm0,0x20(%rsp)
   288fc:	48 8d 35 15 eb 21 00 	lea    0x21eb15(%rip),%rsi        # 247418 <__init_array_end+0x1408>
   28903:	48 8d 7c 24 18       	lea    0x18(%rsp),%rdi
   28908:	48 8d 54 24 20       	lea    0x20(%rsp),%rdx
   2890d:	e8 1e 01 fe ff       	callq  8a30 <_ZN4core3fmt5write17h0db54a985afb558eE>
   28912:	4c 8d 73 08          	lea    0x8(%rbx),%r14
   28916:	0f 10 04 24          	movups (%rsp),%xmm0
   2891a:	0f 29 44 24 20       	movaps %xmm0,0x20(%rsp)
   2891f:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   28924:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   28929:	49 8b 3e             	mov    (%r14),%rdi
   2892c:	48 85 ff             	test   %rdi,%rdi
   2892f:	74 0c                	je     2893d <_ZN90_$LT$std..panicking..begin_panic_handler..PanicPayload$u20$as$u20$core..panic..BoxMeUp$GT$8take_box17h7a4d2c8cdff35537E+0x8d>
   28931:	48 83 7b 10 00       	cmpq   $0x0,0x10(%rbx)
   28936:	74 05                	je     2893d <_ZN90_$LT$std..panicking..begin_panic_handler..PanicPayload$u20$as$u20$core..panic..BoxMeUp$GT$8take_box17h7a4d2c8cdff35537E+0x8d>
   28938:	e8 d3 ca fd ff       	callq  5410 <__rust_dealloc>
   2893d:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
   28942:	49 89 46 10          	mov    %rax,0x10(%r14)
   28946:	0f 28 44 24 20       	movaps 0x20(%rsp),%xmm0
   2894b:	41 0f 11 06          	movups %xmm0,(%r14)
   2894f:	4d 8b 36             	mov    (%r14),%r14
   28952:	0f 10 43 10          	movups 0x10(%rbx),%xmm0
   28956:	0f 29 04 24          	movaps %xmm0,(%rsp)
   2895a:	48 c7 43 08 01 00 00 	movq   $0x1,0x8(%rbx)
   28961:	00 
   28962:	0f 57 c0             	xorps  %xmm0,%xmm0
   28965:	0f 11 43 10          	movups %xmm0,0x10(%rbx)
   28969:	0f 28 04 24          	movaps (%rsp),%xmm0
   2896d:	0f 29 44 24 20       	movaps %xmm0,0x20(%rsp)
   28972:	bf 18 00 00 00       	mov    $0x18,%edi
   28977:	be 08 00 00 00       	mov    $0x8,%esi
   2897c:	e8 3f ca fd ff       	callq  53c0 <__rust_alloc>
   28981:	48 85 c0             	test   %rax,%rax
   28984:	74 1b                	je     289a1 <_ZN90_$LT$std..panicking..begin_panic_handler..PanicPayload$u20$as$u20$core..panic..BoxMeUp$GT$8take_box17h7a4d2c8cdff35537E+0xf1>
   28986:	4c 89 30             	mov    %r14,(%rax)
   28989:	0f 28 44 24 20       	movaps 0x20(%rsp),%xmm0
   2898e:	0f 11 40 08          	movups %xmm0,0x8(%rax)
   28992:	48 8d 15 af ea 21 00 	lea    0x21eaaf(%rip),%rdx        # 247448 <__init_array_end+0x1438>
   28999:	48 83 c4 58          	add    $0x58,%rsp
   2899d:	5b                   	pop    %rbx
   2899e:	41 5e                	pop    %r14
   289a0:	c3                   	retq   
   289a1:	bf 18 00 00 00       	mov    $0x18,%edi
   289a6:	be 08 00 00 00       	mov    $0x8,%esi
   289ab:	e8 10 cb fd ff       	callq  54c0 <_ZN5alloc5alloc18handle_alloc_error17hf7bb8682f6c8b1d7E>
   289b0:	0f 0b                	ud2    
   289b2:	48 89 c3             	mov    %rax,%rbx
   289b5:	48 89 e7             	mov    %rsp,%rdi
   289b8:	e8 f3 c4 ff ff       	callq  24eb0 <_ZN4core3ptr13drop_in_place17h5563ae43ca5ac214E>
   289bd:	48 89 df             	mov    %rbx,%rdi
   289c0:	e8 db b6 fd ff       	callq  40a0 <_Unwind_Resume@plt>
   289c5:	0f 0b                	ud2    
   289c7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   289ce:	00 00 

00000000000289d0 <_ZN90_$LT$std..panicking..begin_panic_handler..PanicPayload$u20$as$u20$core..panic..BoxMeUp$GT$3get17he7c1b49fda40d164E>:
   289d0:	41 56                	push   %r14
   289d2:	53                   	push   %rbx
   289d3:	48 83 ec 58          	sub    $0x58,%rsp
   289d7:	4c 8d 77 08          	lea    0x8(%rdi),%r14
   289db:	48 83 7f 08 00       	cmpq   $0x0,0x8(%rdi)
   289e0:	0f 85 87 00 00 00    	jne    28a6d <_ZN90_$LT$std..panicking..begin_panic_handler..PanicPayload$u20$as$u20$core..panic..BoxMeUp$GT$3get17he7c1b49fda40d164E+0x9d>
   289e6:	48 89 fb             	mov    %rdi,%rbx
   289e9:	48 8b 07             	mov    (%rdi),%rax
   289ec:	48 c7 04 24 01 00 00 	movq   $0x1,(%rsp)
   289f3:	00 
   289f4:	0f 57 c0             	xorps  %xmm0,%xmm0
   289f7:	0f 11 44 24 08       	movups %xmm0,0x8(%rsp)
   289fc:	48 89 e1             	mov    %rsp,%rcx
   289ff:	48 89 4c 24 18       	mov    %rcx,0x18(%rsp)
   28a04:	0f 10 00             	movups (%rax),%xmm0
   28a07:	0f 10 48 10          	movups 0x10(%rax),%xmm1
   28a0b:	0f 10 50 20          	movups 0x20(%rax),%xmm2
   28a0f:	0f 29 54 24 40       	movaps %xmm2,0x40(%rsp)
   28a14:	0f 29 4c 24 30       	movaps %xmm1,0x30(%rsp)
   28a19:	0f 29 44 24 20       	movaps %xmm0,0x20(%rsp)
   28a1e:	48 8d 35 f3 e9 21 00 	lea    0x21e9f3(%rip),%rsi        # 247418 <__init_array_end+0x1408>
   28a25:	48 8d 7c 24 18       	lea    0x18(%rsp),%rdi
   28a2a:	48 8d 54 24 20       	lea    0x20(%rsp),%rdx
   28a2f:	e8 fc ff fd ff       	callq  8a30 <_ZN4core3fmt5write17h0db54a985afb558eE>
   28a34:	0f 10 04 24          	movups (%rsp),%xmm0
   28a38:	0f 29 44 24 20       	movaps %xmm0,0x20(%rsp)
   28a3d:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   28a42:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   28a47:	49 8b 3e             	mov    (%r14),%rdi
   28a4a:	48 85 ff             	test   %rdi,%rdi
   28a4d:	74 0c                	je     28a5b <_ZN90_$LT$std..panicking..begin_panic_handler..PanicPayload$u20$as$u20$core..panic..BoxMeUp$GT$3get17he7c1b49fda40d164E+0x8b>
   28a4f:	48 83 7b 10 00       	cmpq   $0x0,0x10(%rbx)
   28a54:	74 05                	je     28a5b <_ZN90_$LT$std..panicking..begin_panic_handler..PanicPayload$u20$as$u20$core..panic..BoxMeUp$GT$3get17he7c1b49fda40d164E+0x8b>
   28a56:	e8 b5 c9 fd ff       	callq  5410 <__rust_dealloc>
   28a5b:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
   28a60:	49 89 46 10          	mov    %rax,0x10(%r14)
   28a64:	0f 28 44 24 20       	movaps 0x20(%rsp),%xmm0
   28a69:	41 0f 11 06          	movups %xmm0,(%r14)
   28a6d:	48 8d 15 d4 e9 21 00 	lea    0x21e9d4(%rip),%rdx        # 247448 <__init_array_end+0x1438>
   28a74:	4c 89 f0             	mov    %r14,%rax
   28a77:	48 83 c4 58          	add    $0x58,%rsp
   28a7b:	5b                   	pop    %rbx
   28a7c:	41 5e                	pop    %r14
   28a7e:	c3                   	retq   
   28a7f:	48 89 c3             	mov    %rax,%rbx
   28a82:	48 89 e7             	mov    %rsp,%rdi
   28a85:	e8 26 c4 ff ff       	callq  24eb0 <_ZN4core3ptr13drop_in_place17h5563ae43ca5ac214E>
   28a8a:	48 89 df             	mov    %rbx,%rdi
   28a8d:	e8 0e b6 fd ff       	callq  40a0 <_Unwind_Resume@plt>
   28a92:	0f 0b                	ud2    
   28a94:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   28a9b:	00 00 00 
   28a9e:	66 90                	xchg   %ax,%ax

0000000000028aa0 <_ZN36_$LT$T$u20$as$u20$core..any..Any$GT$7type_id17h70d3c30fb2477e73E>:
   28aa0:	48 b8 7a 15 59 df af 	movabs $0xf3f27bafdf59157a,%rax
   28aa7:	7b f2 f3 
   28aaa:	c3                   	retq   
   28aab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000028ab0 <_ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$9write_str17h22259ad706d6bffbE>:
   28ab0:	41 57                	push   %r15
   28ab2:	41 56                	push   %r14
   28ab4:	41 54                	push   %r12
   28ab6:	53                   	push   %rbx
   28ab7:	50                   	push   %rax
   28ab8:	49 89 d7             	mov    %rdx,%r15
   28abb:	49 89 f6             	mov    %rsi,%r14
   28abe:	4c 8b 27             	mov    (%rdi),%r12
   28ac1:	49 8b 74 24 08       	mov    0x8(%r12),%rsi
   28ac6:	49 8b 5c 24 10       	mov    0x10(%r12),%rbx
   28acb:	48 89 f0             	mov    %rsi,%rax
   28ace:	48 29 d8             	sub    %rbx,%rax
   28ad1:	48 39 d0             	cmp    %rdx,%rax
   28ad4:	73 42                	jae    28b18 <_ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$9write_str17h22259ad706d6bffbE+0x68>
   28ad6:	4c 01 fb             	add    %r15,%rbx
   28ad9:	0f 82 87 00 00 00    	jb     28b66 <_ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$9write_str17h22259ad706d6bffbE+0xb6>
   28adf:	48 8d 04 36          	lea    (%rsi,%rsi,1),%rax
   28ae3:	48 39 d8             	cmp    %rbx,%rax
   28ae6:	48 0f 47 d8          	cmova  %rax,%rbx
   28aea:	48 85 f6             	test   %rsi,%rsi
   28aed:	74 53                	je     28b42 <_ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$9write_str17h22259ad706d6bffbE+0x92>
   28aef:	49 8b 3c 24          	mov    (%r12),%rdi
   28af3:	ba 01 00 00 00       	mov    $0x1,%edx
   28af8:	48 89 d9             	mov    %rbx,%rcx
   28afb:	e8 20 c9 fd ff       	callq  5420 <__rust_realloc>
   28b00:	48 89 c7             	mov    %rax,%rdi
   28b03:	48 85 c0             	test   %rax,%rax
   28b06:	74 4f                	je     28b57 <_ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$9write_str17h22259ad706d6bffbE+0xa7>
   28b08:	49 89 3c 24          	mov    %rdi,(%r12)
   28b0c:	49 89 5c 24 08       	mov    %rbx,0x8(%r12)
   28b11:	49 8b 5c 24 10       	mov    0x10(%r12),%rbx
   28b16:	eb 04                	jmp    28b1c <_ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$9write_str17h22259ad706d6bffbE+0x6c>
   28b18:	49 8b 3c 24          	mov    (%r12),%rdi
   28b1c:	4a 8d 04 3b          	lea    (%rbx,%r15,1),%rax
   28b20:	49 89 44 24 10       	mov    %rax,0x10(%r12)
   28b25:	48 01 df             	add    %rbx,%rdi
   28b28:	4c 89 f6             	mov    %r14,%rsi
   28b2b:	4c 89 fa             	mov    %r15,%rdx
   28b2e:	ff 15 9c f3 21 00    	callq  *0x21f39c(%rip)        # 247ed0 <memcpy@GLIBC_2.14>
   28b34:	31 c0                	xor    %eax,%eax
   28b36:	48 83 c4 08          	add    $0x8,%rsp
   28b3a:	5b                   	pop    %rbx
   28b3b:	41 5c                	pop    %r12
   28b3d:	41 5e                	pop    %r14
   28b3f:	41 5f                	pop    %r15
   28b41:	c3                   	retq   
   28b42:	be 01 00 00 00       	mov    $0x1,%esi
   28b47:	48 89 df             	mov    %rbx,%rdi
   28b4a:	e8 71 c8 fd ff       	callq  53c0 <__rust_alloc>
   28b4f:	48 89 c7             	mov    %rax,%rdi
   28b52:	48 85 c0             	test   %rax,%rax
   28b55:	75 b1                	jne    28b08 <_ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$9write_str17h22259ad706d6bffbE+0x58>
   28b57:	be 01 00 00 00       	mov    $0x1,%esi
   28b5c:	48 89 df             	mov    %rbx,%rdi
   28b5f:	e8 5c c9 fd ff       	callq  54c0 <_ZN5alloc5alloc18handle_alloc_error17hf7bb8682f6c8b1d7E>
   28b64:	0f 0b                	ud2    
   28b66:	e8 65 c9 fd ff       	callq  54d0 <_ZN5alloc7raw_vec17capacity_overflow17h9be7d3ce681ac1a6E>
   28b6b:	0f 0b                	ud2    
   28b6d:	0f 1f 00             	nopl   (%rax)

0000000000028b70 <_ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$10write_char17h1ab797ff80659affE>:
   28b70:	55                   	push   %rbp
   28b71:	41 57                	push   %r15
   28b73:	41 56                	push   %r14
   28b75:	53                   	push   %rbx
   28b76:	50                   	push   %rax
   28b77:	89 f5                	mov    %esi,%ebp
   28b79:	4c 8b 3f             	mov    (%rdi),%r15
   28b7c:	81 fe 80 00 00 00    	cmp    $0x80,%esi
   28b82:	73 48                	jae    28bcc <_ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$10write_char17h1ab797ff80659affE+0x5c>
   28b84:	49 8b 77 10          	mov    0x10(%r15),%rsi
   28b88:	49 3b 77 08          	cmp    0x8(%r15),%rsi
   28b8c:	75 74                	jne    28c02 <_ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$10write_char17h1ab797ff80659affE+0x92>
   28b8e:	48 89 f3             	mov    %rsi,%rbx
   28b91:	48 ff c3             	inc    %rbx
   28b94:	0f 84 90 01 00 00    	je     28d2a <_ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$10write_char17h1ab797ff80659affE+0x1ba>
   28b9a:	48 8d 04 36          	lea    (%rsi,%rsi,1),%rax
   28b9e:	48 39 d8             	cmp    %rbx,%rax
   28ba1:	48 0f 47 d8          	cmova  %rax,%rbx
   28ba5:	48 85 f6             	test   %rsi,%rsi
   28ba8:	0f 84 10 01 00 00    	je     28cbe <_ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$10write_char17h1ab797ff80659affE+0x14e>
   28bae:	49 8b 3f             	mov    (%r15),%rdi
   28bb1:	ba 01 00 00 00       	mov    $0x1,%edx
   28bb6:	48 89 d9             	mov    %rbx,%rcx
   28bb9:	e8 62 c8 fd ff       	callq  5420 <__rust_realloc>
   28bbe:	48 85 c0             	test   %rax,%rax
   28bc1:	0f 85 09 01 00 00    	jne    28cd0 <_ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$10write_char17h1ab797ff80659affE+0x160>
   28bc7:	e9 65 01 00 00       	jmpq   28d31 <_ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$10write_char17h1ab797ff80659affE+0x1c1>
   28bcc:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%rsp)
   28bd3:	00 
   28bd4:	4c 8d 74 24 04       	lea    0x4(%rsp),%r14
   28bd9:	89 e8                	mov    %ebp,%eax
   28bdb:	81 fd 00 08 00 00    	cmp    $0x800,%ebp
   28be1:	73 27                	jae    28c0a <_ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$10write_char17h1ab797ff80659affE+0x9a>
   28be3:	c1 e8 06             	shr    $0x6,%eax
   28be6:	24 1f                	and    $0x1f,%al
   28be8:	0c c0                	or     $0xc0,%al
   28bea:	88 44 24 04          	mov    %al,0x4(%rsp)
   28bee:	40 80 e5 3f          	and    $0x3f,%bpl
   28bf2:	40 80 cd 80          	or     $0x80,%bpl
   28bf6:	40 88 6c 24 05       	mov    %bpl,0x5(%rsp)
   28bfb:	bd 02 00 00 00       	mov    $0x2,%ebp
   28c00:	eb 71                	jmp    28c73 <_ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$10write_char17h1ab797ff80659affE+0x103>
   28c02:	49 8b 07             	mov    (%r15),%rax
   28c05:	e9 d1 00 00 00       	jmpq   28cdb <_ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$10write_char17h1ab797ff80659affE+0x16b>
   28c0a:	81 fd 00 00 01 00    	cmp    $0x10000,%ebp
   28c10:	73 2c                	jae    28c3e <_ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$10write_char17h1ab797ff80659affE+0xce>
   28c12:	c1 e8 0c             	shr    $0xc,%eax
   28c15:	24 0f                	and    $0xf,%al
   28c17:	0c e0                	or     $0xe0,%al
   28c19:	88 44 24 04          	mov    %al,0x4(%rsp)
   28c1d:	89 e8                	mov    %ebp,%eax
   28c1f:	c1 e8 06             	shr    $0x6,%eax
   28c22:	24 3f                	and    $0x3f,%al
   28c24:	0c 80                	or     $0x80,%al
   28c26:	88 44 24 05          	mov    %al,0x5(%rsp)
   28c2a:	40 80 e5 3f          	and    $0x3f,%bpl
   28c2e:	40 80 cd 80          	or     $0x80,%bpl
   28c32:	40 88 6c 24 06       	mov    %bpl,0x6(%rsp)
   28c37:	bd 03 00 00 00       	mov    $0x3,%ebp
   28c3c:	eb 35                	jmp    28c73 <_ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$10write_char17h1ab797ff80659affE+0x103>
   28c3e:	c1 e8 12             	shr    $0x12,%eax
   28c41:	0c f0                	or     $0xf0,%al
   28c43:	88 44 24 04          	mov    %al,0x4(%rsp)
   28c47:	89 e8                	mov    %ebp,%eax
   28c49:	c1 e8 0c             	shr    $0xc,%eax
   28c4c:	24 3f                	and    $0x3f,%al
   28c4e:	0c 80                	or     $0x80,%al
   28c50:	88 44 24 05          	mov    %al,0x5(%rsp)
   28c54:	89 e8                	mov    %ebp,%eax
   28c56:	c1 e8 06             	shr    $0x6,%eax
   28c59:	24 3f                	and    $0x3f,%al
   28c5b:	0c 80                	or     $0x80,%al
   28c5d:	88 44 24 06          	mov    %al,0x6(%rsp)
   28c61:	40 80 e5 3f          	and    $0x3f,%bpl
   28c65:	40 80 cd 80          	or     $0x80,%bpl
   28c69:	40 88 6c 24 07       	mov    %bpl,0x7(%rsp)
   28c6e:	bd 04 00 00 00       	mov    $0x4,%ebp
   28c73:	49 8b 77 08          	mov    0x8(%r15),%rsi
   28c77:	49 8b 5f 10          	mov    0x10(%r15),%rbx
   28c7b:	48 89 f0             	mov    %rsi,%rax
   28c7e:	48 29 d8             	sub    %rbx,%rax
   28c81:	48 39 e8             	cmp    %rbp,%rax
   28c84:	73 33                	jae    28cb9 <_ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$10write_char17h1ab797ff80659affE+0x149>
   28c86:	48 01 eb             	add    %rbp,%rbx
   28c89:	0f 82 9b 00 00 00    	jb     28d2a <_ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$10write_char17h1ab797ff80659affE+0x1ba>
   28c8f:	48 8d 04 36          	lea    (%rsi,%rsi,1),%rax
   28c93:	48 39 d8             	cmp    %rbx,%rax
   28c96:	48 0f 47 d8          	cmova  %rax,%rbx
   28c9a:	48 85 f6             	test   %rsi,%rsi
   28c9d:	74 47                	je     28ce6 <_ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$10write_char17h1ab797ff80659affE+0x176>
   28c9f:	49 8b 3f             	mov    (%r15),%rdi
   28ca2:	ba 01 00 00 00       	mov    $0x1,%edx
   28ca7:	48 89 d9             	mov    %rbx,%rcx
   28caa:	e8 71 c7 fd ff       	callq  5420 <__rust_realloc>
   28caf:	48 89 c7             	mov    %rax,%rdi
   28cb2:	48 85 c0             	test   %rax,%rax
   28cb5:	75 44                	jne    28cfb <_ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$10write_char17h1ab797ff80659affE+0x18b>
   28cb7:	eb 78                	jmp    28d31 <_ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$10write_char17h1ab797ff80659affE+0x1c1>
   28cb9:	49 8b 3f             	mov    (%r15),%rdi
   28cbc:	eb 48                	jmp    28d06 <_ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$10write_char17h1ab797ff80659affE+0x196>
   28cbe:	be 01 00 00 00       	mov    $0x1,%esi
   28cc3:	48 89 df             	mov    %rbx,%rdi
   28cc6:	e8 f5 c6 fd ff       	callq  53c0 <__rust_alloc>
   28ccb:	48 85 c0             	test   %rax,%rax
   28cce:	74 61                	je     28d31 <_ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$10write_char17h1ab797ff80659affE+0x1c1>
   28cd0:	49 89 07             	mov    %rax,(%r15)
   28cd3:	49 89 5f 08          	mov    %rbx,0x8(%r15)
   28cd7:	49 8b 77 10          	mov    0x10(%r15),%rsi
   28cdb:	40 88 2c 30          	mov    %bpl,(%rax,%rsi,1)
   28cdf:	49 83 47 10 01       	addq   $0x1,0x10(%r15)
   28ce4:	eb 37                	jmp    28d1d <_ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$10write_char17h1ab797ff80659affE+0x1ad>
   28ce6:	be 01 00 00 00       	mov    $0x1,%esi
   28ceb:	48 89 df             	mov    %rbx,%rdi
   28cee:	e8 cd c6 fd ff       	callq  53c0 <__rust_alloc>
   28cf3:	48 89 c7             	mov    %rax,%rdi
   28cf6:	48 85 c0             	test   %rax,%rax
   28cf9:	74 36                	je     28d31 <_ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$10write_char17h1ab797ff80659affE+0x1c1>
   28cfb:	49 89 3f             	mov    %rdi,(%r15)
   28cfe:	49 89 5f 08          	mov    %rbx,0x8(%r15)
   28d02:	49 8b 5f 10          	mov    0x10(%r15),%rbx
   28d06:	48 8d 04 2b          	lea    (%rbx,%rbp,1),%rax
   28d0a:	49 89 47 10          	mov    %rax,0x10(%r15)
   28d0e:	48 01 df             	add    %rbx,%rdi
   28d11:	4c 89 f6             	mov    %r14,%rsi
   28d14:	48 89 ea             	mov    %rbp,%rdx
   28d17:	ff 15 b3 f1 21 00    	callq  *0x21f1b3(%rip)        # 247ed0 <memcpy@GLIBC_2.14>
   28d1d:	31 c0                	xor    %eax,%eax
   28d1f:	48 83 c4 08          	add    $0x8,%rsp
   28d23:	5b                   	pop    %rbx
   28d24:	41 5e                	pop    %r14
   28d26:	41 5f                	pop    %r15
   28d28:	5d                   	pop    %rbp
   28d29:	c3                   	retq   
   28d2a:	e8 a1 c7 fd ff       	callq  54d0 <_ZN5alloc7raw_vec17capacity_overflow17h9be7d3ce681ac1a6E>
   28d2f:	0f 0b                	ud2    
   28d31:	be 01 00 00 00       	mov    $0x1,%esi
   28d36:	48 89 df             	mov    %rbx,%rdi
   28d39:	e8 82 c7 fd ff       	callq  54c0 <_ZN5alloc5alloc18handle_alloc_error17hf7bb8682f6c8b1d7E>
   28d3e:	0f 0b                	ud2    

0000000000028d40 <_ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$9write_fmt17hceeda8808bb2f6cfE>:
   28d40:	48 83 ec 48          	sub    $0x48,%rsp
   28d44:	48 8b 07             	mov    (%rdi),%rax
   28d47:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   28d4c:	0f 10 06             	movups (%rsi),%xmm0
   28d4f:	0f 10 4e 10          	movups 0x10(%rsi),%xmm1
   28d53:	0f 10 56 20          	movups 0x20(%rsi),%xmm2
   28d57:	0f 29 54 24 30       	movaps %xmm2,0x30(%rsp)
   28d5c:	0f 29 4c 24 20       	movaps %xmm1,0x20(%rsp)
   28d61:	0f 29 44 24 10       	movaps %xmm0,0x10(%rsp)
   28d66:	48 8d 35 ab e6 21 00 	lea    0x21e6ab(%rip),%rsi        # 247418 <__init_array_end+0x1408>
   28d6d:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   28d72:	48 8d 54 24 10       	lea    0x10(%rsp),%rdx
   28d77:	e8 b4 fc fd ff       	callq  8a30 <_ZN4core3fmt5write17h0db54a985afb558eE>
   28d7c:	48 83 c4 48          	add    $0x48,%rsp
   28d80:	c3                   	retq   
   28d81:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   28d88:	00 00 00 
   28d8b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000028d90 <_ZN36_$LT$T$u20$as$u20$core..any..Any$GT$7type_id17hc9cacaa9f254bab6E>:
   28d90:	48 b8 dc 40 5e 4c cc 	movabs $0xb752f0cc4c5e40dc,%rax
   28d97:	f0 52 b7 
   28d9a:	c3                   	retq   
   28d9b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000028da0 <_ZN91_$LT$std..panicking..begin_panic..PanicPayload$LT$A$GT$$u20$as$u20$core..panic..BoxMeUp$GT$8take_box17h5d3dcb9ceaba55cbE>:
   28da0:	41 56                	push   %r14
   28da2:	53                   	push   %rbx
   28da3:	50                   	push   %rax
   28da4:	48 8b 1f             	mov    (%rdi),%rbx
   28da7:	4c 8b 77 08          	mov    0x8(%rdi),%r14
   28dab:	48 c7 07 00 00 00 00 	movq   $0x0,(%rdi)
   28db2:	48 85 db             	test   %rbx,%rbx
   28db5:	74 2a                	je     28de1 <_ZN91_$LT$std..panicking..begin_panic..PanicPayload$LT$A$GT$$u20$as$u20$core..panic..BoxMeUp$GT$8take_box17h5d3dcb9ceaba55cbE+0x41>
   28db7:	bf 10 00 00 00       	mov    $0x10,%edi
   28dbc:	be 08 00 00 00       	mov    $0x8,%esi
   28dc1:	e8 fa c5 fd ff       	callq  53c0 <__rust_alloc>
   28dc6:	48 85 c0             	test   %rax,%rax
   28dc9:	74 1d                	je     28de8 <_ZN91_$LT$std..panicking..begin_panic..PanicPayload$LT$A$GT$$u20$as$u20$core..panic..BoxMeUp$GT$8take_box17h5d3dcb9ceaba55cbE+0x48>
   28dcb:	48 89 18             	mov    %rbx,(%rax)
   28dce:	4c 89 70 08          	mov    %r14,0x8(%rax)
   28dd2:	48 8d 15 b7 e6 21 00 	lea    0x21e6b7(%rip),%rdx        # 247490 <__init_array_end+0x1480>
   28dd9:	48 83 c4 08          	add    $0x8,%rsp
   28ddd:	5b                   	pop    %rbx
   28dde:	41 5e                	pop    %r14
   28de0:	c3                   	retq   
   28de1:	e8 3a 00 00 00       	callq  28e20 <_ZN3std7process5abort17he9433c577a649e1aE>
   28de6:	0f 0b                	ud2    
   28de8:	bf 10 00 00 00       	mov    $0x10,%edi
   28ded:	be 08 00 00 00       	mov    $0x8,%esi
   28df2:	e8 c9 c6 fd ff       	callq  54c0 <_ZN5alloc5alloc18handle_alloc_error17hf7bb8682f6c8b1d7E>
   28df7:	0f 0b                	ud2    
   28df9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000028e00 <_ZN91_$LT$std..panicking..begin_panic..PanicPayload$LT$A$GT$$u20$as$u20$core..panic..BoxMeUp$GT$3get17h0c08356a557c7d1cE>:
   28e00:	50                   	push   %rax
   28e01:	48 83 3f 00          	cmpq   $0x0,(%rdi)
   28e05:	74 0c                	je     28e13 <_ZN91_$LT$std..panicking..begin_panic..PanicPayload$LT$A$GT$$u20$as$u20$core..panic..BoxMeUp$GT$3get17h0c08356a557c7d1cE+0x13>
   28e07:	48 89 f8             	mov    %rdi,%rax
   28e0a:	48 8d 15 7f e6 21 00 	lea    0x21e67f(%rip),%rdx        # 247490 <__init_array_end+0x1480>
   28e11:	59                   	pop    %rcx
   28e12:	c3                   	retq   
   28e13:	e8 08 00 00 00       	callq  28e20 <_ZN3std7process5abort17he9433c577a649e1aE>
   28e18:	0f 0b                	ud2    
   28e1a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000028e20 <_ZN3std7process5abort17he9433c577a649e1aE>:
   28e20:	50                   	push   %rax
   28e21:	e8 7a b3 ff ff       	callq  241a0 <_ZN3std3sys4unix14abort_internal17h7f749c8888a2e168E>
   28e26:	0f 0b                	ud2    
   28e28:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   28e2f:	00 

0000000000028e30 <_ZN36_$LT$T$u20$as$u20$core..any..Any$GT$7type_id17h312e7737e82daa9eE>:
   28e30:	48 b8 64 97 b0 70 d9 	movabs $0x111094d970b09764,%rax
   28e37:	94 10 11 
   28e3a:	c3                   	retq   
   28e3b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000028e40 <_ZN62_$LT$std..ffi..c_str..NulError$u20$as$u20$core..fmt..Debug$GT$3fmt17he72f7712631656ccE>:
   28e40:	41 56                	push   %r14
   28e42:	53                   	push   %rbx
   28e43:	48 83 ec 68          	sub    $0x68,%rsp
   28e47:	49 89 f6             	mov    %rsi,%r14
   28e4a:	48 89 fb             	mov    %rdi,%rbx
   28e4d:	48 8b 7e 20          	mov    0x20(%rsi),%rdi
   28e51:	48 8b 46 28          	mov    0x28(%rsi),%rax
   28e55:	48 8d 35 cc 18 01 00 	lea    0x118cc(%rip),%rsi        # 3a728 <_ZN4core7unicode12unicode_data2cc19BITSET_INDEX_CHUNKS17h8a1f39cd536e9344E+0x268>
   28e5c:	ba 08 00 00 00       	mov    $0x8,%edx
   28e61:	ff 50 18             	callq  *0x18(%rax)
   28e64:	48 89 5c 24 08       	mov    %rbx,0x8(%rsp)
   28e69:	48 83 c3 08          	add    $0x8,%rbx
   28e6d:	84 c0                	test   %al,%al
   28e6f:	74 0f                	je     28e80 <_ZN62_$LT$std..ffi..c_str..NulError$u20$as$u20$core..fmt..Debug$GT$3fmt17he72f7712631656ccE+0x40>
   28e71:	48 89 5c 24 08       	mov    %rbx,0x8(%rsp)
   28e76:	b0 01                	mov    $0x1,%al
   28e78:	48 83 c4 68          	add    $0x68,%rsp
   28e7c:	5b                   	pop    %rbx
   28e7d:	41 5e                	pop    %r14
   28e7f:	c3                   	retq   
   28e80:	41 f6 46 30 04       	testb  $0x4,0x30(%r14)
   28e85:	49 8b 7e 20          	mov    0x20(%r14),%rdi
   28e89:	49 8b 46 28          	mov    0x28(%r14),%rax
   28e8d:	48 8b 40 18          	mov    0x18(%rax),%rax
   28e91:	75 75                	jne    28f08 <_ZN62_$LT$std..ffi..c_str..NulError$u20$as$u20$core..fmt..Debug$GT$3fmt17he72f7712631656ccE+0xc8>
   28e93:	48 8d 35 e5 42 01 00 	lea    0x142e5(%rip),%rsi        # 3d17f <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x81f>
   28e9a:	ba 01 00 00 00       	mov    $0x1,%edx
   28e9f:	ff d0                	callq  *%rax
   28ea1:	84 c0                	test   %al,%al
   28ea3:	75 cc                	jne    28e71 <_ZN62_$LT$std..ffi..c_str..NulError$u20$as$u20$core..fmt..Debug$GT$3fmt17he72f7712631656ccE+0x31>
   28ea5:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   28eaa:	4c 89 f6             	mov    %r14,%rsi
   28ead:	e8 4e 05 00 00       	callq  29400 <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h85c3650d73fa0c5cE>
   28eb2:	48 89 5c 24 08       	mov    %rbx,0x8(%rsp)
   28eb7:	84 c0                	test   %al,%al
   28eb9:	0f 85 61 01 00 00    	jne    29020 <_ZN62_$LT$std..ffi..c_str..NulError$u20$as$u20$core..fmt..Debug$GT$3fmt17he72f7712631656ccE+0x1e0>
   28ebf:	41 8b 46 30          	mov    0x30(%r14),%eax
   28ec3:	a8 04                	test   $0x4,%al
   28ec5:	0f 85 ec 00 00 00    	jne    28fb7 <_ZN62_$LT$std..ffi..c_str..NulError$u20$as$u20$core..fmt..Debug$GT$3fmt17he72f7712631656ccE+0x177>
   28ecb:	49 8b 7e 20          	mov    0x20(%r14),%rdi
   28ecf:	49 8b 46 28          	mov    0x28(%r14),%rax
   28ed3:	48 8d 35 0a 43 01 00 	lea    0x1430a(%rip),%rsi        # 3d1e4 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x884>
   28eda:	ba 02 00 00 00       	mov    $0x2,%edx
   28edf:	ff 50 18             	callq  *0x18(%rax)
   28ee2:	84 c0                	test   %al,%al
   28ee4:	0f 85 36 01 00 00    	jne    29020 <_ZN62_$LT$std..ffi..c_str..NulError$u20$as$u20$core..fmt..Debug$GT$3fmt17he72f7712631656ccE+0x1e0>
   28eea:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   28eef:	4c 89 f6             	mov    %r14,%rsi
   28ef2:	e8 79 01 00 00       	callq  29070 <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h64de1231197154e0E>
   28ef7:	89 c1                	mov    %eax,%ecx
   28ef9:	b0 01                	mov    $0x1,%al
   28efb:	84 c9                	test   %cl,%cl
   28efd:	0f 85 75 ff ff ff    	jne    28e78 <_ZN62_$LT$std..ffi..c_str..NulError$u20$as$u20$core..fmt..Debug$GT$3fmt17he72f7712631656ccE+0x38>
   28f03:	e9 47 01 00 00       	jmpq   2904f <_ZN62_$LT$std..ffi..c_str..NulError$u20$as$u20$core..fmt..Debug$GT$3fmt17he72f7712631656ccE+0x20f>
   28f08:	48 8d 35 44 39 01 00 	lea    0x13944(%rip),%rsi        # 3c853 <str.1+0xa3>
   28f0f:	ba 02 00 00 00       	mov    $0x2,%edx
   28f14:	ff d0                	callq  *%rax
   28f16:	84 c0                	test   %al,%al
   28f18:	0f 85 53 ff ff ff    	jne    28e71 <_ZN62_$LT$std..ffi..c_str..NulError$u20$as$u20$core..fmt..Debug$GT$3fmt17he72f7712631656ccE+0x31>
   28f1e:	41 8b 46 30          	mov    0x30(%r14),%eax
   28f22:	c6 44 24 07 01       	movb   $0x1,0x7(%rsp)
   28f27:	41 0f 10 46 20       	movups 0x20(%r14),%xmm0
   28f2c:	0f 29 44 24 50       	movaps %xmm0,0x50(%rsp)
   28f31:	48 8d 4c 24 07       	lea    0x7(%rsp),%rcx
   28f36:	48 89 4c 24 60       	mov    %rcx,0x60(%rsp)
   28f3b:	41 8b 4e 34          	mov    0x34(%r14),%ecx
   28f3f:	41 8a 56 38          	mov    0x38(%r14),%dl
   28f43:	41 0f 10 06          	movups (%r14),%xmm0
   28f47:	41 0f 10 4e 10       	movups 0x10(%r14),%xmm1
   28f4c:	89 44 24 40          	mov    %eax,0x40(%rsp)
   28f50:	89 4c 24 44          	mov    %ecx,0x44(%rsp)
   28f54:	88 54 24 48          	mov    %dl,0x48(%rsp)
   28f58:	0f 29 44 24 10       	movaps %xmm0,0x10(%rsp)
   28f5d:	0f 29 4c 24 20       	movaps %xmm1,0x20(%rsp)
   28f62:	48 8d 44 24 50       	lea    0x50(%rsp),%rax
   28f67:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   28f6c:	48 8d 05 25 d7 21 00 	lea    0x21d725(%rip),%rax        # 246698 <__init_array_end+0x688>
   28f73:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   28f78:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   28f7d:	48 8d 74 24 10       	lea    0x10(%rsp),%rsi
   28f82:	e8 79 04 00 00       	callq  29400 <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h85c3650d73fa0c5cE>
   28f87:	84 c0                	test   %al,%al
   28f89:	0f 85 e2 fe ff ff    	jne    28e71 <_ZN62_$LT$std..ffi..c_str..NulError$u20$as$u20$core..fmt..Debug$GT$3fmt17he72f7712631656ccE+0x31>
   28f8f:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
   28f94:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
   28f99:	48 8d 35 af 38 01 00 	lea    0x138af(%rip),%rsi        # 3c84f <str.1+0x9f>
   28fa0:	ba 02 00 00 00       	mov    $0x2,%edx
   28fa5:	ff 50 18             	callq  *0x18(%rax)
   28fa8:	48 89 5c 24 08       	mov    %rbx,0x8(%rsp)
   28fad:	84 c0                	test   %al,%al
   28faf:	0f 84 0a ff ff ff    	je     28ebf <_ZN62_$LT$std..ffi..c_str..NulError$u20$as$u20$core..fmt..Debug$GT$3fmt17he72f7712631656ccE+0x7f>
   28fb5:	eb 69                	jmp    29020 <_ZN62_$LT$std..ffi..c_str..NulError$u20$as$u20$core..fmt..Debug$GT$3fmt17he72f7712631656ccE+0x1e0>
   28fb7:	c6 44 24 07 01       	movb   $0x1,0x7(%rsp)
   28fbc:	41 0f 10 46 20       	movups 0x20(%r14),%xmm0
   28fc1:	0f 29 44 24 50       	movaps %xmm0,0x50(%rsp)
   28fc6:	48 8d 4c 24 07       	lea    0x7(%rsp),%rcx
   28fcb:	48 89 4c 24 60       	mov    %rcx,0x60(%rsp)
   28fd0:	41 8b 4e 34          	mov    0x34(%r14),%ecx
   28fd4:	41 8a 56 38          	mov    0x38(%r14),%dl
   28fd8:	41 0f 10 06          	movups (%r14),%xmm0
   28fdc:	41 0f 10 4e 10       	movups 0x10(%r14),%xmm1
   28fe1:	89 44 24 40          	mov    %eax,0x40(%rsp)
   28fe5:	89 4c 24 44          	mov    %ecx,0x44(%rsp)
   28fe9:	88 54 24 48          	mov    %dl,0x48(%rsp)
   28fed:	0f 29 44 24 10       	movaps %xmm0,0x10(%rsp)
   28ff2:	0f 29 4c 24 20       	movaps %xmm1,0x20(%rsp)
   28ff7:	48 8d 44 24 50       	lea    0x50(%rsp),%rax
   28ffc:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   29001:	48 8d 05 90 d6 21 00 	lea    0x21d690(%rip),%rax        # 246698 <__init_array_end+0x688>
   29008:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   2900d:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   29012:	48 8d 74 24 10       	lea    0x10(%rsp),%rsi
   29017:	e8 54 00 00 00       	callq  29070 <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h64de1231197154e0E>
   2901c:	84 c0                	test   %al,%al
   2901e:	74 0a                	je     2902a <_ZN62_$LT$std..ffi..c_str..NulError$u20$as$u20$core..fmt..Debug$GT$3fmt17he72f7712631656ccE+0x1ea>
   29020:	b0 01                	mov    $0x1,%al
   29022:	48 83 c4 68          	add    $0x68,%rsp
   29026:	5b                   	pop    %rbx
   29027:	41 5e                	pop    %r14
   29029:	c3                   	retq   
   2902a:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
   2902f:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
   29034:	48 8d 35 14 38 01 00 	lea    0x13814(%rip),%rsi        # 3c84f <str.1+0x9f>
   2903b:	ba 02 00 00 00       	mov    $0x2,%edx
   29040:	ff 50 18             	callq  *0x18(%rax)
   29043:	89 c1                	mov    %eax,%ecx
   29045:	b0 01                	mov    $0x1,%al
   29047:	84 c9                	test   %cl,%cl
   29049:	0f 85 29 fe ff ff    	jne    28e78 <_ZN62_$LT$std..ffi..c_str..NulError$u20$as$u20$core..fmt..Debug$GT$3fmt17he72f7712631656ccE+0x38>
   2904f:	49 8b 7e 20          	mov    0x20(%r14),%rdi
   29053:	49 8b 46 28          	mov    0x28(%r14),%rax
   29057:	48 8d 35 62 48 01 00 	lea    0x14862(%rip),%rsi        # 3d8c0 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0xf60>
   2905e:	ba 01 00 00 00       	mov    $0x1,%edx
   29063:	ff 50 18             	callq  *0x18(%rax)
   29066:	48 83 c4 68          	add    $0x68,%rsp
   2906a:	5b                   	pop    %rbx
   2906b:	41 5e                	pop    %r14
   2906d:	c3                   	retq   
   2906e:	66 90                	xchg   %ax,%ax

0000000000029070 <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h64de1231197154e0E>:
   29070:	55                   	push   %rbp
   29071:	41 57                	push   %r15
   29073:	41 56                	push   %r14
   29075:	41 55                	push   %r13
   29077:	41 54                	push   %r12
   29079:	53                   	push   %rbx
   2907a:	48 83 ec 68          	sub    $0x68,%rsp
   2907e:	49 89 f6             	mov    %rsi,%r14
   29081:	48 8b 07             	mov    (%rdi),%rax
   29084:	48 8b 28             	mov    (%rax),%rbp
   29087:	4c 8b 78 10          	mov    0x10(%rax),%r15
   2908b:	48 8b 7e 20          	mov    0x20(%rsi),%rdi
   2908f:	48 8b 46 28          	mov    0x28(%rsi),%rax
   29093:	48 8d 35 3b 41 01 00 	lea    0x1413b(%rip),%rsi        # 3d1d5 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x875>
   2909a:	ba 01 00 00 00       	mov    $0x1,%edx
   2909f:	ff 50 18             	callq  *0x18(%rax)
   290a2:	4d 85 ff             	test   %r15,%r15
   290a5:	74 28                	je     290cf <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h64de1231197154e0E+0x5f>
   290a7:	48 89 6c 24 08       	mov    %rbp,0x8(%rsp)
   290ac:	b3 01                	mov    $0x1,%bl
   290ae:	84 c0                	test   %al,%al
   290b0:	0f 85 c7 00 00 00    	jne    2917d <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h64de1231197154e0E+0x10d>
   290b6:	41 f6 46 30 04       	testb  $0x4,0x30(%r14)
   290bb:	75 19                	jne    290d6 <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h64de1231197154e0E+0x66>
   290bd:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   290c2:	4c 89 f6             	mov    %r14,%rsi
   290c5:	e8 d6 01 00 00       	callq  292a0 <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h4daf4266a29f005eE>
   290ca:	e9 ac 00 00 00       	jmpq   2917b <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h64de1231197154e0E+0x10b>
   290cf:	89 c3                	mov    %eax,%ebx
   290d1:	e9 9d 01 00 00       	jmpq   29273 <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h64de1231197154e0E+0x203>
   290d6:	49 8b 7e 20          	mov    0x20(%r14),%rdi
   290da:	49 8b 46 28          	mov    0x28(%r14),%rax
   290de:	48 8d 35 e0 43 01 00 	lea    0x143e0(%rip),%rsi        # 3d4c5 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0xb65>
   290e5:	ba 01 00 00 00       	mov    $0x1,%edx
   290ea:	ff 50 18             	callq  *0x18(%rax)
   290ed:	84 c0                	test   %al,%al
   290ef:	0f 85 88 00 00 00    	jne    2917d <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h64de1231197154e0E+0x10d>
   290f5:	41 8b 46 30          	mov    0x30(%r14),%eax
   290f9:	c6 44 24 07 01       	movb   $0x1,0x7(%rsp)
   290fe:	41 0f 10 46 20       	movups 0x20(%r14),%xmm0
   29103:	0f 29 44 24 50       	movaps %xmm0,0x50(%rsp)
   29108:	48 8d 4c 24 07       	lea    0x7(%rsp),%rcx
   2910d:	48 89 4c 24 60       	mov    %rcx,0x60(%rsp)
   29112:	41 8b 4e 34          	mov    0x34(%r14),%ecx
   29116:	41 8a 56 38          	mov    0x38(%r14),%dl
   2911a:	41 0f 10 06          	movups (%r14),%xmm0
   2911e:	41 0f 10 4e 10       	movups 0x10(%r14),%xmm1
   29123:	89 44 24 40          	mov    %eax,0x40(%rsp)
   29127:	89 4c 24 44          	mov    %ecx,0x44(%rsp)
   2912b:	88 54 24 48          	mov    %dl,0x48(%rsp)
   2912f:	0f 29 44 24 10       	movaps %xmm0,0x10(%rsp)
   29134:	0f 29 4c 24 20       	movaps %xmm1,0x20(%rsp)
   29139:	48 8d 44 24 50       	lea    0x50(%rsp),%rax
   2913e:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   29143:	48 8d 05 4e d5 21 00 	lea    0x21d54e(%rip),%rax        # 246698 <__init_array_end+0x688>
   2914a:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   2914f:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   29154:	48 8d 74 24 10       	lea    0x10(%rsp),%rsi
   29159:	e8 42 01 00 00       	callq  292a0 <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h4daf4266a29f005eE>
   2915e:	84 c0                	test   %al,%al
   29160:	75 1b                	jne    2917d <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h64de1231197154e0E+0x10d>
   29162:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
   29167:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
   2916c:	48 8d 35 dc 36 01 00 	lea    0x136dc(%rip),%rsi        # 3c84f <str.1+0x9f>
   29173:	ba 02 00 00 00       	mov    $0x2,%edx
   29178:	ff 50 18             	callq  *0x18(%rax)
   2917b:	89 c3                	mov    %eax,%ebx
   2917d:	49 83 ff 01          	cmp    $0x1,%r15
   29181:	0f 84 ec 00 00 00    	je     29273 <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h64de1231197154e0E+0x203>
   29187:	48 83 c5 01          	add    $0x1,%rbp
   2918b:	49 83 c7 ff          	add    $0xffffffffffffffff,%r15
   2918f:	4c 8d 64 24 08       	lea    0x8(%rsp),%r12
   29194:	4c 8d 6c 24 10       	lea    0x10(%rsp),%r13
   29199:	eb 13                	jmp    291ae <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h64de1231197154e0E+0x13e>
   2919b:	89 c3                	mov    %eax,%ebx
   2919d:	0f 1f 00             	nopl   (%rax)
   291a0:	48 83 c5 01          	add    $0x1,%rbp
   291a4:	49 83 c7 ff          	add    $0xffffffffffffffff,%r15
   291a8:	0f 84 c5 00 00 00    	je     29273 <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h64de1231197154e0E+0x203>
   291ae:	89 d8                	mov    %ebx,%eax
   291b0:	48 89 6c 24 08       	mov    %rbp,0x8(%rsp)
   291b5:	b3 01                	mov    $0x1,%bl
   291b7:	84 c0                	test   %al,%al
   291b9:	75 e5                	jne    291a0 <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h64de1231197154e0E+0x130>
   291bb:	41 8b 46 30          	mov    0x30(%r14),%eax
   291bf:	a8 04                	test   $0x4,%al
   291c1:	75 28                	jne    291eb <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h64de1231197154e0E+0x17b>
   291c3:	49 8b 7e 20          	mov    0x20(%r14),%rdi
   291c7:	49 8b 46 28          	mov    0x28(%r14),%rax
   291cb:	ba 02 00 00 00       	mov    $0x2,%edx
   291d0:	48 8d 35 0d 40 01 00 	lea    0x1400d(%rip),%rsi        # 3d1e4 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x884>
   291d7:	ff 50 18             	callq  *0x18(%rax)
   291da:	84 c0                	test   %al,%al
   291dc:	75 c2                	jne    291a0 <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h64de1231197154e0E+0x130>
   291de:	4c 89 e7             	mov    %r12,%rdi
   291e1:	4c 89 f6             	mov    %r14,%rsi
   291e4:	e8 b7 00 00 00       	callq  292a0 <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h4daf4266a29f005eE>
   291e9:	eb b0                	jmp    2919b <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h64de1231197154e0E+0x12b>
   291eb:	c6 44 24 07 01       	movb   $0x1,0x7(%rsp)
   291f0:	41 0f 10 46 20       	movups 0x20(%r14),%xmm0
   291f5:	0f 29 44 24 50       	movaps %xmm0,0x50(%rsp)
   291fa:	48 8d 4c 24 07       	lea    0x7(%rsp),%rcx
   291ff:	48 89 4c 24 60       	mov    %rcx,0x60(%rsp)
   29204:	41 8b 4e 34          	mov    0x34(%r14),%ecx
   29208:	41 0f b6 56 38       	movzbl 0x38(%r14),%edx
   2920d:	41 0f 10 06          	movups (%r14),%xmm0
   29211:	41 0f 10 4e 10       	movups 0x10(%r14),%xmm1
   29216:	89 44 24 40          	mov    %eax,0x40(%rsp)
   2921a:	89 4c 24 44          	mov    %ecx,0x44(%rsp)
   2921e:	88 54 24 48          	mov    %dl,0x48(%rsp)
   29222:	0f 29 44 24 10       	movaps %xmm0,0x10(%rsp)
   29227:	0f 29 4c 24 20       	movaps %xmm1,0x20(%rsp)
   2922c:	48 8d 44 24 50       	lea    0x50(%rsp),%rax
   29231:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   29236:	48 8d 05 5b d4 21 00 	lea    0x21d45b(%rip),%rax        # 246698 <__init_array_end+0x688>
   2923d:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   29242:	4c 89 e7             	mov    %r12,%rdi
   29245:	4c 89 ee             	mov    %r13,%rsi
   29248:	e8 53 00 00 00       	callq  292a0 <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h4daf4266a29f005eE>
   2924d:	84 c0                	test   %al,%al
   2924f:	0f 85 4b ff ff ff    	jne    291a0 <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h64de1231197154e0E+0x130>
   29255:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
   2925a:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
   2925f:	ba 02 00 00 00       	mov    $0x2,%edx
   29264:	48 8d 35 e4 35 01 00 	lea    0x135e4(%rip),%rsi        # 3c84f <str.1+0x9f>
   2926b:	ff 50 18             	callq  *0x18(%rax)
   2926e:	e9 28 ff ff ff       	jmpq   2919b <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h64de1231197154e0E+0x12b>
   29273:	b0 01                	mov    $0x1,%al
   29275:	84 db                	test   %bl,%bl
   29277:	75 17                	jne    29290 <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h64de1231197154e0E+0x220>
   29279:	49 8b 7e 20          	mov    0x20(%r14),%rdi
   2927d:	49 8b 46 28          	mov    0x28(%r14),%rax
   29281:	48 8d 35 4e 3f 01 00 	lea    0x13f4e(%rip),%rsi        # 3d1d6 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x876>
   29288:	ba 01 00 00 00       	mov    $0x1,%edx
   2928d:	ff 50 18             	callq  *0x18(%rax)
   29290:	48 83 c4 68          	add    $0x68,%rsp
   29294:	5b                   	pop    %rbx
   29295:	41 5c                	pop    %r12
   29297:	41 5d                	pop    %r13
   29299:	41 5e                	pop    %r14
   2929b:	41 5f                	pop    %r15
   2929d:	5d                   	pop    %rbp
   2929e:	c3                   	retq   
   2929f:	90                   	nop

00000000000292a0 <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h4daf4266a29f005eE>:
   292a0:	48 81 ec 88 00 00 00 	sub    $0x88,%rsp
   292a7:	48 8b 07             	mov    (%rdi),%rax
   292aa:	8b 4e 30             	mov    0x30(%rsi),%ecx
   292ad:	f6 c1 10             	test   $0x10,%cl
   292b0:	75 40                	jne    292f2 <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h4daf4266a29f005eE+0x52>
   292b2:	8a 00                	mov    (%rax),%al
   292b4:	f6 c1 20             	test   $0x20,%cl
   292b7:	75 74                	jne    2932d <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h4daf4266a29f005eE+0x8d>
   292b9:	0f b6 d0             	movzbl %al,%edx
   292bc:	80 fa 64             	cmp    $0x64,%dl
   292bf:	0f 82 d8 00 00 00    	jb     2939d <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h4daf4266a29f005eE+0xfd>
   292c5:	8d 0c 92             	lea    (%rdx,%rdx,4),%ecx
   292c8:	8d 14 ca             	lea    (%rdx,%rcx,8),%edx
   292cb:	c1 ea 0c             	shr    $0xc,%edx
   292ce:	6b ca 64             	imul   $0x64,%edx,%ecx
   292d1:	28 c8                	sub    %cl,%al
   292d3:	0f b6 c0             	movzbl %al,%eax
   292d6:	48 8d 0d 8d 23 01 00 	lea    0x1238d(%rip),%rcx        # 3b66a <_ZN4core3str15UTF8_CHAR_WIDTH17h639c7c3d8ce7e983E+0x112>
   292dd:	0f b7 04 41          	movzwl (%rcx,%rax,2),%eax
   292e1:	66 89 44 24 2d       	mov    %ax,0x2d(%rsp)
   292e6:	b9 24 00 00 00       	mov    $0x24,%ecx
   292eb:	89 d0                	mov    %edx,%eax
   292ed:	e9 b4 00 00 00       	jmpq   293a6 <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h4daf4266a29f005eE+0x106>
   292f2:	8a 00                	mov    (%rax),%al
   292f4:	4c 8d 84 24 88 00 00 	lea    0x88(%rsp),%r8
   292fb:	00 
   292fc:	45 31 c9             	xor    %r9d,%r9d
   292ff:	90                   	nop
   29300:	89 c1                	mov    %eax,%ecx
   29302:	80 e1 0f             	and    $0xf,%cl
   29305:	c0 e8 04             	shr    $0x4,%al
   29308:	8d 51 30             	lea    0x30(%rcx),%edx
   2930b:	8d 79 57             	lea    0x57(%rcx),%edi
   2930e:	80 f9 0a             	cmp    $0xa,%cl
   29311:	0f b6 ca             	movzbl %dl,%ecx
   29314:	40 0f b6 d7          	movzbl %dil,%edx
   29318:	0f 42 d1             	cmovb  %ecx,%edx
   2931b:	41 88 50 ff          	mov    %dl,-0x1(%r8)
   2931f:	49 83 c0 ff          	add    $0xffffffffffffffff,%r8
   29323:	49 83 c1 01          	add    $0x1,%r9
   29327:	84 c0                	test   %al,%al
   29329:	75 d5                	jne    29300 <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h4daf4266a29f005eE+0x60>
   2932b:	eb 3e                	jmp    2936b <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h4daf4266a29f005eE+0xcb>
   2932d:	4c 8d 84 24 88 00 00 	lea    0x88(%rsp),%r8
   29334:	00 
   29335:	45 31 c9             	xor    %r9d,%r9d
   29338:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   2933f:	00 
   29340:	89 c1                	mov    %eax,%ecx
   29342:	80 e1 0f             	and    $0xf,%cl
   29345:	c0 e8 04             	shr    $0x4,%al
   29348:	8d 51 30             	lea    0x30(%rcx),%edx
   2934b:	8d 79 37             	lea    0x37(%rcx),%edi
   2934e:	80 f9 0a             	cmp    $0xa,%cl
   29351:	0f b6 ca             	movzbl %dl,%ecx
   29354:	40 0f b6 d7          	movzbl %dil,%edx
   29358:	0f 42 d1             	cmovb  %ecx,%edx
   2935b:	41 88 50 ff          	mov    %dl,-0x1(%r8)
   2935f:	49 83 c0 ff          	add    $0xffffffffffffffff,%r8
   29363:	49 83 c1 01          	add    $0x1,%r9
   29367:	84 c0                	test   %al,%al
   29369:	75 d5                	jne    29340 <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h4daf4266a29f005eE+0xa0>
   2936b:	bf 80 00 00 00       	mov    $0x80,%edi
   29370:	4c 29 cf             	sub    %r9,%rdi
   29373:	48 81 ff 81 00 00 00 	cmp    $0x81,%rdi
   2937a:	73 76                	jae    293f2 <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h4daf4266a29f005eE+0x152>
   2937c:	48 8d 15 73 3e 01 00 	lea    0x13e73(%rip),%rdx        # 3d1f6 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x896>
   29383:	b9 02 00 00 00       	mov    $0x2,%ecx
   29388:	48 89 f7             	mov    %rsi,%rdi
   2938b:	be 01 00 00 00       	mov    $0x1,%esi
   29390:	e8 5b e2 fd ff       	callq  75f0 <_ZN4core3fmt9Formatter12pad_integral17hc55c32e78eb96054E>
   29395:	48 81 c4 88 00 00 00 	add    $0x88,%rsp
   2939c:	c3                   	retq   
   2939d:	b9 26 00 00 00       	mov    $0x26,%ecx
   293a2:	3c 0a                	cmp    $0xa,%al
   293a4:	73 08                	jae    293ae <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h4daf4266a29f005eE+0x10e>
   293a6:	04 30                	add    $0x30,%al
   293a8:	88 44 0c 08          	mov    %al,0x8(%rsp,%rcx,1)
   293ac:	eb 15                	jmp    293c3 <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h4daf4266a29f005eE+0x123>
   293ae:	48 8d 05 b5 22 01 00 	lea    0x122b5(%rip),%rax        # 3b66a <_ZN4core3str15UTF8_CHAR_WIDTH17h639c7c3d8ce7e983E+0x112>
   293b5:	0f b7 04 50          	movzwl (%rax,%rdx,2),%eax
   293b9:	66 89 44 24 2d       	mov    %ax,0x2d(%rsp)
   293be:	b9 25 00 00 00       	mov    $0x25,%ecx
   293c3:	4c 8d 04 0c          	lea    (%rsp,%rcx,1),%r8
   293c7:	49 83 c0 08          	add    $0x8,%r8
   293cb:	41 b9 27 00 00 00    	mov    $0x27,%r9d
   293d1:	49 29 c9             	sub    %rcx,%r9
   293d4:	48 8d 15 5d 40 01 00 	lea    0x1405d(%rip),%rdx        # 3d438 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0xad8>
   293db:	48 89 f7             	mov    %rsi,%rdi
   293de:	be 01 00 00 00       	mov    $0x1,%esi
   293e3:	31 c9                	xor    %ecx,%ecx
   293e5:	e8 06 e2 fd ff       	callq  75f0 <_ZN4core3fmt9Formatter12pad_integral17hc55c32e78eb96054E>
   293ea:	48 81 c4 88 00 00 00 	add    $0x88,%rsp
   293f1:	c3                   	retq   
   293f2:	be 80 00 00 00       	mov    $0x80,%esi
   293f7:	e8 54 e8 fd ff       	callq  7c50 <_ZN4core5slice22slice_index_order_fail17h7bcf2f94ba9e06deE>
   293fc:	0f 0b                	ud2    
   293fe:	66 90                	xchg   %ax,%ax

0000000000029400 <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h85c3650d73fa0c5cE>:
   29400:	48 81 ec 88 00 00 00 	sub    $0x88,%rsp
   29407:	49 89 f2             	mov    %rsi,%r10
   2940a:	48 8b 07             	mov    (%rdi),%rax
   2940d:	8b 56 30             	mov    0x30(%rsi),%edx
   29410:	f6 c2 10             	test   $0x10,%dl
   29413:	0f 85 d8 00 00 00    	jne    294f1 <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h85c3650d73fa0c5cE+0xf1>
   29419:	48 8b 08             	mov    (%rax),%rcx
   2941c:	f6 c2 20             	test   $0x20,%dl
   2941f:	0f 85 1b 01 00 00    	jne    29540 <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h85c3650d73fa0c5cE+0x140>
   29425:	41 bb 27 00 00 00    	mov    $0x27,%r11d
   2942b:	48 81 f9 10 27 00 00 	cmp    $0x2710,%rcx
   29432:	0f 82 78 01 00 00    	jb     295b0 <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h85c3650d73fa0c5cE+0x1b0>
   29438:	41 bb 27 00 00 00    	mov    $0x27,%r11d
   2943e:	49 b8 4b 59 86 38 d6 	movabs $0x346dc5d63886594b,%r8
   29445:	c5 6d 34 
   29448:	4c 8d 0d 1b 22 01 00 	lea    0x1221b(%rip),%r9        # 3b66a <_ZN4core3str15UTF8_CHAR_WIDTH17h639c7c3d8ce7e983E+0x112>
   2944f:	90                   	nop
   29450:	48 89 c8             	mov    %rcx,%rax
   29453:	49 f7 e0             	mul    %r8
   29456:	48 c1 ea 0b          	shr    $0xb,%rdx
   2945a:	69 c2 10 27 00 00    	imul   $0x2710,%edx,%eax
   29460:	89 ce                	mov    %ecx,%esi
   29462:	29 c6                	sub    %eax,%esi
   29464:	0f b7 c6             	movzwl %si,%eax
   29467:	c1 e8 02             	shr    $0x2,%eax
   2946a:	69 c0 7b 14 00 00    	imul   $0x147b,%eax,%eax
   29470:	c1 e8 11             	shr    $0x11,%eax
   29473:	6b f8 64             	imul   $0x64,%eax,%edi
   29476:	29 fe                	sub    %edi,%esi
   29478:	0f b7 f6             	movzwl %si,%esi
   2947b:	41 0f b7 04 41       	movzwl (%r9,%rax,2),%eax
   29480:	66 42 89 44 1c 04    	mov    %ax,0x4(%rsp,%r11,1)
   29486:	41 0f b7 04 71       	movzwl (%r9,%rsi,2),%eax
   2948b:	66 42 89 44 1c 06    	mov    %ax,0x6(%rsp,%r11,1)
   29491:	49 83 c3 fc          	add    $0xfffffffffffffffc,%r11
   29495:	48 81 f9 ff e0 f5 05 	cmp    $0x5f5e0ff,%rcx
   2949c:	48 89 d1             	mov    %rdx,%rcx
   2949f:	77 af                	ja     29450 <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h85c3650d73fa0c5cE+0x50>
   294a1:	48 83 fa 63          	cmp    $0x63,%rdx
   294a5:	7e 2f                	jle    294d6 <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h85c3650d73fa0c5cE+0xd6>
   294a7:	0f b7 c2             	movzwl %dx,%eax
   294aa:	c1 e8 02             	shr    $0x2,%eax
   294ad:	69 c0 7b 14 00 00    	imul   $0x147b,%eax,%eax
   294b3:	c1 e8 11             	shr    $0x11,%eax
   294b6:	6b c8 64             	imul   $0x64,%eax,%ecx
   294b9:	29 ca                	sub    %ecx,%edx
   294bb:	0f b7 ca             	movzwl %dx,%ecx
   294be:	48 8d 15 a5 21 01 00 	lea    0x121a5(%rip),%rdx        # 3b66a <_ZN4core3str15UTF8_CHAR_WIDTH17h639c7c3d8ce7e983E+0x112>
   294c5:	0f b7 0c 4a          	movzwl (%rdx,%rcx,2),%ecx
   294c9:	66 42 89 4c 1c 06    	mov    %cx,0x6(%rsp,%r11,1)
   294cf:	49 83 c3 fe          	add    $0xfffffffffffffffe,%r11
   294d3:	48 89 c2             	mov    %rax,%rdx
   294d6:	48 83 fa 0a          	cmp    $0xa,%rdx
   294da:	0f 8d e2 00 00 00    	jge    295c2 <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h85c3650d73fa0c5cE+0x1c2>
   294e0:	80 c2 30             	add    $0x30,%dl
   294e3:	42 88 54 1c 07       	mov    %dl,0x7(%rsp,%r11,1)
   294e8:	49 83 c3 ff          	add    $0xffffffffffffffff,%r11
   294ec:	e9 e6 00 00 00       	jmpq   295d7 <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h85c3650d73fa0c5cE+0x1d7>
   294f1:	48 8b 08             	mov    (%rax),%rcx
   294f4:	4c 8d 84 24 88 00 00 	lea    0x88(%rsp),%r8
   294fb:	00 
   294fc:	45 31 c9             	xor    %r9d,%r9d
   294ff:	48 89 c8             	mov    %rcx,%rax
   29502:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   29509:	00 00 00 
   2950c:	0f 1f 40 00          	nopl   0x0(%rax)
   29510:	48 c1 e8 04          	shr    $0x4,%rax
   29514:	80 e1 0f             	and    $0xf,%cl
   29517:	8d 51 30             	lea    0x30(%rcx),%edx
   2951a:	8d 71 57             	lea    0x57(%rcx),%esi
   2951d:	80 f9 0a             	cmp    $0xa,%cl
   29520:	0f b6 ca             	movzbl %dl,%ecx
   29523:	40 0f b6 d6          	movzbl %sil,%edx
   29527:	0f 42 d1             	cmovb  %ecx,%edx
   2952a:	41 88 50 ff          	mov    %dl,-0x1(%r8)
   2952e:	49 83 c0 ff          	add    $0xffffffffffffffff,%r8
   29532:	49 83 c1 01          	add    $0x1,%r9
   29536:	48 89 c1             	mov    %rax,%rcx
   29539:	48 85 c0             	test   %rax,%rax
   2953c:	75 d2                	jne    29510 <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h85c3650d73fa0c5cE+0x110>
   2953e:	eb 3e                	jmp    2957e <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h85c3650d73fa0c5cE+0x17e>
   29540:	4c 8d 84 24 88 00 00 	lea    0x88(%rsp),%r8
   29547:	00 
   29548:	45 31 c9             	xor    %r9d,%r9d
   2954b:	48 89 c8             	mov    %rcx,%rax
   2954e:	66 90                	xchg   %ax,%ax
   29550:	48 c1 e8 04          	shr    $0x4,%rax
   29554:	80 e1 0f             	and    $0xf,%cl
   29557:	8d 51 30             	lea    0x30(%rcx),%edx
   2955a:	8d 71 37             	lea    0x37(%rcx),%esi
   2955d:	80 f9 0a             	cmp    $0xa,%cl
   29560:	0f b6 ca             	movzbl %dl,%ecx
   29563:	40 0f b6 d6          	movzbl %sil,%edx
   29567:	0f 42 d1             	cmovb  %ecx,%edx
   2956a:	41 88 50 ff          	mov    %dl,-0x1(%r8)
   2956e:	49 83 c0 ff          	add    $0xffffffffffffffff,%r8
   29572:	49 83 c1 01          	add    $0x1,%r9
   29576:	48 89 c1             	mov    %rax,%rcx
   29579:	48 85 c0             	test   %rax,%rax
   2957c:	75 d2                	jne    29550 <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h85c3650d73fa0c5cE+0x150>
   2957e:	bf 80 00 00 00       	mov    $0x80,%edi
   29583:	4c 29 cf             	sub    %r9,%rdi
   29586:	48 81 ff 81 00 00 00 	cmp    $0x81,%rdi
   2958d:	73 77                	jae    29606 <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h85c3650d73fa0c5cE+0x206>
   2958f:	48 8d 15 60 3c 01 00 	lea    0x13c60(%rip),%rdx        # 3d1f6 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x896>
   29596:	b9 02 00 00 00       	mov    $0x2,%ecx
   2959b:	4c 89 d7             	mov    %r10,%rdi
   2959e:	be 01 00 00 00       	mov    $0x1,%esi
   295a3:	e8 48 e0 fd ff       	callq  75f0 <_ZN4core3fmt9Formatter12pad_integral17hc55c32e78eb96054E>
   295a8:	48 81 c4 88 00 00 00 	add    $0x88,%rsp
   295af:	c3                   	retq   
   295b0:	48 89 ca             	mov    %rcx,%rdx
   295b3:	48 83 fa 63          	cmp    $0x63,%rdx
   295b7:	0f 8f ea fe ff ff    	jg     294a7 <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h85c3650d73fa0c5cE+0xa7>
   295bd:	e9 14 ff ff ff       	jmpq   294d6 <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h85c3650d73fa0c5cE+0xd6>
   295c2:	48 8d 05 a1 20 01 00 	lea    0x120a1(%rip),%rax        # 3b66a <_ZN4core3str15UTF8_CHAR_WIDTH17h639c7c3d8ce7e983E+0x112>
   295c9:	0f b7 04 50          	movzwl (%rax,%rdx,2),%eax
   295cd:	66 42 89 44 1c 06    	mov    %ax,0x6(%rsp,%r11,1)
   295d3:	49 83 c3 fe          	add    $0xfffffffffffffffe,%r11
   295d7:	4e 8d 04 1c          	lea    (%rsp,%r11,1),%r8
   295db:	49 83 c0 08          	add    $0x8,%r8
   295df:	41 b9 27 00 00 00    	mov    $0x27,%r9d
   295e5:	4d 29 d9             	sub    %r11,%r9
   295e8:	48 8d 15 49 3e 01 00 	lea    0x13e49(%rip),%rdx        # 3d438 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0xad8>
   295ef:	4c 89 d7             	mov    %r10,%rdi
   295f2:	be 01 00 00 00       	mov    $0x1,%esi
   295f7:	31 c9                	xor    %ecx,%ecx
   295f9:	e8 f2 df fd ff       	callq  75f0 <_ZN4core3fmt9Formatter12pad_integral17hc55c32e78eb96054E>
   295fe:	48 81 c4 88 00 00 00 	add    $0x88,%rsp
   29605:	c3                   	retq   
   29606:	be 80 00 00 00       	mov    $0x80,%esi
   2960b:	e8 40 e6 fd ff       	callq  7c50 <_ZN4core5slice22slice_index_order_fail17h7bcf2f94ba9e06deE>
   29610:	0f 0b                	ud2    
   29612:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   29619:	00 00 00 
   2961c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000029620 <_ZN3std6thread5local4fast13destroy_value17hb9c4465a07b6d799E>:
   29620:	48 83 ec 38          	sub    $0x38,%rsp
   29624:	f3 0f 6f 0f          	movdqu (%rdi),%xmm1
   29628:	f3 0f 6f 47 10       	movdqu 0x10(%rdi),%xmm0
   2962d:	0f 57 d2             	xorps  %xmm2,%xmm2
   29630:	0f 11 17             	movups %xmm2,(%rdi)
   29633:	c6 47 30 02          	movb   $0x2,0x30(%rdi)
   29637:	f3 0f 7f 44 24 18    	movdqu %xmm0,0x18(%rsp)
   2963d:	f3 0f 7f 4c 24 08    	movdqu %xmm1,0x8(%rsp)
   29643:	0f 10 57 20          	movups 0x20(%rdi),%xmm2
   29647:	0f 11 54 24 28       	movups %xmm2,0x28(%rsp)
   2964c:	66 48 0f 7e c8       	movq   %xmm1,%rax
   29651:	48 85 c0             	test   %rax,%rax
   29654:	74 21                	je     29677 <_ZN3std6thread5local4fast13destroy_value17hb9c4465a07b6d799E+0x57>
   29656:	66 48 0f 7e c0       	movq   %xmm0,%rax
   2965b:	48 83 f8 02          	cmp    $0x2,%rax
   2965f:	74 16                	je     29677 <_ZN3std6thread5local4fast13destroy_value17hb9c4465a07b6d799E+0x57>
   29661:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
   29666:	f0 48 83 28 01       	lock subq $0x1,(%rax)
   2966b:	75 0a                	jne    29677 <_ZN3std6thread5local4fast13destroy_value17hb9c4465a07b6d799E+0x57>
   2966d:	48 8d 7c 24 30       	lea    0x30(%rsp),%rdi
   29672:	e8 99 9b ff ff       	callq  23210 <_ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17h671cd2375e6e21b7E>
   29677:	48 83 c4 38          	add    $0x38,%rsp
   2967b:	c3                   	retq   
   2967c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000029680 <_ZN4core3ptr13drop_in_place17hda96a1da1fd89bf6E>:
   29680:	48 8b 07             	mov    (%rdi),%rax
   29683:	f0 48 83 28 01       	lock subq $0x1,(%rax)
   29688:	75 05                	jne    2968f <_ZN4core3ptr13drop_in_place17hda96a1da1fd89bf6E+0xf>
   2968a:	e9 81 9b ff ff       	jmpq   23210 <_ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17h671cd2375e6e21b7E>
   2968f:	c3                   	retq   

0000000000029690 <_ZN4core3ptr13drop_in_place17h523fcc6c971c0ff4E>:
   29690:	48 8b 07             	mov    (%rdi),%rax
   29693:	80 7f 08 00          	cmpb   $0x0,0x8(%rdi)
   29697:	74 09                	je     296a2 <_ZN4core3ptr13drop_in_place17h523fcc6c971c0ff4E+0x12>
   29699:	48 8b 38             	mov    (%rax),%rdi
   2969c:	ff 25 56 e8 21 00    	jmpq   *0x21e856(%rip)        # 247ef8 <pthread_mutex_unlock@GLIBC_2.2.5>
   296a2:	64 48 83 3c 25 a0 ff 	cmpq   $0x1,%fs:0xffffffffffffffa0
   296a9:	ff ff 01 
   296ac:	75 1c                	jne    296ca <_ZN4core3ptr13drop_in_place17h523fcc6c971c0ff4E+0x3a>
   296ae:	64 48 83 3c 25 a8 ff 	cmpq   $0x0,%fs:0xffffffffffffffa8
   296b5:	ff ff 00 
   296b8:	74 df                	je     29699 <_ZN4core3ptr13drop_in_place17h523fcc6c971c0ff4E+0x9>
   296ba:	c6 40 08 01          	movb   $0x1,0x8(%rax)
   296be:	48 8b 07             	mov    (%rdi),%rax
   296c1:	48 8b 38             	mov    (%rax),%rdi
   296c4:	ff 25 2e e8 21 00    	jmpq   *0x21e82e(%rip)        # 247ef8 <pthread_mutex_unlock@GLIBC_2.2.5>
   296ca:	b9 01 00 00 00       	mov    $0x1,%ecx
   296cf:	66 48 0f 6e c1       	movq   %rcx,%xmm0
   296d4:	64 66 0f 7f 04 25 a0 	movdqa %xmm0,%fs:0xffffffffffffffa0
   296db:	ff ff ff 
   296de:	48 8b 38             	mov    (%rax),%rdi
   296e1:	ff 25 11 e8 21 00    	jmpq   *0x21e811(%rip)        # 247ef8 <pthread_mutex_unlock@GLIBC_2.2.5>
   296e7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   296ee:	00 00 

00000000000296f0 <_ZN4core3ptr13drop_in_place17h6f25c41a01252cd2E>:
   296f0:	48 8b 07             	mov    (%rdi),%rax
   296f3:	80 7f 08 00          	cmpb   $0x0,0x8(%rdi)
   296f7:	74 09                	je     29702 <_ZN4core3ptr13drop_in_place17h6f25c41a01252cd2E+0x12>
   296f9:	48 8b 38             	mov    (%rax),%rdi
   296fc:	ff 25 f6 e7 21 00    	jmpq   *0x21e7f6(%rip)        # 247ef8 <pthread_mutex_unlock@GLIBC_2.2.5>
   29702:	64 48 83 3c 25 a0 ff 	cmpq   $0x1,%fs:0xffffffffffffffa0
   29709:	ff ff 01 
   2970c:	75 1c                	jne    2972a <_ZN4core3ptr13drop_in_place17h6f25c41a01252cd2E+0x3a>
   2970e:	64 48 83 3c 25 a8 ff 	cmpq   $0x0,%fs:0xffffffffffffffa8
   29715:	ff ff 00 
   29718:	74 df                	je     296f9 <_ZN4core3ptr13drop_in_place17h6f25c41a01252cd2E+0x9>
   2971a:	c6 40 08 01          	movb   $0x1,0x8(%rax)
   2971e:	48 8b 07             	mov    (%rdi),%rax
   29721:	48 8b 38             	mov    (%rax),%rdi
   29724:	ff 25 ce e7 21 00    	jmpq   *0x21e7ce(%rip)        # 247ef8 <pthread_mutex_unlock@GLIBC_2.2.5>
   2972a:	b9 01 00 00 00       	mov    $0x1,%ecx
   2972f:	66 48 0f 6e c1       	movq   %rcx,%xmm0
   29734:	64 66 0f 7f 04 25 a0 	movdqa %xmm0,%fs:0xffffffffffffffa0
   2973b:	ff ff ff 
   2973e:	48 8b 38             	mov    (%rax),%rdi
   29741:	ff 25 b1 e7 21 00    	jmpq   *0x21e7b1(%rip)        # 247ef8 <pthread_mutex_unlock@GLIBC_2.2.5>
   29747:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   2974e:	00 00 

0000000000029750 <_ZN82_$LT$std..sys_common..poison..PoisonError$LT$T$GT$$u20$as$u20$core..fmt..Debug$GT$3fmt17h6b783c894c6e32b9E>:
   29750:	48 89 f2             	mov    %rsi,%rdx
   29753:	48 8d 3d 5d 43 01 00 	lea    0x1435d(%rip),%rdi        # 3dab7 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x1157>
   2975a:	be 19 00 00 00       	mov    $0x19,%esi
   2975f:	e9 ac 0d fe ff       	jmpq   a510 <_ZN40_$LT$str$u20$as$u20$core..fmt..Debug$GT$3fmt17h942f30b282040ce2E>
   29764:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2976b:	00 00 00 
   2976e:	66 90                	xchg   %ax,%ax

0000000000029770 <_ZN55_$LT$std..path..PathBuf$u20$as$u20$core..fmt..Debug$GT$3fmt17h44fd68a77ab564daE>:
   29770:	48 89 f2             	mov    %rsi,%rdx
   29773:	48 8b 07             	mov    (%rdi),%rax
   29776:	48 8b 77 10          	mov    0x10(%rdi),%rsi
   2977a:	48 89 c7             	mov    %rax,%rdi
   2977d:	e9 0e eb ff ff       	jmpq   28290 <_ZN73_$LT$std..sys_common..os_str_bytes..Slice$u20$as$u20$core..fmt..Debug$GT$3fmt17hcaa46c22a4717bfdE>
   29782:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   29789:	00 00 00 
   2978c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000029790 <_ZN4core3ptr13drop_in_place17h3299cdb2d88644f0E>:
   29790:	41 57                	push   %r15
   29792:	41 56                	push   %r14
   29794:	41 54                	push   %r12
   29796:	53                   	push   %rbx
   29797:	50                   	push   %rax
   29798:	49 89 fe             	mov    %rdi,%r14
   2979b:	48 8b 47 10          	mov    0x10(%rdi),%rax
   2979f:	48 85 c0             	test   %rax,%rax
   297a2:	74 3f                	je     297e3 <_ZN4core3ptr13drop_in_place17h3299cdb2d88644f0E+0x53>
   297a4:	4d 8b 26             	mov    (%r14),%r12
   297a7:	48 c1 e0 03          	shl    $0x3,%rax
   297ab:	4c 8d 3c 40          	lea    (%rax,%rax,2),%r15
   297af:	31 db                	xor    %ebx,%ebx
   297b1:	49 83 7c 1c 08 00    	cmpq   $0x0,0x8(%r12,%rbx,1)
   297b7:	75 18                	jne    297d1 <_ZN4core3ptr13drop_in_place17h3299cdb2d88644f0E+0x41>
   297b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   297c0:	48 83 c3 18          	add    $0x18,%rbx
   297c4:	49 39 df             	cmp    %rbx,%r15
   297c7:	74 1a                	je     297e3 <_ZN4core3ptr13drop_in_place17h3299cdb2d88644f0E+0x53>
   297c9:	49 83 7c 1c 08 00    	cmpq   $0x0,0x8(%r12,%rbx,1)
   297cf:	74 ef                	je     297c0 <_ZN4core3ptr13drop_in_place17h3299cdb2d88644f0E+0x30>
   297d1:	49 8b 3c 1c          	mov    (%r12,%rbx,1),%rdi
   297d5:	e8 36 bc fd ff       	callq  5410 <__rust_dealloc>
   297da:	48 83 c3 18          	add    $0x18,%rbx
   297de:	49 39 df             	cmp    %rbx,%r15
   297e1:	75 e6                	jne    297c9 <_ZN4core3ptr13drop_in_place17h3299cdb2d88644f0E+0x39>
   297e3:	49 83 7e 08 00       	cmpq   $0x0,0x8(%r14)
   297e8:	74 13                	je     297fd <_ZN4core3ptr13drop_in_place17h3299cdb2d88644f0E+0x6d>
   297ea:	49 8b 3e             	mov    (%r14),%rdi
   297ed:	48 83 c4 08          	add    $0x8,%rsp
   297f1:	5b                   	pop    %rbx
   297f2:	41 5c                	pop    %r12
   297f4:	41 5e                	pop    %r14
   297f6:	41 5f                	pop    %r15
   297f8:	e9 13 bc fd ff       	jmpq   5410 <__rust_dealloc>
   297fd:	48 83 c4 08          	add    $0x8,%rsp
   29801:	5b                   	pop    %rbx
   29802:	41 5c                	pop    %r12
   29804:	41 5e                	pop    %r14
   29806:	41 5f                	pop    %r15
   29808:	c3                   	retq   
   29809:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000029810 <_ZN4core3ptr13drop_in_place17hd9662a405d88168dE>:
   29810:	48 8b 47 08          	mov    0x8(%rdi),%rax
   29814:	48 8b 4f 10          	mov    0x10(%rdi),%rcx
   29818:	48 89 08             	mov    %rcx,(%rax)
   2981b:	c3                   	retq   
   2981c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000029820 <_ZN4core3fmt3num50_$LT$impl$u20$core..fmt..Debug$u20$for$u20$i32$GT$3fmt17hb111d48879814171E>:
   29820:	53                   	push   %rbx
   29821:	48 81 ec 80 00 00 00 	sub    $0x80,%rsp
   29828:	49 89 f2             	mov    %rsi,%r10
   2982b:	8b 46 30             	mov    0x30(%rsi),%eax
   2982e:	a8 10                	test   $0x10,%al
   29830:	0f 85 eb 00 00 00    	jne    29921 <_ZN4core3fmt3num50_$LT$impl$u20$core..fmt..Debug$u20$for$u20$i32$GT$3fmt17hb111d48879814171E+0x101>
   29836:	8b 37                	mov    (%rdi),%esi
   29838:	a8 20                	test   $0x20,%al
   2983a:	0f 85 1d 01 00 00    	jne    2995d <_ZN4core3fmt3num50_$LT$impl$u20$core..fmt..Debug$u20$for$u20$i32$GT$3fmt17hb111d48879814171E+0x13d>
   29840:	48 63 c6             	movslq %esi,%rax
   29843:	48 89 c7             	mov    %rax,%rdi
   29846:	48 f7 df             	neg    %rdi
   29849:	48 0f 4c f8          	cmovl  %rax,%rdi
   2984d:	41 bb 27 00 00 00    	mov    $0x27,%r11d
   29853:	48 81 ff 10 27 00 00 	cmp    $0x2710,%rdi
   2985a:	0f 82 6f 01 00 00    	jb     299cf <_ZN4core3fmt3num50_$LT$impl$u20$core..fmt..Debug$u20$for$u20$i32$GT$3fmt17hb111d48879814171E+0x1af>
   29860:	41 bb 27 00 00 00    	mov    $0x27,%r11d
   29866:	49 b8 4b 59 86 38 d6 	movabs $0x346dc5d63886594b,%r8
   2986d:	c5 6d 34 
   29870:	4c 8d 0d f3 1d 01 00 	lea    0x11df3(%rip),%r9        # 3b66a <_ZN4core3str15UTF8_CHAR_WIDTH17h639c7c3d8ce7e983E+0x112>
   29877:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   2987e:	00 00 
   29880:	48 89 f8             	mov    %rdi,%rax
   29883:	49 f7 e0             	mul    %r8
   29886:	48 c1 ea 0b          	shr    $0xb,%rdx
   2988a:	69 c2 10 27 00 00    	imul   $0x2710,%edx,%eax
   29890:	89 f9                	mov    %edi,%ecx
   29892:	29 c1                	sub    %eax,%ecx
   29894:	0f b7 c1             	movzwl %cx,%eax
   29897:	c1 e8 02             	shr    $0x2,%eax
   2989a:	69 c0 7b 14 00 00    	imul   $0x147b,%eax,%eax
   298a0:	c1 e8 11             	shr    $0x11,%eax
   298a3:	6b d8 64             	imul   $0x64,%eax,%ebx
   298a6:	29 d9                	sub    %ebx,%ecx
   298a8:	0f b7 c9             	movzwl %cx,%ecx
   298ab:	41 0f b7 04 41       	movzwl (%r9,%rax,2),%eax
   298b0:	66 42 89 44 1c fc    	mov    %ax,-0x4(%rsp,%r11,1)
   298b6:	41 0f b7 04 49       	movzwl (%r9,%rcx,2),%eax
   298bb:	66 42 89 44 1c fe    	mov    %ax,-0x2(%rsp,%r11,1)
   298c1:	49 83 c3 fc          	add    $0xfffffffffffffffc,%r11
   298c5:	48 81 ff ff e0 f5 05 	cmp    $0x5f5e0ff,%rdi
   298cc:	48 89 d7             	mov    %rdx,%rdi
   298cf:	77 af                	ja     29880 <_ZN4core3fmt3num50_$LT$impl$u20$core..fmt..Debug$u20$for$u20$i32$GT$3fmt17hb111d48879814171E+0x60>
   298d1:	48 83 fa 63          	cmp    $0x63,%rdx
   298d5:	76 2f                	jbe    29906 <_ZN4core3fmt3num50_$LT$impl$u20$core..fmt..Debug$u20$for$u20$i32$GT$3fmt17hb111d48879814171E+0xe6>
   298d7:	0f b7 c2             	movzwl %dx,%eax
   298da:	c1 e8 02             	shr    $0x2,%eax
   298dd:	69 c0 7b 14 00 00    	imul   $0x147b,%eax,%eax
   298e3:	c1 e8 11             	shr    $0x11,%eax
   298e6:	6b c8 64             	imul   $0x64,%eax,%ecx
   298e9:	29 ca                	sub    %ecx,%edx
   298eb:	0f b7 ca             	movzwl %dx,%ecx
   298ee:	48 8d 15 75 1d 01 00 	lea    0x11d75(%rip),%rdx        # 3b66a <_ZN4core3str15UTF8_CHAR_WIDTH17h639c7c3d8ce7e983E+0x112>
   298f5:	0f b7 0c 4a          	movzwl (%rdx,%rcx,2),%ecx
   298f9:	66 42 89 4c 1c fe    	mov    %cx,-0x2(%rsp,%r11,1)
   298ff:	49 83 c3 fe          	add    $0xfffffffffffffffe,%r11
   29903:	48 89 c2             	mov    %rax,%rdx
   29906:	48 83 fa 0a          	cmp    $0xa,%rdx
   2990a:	0f 8d d1 00 00 00    	jge    299e1 <_ZN4core3fmt3num50_$LT$impl$u20$core..fmt..Debug$u20$for$u20$i32$GT$3fmt17hb111d48879814171E+0x1c1>
   29910:	80 c2 30             	add    $0x30,%dl
   29913:	42 88 54 1c ff       	mov    %dl,-0x1(%rsp,%r11,1)
   29918:	49 83 c3 ff          	add    $0xffffffffffffffff,%r11
   2991c:	e9 d5 00 00 00       	jmpq   299f6 <_ZN4core3fmt3num50_$LT$impl$u20$core..fmt..Debug$u20$for$u20$i32$GT$3fmt17hb111d48879814171E+0x1d6>
   29921:	8b 0f                	mov    (%rdi),%ecx
   29923:	4c 8d 84 24 80 00 00 	lea    0x80(%rsp),%r8
   2992a:	00 
   2992b:	45 31 c9             	xor    %r9d,%r9d
   2992e:	89 c8                	mov    %ecx,%eax
   29930:	c1 e8 04             	shr    $0x4,%eax
   29933:	80 e1 0f             	and    $0xf,%cl
   29936:	8d 51 30             	lea    0x30(%rcx),%edx
   29939:	8d 71 57             	lea    0x57(%rcx),%esi
   2993c:	80 f9 0a             	cmp    $0xa,%cl
   2993f:	0f b6 ca             	movzbl %dl,%ecx
   29942:	40 0f b6 d6          	movzbl %sil,%edx
   29946:	0f 42 d1             	cmovb  %ecx,%edx
   29949:	41 88 50 ff          	mov    %dl,-0x1(%r8)
   2994d:	49 83 c0 ff          	add    $0xffffffffffffffff,%r8
   29951:	49 83 c1 01          	add    $0x1,%r9
   29955:	89 c1                	mov    %eax,%ecx
   29957:	85 c0                	test   %eax,%eax
   29959:	75 d5                	jne    29930 <_ZN4core3fmt3num50_$LT$impl$u20$core..fmt..Debug$u20$for$u20$i32$GT$3fmt17hb111d48879814171E+0x110>
   2995b:	eb 3f                	jmp    2999c <_ZN4core3fmt3num50_$LT$impl$u20$core..fmt..Debug$u20$for$u20$i32$GT$3fmt17hb111d48879814171E+0x17c>
   2995d:	4c 8d 84 24 80 00 00 	lea    0x80(%rsp),%r8
   29964:	00 
   29965:	45 31 c9             	xor    %r9d,%r9d
   29968:	89 f0                	mov    %esi,%eax
   2996a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   29970:	c1 e8 04             	shr    $0x4,%eax
   29973:	40 80 e6 0f          	and    $0xf,%sil
   29977:	8d 4e 30             	lea    0x30(%rsi),%ecx
   2997a:	8d 56 37             	lea    0x37(%rsi),%edx
   2997d:	40 80 fe 0a          	cmp    $0xa,%sil
   29981:	0f b6 c9             	movzbl %cl,%ecx
   29984:	0f b6 d2             	movzbl %dl,%edx
   29987:	0f 42 d1             	cmovb  %ecx,%edx
   2998a:	41 88 50 ff          	mov    %dl,-0x1(%r8)
   2998e:	49 83 c0 ff          	add    $0xffffffffffffffff,%r8
   29992:	49 83 c1 01          	add    $0x1,%r9
   29996:	89 c6                	mov    %eax,%esi
   29998:	85 c0                	test   %eax,%eax
   2999a:	75 d4                	jne    29970 <_ZN4core3fmt3num50_$LT$impl$u20$core..fmt..Debug$u20$for$u20$i32$GT$3fmt17hb111d48879814171E+0x150>
   2999c:	bf 80 00 00 00       	mov    $0x80,%edi
   299a1:	4c 29 cf             	sub    %r9,%rdi
   299a4:	48 81 ff 81 00 00 00 	cmp    $0x81,%rdi
   299ab:	73 75                	jae    29a22 <_ZN4core3fmt3num50_$LT$impl$u20$core..fmt..Debug$u20$for$u20$i32$GT$3fmt17hb111d48879814171E+0x202>
   299ad:	48 8d 15 42 38 01 00 	lea    0x13842(%rip),%rdx        # 3d1f6 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x896>
   299b4:	b9 02 00 00 00       	mov    $0x2,%ecx
   299b9:	4c 89 d7             	mov    %r10,%rdi
   299bc:	be 01 00 00 00       	mov    $0x1,%esi
   299c1:	e8 2a dc fd ff       	callq  75f0 <_ZN4core3fmt9Formatter12pad_integral17hc55c32e78eb96054E>
   299c6:	48 81 c4 80 00 00 00 	add    $0x80,%rsp
   299cd:	5b                   	pop    %rbx
   299ce:	c3                   	retq   
   299cf:	48 89 fa             	mov    %rdi,%rdx
   299d2:	48 83 fa 63          	cmp    $0x63,%rdx
   299d6:	0f 87 fb fe ff ff    	ja     298d7 <_ZN4core3fmt3num50_$LT$impl$u20$core..fmt..Debug$u20$for$u20$i32$GT$3fmt17hb111d48879814171E+0xb7>
   299dc:	e9 25 ff ff ff       	jmpq   29906 <_ZN4core3fmt3num50_$LT$impl$u20$core..fmt..Debug$u20$for$u20$i32$GT$3fmt17hb111d48879814171E+0xe6>
   299e1:	48 8d 05 82 1c 01 00 	lea    0x11c82(%rip),%rax        # 3b66a <_ZN4core3str15UTF8_CHAR_WIDTH17h639c7c3d8ce7e983E+0x112>
   299e8:	0f b7 04 50          	movzwl (%rax,%rdx,2),%eax
   299ec:	66 42 89 44 1c fe    	mov    %ax,-0x2(%rsp,%r11,1)
   299f2:	49 83 c3 fe          	add    $0xfffffffffffffffe,%r11
   299f6:	4e 8d 04 1c          	lea    (%rsp,%r11,1),%r8
   299fa:	41 b9 27 00 00 00    	mov    $0x27,%r9d
   29a00:	4d 29 d9             	sub    %r11,%r9
   29a03:	f7 d6                	not    %esi
   29a05:	c1 ee 1f             	shr    $0x1f,%esi
   29a08:	48 8d 15 29 3a 01 00 	lea    0x13a29(%rip),%rdx        # 3d438 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0xad8>
   29a0f:	4c 89 d7             	mov    %r10,%rdi
   29a12:	31 c9                	xor    %ecx,%ecx
   29a14:	e8 d7 db fd ff       	callq  75f0 <_ZN4core3fmt9Formatter12pad_integral17hc55c32e78eb96054E>
   29a19:	48 81 c4 80 00 00 00 	add    $0x80,%rsp
   29a20:	5b                   	pop    %rbx
   29a21:	c3                   	retq   
   29a22:	be 80 00 00 00       	mov    $0x80,%esi
   29a27:	e8 24 e2 fd ff       	callq  7c50 <_ZN4core5slice22slice_index_order_fail17h7bcf2f94ba9e06deE>
   29a2c:	0f 0b                	ud2    
   29a2e:	66 90                	xchg   %ax,%ax

0000000000029a30 <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h6da79589419f62fdE>:
   29a30:	48 8b 07             	mov    (%rdi),%rax
   29a33:	48 8b 38             	mov    (%rax),%rdi
   29a36:	48 8b 40 08          	mov    0x8(%rax),%rax
   29a3a:	48 8b 40 48          	mov    0x48(%rax),%rax
   29a3e:	ff e0                	jmpq   *%rax

0000000000029a40 <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h3a800058292cf539E>:
   29a40:	48 8b 3f             	mov    (%rdi),%rdi
   29a43:	e9 08 00 00 00       	jmpq   29a50 <_ZN62_$LT$std..io..error..ErrorKind$u20$as$u20$core..fmt..Debug$GT$3fmt17h5f9f536b4b2307d2E>
   29a48:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   29a4f:	00 

0000000000029a50 <_ZN62_$LT$std..io..error..ErrorKind$u20$as$u20$core..fmt..Debug$GT$3fmt17h5f9f536b4b2307d2E>:
   29a50:	53                   	push   %rbx
   29a51:	48 83 ec 20          	sub    $0x20,%rsp
   29a55:	48 89 f3             	mov    %rsi,%rbx
   29a58:	0f b6 07             	movzbl (%rdi),%eax
   29a5b:	48 8d 0d 02 14 01 00 	lea    0x11402(%rip),%rcx        # 3ae64 <_ZN4core7unicode12unicode_data2cc19BITSET_INDEX_CHUNKS17h8a1f39cd536e9344E+0x9a4>
   29a62:	48 63 04 81          	movslq (%rcx,%rax,4),%rax
   29a66:	48 01 c8             	add    %rcx,%rax
   29a69:	ff e0                	jmpq   *%rax
   29a6b:	48 8b 7b 20          	mov    0x20(%rbx),%rdi
   29a6f:	48 8b 43 28          	mov    0x28(%rbx),%rax
   29a73:	48 8d 35 be 0c 01 00 	lea    0x10cbe(%rip),%rsi        # 3a738 <_ZN4core7unicode12unicode_data2cc19BITSET_INDEX_CHUNKS17h8a1f39cd536e9344E+0x278>
   29a7a:	ba 08 00 00 00       	mov    $0x8,%edx
   29a7f:	e9 90 01 00 00       	jmpq   29c14 <_ZN62_$LT$std..io..error..ErrorKind$u20$as$u20$core..fmt..Debug$GT$3fmt17h5f9f536b4b2307d2E+0x1c4>
   29a84:	48 8b 7b 20          	mov    0x20(%rbx),%rdi
   29a88:	48 8b 43 28          	mov    0x28(%rbx),%rax
   29a8c:	48 8d 35 7d 0a 01 00 	lea    0x10a7d(%rip),%rsi        # 3a510 <_ZN4core7unicode12unicode_data2cc19BITSET_INDEX_CHUNKS17h8a1f39cd536e9344E+0x50>
   29a93:	ba 10 00 00 00       	mov    $0x10,%edx
   29a98:	e9 77 01 00 00       	jmpq   29c14 <_ZN62_$LT$std..io..error..ErrorKind$u20$as$u20$core..fmt..Debug$GT$3fmt17h5f9f536b4b2307d2E+0x1c4>
   29a9d:	48 8b 7b 20          	mov    0x20(%rbx),%rdi
   29aa1:	48 8b 43 28          	mov    0x28(%rbx),%rax
   29aa5:	48 8d 35 61 40 01 00 	lea    0x14061(%rip),%rsi        # 3db0d <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x11ad>
   29aac:	ba 11 00 00 00       	mov    $0x11,%edx
   29ab1:	e9 5e 01 00 00       	jmpq   29c14 <_ZN62_$LT$std..io..error..ErrorKind$u20$as$u20$core..fmt..Debug$GT$3fmt17h5f9f536b4b2307d2E+0x1c4>
   29ab6:	48 8b 7b 20          	mov    0x20(%rbx),%rdi
   29aba:	48 8b 43 28          	mov    0x28(%rbx),%rax
   29abe:	48 8d 35 59 40 01 00 	lea    0x14059(%rip),%rsi        # 3db1e <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x11be>
   29ac5:	ba 0f 00 00 00       	mov    $0xf,%edx
   29aca:	e9 45 01 00 00       	jmpq   29c14 <_ZN62_$LT$std..io..error..ErrorKind$u20$as$u20$core..fmt..Debug$GT$3fmt17h5f9f536b4b2307d2E+0x1c4>
   29acf:	48 8b 7b 20          	mov    0x20(%rbx),%rdi
   29ad3:	48 8b 43 28          	mov    0x28(%rbx),%rax
   29ad7:	48 8d 35 4f 40 01 00 	lea    0x1404f(%rip),%rsi        # 3db2d <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x11cd>
   29ade:	ba 11 00 00 00       	mov    $0x11,%edx
   29ae3:	e9 2c 01 00 00       	jmpq   29c14 <_ZN62_$LT$std..io..error..ErrorKind$u20$as$u20$core..fmt..Debug$GT$3fmt17h5f9f536b4b2307d2E+0x1c4>
   29ae8:	48 8b 7b 20          	mov    0x20(%rbx),%rdi
   29aec:	48 8b 43 28          	mov    0x28(%rbx),%rax
   29af0:	48 8d 35 47 40 01 00 	lea    0x14047(%rip),%rsi        # 3db3e <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x11de>
   29af7:	ba 0c 00 00 00       	mov    $0xc,%edx
   29afc:	e9 13 01 00 00       	jmpq   29c14 <_ZN62_$LT$std..io..error..ErrorKind$u20$as$u20$core..fmt..Debug$GT$3fmt17h5f9f536b4b2307d2E+0x1c4>
   29b01:	48 8b 7b 20          	mov    0x20(%rbx),%rdi
   29b05:	48 8b 43 28          	mov    0x28(%rbx),%rax
   29b09:	48 8d 35 3a 40 01 00 	lea    0x1403a(%rip),%rsi        # 3db4a <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x11ea>
   29b10:	ba 09 00 00 00       	mov    $0x9,%edx
   29b15:	e9 fa 00 00 00       	jmpq   29c14 <_ZN62_$LT$std..io..error..ErrorKind$u20$as$u20$core..fmt..Debug$GT$3fmt17h5f9f536b4b2307d2E+0x1c4>
   29b1a:	48 8b 7b 20          	mov    0x20(%rbx),%rdi
   29b1e:	48 8b 43 28          	mov    0x28(%rbx),%rax
   29b22:	48 8d 35 f7 09 01 00 	lea    0x109f7(%rip),%rsi        # 3a520 <_ZN4core7unicode12unicode_data2cc19BITSET_INDEX_CHUNKS17h8a1f39cd536e9344E+0x60>
   29b29:	ba 10 00 00 00       	mov    $0x10,%edx
   29b2e:	e9 e1 00 00 00       	jmpq   29c14 <_ZN62_$LT$std..io..error..ErrorKind$u20$as$u20$core..fmt..Debug$GT$3fmt17h5f9f536b4b2307d2E+0x1c4>
   29b33:	48 8b 7b 20          	mov    0x20(%rbx),%rdi
   29b37:	48 8b 43 28          	mov    0x28(%rbx),%rax
   29b3b:	48 8d 35 11 40 01 00 	lea    0x14011(%rip),%rsi        # 3db53 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x11f3>
   29b42:	ba 0a 00 00 00       	mov    $0xa,%edx
   29b47:	e9 c8 00 00 00       	jmpq   29c14 <_ZN62_$LT$std..io..error..ErrorKind$u20$as$u20$core..fmt..Debug$GT$3fmt17h5f9f536b4b2307d2E+0x1c4>
   29b4c:	48 8b 7b 20          	mov    0x20(%rbx),%rdi
   29b50:	48 8b 43 28          	mov    0x28(%rbx),%rax
   29b54:	48 8d 35 02 40 01 00 	lea    0x14002(%rip),%rsi        # 3db5d <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x11fd>
   29b5b:	e9 af 00 00 00       	jmpq   29c0f <_ZN62_$LT$std..io..error..ErrorKind$u20$as$u20$core..fmt..Debug$GT$3fmt17h5f9f536b4b2307d2E+0x1bf>
   29b60:	48 8b 7b 20          	mov    0x20(%rbx),%rdi
   29b64:	48 8b 43 28          	mov    0x28(%rbx),%rax
   29b68:	48 8d 35 fb 3f 01 00 	lea    0x13ffb(%rip),%rsi        # 3db6a <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x120a>
   29b6f:	ba 0a 00 00 00       	mov    $0xa,%edx
   29b74:	e9 9b 00 00 00       	jmpq   29c14 <_ZN62_$LT$std..io..error..ErrorKind$u20$as$u20$core..fmt..Debug$GT$3fmt17h5f9f536b4b2307d2E+0x1c4>
   29b79:	48 8b 7b 20          	mov    0x20(%rbx),%rdi
   29b7d:	48 8b 43 28          	mov    0x28(%rbx),%rax
   29b81:	48 8d 35 ec 3f 01 00 	lea    0x13fec(%rip),%rsi        # 3db74 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x1214>
   29b88:	ba 0c 00 00 00       	mov    $0xc,%edx
   29b8d:	e9 82 00 00 00       	jmpq   29c14 <_ZN62_$LT$std..io..error..ErrorKind$u20$as$u20$core..fmt..Debug$GT$3fmt17h5f9f536b4b2307d2E+0x1c4>
   29b92:	48 8b 7b 20          	mov    0x20(%rbx),%rdi
   29b96:	48 8b 43 28          	mov    0x28(%rbx),%rax
   29b9a:	48 8d 35 df 3f 01 00 	lea    0x13fdf(%rip),%rsi        # 3db80 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x1220>
   29ba1:	ba 0b 00 00 00       	mov    $0xb,%edx
   29ba6:	eb 6c                	jmp    29c14 <_ZN62_$LT$std..io..error..ErrorKind$u20$as$u20$core..fmt..Debug$GT$3fmt17h5f9f536b4b2307d2E+0x1c4>
   29ba8:	48 8b 7b 20          	mov    0x20(%rbx),%rdi
   29bac:	48 8b 43 28          	mov    0x28(%rbx),%rax
   29bb0:	48 8d 35 89 0b 01 00 	lea    0x10b89(%rip),%rsi        # 3a740 <_ZN4core7unicode12unicode_data2cc19BITSET_INDEX_CHUNKS17h8a1f39cd536e9344E+0x280>
   29bb7:	ba 08 00 00 00       	mov    $0x8,%edx
   29bbc:	eb 56                	jmp    29c14 <_ZN62_$LT$std..io..error..ErrorKind$u20$as$u20$core..fmt..Debug$GT$3fmt17h5f9f536b4b2307d2E+0x1c4>
   29bbe:	48 8b 7b 20          	mov    0x20(%rbx),%rdi
   29bc2:	48 8b 43 28          	mov    0x28(%rbx),%rax
   29bc6:	48 8d 35 be 3f 01 00 	lea    0x13fbe(%rip),%rsi        # 3db8b <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x122b>
   29bcd:	ba 09 00 00 00       	mov    $0x9,%edx
   29bd2:	eb 40                	jmp    29c14 <_ZN62_$LT$std..io..error..ErrorKind$u20$as$u20$core..fmt..Debug$GT$3fmt17h5f9f536b4b2307d2E+0x1c4>
   29bd4:	48 8b 7b 20          	mov    0x20(%rbx),%rdi
   29bd8:	48 8b 43 28          	mov    0x28(%rbx),%rax
   29bdc:	48 8d 35 b1 3f 01 00 	lea    0x13fb1(%rip),%rsi        # 3db94 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x1234>
   29be3:	ba 0b 00 00 00       	mov    $0xb,%edx
   29be8:	eb 2a                	jmp    29c14 <_ZN62_$LT$std..io..error..ErrorKind$u20$as$u20$core..fmt..Debug$GT$3fmt17h5f9f536b4b2307d2E+0x1c4>
   29bea:	48 8b 7b 20          	mov    0x20(%rbx),%rdi
   29bee:	48 8b 43 28          	mov    0x28(%rbx),%rax
   29bf2:	48 8d 35 a6 3f 01 00 	lea    0x13fa6(%rip),%rsi        # 3db9f <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x123f>
   29bf9:	ba 05 00 00 00       	mov    $0x5,%edx
   29bfe:	eb 14                	jmp    29c14 <_ZN62_$LT$std..io..error..ErrorKind$u20$as$u20$core..fmt..Debug$GT$3fmt17h5f9f536b4b2307d2E+0x1c4>
   29c00:	48 8b 7b 20          	mov    0x20(%rbx),%rdi
   29c04:	48 8b 43 28          	mov    0x28(%rbx),%rax
   29c08:	48 8d 35 f1 3e 01 00 	lea    0x13ef1(%rip),%rsi        # 3db00 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x11a0>
   29c0f:	ba 0d 00 00 00       	mov    $0xd,%edx
   29c14:	ff 50 18             	callq  *0x18(%rax)
   29c17:	48 89 5c 24 08       	mov    %rbx,0x8(%rsp)
   29c1c:	88 44 24 18          	mov    %al,0x18(%rsp)
   29c20:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
   29c27:	00 00 
   29c29:	c6 44 24 19 00       	movb   $0x0,0x19(%rsp)
   29c2e:	48 83 c4 20          	add    $0x20,%rsp
   29c32:	5b                   	pop    %rbx
   29c33:	c3                   	retq   
   29c34:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   29c3b:	00 00 00 
   29c3e:	66 90                	xchg   %ax,%ax

0000000000029c40 <_ZN58_$LT$alloc..string..String$u20$as$u20$core..fmt..Debug$GT$3fmt17hc9b7ab0ee97f3252E>:
   29c40:	48 89 f2             	mov    %rsi,%rdx
   29c43:	48 8b 07             	mov    (%rdi),%rax
   29c46:	48 8b 77 10          	mov    0x10(%rdi),%rsi
   29c4a:	48 89 c7             	mov    %rax,%rdi
   29c4d:	e9 be 08 fe ff       	jmpq   a510 <_ZN40_$LT$str$u20$as$u20$core..fmt..Debug$GT$3fmt17h942f30b282040ce2E>
   29c52:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   29c59:	00 00 00 
   29c5c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000029c60 <_ZN58_$LT$std..io..error..Error$u20$as$u20$core..fmt..Debug$GT$3fmt17hca9f62407ce48033E>:
   29c60:	55                   	push   %rbp
   29c61:	41 56                	push   %r14
   29c63:	53                   	push   %rbx
   29c64:	48 83 ec 70          	sub    $0x70,%rsp
   29c68:	48 89 f3             	mov    %rsi,%rbx
   29c6b:	0f b6 07             	movzbl (%rdi),%eax
   29c6e:	48 85 c0             	test   %rax,%rax
   29c71:	74 79                	je     29cec <_ZN58_$LT$std..io..error..Error$u20$as$u20$core..fmt..Debug$GT$3fmt17hca9f62407ce48033E+0x8c>
   29c73:	48 83 f8 02          	cmp    $0x2,%rax
   29c77:	0f 84 68 01 00 00    	je     29de5 <_ZN58_$LT$std..io..error..Error$u20$as$u20$core..fmt..Debug$GT$3fmt17hca9f62407ce48033E+0x185>
   29c7d:	8a 47 01             	mov    0x1(%rdi),%al
   29c80:	88 44 24 0b          	mov    %al,0xb(%rsp)
   29c84:	48 8b 7b 20          	mov    0x20(%rbx),%rdi
   29c88:	48 8b 43 28          	mov    0x28(%rbx),%rax
   29c8c:	48 8d 35 11 28 01 00 	lea    0x12811(%rip),%rsi        # 3c4a4 <_ZN4core7unicode12unicode_data15grapheme_extend6BITSET17h68ce7f61ccfa32feE+0xa04>
   29c93:	ba 04 00 00 00       	mov    $0x4,%edx
   29c98:	ff 50 18             	callq  *0x18(%rax)
   29c9b:	40 b5 01             	mov    $0x1,%bpl
   29c9e:	84 c0                	test   %al,%al
   29ca0:	0f 85 f5 02 00 00    	jne    29f9b <_ZN58_$LT$std..io..error..Error$u20$as$u20$core..fmt..Debug$GT$3fmt17hca9f62407ce48033E+0x33b>
   29ca6:	f6 43 30 04          	testb  $0x4,0x30(%rbx)
   29caa:	48 8b 7b 20          	mov    0x20(%rbx),%rdi
   29cae:	48 8b 43 28          	mov    0x28(%rbx),%rax
   29cb2:	48 8b 40 18          	mov    0x18(%rax),%rax
   29cb6:	0f 85 ed 01 00 00    	jne    29ea9 <_ZN58_$LT$std..io..error..Error$u20$as$u20$core..fmt..Debug$GT$3fmt17hca9f62407ce48033E+0x249>
   29cbc:	48 8d 35 bc 34 01 00 	lea    0x134bc(%rip),%rsi        # 3d17f <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x81f>
   29cc3:	ba 01 00 00 00       	mov    $0x1,%edx
   29cc8:	ff d0                	callq  *%rax
   29cca:	84 c0                	test   %al,%al
   29ccc:	0f 85 c9 02 00 00    	jne    29f9b <_ZN58_$LT$std..io..error..Error$u20$as$u20$core..fmt..Debug$GT$3fmt17hca9f62407ce48033E+0x33b>
   29cd2:	48 8d 7c 24 0b       	lea    0xb(%rsp),%rdi
   29cd7:	48 89 de             	mov    %rbx,%rsi
   29cda:	e8 71 fd ff ff       	callq  29a50 <_ZN62_$LT$std..io..error..ErrorKind$u20$as$u20$core..fmt..Debug$GT$3fmt17h5f9f536b4b2307d2E>
   29cdf:	84 c0                	test   %al,%al
   29ce1:	0f 84 5c 02 00 00    	je     29f43 <_ZN58_$LT$std..io..error..Error$u20$as$u20$core..fmt..Debug$GT$3fmt17hca9f62407ce48033E+0x2e3>
   29ce7:	e9 af 02 00 00       	jmpq   29f9b <_ZN58_$LT$std..io..error..Error$u20$as$u20$core..fmt..Debug$GT$3fmt17hca9f62407ce48033E+0x33b>
   29cec:	8b 47 04             	mov    0x4(%rdi),%eax
   29cef:	89 44 24 0c          	mov    %eax,0xc(%rsp)
   29cf3:	48 8b 7b 20          	mov    0x20(%rbx),%rdi
   29cf7:	48 8b 43 28          	mov    0x28(%rbx),%rax
   29cfb:	48 8d 35 ea 3d 01 00 	lea    0x13dea(%rip),%rsi        # 3daec <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x118c>
   29d02:	ba 02 00 00 00       	mov    $0x2,%edx
   29d07:	ff 50 18             	callq  *0x18(%rax)
   29d0a:	48 89 5c 24 10       	mov    %rbx,0x10(%rsp)
   29d0f:	88 44 24 18          	mov    %al,0x18(%rsp)
   29d13:	c6 44 24 19 00       	movb   $0x0,0x19(%rsp)
   29d18:	48 8d 35 89 27 01 00 	lea    0x12789(%rip),%rsi        # 3c4a8 <_ZN4core7unicode12unicode_data15grapheme_extend6BITSET17h68ce7f61ccfa32feE+0xa08>
   29d1f:	4c 8d 05 ca d8 21 00 	lea    0x21d8ca(%rip),%r8        # 2475f0 <__init_array_end+0x15e0>
   29d26:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
   29d2b:	48 8d 4c 24 0c       	lea    0xc(%rsp),%rcx
   29d30:	ba 04 00 00 00       	mov    $0x4,%edx
   29d35:	e8 a6 03 fe ff       	callq  a0e0 <_ZN4core3fmt8builders11DebugStruct5field17h12f9df3a6de8af04E>
   29d3a:	48 89 c3             	mov    %rax,%rbx
   29d3d:	8b 7c 24 0c          	mov    0xc(%rsp),%edi
   29d41:	e8 fa b4 ff ff       	callq  25240 <_ZN3std3sys4unix17decode_error_kind17h568cc869969c08a6E>
   29d46:	88 44 24 0b          	mov    %al,0xb(%rsp)
   29d4a:	48 8d 35 5b 27 01 00 	lea    0x1275b(%rip),%rsi        # 3c4ac <_ZN4core7unicode12unicode_data15grapheme_extend6BITSET17h68ce7f61ccfa32feE+0xa0c>
   29d51:	4c 8d 05 b8 d8 21 00 	lea    0x21d8b8(%rip),%r8        # 247610 <__init_array_end+0x1600>
   29d58:	48 8d 4c 24 0b       	lea    0xb(%rsp),%rcx
   29d5d:	ba 04 00 00 00       	mov    $0x4,%edx
   29d62:	48 89 df             	mov    %rbx,%rdi
   29d65:	e8 76 03 fe ff       	callq  a0e0 <_ZN4core3fmt8builders11DebugStruct5field17h12f9df3a6de8af04E>
   29d6a:	48 89 c3             	mov    %rax,%rbx
   29d6d:	8b 74 24 0c          	mov    0xc(%rsp),%esi
   29d71:	48 8d 6c 24 30       	lea    0x30(%rsp),%rbp
   29d76:	48 89 ef             	mov    %rbp,%rdi
   29d79:	e8 a2 e3 ff ff       	callq  28120 <_ZN3std3sys4unix2os12error_string17h4bc904258f32ea6cE>
   29d7e:	48 8d 35 69 3d 01 00 	lea    0x13d69(%rip),%rsi        # 3daee <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x118e>
   29d85:	4c 8d 05 a4 d8 21 00 	lea    0x21d8a4(%rip),%r8        # 247630 <__init_array_end+0x1620>
   29d8c:	ba 07 00 00 00       	mov    $0x7,%edx
   29d91:	48 89 df             	mov    %rbx,%rdi
   29d94:	48 89 e9             	mov    %rbp,%rcx
   29d97:	e8 44 03 fe ff       	callq  a0e0 <_ZN4core3fmt8builders11DebugStruct5field17h12f9df3a6de8af04E>
   29d9c:	48 89 c3             	mov    %rax,%rbx
   29d9f:	80 78 09 00          	cmpb   $0x0,0x9(%rax)
   29da3:	40 8a 68 08          	mov    0x8(%rax),%bpl
   29da7:	0f 84 c5 01 00 00    	je     29f72 <_ZN58_$LT$std..io..error..Error$u20$as$u20$core..fmt..Debug$GT$3fmt17hca9f62407ce48033E+0x312>
   29dad:	40 84 ed             	test   %bpl,%bpl
   29db0:	40 b5 01             	mov    $0x1,%bpl
   29db3:	0f 85 b5 01 00 00    	jne    29f6e <_ZN58_$LT$std..io..error..Error$u20$as$u20$core..fmt..Debug$GT$3fmt17hca9f62407ce48033E+0x30e>
   29db9:	48 8b 03             	mov    (%rbx),%rax
   29dbc:	f6 40 30 04          	testb  $0x4,0x30(%rax)
   29dc0:	48 8b 78 20          	mov    0x20(%rax),%rdi
   29dc4:	48 8b 40 28          	mov    0x28(%rax),%rax
   29dc8:	48 8b 40 18          	mov    0x18(%rax),%rax
   29dcc:	0f 85 8c 01 00 00    	jne    29f5e <_ZN58_$LT$std..io..error..Error$u20$as$u20$core..fmt..Debug$GT$3fmt17hca9f62407ce48033E+0x2fe>
   29dd2:	48 8d 35 78 2a 01 00 	lea    0x12a78(%rip),%rsi        # 3c851 <str.1+0xa1>
   29dd9:	ba 02 00 00 00       	mov    $0x2,%edx
   29dde:	ff d0                	callq  *%rax
   29de0:	e9 87 01 00 00       	jmpq   29f6c <_ZN58_$LT$std..io..error..Error$u20$as$u20$core..fmt..Debug$GT$3fmt17hca9f62407ce48033E+0x30c>
   29de5:	48 8b 6f 08          	mov    0x8(%rdi),%rbp
   29de9:	4c 8d 75 10          	lea    0x10(%rbp),%r14
   29ded:	48 8b 7b 20          	mov    0x20(%rbx),%rdi
   29df1:	48 8b 43 28          	mov    0x28(%rbx),%rax
   29df5:	48 8d 35 f9 3c 01 00 	lea    0x13cf9(%rip),%rsi        # 3daf5 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x1195>
   29dfc:	ba 06 00 00 00       	mov    $0x6,%edx
   29e01:	ff 50 18             	callq  *0x18(%rax)
   29e04:	48 89 5c 24 30       	mov    %rbx,0x30(%rsp)
   29e09:	88 44 24 38          	mov    %al,0x38(%rsp)
   29e0d:	c6 44 24 39 00       	movb   $0x0,0x39(%rsp)
   29e12:	4c 89 74 24 10       	mov    %r14,0x10(%rsp)
   29e17:	48 8d 35 8e 26 01 00 	lea    0x1268e(%rip),%rsi        # 3c4ac <_ZN4core7unicode12unicode_data15grapheme_extend6BITSET17h68ce7f61ccfa32feE+0xa0c>
   29e1e:	4c 8d 05 2b d8 21 00 	lea    0x21d82b(%rip),%r8        # 247650 <__init_array_end+0x1640>
   29e25:	48 8d 5c 24 30       	lea    0x30(%rsp),%rbx
   29e2a:	48 8d 4c 24 10       	lea    0x10(%rsp),%rcx
   29e2f:	ba 04 00 00 00       	mov    $0x4,%edx
   29e34:	48 89 df             	mov    %rbx,%rdi
   29e37:	e8 a4 02 fe ff       	callq  a0e0 <_ZN4core3fmt8builders11DebugStruct5field17h12f9df3a6de8af04E>
   29e3c:	48 89 6c 24 10       	mov    %rbp,0x10(%rsp)
   29e41:	48 8d 35 b3 3c 01 00 	lea    0x13cb3(%rip),%rsi        # 3dafb <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x119b>
   29e48:	4c 8d 05 21 d8 21 00 	lea    0x21d821(%rip),%r8        # 247670 <__init_array_end+0x1660>
   29e4f:	48 8d 4c 24 10       	lea    0x10(%rsp),%rcx
   29e54:	ba 05 00 00 00       	mov    $0x5,%edx
   29e59:	48 89 df             	mov    %rbx,%rdi
   29e5c:	e8 7f 02 fe ff       	callq  a0e0 <_ZN4core3fmt8builders11DebugStruct5field17h12f9df3a6de8af04E>
   29e61:	80 7c 24 39 00       	cmpb   $0x0,0x39(%rsp)
   29e66:	40 8a 6c 24 38       	mov    0x38(%rsp),%bpl
   29e6b:	0f 84 2a 01 00 00    	je     29f9b <_ZN58_$LT$std..io..error..Error$u20$as$u20$core..fmt..Debug$GT$3fmt17hca9f62407ce48033E+0x33b>
   29e71:	40 84 ed             	test   %bpl,%bpl
   29e74:	40 b5 01             	mov    $0x1,%bpl
   29e77:	0f 85 19 01 00 00    	jne    29f96 <_ZN58_$LT$std..io..error..Error$u20$as$u20$core..fmt..Debug$GT$3fmt17hca9f62407ce48033E+0x336>
   29e7d:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
   29e82:	f6 40 30 04          	testb  $0x4,0x30(%rax)
   29e86:	48 8b 78 20          	mov    0x20(%rax),%rdi
   29e8a:	48 8b 40 28          	mov    0x28(%rax),%rax
   29e8e:	48 8b 40 18          	mov    0x18(%rax),%rax
   29e92:	0f 85 ee 00 00 00    	jne    29f86 <_ZN58_$LT$std..io..error..Error$u20$as$u20$core..fmt..Debug$GT$3fmt17hca9f62407ce48033E+0x326>
   29e98:	48 8d 35 b2 29 01 00 	lea    0x129b2(%rip),%rsi        # 3c851 <str.1+0xa1>
   29e9f:	ba 02 00 00 00       	mov    $0x2,%edx
   29ea4:	e9 e9 00 00 00       	jmpq   29f92 <_ZN58_$LT$std..io..error..Error$u20$as$u20$core..fmt..Debug$GT$3fmt17hca9f62407ce48033E+0x332>
   29ea9:	48 8d 35 a3 29 01 00 	lea    0x129a3(%rip),%rsi        # 3c853 <str.1+0xa3>
   29eb0:	ba 02 00 00 00       	mov    $0x2,%edx
   29eb5:	ff d0                	callq  *%rax
   29eb7:	84 c0                	test   %al,%al
   29eb9:	0f 85 dc 00 00 00    	jne    29f9b <_ZN58_$LT$std..io..error..Error$u20$as$u20$core..fmt..Debug$GT$3fmt17hca9f62407ce48033E+0x33b>
   29ebf:	8b 43 30             	mov    0x30(%rbx),%eax
   29ec2:	c6 44 24 0c 01       	movb   $0x1,0xc(%rsp)
   29ec7:	0f 10 43 20          	movups 0x20(%rbx),%xmm0
   29ecb:	0f 29 44 24 10       	movaps %xmm0,0x10(%rsp)
   29ed0:	48 8d 4c 24 0c       	lea    0xc(%rsp),%rcx
   29ed5:	48 89 4c 24 20       	mov    %rcx,0x20(%rsp)
   29eda:	8b 4b 34             	mov    0x34(%rbx),%ecx
   29edd:	8a 53 38             	mov    0x38(%rbx),%dl
   29ee0:	0f 10 03             	movups (%rbx),%xmm0
   29ee3:	0f 10 4b 10          	movups 0x10(%rbx),%xmm1
   29ee7:	89 44 24 60          	mov    %eax,0x60(%rsp)
   29eeb:	89 4c 24 64          	mov    %ecx,0x64(%rsp)
   29eef:	88 54 24 68          	mov    %dl,0x68(%rsp)
   29ef3:	0f 29 44 24 30       	movaps %xmm0,0x30(%rsp)
   29ef8:	0f 29 4c 24 40       	movaps %xmm1,0x40(%rsp)
   29efd:	48 8d 44 24 10       	lea    0x10(%rsp),%rax
   29f02:	48 89 44 24 50       	mov    %rax,0x50(%rsp)
   29f07:	48 8d 05 8a c7 21 00 	lea    0x21c78a(%rip),%rax        # 246698 <__init_array_end+0x688>
   29f0e:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
   29f13:	48 8d 7c 24 0b       	lea    0xb(%rsp),%rdi
   29f18:	48 8d 74 24 30       	lea    0x30(%rsp),%rsi
   29f1d:	e8 2e fb ff ff       	callq  29a50 <_ZN62_$LT$std..io..error..ErrorKind$u20$as$u20$core..fmt..Debug$GT$3fmt17h5f9f536b4b2307d2E>
   29f22:	84 c0                	test   %al,%al
   29f24:	75 75                	jne    29f9b <_ZN58_$LT$std..io..error..Error$u20$as$u20$core..fmt..Debug$GT$3fmt17hca9f62407ce48033E+0x33b>
   29f26:	48 8b 7c 24 50       	mov    0x50(%rsp),%rdi
   29f2b:	48 8b 44 24 58       	mov    0x58(%rsp),%rax
   29f30:	48 8d 35 18 29 01 00 	lea    0x12918(%rip),%rsi        # 3c84f <str.1+0x9f>
   29f37:	ba 02 00 00 00       	mov    $0x2,%edx
   29f3c:	ff 50 18             	callq  *0x18(%rax)
   29f3f:	84 c0                	test   %al,%al
   29f41:	75 58                	jne    29f9b <_ZN58_$LT$std..io..error..Error$u20$as$u20$core..fmt..Debug$GT$3fmt17hca9f62407ce48033E+0x33b>
   29f43:	48 8b 7b 20          	mov    0x20(%rbx),%rdi
   29f47:	48 8b 43 28          	mov    0x28(%rbx),%rax
   29f4b:	48 8d 35 6e 39 01 00 	lea    0x1396e(%rip),%rsi        # 3d8c0 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0xf60>
   29f52:	ba 01 00 00 00       	mov    $0x1,%edx
   29f57:	ff 50 18             	callq  *0x18(%rax)
   29f5a:	89 c5                	mov    %eax,%ebp
   29f5c:	eb 3d                	jmp    29f9b <_ZN58_$LT$std..io..error..Error$u20$as$u20$core..fmt..Debug$GT$3fmt17hca9f62407ce48033E+0x33b>
   29f5e:	48 8d 35 7e 32 01 00 	lea    0x1327e(%rip),%rsi        # 3d1e3 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x883>
   29f65:	ba 01 00 00 00       	mov    $0x1,%edx
   29f6a:	ff d0                	callq  *%rax
   29f6c:	89 c5                	mov    %eax,%ebp
   29f6e:	40 88 6b 08          	mov    %bpl,0x8(%rbx)
   29f72:	48 83 7c 24 38 00    	cmpq   $0x0,0x38(%rsp)
   29f78:	74 21                	je     29f9b <_ZN58_$LT$std..io..error..Error$u20$as$u20$core..fmt..Debug$GT$3fmt17hca9f62407ce48033E+0x33b>
   29f7a:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
   29f7f:	e8 8c b4 fd ff       	callq  5410 <__rust_dealloc>
   29f84:	eb 15                	jmp    29f9b <_ZN58_$LT$std..io..error..Error$u20$as$u20$core..fmt..Debug$GT$3fmt17hca9f62407ce48033E+0x33b>
   29f86:	48 8d 35 56 32 01 00 	lea    0x13256(%rip),%rsi        # 3d1e3 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x883>
   29f8d:	ba 01 00 00 00       	mov    $0x1,%edx
   29f92:	ff d0                	callq  *%rax
   29f94:	89 c5                	mov    %eax,%ebp
   29f96:	40 88 6c 24 38       	mov    %bpl,0x38(%rsp)
   29f9b:	89 e8                	mov    %ebp,%eax
   29f9d:	48 83 c4 70          	add    $0x70,%rsp
   29fa1:	5b                   	pop    %rbx
   29fa2:	41 5e                	pop    %r14
   29fa4:	5d                   	pop    %rbp
   29fa5:	c3                   	retq   
   29fa6:	48 89 c3             	mov    %rax,%rbx
   29fa9:	48 8d 7c 24 30       	lea    0x30(%rsp),%rdi
   29fae:	e8 fd ae ff ff       	callq  24eb0 <_ZN4core3ptr13drop_in_place17h5563ae43ca5ac214E>
   29fb3:	48 89 df             	mov    %rbx,%rdi
   29fb6:	e8 e5 a0 fd ff       	callq  40a0 <_Unwind_Resume@plt>
   29fbb:	0f 0b                	ud2    
   29fbd:	0f 1f 00             	nopl   (%rax)

0000000000029fc0 <_ZN4core3ptr13drop_in_place17h97f3618a3d1d15d8E>:
   29fc0:	41 56                	push   %r14
   29fc2:	53                   	push   %rbx
   29fc3:	50                   	push   %rax
   29fc4:	48 89 fb             	mov    %rdi,%rbx
   29fc7:	48 8b 3f             	mov    (%rdi),%rdi
   29fca:	48 8b 43 08          	mov    0x8(%rbx),%rax
   29fce:	ff 10                	callq  *(%rax)
   29fd0:	48 8b 43 08          	mov    0x8(%rbx),%rax
   29fd4:	48 83 78 08 00       	cmpq   $0x0,0x8(%rax)
   29fd9:	74 0f                	je     29fea <_ZN4core3ptr13drop_in_place17h97f3618a3d1d15d8E+0x2a>
   29fdb:	48 8b 3b             	mov    (%rbx),%rdi
   29fde:	48 83 c4 08          	add    $0x8,%rsp
   29fe2:	5b                   	pop    %rbx
   29fe3:	41 5e                	pop    %r14
   29fe5:	e9 26 b4 fd ff       	jmpq   5410 <__rust_dealloc>
   29fea:	48 83 c4 08          	add    $0x8,%rsp
   29fee:	5b                   	pop    %rbx
   29fef:	41 5e                	pop    %r14
   29ff1:	c3                   	retq   
   29ff2:	49 89 c6             	mov    %rax,%r14
   29ff5:	48 8b 3b             	mov    (%rbx),%rdi
   29ff8:	48 8b 73 08          	mov    0x8(%rbx),%rsi
   29ffc:	e8 0f a9 ff ff       	callq  24910 <_ZN5alloc5alloc8box_free17h3741427eaa5804e6E>
   2a001:	4c 89 f7             	mov    %r14,%rdi
   2a004:	e8 97 a0 fd ff       	callq  40a0 <_Unwind_Resume@plt>
   2a009:	0f 0b                	ud2    
   2a00b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000002a010 <_ZN3std2io5stdio6stderr17hb2c01e21db2ee5d5E>:
   2a010:	55                   	push   %rbp
   2a011:	41 57                	push   %r15
   2a013:	41 56                	push   %r14
   2a015:	41 55                	push   %r13
   2a017:	41 54                	push   %r12
   2a019:	53                   	push   %rbx
   2a01a:	48 83 ec 38          	sub    $0x38,%rsp
   2a01e:	48 8d 1d 93 e1 21 00 	lea    0x21e193(%rip),%rbx        # 2481b8 <_ZN3std2io5stdio6stderr8INSTANCE17h86c185f449673b63E>
   2a025:	48 89 df             	mov    %rbx,%rdi
   2a028:	ff 15 b2 df 21 00    	callq  *0x21dfb2(%rip)        # 247fe0 <pthread_mutex_lock@GLIBC_2.2.5>
   2a02e:	48 89 5c 24 30       	mov    %rbx,0x30(%rsp)
   2a033:	48 8b 05 a6 e1 21 00 	mov    0x21e1a6(%rip),%rax        # 2481e0 <_ZN3std2io5stdio6stderr8INSTANCE17h86c185f449673b63E+0x28>
   2a03a:	48 83 f8 01          	cmp    $0x1,%rax
   2a03e:	74 66                	je     2a0a6 <_ZN3std2io5stdio6stderr17hb2c01e21db2ee5d5E+0x96>
   2a040:	48 85 c0             	test   %rax,%rax
   2a043:	75 68                	jne    2a0ad <_ZN3std2io5stdio6stderr17hb2c01e21db2ee5d5E+0x9d>
   2a045:	bf 08 00 00 00       	mov    $0x8,%edi
   2a04a:	be 08 00 00 00       	mov    $0x8,%esi
   2a04f:	e8 6c b3 fd ff       	callq  53c0 <__rust_alloc>
   2a054:	48 85 c0             	test   %rax,%rax
   2a057:	0f 84 a4 02 00 00    	je     2a301 <_ZN3std2io5stdio6stderr17hb2c01e21db2ee5d5E+0x2f1>
   2a05d:	49 89 c6             	mov    %rax,%r14
   2a060:	48 89 18             	mov    %rbx,(%rax)
   2a063:	4c 8d 3d 1e e1 21 00 	lea    0x21e11e(%rip),%r15        # 248188 <_ZN3std10sys_common11at_exit_imp4LOCK17ha2343197c7639f97E>
   2a06a:	4c 89 ff             	mov    %r15,%rdi
   2a06d:	ff 15 6d df 21 00    	callq  *0x21df6d(%rip)        # 247fe0 <pthread_mutex_lock@GLIBC_2.2.5>
   2a073:	4c 89 7c 24 08       	mov    %r15,0x8(%rsp)
   2a078:	48 8b 1d 31 e1 21 00 	mov    0x21e131(%rip),%rbx        # 2481b0 <_ZN3std10sys_common11at_exit_imp5QUEUE17h20295581aa71c61cE>
   2a07f:	48 85 db             	test   %rbx,%rbx
   2a082:	74 3c                	je     2a0c0 <_ZN3std2io5stdio6stderr17hb2c01e21db2ee5d5E+0xb0>
   2a084:	48 83 fb 01          	cmp    $0x1,%rbx
   2a088:	75 66                	jne    2a0f0 <_ZN3std2io5stdio6stderr17hb2c01e21db2ee5d5E+0xe0>
   2a08a:	48 8d 3d f7 e0 21 00 	lea    0x21e0f7(%rip),%rdi        # 248188 <_ZN3std10sys_common11at_exit_imp4LOCK17ha2343197c7639f97E>
   2a091:	ff 15 61 de 21 00    	callq  *0x21de61(%rip)        # 247ef8 <pthread_mutex_unlock@GLIBC_2.2.5>
   2a097:	4c 89 f7             	mov    %r14,%rdi
   2a09a:	e8 71 b3 fd ff       	callq  5410 <__rust_dealloc>
   2a09f:	31 ed                	xor    %ebp,%ebp
   2a0a1:	e9 f6 00 00 00       	jmpq   2a19c <_ZN3std2io5stdio6stderr17hb2c01e21db2ee5d5E+0x18c>
   2a0a6:	31 db                	xor    %ebx,%ebx
   2a0a8:	e9 f0 01 00 00       	jmpq   2a29d <_ZN3std2io5stdio6stderr17hb2c01e21db2ee5d5E+0x28d>
   2a0ad:	48 8b 18             	mov    (%rax),%rbx
   2a0b0:	f0 48 83 03 01       	lock addq $0x1,(%rbx)
   2a0b5:	0f 8f e2 01 00 00    	jg     2a29d <_ZN3std2io5stdio6stderr17hb2c01e21db2ee5d5E+0x28d>
   2a0bb:	e9 52 02 00 00       	jmpq   2a312 <_ZN3std2io5stdio6stderr17hb2c01e21db2ee5d5E+0x302>
   2a0c0:	bf 18 00 00 00       	mov    $0x18,%edi
   2a0c5:	be 08 00 00 00       	mov    $0x8,%esi
   2a0ca:	e8 f1 b2 fd ff       	callq  53c0 <__rust_alloc>
   2a0cf:	48 85 c0             	test   %rax,%rax
   2a0d2:	0f 84 67 02 00 00    	je     2a33f <_ZN3std2io5stdio6stderr17hb2c01e21db2ee5d5E+0x32f>
   2a0d8:	48 89 c3             	mov    %rax,%rbx
   2a0db:	48 c7 00 08 00 00 00 	movq   $0x8,(%rax)
   2a0e2:	0f 57 c0             	xorps  %xmm0,%xmm0
   2a0e5:	0f 11 40 08          	movups %xmm0,0x8(%rax)
   2a0e9:	48 89 05 c0 e0 21 00 	mov    %rax,0x21e0c0(%rip)        # 2481b0 <_ZN3std10sys_common11at_exit_imp5QUEUE17h20295581aa71c61cE>
   2a0f0:	4c 89 74 24 20       	mov    %r14,0x20(%rsp)
   2a0f5:	48 8d 2d 94 d5 21 00 	lea    0x21d594(%rip),%rbp        # 247690 <__init_array_end+0x1680>
   2a0fc:	48 89 6c 24 28       	mov    %rbp,0x28(%rsp)
   2a101:	48 8b 73 10          	mov    0x10(%rbx),%rsi
   2a105:	48 3b 73 08          	cmp    0x8(%rbx),%rsi
   2a109:	75 70                	jne    2a17b <_ZN3std2io5stdio6stderr17hb2c01e21db2ee5d5E+0x16b>
   2a10b:	49 89 f7             	mov    %rsi,%r15
   2a10e:	49 ff c7             	inc    %r15
   2a111:	0f 84 21 02 00 00    	je     2a338 <_ZN3std2io5stdio6stderr17hb2c01e21db2ee5d5E+0x328>
   2a117:	48 8d 04 36          	lea    (%rsi,%rsi,1),%rax
   2a11b:	4c 39 f8             	cmp    %r15,%rax
   2a11e:	4c 0f 47 f8          	cmova  %rax,%r15
   2a122:	b9 10 00 00 00       	mov    $0x10,%ecx
   2a127:	45 31 e4             	xor    %r12d,%r12d
   2a12a:	4c 89 f8             	mov    %r15,%rax
   2a12d:	48 f7 e1             	mul    %rcx
   2a130:	49 89 c5             	mov    %rax,%r13
   2a133:	0f 91 c0             	setno  %al
   2a136:	0f 80 fc 01 00 00    	jo     2a338 <_ZN3std2io5stdio6stderr17hb2c01e21db2ee5d5E+0x328>
   2a13c:	41 88 c4             	mov    %al,%r12b
   2a13f:	49 c1 e4 03          	shl    $0x3,%r12
   2a143:	48 85 f6             	test   %rsi,%rsi
   2a146:	0f 84 7a 01 00 00    	je     2a2c6 <_ZN3std2io5stdio6stderr17hb2c01e21db2ee5d5E+0x2b6>
   2a14c:	48 c1 e6 04          	shl    $0x4,%rsi
   2a150:	48 8b 3b             	mov    (%rbx),%rdi
   2a153:	ba 08 00 00 00       	mov    $0x8,%edx
   2a158:	4c 89 e9             	mov    %r13,%rcx
   2a15b:	e8 c0 b2 fd ff       	callq  5420 <__rust_realloc>
   2a160:	48 85 c0             	test   %rax,%rax
   2a163:	0f 84 71 01 00 00    	je     2a2da <_ZN3std2io5stdio6stderr17hb2c01e21db2ee5d5E+0x2ca>
   2a169:	48 89 03             	mov    %rax,(%rbx)
   2a16c:	4c 89 7b 08          	mov    %r15,0x8(%rbx)
   2a170:	48 8b 73 10          	mov    0x10(%rbx),%rsi
   2a174:	4c 8b 7c 24 08       	mov    0x8(%rsp),%r15
   2a179:	eb 03                	jmp    2a17e <_ZN3std2io5stdio6stderr17hb2c01e21db2ee5d5E+0x16e>
   2a17b:	48 8b 03             	mov    (%rbx),%rax
   2a17e:	48 c1 e6 04          	shl    $0x4,%rsi
   2a182:	4c 89 34 30          	mov    %r14,(%rax,%rsi,1)
   2a186:	48 89 6c 30 08       	mov    %rbp,0x8(%rax,%rsi,1)
   2a18b:	48 83 43 10 01       	addq   $0x1,0x10(%rbx)
   2a190:	4c 89 ff             	mov    %r15,%rdi
   2a193:	ff 15 5f dd 21 00    	callq  *0x21dd5f(%rip)        # 247ef8 <pthread_mutex_unlock@GLIBC_2.2.5>
   2a199:	40 b5 01             	mov    $0x1,%bpl
   2a19c:	bf 28 00 00 00       	mov    $0x28,%edi
   2a1a1:	be 08 00 00 00       	mov    $0x8,%esi
   2a1a6:	e8 15 b2 fd ff       	callq  53c0 <__rust_alloc>
   2a1ab:	48 85 c0             	test   %rax,%rax
   2a1ae:	0f 84 62 01 00 00    	je     2a316 <_ZN3std2io5stdio6stderr17hb2c01e21db2ee5d5E+0x306>
   2a1b4:	49 89 c6             	mov    %rax,%r14
   2a1b7:	0f 57 c0             	xorps  %xmm0,%xmm0
   2a1ba:	0f 11 40 10          	movups %xmm0,0x10(%rax)
   2a1be:	0f 11 00             	movups %xmm0,(%rax)
   2a1c1:	48 c7 40 20 00 00 00 	movq   $0x0,0x20(%rax)
   2a1c8:	00 
   2a1c9:	48 8d 5c 24 20       	lea    0x20(%rsp),%rbx
   2a1ce:	48 89 df             	mov    %rbx,%rdi
   2a1d1:	ff 15 69 dc 21 00    	callq  *0x21dc69(%rip)        # 247e40 <pthread_mutexattr_init@GLIBC_2.2.5>
   2a1d7:	48 89 df             	mov    %rbx,%rdi
   2a1da:	be 01 00 00 00       	mov    $0x1,%esi
   2a1df:	ff 15 1b dd 21 00    	callq  *0x21dd1b(%rip)        # 247f00 <pthread_mutexattr_settype@GLIBC_2.2.5>
   2a1e5:	4c 89 f7             	mov    %r14,%rdi
   2a1e8:	48 89 de             	mov    %rbx,%rsi
   2a1eb:	ff 15 df dd 21 00    	callq  *0x21dddf(%rip)        # 247fd0 <pthread_mutex_init@GLIBC_2.2.5>
   2a1f1:	48 89 df             	mov    %rbx,%rdi
   2a1f4:	ff 15 26 dc 21 00    	callq  *0x21dc26(%rip)        # 247e20 <pthread_mutexattr_destroy@GLIBC_2.2.5>
   2a1fa:	8b 44 24 20          	mov    0x20(%rsp),%eax
   2a1fe:	8b 4c 24 23          	mov    0x23(%rsp),%ecx
   2a202:	89 44 24 18          	mov    %eax,0x18(%rsp)
   2a206:	89 4c 24 1b          	mov    %ecx,0x1b(%rsp)
   2a20a:	8b 44 24 08          	mov    0x8(%rsp),%eax
   2a20e:	8b 4c 24 0b          	mov    0xb(%rsp),%ecx
   2a212:	89 44 24 10          	mov    %eax,0x10(%rsp)
   2a216:	89 4c 24 13          	mov    %ecx,0x13(%rsp)
   2a21a:	bf 30 00 00 00       	mov    $0x30,%edi
   2a21f:	be 08 00 00 00       	mov    $0x8,%esi
   2a224:	e8 97 b1 fd ff       	callq  53c0 <__rust_alloc>
   2a229:	48 85 c0             	test   %rax,%rax
   2a22c:	0f 84 f5 00 00 00    	je     2a327 <_ZN3std2io5stdio6stderr17hb2c01e21db2ee5d5E+0x317>
   2a232:	48 89 c3             	mov    %rax,%rbx
   2a235:	0f 28 05 94 01 01 00 	movaps 0x10194(%rip),%xmm0        # 3a3d0 <_fini+0x8c>
   2a23c:	0f 11 00             	movups %xmm0,(%rax)
   2a23f:	4c 89 70 10          	mov    %r14,0x10(%rax)
   2a243:	48 c7 40 18 00 00 00 	movq   $0x0,0x18(%rax)
   2a24a:	00 
   2a24b:	c6 40 20 00          	movb   $0x0,0x20(%rax)
   2a24f:	8b 44 24 18          	mov    0x18(%rsp),%eax
   2a253:	8b 4c 24 1b          	mov    0x1b(%rsp),%ecx
   2a257:	89 43 21             	mov    %eax,0x21(%rbx)
   2a25a:	89 4b 24             	mov    %ecx,0x24(%rbx)
   2a25d:	c6 43 28 00          	movb   $0x0,0x28(%rbx)
   2a261:	8b 44 24 10          	mov    0x10(%rsp),%eax
   2a265:	8b 4c 24 13          	mov    0x13(%rsp),%ecx
   2a269:	89 43 29             	mov    %eax,0x29(%rbx)
   2a26c:	89 4b 2c             	mov    %ecx,0x2c(%rbx)
   2a26f:	40 84 ed             	test   %bpl,%bpl
   2a272:	74 29                	je     2a29d <_ZN3std2io5stdio6stderr17hb2c01e21db2ee5d5E+0x28d>
   2a274:	f0 48 83 03 01       	lock addq $0x1,(%rbx)
   2a279:	0f 8e 93 00 00 00    	jle    2a312 <_ZN3std2io5stdio6stderr17hb2c01e21db2ee5d5E+0x302>
   2a27f:	bf 08 00 00 00       	mov    $0x8,%edi
   2a284:	be 08 00 00 00       	mov    $0x8,%esi
   2a289:	e8 32 b1 fd ff       	callq  53c0 <__rust_alloc>
   2a28e:	48 85 c0             	test   %rax,%rax
   2a291:	74 6e                	je     2a301 <_ZN3std2io5stdio6stderr17hb2c01e21db2ee5d5E+0x2f1>
   2a293:	48 89 18             	mov    %rbx,(%rax)
   2a296:	48 89 05 43 df 21 00 	mov    %rax,0x21df43(%rip)        # 2481e0 <_ZN3std2io5stdio6stderr8INSTANCE17h86c185f449673b63E+0x28>
   2a29d:	48 8d 3d 14 df 21 00 	lea    0x21df14(%rip),%rdi        # 2481b8 <_ZN3std2io5stdio6stderr8INSTANCE17h86c185f449673b63E>
   2a2a4:	ff 15 4e dc 21 00    	callq  *0x21dc4e(%rip)        # 247ef8 <pthread_mutex_unlock@GLIBC_2.2.5>
   2a2aa:	48 89 5c 24 20       	mov    %rbx,0x20(%rsp)
   2a2af:	48 85 db             	test   %rbx,%rbx
   2a2b2:	74 33                	je     2a2e7 <_ZN3std2io5stdio6stderr17hb2c01e21db2ee5d5E+0x2d7>
   2a2b4:	48 89 d8             	mov    %rbx,%rax
   2a2b7:	48 83 c4 38          	add    $0x38,%rsp
   2a2bb:	5b                   	pop    %rbx
   2a2bc:	41 5c                	pop    %r12
   2a2be:	41 5d                	pop    %r13
   2a2c0:	41 5e                	pop    %r14
   2a2c2:	41 5f                	pop    %r15
   2a2c4:	5d                   	pop    %rbp
   2a2c5:	c3                   	retq   
   2a2c6:	4c 89 ef             	mov    %r13,%rdi
   2a2c9:	4c 89 e6             	mov    %r12,%rsi
   2a2cc:	e8 ef b0 fd ff       	callq  53c0 <__rust_alloc>
   2a2d1:	48 85 c0             	test   %rax,%rax
   2a2d4:	0f 85 8f fe ff ff    	jne    2a169 <_ZN3std2io5stdio6stderr17hb2c01e21db2ee5d5E+0x159>
   2a2da:	4c 89 ef             	mov    %r13,%rdi
   2a2dd:	4c 89 e6             	mov    %r12,%rsi
   2a2e0:	e8 db b1 fd ff       	callq  54c0 <_ZN5alloc5alloc18handle_alloc_error17hf7bb8682f6c8b1d7E>
   2a2e5:	0f 0b                	ud2    
   2a2e7:	48 8d 3d cc 38 01 00 	lea    0x138cc(%rip),%rdi        # 3dbba <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x125a>
   2a2ee:	48 8d 15 bb d3 21 00 	lea    0x21d3bb(%rip),%rdx        # 2476b0 <__init_array_end+0x16a0>
   2a2f5:	be 24 00 00 00       	mov    $0x24,%esi
   2a2fa:	e8 f1 f8 fd ff       	callq  9bf0 <_ZN4core6option13expect_failed17h76ad4c74f3ea7214E>
   2a2ff:	0f 0b                	ud2    
   2a301:	bf 08 00 00 00       	mov    $0x8,%edi
   2a306:	be 08 00 00 00       	mov    $0x8,%esi
   2a30b:	e8 b0 b1 fd ff       	callq  54c0 <_ZN5alloc5alloc18handle_alloc_error17hf7bb8682f6c8b1d7E>
   2a310:	0f 0b                	ud2    
   2a312:	0f 0b                	ud2    
   2a314:	0f 0b                	ud2    
   2a316:	bf 28 00 00 00       	mov    $0x28,%edi
   2a31b:	be 08 00 00 00       	mov    $0x8,%esi
   2a320:	e8 9b b1 fd ff       	callq  54c0 <_ZN5alloc5alloc18handle_alloc_error17hf7bb8682f6c8b1d7E>
   2a325:	0f 0b                	ud2    
   2a327:	bf 30 00 00 00       	mov    $0x30,%edi
   2a32c:	be 08 00 00 00       	mov    $0x8,%esi
   2a331:	e8 8a b1 fd ff       	callq  54c0 <_ZN5alloc5alloc18handle_alloc_error17hf7bb8682f6c8b1d7E>
   2a336:	0f 0b                	ud2    
   2a338:	e8 93 b1 fd ff       	callq  54d0 <_ZN5alloc7raw_vec17capacity_overflow17h9be7d3ce681ac1a6E>
   2a33d:	eb c0                	jmp    2a2ff <_ZN3std2io5stdio6stderr17hb2c01e21db2ee5d5E+0x2ef>
   2a33f:	bf 18 00 00 00       	mov    $0x18,%edi
   2a344:	be 08 00 00 00       	mov    $0x8,%esi
   2a349:	e8 72 b1 fd ff       	callq  54c0 <_ZN5alloc5alloc18handle_alloc_error17hf7bb8682f6c8b1d7E>
   2a34e:	0f 0b                	ud2    
   2a350:	48 89 c3             	mov    %rax,%rbx
   2a353:	48 8d 7c 24 20       	lea    0x20(%rsp),%rdi
   2a358:	e8 63 fc ff ff       	callq  29fc0 <_ZN4core3ptr13drop_in_place17h97f3618a3d1d15d8E>
   2a35d:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   2a362:	e8 89 91 ff ff       	callq  234f0 <_ZN4core3ptr13drop_in_place17hdc1814fe4f8f9b15E>
   2a367:	48 8d 7c 24 30       	lea    0x30(%rsp),%rdi
   2a36c:	e8 7f 91 ff ff       	callq  234f0 <_ZN4core3ptr13drop_in_place17hdc1814fe4f8f9b15E>
   2a371:	48 89 df             	mov    %rbx,%rdi
   2a374:	e8 27 9d fd ff       	callq  40a0 <_Unwind_Resume@plt>
   2a379:	0f 0b                	ud2    
   2a37b:	48 89 c3             	mov    %rax,%rbx
   2a37e:	eb dd                	jmp    2a35d <_ZN3std2io5stdio6stderr17hb2c01e21db2ee5d5E+0x34d>
   2a380:	48 89 c3             	mov    %rax,%rbx
   2a383:	48 8d 7c 24 20       	lea    0x20(%rsp),%rdi
   2a388:	e8 13 00 00 00       	callq  2a3a0 <_ZN4core3ptr13drop_in_place17h5006332a03c4dea8E>
   2a38d:	48 89 df             	mov    %rbx,%rdi
   2a390:	e8 0b 9d fd ff       	callq  40a0 <_Unwind_Resume@plt>
   2a395:	0f 0b                	ud2    
   2a397:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   2a39e:	00 00 

000000000002a3a0 <_ZN4core3ptr13drop_in_place17h5006332a03c4dea8E>:
   2a3a0:	48 8b 07             	mov    (%rdi),%rax
   2a3a3:	48 85 c0             	test   %rax,%rax
   2a3a6:	74 0c                	je     2a3b4 <_ZN4core3ptr13drop_in_place17h5006332a03c4dea8E+0x14>
   2a3a8:	f0 48 83 28 01       	lock subq $0x1,(%rax)
   2a3ad:	75 05                	jne    2a3b4 <_ZN4core3ptr13drop_in_place17h5006332a03c4dea8E+0x14>
   2a3af:	e9 0c 00 00 00       	jmpq   2a3c0 <_ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17h262846a451db8492E>
   2a3b4:	c3                   	retq   
   2a3b5:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2a3bc:	00 00 00 
   2a3bf:	90                   	nop

000000000002a3c0 <_ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17h262846a451db8492E>:
   2a3c0:	41 56                	push   %r14
   2a3c2:	53                   	push   %rbx
   2a3c3:	50                   	push   %rax
   2a3c4:	49 89 fe             	mov    %rdi,%r14
   2a3c7:	48 8b 1f             	mov    (%rdi),%rbx
   2a3ca:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
   2a3ce:	ff 15 64 da 21 00    	callq  *0x21da64(%rip)        # 247e38 <pthread_mutex_destroy@GLIBC_2.2.5>
   2a3d4:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
   2a3d8:	e8 33 b0 fd ff       	callq  5410 <__rust_dealloc>
   2a3dd:	49 8b 06             	mov    (%r14),%rax
   2a3e0:	f0 48 83 68 08 01    	lock subq $0x1,0x8(%rax)
   2a3e6:	75 0f                	jne    2a3f7 <_ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17h262846a451db8492E+0x37>
   2a3e8:	49 8b 3e             	mov    (%r14),%rdi
   2a3eb:	48 83 c4 08          	add    $0x8,%rsp
   2a3ef:	5b                   	pop    %rbx
   2a3f0:	41 5e                	pop    %r14
   2a3f2:	e9 19 b0 fd ff       	jmpq   5410 <__rust_dealloc>
   2a3f7:	48 83 c4 08          	add    $0x8,%rsp
   2a3fb:	5b                   	pop    %rbx
   2a3fc:	41 5e                	pop    %r14
   2a3fe:	c3                   	retq   
   2a3ff:	90                   	nop

000000000002a400 <_ZN4core3ops8function6FnOnce40call_once$u7b$$u7b$vtable.shim$u7d$$u7d$17hd7640a135a6d7bd9E>:
   2a400:	41 56                	push   %r14
   2a402:	53                   	push   %rbx
   2a403:	50                   	push   %rax
   2a404:	48 8b 1f             	mov    (%rdi),%rbx
   2a407:	48 89 df             	mov    %rbx,%rdi
   2a40a:	ff 15 d0 db 21 00    	callq  *0x21dbd0(%rip)        # 247fe0 <pthread_mutex_lock@GLIBC_2.2.5>
   2a410:	4c 8b 73 28          	mov    0x28(%rbx),%r14
   2a414:	48 c7 43 28 01 00 00 	movq   $0x1,0x28(%rbx)
   2a41b:	00 
   2a41c:	48 89 df             	mov    %rbx,%rdi
   2a41f:	ff 15 d3 da 21 00    	callq  *0x21dad3(%rip)        # 247ef8 <pthread_mutex_unlock@GLIBC_2.2.5>
   2a425:	49 8b 06             	mov    (%r14),%rax
   2a428:	f0 48 83 28 01       	lock subq $0x1,(%rax)
   2a42d:	75 08                	jne    2a437 <_ZN4core3ops8function6FnOnce40call_once$u7b$$u7b$vtable.shim$u7d$$u7d$17hd7640a135a6d7bd9E+0x37>
   2a42f:	4c 89 f7             	mov    %r14,%rdi
   2a432:	e8 89 ff ff ff       	callq  2a3c0 <_ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17h262846a451db8492E>
   2a437:	4c 89 f7             	mov    %r14,%rdi
   2a43a:	48 83 c4 08          	add    $0x8,%rsp
   2a43e:	5b                   	pop    %rbx
   2a43f:	41 5e                	pop    %r14
   2a441:	e9 ca af fd ff       	jmpq   5410 <__rust_dealloc>
   2a446:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2a44d:	00 00 00 

000000000002a450 <_ZN4core3ptr13drop_in_place17h1a1cc1669522ab96E>:
   2a450:	48 8b 07             	mov    (%rdi),%rax
   2a453:	80 7f 08 00          	cmpb   $0x0,0x8(%rdi)
   2a457:	74 09                	je     2a462 <_ZN4core3ptr13drop_in_place17h1a1cc1669522ab96E+0x12>
   2a459:	48 8b 38             	mov    (%rax),%rdi
   2a45c:	ff 25 96 da 21 00    	jmpq   *0x21da96(%rip)        # 247ef8 <pthread_mutex_unlock@GLIBC_2.2.5>
   2a462:	64 48 83 3c 25 a0 ff 	cmpq   $0x1,%fs:0xffffffffffffffa0
   2a469:	ff ff 01 
   2a46c:	75 1c                	jne    2a48a <_ZN4core3ptr13drop_in_place17h1a1cc1669522ab96E+0x3a>
   2a46e:	64 48 83 3c 25 a8 ff 	cmpq   $0x0,%fs:0xffffffffffffffa8
   2a475:	ff ff 00 
   2a478:	74 df                	je     2a459 <_ZN4core3ptr13drop_in_place17h1a1cc1669522ab96E+0x9>
   2a47a:	c6 40 18 01          	movb   $0x1,0x18(%rax)
   2a47e:	48 8b 07             	mov    (%rdi),%rax
   2a481:	48 8b 38             	mov    (%rax),%rdi
   2a484:	ff 25 6e da 21 00    	jmpq   *0x21da6e(%rip)        # 247ef8 <pthread_mutex_unlock@GLIBC_2.2.5>
   2a48a:	b9 01 00 00 00       	mov    $0x1,%ecx
   2a48f:	66 48 0f 6e c1       	movq   %rcx,%xmm0
   2a494:	64 66 0f 7f 04 25 a0 	movdqa %xmm0,%fs:0xffffffffffffffa0
   2a49b:	ff ff ff 
   2a49e:	48 8b 38             	mov    (%rax),%rdi
   2a4a1:	ff 25 51 da 21 00    	jmpq   *0x21da51(%rip)        # 247ef8 <pthread_mutex_unlock@GLIBC_2.2.5>
   2a4a7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   2a4ae:	00 00 

000000000002a4b0 <_ZN57_$LT$std..io..stdio..Stderr$u20$as$u20$std..io..Write$GT$9write_fmt17haefc41f8025b9fecE>:
   2a4b0:	41 57                	push   %r15
   2a4b2:	41 56                	push   %r14
   2a4b4:	41 54                	push   %r12
   2a4b6:	53                   	push   %rbx
   2a4b7:	48 83 ec 68          	sub    $0x68,%rsp
   2a4bb:	49 89 d7             	mov    %rdx,%r15
   2a4be:	48 89 f3             	mov    %rsi,%rbx
   2a4c1:	49 89 fe             	mov    %rdi,%r14
   2a4c4:	4c 8d 66 10          	lea    0x10(%rsi),%r12
   2a4c8:	48 8b 7e 10          	mov    0x10(%rsi),%rdi
   2a4cc:	ff 15 0e db 21 00    	callq  *0x21db0e(%rip)        # 247fe0 <pthread_mutex_lock@GLIBC_2.2.5>
   2a4d2:	64 48 83 3c 25 a0 ff 	cmpq   $0x1,%fs:0xffffffffffffffa0
   2a4d9:	ff ff 01 
   2a4dc:	75 0b                	jne    2a4e9 <_ZN57_$LT$std..io..stdio..Stderr$u20$as$u20$std..io..Write$GT$9write_fmt17haefc41f8025b9fecE+0x39>
   2a4de:	64 48 8b 04 25 a8 ff 	mov    %fs:0xffffffffffffffa8,%rax
   2a4e5:	ff ff 
   2a4e7:	eb 16                	jmp    2a4ff <_ZN57_$LT$std..io..stdio..Stderr$u20$as$u20$std..io..Write$GT$9write_fmt17haefc41f8025b9fecE+0x4f>
   2a4e9:	b8 01 00 00 00       	mov    $0x1,%eax
   2a4ee:	66 48 0f 6e c0       	movq   %rax,%xmm0
   2a4f3:	64 66 0f 7f 04 25 a0 	movdqa %xmm0,%fs:0xffffffffffffffa0
   2a4fa:	ff ff ff 
   2a4fd:	31 c0                	xor    %eax,%eax
   2a4ff:	64 48 89 04 25 a8 ff 	mov    %rax,%fs:0xffffffffffffffa8
   2a506:	ff ff 
   2a508:	48 85 c0             	test   %rax,%rax
   2a50b:	8a 43 28             	mov    0x28(%rbx),%al
   2a50e:	4c 89 64 24 20       	mov    %r12,0x20(%rsp)
   2a513:	0f 95 44 24 28       	setne  0x28(%rsp)
   2a518:	48 8d 44 24 20       	lea    0x20(%rsp),%rax
   2a51d:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   2a522:	c6 44 24 10 03       	movb   $0x3,0x10(%rsp)
   2a527:	f3 41 0f 6f 07       	movdqu (%r15),%xmm0
   2a52c:	41 0f 10 4f 10       	movups 0x10(%r15),%xmm1
   2a531:	41 0f 10 57 20       	movups 0x20(%r15),%xmm2
   2a536:	0f 29 54 24 50       	movaps %xmm2,0x50(%rsp)
   2a53b:	0f 29 4c 24 40       	movaps %xmm1,0x40(%rsp)
   2a540:	66 0f 7f 44 24 30    	movdqa %xmm0,0x30(%rsp)
   2a546:	48 8d 35 7b d1 21 00 	lea    0x21d17b(%rip),%rsi        # 2476c8 <__init_array_end+0x16b8>
   2a54d:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   2a552:	48 8d 54 24 30       	lea    0x30(%rsp),%rdx
   2a557:	e8 d4 e4 fd ff       	callq  8a30 <_ZN4core3fmt5write17h0db54a985afb558eE>
   2a55c:	84 c0                	test   %al,%al
   2a55e:	0f 84 d6 00 00 00    	je     2a63a <_ZN57_$LT$std..io..stdio..Stderr$u20$as$u20$std..io..Write$GT$9write_fmt17haefc41f8025b9fecE+0x18a>
   2a564:	80 7c 24 10 03       	cmpb   $0x3,0x10(%rsp)
   2a569:	0f 85 09 01 00 00    	jne    2a678 <_ZN57_$LT$std..io..stdio..Stderr$u20$as$u20$std..io..Write$GT$9write_fmt17haefc41f8025b9fecE+0x1c8>
   2a56f:	bf 0f 00 00 00       	mov    $0xf,%edi
   2a574:	be 01 00 00 00       	mov    $0x1,%esi
   2a579:	e8 42 ae fd ff       	callq  53c0 <__rust_alloc>
   2a57e:	48 85 c0             	test   %rax,%rax
   2a581:	0f 84 84 01 00 00    	je     2a70b <_ZN57_$LT$std..io..stdio..Stderr$u20$as$u20$std..io..Write$GT$9write_fmt17haefc41f8025b9fecE+0x25b>
   2a587:	49 89 c7             	mov    %rax,%r15
   2a58a:	48 8b 05 54 2f 01 00 	mov    0x12f54(%rip),%rax        # 3d4e5 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0xb85>
   2a591:	49 89 47 07          	mov    %rax,0x7(%r15)
   2a595:	48 8b 05 42 2f 01 00 	mov    0x12f42(%rip),%rax        # 3d4de <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0xb7e>
   2a59c:	49 89 07             	mov    %rax,(%r15)
   2a59f:	bf 18 00 00 00       	mov    $0x18,%edi
   2a5a4:	be 08 00 00 00       	mov    $0x8,%esi
   2a5a9:	e8 12 ae fd ff       	callq  53c0 <__rust_alloc>
   2a5ae:	48 85 c0             	test   %rax,%rax
   2a5b1:	0f 84 43 01 00 00    	je     2a6fa <_ZN57_$LT$std..io..stdio..Stderr$u20$as$u20$std..io..Write$GT$9write_fmt17haefc41f8025b9fecE+0x24a>
   2a5b7:	48 89 c3             	mov    %rax,%rbx
   2a5ba:	4c 89 38             	mov    %r15,(%rax)
   2a5bd:	66 0f 6f 05 bb fe 00 	movdqa 0xfebb(%rip),%xmm0        # 3a480 <_fini+0x13c>
   2a5c4:	00 
   2a5c5:	f3 0f 7f 40 08       	movdqu %xmm0,0x8(%rax)
   2a5ca:	bf 18 00 00 00       	mov    $0x18,%edi
   2a5cf:	be 08 00 00 00       	mov    $0x8,%esi
   2a5d4:	e8 e7 ad fd ff       	callq  53c0 <__rust_alloc>
   2a5d9:	48 85 c0             	test   %rax,%rax
   2a5dc:	0f 84 18 01 00 00    	je     2a6fa <_ZN57_$LT$std..io..stdio..Stderr$u20$as$u20$std..io..Write$GT$9write_fmt17haefc41f8025b9fecE+0x24a>
   2a5e2:	48 89 18             	mov    %rbx,(%rax)
   2a5e5:	48 8d 0d f4 ca 21 00 	lea    0x21caf4(%rip),%rcx        # 2470e0 <__init_array_end+0x10d0>
   2a5ec:	48 89 48 08          	mov    %rcx,0x8(%rax)
   2a5f0:	c6 40 10 10          	movb   $0x10,0x10(%rax)
   2a5f4:	8b 4c 24 30          	mov    0x30(%rsp),%ecx
   2a5f8:	8b 54 24 33          	mov    0x33(%rsp),%edx
   2a5fc:	89 50 14             	mov    %edx,0x14(%rax)
   2a5ff:	89 48 11             	mov    %ecx,0x11(%rax)
   2a602:	8b 4c 24 30          	mov    0x30(%rsp),%ecx
   2a606:	8b 54 24 33          	mov    0x33(%rsp),%edx
   2a60a:	89 0c 24             	mov    %ecx,(%rsp)
   2a60d:	89 54 24 03          	mov    %edx,0x3(%rsp)
   2a611:	41 c6 06 02          	movb   $0x2,(%r14)
   2a615:	8b 0c 24             	mov    (%rsp),%ecx
   2a618:	8b 54 24 03          	mov    0x3(%rsp),%edx
   2a61c:	41 89 4e 01          	mov    %ecx,0x1(%r14)
   2a620:	41 89 56 04          	mov    %edx,0x4(%r14)
   2a624:	49 89 46 08          	mov    %rax,0x8(%r14)
   2a628:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
   2a62d:	80 7c 24 28 00       	cmpb   $0x0,0x28(%rsp)
   2a632:	0f 85 ad 00 00 00    	jne    2a6e5 <_ZN57_$LT$std..io..stdio..Stderr$u20$as$u20$std..io..Write$GT$9write_fmt17haefc41f8025b9fecE+0x235>
   2a638:	eb 20                	jmp    2a65a <_ZN57_$LT$std..io..stdio..Stderr$u20$as$u20$std..io..Write$GT$9write_fmt17haefc41f8025b9fecE+0x1aa>
   2a63a:	41 c6 06 03          	movb   $0x3,(%r14)
   2a63e:	8a 44 24 10          	mov    0x10(%rsp),%al
   2a642:	3c 03                	cmp    $0x3,%al
   2a644:	77 64                	ja     2a6aa <_ZN57_$LT$std..io..stdio..Stderr$u20$as$u20$std..io..Write$GT$9write_fmt17haefc41f8025b9fecE+0x1fa>
   2a646:	3c 02                	cmp    $0x2,%al
   2a648:	74 60                	je     2a6aa <_ZN57_$LT$std..io..stdio..Stderr$u20$as$u20$std..io..Write$GT$9write_fmt17haefc41f8025b9fecE+0x1fa>
   2a64a:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
   2a64f:	80 7c 24 28 00       	cmpb   $0x0,0x28(%rsp)
   2a654:	0f 85 8b 00 00 00    	jne    2a6e5 <_ZN57_$LT$std..io..stdio..Stderr$u20$as$u20$std..io..Write$GT$9write_fmt17haefc41f8025b9fecE+0x235>
   2a65a:	64 48 83 3c 25 a0 ff 	cmpq   $0x1,%fs:0xffffffffffffffa0
   2a661:	ff ff 01 
   2a664:	75 2e                	jne    2a694 <_ZN57_$LT$std..io..stdio..Stderr$u20$as$u20$std..io..Write$GT$9write_fmt17haefc41f8025b9fecE+0x1e4>
   2a666:	64 48 83 3c 25 a8 ff 	cmpq   $0x0,%fs:0xffffffffffffffa8
   2a66d:	ff ff 00 
   2a670:	74 73                	je     2a6e5 <_ZN57_$LT$std..io..stdio..Stderr$u20$as$u20$std..io..Write$GT$9write_fmt17haefc41f8025b9fecE+0x235>
   2a672:	c6 40 18 01          	movb   $0x1,0x18(%rax)
   2a676:	eb 6d                	jmp    2a6e5 <_ZN57_$LT$std..io..stdio..Stderr$u20$as$u20$std..io..Write$GT$9write_fmt17haefc41f8025b9fecE+0x235>
   2a678:	48 8d 44 24 10       	lea    0x10(%rsp),%rax
   2a67d:	f3 0f 6f 00          	movdqu (%rax),%xmm0
   2a681:	f3 41 0f 7f 06       	movdqu %xmm0,(%r14)
   2a686:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
   2a68b:	80 7c 24 28 00       	cmpb   $0x0,0x28(%rsp)
   2a690:	75 53                	jne    2a6e5 <_ZN57_$LT$std..io..stdio..Stderr$u20$as$u20$std..io..Write$GT$9write_fmt17haefc41f8025b9fecE+0x235>
   2a692:	eb c6                	jmp    2a65a <_ZN57_$LT$std..io..stdio..Stderr$u20$as$u20$std..io..Write$GT$9write_fmt17haefc41f8025b9fecE+0x1aa>
   2a694:	b9 01 00 00 00       	mov    $0x1,%ecx
   2a699:	66 48 0f 6e c1       	movq   %rcx,%xmm0
   2a69e:	64 66 0f 7f 04 25 a0 	movdqa %xmm0,%fs:0xffffffffffffffa0
   2a6a5:	ff ff ff 
   2a6a8:	eb 3b                	jmp    2a6e5 <_ZN57_$LT$std..io..stdio..Stderr$u20$as$u20$std..io..Write$GT$9write_fmt17haefc41f8025b9fecE+0x235>
   2a6aa:	48 8b 5c 24 18       	mov    0x18(%rsp),%rbx
   2a6af:	48 8b 3b             	mov    (%rbx),%rdi
   2a6b2:	48 8b 43 08          	mov    0x8(%rbx),%rax
   2a6b6:	ff 10                	callq  *(%rax)
   2a6b8:	48 8b 43 08          	mov    0x8(%rbx),%rax
   2a6bc:	48 83 78 08 00       	cmpq   $0x0,0x8(%rax)
   2a6c1:	74 08                	je     2a6cb <_ZN57_$LT$std..io..stdio..Stderr$u20$as$u20$std..io..Write$GT$9write_fmt17haefc41f8025b9fecE+0x21b>
   2a6c3:	48 8b 3b             	mov    (%rbx),%rdi
   2a6c6:	e8 45 ad fd ff       	callq  5410 <__rust_dealloc>
   2a6cb:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
   2a6d0:	e8 3b ad fd ff       	callq  5410 <__rust_dealloc>
   2a6d5:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
   2a6da:	80 7c 24 28 00       	cmpb   $0x0,0x28(%rsp)
   2a6df:	0f 84 75 ff ff ff    	je     2a65a <_ZN57_$LT$std..io..stdio..Stderr$u20$as$u20$std..io..Write$GT$9write_fmt17haefc41f8025b9fecE+0x1aa>
   2a6e5:	48 8b 38             	mov    (%rax),%rdi
   2a6e8:	ff 15 0a d8 21 00    	callq  *0x21d80a(%rip)        # 247ef8 <pthread_mutex_unlock@GLIBC_2.2.5>
   2a6ee:	48 83 c4 68          	add    $0x68,%rsp
   2a6f2:	5b                   	pop    %rbx
   2a6f3:	41 5c                	pop    %r12
   2a6f5:	41 5e                	pop    %r14
   2a6f7:	41 5f                	pop    %r15
   2a6f9:	c3                   	retq   
   2a6fa:	bf 18 00 00 00       	mov    $0x18,%edi
   2a6ff:	be 08 00 00 00       	mov    $0x8,%esi
   2a704:	e8 b7 ad fd ff       	callq  54c0 <_ZN5alloc5alloc18handle_alloc_error17hf7bb8682f6c8b1d7E>
   2a709:	0f 0b                	ud2    
   2a70b:	bf 0f 00 00 00       	mov    $0xf,%edi
   2a710:	be 01 00 00 00       	mov    $0x1,%esi
   2a715:	e8 a6 ad fd ff       	callq  54c0 <_ZN5alloc5alloc18handle_alloc_error17hf7bb8682f6c8b1d7E>
   2a71a:	0f 0b                	ud2    
   2a71c:	49 89 c6             	mov    %rax,%r14
   2a71f:	48 8b 3b             	mov    (%rbx),%rdi
   2a722:	48 8b 73 08          	mov    0x8(%rbx),%rsi
   2a726:	e8 e5 a1 ff ff       	callq  24910 <_ZN5alloc5alloc8box_free17h3741427eaa5804e6E>
   2a72b:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
   2a730:	e8 fb a6 ff ff       	callq  24e30 <_ZN5alloc5alloc8box_free17h20e506aa40102463E>
   2a735:	eb 0d                	jmp    2a744 <_ZN57_$LT$std..io..stdio..Stderr$u20$as$u20$std..io..Write$GT$9write_fmt17haefc41f8025b9fecE+0x294>
   2a737:	49 89 c6             	mov    %rax,%r14
   2a73a:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   2a73f:	e8 fc a6 ff ff       	callq  24e40 <_ZN4core3ptr13drop_in_place17h498b8d0149e9a9baE>
   2a744:	48 8d 7c 24 20       	lea    0x20(%rsp),%rdi
   2a749:	e8 02 fd ff ff       	callq  2a450 <_ZN4core3ptr13drop_in_place17h1a1cc1669522ab96E>
   2a74e:	4c 89 f7             	mov    %r14,%rdi
   2a751:	e8 4a 99 fd ff       	callq  40a0 <_Unwind_Resume@plt>
   2a756:	0f 0b                	ud2    
   2a758:	49 89 c6             	mov    %rax,%r14
   2a75b:	eb e7                	jmp    2a744 <_ZN57_$LT$std..io..stdio..Stderr$u20$as$u20$std..io..Write$GT$9write_fmt17haefc41f8025b9fecE+0x294>
   2a75d:	0f 1f 00             	nopl   (%rax)

000000000002a760 <_ZN80_$LT$std..io..Write..write_fmt..Adaptor$LT$T$GT$$u20$as$u20$core..fmt..Write$GT$9write_str17hd89d7abdb5e87550E>:
   2a760:	55                   	push   %rbp
   2a761:	41 57                	push   %r15
   2a763:	41 56                	push   %r14
   2a765:	41 55                	push   %r13
   2a767:	41 54                	push   %r12
   2a769:	53                   	push   %rbx
   2a76a:	48 83 ec 38          	sub    $0x38,%rsp
   2a76e:	48 85 d2             	test   %rdx,%rdx
   2a771:	0f 84 90 01 00 00    	je     2a907 <_ZN80_$LT$std..io..Write..write_fmt..Adaptor$LT$T$GT$$u20$as$u20$core..fmt..Write$GT$9write_str17hd89d7abdb5e87550E+0x1a7>
   2a777:	49 89 d4             	mov    %rdx,%r12
   2a77a:	49 89 f7             	mov    %rsi,%r15
   2a77d:	49 bd ff ff ff ff ff 	movabs $0x7fffffffffffffff,%r13
   2a784:	ff ff 7f 
   2a787:	48 89 7c 24 30       	mov    %rdi,0x30(%rsp)
   2a78c:	48 8b 2f             	mov    (%rdi),%rbp
   2a78f:	4c 8b 75 00          	mov    0x0(%rbp),%r14
   2a793:	49 83 7e 08 00       	cmpq   $0x0,0x8(%r14)
   2a798:	74 26                	je     2a7c0 <_ZN80_$LT$std..io..Write..write_fmt..Adaptor$LT$T$GT$$u20$as$u20$core..fmt..Write$GT$9write_str17hd89d7abdb5e87550E+0x60>
   2a79a:	e9 9a 02 00 00       	jmpq   2aa39 <_ZN80_$LT$std..io..Write..write_fmt..Adaptor$LT$T$GT$$u20$as$u20$core..fmt..Write$GT$9write_str17hd89d7abdb5e87550E+0x2d9>
   2a79f:	90                   	nop
   2a7a0:	48 89 df             	mov    %rbx,%rdi
   2a7a3:	e8 68 ac fd ff       	callq  5410 <__rust_dealloc>
   2a7a8:	4d 85 e4             	test   %r12,%r12
   2a7ab:	0f 84 56 01 00 00    	je     2a907 <_ZN80_$LT$std..io..Write..write_fmt..Adaptor$LT$T$GT$$u20$as$u20$core..fmt..Write$GT$9write_str17hd89d7abdb5e87550E+0x1a7>
   2a7b1:	4c 8b 75 00          	mov    0x0(%rbp),%r14
   2a7b5:	49 83 7e 08 00       	cmpq   $0x0,0x8(%r14)
   2a7ba:	0f 85 79 02 00 00    	jne    2aa39 <_ZN80_$LT$std..io..Write..write_fmt..Adaptor$LT$T$GT$$u20$as$u20$core..fmt..Write$GT$9write_str17hd89d7abdb5e87550E+0x2d9>
   2a7c0:	49 c7 46 08 ff ff ff 	movq   $0xffffffffffffffff,0x8(%r14)
   2a7c7:	ff 
   2a7c8:	41 80 7e 10 01       	cmpb   $0x1,0x10(%r14)
   2a7cd:	0f 85 7d 00 00 00    	jne    2a850 <_ZN80_$LT$std..io..Write..write_fmt..Adaptor$LT$T$GT$$u20$as$u20$core..fmt..Write$GT$9write_str17hd89d7abdb5e87550E+0xf0>
   2a7d3:	4c 89 64 24 18       	mov    %r12,0x18(%rsp)
   2a7d8:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
   2a7df:	00 00 
   2a7e1:	4c 89 e3             	mov    %r12,%rbx
   2a7e4:	31 c0                	xor    %eax,%eax
   2a7e6:	49 83 46 08 01       	addq   $0x1,0x8(%r14)
   2a7eb:	48 85 c0             	test   %rax,%rax
   2a7ee:	0f 84 b3 00 00 00    	je     2a8a7 <_ZN80_$LT$std..io..Write..write_fmt..Adaptor$LT$T$GT$$u20$as$u20$core..fmt..Write$GT$9write_str17hd89d7abdb5e87550E+0x147>
   2a7f4:	84 db                	test   %bl,%bl
   2a7f6:	0f 84 de 00 00 00    	je     2a8da <_ZN80_$LT$std..io..Write..write_fmt..Adaptor$LT$T$GT$$u20$as$u20$core..fmt..Write$GT$9write_str17hd89d7abdb5e87550E+0x17a>
   2a7fc:	80 fb 01             	cmp    $0x1,%bl
   2a7ff:	0f 84 c4 00 00 00    	je     2a8c9 <_ZN80_$LT$std..io..Write..write_fmt..Adaptor$LT$T$GT$$u20$as$u20$core..fmt..Write$GT$9write_str17hd89d7abdb5e87550E+0x169>
   2a805:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
   2a80a:	0f b6 40 10          	movzbl 0x10(%rax),%eax
   2a80e:	3c 0f                	cmp    $0xf,%al
   2a810:	0f 85 d8 00 00 00    	jne    2a8ee <_ZN80_$LT$std..io..Write..write_fmt..Adaptor$LT$T$GT$$u20$as$u20$core..fmt..Write$GT$9write_str17hd89d7abdb5e87550E+0x18e>
   2a816:	80 fb 02             	cmp    $0x2,%bl
   2a819:	72 8d                	jb     2a7a8 <_ZN80_$LT$std..io..Write..write_fmt..Adaptor$LT$T$GT$$u20$as$u20$core..fmt..Write$GT$9write_str17hd89d7abdb5e87550E+0x48>
   2a81b:	48 8b 5c 24 20       	mov    0x20(%rsp),%rbx
   2a820:	48 8b 3b             	mov    (%rbx),%rdi
   2a823:	48 8b 43 08          	mov    0x8(%rbx),%rax
   2a827:	ff 10                	callq  *(%rax)
   2a829:	48 8b 43 08          	mov    0x8(%rbx),%rax
   2a82d:	48 83 78 08 00       	cmpq   $0x0,0x8(%rax)
   2a832:	0f 84 68 ff ff ff    	je     2a7a0 <_ZN80_$LT$std..io..Write..write_fmt..Adaptor$LT$T$GT$$u20$as$u20$core..fmt..Write$GT$9write_str17hd89d7abdb5e87550E+0x40>
   2a838:	48 8b 3b             	mov    (%rbx),%rdi
   2a83b:	e8 d0 ab fd ff       	callq  5410 <__rust_dealloc>
   2a840:	e9 5b ff ff ff       	jmpq   2a7a0 <_ZN80_$LT$std..io..Write..write_fmt..Adaptor$LT$T$GT$$u20$as$u20$core..fmt..Write$GT$9write_str17hd89d7abdb5e87550E+0x40>
   2a845:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2a84c:	00 00 00 
   2a84f:	90                   	nop
   2a850:	4d 39 ec             	cmp    %r13,%r12
   2a853:	4c 89 ea             	mov    %r13,%rdx
   2a856:	49 0f 42 d4          	cmovb  %r12,%rdx
   2a85a:	bf 02 00 00 00       	mov    $0x2,%edi
   2a85f:	4c 89 fe             	mov    %r15,%rsi
   2a862:	ff 15 90 d5 21 00    	callq  *0x21d590(%rip)        # 247df8 <write@GLIBC_2.2.5>
   2a868:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
   2a86c:	74 07                	je     2a875 <_ZN80_$LT$std..io..Write..write_fmt..Adaptor$LT$T$GT$$u20$as$u20$core..fmt..Write$GT$9write_str17hd89d7abdb5e87550E+0x115>
   2a86e:	48 89 c3             	mov    %rax,%rbx
   2a871:	31 c0                	xor    %eax,%eax
   2a873:	eb 1a                	jmp    2a88f <_ZN80_$LT$std..io..Write..write_fmt..Adaptor$LT$T$GT$$u20$as$u20$core..fmt..Write$GT$9write_str17hd89d7abdb5e87550E+0x12f>
   2a875:	ff 15 25 d5 21 00    	callq  *0x21d525(%rip)        # 247da0 <__errno_location@GLIBC_2.2.5>
   2a87b:	8b 18                	mov    (%rax),%ebx
   2a87d:	83 fb 09             	cmp    $0x9,%ebx
   2a880:	0f 84 4d ff ff ff    	je     2a7d3 <_ZN80_$LT$std..io..Write..write_fmt..Adaptor$LT$T$GT$$u20$as$u20$core..fmt..Write$GT$9write_str17hd89d7abdb5e87550E+0x73>
   2a886:	48 c1 e3 20          	shl    $0x20,%rbx
   2a88a:	b8 01 00 00 00       	mov    $0x1,%eax
   2a88f:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   2a894:	48 89 5c 24 18       	mov    %rbx,0x18(%rsp)
   2a899:	49 83 46 08 01       	addq   $0x1,0x8(%r14)
   2a89e:	48 85 c0             	test   %rax,%rax
   2a8a1:	0f 85 4d ff ff ff    	jne    2a7f4 <_ZN80_$LT$std..io..Write..write_fmt..Adaptor$LT$T$GT$$u20$as$u20$core..fmt..Write$GT$9write_str17hd89d7abdb5e87550E+0x94>
   2a8a7:	48 85 db             	test   %rbx,%rbx
   2a8aa:	74 62                	je     2a90e <_ZN80_$LT$std..io..Write..write_fmt..Adaptor$LT$T$GT$$u20$as$u20$core..fmt..Write$GT$9write_str17hd89d7abdb5e87550E+0x1ae>
   2a8ac:	4c 89 e0             	mov    %r12,%rax
   2a8af:	48 29 d8             	sub    %rbx,%rax
   2a8b2:	0f 82 a7 01 00 00    	jb     2aa5f <_ZN80_$LT$std..io..Write..write_fmt..Adaptor$LT$T$GT$$u20$as$u20$core..fmt..Write$GT$9write_str17hd89d7abdb5e87550E+0x2ff>
   2a8b8:	49 01 df             	add    %rbx,%r15
   2a8bb:	49 89 c4             	mov    %rax,%r12
   2a8be:	4d 85 e4             	test   %r12,%r12
   2a8c1:	0f 85 ea fe ff ff    	jne    2a7b1 <_ZN80_$LT$std..io..Write..write_fmt..Adaptor$LT$T$GT$$u20$as$u20$core..fmt..Write$GT$9write_str17hd89d7abdb5e87550E+0x51>
   2a8c7:	eb 3e                	jmp    2a907 <_ZN80_$LT$std..io..Write..write_fmt..Adaptor$LT$T$GT$$u20$as$u20$core..fmt..Write$GT$9write_str17hd89d7abdb5e87550E+0x1a7>
   2a8c9:	48 89 d8             	mov    %rbx,%rax
   2a8cc:	48 c1 e8 08          	shr    $0x8,%rax
   2a8d0:	3c 0f                	cmp    $0xf,%al
   2a8d2:	0f 84 3e ff ff ff    	je     2a816 <_ZN80_$LT$std..io..Write..write_fmt..Adaptor$LT$T$GT$$u20$as$u20$core..fmt..Write$GT$9write_str17hd89d7abdb5e87550E+0xb6>
   2a8d8:	eb 14                	jmp    2a8ee <_ZN80_$LT$std..io..Write..write_fmt..Adaptor$LT$T$GT$$u20$as$u20$core..fmt..Write$GT$9write_str17hd89d7abdb5e87550E+0x18e>
   2a8da:	48 89 df             	mov    %rbx,%rdi
   2a8dd:	48 c1 ef 20          	shr    $0x20,%rdi
   2a8e1:	e8 5a a9 ff ff       	callq  25240 <_ZN3std3sys4unix17decode_error_kind17h568cc869969c08a6E>
   2a8e6:	3c 0f                	cmp    $0xf,%al
   2a8e8:	0f 84 28 ff ff ff    	je     2a816 <_ZN80_$LT$std..io..Write..write_fmt..Adaptor$LT$T$GT$$u20$as$u20$core..fmt..Write$GT$9write_str17hd89d7abdb5e87550E+0xb6>
   2a8ee:	8b 44 24 19          	mov    0x19(%rsp),%eax
   2a8f2:	8b 4c 24 1c          	mov    0x1c(%rsp),%ecx
   2a8f6:	89 4c 24 0b          	mov    %ecx,0xb(%rsp)
   2a8fa:	89 44 24 08          	mov    %eax,0x8(%rsp)
   2a8fe:	80 fb 03             	cmp    $0x3,%bl
   2a901:	0f 85 b7 00 00 00    	jne    2a9be <_ZN80_$LT$std..io..Write..write_fmt..Adaptor$LT$T$GT$$u20$as$u20$core..fmt..Write$GT$9write_str17hd89d7abdb5e87550E+0x25e>
   2a907:	31 c0                	xor    %eax,%eax
   2a909:	e9 1c 01 00 00       	jmpq   2aa2a <_ZN80_$LT$std..io..Write..write_fmt..Adaptor$LT$T$GT$$u20$as$u20$core..fmt..Write$GT$9write_str17hd89d7abdb5e87550E+0x2ca>
   2a90e:	bf 1c 00 00 00       	mov    $0x1c,%edi
   2a913:	be 01 00 00 00       	mov    $0x1,%esi
   2a918:	e8 a3 aa fd ff       	callq  53c0 <__rust_alloc>
   2a91d:	48 85 c0             	test   %rax,%rax
   2a920:	0f 84 57 01 00 00    	je     2aa7d <_ZN80_$LT$std..io..Write..write_fmt..Adaptor$LT$T$GT$$u20$as$u20$core..fmt..Write$GT$9write_str17hd89d7abdb5e87550E+0x31d>
   2a926:	49 89 c7             	mov    %rax,%r15
   2a929:	0f 10 05 c9 2b 01 00 	movups 0x12bc9(%rip),%xmm0        # 3d4f9 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0xb99>
   2a930:	0f 11 40 0c          	movups %xmm0,0xc(%rax)
   2a934:	0f 10 05 b2 2b 01 00 	movups 0x12bb2(%rip),%xmm0        # 3d4ed <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0xb8d>
   2a93b:	0f 11 00             	movups %xmm0,(%rax)
   2a93e:	bf 18 00 00 00       	mov    $0x18,%edi
   2a943:	be 08 00 00 00       	mov    $0x8,%esi
   2a948:	e8 73 aa fd ff       	callq  53c0 <__rust_alloc>
   2a94d:	48 85 c0             	test   %rax,%rax
   2a950:	48 8b 6c 24 30       	mov    0x30(%rsp),%rbp
   2a955:	0f 84 11 01 00 00    	je     2aa6c <_ZN80_$LT$std..io..Write..write_fmt..Adaptor$LT$T$GT$$u20$as$u20$core..fmt..Write$GT$9write_str17hd89d7abdb5e87550E+0x30c>
   2a95b:	48 89 c3             	mov    %rax,%rbx
   2a95e:	4c 89 38             	mov    %r15,(%rax)
   2a961:	0f 28 05 08 fb 00 00 	movaps 0xfb08(%rip),%xmm0        # 3a470 <_fini+0x12c>
   2a968:	0f 11 40 08          	movups %xmm0,0x8(%rax)
   2a96c:	bf 18 00 00 00       	mov    $0x18,%edi
   2a971:	be 08 00 00 00       	mov    $0x8,%esi
   2a976:	e8 45 aa fd ff       	callq  53c0 <__rust_alloc>
   2a97b:	48 85 c0             	test   %rax,%rax
   2a97e:	0f 84 e8 00 00 00    	je     2aa6c <_ZN80_$LT$std..io..Write..write_fmt..Adaptor$LT$T$GT$$u20$as$u20$core..fmt..Write$GT$9write_str17hd89d7abdb5e87550E+0x30c>
   2a984:	49 89 c7             	mov    %rax,%r15
   2a987:	48 89 18             	mov    %rbx,(%rax)
   2a98a:	48 8d 05 4f c7 21 00 	lea    0x21c74f(%rip),%rax        # 2470e0 <__init_array_end+0x10d0>
   2a991:	49 89 47 08          	mov    %rax,0x8(%r15)
   2a995:	41 c6 47 10 0e       	movb   $0xe,0x10(%r15)
   2a99a:	8b 44 24 28          	mov    0x28(%rsp),%eax
   2a99e:	8b 4c 24 2b          	mov    0x2b(%rsp),%ecx
   2a9a2:	41 89 4f 14          	mov    %ecx,0x14(%r15)
   2a9a6:	41 89 47 11          	mov    %eax,0x11(%r15)
   2a9aa:	8b 44 24 28          	mov    0x28(%rsp),%eax
   2a9ae:	8b 4c 24 2b          	mov    0x2b(%rsp),%ecx
   2a9b2:	89 44 24 08          	mov    %eax,0x8(%rsp)
   2a9b6:	89 4c 24 0b          	mov    %ecx,0xb(%rsp)
   2a9ba:	b3 02                	mov    $0x2,%bl
   2a9bc:	eb 0a                	jmp    2a9c8 <_ZN80_$LT$std..io..Write..write_fmt..Adaptor$LT$T$GT$$u20$as$u20$core..fmt..Write$GT$9write_str17hd89d7abdb5e87550E+0x268>
   2a9be:	4c 8b 7c 24 20       	mov    0x20(%rsp),%r15
   2a9c3:	48 8b 6c 24 30       	mov    0x30(%rsp),%rbp
   2a9c8:	8b 44 24 08          	mov    0x8(%rsp),%eax
   2a9cc:	8b 4c 24 0b          	mov    0xb(%rsp),%ecx
   2a9d0:	89 4c 24 13          	mov    %ecx,0x13(%rsp)
   2a9d4:	89 44 24 10          	mov    %eax,0x10(%rsp)
   2a9d8:	8a 45 08             	mov    0x8(%rbp),%al
   2a9db:	3c 03                	cmp    $0x3,%al
   2a9dd:	77 04                	ja     2a9e3 <_ZN80_$LT$std..io..Write..write_fmt..Adaptor$LT$T$GT$$u20$as$u20$core..fmt..Write$GT$9write_str17hd89d7abdb5e87550E+0x283>
   2a9df:	3c 02                	cmp    $0x2,%al
   2a9e1:	75 30                	jne    2aa13 <_ZN80_$LT$std..io..Write..write_fmt..Adaptor$LT$T$GT$$u20$as$u20$core..fmt..Write$GT$9write_str17hd89d7abdb5e87550E+0x2b3>
   2a9e3:	48 8b 6d 10          	mov    0x10(%rbp),%rbp
   2a9e7:	48 8b 7d 00          	mov    0x0(%rbp),%rdi
   2a9eb:	48 8b 45 08          	mov    0x8(%rbp),%rax
   2a9ef:	ff 10                	callq  *(%rax)
   2a9f1:	48 8b 45 08          	mov    0x8(%rbp),%rax
   2a9f5:	48 83 78 08 00       	cmpq   $0x0,0x8(%rax)
   2a9fa:	74 09                	je     2aa05 <_ZN80_$LT$std..io..Write..write_fmt..Adaptor$LT$T$GT$$u20$as$u20$core..fmt..Write$GT$9write_str17hd89d7abdb5e87550E+0x2a5>
   2a9fc:	48 8b 7d 00          	mov    0x0(%rbp),%rdi
   2aa00:	e8 0b aa fd ff       	callq  5410 <__rust_dealloc>
   2aa05:	48 8b 6c 24 30       	mov    0x30(%rsp),%rbp
   2aa0a:	48 8b 7d 10          	mov    0x10(%rbp),%rdi
   2aa0e:	e8 fd a9 fd ff       	callq  5410 <__rust_dealloc>
   2aa13:	88 5d 08             	mov    %bl,0x8(%rbp)
   2aa16:	8b 44 24 10          	mov    0x10(%rsp),%eax
   2aa1a:	8b 4c 24 13          	mov    0x13(%rsp),%ecx
   2aa1e:	89 45 09             	mov    %eax,0x9(%rbp)
   2aa21:	89 4d 0c             	mov    %ecx,0xc(%rbp)
   2aa24:	4c 89 7d 10          	mov    %r15,0x10(%rbp)
   2aa28:	b0 01                	mov    $0x1,%al
   2aa2a:	48 83 c4 38          	add    $0x38,%rsp
   2aa2e:	5b                   	pop    %rbx
   2aa2f:	41 5c                	pop    %r12
   2aa31:	41 5d                	pop    %r13
   2aa33:	41 5e                	pop    %r14
   2aa35:	41 5f                	pop    %r15
   2aa37:	5d                   	pop    %rbp
   2aa38:	c3                   	retq   
   2aa39:	48 8d 3d a0 fa 00 00 	lea    0xfaa0(%rip),%rdi        # 3a4e0 <_ZN4core7unicode12unicode_data2cc19BITSET_INDEX_CHUNKS17h8a1f39cd536e9344E+0x20>
   2aa40:	48 8d 0d 99 c3 21 00 	lea    0x21c399(%rip),%rcx        # 246de0 <__init_array_end+0xdd0>
   2aa47:	4c 8d 05 b2 c3 21 00 	lea    0x21c3b2(%rip),%r8        # 246e00 <__init_array_end+0xdf0>
   2aa4e:	48 8d 54 24 28       	lea    0x28(%rsp),%rdx
   2aa53:	be 10 00 00 00       	mov    $0x10,%esi
   2aa58:	e8 03 f2 fd ff       	callq  9c60 <_ZN4core6option18expect_none_failed17he0fec195c6e4c2ecE>
   2aa5d:	0f 0b                	ud2    
   2aa5f:	48 89 df             	mov    %rbx,%rdi
   2aa62:	4c 89 e6             	mov    %r12,%rsi
   2aa65:	e8 e6 d1 fd ff       	callq  7c50 <_ZN4core5slice22slice_index_order_fail17h7bcf2f94ba9e06deE>
   2aa6a:	0f 0b                	ud2    
   2aa6c:	bf 18 00 00 00       	mov    $0x18,%edi
   2aa71:	be 08 00 00 00       	mov    $0x8,%esi
   2aa76:	e8 45 aa fd ff       	callq  54c0 <_ZN5alloc5alloc18handle_alloc_error17hf7bb8682f6c8b1d7E>
   2aa7b:	0f 0b                	ud2    
   2aa7d:	bf 1c 00 00 00       	mov    $0x1c,%edi
   2aa82:	be 01 00 00 00       	mov    $0x1,%esi
   2aa87:	e8 34 aa fd ff       	callq  54c0 <_ZN5alloc5alloc18handle_alloc_error17hf7bb8682f6c8b1d7E>
   2aa8c:	0f 0b                	ud2    
   2aa8e:	49 89 c4             	mov    %rax,%r12
   2aa91:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
   2aa96:	e8 f5 a7 ff ff       	callq  25290 <_ZN4core3ptr13drop_in_place17h8847733603e5d167E>
   2aa9b:	4c 89 e7             	mov    %r12,%rdi
   2aa9e:	e8 fd 95 fd ff       	callq  40a0 <_Unwind_Resume@plt>
   2aaa3:	0f 0b                	ud2    
   2aaa5:	49 89 c4             	mov    %rax,%r12
   2aaa8:	48 8b 7d 00          	mov    0x0(%rbp),%rdi
   2aaac:	48 8b 75 08          	mov    0x8(%rbp),%rsi
   2aab0:	e8 5b 9e ff ff       	callq  24910 <_ZN5alloc5alloc8box_free17h3741427eaa5804e6E>
   2aab5:	48 8b 6c 24 30       	mov    0x30(%rsp),%rbp
   2aaba:	48 8b 7d 10          	mov    0x10(%rbp),%rdi
   2aabe:	e8 6d a3 ff ff       	callq  24e30 <_ZN5alloc5alloc8box_free17h20e506aa40102463E>
   2aac3:	88 5d 08             	mov    %bl,0x8(%rbp)
   2aac6:	8b 44 24 10          	mov    0x10(%rsp),%eax
   2aaca:	8b 4c 24 13          	mov    0x13(%rsp),%ecx
   2aace:	89 45 09             	mov    %eax,0x9(%rbp)
   2aad1:	89 4d 0c             	mov    %ecx,0xc(%rbp)
   2aad4:	4c 89 7d 10          	mov    %r15,0x10(%rbp)
   2aad8:	4c 89 e7             	mov    %r12,%rdi
   2aadb:	e8 c0 95 fd ff       	callq  40a0 <_Unwind_Resume@plt>
   2aae0:	0f 0b                	ud2    
   2aae2:	49 89 c4             	mov    %rax,%r12
   2aae5:	48 8b 3b             	mov    (%rbx),%rdi
   2aae8:	48 8b 73 08          	mov    0x8(%rbx),%rsi
   2aaec:	e8 1f 9e ff ff       	callq  24910 <_ZN5alloc5alloc8box_free17h3741427eaa5804e6E>
   2aaf1:	48 89 df             	mov    %rbx,%rdi
   2aaf4:	e8 37 a3 ff ff       	callq  24e30 <_ZN5alloc5alloc8box_free17h20e506aa40102463E>
   2aaf9:	4c 89 e7             	mov    %r12,%rdi
   2aafc:	e8 9f 95 fd ff       	callq  40a0 <_Unwind_Resume@plt>
   2ab01:	0f 0b                	ud2    
   2ab03:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2ab0a:	00 00 00 
   2ab0d:	0f 1f 00             	nopl   (%rax)

000000000002ab10 <_ZN4core3fmt5Write10write_char17h30af261c49966d36E>:
   2ab10:	50                   	push   %rax
   2ab11:	89 f0                	mov    %esi,%eax
   2ab13:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%rsp)
   2ab1a:	00 
   2ab1b:	81 fe 80 00 00 00    	cmp    $0x80,%esi
   2ab21:	73 15                	jae    2ab38 <_ZN4core3fmt5Write10write_char17h30af261c49966d36E+0x28>
   2ab23:	48 8d 74 24 04       	lea    0x4(%rsp),%rsi
   2ab28:	88 44 24 04          	mov    %al,0x4(%rsp)
   2ab2c:	ba 01 00 00 00       	mov    $0x1,%edx
   2ab31:	e8 2a fc ff ff       	callq  2a760 <_ZN80_$LT$std..io..Write..write_fmt..Adaptor$LT$T$GT$$u20$as$u20$core..fmt..Write$GT$9write_str17hd89d7abdb5e87550E>
   2ab36:	59                   	pop    %rcx
   2ab37:	c3                   	retq   
   2ab38:	48 8d 74 24 04       	lea    0x4(%rsp),%rsi
   2ab3d:	89 c1                	mov    %eax,%ecx
   2ab3f:	3d 00 08 00 00       	cmp    $0x800,%eax
   2ab44:	73 21                	jae    2ab67 <_ZN4core3fmt5Write10write_char17h30af261c49966d36E+0x57>
   2ab46:	c1 e9 06             	shr    $0x6,%ecx
   2ab49:	80 e1 1f             	and    $0x1f,%cl
   2ab4c:	80 c9 c0             	or     $0xc0,%cl
   2ab4f:	88 4c 24 04          	mov    %cl,0x4(%rsp)
   2ab53:	24 3f                	and    $0x3f,%al
   2ab55:	0c 80                	or     $0x80,%al
   2ab57:	88 44 24 05          	mov    %al,0x5(%rsp)
   2ab5b:	ba 02 00 00 00       	mov    $0x2,%edx
   2ab60:	e8 fb fb ff ff       	callq  2a760 <_ZN80_$LT$std..io..Write..write_fmt..Adaptor$LT$T$GT$$u20$as$u20$core..fmt..Write$GT$9write_str17hd89d7abdb5e87550E>
   2ab65:	59                   	pop    %rcx
   2ab66:	c3                   	retq   
   2ab67:	3d 00 00 01 00       	cmp    $0x10000,%eax
   2ab6c:	73 30                	jae    2ab9e <_ZN4core3fmt5Write10write_char17h30af261c49966d36E+0x8e>
   2ab6e:	c1 e9 0c             	shr    $0xc,%ecx
   2ab71:	80 e1 0f             	and    $0xf,%cl
   2ab74:	80 c9 e0             	or     $0xe0,%cl
   2ab77:	88 4c 24 04          	mov    %cl,0x4(%rsp)
   2ab7b:	89 c1                	mov    %eax,%ecx
   2ab7d:	c1 e9 06             	shr    $0x6,%ecx
   2ab80:	80 e1 3f             	and    $0x3f,%cl
   2ab83:	80 c9 80             	or     $0x80,%cl
   2ab86:	88 4c 24 05          	mov    %cl,0x5(%rsp)
   2ab8a:	24 3f                	and    $0x3f,%al
   2ab8c:	0c 80                	or     $0x80,%al
   2ab8e:	88 44 24 06          	mov    %al,0x6(%rsp)
   2ab92:	ba 03 00 00 00       	mov    $0x3,%edx
   2ab97:	e8 c4 fb ff ff       	callq  2a760 <_ZN80_$LT$std..io..Write..write_fmt..Adaptor$LT$T$GT$$u20$as$u20$core..fmt..Write$GT$9write_str17hd89d7abdb5e87550E>
   2ab9c:	59                   	pop    %rcx
   2ab9d:	c3                   	retq   
   2ab9e:	c1 e9 12             	shr    $0x12,%ecx
   2aba1:	80 c9 f0             	or     $0xf0,%cl
   2aba4:	88 4c 24 04          	mov    %cl,0x4(%rsp)
   2aba8:	89 c1                	mov    %eax,%ecx
   2abaa:	c1 e9 0c             	shr    $0xc,%ecx
   2abad:	80 e1 3f             	and    $0x3f,%cl
   2abb0:	80 c9 80             	or     $0x80,%cl
   2abb3:	88 4c 24 05          	mov    %cl,0x5(%rsp)
   2abb7:	89 c1                	mov    %eax,%ecx
   2abb9:	c1 e9 06             	shr    $0x6,%ecx
   2abbc:	80 e1 3f             	and    $0x3f,%cl
   2abbf:	80 c9 80             	or     $0x80,%cl
   2abc2:	88 4c 24 06          	mov    %cl,0x6(%rsp)
   2abc6:	24 3f                	and    $0x3f,%al
   2abc8:	0c 80                	or     $0x80,%al
   2abca:	88 44 24 07          	mov    %al,0x7(%rsp)
   2abce:	ba 04 00 00 00       	mov    $0x4,%edx
   2abd3:	e8 88 fb ff ff       	callq  2a760 <_ZN80_$LT$std..io..Write..write_fmt..Adaptor$LT$T$GT$$u20$as$u20$core..fmt..Write$GT$9write_str17hd89d7abdb5e87550E>
   2abd8:	59                   	pop    %rcx
   2abd9:	c3                   	retq   
   2abda:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000002abe0 <_ZN4core3fmt5Write9write_fmt17h9a2834d74e3547c0E>:
   2abe0:	48 83 ec 48          	sub    $0x48,%rsp
   2abe4:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
   2abe9:	0f 10 06             	movups (%rsi),%xmm0
   2abec:	0f 10 4e 10          	movups 0x10(%rsi),%xmm1
   2abf0:	0f 10 56 20          	movups 0x20(%rsi),%xmm2
   2abf4:	0f 29 54 24 30       	movaps %xmm2,0x30(%rsp)
   2abf9:	0f 29 4c 24 20       	movaps %xmm1,0x20(%rsp)
   2abfe:	0f 29 44 24 10       	movaps %xmm0,0x10(%rsp)
   2ac03:	48 8d 35 ee ca 21 00 	lea    0x21caee(%rip),%rsi        # 2476f8 <__init_array_end+0x16e8>
   2ac0a:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   2ac0f:	48 8d 54 24 10       	lea    0x10(%rsp),%rdx
   2ac14:	e8 17 de fd ff       	callq  8a30 <_ZN4core3fmt5write17h0db54a985afb558eE>
   2ac19:	48 83 c4 48          	add    $0x48,%rsp
   2ac1d:	c3                   	retq   
   2ac1e:	66 90                	xchg   %ax,%ax

000000000002ac20 <_ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$9write_str17h700ec25120d2519fE>:
   2ac20:	48 8b 3f             	mov    (%rdi),%rdi
   2ac23:	e9 38 fb ff ff       	jmpq   2a760 <_ZN80_$LT$std..io..Write..write_fmt..Adaptor$LT$T$GT$$u20$as$u20$core..fmt..Write$GT$9write_str17hd89d7abdb5e87550E>
   2ac28:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   2ac2f:	00 

000000000002ac30 <_ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$10write_char17h30f38dda5f678644E>:
   2ac30:	50                   	push   %rax
   2ac31:	89 f0                	mov    %esi,%eax
   2ac33:	48 8b 3f             	mov    (%rdi),%rdi
   2ac36:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%rsp)
   2ac3d:	00 
   2ac3e:	81 fe 80 00 00 00    	cmp    $0x80,%esi
   2ac44:	73 15                	jae    2ac5b <_ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$10write_char17h30f38dda5f678644E+0x2b>
   2ac46:	48 8d 74 24 04       	lea    0x4(%rsp),%rsi
   2ac4b:	88 44 24 04          	mov    %al,0x4(%rsp)
   2ac4f:	ba 01 00 00 00       	mov    $0x1,%edx
   2ac54:	e8 07 fb ff ff       	callq  2a760 <_ZN80_$LT$std..io..Write..write_fmt..Adaptor$LT$T$GT$$u20$as$u20$core..fmt..Write$GT$9write_str17hd89d7abdb5e87550E>
   2ac59:	59                   	pop    %rcx
   2ac5a:	c3                   	retq   
   2ac5b:	48 8d 74 24 04       	lea    0x4(%rsp),%rsi
   2ac60:	89 c1                	mov    %eax,%ecx
   2ac62:	3d 00 08 00 00       	cmp    $0x800,%eax
   2ac67:	73 21                	jae    2ac8a <_ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$10write_char17h30f38dda5f678644E+0x5a>
   2ac69:	c1 e9 06             	shr    $0x6,%ecx
   2ac6c:	80 e1 1f             	and    $0x1f,%cl
   2ac6f:	80 c9 c0             	or     $0xc0,%cl
   2ac72:	88 4c 24 04          	mov    %cl,0x4(%rsp)
   2ac76:	24 3f                	and    $0x3f,%al
   2ac78:	0c 80                	or     $0x80,%al
   2ac7a:	88 44 24 05          	mov    %al,0x5(%rsp)
   2ac7e:	ba 02 00 00 00       	mov    $0x2,%edx
   2ac83:	e8 d8 fa ff ff       	callq  2a760 <_ZN80_$LT$std..io..Write..write_fmt..Adaptor$LT$T$GT$$u20$as$u20$core..fmt..Write$GT$9write_str17hd89d7abdb5e87550E>
   2ac88:	59                   	pop    %rcx
   2ac89:	c3                   	retq   
   2ac8a:	3d 00 00 01 00       	cmp    $0x10000,%eax
   2ac8f:	73 30                	jae    2acc1 <_ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$10write_char17h30f38dda5f678644E+0x91>
   2ac91:	c1 e9 0c             	shr    $0xc,%ecx
   2ac94:	80 e1 0f             	and    $0xf,%cl
   2ac97:	80 c9 e0             	or     $0xe0,%cl
   2ac9a:	88 4c 24 04          	mov    %cl,0x4(%rsp)
   2ac9e:	89 c1                	mov    %eax,%ecx
   2aca0:	c1 e9 06             	shr    $0x6,%ecx
   2aca3:	80 e1 3f             	and    $0x3f,%cl
   2aca6:	80 c9 80             	or     $0x80,%cl
   2aca9:	88 4c 24 05          	mov    %cl,0x5(%rsp)
   2acad:	24 3f                	and    $0x3f,%al
   2acaf:	0c 80                	or     $0x80,%al
   2acb1:	88 44 24 06          	mov    %al,0x6(%rsp)
   2acb5:	ba 03 00 00 00       	mov    $0x3,%edx
   2acba:	e8 a1 fa ff ff       	callq  2a760 <_ZN80_$LT$std..io..Write..write_fmt..Adaptor$LT$T$GT$$u20$as$u20$core..fmt..Write$GT$9write_str17hd89d7abdb5e87550E>
   2acbf:	59                   	pop    %rcx
   2acc0:	c3                   	retq   
   2acc1:	c1 e9 12             	shr    $0x12,%ecx
   2acc4:	80 c9 f0             	or     $0xf0,%cl
   2acc7:	88 4c 24 04          	mov    %cl,0x4(%rsp)
   2accb:	89 c1                	mov    %eax,%ecx
   2accd:	c1 e9 0c             	shr    $0xc,%ecx
   2acd0:	80 e1 3f             	and    $0x3f,%cl
   2acd3:	80 c9 80             	or     $0x80,%cl
   2acd6:	88 4c 24 05          	mov    %cl,0x5(%rsp)
   2acda:	89 c1                	mov    %eax,%ecx
   2acdc:	c1 e9 06             	shr    $0x6,%ecx
   2acdf:	80 e1 3f             	and    $0x3f,%cl
   2ace2:	80 c9 80             	or     $0x80,%cl
   2ace5:	88 4c 24 06          	mov    %cl,0x6(%rsp)
   2ace9:	24 3f                	and    $0x3f,%al
   2aceb:	0c 80                	or     $0x80,%al
   2aced:	88 44 24 07          	mov    %al,0x7(%rsp)
   2acf1:	ba 04 00 00 00       	mov    $0x4,%edx
   2acf6:	e8 65 fa ff ff       	callq  2a760 <_ZN80_$LT$std..io..Write..write_fmt..Adaptor$LT$T$GT$$u20$as$u20$core..fmt..Write$GT$9write_str17hd89d7abdb5e87550E>
   2acfb:	59                   	pop    %rcx
   2acfc:	c3                   	retq   
   2acfd:	0f 1f 00             	nopl   (%rax)

000000000002ad00 <_ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$9write_fmt17h69784c144e7e952bE>:
   2ad00:	48 83 ec 48          	sub    $0x48,%rsp
   2ad04:	48 8b 07             	mov    (%rdi),%rax
   2ad07:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   2ad0c:	0f 10 06             	movups (%rsi),%xmm0
   2ad0f:	0f 10 4e 10          	movups 0x10(%rsi),%xmm1
   2ad13:	0f 10 56 20          	movups 0x20(%rsi),%xmm2
   2ad17:	0f 29 54 24 30       	movaps %xmm2,0x30(%rsp)
   2ad1c:	0f 29 4c 24 20       	movaps %xmm1,0x20(%rsp)
   2ad21:	0f 29 44 24 10       	movaps %xmm0,0x10(%rsp)
   2ad26:	48 8d 35 cb c9 21 00 	lea    0x21c9cb(%rip),%rsi        # 2476f8 <__init_array_end+0x16e8>
   2ad2d:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   2ad32:	48 8d 54 24 10       	lea    0x10(%rsp),%rdx
   2ad37:	e8 f4 dc fd ff       	callq  8a30 <_ZN4core3fmt5write17h0db54a985afb558eE>
   2ad3c:	48 83 c4 48          	add    $0x48,%rsp
   2ad40:	c3                   	retq   
   2ad41:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2ad48:	00 00 00 
   2ad4b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000002ad50 <_ZN3std2io5stdio7_eprint17hf19d6fb036d8919dE>:
   2ad50:	41 56                	push   %r14
   2ad52:	53                   	push   %rbx
   2ad53:	48 81 ec b8 00 00 00 	sub    $0xb8,%rsp
   2ad5a:	0f 10 07             	movups (%rdi),%xmm0
   2ad5d:	0f 10 4f 10          	movups 0x10(%rdi),%xmm1
   2ad61:	0f 10 57 20          	movups 0x20(%rdi),%xmm2
   2ad65:	0f 29 94 24 90 00 00 	movaps %xmm2,0x90(%rsp)
   2ad6c:	00 
   2ad6d:	0f 29 8c 24 80 00 00 	movaps %xmm1,0x80(%rsp)
   2ad74:	00 
   2ad75:	0f 29 44 24 70       	movaps %xmm0,0x70(%rsp)
   2ad7a:	48 8d 05 72 2e 01 00 	lea    0x12e72(%rip),%rax        # 3dbf3 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x1293>
   2ad81:	48 89 84 24 a8 00 00 	mov    %rax,0xa8(%rsp)
   2ad88:	00 
   2ad89:	48 c7 84 24 b0 00 00 	movq   $0x6,0xb0(%rsp)
   2ad90:	00 06 00 00 00 
   2ad95:	64 48 83 3c 25 c0 ff 	cmpq   $0x1,%fs:0xffffffffffffffc0
   2ad9c:	ff ff 01 
   2ad9f:	0f 85 db 01 00 00    	jne    2af80 <_ZN3std2io5stdio7_eprint17hf19d6fb036d8919dE+0x230>
   2ada5:	64 48 8b 04 25 00 00 	mov    %fs:0x0,%rax
   2adac:	00 00 
   2adae:	48 8d 98 c8 ff ff ff 	lea    -0x38(%rax),%rbx
   2adb5:	48 83 3b 00          	cmpq   $0x0,(%rbx)
   2adb9:	74 53                	je     2ae0e <_ZN3std2io5stdio7_eprint17hf19d6fb036d8919dE+0xbe>
   2adbb:	e8 50 f2 ff ff       	callq  2a010 <_ZN3std2io5stdio6stderr17hb2c01e21db2ee5d5E>
   2adc0:	48 89 c3             	mov    %rax,%rbx
   2adc3:	48 89 04 24          	mov    %rax,(%rsp)
   2adc7:	0f 28 44 24 70       	movaps 0x70(%rsp),%xmm0
   2adcc:	0f 28 8c 24 80 00 00 	movaps 0x80(%rsp),%xmm1
   2add3:	00 
   2add4:	0f 28 94 24 90 00 00 	movaps 0x90(%rsp),%xmm2
   2addb:	00 
   2addc:	0f 29 54 24 60       	movaps %xmm2,0x60(%rsp)
   2ade1:	0f 29 4c 24 50       	movaps %xmm1,0x50(%rsp)
   2ade6:	0f 29 44 24 40       	movaps %xmm0,0x40(%rsp)
   2adeb:	48 8d 7c 24 20       	lea    0x20(%rsp),%rdi
   2adf0:	48 8d 54 24 40       	lea    0x40(%rsp),%rdx
   2adf5:	48 89 c6             	mov    %rax,%rsi
   2adf8:	e8 b3 f6 ff ff       	callq  2a4b0 <_ZN57_$LT$std..io..stdio..Stderr$u20$as$u20$std..io..Write$GT$9write_fmt17haefc41f8025b9fecE>
   2adfd:	f0 48 83 2b 01       	lock subq $0x1,(%rbx)
   2ae02:	75 57                	jne    2ae5b <_ZN3std2io5stdio7_eprint17hf19d6fb036d8919dE+0x10b>
   2ae04:	48 89 e7             	mov    %rsp,%rdi
   2ae07:	e8 b4 f5 ff ff       	callq  2a3c0 <_ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17h262846a451db8492E>
   2ae0c:	eb 4d                	jmp    2ae5b <_ZN3std2io5stdio7_eprint17hf19d6fb036d8919dE+0x10b>
   2ae0e:	48 c7 03 ff ff ff ff 	movq   $0xffffffffffffffff,(%rbx)
   2ae15:	48 8b 73 08          	mov    0x8(%rbx),%rsi
   2ae19:	48 85 f6             	test   %rsi,%rsi
   2ae1c:	0f 84 52 01 00 00    	je     2af74 <_ZN3std2io5stdio7_eprint17hf19d6fb036d8919dE+0x224>
   2ae22:	48 8b 43 10          	mov    0x10(%rbx),%rax
   2ae26:	0f 28 44 24 70       	movaps 0x70(%rsp),%xmm0
   2ae2b:	0f 28 8c 24 80 00 00 	movaps 0x80(%rsp),%xmm1
   2ae32:	00 
   2ae33:	0f 28 94 24 90 00 00 	movaps 0x90(%rsp),%xmm2
   2ae3a:	00 
   2ae3b:	0f 29 54 24 60       	movaps %xmm2,0x60(%rsp)
   2ae40:	0f 29 4c 24 50       	movaps %xmm1,0x50(%rsp)
   2ae45:	0f 29 44 24 40       	movaps %xmm0,0x40(%rsp)
   2ae4a:	48 8d 7c 24 20       	lea    0x20(%rsp),%rdi
   2ae4f:	48 8d 54 24 40       	lea    0x40(%rsp),%rdx
   2ae54:	ff 50 38             	callq  *0x38(%rax)
   2ae57:	48 83 03 01          	addq   $0x1,(%rbx)
   2ae5b:	8a 44 24 20          	mov    0x20(%rsp),%al
   2ae5f:	8b 4c 24 21          	mov    0x21(%rsp),%ecx
   2ae63:	89 0c 24             	mov    %ecx,(%rsp)
   2ae66:	8b 4c 24 24          	mov    0x24(%rsp),%ecx
   2ae6a:	89 4c 24 03          	mov    %ecx,0x3(%rsp)
   2ae6e:	3c 04                	cmp    $0x4,%al
   2ae70:	75 67                	jne    2aed9 <_ZN3std2io5stdio7_eprint17hf19d6fb036d8919dE+0x189>
   2ae72:	e8 99 f1 ff ff       	callq  2a010 <_ZN3std2io5stdio6stderr17hb2c01e21db2ee5d5E>
   2ae77:	48 89 c3             	mov    %rax,%rbx
   2ae7a:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   2ae7f:	0f 28 44 24 70       	movaps 0x70(%rsp),%xmm0
   2ae84:	0f 28 8c 24 80 00 00 	movaps 0x80(%rsp),%xmm1
   2ae8b:	00 
   2ae8c:	0f 28 94 24 90 00 00 	movaps 0x90(%rsp),%xmm2
   2ae93:	00 
   2ae94:	0f 29 54 24 60       	movaps %xmm2,0x60(%rsp)
   2ae99:	0f 29 4c 24 50       	movaps %xmm1,0x50(%rsp)
   2ae9e:	0f 29 44 24 40       	movaps %xmm0,0x40(%rsp)
   2aea3:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
   2aea8:	48 8d 54 24 40       	lea    0x40(%rsp),%rdx
   2aead:	48 89 c6             	mov    %rax,%rsi
   2aeb0:	e8 fb f5 ff ff       	callq  2a4b0 <_ZN57_$LT$std..io..stdio..Stderr$u20$as$u20$std..io..Write$GT$9write_fmt17haefc41f8025b9fecE>
   2aeb5:	f0 48 83 2b 01       	lock subq $0x1,(%rbx)
   2aeba:	75 0a                	jne    2aec6 <_ZN3std2io5stdio7_eprint17hf19d6fb036d8919dE+0x176>
   2aebc:	48 8d 7c 24 20       	lea    0x20(%rsp),%rdi
   2aec1:	e8 fa f4 ff ff       	callq  2a3c0 <_ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17h262846a451db8492E>
   2aec6:	8a 44 24 10          	mov    0x10(%rsp),%al
   2aeca:	3c 03                	cmp    $0x3,%al
   2aecc:	75 2c                	jne    2aefa <_ZN3std2io5stdio7_eprint17hf19d6fb036d8919dE+0x1aa>
   2aece:	48 81 c4 b8 00 00 00 	add    $0xb8,%rsp
   2aed5:	5b                   	pop    %rbx
   2aed6:	41 5e                	pop    %r14
   2aed8:	c3                   	retq   
   2aed9:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
   2aede:	88 44 24 10          	mov    %al,0x10(%rsp)
   2aee2:	8b 14 24             	mov    (%rsp),%edx
   2aee5:	8b 74 24 03          	mov    0x3(%rsp),%esi
   2aee9:	89 54 24 11          	mov    %edx,0x11(%rsp)
   2aeed:	89 74 24 14          	mov    %esi,0x14(%rsp)
   2aef1:	48 89 4c 24 18       	mov    %rcx,0x18(%rsp)
   2aef6:	3c 03                	cmp    $0x3,%al
   2aef8:	74 d4                	je     2aece <_ZN3std2io5stdio7_eprint17hf19d6fb036d8919dE+0x17e>
   2aefa:	0f 10 44 24 10       	movups 0x10(%rsp),%xmm0
   2aeff:	0f 29 04 24          	movaps %xmm0,(%rsp)
   2af03:	48 8d 84 24 a8 00 00 	lea    0xa8(%rsp),%rax
   2af0a:	00 
   2af0b:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   2af10:	48 8d 05 e9 a3 ff ff 	lea    -0x5c17(%rip),%rax        # 25300 <_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h9716022a15e5b13cE>
   2af17:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   2af1c:	48 89 e0             	mov    %rsp,%rax
   2af1f:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   2af24:	48 8d 05 15 cf ff ff 	lea    -0x30eb(%rip),%rax        # 27e40 <_ZN60_$LT$std..io..error..Error$u20$as$u20$core..fmt..Display$GT$3fmt17hbf6e43c0b945c8c2E>
   2af2b:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   2af30:	48 8d 05 f1 c7 21 00 	lea    0x21c7f1(%rip),%rax        # 247728 <__init_array_end+0x1718>
   2af37:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
   2af3c:	48 c7 44 24 48 02 00 	movq   $0x2,0x48(%rsp)
   2af43:	00 00 
   2af45:	48 c7 44 24 50 00 00 	movq   $0x0,0x50(%rsp)
   2af4c:	00 00 
   2af4e:	48 8d 44 24 20       	lea    0x20(%rsp),%rax
   2af53:	48 89 44 24 60       	mov    %rax,0x60(%rsp)
   2af58:	48 c7 44 24 68 02 00 	movq   $0x2,0x68(%rsp)
   2af5f:	00 00 
   2af61:	48 8d 35 e0 c7 21 00 	lea    0x21c7e0(%rip),%rsi        # 247748 <__init_array_end+0x1738>
   2af68:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
   2af6d:	e8 6e 8a ff ff       	callq  239e0 <_ZN3std9panicking15begin_panic_fmt17h7fd3ef9bf535b4d1E>
   2af72:	0f 0b                	ud2    
   2af74:	48 c7 03 00 00 00 00 	movq   $0x0,(%rbx)
   2af7b:	e9 3b fe ff ff       	jmpq   2adbb <_ZN3std2io5stdio7_eprint17hf19d6fb036d8919dE+0x6b>
   2af80:	e8 5b c4 ff ff       	callq  273e0 <_ZN3std6thread5local4fast12Key$LT$T$GT$14try_initialize17hce561547681d9a74E>
   2af85:	48 89 c3             	mov    %rax,%rbx
   2af88:	48 85 c0             	test   %rax,%rax
   2af8b:	0f 85 24 fe ff ff    	jne    2adb5 <_ZN3std2io5stdio7_eprint17hf19d6fb036d8919dE+0x65>
   2af91:	e9 dc fe ff ff       	jmpq   2ae72 <_ZN3std2io5stdio7_eprint17hf19d6fb036d8919dE+0x122>
   2af96:	49 89 c6             	mov    %rax,%r14
   2af99:	48 89 e7             	mov    %rsp,%rdi
   2af9c:	e8 0f d1 ff ff       	callq  280b0 <_ZN4core3ptr13drop_in_place17h0756a94afff92eb4E>
   2afa1:	4c 89 f7             	mov    %r14,%rdi
   2afa4:	e8 f7 90 fd ff       	callq  40a0 <_Unwind_Resume@plt>
   2afa9:	0f 0b                	ud2    
   2afab:	49 89 c6             	mov    %rax,%r14
   2afae:	48 89 df             	mov    %rbx,%rdi
   2afb1:	e8 ea 82 ff ff       	callq  232a0 <_ZN4core3ptr13drop_in_place17h0a2d35d27e5f386dE>
   2afb6:	4c 89 f7             	mov    %r14,%rdi
   2afb9:	e8 e2 90 fd ff       	callq  40a0 <_Unwind_Resume@plt>
   2afbe:	0f 0b                	ud2    
   2afc0:	49 89 c6             	mov    %rax,%r14
   2afc3:	48 8d 7c 24 20       	lea    0x20(%rsp),%rdi
   2afc8:	e8 23 00 00 00       	callq  2aff0 <_ZN4core3ptr13drop_in_place17ha8488da6a4dee66aE>
   2afcd:	4c 89 f7             	mov    %r14,%rdi
   2afd0:	e8 cb 90 fd ff       	callq  40a0 <_Unwind_Resume@plt>
   2afd5:	0f 0b                	ud2    
   2afd7:	49 89 c6             	mov    %rax,%r14
   2afda:	48 89 e7             	mov    %rsp,%rdi
   2afdd:	e8 0e 00 00 00       	callq  2aff0 <_ZN4core3ptr13drop_in_place17ha8488da6a4dee66aE>
   2afe2:	4c 89 f7             	mov    %r14,%rdi
   2afe5:	e8 b6 90 fd ff       	callq  40a0 <_Unwind_Resume@plt>
   2afea:	0f 0b                	ud2    
   2afec:	0f 1f 40 00          	nopl   0x0(%rax)

000000000002aff0 <_ZN4core3ptr13drop_in_place17ha8488da6a4dee66aE>:
   2aff0:	48 8b 07             	mov    (%rdi),%rax
   2aff3:	f0 48 83 28 01       	lock subq $0x1,(%rax)
   2aff8:	75 05                	jne    2afff <_ZN4core3ptr13drop_in_place17ha8488da6a4dee66aE+0xf>
   2affa:	e9 c1 f3 ff ff       	jmpq   2a3c0 <_ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17h262846a451db8492E>
   2afff:	c3                   	retq   

000000000002b000 <_ZN3std3sys4unix4time8Timespec12sub_timespec17h7b26ddd705c1fdd5E>:
   2b000:	41 56                	push   %r14
   2b002:	53                   	push   %rbx
   2b003:	48 83 ec 18          	sub    $0x18,%rsp
   2b007:	48 89 f0             	mov    %rsi,%rax
   2b00a:	49 89 fe             	mov    %rdi,%r14
   2b00d:	4c 8b 0e             	mov    (%rsi),%r9
   2b010:	48 8b 4e 08          	mov    0x8(%rsi),%rcx
   2b014:	4c 8b 12             	mov    (%rdx),%r10
   2b017:	4c 8b 42 08          	mov    0x8(%rdx),%r8
   2b01b:	31 db                	xor    %ebx,%ebx
   2b01d:	4c 89 ce             	mov    %r9,%rsi
   2b020:	4c 29 d6             	sub    %r10,%rsi
   2b023:	0f 95 c3             	setne  %bl
   2b026:	bf ff 00 00 00       	mov    $0xff,%edi
   2b02b:	0f 4d fb             	cmovge %ebx,%edi
   2b02e:	40 80 ff 01          	cmp    $0x1,%dil
   2b032:	74 3c                	je     2b070 <_ZN3std3sys4unix4time8Timespec12sub_timespec17h7b26ddd705c1fdd5E+0x70>
   2b034:	40 84 ff             	test   %dil,%dil
   2b037:	75 05                	jne    2b03e <_ZN3std3sys4unix4time8Timespec12sub_timespec17h7b26ddd705c1fdd5E+0x3e>
   2b039:	4c 39 c1             	cmp    %r8,%rcx
   2b03c:	7d 32                	jge    2b070 <_ZN3std3sys4unix4time8Timespec12sub_timespec17h7b26ddd705c1fdd5E+0x70>
   2b03e:	48 89 e7             	mov    %rsp,%rdi
   2b041:	48 89 d6             	mov    %rdx,%rsi
   2b044:	48 89 c2             	mov    %rax,%rdx
   2b047:	e8 b4 ff ff ff       	callq  2b000 <_ZN3std3sys4unix4time8Timespec12sub_timespec17h7b26ddd705c1fdd5E>
   2b04c:	48 8b 04 24          	mov    (%rsp),%rax
   2b050:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
   2b055:	8b 54 24 10          	mov    0x10(%rsp),%edx
   2b059:	49 89 4e 08          	mov    %rcx,0x8(%r14)
   2b05d:	41 89 56 10          	mov    %edx,0x10(%r14)
   2b061:	48 83 f0 01          	xor    $0x1,%rax
   2b065:	49 89 06             	mov    %rax,(%r14)
   2b068:	48 83 c4 18          	add    $0x18,%rsp
   2b06c:	5b                   	pop    %rbx
   2b06d:	41 5e                	pop    %r14
   2b06f:	c3                   	retq   
   2b070:	4c 39 c1             	cmp    %r8,%rcx
   2b073:	7d 3e                	jge    2b0b3 <_ZN3std3sys4unix4time8Timespec12sub_timespec17h7b26ddd705c1fdd5E+0xb3>
   2b075:	49 f7 d2             	not    %r10
   2b078:	4d 01 d1             	add    %r10,%r9
   2b07b:	44 29 c1             	sub    %r8d,%ecx
   2b07e:	81 c1 00 ca 9a 3b    	add    $0x3b9aca00,%ecx
   2b084:	89 c8                	mov    %ecx,%eax
   2b086:	c1 e8 09             	shr    $0x9,%eax
   2b089:	48 69 f0 83 4b 04 00 	imul   $0x44b83,%rax,%rsi
   2b090:	48 c1 ee 27          	shr    $0x27,%rsi
   2b094:	4c 01 ce             	add    %r9,%rsi
   2b097:	73 32                	jae    2b0cb <_ZN3std3sys4unix4time8Timespec12sub_timespec17h7b26ddd705c1fdd5E+0xcb>
   2b099:	48 8d 3d 8e 2b 01 00 	lea    0x12b8e(%rip),%rdi        # 3dc2e <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x12ce>
   2b0a0:	48 8d 15 09 c7 21 00 	lea    0x21c709(%rip),%rdx        # 2477b0 <__init_array_end+0x17a0>
   2b0a7:	be 19 00 00 00       	mov    $0x19,%esi
   2b0ac:	e8 3f eb fd ff       	callq  9bf0 <_ZN4core6option13expect_failed17h76ad4c74f3ea7214E>
   2b0b1:	0f 0b                	ud2    
   2b0b3:	44 29 c1             	sub    %r8d,%ecx
   2b0b6:	89 c8                	mov    %ecx,%eax
   2b0b8:	c1 e8 09             	shr    $0x9,%eax
   2b0bb:	48 69 c0 83 4b 04 00 	imul   $0x44b83,%rax,%rax
   2b0c2:	48 c1 e8 27          	shr    $0x27,%rax
   2b0c6:	48 01 c6             	add    %rax,%rsi
   2b0c9:	72 ce                	jb     2b099 <_ZN3std3sys4unix4time8Timespec12sub_timespec17h7b26ddd705c1fdd5E+0x99>
   2b0cb:	89 c8                	mov    %ecx,%eax
   2b0cd:	c1 e8 09             	shr    $0x9,%eax
   2b0d0:	48 69 c0 83 4b 04 00 	imul   $0x44b83,%rax,%rax
   2b0d7:	48 c1 e8 27          	shr    $0x27,%rax
   2b0db:	69 c0 00 ca 9a 3b    	imul   $0x3b9aca00,%eax,%eax
   2b0e1:	29 c1                	sub    %eax,%ecx
   2b0e3:	49 89 76 08          	mov    %rsi,0x8(%r14)
   2b0e7:	41 89 4e 10          	mov    %ecx,0x10(%r14)
   2b0eb:	49 c7 06 00 00 00 00 	movq   $0x0,(%r14)
   2b0f2:	48 83 c4 18          	add    $0x18,%rsp
   2b0f6:	5b                   	pop    %rbx
   2b0f7:	41 5e                	pop    %r14
   2b0f9:	c3                   	retq   
   2b0fa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000002b100 <_ZN3std5panic13resume_unwind17ha9479a01d7f7d8e3E>:
   2b100:	50                   	push   %rax
   2b101:	e8 0a 00 00 00       	callq  2b110 <_ZN3std9panicking23rust_panic_without_hook17hcf9bc51ba4f2315bE>
   2b106:	0f 0b                	ud2    
   2b108:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   2b10f:	00 

000000000002b110 <_ZN3std9panicking23rust_panic_without_hook17hcf9bc51ba4f2315bE>:
   2b110:	53                   	push   %rbx
   2b111:	48 83 ec 10          	sub    $0x10,%rsp
   2b115:	64 48 83 3c 25 a0 ff 	cmpq   $0x1,%fs:0xffffffffffffffa0
   2b11c:	ff ff 01 
   2b11f:	75 0f                	jne    2b130 <_ZN3std9panicking23rust_panic_without_hook17hcf9bc51ba4f2315bE+0x20>
   2b121:	64 48 8b 04 25 a8 ff 	mov    %fs:0xffffffffffffffa8,%rax
   2b128:	ff ff 
   2b12a:	48 83 c0 01          	add    $0x1,%rax
   2b12e:	eb 14                	jmp    2b144 <_ZN3std9panicking23rust_panic_without_hook17hcf9bc51ba4f2315bE+0x34>
   2b130:	b8 01 00 00 00       	mov    $0x1,%eax
   2b135:	66 48 0f 6e c0       	movq   %rax,%xmm0
   2b13a:	64 66 0f 7f 04 25 a0 	movdqa %xmm0,%fs:0xffffffffffffffa0
   2b141:	ff ff ff 
   2b144:	64 48 89 04 25 a8 ff 	mov    %rax,%fs:0xffffffffffffffa8
   2b14b:	ff ff 
   2b14d:	48 89 3c 24          	mov    %rdi,(%rsp)
   2b151:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
   2b156:	48 8d 35 6b c6 21 00 	lea    0x21c66b(%rip),%rsi        # 2477c8 <__init_array_end+0x17b8>
   2b15d:	48 89 e7             	mov    %rsp,%rdi
   2b160:	e8 6b 8f ff ff       	callq  240d0 <rust_panic>
   2b165:	0f 0b                	ud2    
   2b167:	48 89 c3             	mov    %rax,%rbx
   2b16a:	48 89 e7             	mov    %rsp,%rdi
   2b16d:	e8 0e 00 00 00       	callq  2b180 <_ZN4core3ptr13drop_in_place17hd415ae540fe26126E>
   2b172:	48 89 df             	mov    %rbx,%rdi
   2b175:	e8 26 8f fd ff       	callq  40a0 <_Unwind_Resume@plt>
   2b17a:	0f 0b                	ud2    
   2b17c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000002b180 <_ZN4core3ptr13drop_in_place17hd415ae540fe26126E>:
   2b180:	41 56                	push   %r14
   2b182:	53                   	push   %rbx
   2b183:	50                   	push   %rax
   2b184:	48 89 fb             	mov    %rdi,%rbx
   2b187:	48 8b 3f             	mov    (%rdi),%rdi
   2b18a:	48 8b 43 08          	mov    0x8(%rbx),%rax
   2b18e:	ff 10                	callq  *(%rax)
   2b190:	48 8b 43 08          	mov    0x8(%rbx),%rax
   2b194:	48 83 78 08 00       	cmpq   $0x0,0x8(%rax)
   2b199:	74 0f                	je     2b1aa <_ZN4core3ptr13drop_in_place17hd415ae540fe26126E+0x2a>
   2b19b:	48 8b 3b             	mov    (%rbx),%rdi
   2b19e:	48 83 c4 08          	add    $0x8,%rsp
   2b1a2:	5b                   	pop    %rbx
   2b1a3:	41 5e                	pop    %r14
   2b1a5:	e9 66 a2 fd ff       	jmpq   5410 <__rust_dealloc>
   2b1aa:	48 83 c4 08          	add    $0x8,%rsp
   2b1ae:	5b                   	pop    %rbx
   2b1af:	41 5e                	pop    %r14
   2b1b1:	c3                   	retq   
   2b1b2:	49 89 c6             	mov    %rax,%r14
   2b1b5:	48 8b 3b             	mov    (%rbx),%rdi
   2b1b8:	48 8b 73 08          	mov    0x8(%rbx),%rsi
   2b1bc:	e8 4f 97 ff ff       	callq  24910 <_ZN5alloc5alloc8box_free17h3741427eaa5804e6E>
   2b1c1:	4c 89 f7             	mov    %r14,%rdi
   2b1c4:	e8 d7 8e fd ff       	callq  40a0 <_Unwind_Resume@plt>
   2b1c9:	0f 0b                	ud2    
   2b1cb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000002b1d0 <_ZN91_$LT$std..panicking..rust_panic_without_hook..RewrapBox$u20$as$u20$core..panic..BoxMeUp$GT$8take_box17h5967678cf987f034E>:
   2b1d0:	48 8b 07             	mov    (%rdi),%rax
   2b1d3:	48 8b 57 08          	mov    0x8(%rdi),%rdx
   2b1d7:	48 8d 0d 12 c6 21 00 	lea    0x21c612(%rip),%rcx        # 2477f0 <__init_array_end+0x17e0>
   2b1de:	66 48 0f 6e c1       	movq   %rcx,%xmm0
   2b1e3:	66 0f 6f 0d a5 f2 00 	movdqa 0xf2a5(%rip),%xmm1        # 3a490 <_fini+0x14c>
   2b1ea:	00 
   2b1eb:	66 0f 6c c8          	punpcklqdq %xmm0,%xmm1
   2b1ef:	f3 0f 7f 0f          	movdqu %xmm1,(%rdi)
   2b1f3:	c3                   	retq   
   2b1f4:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2b1fb:	00 00 00 
   2b1fe:	66 90                	xchg   %ax,%ax

000000000002b200 <_ZN91_$LT$std..panicking..rust_panic_without_hook..RewrapBox$u20$as$u20$core..panic..BoxMeUp$GT$3get17h0528a6e688da1c11E>:
   2b200:	48 8b 07             	mov    (%rdi),%rax
   2b203:	48 8b 57 08          	mov    0x8(%rdi),%rdx
   2b207:	c3                   	retq   
   2b208:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   2b20f:	00 

000000000002b210 <_ZN36_$LT$T$u20$as$u20$core..any..Any$GT$7type_id17h3f368a0170a7e627E>:
   2b210:	48 b8 04 cb 36 d0 05 	movabs $0x68c68305d036cb04,%rax
   2b217:	83 c6 68 
   2b21a:	c3                   	retq   
   2b21b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000002b220 <_ZN3std7process4exit17h48d7a25190f60a46E>:
   2b220:	50                   	push   %rax
   2b221:	e8 0a 00 00 00       	callq  2b230 <_ZN3std10sys_common7cleanup17h861f2e37b4e608d3E>
   2b226:	e8 55 00 00 00       	callq  2b280 <_ZN3std3sys4unix2os4exit17h678189d2cfc8851cE>
   2b22b:	0f 0b                	ud2    
   2b22d:	0f 1f 00             	nopl   (%rax)

000000000002b230 <_ZN3std10sys_common7cleanup17h861f2e37b4e608d3E>:
   2b230:	48 83 ec 18          	sub    $0x18,%rsp
   2b234:	48 8b 05 ad cf 21 00 	mov    0x21cfad(%rip),%rax        # 2481e8 <_ZN3std10sys_common7cleanup7CLEANUP17he74d084b7257e166E>
   2b23b:	48 83 f8 03          	cmp    $0x3,%rax
   2b23f:	75 05                	jne    2b246 <_ZN3std10sys_common7cleanup17h861f2e37b4e608d3E+0x16>
   2b241:	48 83 c4 18          	add    $0x18,%rsp
   2b245:	c3                   	retq   
   2b246:	c6 44 24 0f 01       	movb   $0x1,0xf(%rsp)
   2b24b:	48 8d 44 24 0f       	lea    0xf(%rsp),%rax
   2b250:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   2b255:	48 8d 3d 8c cf 21 00 	lea    0x21cf8c(%rip),%rdi        # 2481e8 <_ZN3std10sys_common7cleanup7CLEANUP17he74d084b7257e166E>
   2b25c:	48 8d 15 ad c5 21 00 	lea    0x21c5ad(%rip),%rdx        # 247810 <__init_array_end+0x1800>
   2b263:	48 8d 74 24 10       	lea    0x10(%rsp),%rsi
   2b268:	e8 23 00 00 00       	callq  2b290 <_ZN3std4sync4once4Once10call_inner17hfabbd1bc15485aefE>
   2b26d:	48 83 c4 18          	add    $0x18,%rsp
   2b271:	c3                   	retq   
   2b272:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2b279:	00 00 00 
   2b27c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000002b280 <_ZN3std3sys4unix2os4exit17h678189d2cfc8851cE>:
   2b280:	50                   	push   %rax
   2b281:	bf 01 00 00 00       	mov    $0x1,%edi
   2b286:	ff 15 0c cd 21 00    	callq  *0x21cd0c(%rip)        # 247f98 <exit@GLIBC_2.2.5>
   2b28c:	0f 0b                	ud2    
   2b28e:	66 90                	xchg   %ax,%ax

000000000002b290 <_ZN3std4sync4once4Once10call_inner17hfabbd1bc15485aefE>:
   2b290:	55                   	push   %rbp
   2b291:	41 57                	push   %r15
   2b293:	41 56                	push   %r14
   2b295:	41 55                	push   %r13
   2b297:	41 54                	push   %r12
   2b299:	53                   	push   %rbx
   2b29a:	48 81 ec 08 01 00 00 	sub    $0x108,%rsp
   2b2a1:	48 89 54 24 70       	mov    %rdx,0x70(%rsp)
   2b2a6:	48 89 74 24 68       	mov    %rsi,0x68(%rsp)
   2b2ab:	48 89 fb             	mov    %rdi,%rbx
   2b2ae:	48 8b 2f             	mov    (%rdi),%rbp
   2b2b1:	4c 8d 74 24 52       	lea    0x52(%rsp),%r14
   2b2b6:	45 31 ff             	xor    %r15d,%r15d
   2b2b9:	41 bd 01 00 00 00    	mov    $0x1,%r13d
   2b2bf:	4c 8b 25 4a cb 21 00 	mov    0x21cb4a(%rip),%r12        # 247e10 <pthread_cond_wait@GLIBC_2.3.2>
   2b2c6:	66 49 0f 6e c5       	movq   %r13,%xmm0
   2b2cb:	66 0f 7f 84 24 90 00 	movdqa %xmm0,0x90(%rsp)
   2b2d2:	00 00 
   2b2d4:	48 85 ed             	test   %rbp,%rbp
   2b2d7:	0f 84 df 02 00 00    	je     2b5bc <_ZN3std4sync4once4Once10call_inner17hfabbd1bc15485aefE+0x32c>
   2b2dd:	48 83 fd 03          	cmp    $0x3,%rbp
   2b2e1:	0f 84 1a 03 00 00    	je     2b601 <_ZN3std4sync4once4Once10call_inner17hfabbd1bc15485aefE+0x371>
   2b2e7:	48 83 fd 01          	cmp    $0x1,%rbp
   2b2eb:	0f 84 d5 04 00 00    	je     2b7c6 <_ZN3std4sync4once4Once10call_inner17hfabbd1bc15485aefE+0x536>
   2b2f1:	89 e8                	mov    %ebp,%eax
   2b2f3:	83 e0 03             	and    $0x3,%eax
   2b2f6:	48 83 f8 02          	cmp    $0x2,%rax
   2b2fa:	74 23                	je     2b31f <_ZN3std4sync4once4Once10call_inner17hfabbd1bc15485aefE+0x8f>
   2b2fc:	e9 df 04 00 00       	jmpq   2b7e0 <_ZN3std4sync4once4Once10call_inner17hfabbd1bc15485aefE+0x550>
   2b301:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2b308:	00 00 00 
   2b30b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   2b310:	89 e8                	mov    %ebp,%eax
   2b312:	83 e0 03             	and    $0x3,%eax
   2b315:	48 83 f8 02          	cmp    $0x2,%rax
   2b319:	0f 85 91 02 00 00    	jne    2b5b0 <_ZN3std4sync4once4Once10call_inner17hfabbd1bc15485aefE+0x320>
   2b31f:	64 48 83 3c 25 60 ff 	cmpq   $0x1,%fs:0xffffffffffffff60
   2b326:	ff ff 01 
   2b329:	75 59                	jne    2b384 <_ZN3std4sync4once4Once10call_inner17hfabbd1bc15485aefE+0xf4>
   2b32b:	64 48 8b 04 25 00 00 	mov    %fs:0x0,%rax
   2b332:	00 00 
   2b334:	48 8d b8 68 ff ff ff 	lea    -0x98(%rax),%rdi
   2b33b:	e8 80 7a ff ff       	callq  22dc0 <_ZN3std10sys_common11thread_info10ThreadInfo4with28_$u7b$$u7b$closure$u7d$$u7d$17hc3ac9120fadfa13eE>
   2b340:	48 89 e9             	mov    %rbp,%rcx
   2b343:	48 83 e1 fc          	and    $0xfffffffffffffffc,%rcx
   2b347:	48 89 44 24 50       	mov    %rax,0x50(%rsp)
   2b34c:	c6 44 24 60 00       	movb   $0x0,0x60(%rsp)
   2b351:	48 89 4c 24 58       	mov    %rcx,0x58(%rsp)
   2b356:	48 89 e8             	mov    %rbp,%rax
   2b359:	f0 4c 0f b1 33       	lock cmpxchg %r14,(%rbx)
   2b35e:	0f 84 0b 02 00 00    	je     2b56f <_ZN3std4sync4once4Once10call_inner17hfabbd1bc15485aefE+0x2df>
   2b364:	48 89 c5             	mov    %rax,%rbp
   2b367:	48 8b 44 24 50       	mov    0x50(%rsp),%rax
   2b36c:	48 85 c0             	test   %rax,%rax
   2b36f:	74 9f                	je     2b310 <_ZN3std4sync4once4Once10call_inner17hfabbd1bc15485aefE+0x80>
   2b371:	f0 48 83 28 01       	lock subq $0x1,(%rax)
   2b376:	75 98                	jne    2b310 <_ZN3std4sync4once4Once10call_inner17hfabbd1bc15485aefE+0x80>
   2b378:	48 8d 7c 24 50       	lea    0x50(%rsp),%rdi
   2b37d:	e8 8e 7e ff ff       	callq  23210 <_ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17h671cd2375e6e21b7E>
   2b382:	eb 8c                	jmp    2b310 <_ZN3std4sync4once4Once10call_inner17hfabbd1bc15485aefE+0x80>
   2b384:	e8 07 79 ff ff       	callq  22c90 <_ZN3std6thread5local4fast12Key$LT$T$GT$14try_initialize17h181e6352b875e74bE>
   2b389:	48 89 c7             	mov    %rax,%rdi
   2b38c:	48 85 c0             	test   %rax,%rax
   2b38f:	75 aa                	jne    2b33b <_ZN3std4sync4once4Once10call_inner17hfabbd1bc15485aefE+0xab>
   2b391:	e9 64 04 00 00       	jmpq   2b7fa <_ZN3std4sync4once4Once10call_inner17hfabbd1bc15485aefE+0x56a>
   2b396:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2b39d:	00 00 00 
   2b3a0:	64 48 83 3c 25 60 ff 	cmpq   $0x1,%fs:0xffffffffffffff60
   2b3a7:	ff ff 01 
   2b3aa:	75 14                	jne    2b3c0 <_ZN3std4sync4once4Once10call_inner17hfabbd1bc15485aefE+0x130>
   2b3ac:	64 48 8b 04 25 00 00 	mov    %fs:0x0,%rax
   2b3b3:	00 00 
   2b3b5:	48 8d 80 68 ff ff ff 	lea    -0x98(%rax),%rax
   2b3bc:	eb 10                	jmp    2b3ce <_ZN3std4sync4once4Once10call_inner17hfabbd1bc15485aefE+0x13e>
   2b3be:	66 90                	xchg   %ax,%ax
   2b3c0:	e8 cb 78 ff ff       	callq  22c90 <_ZN3std6thread5local4fast12Key$LT$T$GT$14try_initialize17h181e6352b875e74bE>
   2b3c5:	48 85 c0             	test   %rax,%rax
   2b3c8:	0f 84 8e 02 00 00    	je     2b65c <_ZN3std4sync4once4Once10call_inner17hfabbd1bc15485aefE+0x3cc>
   2b3ce:	48 89 c7             	mov    %rax,%rdi
   2b3d1:	e8 ea 79 ff ff       	callq  22dc0 <_ZN3std10sys_common11thread_info10ThreadInfo4with28_$u7b$$u7b$closure$u7d$$u7d$17hc3ac9120fadfa13eE>
   2b3d6:	48 89 c1             	mov    %rax,%rcx
   2b3d9:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   2b3de:	b8 02 00 00 00       	mov    $0x2,%eax
   2b3e3:	f0 4c 0f b1 79 28    	lock cmpxchg %r15,0x28(%rcx)
   2b3e9:	0f 84 6a 01 00 00    	je     2b559 <_ZN3std4sync4once4Once10call_inner17hfabbd1bc15485aefE+0x2c9>
   2b3ef:	48 8b 6c 24 08       	mov    0x8(%rsp),%rbp
   2b3f4:	48 8b 7d 30          	mov    0x30(%rbp),%rdi
   2b3f8:	ff 15 e2 cb 21 00    	callq  *0x21cbe2(%rip)        # 247fe0 <pthread_mutex_lock@GLIBC_2.2.5>
   2b3fe:	64 48 83 3c 25 a0 ff 	cmpq   $0x1,%fs:0xffffffffffffffa0
   2b405:	ff ff 01 
   2b408:	75 16                	jne    2b420 <_ZN3std4sync4once4Once10call_inner17hfabbd1bc15485aefE+0x190>
   2b40a:	64 48 8b 0c 25 a8 ff 	mov    %fs:0xffffffffffffffa8,%rcx
   2b411:	ff ff 
   2b413:	eb 20                	jmp    2b435 <_ZN3std4sync4once4Once10call_inner17hfabbd1bc15485aefE+0x1a5>
   2b415:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2b41c:	00 00 00 
   2b41f:	90                   	nop
   2b420:	66 0f 6f 84 24 90 00 	movdqa 0x90(%rsp),%xmm0
   2b427:	00 00 
   2b429:	64 66 0f 7f 04 25 a0 	movdqa %xmm0,%fs:0xffffffffffffffa0
   2b430:	ff ff ff 
   2b433:	31 c9                	xor    %ecx,%ecx
   2b435:	48 8d 45 30          	lea    0x30(%rbp),%rax
   2b439:	64 48 89 0c 25 a8 ff 	mov    %rcx,%fs:0xffffffffffffffa8
   2b440:	ff ff 
   2b442:	48 85 c9             	test   %rcx,%rcx
   2b445:	0f 95 c1             	setne  %cl
   2b448:	8a 55 38             	mov    0x38(%rbp),%dl
   2b44b:	84 d2                	test   %dl,%dl
   2b44d:	0f 85 2c 02 00 00    	jne    2b67f <_ZN3std4sync4once4Once10call_inner17hfabbd1bc15485aefE+0x3ef>
   2b453:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
   2b458:	88 4c 24 48          	mov    %cl,0x48(%rsp)
   2b45c:	31 c0                	xor    %eax,%eax
   2b45e:	f0 4c 0f b1 6d 28    	lock cmpxchg %r13,0x28(%rbp)
   2b464:	75 7a                	jne    2b4e0 <_ZN3std4sync4once4Once10call_inner17hfabbd1bc15485aefE+0x250>
   2b466:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2b46d:	00 00 00 
   2b470:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
   2b475:	48 8b 44 24 40       	mov    0x40(%rsp),%rax
   2b47a:	0f b6 54 24 48       	movzbl 0x48(%rsp),%edx
   2b47f:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   2b484:	88 54 24 18          	mov    %dl,0x18(%rsp)
   2b488:	48 8b 30             	mov    (%rax),%rsi
   2b48b:	31 c0                	xor    %eax,%eax
   2b48d:	f0 48 0f b1 71 48    	lock cmpxchg %rsi,0x48(%rcx)
   2b493:	74 09                	je     2b49e <_ZN3std4sync4once4Once10call_inner17hfabbd1bc15485aefE+0x20e>
   2b495:	48 39 f0             	cmp    %rsi,%rax
   2b498:	0f 85 75 01 00 00    	jne    2b613 <_ZN3std4sync4once4Once10call_inner17hfabbd1bc15485aefE+0x383>
   2b49e:	48 8b 79 40          	mov    0x40(%rcx),%rdi
   2b4a2:	41 ff d4             	callq  *%r12
   2b4a5:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   2b4aa:	0f b6 50 08          	movzbl 0x8(%rax),%edx
   2b4ae:	0f b6 4c 24 18       	movzbl 0x18(%rsp),%ecx
   2b4b3:	84 d2                	test   %dl,%dl
   2b4b5:	0f 85 72 01 00 00    	jne    2b62d <_ZN3std4sync4once4Once10call_inner17hfabbd1bc15485aefE+0x39d>
   2b4bb:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
   2b4c0:	88 4c 24 48          	mov    %cl,0x48(%rsp)
   2b4c4:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
   2b4c9:	b8 02 00 00 00       	mov    $0x2,%eax
   2b4ce:	f0 4c 0f b1 79 28    	lock cmpxchg %r15,0x28(%rcx)
   2b4d4:	75 9a                	jne    2b470 <_ZN3std4sync4once4Once10call_inner17hfabbd1bc15485aefE+0x1e0>
   2b4d6:	eb 2c                	jmp    2b504 <_ZN3std4sync4once4Once10call_inner17hfabbd1bc15485aefE+0x274>
   2b4d8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   2b4df:	00 
   2b4e0:	48 83 f8 02          	cmp    $0x2,%rax
   2b4e4:	0f 85 c4 01 00 00    	jne    2b6ae <_ZN3std4sync4once4Once10call_inner17hfabbd1bc15485aefE+0x41e>
   2b4ea:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   2b4ef:	31 c9                	xor    %ecx,%ecx
   2b4f1:	48 87 48 28          	xchg   %rcx,0x28(%rax)
   2b4f5:	48 89 4c 24 78       	mov    %rcx,0x78(%rsp)
   2b4fa:	48 83 f9 02          	cmp    $0x2,%rcx
   2b4fe:	0f 85 c4 01 00 00    	jne    2b6c8 <_ZN3std4sync4once4Once10call_inner17hfabbd1bc15485aefE+0x438>
   2b504:	48 8b 44 24 40       	mov    0x40(%rsp),%rax
   2b509:	80 7c 24 48 00       	cmpb   $0x0,0x48(%rsp)
   2b50e:	75 40                	jne    2b550 <_ZN3std4sync4once4Once10call_inner17hfabbd1bc15485aefE+0x2c0>
   2b510:	64 48 83 3c 25 a0 ff 	cmpq   $0x1,%fs:0xffffffffffffffa0
   2b517:	ff ff 01 
   2b51a:	75 12                	jne    2b52e <_ZN3std4sync4once4Once10call_inner17hfabbd1bc15485aefE+0x29e>
   2b51c:	64 48 83 3c 25 a8 ff 	cmpq   $0x0,%fs:0xffffffffffffffa8
   2b523:	ff ff 00 
   2b526:	74 28                	je     2b550 <_ZN3std4sync4once4Once10call_inner17hfabbd1bc15485aefE+0x2c0>
   2b528:	c6 40 08 01          	movb   $0x1,0x8(%rax)
   2b52c:	eb 22                	jmp    2b550 <_ZN3std4sync4once4Once10call_inner17hfabbd1bc15485aefE+0x2c0>
   2b52e:	66 0f 6f 84 24 90 00 	movdqa 0x90(%rsp),%xmm0
   2b535:	00 00 
   2b537:	64 66 0f 7f 04 25 a0 	movdqa %xmm0,%fs:0xffffffffffffffa0
   2b53e:	ff ff ff 
   2b541:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2b548:	00 00 00 
   2b54b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   2b550:	48 8b 38             	mov    (%rax),%rdi
   2b553:	ff 15 9f c9 21 00    	callq  *0x21c99f(%rip)        # 247ef8 <pthread_mutex_unlock@GLIBC_2.2.5>
   2b559:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   2b55e:	f0 48 83 28 01       	lock subq $0x1,(%rax)
   2b563:	75 0a                	jne    2b56f <_ZN3std4sync4once4Once10call_inner17hfabbd1bc15485aefE+0x2df>
   2b565:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   2b56a:	e8 a1 7c ff ff       	callq  23210 <_ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17h671cd2375e6e21b7E>
   2b56f:	8a 44 24 60          	mov    0x60(%rsp),%al
   2b573:	84 c0                	test   %al,%al
   2b575:	0f 84 25 fe ff ff    	je     2b3a0 <_ZN3std4sync4once4Once10call_inner17hfabbd1bc15485aefE+0x110>
   2b57b:	48 8b 44 24 50       	mov    0x50(%rsp),%rax
   2b580:	48 85 c0             	test   %rax,%rax
   2b583:	74 2b                	je     2b5b0 <_ZN3std4sync4once4Once10call_inner17hfabbd1bc15485aefE+0x320>
   2b585:	f0 48 83 28 01       	lock subq $0x1,(%rax)
   2b58a:	75 24                	jne    2b5b0 <_ZN3std4sync4once4Once10call_inner17hfabbd1bc15485aefE+0x320>
   2b58c:	48 8d 7c 24 50       	lea    0x50(%rsp),%rdi
   2b591:	e8 7a 7c ff ff       	callq  23210 <_ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17h671cd2375e6e21b7E>
   2b596:	48 8b 2b             	mov    (%rbx),%rbp
   2b599:	48 85 ed             	test   %rbp,%rbp
   2b59c:	0f 85 3b fd ff ff    	jne    2b2dd <_ZN3std4sync4once4Once10call_inner17hfabbd1bc15485aefE+0x4d>
   2b5a2:	eb 18                	jmp    2b5bc <_ZN3std4sync4once4Once10call_inner17hfabbd1bc15485aefE+0x32c>
   2b5a4:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2b5ab:	00 00 00 
   2b5ae:	66 90                	xchg   %ax,%ax
   2b5b0:	48 8b 2b             	mov    (%rbx),%rbp
   2b5b3:	48 85 ed             	test   %rbp,%rbp
   2b5b6:	0f 85 21 fd ff ff    	jne    2b2dd <_ZN3std4sync4once4Once10call_inner17hfabbd1bc15485aefE+0x4d>
   2b5bc:	31 c0                	xor    %eax,%eax
   2b5be:	b9 02 00 00 00       	mov    $0x2,%ecx
   2b5c3:	f0 48 0f b1 0b       	lock cmpxchg %rcx,(%rbx)
   2b5c8:	48 89 c5             	mov    %rax,%rbp
   2b5cb:	0f 85 03 fd ff ff    	jne    2b2d4 <_ZN3std4sync4once4Once10call_inner17hfabbd1bc15485aefE+0x44>
   2b5d1:	48 89 5c 24 10       	mov    %rbx,0x10(%rsp)
   2b5d6:	48 c7 44 24 18 01 00 	movq   $0x1,0x18(%rsp)
   2b5dd:	00 00 
   2b5df:	48 8b 7c 24 68       	mov    0x68(%rsp),%rdi
   2b5e4:	31 f6                	xor    %esi,%esi
   2b5e6:	48 8b 44 24 70       	mov    0x70(%rsp),%rax
   2b5eb:	ff 50 18             	callq  *0x18(%rax)
   2b5ee:	48 c7 44 24 18 03 00 	movq   $0x3,0x18(%rsp)
   2b5f5:	00 00 
   2b5f7:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
   2b5fc:	e8 af 02 00 00       	callq  2b8b0 <_ZN70_$LT$std..sync..once..WaiterQueue$u20$as$u20$core..ops..drop..Drop$GT$4drop17hb81096762adeecb1E>
   2b601:	48 81 c4 08 01 00 00 	add    $0x108,%rsp
   2b608:	5b                   	pop    %rbx
   2b609:	41 5c                	pop    %r12
   2b60b:	41 5d                	pop    %r13
   2b60d:	41 5e                	pop    %r14
   2b60f:	41 5f                	pop    %r15
   2b611:	5d                   	pop    %rbp
   2b612:	c3                   	retq   
   2b613:	48 8d 3d 2e 24 01 00 	lea    0x1242e(%rip),%rdi        # 3da48 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x10e8>
   2b61a:	48 8d 15 37 bf 21 00 	lea    0x21bf37(%rip),%rdx        # 247558 <__init_array_end+0x1548>
   2b621:	be 36 00 00 00       	mov    $0x36,%esi
   2b626:	e8 95 7e ff ff       	callq  234c0 <_ZN3std9panicking11begin_panic17hc5f3eabb2c219d56E>
   2b62b:	eb 2d                	jmp    2b65a <_ZN3std4sync4once4Once10call_inner17hfabbd1bc15485aefE+0x3ca>
   2b62d:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   2b632:	88 4c 24 18          	mov    %cl,0x18(%rsp)
   2b636:	48 8d 3d 84 22 01 00 	lea    0x12284(%rip),%rdi        # 3d8c1 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0xf61>
   2b63d:	48 8d 0d 6c be 21 00 	lea    0x21be6c(%rip),%rcx        # 2474b0 <__init_array_end+0x14a0>
   2b644:	4c 8d 05 25 bf 21 00 	lea    0x21bf25(%rip),%r8        # 247570 <__init_array_end+0x1560>
   2b64b:	48 8d 54 24 10       	lea    0x10(%rsp),%rdx
   2b650:	be 2b 00 00 00       	mov    $0x2b,%esi
   2b655:	e8 06 e6 fd ff       	callq  9c60 <_ZN4core6option18expect_none_failed17he0fec195c6e4c2ecE>
   2b65a:	0f 0b                	ud2    
   2b65c:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
   2b663:	00 00 
   2b665:	48 8d 3d 3f 1c 01 00 	lea    0x11c3f(%rip),%rdi        # 3d2ab <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x94b>
   2b66c:	48 8d 15 1d b7 21 00 	lea    0x21b71d(%rip),%rdx        # 246d90 <__init_array_end+0xd80>
   2b673:	be 5e 00 00 00       	mov    $0x5e,%esi
   2b678:	e8 73 e5 fd ff       	callq  9bf0 <_ZN4core6option13expect_failed17h76ad4c74f3ea7214E>
   2b67d:	eb db                	jmp    2b65a <_ZN3std4sync4once4Once10call_inner17hfabbd1bc15485aefE+0x3ca>
   2b67f:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   2b684:	88 4c 24 18          	mov    %cl,0x18(%rsp)
   2b688:	48 8d 3d 32 22 01 00 	lea    0x12232(%rip),%rdi        # 3d8c1 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0xf61>
   2b68f:	48 8d 0d 1a be 21 00 	lea    0x21be1a(%rip),%rcx        # 2474b0 <__init_array_end+0x14a0>
   2b696:	4c 8d 05 33 be 21 00 	lea    0x21be33(%rip),%r8        # 2474d0 <__init_array_end+0x14c0>
   2b69d:	48 8d 54 24 10       	lea    0x10(%rsp),%rdx
   2b6a2:	be 2b 00 00 00       	mov    $0x2b,%esi
   2b6a7:	e8 b4 e5 fd ff       	callq  9c60 <_ZN4core6option18expect_none_failed17he0fec195c6e4c2ecE>
   2b6ac:	eb ac                	jmp    2b65a <_ZN3std4sync4once4Once10call_inner17hfabbd1bc15485aefE+0x3ca>
   2b6ae:	48 8d 3d 7c 23 01 00 	lea    0x1237c(%rip),%rdi        # 3da31 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x10d1>
   2b6b5:	48 8d 15 2c be 21 00 	lea    0x21be2c(%rip),%rdx        # 2474e8 <__init_array_end+0x14d8>
   2b6bc:	be 17 00 00 00       	mov    $0x17,%esi
   2b6c1:	e8 fa 7d ff ff       	callq  234c0 <_ZN3std9panicking11begin_panic17hc5f3eabb2c219d56E>
   2b6c6:	eb 92                	jmp    2b65a <_ZN3std4sync4once4Once10call_inner17hfabbd1bc15485aefE+0x3ca>
   2b6c8:	48 8d 44 24 78       	lea    0x78(%rsp),%rax
   2b6cd:	48 89 84 24 80 00 00 	mov    %rax,0x80(%rsp)
   2b6d4:	00 
   2b6d5:	48 8d 05 54 f0 00 00 	lea    0xf054(%rip),%rax        # 3a730 <_ZN4core7unicode12unicode_data2cc19BITSET_INDEX_CHUNKS17h8a1f39cd536e9344E+0x270>
   2b6dc:	48 89 84 24 88 00 00 	mov    %rax,0x88(%rsp)
   2b6e3:	00 
   2b6e4:	48 8d 05 15 be 21 00 	lea    0x21be15(%rip),%rax        # 247500 <__init_array_end+0x14f0>
   2b6eb:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   2b6f0:	48 c7 44 24 18 01 00 	movq   $0x1,0x18(%rsp)
   2b6f7:	00 00 
   2b6f9:	48 c7 44 24 20 00 00 	movq   $0x0,0x20(%rsp)
   2b700:	00 00 
   2b702:	48 8d 05 2f 1d 01 00 	lea    0x11d2f(%rip),%rax        # 3d438 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0xad8>
   2b709:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   2b70e:	48 c7 44 24 38 00 00 	movq   $0x0,0x38(%rsp)
   2b715:	00 00 
   2b717:	48 8d 84 24 80 00 00 	lea    0x80(%rsp),%rax
   2b71e:	00 
   2b71f:	48 89 84 24 a8 00 00 	mov    %rax,0xa8(%rsp)
   2b726:	00 
   2b727:	48 8d 05 d2 dc ff ff 	lea    -0x232e(%rip),%rax        # 29400 <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h85c3650d73fa0c5cE>
   2b72e:	48 89 84 24 b0 00 00 	mov    %rax,0xb0(%rsp)
   2b735:	00 
   2b736:	48 8d 8c 24 88 00 00 	lea    0x88(%rsp),%rcx
   2b73d:	00 
   2b73e:	48 89 8c 24 b8 00 00 	mov    %rcx,0xb8(%rsp)
   2b745:	00 
   2b746:	48 89 84 24 c0 00 00 	mov    %rax,0xc0(%rsp)
   2b74d:	00 
   2b74e:	48 8d 44 24 10       	lea    0x10(%rsp),%rax
   2b753:	48 89 84 24 c8 00 00 	mov    %rax,0xc8(%rsp)
   2b75a:	00 
   2b75b:	48 8d 05 6e ed fd ff 	lea    -0x21292(%rip),%rax        # a4d0 <_ZN57_$LT$core..fmt..Arguments$u20$as$u20$core..fmt..Debug$GT$3fmt17hdeddc72b2c89543dE>
   2b762:	48 89 84 24 d0 00 00 	mov    %rax,0xd0(%rsp)
   2b769:	00 
   2b76a:	48 8d 05 9f bd 21 00 	lea    0x21bd9f(%rip),%rax        # 247510 <__init_array_end+0x1500>
   2b771:	48 89 84 24 d8 00 00 	mov    %rax,0xd8(%rsp)
   2b778:	00 
   2b779:	48 c7 84 24 e0 00 00 	movq   $0x3,0xe0(%rsp)
   2b780:	00 03 00 00 00 
   2b785:	48 c7 84 24 e8 00 00 	movq   $0x0,0xe8(%rsp)
   2b78c:	00 00 00 00 00 
   2b791:	48 8d 84 24 a8 00 00 	lea    0xa8(%rsp),%rax
   2b798:	00 
   2b799:	48 89 84 24 f8 00 00 	mov    %rax,0xf8(%rsp)
   2b7a0:	00 
   2b7a1:	48 c7 84 24 00 01 00 	movq   $0x3,0x100(%rsp)
   2b7a8:	00 03 00 00 00 
   2b7ad:	48 8d 35 8c bd 21 00 	lea    0x21bd8c(%rip),%rsi        # 247540 <__init_array_end+0x1530>
   2b7b4:	48 8d bc 24 d8 00 00 	lea    0xd8(%rsp),%rdi
   2b7bb:	00 
   2b7bc:	e8 1f 82 ff ff       	callq  239e0 <_ZN3std9panicking15begin_panic_fmt17h7fd3ef9bf535b4d1E>
   2b7c1:	e9 94 fe ff ff       	jmpq   2b65a <_ZN3std4sync4once4Once10call_inner17hfabbd1bc15485aefE+0x3ca>
   2b7c6:	48 8d 3d d8 24 01 00 	lea    0x124d8(%rip),%rdi        # 3dca5 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x1345>
   2b7cd:	48 8d 15 64 c0 21 00 	lea    0x21c064(%rip),%rdx        # 247838 <__init_array_end+0x1828>
   2b7d4:	be 2a 00 00 00       	mov    $0x2a,%esi
   2b7d9:	e8 e2 7c ff ff       	callq  234c0 <_ZN3std9panicking11begin_panic17hc5f3eabb2c219d56E>
   2b7de:	0f 0b                	ud2    
   2b7e0:	48 8d 3d e8 24 01 00 	lea    0x124e8(%rip),%rdi        # 3dccf <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x136f>
   2b7e7:	48 8d 15 62 c0 21 00 	lea    0x21c062(%rip),%rdx        # 247850 <__init_array_end+0x1840>
   2b7ee:	be 39 00 00 00       	mov    $0x39,%esi
   2b7f3:	e8 c8 7c ff ff       	callq  234c0 <_ZN3std9panicking11begin_panic17hc5f3eabb2c219d56E>
   2b7f8:	0f 0b                	ud2    
   2b7fa:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
   2b801:	00 00 
   2b803:	48 8d 3d a1 1a 01 00 	lea    0x11aa1(%rip),%rdi        # 3d2ab <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x94b>
   2b80a:	48 8d 15 7f b5 21 00 	lea    0x21b57f(%rip),%rdx        # 246d90 <__init_array_end+0xd80>
   2b811:	be 5e 00 00 00       	mov    $0x5e,%esi
   2b816:	e8 d5 e3 fd ff       	callq  9bf0 <_ZN4core6option13expect_failed17h76ad4c74f3ea7214E>
   2b81b:	e9 3a fe ff ff       	jmpq   2b65a <_ZN3std4sync4once4Once10call_inner17hfabbd1bc15485aefE+0x3ca>
   2b820:	48 89 c3             	mov    %rax,%rbx
   2b823:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
   2b828:	e8 73 75 ff ff       	callq  22da0 <_ZN4core3ptr13drop_in_place17ha26c711544338914E>
   2b82d:	48 89 df             	mov    %rbx,%rdi
   2b830:	e8 6b 88 fd ff       	callq  40a0 <_Unwind_Resume@plt>
   2b835:	0f 0b                	ud2    
   2b837:	eb 19                	jmp    2b852 <_ZN3std4sync4once4Once10call_inner17hfabbd1bc15485aefE+0x5c2>
   2b839:	48 89 c3             	mov    %rax,%rbx
   2b83c:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
   2b841:	e8 5a 75 ff ff       	callq  22da0 <_ZN4core3ptr13drop_in_place17ha26c711544338914E>
   2b846:	eb 4c                	jmp    2b894 <_ZN3std4sync4once4Once10call_inner17hfabbd1bc15485aefE+0x604>
   2b848:	48 89 c3             	mov    %rax,%rbx
   2b84b:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
   2b850:	eb 17                	jmp    2b869 <_ZN3std4sync4once4Once10call_inner17hfabbd1bc15485aefE+0x5d9>
   2b852:	48 89 c3             	mov    %rax,%rbx
   2b855:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
   2b85a:	e8 31 de ff ff       	callq  29690 <_ZN4core3ptr13drop_in_place17h523fcc6c971c0ff4E>
   2b85f:	eb 0d                	jmp    2b86e <_ZN3std4sync4once4Once10call_inner17hfabbd1bc15485aefE+0x5de>
   2b861:	48 89 c3             	mov    %rax,%rbx
   2b864:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
   2b869:	e8 82 de ff ff       	callq  296f0 <_ZN4core3ptr13drop_in_place17h6f25c41a01252cd2E>
   2b86e:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   2b873:	e8 08 de ff ff       	callq  29680 <_ZN4core3ptr13drop_in_place17hda96a1da1fd89bf6E>
   2b878:	eb 1a                	jmp    2b894 <_ZN3std4sync4once4Once10call_inner17hfabbd1bc15485aefE+0x604>
   2b87a:	48 89 c3             	mov    %rax,%rbx
   2b87d:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
   2b882:	e8 e9 02 00 00       	callq  2bb70 <_ZN4core3ptr13drop_in_place17ha417d976cd72d160E>
   2b887:	48 89 df             	mov    %rbx,%rdi
   2b88a:	e8 11 88 fd ff       	callq  40a0 <_Unwind_Resume@plt>
   2b88f:	0f 0b                	ud2    
   2b891:	48 89 c3             	mov    %rax,%rbx
   2b894:	48 8d 7c 24 50       	lea    0x50(%rsp),%rdi
   2b899:	e8 b2 02 00 00       	callq  2bb50 <_ZN4core3ptr13drop_in_place17ha435d5edd8fb050fE>
   2b89e:	48 89 df             	mov    %rbx,%rdi
   2b8a1:	e8 fa 87 fd ff       	callq  40a0 <_Unwind_Resume@plt>
   2b8a6:	0f 0b                	ud2    
   2b8a8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   2b8af:	00 

000000000002b8b0 <_ZN70_$LT$std..sync..once..WaiterQueue$u20$as$u20$core..ops..drop..Drop$GT$4drop17hb81096762adeecb1E>:
   2b8b0:	55                   	push   %rbp
   2b8b1:	41 57                	push   %r15
   2b8b3:	41 56                	push   %r14
   2b8b5:	41 55                	push   %r13
   2b8b7:	41 54                	push   %r12
   2b8b9:	53                   	push   %rbx
   2b8ba:	48 81 ec 88 00 00 00 	sub    $0x88,%rsp
   2b8c1:	48 8b 0f             	mov    (%rdi),%rcx
   2b8c4:	48 8b 47 08          	mov    0x8(%rdi),%rax
   2b8c8:	48 87 01             	xchg   %rax,(%rcx)
   2b8cb:	89 c1                	mov    %eax,%ecx
   2b8cd:	83 e1 03             	and    $0x3,%ecx
   2b8d0:	48 89 4c 24 28       	mov    %rcx,0x28(%rsp)
   2b8d5:	48 83 f9 02          	cmp    $0x2,%rcx
   2b8d9:	0f 85 b3 01 00 00    	jne    2ba92 <_ZN70_$LT$std..sync..once..WaiterQueue$u20$as$u20$core..ops..drop..Drop$GT$4drop17hb81096762adeecb1E+0x1e2>
   2b8df:	48 83 e0 fc          	and    $0xfffffffffffffffc,%rax
   2b8e3:	0f 84 2c 01 00 00    	je     2ba15 <_ZN70_$LT$std..sync..once..WaiterQueue$u20$as$u20$core..ops..drop..Drop$GT$4drop17hb81096762adeecb1E+0x165>
   2b8e9:	4c 8d 6c 24 08       	lea    0x8(%rsp),%r13
   2b8ee:	4c 8b 35 eb c6 21 00 	mov    0x21c6eb(%rip),%r14        # 247fe0 <pthread_mutex_lock@GLIBC_2.2.5>
   2b8f5:	4c 8b 3d fc c5 21 00 	mov    0x21c5fc(%rip),%r15        # 247ef8 <pthread_mutex_unlock@GLIBC_2.2.5>
   2b8fc:	4c 8b 25 a5 c5 21 00 	mov    0x21c5a5(%rip),%r12        # 247ea8 <pthread_cond_signal@GLIBC_2.3.2>
   2b903:	b9 01 00 00 00       	mov    $0x1,%ecx
   2b908:	66 48 0f 6e c1       	movq   %rcx,%xmm0
   2b90d:	66 0f 7f 44 24 70    	movdqa %xmm0,0x70(%rsp)
   2b913:	eb 17                	jmp    2b92c <_ZN70_$LT$std..sync..once..WaiterQueue$u20$as$u20$core..ops..drop..Drop$GT$4drop17hb81096762adeecb1E+0x7c>
   2b915:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2b91c:	00 00 00 
   2b91f:	90                   	nop
   2b920:	48 89 d8             	mov    %rbx,%rax
   2b923:	48 85 db             	test   %rbx,%rbx
   2b926:	0f 84 e9 00 00 00    	je     2ba15 <_ZN70_$LT$std..sync..once..WaiterQueue$u20$as$u20$core..ops..drop..Drop$GT$4drop17hb81096762adeecb1E+0x165>
   2b92c:	48 8b 58 08          	mov    0x8(%rax),%rbx
   2b930:	48 8b 08             	mov    (%rax),%rcx
   2b933:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   2b93a:	48 89 4c 24 30       	mov    %rcx,0x30(%rsp)
   2b93f:	48 85 c9             	test   %rcx,%rcx
   2b942:	0f 84 df 00 00 00    	je     2ba27 <_ZN70_$LT$std..sync..once..WaiterQueue$u20$as$u20$core..ops..drop..Drop$GT$4drop17hb81096762adeecb1E+0x177>
   2b948:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
   2b94d:	c6 40 10 01          	movb   $0x1,0x10(%rax)
   2b951:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
   2b956:	b8 02 00 00 00       	mov    $0x2,%eax
   2b95b:	48 87 41 28          	xchg   %rax,0x28(%rcx)
   2b95f:	48 85 c0             	test   %rax,%rax
   2b962:	74 10                	je     2b974 <_ZN70_$LT$std..sync..once..WaiterQueue$u20$as$u20$core..ops..drop..Drop$GT$4drop17hb81096762adeecb1E+0xc4>
   2b964:	48 83 f8 01          	cmp    $0x1,%rax
   2b968:	74 26                	je     2b990 <_ZN70_$LT$std..sync..once..WaiterQueue$u20$as$u20$core..ops..drop..Drop$GT$4drop17hb81096762adeecb1E+0xe0>
   2b96a:	48 83 f8 02          	cmp    $0x2,%rax
   2b96e:	0f 85 cd 00 00 00    	jne    2ba41 <_ZN70_$LT$std..sync..once..WaiterQueue$u20$as$u20$core..ops..drop..Drop$GT$4drop17hb81096762adeecb1E+0x191>
   2b974:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   2b979:	f0 48 83 28 01       	lock subq $0x1,(%rax)
   2b97e:	75 a0                	jne    2b920 <_ZN70_$LT$std..sync..once..WaiterQueue$u20$as$u20$core..ops..drop..Drop$GT$4drop17hb81096762adeecb1E+0x70>
   2b980:	e9 83 00 00 00       	jmpq   2ba08 <_ZN70_$LT$std..sync..once..WaiterQueue$u20$as$u20$core..ops..drop..Drop$GT$4drop17hb81096762adeecb1E+0x158>
   2b985:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2b98c:	00 00 00 
   2b98f:	90                   	nop
   2b990:	48 8b 6c 24 08       	mov    0x8(%rsp),%rbp
   2b995:	48 8b 7d 30          	mov    0x30(%rbp),%rdi
   2b999:	41 ff d6             	callq  *%r14
   2b99c:	64 48 83 3c 25 a0 ff 	cmpq   $0x1,%fs:0xffffffffffffffa0
   2b9a3:	ff ff 01 
   2b9a6:	75 1f                	jne    2b9c7 <_ZN70_$LT$std..sync..once..WaiterQueue$u20$as$u20$core..ops..drop..Drop$GT$4drop17hb81096762adeecb1E+0x117>
   2b9a8:	64 48 8b 0c 25 a8 ff 	mov    %fs:0xffffffffffffffa8,%rcx
   2b9af:	ff ff 
   2b9b1:	64 48 89 0c 25 a8 ff 	mov    %rcx,%fs:0xffffffffffffffa8
   2b9b8:	ff ff 
   2b9ba:	0f b6 45 38          	movzbl 0x38(%rbp),%eax
   2b9be:	84 c0                	test   %al,%al
   2b9c0:	74 28                	je     2b9ea <_ZN70_$LT$std..sync..once..WaiterQueue$u20$as$u20$core..ops..drop..Drop$GT$4drop17hb81096762adeecb1E+0x13a>
   2b9c2:	e9 94 00 00 00       	jmpq   2ba5b <_ZN70_$LT$std..sync..once..WaiterQueue$u20$as$u20$core..ops..drop..Drop$GT$4drop17hb81096762adeecb1E+0x1ab>
   2b9c7:	66 0f 6f 44 24 70    	movdqa 0x70(%rsp),%xmm0
   2b9cd:	64 66 0f 7f 04 25 a0 	movdqa %xmm0,%fs:0xffffffffffffffa0
   2b9d4:	ff ff ff 
   2b9d7:	31 c9                	xor    %ecx,%ecx
   2b9d9:	64 48 89 0c 25 a8 ff 	mov    %rcx,%fs:0xffffffffffffffa8
   2b9e0:	ff ff 
   2b9e2:	0f b6 45 38          	movzbl 0x38(%rbp),%eax
   2b9e6:	84 c0                	test   %al,%al
   2b9e8:	75 71                	jne    2ba5b <_ZN70_$LT$std..sync..once..WaiterQueue$u20$as$u20$core..ops..drop..Drop$GT$4drop17hb81096762adeecb1E+0x1ab>
   2b9ea:	48 8b 7d 30          	mov    0x30(%rbp),%rdi
   2b9ee:	41 ff d7             	callq  *%r15
   2b9f1:	48 8b 7d 40          	mov    0x40(%rbp),%rdi
   2b9f5:	41 ff d4             	callq  *%r12
   2b9f8:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   2b9fd:	f0 48 83 28 01       	lock subq $0x1,(%rax)
   2ba02:	0f 85 18 ff ff ff    	jne    2b920 <_ZN70_$LT$std..sync..once..WaiterQueue$u20$as$u20$core..ops..drop..Drop$GT$4drop17hb81096762adeecb1E+0x70>
   2ba08:	4c 89 ef             	mov    %r13,%rdi
   2ba0b:	e8 00 78 ff ff       	callq  23210 <_ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17h671cd2375e6e21b7E>
   2ba10:	e9 0b ff ff ff       	jmpq   2b920 <_ZN70_$LT$std..sync..once..WaiterQueue$u20$as$u20$core..ops..drop..Drop$GT$4drop17hb81096762adeecb1E+0x70>
   2ba15:	48 81 c4 88 00 00 00 	add    $0x88,%rsp
   2ba1c:	5b                   	pop    %rbx
   2ba1d:	41 5c                	pop    %r12
   2ba1f:	41 5d                	pop    %r13
   2ba21:	41 5e                	pop    %r14
   2ba23:	41 5f                	pop    %r15
   2ba25:	5d                   	pop    %rbp
   2ba26:	c3                   	retq   
   2ba27:	48 8d 3d f3 18 01 00 	lea    0x118f3(%rip),%rdi        # 3d321 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x9c1>
   2ba2e:	48 8d 15 4b be 21 00 	lea    0x21be4b(%rip),%rdx        # 247880 <__init_array_end+0x1870>
   2ba35:	be 2b 00 00 00       	mov    $0x2b,%esi
   2ba3a:	e8 71 b9 fd ff       	callq  73b0 <_ZN4core9panicking5panic17h6861470adfbddef8E>
   2ba3f:	eb 4f                	jmp    2ba90 <_ZN70_$LT$std..sync..once..WaiterQueue$u20$as$u20$core..ops..drop..Drop$GT$4drop17hb81096762adeecb1E+0x1e0>
   2ba41:	48 8d 3d 88 20 01 00 	lea    0x12088(%rip),%rdi        # 3dad0 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x1170>
   2ba48:	48 8d 15 39 bb 21 00 	lea    0x21bb39(%rip),%rdx        # 247588 <__init_array_end+0x1578>
   2ba4f:	be 1c 00 00 00       	mov    $0x1c,%esi
   2ba54:	e8 67 7a ff ff       	callq  234c0 <_ZN3std9panicking11begin_panic17hc5f3eabb2c219d56E>
   2ba59:	eb 35                	jmp    2ba90 <_ZN70_$LT$std..sync..once..WaiterQueue$u20$as$u20$core..ops..drop..Drop$GT$4drop17hb81096762adeecb1E+0x1e0>
   2ba5b:	48 83 c5 30          	add    $0x30,%rbp
   2ba5f:	48 85 c9             	test   %rcx,%rcx
   2ba62:	48 89 6c 24 30       	mov    %rbp,0x30(%rsp)
   2ba67:	0f 95 44 24 38       	setne  0x38(%rsp)
   2ba6c:	48 8d 3d 4e 1e 01 00 	lea    0x11e4e(%rip),%rdi        # 3d8c1 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0xf61>
   2ba73:	48 8d 0d 36 ba 21 00 	lea    0x21ba36(%rip),%rcx        # 2474b0 <__init_array_end+0x14a0>
   2ba7a:	4c 8d 05 1f bb 21 00 	lea    0x21bb1f(%rip),%r8        # 2475a0 <__init_array_end+0x1590>
   2ba81:	48 8d 54 24 30       	lea    0x30(%rsp),%rdx
   2ba86:	be 2b 00 00 00       	mov    $0x2b,%esi
   2ba8b:	e8 d0 e1 fd ff       	callq  9c60 <_ZN4core6option18expect_none_failed17he0fec195c6e4c2ecE>
   2ba90:	0f 0b                	ud2    
   2ba92:	48 8d 44 24 28       	lea    0x28(%rsp),%rax
   2ba97:	48 89 44 24 60       	mov    %rax,0x60(%rsp)
   2ba9c:	48 8d 05 8d ec 00 00 	lea    0xec8d(%rip),%rax        # 3a730 <_ZN4core7unicode12unicode_data2cc19BITSET_INDEX_CHUNKS17h8a1f39cd536e9344E+0x270>
   2baa3:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
   2baa8:	48 8d 44 24 60       	lea    0x60(%rsp),%rax
   2baad:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   2bab2:	48 8d 05 47 d9 ff ff 	lea    -0x26b9(%rip),%rax        # 29400 <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h85c3650d73fa0c5cE>
   2bab9:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   2babe:	48 8d 4c 24 68       	lea    0x68(%rsp),%rcx
   2bac3:	48 89 4c 24 18       	mov    %rcx,0x18(%rsp)
   2bac8:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   2bacd:	48 8d 05 c4 b3 21 00 	lea    0x21b3c4(%rip),%rax        # 246e98 <__init_array_end+0xe88>
   2bad4:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   2bad9:	48 c7 44 24 38 03 00 	movq   $0x3,0x38(%rsp)
   2bae0:	00 00 
   2bae2:	48 c7 44 24 40 00 00 	movq   $0x0,0x40(%rsp)
   2bae9:	00 00 
   2baeb:	48 8d 44 24 08       	lea    0x8(%rsp),%rax
   2baf0:	48 89 44 24 50       	mov    %rax,0x50(%rsp)
   2baf5:	48 c7 44 24 58 02 00 	movq   $0x2,0x58(%rsp)
   2bafc:	00 00 
   2bafe:	48 8d 35 63 bd 21 00 	lea    0x21bd63(%rip),%rsi        # 247868 <__init_array_end+0x1858>
   2bb05:	48 8d 7c 24 30       	lea    0x30(%rsp),%rdi
   2bb0a:	e8 d1 7e ff ff       	callq  239e0 <_ZN3std9panicking15begin_panic_fmt17h7fd3ef9bf535b4d1E>
   2bb0f:	0f 0b                	ud2    
   2bb11:	48 89 c3             	mov    %rax,%rbx
   2bb14:	48 8d 7c 24 30       	lea    0x30(%rsp),%rdi
   2bb19:	e8 72 db ff ff       	callq  29690 <_ZN4core3ptr13drop_in_place17h523fcc6c971c0ff4E>
   2bb1e:	eb 03                	jmp    2bb23 <_ZN70_$LT$std..sync..once..WaiterQueue$u20$as$u20$core..ops..drop..Drop$GT$4drop17hb81096762adeecb1E+0x273>
   2bb20:	48 89 c3             	mov    %rax,%rbx
   2bb23:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   2bb28:	e8 53 db ff ff       	callq  29680 <_ZN4core3ptr13drop_in_place17hda96a1da1fd89bf6E>
   2bb2d:	48 89 df             	mov    %rbx,%rdi
   2bb30:	e8 6b 85 fd ff       	callq  40a0 <_Unwind_Resume@plt>
   2bb35:	0f 0b                	ud2    
   2bb37:	48 89 c3             	mov    %rax,%rbx
   2bb3a:	48 8d 7c 24 30       	lea    0x30(%rsp),%rdi
   2bb3f:	e8 5c 72 ff ff       	callq  22da0 <_ZN4core3ptr13drop_in_place17ha26c711544338914E>
   2bb44:	48 89 df             	mov    %rbx,%rdi
   2bb47:	e8 54 85 fd ff       	callq  40a0 <_Unwind_Resume@plt>
   2bb4c:	0f 0b                	ud2    
   2bb4e:	66 90                	xchg   %ax,%ax

000000000002bb50 <_ZN4core3ptr13drop_in_place17ha435d5edd8fb050fE>:
   2bb50:	48 8b 07             	mov    (%rdi),%rax
   2bb53:	48 85 c0             	test   %rax,%rax
   2bb56:	74 0c                	je     2bb64 <_ZN4core3ptr13drop_in_place17ha435d5edd8fb050fE+0x14>
   2bb58:	f0 48 83 28 01       	lock subq $0x1,(%rax)
   2bb5d:	75 05                	jne    2bb64 <_ZN4core3ptr13drop_in_place17ha435d5edd8fb050fE+0x14>
   2bb5f:	e9 ac 76 ff ff       	jmpq   23210 <_ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17h671cd2375e6e21b7E>
   2bb64:	c3                   	retq   
   2bb65:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2bb6c:	00 00 00 
   2bb6f:	90                   	nop

000000000002bb70 <_ZN4core3ptr13drop_in_place17ha417d976cd72d160E>:
   2bb70:	e9 3b fd ff ff       	jmpq   2b8b0 <_ZN70_$LT$std..sync..once..WaiterQueue$u20$as$u20$core..ops..drop..Drop$GT$4drop17hb81096762adeecb1E>
   2bb75:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2bb7c:	00 00 00 
   2bb7f:	90                   	nop

000000000002bb80 <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h199853dd5f46efa0E>:
   2bb80:	55                   	push   %rbp
   2bb81:	41 57                	push   %r15
   2bb83:	41 56                	push   %r14
   2bb85:	41 55                	push   %r13
   2bb87:	41 54                	push   %r12
   2bb89:	53                   	push   %rbx
   2bb8a:	48 83 ec 58          	sub    $0x58,%rsp
   2bb8e:	48 8b 07             	mov    (%rdi),%rax
   2bb91:	f6 00 01             	testb  $0x1,(%rax)
   2bb94:	c6 00 00             	movb   $0x0,(%rax)
   2bb97:	0f 84 77 02 00 00    	je     2be14 <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h199853dd5f46efa0E+0x294>
   2bb9d:	48 8d 1d e4 c4 21 00 	lea    0x21c4e4(%rip),%rbx        # 248088 <_ZN3std3sys4unix4args3imp4LOCK17h1d8f441b10ddb3ddE>
   2bba4:	48 89 df             	mov    %rbx,%rdi
   2bba7:	ff 15 33 c4 21 00    	callq  *0x21c433(%rip)        # 247fe0 <pthread_mutex_lock@GLIBC_2.2.5>
   2bbad:	48 c7 05 f8 c4 21 00 	movq   $0x0,0x21c4f8(%rip)        # 2480b0 <_ZN3std3sys4unix4args3imp4ARGC17h4e4d06cf3ef5a743E>
   2bbb4:	00 00 00 00 
   2bbb8:	48 c7 05 f5 c4 21 00 	movq   $0x0,0x21c4f5(%rip)        # 2480b8 <_ZN3std3sys4unix4args3imp4ARGV17he0db131b08904595E>
   2bbbf:	00 00 00 00 
   2bbc3:	48 89 df             	mov    %rbx,%rdi
   2bbc6:	ff 15 2c c3 21 00    	callq  *0x21c32c(%rip)        # 247ef8 <pthread_mutex_unlock@GLIBC_2.2.5>
   2bbcc:	48 8b 1d 1d c6 21 00 	mov    0x21c61d(%rip),%rbx        # 2481f0 <_ZN3std3sys4unix14stack_overflow3imp13MAIN_ALTSTACK17h264a7759a758f34eE>
   2bbd3:	48 85 db             	test   %rbx,%rbx
   2bbd6:	74 35                	je     2bc0d <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h199853dd5f46efa0E+0x8d>
   2bbd8:	48 c7 44 24 18 00 00 	movq   $0x0,0x18(%rsp)
   2bbdf:	00 00 
   2bbe1:	c7 44 24 20 02 00 00 	movl   $0x2,0x20(%rsp)
   2bbe8:	00 
   2bbe9:	48 c7 44 24 28 00 20 	movq   $0x2000,0x28(%rsp)
   2bbf0:	00 00 
   2bbf2:	48 8d 7c 24 18       	lea    0x18(%rsp),%rdi
   2bbf7:	31 f6                	xor    %esi,%esi
   2bbf9:	ff 15 b9 c3 21 00    	callq  *0x21c3b9(%rip)        # 247fb8 <sigaltstack@GLIBC_2.2.5>
   2bbff:	be 00 20 00 00       	mov    $0x2000,%esi
   2bc04:	48 89 df             	mov    %rbx,%rdi
   2bc07:	ff 15 33 c3 21 00    	callq  *0x21c333(%rip)        # 247f40 <munmap@GLIBC_2.2.5>
   2bc0d:	bb 01 00 00 00       	mov    $0x1,%ebx
   2bc12:	4c 8d 2d 6f c5 21 00 	lea    0x21c56f(%rip),%r13        # 248188 <_ZN3std10sys_common11at_exit_imp4LOCK17ha2343197c7639f97E>
   2bc19:	4c 8b 3d c0 c3 21 00 	mov    0x21c3c0(%rip),%r15        # 247fe0 <pthread_mutex_lock@GLIBC_2.2.5>
   2bc20:	4c 8b 25 d1 c2 21 00 	mov    0x21c2d1(%rip),%r12        # 247ef8 <pthread_mutex_unlock@GLIBC_2.2.5>
   2bc27:	eb 3e                	jmp    2bc67 <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h199853dd5f46efa0E+0xe7>
   2bc29:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   2bc30:	48 89 ef             	mov    %rbp,%rdi
   2bc33:	e8 d8 97 fd ff       	callq  5410 <__rust_dealloc>
   2bc38:	48 8b 5c 24 50       	mov    0x50(%rsp),%rbx
   2bc3d:	4c 8d 2d 44 c5 21 00 	lea    0x21c544(%rip),%r13        # 248188 <_ZN3std10sys_common11at_exit_imp4LOCK17ha2343197c7639f97E>
   2bc44:	4c 8b 3d 95 c3 21 00 	mov    0x21c395(%rip),%r15        # 247fe0 <pthread_mutex_lock@GLIBC_2.2.5>
   2bc4b:	4c 8b 25 a6 c2 21 00 	mov    0x21c2a6(%rip),%r12        # 247ef8 <pthread_mutex_unlock@GLIBC_2.2.5>
   2bc52:	4c 8b 74 24 48       	mov    0x48(%rsp),%r14
   2bc57:	48 83 fb 0a          	cmp    $0xa,%rbx
   2bc5b:	0f 97 c0             	seta   %al
   2bc5e:	44 08 f0             	or     %r14b,%al
   2bc61:	0f 85 84 01 00 00    	jne    2bdeb <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h199853dd5f46efa0E+0x26b>
   2bc67:	45 31 f6             	xor    %r14d,%r14d
   2bc6a:	48 83 fb 09          	cmp    $0x9,%rbx
   2bc6e:	41 0f 97 c6          	seta   %r14b
   2bc72:	48 83 fb 0a          	cmp    $0xa,%rbx
   2bc76:	48 8d 5b 01          	lea    0x1(%rbx),%rbx
   2bc7a:	b8 0a 00 00 00       	mov    $0xa,%eax
   2bc7f:	48 0f 43 d8          	cmovae %rax,%rbx
   2bc83:	4c 89 ef             	mov    %r13,%rdi
   2bc86:	41 ff d7             	callq  *%r15
   2bc89:	48 8b 2d 20 c5 21 00 	mov    0x21c520(%rip),%rbp        # 2481b0 <_ZN3std10sys_common11at_exit_imp5QUEUE17h20295581aa71c61cE>
   2bc90:	4c 89 35 19 c5 21 00 	mov    %r14,0x21c519(%rip)        # 2481b0 <_ZN3std10sys_common11at_exit_imp5QUEUE17h20295581aa71c61cE>
   2bc97:	4c 89 ef             	mov    %r13,%rdi
   2bc9a:	41 ff d4             	callq  *%r12
   2bc9d:	48 85 ed             	test   %rbp,%rbp
   2bca0:	74 b5                	je     2bc57 <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h199853dd5f46efa0E+0xd7>
   2bca2:	4c 89 74 24 48       	mov    %r14,0x48(%rsp)
   2bca7:	48 89 5c 24 50       	mov    %rbx,0x50(%rsp)
   2bcac:	48 83 fd 01          	cmp    $0x1,%rbp
   2bcb0:	0f 84 44 01 00 00    	je     2bdfa <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h199853dd5f46efa0E+0x27a>
   2bcb6:	48 8b 45 00          	mov    0x0(%rbp),%rax
   2bcba:	48 8b 4d 08          	mov    0x8(%rbp),%rcx
   2bcbe:	48 89 6c 24 08       	mov    %rbp,0x8(%rsp)
   2bcc3:	4c 8b 75 10          	mov    0x10(%rbp),%r14
   2bcc7:	49 c1 e6 04          	shl    $0x4,%r14
   2bccb:	4a 8d 14 30          	lea    (%rax,%r14,1),%rdx
   2bccf:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   2bcd4:	48 89 4c 24 40       	mov    %rcx,0x40(%rsp)
   2bcd9:	48 89 4c 24 20       	mov    %rcx,0x20(%rsp)
   2bcde:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   2bce3:	48 89 54 24 38       	mov    %rdx,0x38(%rsp)
   2bce8:	48 89 54 24 30       	mov    %rdx,0x30(%rsp)
   2bced:	4c 89 f3             	mov    %r14,%rbx
   2bcf0:	48 f7 db             	neg    %rbx
   2bcf3:	4c 8d 78 20          	lea    0x20(%rax),%r15
   2bcf7:	4d 8d 66 f0          	lea    -0x10(%r14),%r12
   2bcfb:	45 31 ed             	xor    %r13d,%r13d
   2bcfe:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   2bd03:	48 89 c5             	mov    %rax,%rbp
   2bd06:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2bd0d:	00 00 00 
   2bd10:	4c 39 eb             	cmp    %r13,%rbx
   2bd13:	74 2b                	je     2bd40 <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h199853dd5f46efa0E+0x1c0>
   2bd15:	48 8b 7d 00          	mov    0x0(%rbp),%rdi
   2bd19:	48 85 ff             	test   %rdi,%rdi
   2bd1c:	74 42                	je     2bd60 <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h199853dd5f46efa0E+0x1e0>
   2bd1e:	48 8b 75 08          	mov    0x8(%rbp),%rsi
   2bd22:	48 83 c5 10          	add    $0x10,%rbp
   2bd26:	49 83 c5 f0          	add    $0xfffffffffffffff0,%r13
   2bd2a:	49 83 c7 10          	add    $0x10,%r15
   2bd2e:	49 83 c4 f0          	add    $0xfffffffffffffff0,%r12
   2bd32:	e8 59 01 00 00       	callq  2be90 <_ZN83_$LT$alloc..boxed..Box$LT$F$GT$$u20$as$u20$core..ops..function..FnOnce$LT$A$GT$$GT$9call_once17hc1201682a8722debE>
   2bd37:	eb d7                	jmp    2bd10 <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h199853dd5f46efa0E+0x190>
   2bd39:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   2bd40:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
   2bd45:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   2bd4a:	48 8b 6c 24 08       	mov    0x8(%rsp),%rbp
   2bd4f:	eb 7f                	jmp    2bdd0 <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h199853dd5f46efa0E+0x250>
   2bd51:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2bd58:	00 00 00 
   2bd5b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   2bd60:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   2bd65:	4c 29 e8             	sub    %r13,%rax
   2bd68:	48 83 c0 10          	add    $0x10,%rax
   2bd6c:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   2bd71:	b8 10 00 00 00       	mov    $0x10,%eax
   2bd76:	4c 29 f0             	sub    %r14,%rax
   2bd79:	4c 39 e8             	cmp    %r13,%rax
   2bd7c:	48 8b 6c 24 08       	mov    0x8(%rsp),%rbp
   2bd81:	75 17                	jne    2bd9a <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h199853dd5f46efa0E+0x21a>
   2bd83:	eb 4b                	jmp    2bdd0 <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h199853dd5f46efa0E+0x250>
   2bd85:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2bd8c:	00 00 00 
   2bd8f:	90                   	nop
   2bd90:	49 83 c7 10          	add    $0x10,%r15
   2bd94:	49 83 c4 f0          	add    $0xfffffffffffffff0,%r12
   2bd98:	74 36                	je     2bdd0 <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h199853dd5f46efa0E+0x250>
   2bd9a:	4c 89 7c 24 28       	mov    %r15,0x28(%rsp)
   2bd9f:	4d 8b 6f f0          	mov    -0x10(%r15),%r13
   2bda3:	4d 85 ed             	test   %r13,%r13
   2bda6:	74 28                	je     2bdd0 <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h199853dd5f46efa0E+0x250>
   2bda8:	49 8b 5f f8          	mov    -0x8(%r15),%rbx
   2bdac:	4c 89 ef             	mov    %r13,%rdi
   2bdaf:	ff 13                	callq  *(%rbx)
   2bdb1:	48 83 7b 08 00       	cmpq   $0x0,0x8(%rbx)
   2bdb6:	74 d8                	je     2bd90 <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h199853dd5f46efa0E+0x210>
   2bdb8:	4c 89 ef             	mov    %r13,%rdi
   2bdbb:	e8 50 96 fd ff       	callq  5410 <__rust_dealloc>
   2bdc0:	eb ce                	jmp    2bd90 <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h199853dd5f46efa0E+0x210>
   2bdc2:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2bdc9:	00 00 00 
   2bdcc:	0f 1f 40 00          	nopl   0x0(%rax)
   2bdd0:	48 83 7c 24 40 00    	cmpq   $0x0,0x40(%rsp)
   2bdd6:	0f 84 54 fe ff ff    	je     2bc30 <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h199853dd5f46efa0E+0xb0>
   2bddc:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
   2bde1:	e8 2a 96 fd ff       	callq  5410 <__rust_dealloc>
   2bde6:	e9 45 fe ff ff       	jmpq   2bc30 <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h199853dd5f46efa0E+0xb0>
   2bdeb:	48 83 c4 58          	add    $0x58,%rsp
   2bdef:	5b                   	pop    %rbx
   2bdf0:	41 5c                	pop    %r12
   2bdf2:	41 5d                	pop    %r13
   2bdf4:	41 5e                	pop    %r14
   2bdf6:	41 5f                	pop    %r15
   2bdf8:	5d                   	pop    %rbp
   2bdf9:	c3                   	retq   
   2bdfa:	48 8d 3d 1e 1f 01 00 	lea    0x11f1e(%rip),%rdi        # 3dd1f <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x13bf>
   2be01:	48 8d 15 a8 ba 21 00 	lea    0x21baa8(%rip),%rdx        # 2478b0 <__init_array_end+0x18a0>
   2be08:	be 1f 00 00 00       	mov    $0x1f,%esi
   2be0d:	e8 ae 76 ff ff       	callq  234c0 <_ZN3std9panicking11begin_panic17hc5f3eabb2c219d56E>
   2be12:	0f 0b                	ud2    
   2be14:	48 8d 3d 06 15 01 00 	lea    0x11506(%rip),%rdi        # 3d321 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x9c1>
   2be1b:	48 8d 15 76 ba 21 00 	lea    0x21ba76(%rip),%rdx        # 247898 <__init_array_end+0x1888>
   2be22:	be 2b 00 00 00       	mov    $0x2b,%esi
   2be27:	e8 84 b5 fd ff       	callq  73b0 <_ZN4core9panicking5panic17h6861470adfbddef8E>
   2be2c:	0f 0b                	ud2    
   2be2e:	49 89 c6             	mov    %rax,%r14
   2be31:	4c 89 ef             	mov    %r13,%rdi
   2be34:	48 89 de             	mov    %rbx,%rsi
   2be37:	e8 d4 8a ff ff       	callq  24910 <_ZN5alloc5alloc8box_free17h3741427eaa5804e6E>
   2be3c:	eb 1f                	jmp    2be5d <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h199853dd5f46efa0E+0x2dd>
   2be3e:	49 89 c6             	mov    %rax,%r14
   2be41:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   2be46:	4c 29 e8             	sub    %r13,%rax
   2be49:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   2be4e:	48 8d 7c 24 18       	lea    0x18(%rsp),%rdi
   2be53:	e8 b8 00 00 00       	callq  2bf10 <_ZN4core3ptr13drop_in_place17he04231dde9a2717bE>
   2be58:	48 8b 6c 24 08       	mov    0x8(%rsp),%rbp
   2be5d:	48 89 ef             	mov    %rbp,%rdi
   2be60:	e8 cb 8f ff ff       	callq  24e30 <_ZN5alloc5alloc8box_free17h20e506aa40102463E>
   2be65:	4c 89 f7             	mov    %r14,%rdi
   2be68:	e8 33 82 fd ff       	callq  40a0 <_Unwind_Resume@plt>
   2be6d:	0f 0b                	ud2    
   2be6f:	90                   	nop

000000000002be70 <_ZN4core3ops8function6FnOnce40call_once$u7b$$u7b$vtable.shim$u7d$$u7d$17h5678ca7adb0e5df5E>:
   2be70:	50                   	push   %rax
   2be71:	48 8b 07             	mov    (%rdi),%rax
   2be74:	48 89 04 24          	mov    %rax,(%rsp)
   2be78:	48 89 e7             	mov    %rsp,%rdi
   2be7b:	e8 00 fd ff ff       	callq  2bb80 <_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h199853dd5f46efa0E>
   2be80:	58                   	pop    %rax
   2be81:	c3                   	retq   
   2be82:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2be89:	00 00 00 
   2be8c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000002be90 <_ZN83_$LT$alloc..boxed..Box$LT$F$GT$$u20$as$u20$core..ops..function..FnOnce$LT$A$GT$$GT$9call_once17hc1201682a8722debE>:
   2be90:	55                   	push   %rbp
   2be91:	48 89 e5             	mov    %rsp,%rbp
   2be94:	41 57                	push   %r15
   2be96:	41 56                	push   %r14
   2be98:	41 54                	push   %r12
   2be9a:	53                   	push   %rbx
   2be9b:	49 89 f7             	mov    %rsi,%r15
   2be9e:	49 89 fe             	mov    %rdi,%r14
   2bea1:	4c 8b 66 08          	mov    0x8(%rsi),%r12
   2bea5:	49 8d 44 24 0f       	lea    0xf(%r12),%rax
   2beaa:	48 83 e0 f0          	and    $0xfffffffffffffff0,%rax
   2beae:	e8 e5 d5 00 00       	callq  39498 <__rust_probestack>
   2beb3:	48 29 c4             	sub    %rax,%rsp
   2beb6:	48 89 e3             	mov    %rsp,%rbx
   2beb9:	48 89 df             	mov    %rbx,%rdi
   2bebc:	4c 89 f6             	mov    %r14,%rsi
   2bebf:	4c 89 e2             	mov    %r12,%rdx
   2bec2:	ff 15 08 c0 21 00    	callq  *0x21c008(%rip)        # 247ed0 <memcpy@GLIBC_2.14>
   2bec8:	48 89 df             	mov    %rbx,%rdi
   2becb:	41 ff 57 18          	callq  *0x18(%r15)
   2becf:	4d 85 e4             	test   %r12,%r12
   2bed2:	74 08                	je     2bedc <_ZN83_$LT$alloc..boxed..Box$LT$F$GT$$u20$as$u20$core..ops..function..FnOnce$LT$A$GT$$GT$9call_once17hc1201682a8722debE+0x4c>
   2bed4:	4c 89 f7             	mov    %r14,%rdi
   2bed7:	e8 34 95 fd ff       	callq  5410 <__rust_dealloc>
   2bedc:	48 8d 65 e0          	lea    -0x20(%rbp),%rsp
   2bee0:	5b                   	pop    %rbx
   2bee1:	41 5c                	pop    %r12
   2bee3:	41 5e                	pop    %r14
   2bee5:	41 5f                	pop    %r15
   2bee7:	5d                   	pop    %rbp
   2bee8:	c3                   	retq   
   2bee9:	48 89 c3             	mov    %rax,%rbx
   2beec:	4c 89 f7             	mov    %r14,%rdi
   2beef:	4c 89 fe             	mov    %r15,%rsi
   2bef2:	e8 19 8a ff ff       	callq  24910 <_ZN5alloc5alloc8box_free17h3741427eaa5804e6E>
   2bef7:	48 89 df             	mov    %rbx,%rdi
   2befa:	e8 a1 81 fd ff       	callq  40a0 <_Unwind_Resume@plt>
   2beff:	0f 0b                	ud2    
   2bf01:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2bf08:	00 00 00 
   2bf0b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000002bf10 <_ZN4core3ptr13drop_in_place17he04231dde9a2717bE>:
   2bf10:	41 57                	push   %r15
   2bf12:	41 56                	push   %r14
   2bf14:	53                   	push   %rbx
   2bf15:	49 89 fe             	mov    %rdi,%r14
   2bf18:	48 8b 47 10          	mov    0x10(%rdi),%rax
   2bf1c:	48 3b 47 18          	cmp    0x18(%rdi),%rax
   2bf20:	75 18                	jne    2bf3a <_ZN4core3ptr13drop_in_place17he04231dde9a2717bE+0x2a>
   2bf22:	eb 40                	jmp    2bf64 <_ZN4core3ptr13drop_in_place17he04231dde9a2717bE+0x54>
   2bf24:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2bf2b:	00 00 00 
   2bf2e:	66 90                	xchg   %ax,%ax
   2bf30:	49 8b 46 10          	mov    0x10(%r14),%rax
   2bf34:	49 3b 46 18          	cmp    0x18(%r14),%rax
   2bf38:	74 2a                	je     2bf64 <_ZN4core3ptr13drop_in_place17he04231dde9a2717bE+0x54>
   2bf3a:	48 8d 48 10          	lea    0x10(%rax),%rcx
   2bf3e:	49 89 4e 10          	mov    %rcx,0x10(%r14)
   2bf42:	4c 8b 38             	mov    (%rax),%r15
   2bf45:	4d 85 ff             	test   %r15,%r15
   2bf48:	74 1a                	je     2bf64 <_ZN4core3ptr13drop_in_place17he04231dde9a2717bE+0x54>
   2bf4a:	48 8b 58 08          	mov    0x8(%rax),%rbx
   2bf4e:	4c 89 ff             	mov    %r15,%rdi
   2bf51:	ff 13                	callq  *(%rbx)
   2bf53:	48 83 7b 08 00       	cmpq   $0x0,0x8(%rbx)
   2bf58:	74 d6                	je     2bf30 <_ZN4core3ptr13drop_in_place17he04231dde9a2717bE+0x20>
   2bf5a:	4c 89 ff             	mov    %r15,%rdi
   2bf5d:	e8 ae 94 fd ff       	callq  5410 <__rust_dealloc>
   2bf62:	eb cc                	jmp    2bf30 <_ZN4core3ptr13drop_in_place17he04231dde9a2717bE+0x20>
   2bf64:	49 83 7e 08 00       	cmpq   $0x0,0x8(%r14)
   2bf69:	74 0d                	je     2bf78 <_ZN4core3ptr13drop_in_place17he04231dde9a2717bE+0x68>
   2bf6b:	49 8b 3e             	mov    (%r14),%rdi
   2bf6e:	5b                   	pop    %rbx
   2bf6f:	41 5e                	pop    %r14
   2bf71:	41 5f                	pop    %r15
   2bf73:	e9 98 94 fd ff       	jmpq   5410 <__rust_dealloc>
   2bf78:	5b                   	pop    %rbx
   2bf79:	41 5e                	pop    %r14
   2bf7b:	41 5f                	pop    %r15
   2bf7d:	c3                   	retq   
   2bf7e:	49 89 c6             	mov    %rax,%r14
   2bf81:	4c 89 ff             	mov    %r15,%rdi
   2bf84:	48 89 de             	mov    %rbx,%rsi
   2bf87:	e8 84 89 ff ff       	callq  24910 <_ZN5alloc5alloc8box_free17h3741427eaa5804e6E>
   2bf8c:	4c 89 f7             	mov    %r14,%rdi
   2bf8f:	e8 0c 81 fd ff       	callq  40a0 <_Unwind_Resume@plt>
   2bf94:	0f 0b                	ud2    
   2bf96:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2bf9d:	00 00 00 

000000000002bfa0 <_ZN3std10sys_common11thread_info3set17h5184dcec2d40b2c6E>:
   2bfa0:	41 56                	push   %r14
   2bfa2:	53                   	push   %rbx
   2bfa3:	48 83 ec 58          	sub    $0x58,%rsp
   2bfa7:	49 89 f6             	mov    %rsi,%r14
   2bfaa:	48 89 fb             	mov    %rdi,%rbx
   2bfad:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
   2bfb2:	64 48 83 3c 25 60 ff 	cmpq   $0x1,%fs:0xffffffffffffff60
   2bfb9:	ff ff 01 
   2bfbc:	75 21                	jne    2bfdf <_ZN3std10sys_common11thread_info3set17h5184dcec2d40b2c6E+0x3f>
   2bfbe:	64 48 8b 04 25 00 00 	mov    %fs:0x0,%rax
   2bfc5:	00 00 
   2bfc7:	48 8d 80 68 ff ff ff 	lea    -0x98(%rax),%rax
   2bfce:	48 8b 08             	mov    (%rax),%rcx
   2bfd1:	48 83 c1 01          	add    $0x1,%rcx
   2bfd5:	48 85 c9             	test   %rcx,%rcx
   2bfd8:	7f 23                	jg     2bffd <_ZN3std10sys_common11thread_info3set17h5184dcec2d40b2c6E+0x5d>
   2bfda:	e9 d6 00 00 00       	jmpq   2c0b5 <_ZN3std10sys_common11thread_info3set17h5184dcec2d40b2c6E+0x115>
   2bfdf:	e8 ac 6c ff ff       	callq  22c90 <_ZN3std6thread5local4fast12Key$LT$T$GT$14try_initialize17h181e6352b875e74bE>
   2bfe4:	48 85 c0             	test   %rax,%rax
   2bfe7:	0f 84 2a 01 00 00    	je     2c117 <_ZN3std10sys_common11thread_info3set17h5184dcec2d40b2c6E+0x177>
   2bfed:	48 8b 08             	mov    (%rax),%rcx
   2bff0:	48 83 c1 01          	add    $0x1,%rcx
   2bff4:	48 85 c9             	test   %rcx,%rcx
   2bff7:	0f 8e b8 00 00 00    	jle    2c0b5 <_ZN3std10sys_common11thread_info3set17h5184dcec2d40b2c6E+0x115>
   2bffd:	48 83 78 08 02       	cmpq   $0x2,0x8(%rax)
   2c002:	0f 85 d1 00 00 00    	jne    2c0d9 <_ZN3std10sys_common11thread_info3set17h5184dcec2d40b2c6E+0x139>
   2c008:	48 8b 43 10          	mov    0x10(%rbx),%rax
   2c00c:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   2c011:	0f 10 03             	movups (%rbx),%xmm0
   2c014:	0f 29 44 24 10       	movaps %xmm0,0x10(%rsp)
   2c019:	4c 89 74 24 28       	mov    %r14,0x28(%rsp)
   2c01e:	64 48 83 3c 25 60 ff 	cmpq   $0x1,%fs:0xffffffffffffff60
   2c025:	ff ff 01 
   2c028:	75 12                	jne    2c03c <_ZN3std10sys_common11thread_info3set17h5184dcec2d40b2c6E+0x9c>
   2c02a:	64 48 8b 04 25 00 00 	mov    %fs:0x0,%rax
   2c031:	00 00 
   2c033:	48 8d 98 68 ff ff ff 	lea    -0x98(%rax),%rbx
   2c03a:	eb 11                	jmp    2c04d <_ZN3std10sys_common11thread_info3set17h5184dcec2d40b2c6E+0xad>
   2c03c:	e8 4f 6c ff ff       	callq  22c90 <_ZN3std6thread5local4fast12Key$LT$T$GT$14try_initialize17h181e6352b875e74bE>
   2c041:	48 89 c3             	mov    %rax,%rbx
   2c044:	48 85 c0             	test   %rax,%rax
   2c047:	0f 84 ee 00 00 00    	je     2c13b <_ZN3std10sys_common11thread_info3set17h5184dcec2d40b2c6E+0x19b>
   2c04d:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
   2c052:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
   2c057:	0f 28 44 24 10       	movaps 0x10(%rsp),%xmm0
   2c05c:	0f 29 44 24 30       	movaps %xmm0,0x30(%rsp)
   2c061:	4c 89 74 24 48       	mov    %r14,0x48(%rsp)
   2c066:	48 83 3b 00          	cmpq   $0x0,(%rbx)
   2c06a:	0f 85 83 00 00 00    	jne    2c0f3 <_ZN3std10sys_common11thread_info3set17h5184dcec2d40b2c6E+0x153>
   2c070:	48 c7 03 ff ff ff ff 	movq   $0xffffffffffffffff,(%rbx)
   2c077:	4c 8d 73 08          	lea    0x8(%rbx),%r14
   2c07b:	48 83 7b 08 02       	cmpq   $0x2,0x8(%rbx)
   2c080:	74 14                	je     2c096 <_ZN3std10sys_common11thread_info3set17h5184dcec2d40b2c6E+0xf6>
   2c082:	48 8b 43 20          	mov    0x20(%rbx),%rax
   2c086:	f0 48 83 28 01       	lock subq $0x1,(%rax)
   2c08b:	75 09                	jne    2c096 <_ZN3std10sys_common11thread_info3set17h5184dcec2d40b2c6E+0xf6>
   2c08d:	48 8d 7b 20          	lea    0x20(%rbx),%rdi
   2c091:	e8 7a 71 ff ff       	callq  23210 <_ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17h671cd2375e6e21b7E>
   2c096:	0f 28 44 24 30       	movaps 0x30(%rsp),%xmm0
   2c09b:	0f 28 4c 24 40       	movaps 0x40(%rsp),%xmm1
   2c0a0:	41 0f 11 4e 10       	movups %xmm1,0x10(%r14)
   2c0a5:	41 0f 11 06          	movups %xmm0,(%r14)
   2c0a9:	48 83 03 01          	addq   $0x1,(%rbx)
   2c0ad:	48 83 c4 58          	add    $0x58,%rsp
   2c0b1:	5b                   	pop    %rbx
   2c0b2:	41 5e                	pop    %r14
   2c0b4:	c3                   	retq   
   2c0b5:	48 8d 3d 4d 12 01 00 	lea    0x1124d(%rip),%rdi        # 3d309 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x9a9>
   2c0bc:	48 8d 0d e5 ac 21 00 	lea    0x21ace5(%rip),%rcx        # 246da8 <__init_array_end+0xd98>
   2c0c3:	4c 8d 05 fe ac 21 00 	lea    0x21acfe(%rip),%r8        # 246dc8 <__init_array_end+0xdb8>
   2c0ca:	48 89 e2             	mov    %rsp,%rdx
   2c0cd:	be 18 00 00 00       	mov    $0x18,%esi
   2c0d2:	e8 89 db fd ff       	callq  9c60 <_ZN4core6option18expect_none_failed17he0fec195c6e4c2ecE>
   2c0d7:	eb 60                	jmp    2c139 <_ZN3std10sys_common11thread_info3set17h5184dcec2d40b2c6E+0x199>
   2c0d9:	48 8d 3d 90 1c 01 00 	lea    0x11c90(%rip),%rdi        # 3dd70 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x1410>
   2c0e0:	48 8d 15 e1 b7 21 00 	lea    0x21b7e1(%rip),%rdx        # 2478c8 <__init_array_end+0x18b8>
   2c0e7:	be 26 00 00 00       	mov    $0x26,%esi
   2c0ec:	e8 cf 73 ff ff       	callq  234c0 <_ZN3std9panicking11begin_panic17hc5f3eabb2c219d56E>
   2c0f1:	eb 46                	jmp    2c139 <_ZN3std10sys_common11thread_info3set17h5184dcec2d40b2c6E+0x199>
   2c0f3:	48 8d 3d e6 e3 00 00 	lea    0xe3e6(%rip),%rdi        # 3a4e0 <_ZN4core7unicode12unicode_data2cc19BITSET_INDEX_CHUNKS17h8a1f39cd536e9344E+0x20>
   2c0fa:	48 8d 0d df ac 21 00 	lea    0x21acdf(%rip),%rcx        # 246de0 <__init_array_end+0xdd0>
   2c101:	4c 8d 05 f8 ac 21 00 	lea    0x21acf8(%rip),%r8        # 246e00 <__init_array_end+0xdf0>
   2c108:	48 89 e2             	mov    %rsp,%rdx
   2c10b:	be 10 00 00 00       	mov    $0x10,%esi
   2c110:	e8 4b db fd ff       	callq  9c60 <_ZN4core6option18expect_none_failed17he0fec195c6e4c2ecE>
   2c115:	eb 22                	jmp    2c139 <_ZN3std10sys_common11thread_info3set17h5184dcec2d40b2c6E+0x199>
   2c117:	48 8d 3d a2 15 01 00 	lea    0x115a2(%rip),%rdi        # 3d6c0 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0xd60>
   2c11e:	48 8d 0d cb b1 21 00 	lea    0x21b1cb(%rip),%rcx        # 2472f0 <__init_array_end+0x12e0>
   2c125:	4c 8d 05 e4 b1 21 00 	lea    0x21b1e4(%rip),%r8        # 247310 <__init_array_end+0x1300>
   2c12c:	48 89 e2             	mov    %rsp,%rdx
   2c12f:	be 46 00 00 00       	mov    $0x46,%esi
   2c134:	e8 27 db fd ff       	callq  9c60 <_ZN4core6option18expect_none_failed17he0fec195c6e4c2ecE>
   2c139:	0f 0b                	ud2    
   2c13b:	f0 49 83 2e 01       	lock subq $0x1,(%r14)
   2c140:	75 0a                	jne    2c14c <_ZN3std10sys_common11thread_info3set17h5184dcec2d40b2c6E+0x1ac>
   2c142:	48 8d 7c 24 28       	lea    0x28(%rsp),%rdi
   2c147:	e8 c4 70 ff ff       	callq  23210 <_ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17h671cd2375e6e21b7E>
   2c14c:	48 8d 3d 6d 15 01 00 	lea    0x1156d(%rip),%rdi        # 3d6c0 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0xd60>
   2c153:	48 8d 0d 96 b1 21 00 	lea    0x21b196(%rip),%rcx        # 2472f0 <__init_array_end+0x12e0>
   2c15a:	4c 8d 05 af b1 21 00 	lea    0x21b1af(%rip),%r8        # 247310 <__init_array_end+0x1300>
   2c161:	48 89 e2             	mov    %rsp,%rdx
   2c164:	be 46 00 00 00       	mov    $0x46,%esi
   2c169:	e8 f2 da fd ff       	callq  9c60 <_ZN4core6option18expect_none_failed17he0fec195c6e4c2ecE>
   2c16e:	0f 0b                	ud2    
   2c170:	48 89 c3             	mov    %rax,%rbx
   2c173:	48 8d 7c 24 30       	lea    0x30(%rsp),%rdi
   2c178:	e8 03 71 ff ff       	callq  23280 <_ZN4core3ptr13drop_in_place17h18d5975e844cd51eE>
   2c17d:	48 89 df             	mov    %rbx,%rdi
   2c180:	e8 1b 7f fd ff       	callq  40a0 <_Unwind_Resume@plt>
   2c185:	0f 0b                	ud2    
   2c187:	48 89 c3             	mov    %rax,%rbx
   2c18a:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
   2c18f:	e8 2c 00 00 00       	callq  2c1c0 <_ZN4core3ptr13drop_in_place17h0b0c9c9dbcb8881cE>
   2c194:	48 89 df             	mov    %rbx,%rdi
   2c197:	e8 04 7f fd ff       	callq  40a0 <_Unwind_Resume@plt>
   2c19c:	0f 0b                	ud2    
   2c19e:	48 89 c3             	mov    %rax,%rbx
   2c1a1:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   2c1a6:	e8 d5 d4 ff ff       	callq  29680 <_ZN4core3ptr13drop_in_place17hda96a1da1fd89bf6E>
   2c1ab:	48 89 df             	mov    %rbx,%rdi
   2c1ae:	e8 ed 7e fd ff       	callq  40a0 <_Unwind_Resume@plt>
   2c1b3:	0f 0b                	ud2    
   2c1b5:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2c1bc:	00 00 00 
   2c1bf:	90                   	nop

000000000002c1c0 <_ZN4core3ptr13drop_in_place17h0b0c9c9dbcb8881cE>:
   2c1c0:	48 8b 47 18          	mov    0x18(%rdi),%rax
   2c1c4:	f0 48 83 28 01       	lock subq $0x1,(%rax)
   2c1c9:	75 09                	jne    2c1d4 <_ZN4core3ptr13drop_in_place17h0b0c9c9dbcb8881cE+0x14>
   2c1cb:	48 83 c7 18          	add    $0x18,%rdi
   2c1cf:	e9 3c 70 ff ff       	jmpq   23210 <_ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17h671cd2375e6e21b7E>
   2c1d4:	c3                   	retq   
   2c1d5:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2c1dc:	00 00 00 
   2c1df:	90                   	nop

000000000002c1e0 <_ZN3std5alloc24default_alloc_error_hook17h36b7bb6c8cc35134E>:
   2c1e0:	41 56                	push   %r14
   2c1e2:	53                   	push   %rbx
   2c1e3:	48 83 ec 68          	sub    $0x68,%rsp
   2c1e7:	48 89 7c 24 10       	mov    %rdi,0x10(%rsp)
   2c1ec:	48 8d 44 24 10       	lea    0x10(%rsp),%rax
   2c1f1:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   2c1f6:	48 8d 05 83 b2 fd ff 	lea    -0x24d7d(%rip),%rax        # 7480 <_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$u64$GT$3fmt17h29103e8b1c853837E>
   2c1fd:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   2c202:	48 8d 05 d7 b6 21 00 	lea    0x21b6d7(%rip),%rax        # 2478e0 <__init_array_end+0x18d0>
   2c209:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   2c20e:	48 c7 44 24 40 02 00 	movq   $0x2,0x40(%rsp)
   2c215:	00 00 
   2c217:	48 c7 44 24 48 00 00 	movq   $0x0,0x48(%rsp)
   2c21e:	00 00 
   2c220:	48 8d 44 24 18       	lea    0x18(%rsp),%rax
   2c225:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
   2c22a:	48 c7 44 24 60 01 00 	movq   $0x1,0x60(%rsp)
   2c231:	00 00 
   2c233:	48 8d 7c 24 28       	lea    0x28(%rsp),%rdi
   2c238:	48 8d 74 24 08       	lea    0x8(%rsp),%rsi
   2c23d:	48 8d 54 24 38       	lea    0x38(%rsp),%rdx
   2c242:	e8 19 8a ff ff       	callq  24c60 <_ZN3std2io5Write9write_fmt17h51ff6798850372b7E>
   2c247:	8a 44 24 28          	mov    0x28(%rsp),%al
   2c24b:	3c 03                	cmp    $0x3,%al
   2c24d:	77 0c                	ja     2c25b <_ZN3std5alloc24default_alloc_error_hook17h36b7bb6c8cc35134E+0x7b>
   2c24f:	3c 02                	cmp    $0x2,%al
   2c251:	74 08                	je     2c25b <_ZN3std5alloc24default_alloc_error_hook17h36b7bb6c8cc35134E+0x7b>
   2c253:	48 83 c4 68          	add    $0x68,%rsp
   2c257:	5b                   	pop    %rbx
   2c258:	41 5e                	pop    %r14
   2c25a:	c3                   	retq   
   2c25b:	48 8b 5c 24 30       	mov    0x30(%rsp),%rbx
   2c260:	48 8b 3b             	mov    (%rbx),%rdi
   2c263:	48 8b 43 08          	mov    0x8(%rbx),%rax
   2c267:	ff 10                	callq  *(%rax)
   2c269:	48 8b 43 08          	mov    0x8(%rbx),%rax
   2c26d:	48 83 78 08 00       	cmpq   $0x0,0x8(%rax)
   2c272:	74 08                	je     2c27c <_ZN3std5alloc24default_alloc_error_hook17h36b7bb6c8cc35134E+0x9c>
   2c274:	48 8b 3b             	mov    (%rbx),%rdi
   2c277:	e8 94 91 fd ff       	callq  5410 <__rust_dealloc>
   2c27c:	48 89 df             	mov    %rbx,%rdi
   2c27f:	e8 8c 91 fd ff       	callq  5410 <__rust_dealloc>
   2c284:	48 83 c4 68          	add    $0x68,%rsp
   2c288:	5b                   	pop    %rbx
   2c289:	41 5e                	pop    %r14
   2c28b:	c3                   	retq   
   2c28c:	49 89 c6             	mov    %rax,%r14
   2c28f:	48 8b 3b             	mov    (%rbx),%rdi
   2c292:	48 8b 73 08          	mov    0x8(%rbx),%rsi
   2c296:	e8 75 86 ff ff       	callq  24910 <_ZN5alloc5alloc8box_free17h3741427eaa5804e6E>
   2c29b:	48 89 df             	mov    %rbx,%rdi
   2c29e:	e8 8d 8b ff ff       	callq  24e30 <_ZN5alloc5alloc8box_free17h20e506aa40102463E>
   2c2a3:	4c 89 f7             	mov    %r14,%rdi
   2c2a6:	e8 f5 7d fd ff       	callq  40a0 <_Unwind_Resume@plt>
   2c2ab:	0f 0b                	ud2    
   2c2ad:	0f 1f 00             	nopl   (%rax)

000000000002c2b0 <rust_oom>:
   2c2b0:	50                   	push   %rax
   2c2b1:	48 8b 05 48 bf 21 00 	mov    0x21bf48(%rip),%rax        # 248200 <_ZN3std5alloc4HOOK17h5f0315b95dc9ee42E>
   2c2b8:	48 85 c0             	test   %rax,%rax
   2c2bb:	48 8d 0d 1e ff ff ff 	lea    -0xe2(%rip),%rcx        # 2c1e0 <_ZN3std5alloc24default_alloc_error_hook17h36b7bb6c8cc35134E>
   2c2c2:	48 0f 45 c8          	cmovne %rax,%rcx
   2c2c6:	ff d1                	callq  *%rcx
   2c2c8:	e8 d3 7e ff ff       	callq  241a0 <_ZN3std3sys4unix14abort_internal17h7f749c8888a2e168E>
   2c2cd:	0f 0b                	ud2    
   2c2cf:	90                   	nop

000000000002c2d0 <__rust_drop_panic>:
   2c2d0:	48 83 ec 38          	sub    $0x38,%rsp
   2c2d4:	48 8d 05 25 b6 21 00 	lea    0x21b625(%rip),%rax        # 247900 <__init_array_end+0x18f0>
   2c2db:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   2c2e0:	48 c7 44 24 10 01 00 	movq   $0x1,0x10(%rsp)
   2c2e7:	00 00 
   2c2e9:	48 c7 44 24 18 00 00 	movq   $0x0,0x18(%rsp)
   2c2f0:	00 00 
   2c2f2:	48 8d 05 3f 11 01 00 	lea    0x1113f(%rip),%rax        # 3d438 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0xad8>
   2c2f9:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   2c2fe:	48 c7 44 24 30 00 00 	movq   $0x0,0x30(%rsp)
   2c305:	00 00 
   2c307:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   2c30c:	e8 2f 7e ff ff       	callq  24140 <_ZN3std10sys_common4util5abort17hf0f03bd92b6237cbE>
   2c311:	0f 0b                	ud2    
   2c313:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2c31a:	00 00 00 
   2c31d:	0f 1f 00             	nopl   (%rax)

000000000002c320 <_ZN3std3sys4unix14stack_overflow3imp14signal_handler17h6d817a4444c19957E>:
   2c320:	55                   	push   %rbp
   2c321:	41 57                	push   %r15
   2c323:	41 56                	push   %r14
   2c325:	53                   	push   %rbx
   2c326:	48 81 ec c8 00 00 00 	sub    $0xc8,%rsp
   2c32d:	49 89 f7             	mov    %rsi,%r15
   2c330:	41 89 fe             	mov    %edi,%r14d
   2c333:	64 48 83 3c 25 60 ff 	cmpq   $0x1,%fs:0xffffffffffffff60
   2c33a:	ff ff 01 
   2c33d:	0f 85 59 01 00 00    	jne    2c49c <_ZN3std3sys4unix14stack_overflow3imp14signal_handler17h6d817a4444c19957E+0x17c>
   2c343:	64 48 8b 04 25 00 00 	mov    %fs:0x0,%rax
   2c34a:	00 00 
   2c34c:	48 8d a8 68 ff ff ff 	lea    -0x98(%rax),%rbp
   2c353:	48 8b 45 00          	mov    0x0(%rbp),%rax
   2c357:	48 8d 48 01          	lea    0x1(%rax),%rcx
   2c35b:	48 85 c9             	test   %rcx,%rcx
   2c35e:	0f 8e 94 01 00 00    	jle    2c4f8 <_ZN3std3sys4unix14stack_overflow3imp14signal_handler17h6d817a4444c19957E+0x1d8>
   2c364:	48 83 7d 08 02       	cmpq   $0x2,0x8(%rbp)
   2c369:	75 7a                	jne    2c3e5 <_ZN3std3sys4unix14stack_overflow3imp14signal_handler17h6d817a4444c19957E+0xc5>
   2c36b:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
   2c372:	00 00 
   2c374:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
   2c379:	e8 e2 6b ff ff       	callq  22f60 <_ZN3std6thread6Thread3new17h4aa6d776ccf79e9dE>
   2c37e:	0f 10 44 24 10       	movups 0x10(%rsp),%xmm0
   2c383:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
   2c38a:	00 00 
   2c38c:	0f 11 44 24 18       	movups %xmm0,0x18(%rsp)
   2c391:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   2c396:	48 83 7d 00 00       	cmpq   $0x0,0x0(%rbp)
   2c39b:	0f 85 bd 01 00 00    	jne    2c55e <_ZN3std3sys4unix14stack_overflow3imp14signal_handler17h6d817a4444c19957E+0x23e>
   2c3a1:	48 8d 5d 08          	lea    0x8(%rbp),%rbx
   2c3a5:	48 c7 45 00 ff ff ff 	movq   $0xffffffffffffffff,0x0(%rbp)
   2c3ac:	ff 
   2c3ad:	48 83 7d 08 02       	cmpq   $0x2,0x8(%rbp)
   2c3b2:	74 14                	je     2c3c8 <_ZN3std3sys4unix14stack_overflow3imp14signal_handler17h6d817a4444c19957E+0xa8>
   2c3b4:	48 8b 45 20          	mov    0x20(%rbp),%rax
   2c3b8:	f0 48 83 28 01       	lock subq $0x1,(%rax)
   2c3bd:	75 09                	jne    2c3c8 <_ZN3std3sys4unix14stack_overflow3imp14signal_handler17h6d817a4444c19957E+0xa8>
   2c3bf:	48 8d 7d 20          	lea    0x20(%rbp),%rdi
   2c3c3:	e8 48 6e ff ff       	callq  23210 <_ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17h671cd2375e6e21b7E>
   2c3c8:	0f 10 44 24 10       	movups 0x10(%rsp),%xmm0
   2c3cd:	0f 10 4c 24 20       	movups 0x20(%rsp),%xmm1
   2c3d2:	0f 11 4b 10          	movups %xmm1,0x10(%rbx)
   2c3d6:	0f 11 03             	movups %xmm0,(%rbx)
   2c3d9:	48 8b 45 00          	mov    0x0(%rbp),%rax
   2c3dd:	48 83 c0 01          	add    $0x1,%rax
   2c3e1:	48 89 45 00          	mov    %rax,0x0(%rbp)
   2c3e5:	48 85 c0             	test   %rax,%rax
   2c3e8:	0f 85 30 01 00 00    	jne    2c51e <_ZN3std3sys4unix14stack_overflow3imp14signal_handler17h6d817a4444c19957E+0x1fe>
   2c3ee:	48 c7 45 00 ff ff ff 	movq   $0xffffffffffffffff,0x0(%rbp)
   2c3f5:	ff 
   2c3f6:	48 8b 45 08          	mov    0x8(%rbp),%rax
   2c3fa:	48 83 f8 01          	cmp    $0x1,%rax
   2c3fe:	74 0e                	je     2c40e <_ZN3std3sys4unix14stack_overflow3imp14signal_handler17h6d817a4444c19957E+0xee>
   2c400:	48 83 f8 02          	cmp    $0x2,%rax
   2c404:	0f 84 3a 01 00 00    	je     2c544 <_ZN3std3sys4unix14stack_overflow3imp14signal_handler17h6d817a4444c19957E+0x224>
   2c40a:	31 c9                	xor    %ecx,%ecx
   2c40c:	eb 0d                	jmp    2c41b <_ZN3std3sys4unix14stack_overflow3imp14signal_handler17h6d817a4444c19957E+0xfb>
   2c40e:	48 8b 55 10          	mov    0x10(%rbp),%rdx
   2c412:	48 8b 45 18          	mov    0x18(%rbp),%rax
   2c416:	b9 01 00 00 00       	mov    $0x1,%ecx
   2c41b:	48 c7 45 00 00 00 00 	movq   $0x0,0x0(%rbp)
   2c422:	00 
   2c423:	48 85 c9             	test   %rcx,%rcx
   2c426:	48 0f 44 c1          	cmove  %rcx,%rax
   2c42a:	48 0f 44 d1          	cmove  %rcx,%rdx
   2c42e:	49 8b 4f 10          	mov    0x10(%r15),%rcx
   2c432:	48 39 ca             	cmp    %rcx,%rdx
   2c435:	77 05                	ja     2c43c <_ZN3std3sys4unix14stack_overflow3imp14signal_handler17h6d817a4444c19957E+0x11c>
   2c437:	48 39 c1             	cmp    %rax,%rcx
   2c43a:	72 78                	jb     2c4b4 <_ZN3std3sys4unix14stack_overflow3imp14signal_handler17h6d817a4444c19957E+0x194>
   2c43c:	0f 57 c0             	xorps  %xmm0,%xmm0
   2c43f:	0f 29 84 24 90 00 00 	movaps %xmm0,0x90(%rsp)
   2c446:	00 
   2c447:	0f 29 84 24 80 00 00 	movaps %xmm0,0x80(%rsp)
   2c44e:	00 
   2c44f:	0f 29 44 24 70       	movaps %xmm0,0x70(%rsp)
   2c454:	0f 29 44 24 60       	movaps %xmm0,0x60(%rsp)
   2c459:	0f 29 44 24 50       	movaps %xmm0,0x50(%rsp)
   2c45e:	0f 29 44 24 40       	movaps %xmm0,0x40(%rsp)
   2c463:	0f 29 44 24 30       	movaps %xmm0,0x30(%rsp)
   2c468:	0f 29 44 24 20       	movaps %xmm0,0x20(%rsp)
   2c46d:	0f 29 44 24 10       	movaps %xmm0,0x10(%rsp)
   2c472:	48 c7 84 24 a0 00 00 	movq   $0x0,0xa0(%rsp)
   2c479:	00 00 00 00 00 
   2c47e:	48 8d 74 24 10       	lea    0x10(%rsp),%rsi
   2c483:	44 89 f7             	mov    %r14d,%edi
   2c486:	31 d2                	xor    %edx,%edx
   2c488:	ff 15 42 b9 21 00    	callq  *0x21b942(%rip)        # 247dd0 <sigaction@GLIBC_2.2.5>
   2c48e:	48 81 c4 c8 00 00 00 	add    $0xc8,%rsp
   2c495:	5b                   	pop    %rbx
   2c496:	41 5e                	pop    %r14
   2c498:	41 5f                	pop    %r15
   2c49a:	5d                   	pop    %rbp
   2c49b:	c3                   	retq   
   2c49c:	e8 ef 67 ff ff       	callq  22c90 <_ZN3std6thread5local4fast12Key$LT$T$GT$14try_initialize17h181e6352b875e74bE>
   2c4a1:	48 89 c5             	mov    %rax,%rbp
   2c4a4:	48 85 c0             	test   %rax,%rax
   2c4a7:	0f 85 a6 fe ff ff    	jne    2c353 <_ZN3std3sys4unix14stack_overflow3imp14signal_handler17h6d817a4444c19957E+0x33>
   2c4ad:	31 c9                	xor    %ecx,%ecx
   2c4af:	e9 6f ff ff ff       	jmpq   2c423 <_ZN3std3sys4unix14stack_overflow3imp14signal_handler17h6d817a4444c19957E+0x103>
   2c4b4:	e8 87 01 00 00       	callq  2c640 <_ZN3std10sys_common4util15report_overflow17h0010901a4da462eeE>
   2c4b9:	48 8d 05 f8 b4 21 00 	lea    0x21b4f8(%rip),%rax        # 2479b8 <__init_array_end+0x19a8>
   2c4c0:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   2c4c5:	48 c7 44 24 18 01 00 	movq   $0x1,0x18(%rsp)
   2c4cc:	00 00 
   2c4ce:	48 c7 44 24 20 00 00 	movq   $0x0,0x20(%rsp)
   2c4d5:	00 00 
   2c4d7:	48 8d 05 5a 0f 01 00 	lea    0x10f5a(%rip),%rax        # 3d438 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0xad8>
   2c4de:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   2c4e3:	48 c7 44 24 38 00 00 	movq   $0x0,0x38(%rsp)
   2c4ea:	00 00 
   2c4ec:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
   2c4f1:	e8 4a 7c ff ff       	callq  24140 <_ZN3std10sys_common4util5abort17hf0f03bd92b6237cbE>
   2c4f6:	0f 0b                	ud2    
   2c4f8:	48 8d 3d 0a 0e 01 00 	lea    0x10e0a(%rip),%rdi        # 3d309 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x9a9>
   2c4ff:	48 8d 0d a2 a8 21 00 	lea    0x21a8a2(%rip),%rcx        # 246da8 <__init_array_end+0xd98>
   2c506:	4c 8d 05 bb a8 21 00 	lea    0x21a8bb(%rip),%r8        # 246dc8 <__init_array_end+0xdb8>
   2c50d:	48 8d 54 24 08       	lea    0x8(%rsp),%rdx
   2c512:	be 18 00 00 00       	mov    $0x18,%esi
   2c517:	e8 44 d7 fd ff       	callq  9c60 <_ZN4core6option18expect_none_failed17he0fec195c6e4c2ecE>
   2c51c:	eb 64                	jmp    2c582 <_ZN3std3sys4unix14stack_overflow3imp14signal_handler17h6d817a4444c19957E+0x262>
   2c51e:	48 8d 3d bb df 00 00 	lea    0xdfbb(%rip),%rdi        # 3a4e0 <_ZN4core7unicode12unicode_data2cc19BITSET_INDEX_CHUNKS17h8a1f39cd536e9344E+0x20>
   2c525:	48 8d 0d b4 a8 21 00 	lea    0x21a8b4(%rip),%rcx        # 246de0 <__init_array_end+0xdd0>
   2c52c:	4c 8d 05 cd a8 21 00 	lea    0x21a8cd(%rip),%r8        # 246e00 <__init_array_end+0xdf0>
   2c533:	48 8d 54 24 08       	lea    0x8(%rsp),%rdx
   2c538:	be 10 00 00 00       	mov    $0x10,%esi
   2c53d:	e8 1e d7 fd ff       	callq  9c60 <_ZN4core6option18expect_none_failed17he0fec195c6e4c2ecE>
   2c542:	eb 3e                	jmp    2c582 <_ZN3std3sys4unix14stack_overflow3imp14signal_handler17h6d817a4444c19957E+0x262>
   2c544:	48 8d 3d d6 0d 01 00 	lea    0x10dd6(%rip),%rdi        # 3d321 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x9c1>
   2c54b:	48 8d 15 c6 a8 21 00 	lea    0x21a8c6(%rip),%rdx        # 246e18 <__init_array_end+0xe08>
   2c552:	be 2b 00 00 00       	mov    $0x2b,%esi
   2c557:	e8 54 ae fd ff       	callq  73b0 <_ZN4core9panicking5panic17h6861470adfbddef8E>
   2c55c:	eb 24                	jmp    2c582 <_ZN3std3sys4unix14stack_overflow3imp14signal_handler17h6d817a4444c19957E+0x262>
   2c55e:	48 8d 3d 7b df 00 00 	lea    0xdf7b(%rip),%rdi        # 3a4e0 <_ZN4core7unicode12unicode_data2cc19BITSET_INDEX_CHUNKS17h8a1f39cd536e9344E+0x20>
   2c565:	48 8d 0d 74 a8 21 00 	lea    0x21a874(%rip),%rcx        # 246de0 <__init_array_end+0xdd0>
   2c56c:	4c 8d 05 8d a8 21 00 	lea    0x21a88d(%rip),%r8        # 246e00 <__init_array_end+0xdf0>
   2c573:	48 8d 54 24 08       	lea    0x8(%rsp),%rdx
   2c578:	be 10 00 00 00       	mov    $0x10,%esi
   2c57d:	e8 de d6 fd ff       	callq  9c60 <_ZN4core6option18expect_none_failed17he0fec195c6e4c2ecE>
   2c582:	0f 0b                	ud2    
   2c584:	48 89 c3             	mov    %rax,%rbx
   2c587:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
   2c58c:	e8 ef 6c ff ff       	callq  23280 <_ZN4core3ptr13drop_in_place17h18d5975e844cd51eE>
   2c591:	48 89 df             	mov    %rbx,%rdi
   2c594:	e8 07 7b fd ff       	callq  40a0 <_Unwind_Resume@plt>
   2c599:	0f 0b                	ud2    
   2c59b:	48 89 c3             	mov    %rax,%rbx
   2c59e:	48 89 ef             	mov    %rbp,%rdi
   2c5a1:	e8 fa 6c ff ff       	callq  232a0 <_ZN4core3ptr13drop_in_place17h0a2d35d27e5f386dE>
   2c5a6:	48 89 df             	mov    %rbx,%rdi
   2c5a9:	e8 f2 7a fd ff       	callq  40a0 <_Unwind_Resume@plt>
   2c5ae:	0f 0b                	ud2    
   2c5b0:	48 89 c3             	mov    %rax,%rbx
   2c5b3:	48 89 df             	mov    %rbx,%rdi
   2c5b6:	e8 e5 7a fd ff       	callq  40a0 <_Unwind_Resume@plt>
   2c5bb:	0f 0b                	ud2    
   2c5bd:	48 89 c3             	mov    %rax,%rbx
   2c5c0:	48 89 df             	mov    %rbx,%rdi
   2c5c3:	e8 d8 7a fd ff       	callq  40a0 <_Unwind_Resume@plt>
   2c5c8:	0f 0b                	ud2    
   2c5ca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000002c5d0 <_ZN4core3ptr13drop_in_place17h900fcba381d9a228E>:
   2c5d0:	41 56                	push   %r14
   2c5d2:	53                   	push   %rbx
   2c5d3:	50                   	push   %rax
   2c5d4:	83 3f 00             	cmpl   $0x0,(%rdi)
   2c5d7:	74 28                	je     2c601 <_ZN4core3ptr13drop_in_place17h900fcba381d9a228E+0x31>
   2c5d9:	48 89 fb             	mov    %rdi,%rbx
   2c5dc:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
   2c5e0:	48 8b 43 10          	mov    0x10(%rbx),%rax
   2c5e4:	ff 10                	callq  *(%rax)
   2c5e6:	48 8b 43 10          	mov    0x10(%rbx),%rax
   2c5ea:	48 83 78 08 00       	cmpq   $0x0,0x8(%rax)
   2c5ef:	74 10                	je     2c601 <_ZN4core3ptr13drop_in_place17h900fcba381d9a228E+0x31>
   2c5f1:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
   2c5f5:	48 83 c4 08          	add    $0x8,%rsp
   2c5f9:	5b                   	pop    %rbx
   2c5fa:	41 5e                	pop    %r14
   2c5fc:	e9 0f 8e fd ff       	jmpq   5410 <__rust_dealloc>
   2c601:	48 83 c4 08          	add    $0x8,%rsp
   2c605:	5b                   	pop    %rbx
   2c606:	41 5e                	pop    %r14
   2c608:	c3                   	retq   
   2c609:	49 89 c6             	mov    %rax,%r14
   2c60c:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
   2c610:	48 8b 73 10          	mov    0x10(%rbx),%rsi
   2c614:	e8 f7 82 ff ff       	callq  24910 <_ZN5alloc5alloc8box_free17h3741427eaa5804e6E>
   2c619:	4c 89 f7             	mov    %r14,%rdi
   2c61c:	e8 7f 7a fd ff       	callq  40a0 <_Unwind_Resume@plt>
   2c621:	0f 0b                	ud2    
   2c623:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2c62a:	00 00 00 
   2c62d:	0f 1f 00             	nopl   (%rax)

000000000002c630 <_ZN3std10sys_common9backtrace28__rust_begin_short_backtrace17hcbc62328ecb87c1cE>:
   2c630:	ff 66 18             	jmpq   *0x18(%rsi)
   2c633:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2c63a:	00 00 00 
   2c63d:	0f 1f 00             	nopl   (%rax)

000000000002c640 <_ZN3std10sys_common4util15report_overflow17h0010901a4da462eeE>:
   2c640:	41 56                	push   %r14
   2c642:	53                   	push   %rbx
   2c643:	48 83 ec 78          	sub    $0x78,%rsp
   2c647:	64 48 83 3c 25 60 ff 	cmpq   $0x1,%fs:0xffffffffffffff60
   2c64e:	ff ff 01 
   2c651:	0f 85 16 01 00 00    	jne    2c76d <_ZN3std10sys_common4util15report_overflow17h0010901a4da462eeE+0x12d>
   2c657:	64 48 8b 04 25 00 00 	mov    %fs:0x0,%rax
   2c65e:	00 00 
   2c660:	48 8d b8 68 ff ff ff 	lea    -0x98(%rax),%rdi
   2c667:	e8 54 67 ff ff       	callq  22dc0 <_ZN3std10sys_common11thread_info10ThreadInfo4with28_$u7b$$u7b$closure$u7d$$u7d$17hc3ac9120fadfa13eE>
   2c66c:	48 89 c3             	mov    %rax,%rbx
   2c66f:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   2c674:	48 83 c0 10          	add    $0x10,%rax
   2c678:	48 8b 4b 10          	mov    0x10(%rbx),%rcx
   2c67c:	48 85 c9             	test   %rcx,%rcx
   2c67f:	48 0f 44 c1          	cmove  %rcx,%rax
   2c683:	74 13                	je     2c698 <_ZN3std10sys_common4util15report_overflow17h0010901a4da462eeE+0x58>
   2c685:	48 8b 78 08          	mov    0x8(%rax),%rdi
   2c689:	48 83 ef 01          	sub    $0x1,%rdi
   2c68d:	0f 82 0e 01 00 00    	jb     2c7a1 <_ZN3std10sys_common4util15report_overflow17h0010901a4da462eeE+0x161>
   2c693:	48 8b 00             	mov    (%rax),%rax
   2c696:	eb 02                	jmp    2c69a <_ZN3std10sys_common4util15report_overflow17h0010901a4da462eeE+0x5a>
   2c698:	31 c0                	xor    %eax,%eax
   2c69a:	48 85 c0             	test   %rax,%rax
   2c69d:	b9 09 00 00 00       	mov    $0x9,%ecx
   2c6a2:	48 0f 45 cf          	cmovne %rdi,%rcx
   2c6a6:	48 8d 15 68 0f 01 00 	lea    0x10f68(%rip),%rdx        # 3d615 <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0xcb5>
   2c6ad:	48 0f 45 d0          	cmovne %rax,%rdx
   2c6b1:	48 89 54 24 28       	mov    %rdx,0x28(%rsp)
   2c6b6:	48 89 4c 24 30       	mov    %rcx,0x30(%rsp)
   2c6bb:	48 8d 44 24 28       	lea    0x28(%rsp),%rax
   2c6c0:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   2c6c5:	48 8d 05 34 8c ff ff 	lea    -0x73cc(%rip),%rax        # 25300 <_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h9716022a15e5b13cE>
   2c6cc:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   2c6d1:	48 8d 05 f0 b2 21 00 	lea    0x21b2f0(%rip),%rax        # 2479c8 <__init_array_end+0x19b8>
   2c6d8:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
   2c6dd:	48 c7 44 24 50 02 00 	movq   $0x2,0x50(%rsp)
   2c6e4:	00 00 
   2c6e6:	48 c7 44 24 58 00 00 	movq   $0x0,0x58(%rsp)
   2c6ed:	00 00 
   2c6ef:	48 8d 44 24 18       	lea    0x18(%rsp),%rax
   2c6f4:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
   2c6f9:	48 c7 44 24 70 01 00 	movq   $0x1,0x70(%rsp)
   2c700:	00 00 
   2c702:	48 8d 7c 24 38       	lea    0x38(%rsp),%rdi
   2c707:	48 8d 74 24 08       	lea    0x8(%rsp),%rsi
   2c70c:	48 8d 54 24 48       	lea    0x48(%rsp),%rdx
   2c711:	e8 4a 85 ff ff       	callq  24c60 <_ZN3std2io5Write9write_fmt17h51ff6798850372b7E>
   2c716:	8a 44 24 38          	mov    0x38(%rsp),%al
   2c71a:	3c 03                	cmp    $0x3,%al
   2c71c:	77 1d                	ja     2c73b <_ZN3std10sys_common4util15report_overflow17h0010901a4da462eeE+0xfb>
   2c71e:	3c 02                	cmp    $0x2,%al
   2c720:	74 19                	je     2c73b <_ZN3std10sys_common4util15report_overflow17h0010901a4da462eeE+0xfb>
   2c722:	f0 48 83 2b 01       	lock subq $0x1,(%rbx)
   2c727:	75 0a                	jne    2c733 <_ZN3std10sys_common4util15report_overflow17h0010901a4da462eeE+0xf3>
   2c729:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
   2c72e:	e8 dd 6a ff ff       	callq  23210 <_ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17h671cd2375e6e21b7E>
   2c733:	48 83 c4 78          	add    $0x78,%rsp
   2c737:	5b                   	pop    %rbx
   2c738:	41 5e                	pop    %r14
   2c73a:	c3                   	retq   
   2c73b:	4c 8b 74 24 40       	mov    0x40(%rsp),%r14
   2c740:	49 8b 3e             	mov    (%r14),%rdi
   2c743:	49 8b 46 08          	mov    0x8(%r14),%rax
   2c747:	ff 10                	callq  *(%rax)
   2c749:	49 8b 46 08          	mov    0x8(%r14),%rax
   2c74d:	48 83 78 08 00       	cmpq   $0x0,0x8(%rax)
   2c752:	74 08                	je     2c75c <_ZN3std10sys_common4util15report_overflow17h0010901a4da462eeE+0x11c>
   2c754:	49 8b 3e             	mov    (%r14),%rdi
   2c757:	e8 b4 8c fd ff       	callq  5410 <__rust_dealloc>
   2c75c:	4c 89 f7             	mov    %r14,%rdi
   2c75f:	e8 ac 8c fd ff       	callq  5410 <__rust_dealloc>
   2c764:	f0 48 83 2b 01       	lock subq $0x1,(%rbx)
   2c769:	74 be                	je     2c729 <_ZN3std10sys_common4util15report_overflow17h0010901a4da462eeE+0xe9>
   2c76b:	eb c6                	jmp    2c733 <_ZN3std10sys_common4util15report_overflow17h0010901a4da462eeE+0xf3>
   2c76d:	e8 1e 65 ff ff       	callq  22c90 <_ZN3std6thread5local4fast12Key$LT$T$GT$14try_initialize17h181e6352b875e74bE>
   2c772:	48 89 c7             	mov    %rax,%rdi
   2c775:	48 85 c0             	test   %rax,%rax
   2c778:	0f 85 e9 fe ff ff    	jne    2c667 <_ZN3std10sys_common4util15report_overflow17h0010901a4da462eeE+0x27>
   2c77e:	48 c7 44 24 48 00 00 	movq   $0x0,0x48(%rsp)
   2c785:	00 00 
   2c787:	48 8d 3d 1d 0b 01 00 	lea    0x10b1d(%rip),%rdi        # 3d2ab <_ZN4core7unicode12unicode_data2cc6BITSET17h5201257bcf8f09faE+0x94b>
   2c78e:	48 8d 15 fb a5 21 00 	lea    0x21a5fb(%rip),%rdx        # 246d90 <__init_array_end+0xd80>
   2c795:	be 5e 00 00 00       	mov    $0x5e,%esi
   2c79a:	e8 51 d4 fd ff       	callq  9bf0 <_ZN4core6option13expect_failed17h76ad4c74f3ea7214E>
   2c79f:	eb 07                	jmp    2c7a8 <_ZN3std10sys_common4util15report_overflow17h0010901a4da462eeE+0x168>
   2c7a1:	31 f6                	xor    %esi,%esi
   2c7a3:	e8 28 b4 fd ff       	callq  7bd0 <_ZN4core5slice20slice_index_len_fail17h52736412c1ce1871E>
   2c7a8:	0f 0b                	ud2    
   2c7aa:	48 89 c3             	mov    %rax,%rbx
   2c7ad:	48 8d 7c 24 48       	lea    0x48(%rsp),%rdi
   2c7b2:	e8 e9 65 ff ff       	callq  22da0 <_ZN4core3ptr13drop_in_place17ha26c711544338914E>
   2c7b7:	48 89 df             	mov    %rbx,%rdi
   2c7ba:	e8 e1 78 fd ff       	callq  40a0 <_Unwind_Resume@plt>
   2c7bf:	0f 0b                	ud2    
   2c7c1:	48 89 c3             	mov    %rax,%rbx
   2c7c4:	49 8b 3e             	mov    (%r14),%rdi
   2c7c7:	49 8b 76 08          	mov    0x8(%r14),%rsi
   2c7cb:	e8 40 81 ff ff       	callq  24910 <_ZN5alloc5alloc8box_free17h3741427eaa5804e6E>
   2c7d0:	4c 89 f7             	mov    %r14,%rdi
   2c7d3:	e8 58 86 ff ff       	callq  24e30 <_ZN5alloc5alloc8box_free17h20e506aa40102463E>
   2c7d8:	eb 03                	jmp    2c7dd <_ZN3std10sys_common4util15report_overflow17h0010901a4da462eeE+0x19d>
   2c7da:	48 89 c3             	mov    %rax,%rbx
   2c7dd:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
   2c7e2:	e8 99 ce ff ff       	callq  29680 <_ZN4core3ptr13drop_in_place17hda96a1da1fd89bf6E>
   2c7e7:	48 89 df             	mov    %rbx,%rdi
   2c7ea:	e8 b1 78 fd ff       	callq  40a0 <_Unwind_Resume@plt>
   2c7ef:	0f 0b                	ud2    
   2c7f1:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2c7f8:	00 00 00 
   2c7fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000002c800 <_ZN4core3ptr13drop_in_place17hc6f39fdc981b88b1E>:
   2c800:	41 57                	push   %r15
   2c802:	41 56                	push   %r14
   2c804:	53                   	push   %rbx
   2c805:	49 89 ff             	mov    %rdi,%r15
   2c808:	48 8b 1f             	mov    (%rdi),%rbx
   2c80b:	48 8b 3b             	mov    (%rbx),%rdi
   2c80e:	48 8b 43 08          	mov    0x8(%rbx),%rax
   2c812:	ff 10                	callq  *(%rax)
   2c814:	48 8b 43 08          	mov    0x8(%rbx),%rax
   2c818:	48 83 78 08 00       	cmpq   $0x0,0x8(%rax)
   2c81d:	74 08                	je     2c827 <_ZN4core3ptr13drop_in_place17hc6f39fdc981b88b1E+0x27>
   2c81f:	48 8b 3b             	mov    (%rbx),%rdi
   2c822:	e8 e9 8b fd ff       	callq  5410 <__rust_dealloc>
   2c827:	49 8b 3f             	mov    (%r15),%rdi
   2c82a:	5b                   	pop    %rbx
   2c82b:	41 5e                	pop    %r14
   2c82d:	41 5f                	pop    %r15
   2c82f:	e9 dc 8b fd ff       	jmpq   5410 <__rust_dealloc>
   2c834:	49 89 c6             	mov    %rax,%r14
   2c837:	48 8b 3b             	mov    (%rbx),%rdi
   2c83a:	48 8b 73 08          	mov    0x8(%rbx),%rsi
   2c83e:	e8 cd 80 ff ff       	callq  24910 <_ZN5alloc5alloc8box_free17h3741427eaa5804e6E>
   2c843:	49 8b 3f             	mov    (%r15),%rdi
   2c846:	e8 e5 85 ff ff       	callq  24e30 <_ZN5alloc5alloc8box_free17h20e506aa40102463E>
   2c84b:	4c 89 f7             	mov    %r14,%rdi
   2c84e:	e8 4d 78 fd ff       	callq  40a0 <_Unwind_Resume@plt>
   2c853:	0f 0b                	ud2    
   2c855:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2c85c:	00 00 00 
   2c85f:	90                   	nop

000000000002c860 <_ZN3std3sys4unix6thread6Thread3new12thread_start17h9e7d4a1eb425595fE>:
   2c860:	41 56                	push   %r14
   2c862:	53                   	push   %rbx
   2c863:	48 83 ec 28          	sub    $0x28,%rsp
   2c867:	49 89 fe             	mov    %rdi,%r14
   2c86a:	0f 57 c0             	xorps  %xmm0,%xmm0
   2c86d:	0f 29 04 24          	movaps %xmm0,(%rsp)
   2c871:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
   2c878:	00 00 
   2c87a:	31 db                	xor    %ebx,%ebx
   2c87c:	48 89 e6             	mov    %rsp,%rsi
   2c87f:	31 ff                	xor    %edi,%edi
   2c881:	ff 15 31 b7 21 00    	callq  *0x21b731(%rip)        # 247fb8 <sigaltstack@GLIBC_2.2.5>
   2c887:	f6 44 24 08 02       	testb  $0x2,0x8(%rsp)
   2c88c:	74 4d                	je     2c8db <_ZN3std3sys4unix6thread6Thread3new12thread_start17h9e7d4a1eb425595fE+0x7b>
   2c88e:	be 00 20 00 00       	mov    $0x2000,%esi
   2c893:	bf 00 00 00 00       	mov    $0x0,%edi
   2c898:	ba 03 00 00 00       	mov    $0x3,%edx
   2c89d:	b9 22 00 00 00       	mov    $0x22,%ecx
   2c8a2:	41 b8 ff ff ff ff    	mov    $0xffffffff,%r8d
   2c8a8:	45 31 c9             	xor    %r9d,%r9d
   2c8ab:	ff 15 77 b5 21 00    	callq  *0x21b577(%rip)        # 247e28 <mmap@GLIBC_2.2.5>
   2c8b1:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
   2c8b5:	74 7e                	je     2c935 <_ZN3std3sys4unix6thread6Thread3new12thread_start17h9e7d4a1eb425595fE+0xd5>
   2c8b7:	48 89 04 24          	mov    %rax,(%rsp)
   2c8bb:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%rsp)
   2c8c2:	00 
   2c8c3:	48 c7 44 24 10 00 20 	movq   $0x2000,0x10(%rsp)
   2c8ca:	00 00 
   2c8cc:	48 89 e7             	mov    %rsp,%rdi
   2c8cf:	31 f6                	xor    %esi,%esi
   2c8d1:	ff 15 e1 b6 21 00    	callq  *0x21b6e1(%rip)        # 247fb8 <sigaltstack@GLIBC_2.2.5>
   2c8d7:	48 8b 1c 24          	mov    (%rsp),%rbx
   2c8db:	48 89 5c 24 20       	mov    %rbx,0x20(%rsp)
   2c8e0:	49 8b 3e             	mov    (%r14),%rdi
   2c8e3:	49 8b 76 08          	mov    0x8(%r14),%rsi
   2c8e7:	e8 a4 f5 ff ff       	callq  2be90 <_ZN83_$LT$alloc..boxed..Box$LT$F$GT$$u20$as$u20$core..ops..function..FnOnce$LT$A$GT$$GT$9call_once17hc1201682a8722debE>
   2c8ec:	4c 89 f7             	mov    %r14,%rdi
   2c8ef:	e8 1c 8b fd ff       	callq  5410 <__rust_dealloc>
   2c8f4:	48 85 db             	test   %rbx,%rbx
   2c8f7:	74 32                	je     2c92b <_ZN3std3sys4unix6thread6Thread3new12thread_start17h9e7d4a1eb425595fE+0xcb>
   2c8f9:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
   2c900:	00 
   2c901:	c7 44 24 08 02 00 00 	movl   $0x2,0x8(%rsp)
   2c908:	00 
   2c909:	48 c7 44 24 10 00 20 	movq   $0x2000,0x10(%rsp)
   2c910:	00 00 
   2c912:	48 89 e7             	mov    %rsp,%rdi
   2c915:	31 f6                	xor    %esi,%esi
   2c917:	ff 15 9b b6 21 00    	callq  *0x21b69b(%rip)        # 247fb8 <sigaltstack@GLIBC_2.2.5>
   2c91d:	be 00 20 00 00       	mov    $0x2000,%esi
   2c922:	48 89 df             	mov    %rbx,%rdi
   2c925:	ff 15 15 b6 21 00    	callq  *0x21b615(%rip)        # 247f40 <munmap@GLIBC_2.2.5>
   2c92b:	31 c0                	xor    %eax,%eax
   2c92d:	48 83 c4 28          	add    $0x28,%rsp
   2c931:	5b                   	pop    %rbx
   2c932:	41 5e                	pop    %r14
   2c934:	c3                   	retq   
   2c935:	48 8d 3d 1d 15 01 00 	lea    0x1151d(%rip),%rdi        # 3de59 <str.0+0x39>
   2c93c:	48 8d 15 5d b0 21 00 	lea    0x21b05d(%rip),%rdx        # 2479a0 <__init_array_end+0x1990>
   2c943:	be 27 00 00 00       	mov    $0x27,%esi
   2c948:	e8 73 6b ff ff       	callq  234c0 <_ZN3std9panicking11begin_panic17hc5f3eabb2c219d56E>
   2c94d:	0f 0b                	ud2    
   2c94f:	48 89 c3             	mov    %rax,%rbx
   2c952:	4c 89 f7             	mov    %r14,%rdi
   2c955:	e8 d6 84 ff ff       	callq  24e30 <_ZN5alloc5alloc8box_free17h20e506aa40102463E>
   2c95a:	48 8d 7c 24 20       	lea    0x20(%rsp),%rdi
   2c95f:	e8 0c 00 00 00       	callq  2c970 <_ZN4core3ptr13drop_in_place17h1c92fbe498562b41E>
   2c964:	48 89 df             	mov    %rbx,%rdi
   2c967:	e8 34 77 fd ff       	callq  40a0 <_Unwind_Resume@plt>
   2c96c:	0f 0b                	ud2    
   2c96e:	66 90                	xchg   %ax,%ax

000000000002c970 <_ZN4core3ptr13drop_in_place17h1c92fbe498562b41E>:
   2c970:	53                   	push   %rbx
   2c971:	48 83 ec 20          	sub    $0x20,%rsp
   2c975:	48 83 3f 00          	cmpq   $0x0,(%rdi)
   2c979:	74 38                	je     2c9b3 <_ZN4core3ptr13drop_in_place17h1c92fbe498562b41E+0x43>
   2c97b:	48 89 fb             	mov    %rdi,%rbx
   2c97e:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
   2c985:	00 00 
   2c987:	c7 44 24 10 02 00 00 	movl   $0x2,0x10(%rsp)
   2c98e:	00 
   2c98f:	48 c7 44 24 18 00 20 	movq   $0x2000,0x18(%rsp)
   2c996:	00 00 
   2c998:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   2c99d:	31 f6                	xor    %esi,%esi
   2c99f:	ff 15 13 b6 21 00    	callq  *0x21b613(%rip)        # 247fb8 <sigaltstack@GLIBC_2.2.5>
   2c9a5:	48 8b 3b             	mov    (%rbx),%rdi
   2c9a8:	be 00 20 00 00       	mov    $0x2000,%esi
   2c9ad:	ff 15 8d b5 21 00    	callq  *0x21b58d(%rip)        # 247f40 <munmap@GLIBC_2.2.5>
   2c9b3:	48 83 c4 20          	add    $0x20,%rsp
   2c9b7:	5b                   	pop    %rbx
   2c9b8:	c3                   	retq   
   2c9b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000002c9c0 <__rdos_backtrace_pcinfo>:
   2c9c0:	41 57                	push   %r15
   2c9c2:	41 56                	push   %r14
   2c9c4:	41 55                	push   %r13
   2c9c6:	41 54                	push   %r12
   2c9c8:	53                   	push   %rbx
   2c9c9:	4d 89 c6             	mov    %r8,%r14
   2c9cc:	49 89 cd             	mov    %rcx,%r13
   2c9cf:	49 89 d7             	mov    %rdx,%r15
   2c9d2:	49 89 f4             	mov    %rsi,%r12
   2c9d5:	48 89 fb             	mov    %rdi,%rbx
   2c9d8:	48 89 ce             	mov    %rcx,%rsi
   2c9db:	4c 89 c2             	mov    %r8,%rdx
   2c9de:	e8 3d 00 00 00       	callq  2ca20 <fileline_initialize>
   2c9e3:	85 c0                	test   %eax,%eax
   2c9e5:	74 06                	je     2c9ed <__rdos_backtrace_pcinfo+0x2d>
   2c9e7:	83 7b 38 00          	cmpl   $0x0,0x38(%rbx)
   2c9eb:	74 0c                	je     2c9f9 <__rdos_backtrace_pcinfo+0x39>
   2c9ed:	31 c0                	xor    %eax,%eax
   2c9ef:	5b                   	pop    %rbx
   2c9f0:	41 5c                	pop    %r12
   2c9f2:	41 5d                	pop    %r13
   2c9f4:	41 5e                	pop    %r14
   2c9f6:	41 5f                	pop    %r15
   2c9f8:	c3                   	retq   
   2c9f9:	48 8b 43 18          	mov    0x18(%rbx),%rax
   2c9fd:	48 89 df             	mov    %rbx,%rdi
   2ca00:	4c 89 e6             	mov    %r12,%rsi
   2ca03:	4c 89 fa             	mov    %r15,%rdx
   2ca06:	4c 89 e9             	mov    %r13,%rcx
   2ca09:	4d 89 f0             	mov    %r14,%r8
   2ca0c:	5b                   	pop    %rbx
   2ca0d:	41 5c                	pop    %r12
   2ca0f:	41 5d                	pop    %r13
   2ca11:	41 5e                	pop    %r14
   2ca13:	41 5f                	pop    %r15
   2ca15:	ff e0                	jmpq   *%rax
   2ca17:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   2ca1e:	00 00 

000000000002ca20 <fileline_initialize>:
   2ca20:	55                   	push   %rbp
   2ca21:	41 57                	push   %r15
   2ca23:	41 56                	push   %r14
   2ca25:	41 55                	push   %r13
   2ca27:	41 54                	push   %r12
   2ca29:	53                   	push   %rbx
   2ca2a:	48 83 ec 58          	sub    $0x58,%rsp
   2ca2e:	83 7f 08 00          	cmpl   $0x0,0x8(%rdi)
   2ca32:	0f 85 e9 01 00 00    	jne    2cc21 <fileline_initialize+0x201>
   2ca38:	49 89 d7             	mov    %rdx,%r15
   2ca3b:	49 89 f6             	mov    %rsi,%r14
   2ca3e:	48 89 fb             	mov    %rdi,%rbx
   2ca41:	83 7f 38 00          	cmpl   $0x0,0x38(%rdi)
   2ca45:	74 16                	je     2ca5d <fileline_initialize+0x3d>
   2ca47:	48 8d 35 d0 14 01 00 	lea    0x114d0(%rip),%rsi        # 3df1e <str.0+0xfe>
   2ca4e:	4c 89 ff             	mov    %r15,%rdi
   2ca51:	ba ff ff ff ff       	mov    $0xffffffff,%edx
   2ca56:	41 ff d6             	callq  *%r14
   2ca59:	31 ed                	xor    %ebp,%ebp
   2ca5b:	eb 13                	jmp    2ca70 <fileline_initialize+0x50>
   2ca5d:	48 8b 43 18          	mov    0x18(%rbx),%rax
   2ca61:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   2ca66:	bd 01 00 00 00       	mov    $0x1,%ebp
   2ca6b:	48 85 c0             	test   %rax,%rax
   2ca6e:	74 11                	je     2ca81 <fileline_initialize+0x61>
   2ca70:	89 e8                	mov    %ebp,%eax
   2ca72:	48 83 c4 58          	add    $0x58,%rsp
   2ca76:	5b                   	pop    %rbx
   2ca77:	41 5c                	pop    %r12
   2ca79:	41 5d                	pop    %r13
   2ca7b:	41 5e                	pop    %r14
   2ca7d:	41 5f                	pop    %r15
   2ca7f:	5d                   	pop    %rbp
   2ca80:	c3                   	retq   
   2ca81:	4c 8b 23             	mov    (%rbx),%r12
   2ca84:	4d 85 e4             	test   %r12,%r12
   2ca87:	74 37                	je     2cac0 <fileline_initialize+0xa0>
   2ca89:	48 89 e1             	mov    %rsp,%rcx
   2ca8c:	4c 89 e7             	mov    %r12,%rdi
   2ca8f:	4c 89 f6             	mov    %r14,%rsi
   2ca92:	4c 89 fa             	mov    %r15,%rdx
   2ca95:	e8 f6 01 00 00       	callq  2cc90 <__rdos_backtrace_open>
   2ca9a:	85 c0                	test   %eax,%eax
   2ca9c:	40 0f 98 c6          	sets   %sil
   2caa0:	8b 0c 24             	mov    (%rsp),%ecx
   2caa3:	85 c9                	test   %ecx,%ecx
   2caa5:	0f 94 c2             	sete   %dl
   2caa8:	40 20 f2             	and    %sil,%dl
   2caab:	44 0f b6 ea          	movzbl %dl,%r13d
   2caaf:	85 c0                	test   %eax,%eax
   2cab1:	0f 89 0c 01 00 00    	jns    2cbc3 <fileline_initialize+0x1a3>
   2cab7:	85 c9                	test   %ecx,%ecx
   2cab9:	75 08                	jne    2cac3 <fileline_initialize+0xa3>
   2cabb:	e9 03 01 00 00       	jmpq   2cbc3 <fileline_initialize+0x1a3>
   2cac0:	45 31 ed             	xor    %r13d,%r13d
   2cac3:	45 89 ec             	mov    %r13d,%r12d
   2cac6:	48 8d 3d 77 14 01 00 	lea    0x11477(%rip),%rdi        # 3df44 <str.0+0x124>
   2cacd:	48 89 e1             	mov    %rsp,%rcx
   2cad0:	4c 89 f6             	mov    %r14,%rsi
   2cad3:	4c 89 fa             	mov    %r15,%rdx
   2cad6:	e8 b5 01 00 00       	callq  2cc90 <__rdos_backtrace_open>
   2cadb:	8b 0c 24             	mov    (%rsp),%ecx
   2cade:	85 c9                	test   %ecx,%ecx
   2cae0:	41 bd 01 00 00 00    	mov    $0x1,%r13d
   2cae6:	45 0f 45 ec          	cmovne %r12d,%r13d
   2caea:	85 c0                	test   %eax,%eax
   2caec:	45 0f 49 ec          	cmovns %r12d,%r13d
   2caf0:	0f 89 9b 00 00 00    	jns    2cb91 <fileline_initialize+0x171>
   2caf6:	85 c9                	test   %ecx,%ecx
   2caf8:	0f 84 be 00 00 00    	je     2cbbc <fileline_initialize+0x19c>
   2cafe:	4c 8d 25 4e 14 01 00 	lea    0x1144e(%rip),%r12        # 3df53 <str.0+0x133>
   2cb05:	48 89 e1             	mov    %rsp,%rcx
   2cb08:	4c 89 e7             	mov    %r12,%rdi
   2cb0b:	4c 89 f6             	mov    %r14,%rsi
   2cb0e:	4c 89 fa             	mov    %r15,%rdx
   2cb11:	e8 7a 01 00 00       	callq  2cc90 <__rdos_backtrace_open>
   2cb16:	8b 0c 24             	mov    (%rsp),%ecx
   2cb19:	85 c9                	test   %ecx,%ecx
   2cb1b:	ba 01 00 00 00       	mov    $0x1,%edx
   2cb20:	41 0f 45 d5          	cmovne %r13d,%edx
   2cb24:	85 c0                	test   %eax,%eax
   2cb26:	41 0f 49 d5          	cmovns %r13d,%edx
   2cb2a:	0f 89 c7 00 00 00    	jns    2cbf7 <fileline_initialize+0x1d7>
   2cb30:	85 c9                	test   %ecx,%ecx
   2cb32:	0f 84 bf 00 00 00    	je     2cbf7 <fileline_initialize+0x1d7>
   2cb38:	4c 8d 64 24 10       	lea    0x10(%rsp),%r12
   2cb3d:	89 54 24 04          	mov    %edx,0x4(%rsp)
   2cb41:	e8 ba 74 fd ff       	callq  4000 <getpid@plt>
   2cb46:	48 63 c8             	movslq %eax,%rcx
   2cb49:	48 8d 15 16 14 01 00 	lea    0x11416(%rip),%rdx        # 3df66 <str.0+0x146>
   2cb50:	be 40 00 00 00       	mov    $0x40,%esi
   2cb55:	4c 89 e7             	mov    %r12,%rdi
   2cb58:	31 c0                	xor    %eax,%eax
   2cb5a:	e8 b1 74 fd ff       	callq  4010 <snprintf@plt>
   2cb5f:	48 89 e1             	mov    %rsp,%rcx
   2cb62:	4c 89 e7             	mov    %r12,%rdi
   2cb65:	4c 89 f6             	mov    %r14,%rsi
   2cb68:	4c 89 fa             	mov    %r15,%rdx
   2cb6b:	e8 20 01 00 00       	callq  2cc90 <__rdos_backtrace_open>
   2cb70:	8b 0c 24             	mov    (%rsp),%ecx
   2cb73:	85 c9                	test   %ecx,%ecx
   2cb75:	41 bd 01 00 00 00    	mov    $0x1,%r13d
   2cb7b:	8b 54 24 04          	mov    0x4(%rsp),%edx
   2cb7f:	44 0f 45 ea          	cmovne %edx,%r13d
   2cb83:	85 c0                	test   %eax,%eax
   2cb85:	44 0f 49 ea          	cmovns %edx,%r13d
   2cb89:	79 38                	jns    2cbc3 <fileline_initialize+0x1a3>
   2cb8b:	85 c9                	test   %ecx,%ecx
   2cb8d:	75 0d                	jne    2cb9c <fileline_initialize+0x17c>
   2cb8f:	eb 32                	jmp    2cbc3 <fileline_initialize+0x1a3>
   2cb91:	4c 8d 25 ac 13 01 00 	lea    0x113ac(%rip),%r12        # 3df44 <str.0+0x124>
   2cb98:	85 c0                	test   %eax,%eax
   2cb9a:	79 2b                	jns    2cbc7 <fileline_initialize+0x1a7>
   2cb9c:	45 85 ed             	test   %r13d,%r13d
   2cb9f:	75 6e                	jne    2cc0f <fileline_initialize+0x1ef>
   2cba1:	48 8b 33             	mov    (%rbx),%rsi
   2cba4:	48 85 f6             	test   %rsi,%rsi
   2cba7:	74 57                	je     2cc00 <fileline_initialize+0x1e0>
   2cba9:	4c 89 ff             	mov    %r15,%rdi
   2cbac:	ba 02 00 00 00       	mov    $0x2,%edx
   2cbb1:	41 ff d6             	callq  *%r14
   2cbb4:	83 7b 08 00          	cmpl   $0x0,0x8(%rbx)
   2cbb8:	74 5b                	je     2cc15 <fileline_initialize+0x1f5>
   2cbba:	eb 65                	jmp    2cc21 <fileline_initialize+0x201>
   2cbbc:	4c 8d 25 81 13 01 00 	lea    0x11381(%rip),%r12        # 3df44 <str.0+0x124>
   2cbc3:	85 c0                	test   %eax,%eax
   2cbc5:	78 d5                	js     2cb9c <fileline_initialize+0x17c>
   2cbc7:	4c 8d 4c 24 08       	lea    0x8(%rsp),%r9
   2cbcc:	48 89 df             	mov    %rbx,%rdi
   2cbcf:	4c 89 e6             	mov    %r12,%rsi
   2cbd2:	89 c2                	mov    %eax,%edx
   2cbd4:	4c 89 f1             	mov    %r14,%rcx
   2cbd7:	4d 89 f8             	mov    %r15,%r8
   2cbda:	e8 11 02 00 00       	callq  2cdf0 <__rdos_backtrace_initialize>
   2cbdf:	85 c0                	test   %eax,%eax
   2cbe1:	74 2c                	je     2cc0f <fileline_initialize+0x1ef>
   2cbe3:	83 7b 08 00          	cmpl   $0x0,0x8(%rbx)
   2cbe7:	75 38                	jne    2cc21 <fileline_initialize+0x201>
   2cbe9:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   2cbee:	48 89 43 18          	mov    %rax,0x18(%rbx)
   2cbf2:	e9 79 fe ff ff       	jmpq   2ca70 <fileline_initialize+0x50>
   2cbf7:	41 89 d5             	mov    %edx,%r13d
   2cbfa:	85 c0                	test   %eax,%eax
   2cbfc:	79 c9                	jns    2cbc7 <fileline_initialize+0x1a7>
   2cbfe:	eb 9c                	jmp    2cb9c <fileline_initialize+0x17c>
   2cc00:	48 8d 35 76 13 01 00 	lea    0x11376(%rip),%rsi        # 3df7d <str.0+0x15d>
   2cc07:	4c 89 ff             	mov    %r15,%rdi
   2cc0a:	31 d2                	xor    %edx,%edx
   2cc0c:	41 ff d6             	callq  *%r14
   2cc0f:	83 7b 08 00          	cmpl   $0x0,0x8(%rbx)
   2cc13:	75 0c                	jne    2cc21 <fileline_initialize+0x201>
   2cc15:	c7 43 38 01 00 00 00 	movl   $0x1,0x38(%rbx)
   2cc1c:	e9 38 fe ff ff       	jmpq   2ca59 <fileline_initialize+0x39>
   2cc21:	e8 92 74 fd ff       	callq  40b8 <abort@plt>
   2cc26:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2cc2d:	00 00 00 

000000000002cc30 <__rdos_backtrace_syminfo>:
   2cc30:	41 57                	push   %r15
   2cc32:	41 56                	push   %r14
   2cc34:	41 55                	push   %r13
   2cc36:	41 54                	push   %r12
   2cc38:	53                   	push   %rbx
   2cc39:	4d 89 c6             	mov    %r8,%r14
   2cc3c:	49 89 cf             	mov    %rcx,%r15
   2cc3f:	49 89 d4             	mov    %rdx,%r12
   2cc42:	49 89 f5             	mov    %rsi,%r13
   2cc45:	48 89 fb             	mov    %rdi,%rbx
   2cc48:	48 89 ce             	mov    %rcx,%rsi
   2cc4b:	4c 89 c2             	mov    %r8,%rdx
   2cc4e:	e8 cd fd ff ff       	callq  2ca20 <fileline_initialize>
   2cc53:	89 c1                	mov    %eax,%ecx
   2cc55:	31 c0                	xor    %eax,%eax
   2cc57:	85 c9                	test   %ecx,%ecx
   2cc59:	74 1d                	je     2cc78 <__rdos_backtrace_syminfo+0x48>
   2cc5b:	83 7b 38 00          	cmpl   $0x0,0x38(%rbx)
   2cc5f:	75 17                	jne    2cc78 <__rdos_backtrace_syminfo+0x48>
   2cc61:	48 89 df             	mov    %rbx,%rdi
   2cc64:	4c 89 ee             	mov    %r13,%rsi
   2cc67:	4c 89 e2             	mov    %r12,%rdx
   2cc6a:	4c 89 f9             	mov    %r15,%rcx
   2cc6d:	4d 89 f0             	mov    %r14,%r8
   2cc70:	ff 53 28             	callq  *0x28(%rbx)
   2cc73:	b8 01 00 00 00       	mov    $0x1,%eax
   2cc78:	5b                   	pop    %rbx
   2cc79:	41 5c                	pop    %r12
   2cc7b:	41 5d                	pop    %r13
   2cc7d:	41 5e                	pop    %r14
   2cc7f:	41 5f                	pop    %r15
   2cc81:	c3                   	retq   
   2cc82:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2cc89:	00 00 00 
   2cc8c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000002cc90 <__rdos_backtrace_open>:
   2cc90:	41 57                	push   %r15
   2cc92:	41 56                	push   %r14
   2cc94:	41 54                	push   %r12
   2cc96:	53                   	push   %rbx
   2cc97:	50                   	push   %rax
   2cc98:	48 89 cb             	mov    %rcx,%rbx
   2cc9b:	49 89 d7             	mov    %rdx,%r15
   2cc9e:	49 89 f6             	mov    %rsi,%r14
   2cca1:	49 89 fc             	mov    %rdi,%r12
   2cca4:	48 85 c9             	test   %rcx,%rcx
   2cca7:	74 06                	je     2ccaf <__rdos_backtrace_open+0x1f>
   2cca9:	c7 03 00 00 00 00    	movl   $0x0,(%rbx)
   2ccaf:	4c 89 e7             	mov    %r12,%rdi
   2ccb2:	31 f6                	xor    %esi,%esi
   2ccb4:	31 c0                	xor    %eax,%eax
   2ccb6:	e8 c5 73 fd ff       	callq  4080 <open@plt>
   2ccbb:	85 c0                	test   %eax,%eax
   2ccbd:	79 27                	jns    2cce6 <__rdos_backtrace_open+0x56>
   2ccbf:	e8 fc 73 fd ff       	callq  40c0 <__errno_location@plt>
   2ccc4:	48 85 db             	test   %rbx,%rbx
   2ccc7:	74 0d                	je     2ccd6 <__rdos_backtrace_open+0x46>
   2ccc9:	83 38 02             	cmpl   $0x2,(%rax)
   2cccc:	75 08                	jne    2ccd6 <__rdos_backtrace_open+0x46>
   2ccce:	c7 03 01 00 00 00    	movl   $0x1,(%rbx)
   2ccd4:	eb 0b                	jmp    2cce1 <__rdos_backtrace_open+0x51>
   2ccd6:	8b 10                	mov    (%rax),%edx
   2ccd8:	4c 89 ff             	mov    %r15,%rdi
   2ccdb:	4c 89 e6             	mov    %r12,%rsi
   2ccde:	41 ff d6             	callq  *%r14
   2cce1:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   2cce6:	48 83 c4 08          	add    $0x8,%rsp
   2ccea:	5b                   	pop    %rbx
   2cceb:	41 5c                	pop    %r12
   2cced:	41 5e                	pop    %r14
   2ccef:	41 5f                	pop    %r15
   2ccf1:	c3                   	retq   
   2ccf2:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2ccf9:	00 00 00 
   2ccfc:	0f 1f 40 00          	nopl   0x0(%rax)

000000000002cd00 <__rdos_backtrace_close>:
   2cd00:	41 56                	push   %r14
   2cd02:	53                   	push   %rbx
   2cd03:	50                   	push   %rax
   2cd04:	48 89 d3             	mov    %rdx,%rbx
   2cd07:	49 89 f6             	mov    %rsi,%r14
   2cd0a:	e8 31 73 fd ff       	callq  4040 <close@plt>
   2cd0f:	89 c1                	mov    %eax,%ecx
   2cd11:	b8 01 00 00 00       	mov    $0x1,%eax
   2cd16:	85 c9                	test   %ecx,%ecx
   2cd18:	78 08                	js     2cd22 <__rdos_backtrace_close+0x22>
   2cd1a:	48 83 c4 08          	add    $0x8,%rsp
   2cd1e:	5b                   	pop    %rbx
   2cd1f:	41 5e                	pop    %r14
   2cd21:	c3                   	retq   
   2cd22:	e8 99 73 fd ff       	callq  40c0 <__errno_location@plt>
   2cd27:	8b 10                	mov    (%rax),%edx
   2cd29:	48 8d 35 7c 12 01 00 	lea    0x1127c(%rip),%rsi        # 3dfac <str.0+0x18c>
   2cd30:	48 89 df             	mov    %rbx,%rdi
   2cd33:	41 ff d6             	callq  *%r14
   2cd36:	31 c0                	xor    %eax,%eax
   2cd38:	48 83 c4 08          	add    $0x8,%rsp
   2cd3c:	5b                   	pop    %rbx
   2cd3d:	41 5e                	pop    %r14
   2cd3f:	c3                   	retq   

000000000002cd40 <__rdos_backtrace_create_state>:
   2cd40:	53                   	push   %rbx
   2cd41:	48 83 ec 50          	sub    $0x50,%rsp
   2cd45:	48 89 d0             	mov    %rdx,%rax
   2cd48:	85 f6                	test   %esi,%esi
   2cd4a:	74 19                	je     2cd65 <__rdos_backtrace_create_state+0x25>
   2cd4c:	48 8d 35 5f 12 01 00 	lea    0x1125f(%rip),%rsi        # 3dfb2 <str.0+0x192>
   2cd53:	31 db                	xor    %ebx,%ebx
   2cd55:	48 89 cf             	mov    %rcx,%rdi
   2cd58:	31 d2                	xor    %edx,%edx
   2cd5a:	ff d0                	callq  *%rax
   2cd5c:	48 89 d8             	mov    %rbx,%rax
   2cd5f:	48 83 c4 50          	add    $0x50,%rsp
   2cd63:	5b                   	pop    %rbx
   2cd64:	c3                   	retq   
   2cd65:	0f 57 c0             	xorps  %xmm0,%xmm0
   2cd68:	0f 29 04 24          	movaps %xmm0,(%rsp)
   2cd6c:	0f 29 44 24 30       	movaps %xmm0,0x30(%rsp)
   2cd71:	0f 29 44 24 20       	movaps %xmm0,0x20(%rsp)
   2cd76:	0f 29 44 24 10       	movaps %xmm0,0x10(%rsp)
   2cd7b:	48 c7 44 24 40 00 00 	movq   $0x0,0x40(%rsp)
   2cd82:	00 00 
   2cd84:	48 89 3c 24          	mov    %rdi,(%rsp)
   2cd88:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%rsp)
   2cd8f:	00 
   2cd90:	48 89 e7             	mov    %rsp,%rdi
   2cd93:	be 48 00 00 00       	mov    $0x48,%esi
   2cd98:	48 89 c2             	mov    %rax,%rdx
   2cd9b:	e8 a0 40 00 00       	callq  30e40 <__rdos_backtrace_alloc>
   2cda0:	48 85 c0             	test   %rax,%rax
   2cda3:	74 37                	je     2cddc <__rdos_backtrace_create_state+0x9c>
   2cda5:	48 89 c3             	mov    %rax,%rbx
   2cda8:	48 8b 44 24 40       	mov    0x40(%rsp),%rax
   2cdad:	48 89 43 40          	mov    %rax,0x40(%rbx)
   2cdb1:	0f 28 04 24          	movaps (%rsp),%xmm0
   2cdb5:	0f 28 4c 24 10       	movaps 0x10(%rsp),%xmm1
   2cdba:	0f 28 54 24 20       	movaps 0x20(%rsp),%xmm2
   2cdbf:	0f 28 5c 24 30       	movaps 0x30(%rsp),%xmm3
   2cdc4:	0f 11 5b 30          	movups %xmm3,0x30(%rbx)
   2cdc8:	0f 11 53 20          	movups %xmm2,0x20(%rbx)
   2cdcc:	0f 11 4b 10          	movups %xmm1,0x10(%rbx)
   2cdd0:	0f 11 03             	movups %xmm0,(%rbx)
   2cdd3:	48 89 d8             	mov    %rbx,%rax
   2cdd6:	48 83 c4 50          	add    $0x50,%rsp
   2cdda:	5b                   	pop    %rbx
   2cddb:	c3                   	retq   
   2cddc:	31 db                	xor    %ebx,%ebx
   2cdde:	48 89 d8             	mov    %rbx,%rax
   2cde1:	48 83 c4 50          	add    $0x50,%rsp
   2cde5:	5b                   	pop    %rbx
   2cde6:	c3                   	retq   
   2cde7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   2cdee:	00 00 

000000000002cdf0 <__rdos_backtrace_initialize>:
   2cdf0:	55                   	push   %rbp
   2cdf1:	41 57                	push   %r15
   2cdf3:	41 56                	push   %r14
   2cdf5:	41 55                	push   %r13
   2cdf7:	41 54                	push   %r12
   2cdf9:	53                   	push   %rbx
   2cdfa:	48 83 ec 68          	sub    $0x68,%rsp
   2cdfe:	4c 89 4c 24 20       	mov    %r9,0x20(%rsp)
   2ce03:	4c 89 c5             	mov    %r8,%rbp
   2ce06:	49 89 ce             	mov    %rcx,%r14
   2ce09:	41 89 d7             	mov    %edx,%r15d
   2ce0c:	49 89 f4             	mov    %rsi,%r12
   2ce0f:	48 89 fb             	mov    %rdi,%rbx
   2ce12:	48 8d 05 07 01 00 00 	lea    0x107(%rip),%rax        # 2cf20 <elf_nodebug>
   2ce19:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   2ce1e:	48 83 ec 08          	sub    $0x8,%rsp
   2ce22:	48 8d 44 24 24       	lea    0x24(%rsp),%rax
   2ce27:	4c 8d 54 24 14       	lea    0x14(%rsp),%r10
   2ce2c:	4c 8d 5c 24 18       	lea    0x18(%rsp),%r11
   2ce31:	45 31 ed             	xor    %r13d,%r13d
   2ce34:	b9 00 00 00 00       	mov    $0x0,%ecx
   2ce39:	4d 89 f0             	mov    %r14,%r8
   2ce3c:	49 89 e9             	mov    %rbp,%r9
   2ce3f:	6a 00                	pushq  $0x0
   2ce41:	6a 01                	pushq  $0x1
   2ce43:	50                   	push   %rax
   2ce44:	41 52                	push   %r10
   2ce46:	41 53                	push   %r11
   2ce48:	e8 f3 00 00 00       	callq  2cf40 <elf_add>
   2ce4d:	48 83 c4 30          	add    $0x30,%rsp
   2ce51:	85 c0                	test   %eax,%eax
   2ce53:	0f 84 9e 00 00 00    	je     2cef7 <__rdos_backtrace_initialize+0x107>
   2ce59:	48 89 5c 24 28       	mov    %rbx,0x28(%rsp)
   2ce5e:	4c 89 74 24 30       	mov    %r14,0x30(%rsp)
   2ce63:	48 89 6c 24 38       	mov    %rbp,0x38(%rsp)
   2ce68:	48 8d 4c 24 10       	lea    0x10(%rsp),%rcx
   2ce6d:	48 89 4c 24 40       	mov    %rcx,0x40(%rsp)
   2ce72:	48 8d 4c 24 0c       	lea    0xc(%rsp),%rcx
   2ce77:	48 89 4c 24 48       	mov    %rcx,0x48(%rsp)
   2ce7c:	48 8d 4c 24 1c       	lea    0x1c(%rsp),%rcx
   2ce81:	48 89 4c 24 50       	mov    %rcx,0x50(%rsp)
   2ce86:	4c 89 64 24 58       	mov    %r12,0x58(%rsp)
   2ce8b:	85 c0                	test   %eax,%eax
   2ce8d:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   2ce92:	41 0f 48 c7          	cmovs  %r15d,%eax
   2ce96:	89 44 24 60          	mov    %eax,0x60(%rsp)
   2ce9a:	48 8d 3d 6f 21 00 00 	lea    0x216f(%rip),%rdi        # 2f010 <phdr_callback>
   2cea1:	48 8d 74 24 28       	lea    0x28(%rsp),%rsi
   2cea6:	e8 45 71 fd ff       	callq  3ff0 <dl_iterate_phdr@plt>
   2ceab:	83 7b 08 00          	cmpl   $0x0,0x8(%rbx)
   2ceaf:	75 61                	jne    2cf12 <__rdos_backtrace_initialize+0x122>
   2ceb1:	83 7c 24 0c 00       	cmpl   $0x0,0xc(%rsp)
   2ceb6:	48 8b 4c 24 20       	mov    0x20(%rsp),%rcx
   2cebb:	74 0d                	je     2ceca <__rdos_backtrace_initialize+0xda>
   2cebd:	48 8d 05 1c 22 00 00 	lea    0x221c(%rip),%rax        # 2f0e0 <elf_syminfo>
   2cec4:	48 89 43 28          	mov    %rax,0x28(%rbx)
   2cec8:	eb 07                	jmp    2ced1 <__rdos_backtrace_initialize+0xe1>
   2ceca:	48 83 7b 28 00       	cmpq   $0x0,0x28(%rbx)
   2cecf:	74 38                	je     2cf09 <__rdos_backtrace_initialize+0x119>
   2ced1:	48 8b 43 18          	mov    0x18(%rbx),%rax
   2ced5:	48 89 01             	mov    %rax,(%rcx)
   2ced8:	41 bd 01 00 00 00    	mov    $0x1,%r13d
   2cede:	48 85 c0             	test   %rax,%rax
   2cee1:	74 0c                	je     2ceef <__rdos_backtrace_initialize+0xff>
   2cee3:	48 8d 15 36 00 00 00 	lea    0x36(%rip),%rdx        # 2cf20 <elf_nodebug>
   2ceea:	48 39 d0             	cmp    %rdx,%rax
   2ceed:	75 08                	jne    2cef7 <__rdos_backtrace_initialize+0x107>
   2ceef:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   2cef4:	48 89 01             	mov    %rax,(%rcx)
   2cef7:	44 89 e8             	mov    %r13d,%eax
   2cefa:	48 83 c4 68          	add    $0x68,%rsp
   2cefe:	5b                   	pop    %rbx
   2ceff:	41 5c                	pop    %r12
   2cf01:	41 5d                	pop    %r13
   2cf03:	41 5e                	pop    %r14
   2cf05:	41 5f                	pop    %r15
   2cf07:	5d                   	pop    %rbp
   2cf08:	c3                   	retq   
   2cf09:	48 8d 05 70 22 00 00 	lea    0x2270(%rip),%rax        # 2f180 <elf_nosyms>
   2cf10:	eb b2                	jmp    2cec4 <__rdos_backtrace_initialize+0xd4>
   2cf12:	e8 a1 71 fd ff       	callq  40b8 <abort@plt>
   2cf17:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   2cf1e:	00 00 

000000000002cf20 <elf_nodebug>:
   2cf20:	50                   	push   %rax
   2cf21:	4c 89 c7             	mov    %r8,%rdi
   2cf24:	48 8d 35 e6 10 01 00 	lea    0x110e6(%rip),%rsi        # 3e011 <str.0+0x1f1>
   2cf2b:	ba ff ff ff ff       	mov    $0xffffffff,%edx
   2cf30:	ff d1                	callq  *%rcx
   2cf32:	31 c0                	xor    %eax,%eax
   2cf34:	59                   	pop    %rcx
   2cf35:	c3                   	retq   
   2cf36:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2cf3d:	00 00 00 

000000000002cf40 <elf_add>:
   2cf40:	55                   	push   %rbp
   2cf41:	41 57                	push   %r15
   2cf43:	41 56                	push   %r14
   2cf45:	41 55                	push   %r13
   2cf47:	41 54                	push   %r12
   2cf49:	53                   	push   %rbx
   2cf4a:	48 81 ec 88 03 00 00 	sub    $0x388,%rsp
   2cf51:	4d 89 cf             	mov    %r9,%r15
   2cf54:	4d 89 c5             	mov    %r8,%r13
   2cf57:	49 89 cc             	mov    %rcx,%r12
   2cf5a:	41 89 d6             	mov    %edx,%r14d
   2cf5d:	48 89 f5             	mov    %rsi,%rbp
   2cf60:	48 89 fb             	mov    %rdi,%rbx
   2cf63:	48 8b 84 24 d0 03 00 	mov    0x3d0(%rsp),%rax
   2cf6a:	00 
   2cf6b:	48 8b 8c 24 c8 03 00 	mov    0x3c8(%rsp),%rcx
   2cf72:	00 
   2cf73:	83 bc 24 e0 03 00 00 	cmpl   $0x0,0x3e0(%rsp)
   2cf7a:	00 
   2cf7b:	75 0c                	jne    2cf89 <elf_add+0x49>
   2cf7d:	c7 01 00 00 00 00    	movl   $0x0,(%rcx)
   2cf83:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
   2cf89:	48 83 ec 08          	sub    $0x8,%rsp
   2cf8d:	48 8d 84 24 d0 02 00 	lea    0x2d0(%rsp),%rax
   2cf94:	00 
   2cf95:	b9 40 00 00 00       	mov    $0x40,%ecx
   2cf9a:	48 89 df             	mov    %rbx,%rdi
   2cf9d:	44 89 f6             	mov    %r14d,%esi
   2cfa0:	ba 00 00 00 00       	mov    $0x0,%edx
   2cfa5:	4d 89 e8             	mov    %r13,%r8
   2cfa8:	4d 89 f9             	mov    %r15,%r9
   2cfab:	50                   	push   %rax
   2cfac:	e8 2f bc 00 00       	callq  38be0 <__rdos_backtrace_get_view>
   2cfb1:	48 83 c4 10          	add    $0x10,%rsp
   2cfb5:	85 c0                	test   %eax,%eax
   2cfb7:	0f 84 23 02 00 00    	je     2d1e0 <elf_add+0x2a0>
   2cfbd:	48 89 ac 24 00 02 00 	mov    %rbp,0x200(%rsp)
   2cfc4:	00 
   2cfc5:	44 89 74 24 38       	mov    %r14d,0x38(%rsp)
   2cfca:	4c 89 a4 24 90 00 00 	mov    %r12,0x90(%rsp)
   2cfd1:	00 
   2cfd2:	48 8b 84 24 c8 02 00 	mov    0x2c8(%rsp),%rax
   2cfd9:	00 
   2cfda:	66 0f 6e 08          	movd   (%rax),%xmm1
   2cfde:	66 0f ef c0          	pxor   %xmm0,%xmm0
   2cfe2:	66 0f 60 c8          	punpcklbw %xmm0,%xmm1
   2cfe6:	66 0f 61 c8          	punpcklwd %xmm0,%xmm1
   2cfea:	66 0f 7f 4c 24 40    	movdqa %xmm1,0x40(%rsp)
   2cff0:	44 8a 60 04          	mov    0x4(%rax),%r12b
   2cff4:	8a 48 05             	mov    0x5(%rax),%cl
   2cff7:	48 89 8c 24 a8 00 00 	mov    %rcx,0xa8(%rsp)
   2cffe:	00 
   2cfff:	44 8a 70 06          	mov    0x6(%rax),%r14b
   2d003:	4c 89 fd             	mov    %r15,%rbp
   2d006:	48 89 df             	mov    %rbx,%rdi
   2d009:	44 0f b7 78 10       	movzwl 0x10(%rax),%r15d
   2d00e:	0f b7 48 12          	movzwl 0x12(%rax),%ecx
   2d012:	66 89 4c 24 70       	mov    %cx,0x70(%rsp)
   2d017:	48 8b 48 28          	mov    0x28(%rax),%rcx
   2d01b:	48 89 4c 24 20       	mov    %rcx,0x20(%rsp)
   2d020:	8b 48 30             	mov    0x30(%rax),%ecx
   2d023:	89 4c 24 58          	mov    %ecx,0x58(%rsp)
   2d027:	0f b7 48 3c          	movzwl 0x3c(%rax),%ecx
   2d02b:	48 89 4c 24 30       	mov    %rcx,0x30(%rsp)
   2d030:	0f b7 58 3e          	movzwl 0x3e(%rax),%ebx
   2d034:	48 8d b4 24 c8 02 00 	lea    0x2c8(%rsp),%rsi
   2d03b:	00 
   2d03c:	48 89 7c 24 10       	mov    %rdi,0x10(%rsp)
   2d041:	4c 89 ea             	mov    %r13,%rdx
   2d044:	48 89 e9             	mov    %rbp,%rcx
   2d047:	e8 64 bc 00 00       	callq  38cb0 <__rdos_backtrace_release_view>
   2d04c:	66 0f 6f 44 24 40    	movdqa 0x40(%rsp),%xmm0
   2d052:	66 0f 76 05 86 0f 01 	pcmpeqd 0x10f86(%rip),%xmm0        # 3dfe0 <str.0+0x1c0>
   2d059:	00 
   2d05a:	0f 50 c0             	movmskps %xmm0,%eax
   2d05d:	3c 0f                	cmp    $0xf,%al
   2d05f:	0f 85 14 01 00 00    	jne    2d179 <elf_add+0x239>
   2d065:	4c 89 6c 24 28       	mov    %r13,0x28(%rsp)
   2d06a:	48 89 6c 24 40       	mov    %rbp,0x40(%rsp)
   2d06f:	41 80 fe 01          	cmp    $0x1,%r14b
   2d073:	0f 85 1f 01 00 00    	jne    2d198 <elf_add+0x258>
   2d079:	41 80 fc 02          	cmp    $0x2,%r12b
   2d07d:	44 8b 74 24 38       	mov    0x38(%rsp),%r14d
   2d082:	0f 85 36 01 00 00    	jne    2d1be <elf_add+0x27e>
   2d088:	48 8b 84 24 a8 00 00 	mov    0xa8(%rsp),%rax
   2d08f:	00 
   2d090:	83 c0 ff             	add    $0xffffffff,%eax
   2d093:	3c 02                	cmp    $0x2,%al
   2d095:	0f 83 2c 01 00 00    	jae    2d1c7 <elf_add+0x287>
   2d09b:	83 bc 24 d8 03 00 00 	cmpl   $0x0,0x3d8(%rsp)
   2d0a2:	00 
   2d0a3:	74 11                	je     2d0b6 <elf_add+0x176>
   2d0a5:	41 bc ff ff ff ff    	mov    $0xffffffff,%r12d
   2d0ab:	66 41 83 ff 03       	cmp    $0x3,%r15w
   2d0b0:	0f 84 41 01 00 00    	je     2d1f7 <elf_add+0x2b7>
   2d0b6:	66 83 7c 24 30 00    	cmpw   $0x0,0x30(%rsp)
   2d0bc:	0f 94 c0             	sete   %al
   2d0bf:	48 89 dd             	mov    %rbx,%rbp
   2d0c2:	66 83 fd ff          	cmp    $0xffff,%bp
   2d0c6:	0f 94 c1             	sete   %cl
   2d0c9:	48 8b 54 24 20       	mov    0x20(%rsp),%rdx
   2d0ce:	48 85 d2             	test   %rdx,%rdx
   2d0d1:	0f 84 35 01 00 00    	je     2d20c <elf_add+0x2cc>
   2d0d7:	08 c8                	or     %cl,%al
   2d0d9:	4c 8b 7c 24 40       	mov    0x40(%rsp),%r15
   2d0de:	4c 8b 6c 24 28       	mov    0x28(%rsp),%r13
   2d0e3:	48 8b 5c 24 10       	mov    0x10(%rsp),%rbx
   2d0e8:	0f 84 2d 01 00 00    	je     2d21b <elf_add+0x2db>
   2d0ee:	48 83 ec 08          	sub    $0x8,%rsp
   2d0f2:	48 8d 84 24 b8 00 00 	lea    0xb8(%rsp),%rax
   2d0f9:	00 
   2d0fa:	b9 08 00 00 00       	mov    $0x8,%ecx
   2d0ff:	49 89 dc             	mov    %rbx,%r12
   2d102:	48 89 df             	mov    %rbx,%rdi
   2d105:	44 89 f6             	mov    %r14d,%esi
   2d108:	4d 89 e8             	mov    %r13,%r8
   2d10b:	4d 89 f9             	mov    %r15,%r9
   2d10e:	50                   	push   %rax
   2d10f:	e8 cc ba 00 00       	callq  38be0 <__rdos_backtrace_get_view>
   2d114:	48 83 c4 10          	add    $0x10,%rsp
   2d118:	85 c0                	test   %eax,%eax
   2d11a:	0f 84 c0 00 00 00    	je     2d1e0 <elf_add+0x2a0>
   2d120:	48 8b 84 24 b0 00 00 	mov    0xb0(%rsp),%rax
   2d127:	00 
   2d128:	66 83 7c 24 30 00    	cmpw   $0x0,0x30(%rsp)
   2d12e:	75 08                	jne    2d138 <elf_add+0x1f8>
   2d130:	8b 48 20             	mov    0x20(%rax),%ecx
   2d133:	48 89 4c 24 30       	mov    %rcx,0x30(%rsp)
   2d138:	66 83 fd ff          	cmp    $0xffff,%bp
   2d13c:	75 18                	jne    2d156 <elf_add+0x216>
   2d13e:	8b 40 28             	mov    0x28(%rax),%eax
   2d141:	8d a8 00 ff ff ff    	lea    -0x100(%rax),%ebp
   2d147:	3d ff ff 00 00       	cmp    $0xffff,%eax
   2d14c:	0f 46 e8             	cmovbe %eax,%ebp
   2d14f:	3b 44 24 30          	cmp    0x30(%rsp),%eax
   2d153:	0f 42 e8             	cmovb  %eax,%ebp
   2d156:	48 8d b4 24 b0 00 00 	lea    0xb0(%rsp),%rsi
   2d15d:	00 
   2d15e:	4c 89 e3             	mov    %r12,%rbx
   2d161:	4c 89 e7             	mov    %r12,%rdi
   2d164:	4c 89 ea             	mov    %r13,%rdx
   2d167:	4c 89 f9             	mov    %r15,%rcx
   2d16a:	e8 41 bb 00 00       	callq  38cb0 <__rdos_backtrace_release_view>
   2d16f:	48 8b 54 24 20       	mov    0x20(%rsp),%rdx
   2d174:	e9 a2 00 00 00       	jmpq   2d21b <elf_add+0x2db>
   2d179:	48 8d 35 b1 0e 01 00 	lea    0x10eb1(%rip),%rsi        # 3e031 <str.0+0x211>
   2d180:	48 89 ef             	mov    %rbp,%rdi
   2d183:	31 d2                	xor    %edx,%edx
   2d185:	41 ff d5             	callq  *%r13
   2d188:	49 89 ef             	mov    %rbp,%r15
   2d18b:	44 8b 74 24 38       	mov    0x38(%rsp),%r14d
   2d190:	41 83 fe ff          	cmp    $0xffffffff,%r14d
   2d194:	75 50                	jne    2d1e6 <elf_add+0x2a6>
   2d196:	eb 5c                	jmp    2d1f4 <elf_add+0x2b4>
   2d198:	48 8d 35 ad 0e 01 00 	lea    0x10ead(%rip),%rsi        # 3e04c <str.0+0x22c>
   2d19f:	4c 8b 7c 24 40       	mov    0x40(%rsp),%r15
   2d1a4:	4c 89 ff             	mov    %r15,%rdi
   2d1a7:	31 d2                	xor    %edx,%edx
   2d1a9:	4c 8b 6c 24 28       	mov    0x28(%rsp),%r13
   2d1ae:	41 ff d5             	callq  *%r13
   2d1b1:	44 8b 74 24 38       	mov    0x38(%rsp),%r14d
   2d1b6:	41 83 fe ff          	cmp    $0xffffffff,%r14d
   2d1ba:	75 2a                	jne    2d1e6 <elf_add+0x2a6>
   2d1bc:	eb 36                	jmp    2d1f4 <elf_add+0x2b4>
   2d1be:	48 8d 35 b3 0e 01 00 	lea    0x10eb3(%rip),%rsi        # 3e078 <str.0+0x258>
   2d1c5:	eb 07                	jmp    2d1ce <elf_add+0x28e>
   2d1c7:	48 8d 35 d2 0e 01 00 	lea    0x10ed2(%rip),%rsi        # 3e0a0 <str.0+0x280>
   2d1ce:	4c 8b 7c 24 40       	mov    0x40(%rsp),%r15
   2d1d3:	4c 89 ff             	mov    %r15,%rdi
   2d1d6:	31 d2                	xor    %edx,%edx
   2d1d8:	4c 8b 6c 24 28       	mov    0x28(%rsp),%r13
   2d1dd:	41 ff d5             	callq  *%r13
   2d1e0:	41 83 fe ff          	cmp    $0xffffffff,%r14d
   2d1e4:	74 0e                	je     2d1f4 <elf_add+0x2b4>
   2d1e6:	44 89 f7             	mov    %r14d,%edi
   2d1e9:	4c 89 ee             	mov    %r13,%rsi
   2d1ec:	4c 89 fa             	mov    %r15,%rdx
   2d1ef:	e8 0c fb ff ff       	callq  2cd00 <__rdos_backtrace_close>
   2d1f4:	45 31 e4             	xor    %r12d,%r12d
   2d1f7:	44 89 e0             	mov    %r12d,%eax
   2d1fa:	48 81 c4 88 03 00 00 	add    $0x388,%rsp
   2d201:	5b                   	pop    %rbx
   2d202:	41 5c                	pop    %r12
   2d204:	41 5d                	pop    %r13
   2d206:	41 5e                	pop    %r14
   2d208:	41 5f                	pop    %r15
   2d20a:	5d                   	pop    %rbp
   2d20b:	c3                   	retq   
   2d20c:	4c 8b 7c 24 40       	mov    0x40(%rsp),%r15
   2d211:	4c 8b 6c 24 28       	mov    0x28(%rsp),%r13
   2d216:	48 8b 5c 24 10       	mov    0x10(%rsp),%rbx
   2d21b:	48 83 c2 40          	add    $0x40,%rdx
   2d21f:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
   2d224:	8d 48 ff             	lea    -0x1(%rax),%ecx
   2d227:	48 c1 e1 06          	shl    $0x6,%rcx
   2d22b:	48 83 ec 08          	sub    $0x8,%rsp
   2d22f:	48 8d 84 24 40 02 00 	lea    0x240(%rsp),%rax
   2d236:	00 
   2d237:	48 89 df             	mov    %rbx,%rdi
   2d23a:	44 89 f6             	mov    %r14d,%esi
   2d23d:	4d 89 e8             	mov    %r13,%r8
   2d240:	4d 89 f9             	mov    %r15,%r9
   2d243:	50                   	push   %rax
   2d244:	e8 97 b9 00 00       	callq  38be0 <__rdos_backtrace_get_view>
   2d249:	48 83 c4 10          	add    $0x10,%rsp
   2d24d:	85 c0                	test   %eax,%eax
   2d24f:	74 8f                	je     2d1e0 <elf_add+0x2a0>
   2d251:	48 8b 84 24 38 02 00 	mov    0x238(%rsp),%rax
   2d258:	00 
   2d259:	83 c5 ff             	add    $0xffffffff,%ebp
   2d25c:	48 c1 e5 06          	shl    $0x6,%rbp
   2d260:	48 8b 54 28 18       	mov    0x18(%rax,%rbp,1),%rdx
   2d265:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   2d26a:	48 8b 4c 28 20       	mov    0x20(%rax,%rbp,1),%rcx
   2d26f:	48 83 ec 08          	sub    $0x8,%rsp
   2d273:	48 8d 84 24 70 02 00 	lea    0x270(%rsp),%rax
   2d27a:	00 
   2d27b:	48 89 df             	mov    %rbx,%rdi
   2d27e:	44 89 f6             	mov    %r14d,%esi
   2d281:	48 89 8c 24 a8 00 00 	mov    %rcx,0xa8(%rsp)
   2d288:	00 
   2d289:	4d 89 e8             	mov    %r13,%r8
   2d28c:	4d 89 f9             	mov    %r15,%r9
   2d28f:	50                   	push   %rax
   2d290:	e8 4b b9 00 00       	callq  38be0 <__rdos_backtrace_get_view>
   2d295:	48 83 c4 10          	add    $0x10,%rsp
   2d299:	85 c0                	test   %eax,%eax
   2d29b:	48 89 dd             	mov    %rbx,%rbp
   2d29e:	0f 84 c8 05 00 00    	je     2d86c <elf_add+0x92c>
   2d2a4:	48 8b 84 24 68 02 00 	mov    0x268(%rsp),%rax
   2d2ab:	00 
   2d2ac:	48 89 84 24 f8 01 00 	mov    %rax,0x1f8(%rsp)
   2d2b3:	00 
   2d2b4:	48 8d bc 24 b0 00 00 	lea    0xb0(%rsp),%rdi
   2d2bb:	00 
   2d2bc:	31 db                	xor    %ebx,%ebx
   2d2be:	ba 40 01 00 00       	mov    $0x140,%edx
   2d2c3:	31 f6                	xor    %esi,%esi
   2d2c5:	e8 06 6e fd ff       	callq  40d0 <memset@plt>
   2d2ca:	b8 00 00 00 00       	mov    $0x0,%eax
   2d2cf:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   2d2d4:	b8 00 00 00 00       	mov    $0x0,%eax
   2d2d9:	48 89 84 24 88 00 00 	mov    %rax,0x88(%rsp)
   2d2e0:	00 
   2d2e1:	41 bc 00 00 00 00    	mov    $0x0,%r12d
   2d2e7:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%rsp)
   2d2ee:	00 
   2d2ef:	b9 00 00 00 00       	mov    $0x0,%ecx
   2d2f4:	c7 44 24 7c 00 00 00 	movl   $0x0,0x7c(%rsp)
   2d2fb:	00 
   2d2fc:	b8 00 00 00 00       	mov    $0x0,%eax
   2d301:	48 89 84 24 80 00 00 	mov    %rax,0x80(%rsp)
   2d308:	00 
   2d309:	83 7c 24 30 02       	cmpl   $0x2,0x30(%rsp)
   2d30e:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
   2d313:	0f 82 8a 05 00 00    	jb     2d8a3 <elf_add+0x963>
   2d319:	66 83 7c 24 70 15    	cmpw   $0x15,0x70(%rsp)
   2d31f:	0f 94 c0             	sete   %al
   2d322:	f6 44 24 58 02       	testb  $0x2,0x58(%rsp)
   2d327:	0f 94 c1             	sete   %cl
   2d32a:	20 c1                	and    %al,%cl
   2d32c:	88 4c 24 57          	mov    %cl,0x57(%rsp)
   2d330:	8b 44 24 30          	mov    0x30(%rsp),%eax
   2d334:	48 89 84 24 f0 01 00 	mov    %rax,0x1f0(%rsp)
   2d33b:	00 
   2d33c:	31 c0                	xor    %eax,%eax
   2d33e:	48 89 84 24 98 00 00 	mov    %rax,0x98(%rsp)
   2d345:	00 
   2d346:	ba 01 00 00 00       	mov    $0x1,%edx
   2d34b:	b8 00 00 00 00       	mov    $0x0,%eax
   2d350:	48 89 44 24 70       	mov    %rax,0x70(%rsp)
   2d355:	b8 00 00 00 00       	mov    $0x0,%eax
   2d35a:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   2d35f:	b8 00 00 00 00       	mov    $0x0,%eax
   2d364:	48 89 84 24 88 00 00 	mov    %rax,0x88(%rsp)
   2d36b:	00 
   2d36c:	c7 44 24 64 00 00 00 	movl   $0x0,0x64(%rsp)
   2d373:	00 
   2d374:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%rsp)
   2d37b:	00 
   2d37c:	31 c0                	xor    %eax,%eax
   2d37e:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
   2d383:	c7 44 24 7c 00 00 00 	movl   $0x0,0x7c(%rsp)
   2d38a:	00 
   2d38b:	31 c0                	xor    %eax,%eax
   2d38d:	48 89 84 24 80 00 00 	mov    %rax,0x80(%rsp)
   2d394:	00 
   2d395:	eb 17                	jmp    2d3ae <elf_add+0x46e>
   2d397:	48 8b 54 24 58       	mov    0x58(%rsp),%rdx
   2d39c:	48 83 c2 01          	add    $0x1,%rdx
   2d3a0:	48 3b 94 24 f0 01 00 	cmp    0x1f0(%rsp),%rdx
   2d3a7:	00 
   2d3a8:	0f 84 da 04 00 00    	je     2d888 <elf_add+0x948>
   2d3ae:	8d 5a ff             	lea    -0x1(%rdx),%ebx
   2d3b1:	48 c1 e3 06          	shl    $0x6,%rbx
   2d3b5:	8b 44 1f 04          	mov    0x4(%rdi,%rbx,1),%eax
   2d3b9:	83 f8 02             	cmp    $0x2,%eax
   2d3bc:	48 89 54 24 58       	mov    %rdx,0x58(%rsp)
   2d3c1:	74 1a                	je     2d3dd <elf_add+0x49d>
   2d3c3:	83 f8 0b             	cmp    $0xb,%eax
   2d3c6:	75 1f                	jne    2d3e7 <elf_add+0x4a7>
   2d3c8:	89 d0                	mov    %edx,%eax
   2d3ca:	44 8b 24 1f          	mov    (%rdi,%rbx,1),%r12d
   2d3ce:	4c 39 a4 24 a0 00 00 	cmp    %r12,0xa0(%rsp)
   2d3d5:	00 
   2d3d6:	77 26                	ja     2d3fe <elf_add+0x4be>
   2d3d8:	e9 9f 04 00 00       	jmpq   2d87c <elf_add+0x93c>
   2d3dd:	89 d0                	mov    %edx,%eax
   2d3df:	48 89 84 24 98 00 00 	mov    %rax,0x98(%rsp)
   2d3e6:	00 
   2d3e7:	48 8b 44 24 70       	mov    0x70(%rsp),%rax
   2d3ec:	44 8b 24 1f          	mov    (%rdi,%rbx,1),%r12d
   2d3f0:	4c 39 a4 24 a0 00 00 	cmp    %r12,0xa0(%rsp)
   2d3f7:	00 
   2d3f8:	0f 86 7e 04 00 00    	jbe    2d87c <elf_add+0x93c>
   2d3fe:	48 89 44 24 70       	mov    %rax,0x70(%rsp)
   2d403:	4c 03 a4 24 f8 01 00 	add    0x1f8(%rsp),%r12
   2d40a:	00 
   2d40b:	4c 89 e7             	mov    %r12,%rdi
   2d40e:	48 8d 35 21 0d 01 00 	lea    0x10d21(%rip),%rsi        # 3e136 <str.0+0x316>
   2d415:	e8 46 6c fd ff       	callq  4060 <strcmp@plt>
   2d41a:	85 c0                	test   %eax,%eax
   2d41c:	0f 84 c7 00 00 00    	je     2d4e9 <elf_add+0x5a9>
   2d422:	4c 89 e7             	mov    %r12,%rdi
   2d425:	48 8d 35 16 0d 01 00 	lea    0x10d16(%rip),%rsi        # 3e142 <str.0+0x322>
   2d42c:	e8 2f 6c fd ff       	callq  4060 <strcmp@plt>
   2d431:	85 c0                	test   %eax,%eax
   2d433:	0f 84 b4 00 00 00    	je     2d4ed <elf_add+0x5ad>
   2d439:	4c 89 e7             	mov    %r12,%rdi
   2d43c:	48 8d 35 0b 0d 01 00 	lea    0x10d0b(%rip),%rsi        # 3e14e <str.0+0x32e>
   2d443:	e8 18 6c fd ff       	callq  4060 <strcmp@plt>
   2d448:	85 c0                	test   %eax,%eax
   2d44a:	0f 84 a4 00 00 00    	je     2d4f4 <elf_add+0x5b4>
   2d450:	4c 89 e7             	mov    %r12,%rdi
   2d453:	48 8d 35 02 0d 01 00 	lea    0x10d02(%rip),%rsi        # 3e15c <str.0+0x33c>
   2d45a:	e8 01 6c fd ff       	callq  4060 <strcmp@plt>
   2d45f:	85 c0                	test   %eax,%eax
   2d461:	0f 84 94 00 00 00    	je     2d4fb <elf_add+0x5bb>
   2d467:	4c 89 e7             	mov    %r12,%rdi
   2d46a:	48 8d 35 f9 0c 01 00 	lea    0x10cf9(%rip),%rsi        # 3e16a <str.0+0x34a>
   2d471:	e8 ea 6b fd ff       	callq  4060 <strcmp@plt>
   2d476:	85 c0                	test   %eax,%eax
   2d478:	0f 84 84 00 00 00    	je     2d502 <elf_add+0x5c2>
   2d47e:	4c 89 e7             	mov    %r12,%rdi
   2d481:	48 8d 35 ed 0c 01 00 	lea    0x10ced(%rip),%rsi        # 3e175 <str.0+0x355>
   2d488:	e8 d3 6b fd ff       	callq  4060 <strcmp@plt>
   2d48d:	85 c0                	test   %eax,%eax
   2d48f:	74 78                	je     2d509 <elf_add+0x5c9>
   2d491:	4c 89 e7             	mov    %r12,%rdi
   2d494:	48 8d 35 e7 0c 01 00 	lea    0x10ce7(%rip),%rsi        # 3e182 <str.0+0x362>
   2d49b:	e8 c0 6b fd ff       	callq  4060 <strcmp@plt>
   2d4a0:	85 c0                	test   %eax,%eax
   2d4a2:	74 6c                	je     2d510 <elf_add+0x5d0>
   2d4a4:	4c 89 e7             	mov    %r12,%rdi
   2d4a7:	48 8d 35 e1 0c 01 00 	lea    0x10ce1(%rip),%rsi        # 3e18f <str.0+0x36f>
   2d4ae:	e8 ad 6b fd ff       	callq  4060 <strcmp@plt>
   2d4b3:	85 c0                	test   %eax,%eax
   2d4b5:	74 60                	je     2d517 <elf_add+0x5d7>
   2d4b7:	4c 89 e7             	mov    %r12,%rdi
   2d4ba:	48 8d 35 dd 0c 01 00 	lea    0x10cdd(%rip),%rsi        # 3e19e <str.0+0x37e>
   2d4c1:	e8 9a 6b fd ff       	callq  4060 <strcmp@plt>
   2d4c6:	85 c0                	test   %eax,%eax
   2d4c8:	74 54                	je     2d51e <elf_add+0x5de>
   2d4ca:	4c 89 e7             	mov    %r12,%rdi
   2d4cd:	48 8d 35 d9 0c 01 00 	lea    0x10cd9(%rip),%rsi        # 3e1ad <str.0+0x38d>
   2d4d4:	e8 87 6b fd ff       	callq  4060 <strcmp@plt>
   2d4d9:	85 c0                	test   %eax,%eax
   2d4db:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
   2d4e0:	75 68                	jne    2d54a <elf_add+0x60a>
   2d4e2:	b8 09 00 00 00       	mov    $0x9,%eax
   2d4e7:	eb 3f                	jmp    2d528 <elf_add+0x5e8>
   2d4e9:	31 c0                	xor    %eax,%eax
   2d4eb:	eb 36                	jmp    2d523 <elf_add+0x5e3>
   2d4ed:	b8 01 00 00 00       	mov    $0x1,%eax
   2d4f2:	eb 2f                	jmp    2d523 <elf_add+0x5e3>
   2d4f4:	b8 02 00 00 00       	mov    $0x2,%eax
   2d4f9:	eb 28                	jmp    2d523 <elf_add+0x5e3>
   2d4fb:	b8 03 00 00 00       	mov    $0x3,%eax
   2d500:	eb 21                	jmp    2d523 <elf_add+0x5e3>
   2d502:	b8 04 00 00 00       	mov    $0x4,%eax
   2d507:	eb 1a                	jmp    2d523 <elf_add+0x5e3>
   2d509:	b8 05 00 00 00       	mov    $0x5,%eax
   2d50e:	eb 13                	jmp    2d523 <elf_add+0x5e3>
   2d510:	b8 06 00 00 00       	mov    $0x6,%eax
   2d515:	eb 0c                	jmp    2d523 <elf_add+0x5e3>
   2d517:	b8 07 00 00 00       	mov    $0x7,%eax
   2d51c:	eb 05                	jmp    2d523 <elf_add+0x5e3>
   2d51e:	b8 08 00 00 00       	mov    $0x8,%eax
   2d523:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
   2d528:	48 c1 e0 05          	shl    $0x5,%rax
   2d52c:	0f 10 44 1f 18       	movups 0x18(%rdi,%rbx,1),%xmm0
   2d531:	0f 29 84 04 b0 00 00 	movaps %xmm0,0xb0(%rsp,%rax,1)
   2d538:	00 
   2d539:	8b 4c 1f 08          	mov    0x8(%rdi,%rbx,1),%ecx
   2d53d:	c1 e9 0b             	shr    $0xb,%ecx
   2d540:	83 e1 01             	and    $0x1,%ecx
   2d543:	89 8c 04 c8 00 00 00 	mov    %ecx,0xc8(%rsp,%rax,1)
   2d54a:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   2d54f:	0b 84 24 e0 03 00 00 	or     0x3e0(%rsp),%eax
   2d556:	74 61                	je     2d5b9 <elf_add+0x679>
   2d558:	8b 44 24 0c          	mov    0xc(%rsp),%eax
   2d55c:	0b 84 24 e0 03 00 00 	or     0x3e0(%rsp),%eax
   2d563:	0f 84 24 02 00 00    	je     2d78d <elf_add+0x84d>
   2d569:	80 7c 24 57 00       	cmpb   $0x0,0x57(%rsp)
   2d56e:	0f 84 23 fe ff ff    	je     2d397 <elf_add+0x457>
   2d574:	48 8d 04 1f          	lea    (%rdi,%rbx,1),%rax
   2d578:	48 83 c0 04          	add    $0x4,%rax
   2d57c:	83 38 01             	cmpl   $0x1,(%rax)
   2d57f:	75 69                	jne    2d5ea <elf_add+0x6aa>
   2d581:	4c 89 e7             	mov    %r12,%rdi
   2d584:	48 8d 35 7c 0b 01 00 	lea    0x10b7c(%rip),%rsi        # 3e107 <str.0+0x2e7>
   2d58b:	e8 d0 6a fd ff       	callq  4060 <strcmp@plt>
   2d590:	85 c0                	test   %eax,%eax
   2d592:	0f 84 42 01 00 00    	je     2d6da <elf_add+0x79a>
   2d598:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
   2d59d:	48 8b 54 24 58       	mov    0x58(%rsp),%rdx
   2d5a2:	48 83 c2 01          	add    $0x1,%rdx
   2d5a6:	48 3b 94 24 f0 01 00 	cmp    0x1f0(%rsp),%rdx
   2d5ad:	00 
   2d5ae:	0f 85 fa fd ff ff    	jne    2d3ae <elf_add+0x46e>
   2d5b4:	e9 cf 02 00 00       	jmpq   2d888 <elf_add+0x948>
   2d5b9:	4c 89 e7             	mov    %r12,%rdi
   2d5bc:	48 8d 35 22 0b 01 00 	lea    0x10b22(%rip),%rsi        # 3e0e5 <str.0+0x2c5>
   2d5c3:	e8 98 6a fd ff       	callq  4060 <strcmp@plt>
   2d5c8:	31 c9                	xor    %ecx,%ecx
   2d5ca:	48 89 4c 24 18       	mov    %rcx,0x18(%rsp)
   2d5cf:	85 c0                	test   %eax,%eax
   2d5d1:	74 33                	je     2d606 <elf_add+0x6c6>
   2d5d3:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
   2d5d8:	8b 44 24 0c          	mov    0xc(%rsp),%eax
   2d5dc:	0b 84 24 e0 03 00 00 	or     0x3e0(%rsp),%eax
   2d5e3:	75 84                	jne    2d569 <elf_add+0x629>
   2d5e5:	e9 a3 01 00 00       	jmpq   2d78d <elf_add+0x84d>
   2d5ea:	48 8b 54 24 58       	mov    0x58(%rsp),%rdx
   2d5ef:	48 83 c2 01          	add    $0x1,%rdx
   2d5f3:	48 3b 94 24 f0 01 00 	cmp    0x1f0(%rsp),%rdx
   2d5fa:	00 
   2d5fb:	0f 85 ad fd ff ff    	jne    2d3ae <elf_add+0x46e>
   2d601:	e9 82 02 00 00       	jmpq   2d888 <elf_add+0x948>
   2d606:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
   2d60b:	48 8b 54 18 18       	mov    0x18(%rax,%rbx,1),%rdx
   2d610:	48 8b 4c 18 20       	mov    0x20(%rax,%rbx,1),%rcx
   2d615:	48 83 ec 08          	sub    $0x8,%rsp
   2d619:	48 89 ef             	mov    %rbp,%rdi
   2d61c:	44 89 f6             	mov    %r14d,%esi
   2d61f:	4d 89 e8             	mov    %r13,%r8
   2d622:	4d 89 f9             	mov    %r15,%r9
   2d625:	48 8d 84 24 28 02 00 	lea    0x228(%rsp),%rax
   2d62c:	00 
   2d62d:	50                   	push   %rax
   2d62e:	e8 ad b5 00 00       	callq  38be0 <__rdos_backtrace_get_view>
   2d633:	48 83 c4 10          	add    $0x10,%rsp
   2d637:	85 c0                	test   %eax,%eax
   2d639:	0f 84 f3 04 00 00    	je     2db32 <elf_add+0xbf2>
   2d63f:	48 8b 84 24 20 02 00 	mov    0x220(%rsp),%rax
   2d646:	00 
   2d647:	b9 01 00 00 00       	mov    $0x1,%ecx
   2d64c:	48 89 4c 24 18       	mov    %rcx,0x18(%rsp)
   2d651:	83 78 08 03          	cmpl   $0x3,0x8(%rax)
   2d655:	0f 85 1c 01 00 00    	jne    2d777 <elf_add+0x837>
   2d65b:	83 38 04             	cmpl   $0x4,(%rax)
   2d65e:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
   2d663:	0f 85 ef fe ff ff    	jne    2d558 <elf_add+0x618>
   2d669:	0f b6 48 0c          	movzbl 0xc(%rax),%ecx
   2d66d:	83 c1 b9             	add    $0xffffffb9,%ecx
   2d670:	75 16                	jne    2d688 <elf_add+0x748>
   2d672:	0f b6 48 0d          	movzbl 0xd(%rax),%ecx
   2d676:	83 c1 b2             	add    $0xffffffb2,%ecx
   2d679:	75 0d                	jne    2d688 <elf_add+0x748>
   2d67b:	0f b6 48 0e          	movzbl 0xe(%rax),%ecx
   2d67f:	83 c1 ab             	add    $0xffffffab,%ecx
   2d682:	75 04                	jne    2d688 <elf_add+0x748>
   2d684:	0f b6 48 0f          	movzbl 0xf(%rax),%ecx
   2d688:	85 c9                	test   %ecx,%ecx
   2d68a:	0f 85 c8 fe ff ff    	jne    2d558 <elf_add+0x618>
   2d690:	48 8d 0c 1f          	lea    (%rdi,%rbx,1),%rcx
   2d694:	48 83 c1 20          	add    $0x20,%rcx
   2d698:	8b 50 04             	mov    0x4(%rax),%edx
   2d69b:	8d 72 10             	lea    0x10(%rdx),%esi
   2d69e:	48 83 c0 10          	add    $0x10,%rax
   2d6a2:	48 39 31             	cmp    %rsi,(%rcx)
   2d6a5:	8b 4c 24 64          	mov    0x64(%rsp),%ecx
   2d6a9:	0f 42 ca             	cmovb  %edx,%ecx
   2d6ac:	89 4c 24 64          	mov    %ecx,0x64(%rsp)
   2d6b0:	48 8b 8c 24 88 00 00 	mov    0x88(%rsp),%rcx
   2d6b7:	00 
   2d6b8:	48 0f 42 c8          	cmovb  %rax,%rcx
   2d6bc:	48 89 8c 24 88 00 00 	mov    %rcx,0x88(%rsp)
   2d6c3:	00 
   2d6c4:	8b 44 24 0c          	mov    0xc(%rsp),%eax
   2d6c8:	0b 84 24 e0 03 00 00 	or     0x3e0(%rsp),%eax
   2d6cf:	0f 85 94 fe ff ff    	jne    2d569 <elf_add+0x629>
   2d6d5:	e9 b3 00 00 00       	jmpq   2d78d <elf_add+0x84d>
   2d6da:	48 89 ef             	mov    %rbp,%rdi
   2d6dd:	48 8b 6c 24 20       	mov    0x20(%rsp),%rbp
   2d6e2:	48 8b 54 1d 18       	mov    0x18(%rbp,%rbx,1),%rdx
   2d6e7:	48 8b 4c 1d 20       	mov    0x20(%rbp,%rbx,1),%rcx
   2d6ec:	48 83 ec 08          	sub    $0x8,%rsp
   2d6f0:	44 89 f6             	mov    %r14d,%esi
   2d6f3:	4d 89 e8             	mov    %r13,%r8
   2d6f6:	4d 89 f9             	mov    %r15,%r9
   2d6f9:	48 8d 84 24 a0 02 00 	lea    0x2a0(%rsp),%rax
   2d700:	00 
   2d701:	50                   	push   %rax
   2d702:	e8 d9 b4 00 00       	callq  38be0 <__rdos_backtrace_get_view>
   2d707:	48 83 c4 10          	add    $0x10,%rsp
   2d70b:	85 c0                	test   %eax,%eax
   2d70d:	48 8b 54 24 58       	mov    0x58(%rsp),%rdx
   2d712:	0f 84 06 04 00 00    	je     2db1e <elf_add+0xbde>
   2d718:	48 8d 04 2b          	lea    (%rbx,%rbp,1),%rax
   2d71c:	48 83 c0 20          	add    $0x20,%rax
   2d720:	48 8b 4c 1d 10       	mov    0x10(%rbp,%rbx,1),%rcx
   2d725:	48 89 8c 24 80 02 00 	mov    %rcx,0x280(%rsp)
   2d72c:	00 
   2d72d:	48 8b 8c 24 98 02 00 	mov    0x298(%rsp),%rcx
   2d734:	00 
   2d735:	48 89 8c 24 88 02 00 	mov    %rcx,0x288(%rsp)
   2d73c:	00 
   2d73d:	48 8b 00             	mov    (%rax),%rax
   2d740:	48 89 84 24 90 02 00 	mov    %rax,0x290(%rsp)
   2d747:	00 
   2d748:	48 8d 84 24 80 02 00 	lea    0x280(%rsp),%rax
   2d74f:	00 
   2d750:	48 89 84 24 80 00 00 	mov    %rax,0x80(%rsp)
   2d757:	00 
   2d758:	48 89 ef             	mov    %rbp,%rdi
   2d75b:	48 8b 6c 24 10       	mov    0x10(%rsp),%rbp
   2d760:	48 83 c2 01          	add    $0x1,%rdx
   2d764:	48 3b 94 24 f0 01 00 	cmp    0x1f0(%rsp),%rdx
   2d76b:	00 
   2d76c:	0f 85 3c fc ff ff    	jne    2d3ae <elf_add+0x46e>
   2d772:	e9 11 01 00 00       	jmpq   2d888 <elf_add+0x948>
   2d777:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
   2d77c:	8b 44 24 0c          	mov    0xc(%rsp),%eax
   2d780:	0b 84 24 e0 03 00 00 	or     0x3e0(%rsp),%eax
   2d787:	0f 85 dc fd ff ff    	jne    2d569 <elf_add+0x629>
   2d78d:	4c 89 e7             	mov    %r12,%rdi
   2d790:	48 8d 35 61 09 01 00 	lea    0x10961(%rip),%rsi        # 3e0f8 <str.0+0x2d8>
   2d797:	e8 c4 68 fd ff       	callq  4060 <strcmp@plt>
   2d79c:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%rsp)
   2d7a3:	00 
   2d7a4:	85 c0                	test   %eax,%eax
   2d7a6:	74 15                	je     2d7bd <elf_add+0x87d>
   2d7a8:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
   2d7ad:	80 7c 24 57 00       	cmpb   $0x0,0x57(%rsp)
   2d7b2:	0f 84 df fb ff ff    	je     2d397 <elf_add+0x457>
   2d7b8:	e9 b7 fd ff ff       	jmpq   2d574 <elf_add+0x634>
   2d7bd:	48 89 ef             	mov    %rbp,%rdi
   2d7c0:	48 8b 6c 24 20       	mov    0x20(%rsp),%rbp
   2d7c5:	48 8b 54 1d 18       	mov    0x18(%rbp,%rbx,1),%rdx
   2d7ca:	48 8b 4c 1d 20       	mov    0x20(%rbp,%rbx,1),%rcx
   2d7cf:	48 83 ec 08          	sub    $0x8,%rsp
   2d7d3:	44 89 f6             	mov    %r14d,%esi
   2d7d6:	4d 89 e8             	mov    %r13,%r8
   2d7d9:	4d 89 f9             	mov    %r15,%r9
   2d7dc:	48 8d 84 24 10 02 00 	lea    0x210(%rsp),%rax
   2d7e3:	00 
   2d7e4:	50                   	push   %rax
   2d7e5:	e8 f6 b3 00 00       	callq  38be0 <__rdos_backtrace_get_view>
   2d7ea:	48 83 c4 10          	add    $0x10,%rsp
   2d7ee:	85 c0                	test   %eax,%eax
   2d7f0:	0f 84 4d 03 00 00    	je     2db43 <elf_add+0xc03>
   2d7f6:	48 8d 0c 2b          	lea    (%rbx,%rbp,1),%rcx
   2d7fa:	48 83 c1 20          	add    $0x20,%rcx
   2d7fe:	48 8b 84 24 08 02 00 	mov    0x208(%rsp),%rax
   2d805:	00 
   2d806:	48 8b 09             	mov    (%rcx),%rcx
   2d809:	48 85 c9             	test   %rcx,%rcx
   2d80c:	48 89 ef             	mov    %rbp,%rdi
   2d80f:	74 1b                	je     2d82c <elf_add+0x8ec>
   2d811:	31 d2                	xor    %edx,%edx
   2d813:	48 8b 6c 24 10       	mov    0x10(%rsp),%rbp
   2d818:	80 3c 10 00          	cmpb   $0x0,(%rax,%rdx,1)
   2d81c:	74 15                	je     2d833 <elf_add+0x8f3>
   2d81e:	48 83 c2 01          	add    $0x1,%rdx
   2d822:	48 39 d1             	cmp    %rdx,%rcx
   2d825:	75 f1                	jne    2d818 <elf_add+0x8d8>
   2d827:	48 89 ca             	mov    %rcx,%rdx
   2d82a:	eb 07                	jmp    2d833 <elf_add+0x8f3>
   2d82c:	31 d2                	xor    %edx,%edx
   2d82e:	48 8b 6c 24 10       	mov    0x10(%rsp),%rbp
   2d833:	48 83 c2 03          	add    $0x3,%rdx
   2d837:	48 83 e2 fc          	and    $0xfffffffffffffffc,%rdx
   2d83b:	48 8d 72 04          	lea    0x4(%rdx),%rsi
   2d83f:	c7 44 24 0c 01 00 00 	movl   $0x1,0xc(%rsp)
   2d846:	00 
   2d847:	48 39 ce             	cmp    %rcx,%rsi
   2d84a:	0f 87 19 fd ff ff    	ja     2d569 <elf_add+0x629>
   2d850:	8b 0c 10             	mov    (%rax,%rdx,1),%ecx
   2d853:	89 4c 24 7c          	mov    %ecx,0x7c(%rsp)
   2d857:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
   2d85c:	80 7c 24 57 00       	cmpb   $0x0,0x57(%rsp)
   2d861:	0f 84 30 fb ff ff    	je     2d397 <elf_add+0x457>
   2d867:	e9 08 fd ff ff       	jmpq   2d574 <elf_add+0x634>
   2d86c:	48 8d b4 24 38 02 00 	lea    0x238(%rsp),%rsi
   2d873:	00 
   2d874:	48 89 ef             	mov    %rbp,%rdi
   2d877:	e9 88 02 00 00       	jmpq   2db04 <elf_add+0xbc4>
   2d87c:	48 8d 35 44 08 01 00 	lea    0x10844(%rip),%rsi        # 3e0c7 <str.0+0x2a7>
   2d883:	e9 8a 01 00 00       	jmpq   2da12 <elf_add+0xad2>
   2d888:	48 8b 84 24 98 00 00 	mov    0x98(%rsp),%rax
   2d88f:	00 
   2d890:	85 c0                	test   %eax,%eax
   2d892:	48 8b 4c 24 68       	mov    0x68(%rsp),%rcx
   2d897:	44 8b 64 24 64       	mov    0x64(%rsp),%r12d
   2d89c:	48 8b 5c 24 70       	mov    0x70(%rsp),%rbx
   2d8a1:	75 02                	jne    2d8a5 <elf_add+0x965>
   2d8a3:	89 d8                	mov    %ebx,%eax
   2d8a5:	31 d2                	xor    %edx,%edx
   2d8a7:	83 bc 24 e0 03 00 00 	cmpl   $0x0,0x3e0(%rsp)
   2d8ae:	00 
   2d8af:	48 89 4c 24 68       	mov    %rcx,0x68(%rsp)
   2d8b4:	0f 85 e5 04 00 00    	jne    2dd9f <elf_add+0xe5f>
   2d8ba:	85 c0                	test   %eax,%eax
   2d8bc:	0f 84 dd 04 00 00    	je     2dd9f <elf_add+0xe5f>
   2d8c2:	44 89 64 24 64       	mov    %r12d,0x64(%rsp)
   2d8c7:	83 c0 ff             	add    $0xffffffff,%eax
   2d8ca:	48 c1 e0 06          	shl    $0x6,%rax
   2d8ce:	8b 5c 07 28          	mov    0x28(%rdi,%rax,1),%ebx
   2d8d2:	3b 5c 24 30          	cmp    0x30(%rsp),%ebx
   2d8d6:	0f 83 2f 01 00 00    	jae    2da0b <elf_add+0xacb>
   2d8dc:	48 8b 54 07 18       	mov    0x18(%rdi,%rax,1),%rdx
   2d8e1:	48 89 84 24 98 00 00 	mov    %rax,0x98(%rsp)
   2d8e8:	00 
   2d8e9:	48 8b 4c 07 20       	mov    0x20(%rdi,%rax,1),%rcx
   2d8ee:	48 83 ec 08          	sub    $0x8,%rsp
   2d8f2:	48 8d 84 24 58 02 00 	lea    0x258(%rsp),%rax
   2d8f9:	00 
   2d8fa:	4c 8b 64 24 18       	mov    0x18(%rsp),%r12
   2d8ff:	48 89 fd             	mov    %rdi,%rbp
   2d902:	4c 89 e7             	mov    %r12,%rdi
   2d905:	44 89 f6             	mov    %r14d,%esi
   2d908:	4d 89 e8             	mov    %r13,%r8
   2d90b:	4d 89 f9             	mov    %r15,%r9
   2d90e:	50                   	push   %rax
   2d90f:	e8 cc b2 00 00       	callq  38be0 <__rdos_backtrace_get_view>
   2d914:	48 83 c4 10          	add    $0x10,%rsp
   2d918:	85 c0                	test   %eax,%eax
   2d91a:	0f 84 fe 01 00 00    	je     2db1e <elf_add+0xbde>
   2d920:	83 c3 ff             	add    $0xffffffff,%ebx
   2d923:	48 c1 e3 06          	shl    $0x6,%rbx
   2d927:	48 8b 54 1d 18       	mov    0x18(%rbp,%rbx,1),%rdx
   2d92c:	48 8b 4c 1d 20       	mov    0x20(%rbp,%rbx,1),%rcx
   2d931:	48 83 ec 08          	sub    $0x8,%rsp
   2d935:	48 8d 84 24 b8 02 00 	lea    0x2b8(%rsp),%rax
   2d93c:	00 
   2d93d:	4c 89 e7             	mov    %r12,%rdi
   2d940:	44 89 f6             	mov    %r14d,%esi
   2d943:	4d 89 e8             	mov    %r13,%r8
   2d946:	4d 89 f9             	mov    %r15,%r9
   2d949:	50                   	push   %rax
   2d94a:	e8 91 b2 00 00       	callq  38be0 <__rdos_backtrace_get_view>
   2d94f:	48 83 c4 10          	add    $0x10,%rsp
   2d953:	85 c0                	test   %eax,%eax
   2d955:	0f 84 cd 01 00 00    	je     2db28 <elf_add+0xbe8>
   2d95b:	be 18 00 00 00       	mov    $0x18,%esi
   2d960:	4c 89 e7             	mov    %r12,%rdi
   2d963:	4c 89 ea             	mov    %r13,%rdx
   2d966:	4c 89 f9             	mov    %r15,%rcx
   2d969:	e8 d2 34 00 00       	callq  30e40 <__rdos_backtrace_alloc>
   2d96e:	41 bc 01 00 00 00    	mov    $0x1,%r12d
   2d974:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   2d979:	48 85 c0             	test   %rax,%rax
   2d97c:	0f 84 d3 01 00 00    	je     2db55 <elf_add+0xc15>
   2d982:	48 8b 4c 24 20       	mov    0x20(%rsp),%rcx
   2d987:	48 8b 84 24 98 00 00 	mov    0x98(%rsp),%rax
   2d98e:	00 
   2d98f:	48 01 c8             	add    %rcx,%rax
   2d992:	48 83 c0 20          	add    $0x20,%rax
   2d996:	48 8d 4c 19 20       	lea    0x20(%rcx,%rbx,1),%rcx
   2d99b:	48 8b 9c 24 50 02 00 	mov    0x250(%rsp),%rbx
   2d9a2:	00 
   2d9a3:	48 8b 30             	mov    (%rax),%rsi
   2d9a6:	48 8b ac 24 b0 02 00 	mov    0x2b0(%rsp),%rbp
   2d9ad:	00 
   2d9ae:	48 8b 39             	mov    (%rcx),%rdi
   2d9b1:	48 b9 ab aa aa aa aa 	movabs $0xaaaaaaaaaaaaaaab,%rcx
   2d9b8:	aa aa aa 
   2d9bb:	48 89 f0             	mov    %rsi,%rax
   2d9be:	48 f7 e1             	mul    %rcx
   2d9c1:	49 89 d4             	mov    %rdx,%r12
   2d9c4:	49 c1 ec 04          	shr    $0x4,%r12
   2d9c8:	48 89 74 24 58       	mov    %rsi,0x58(%rsp)
   2d9cd:	48 83 fe 18          	cmp    $0x18,%rsi
   2d9d1:	0f 82 85 01 00 00    	jb     2db5c <elf_add+0xc1c>
   2d9d7:	48 8d 43 06          	lea    0x6(%rbx),%rax
   2d9db:	31 c9                	xor    %ecx,%ecx
   2d9dd:	31 f6                	xor    %esi,%esi
   2d9df:	eb 11                	jmp    2d9f2 <elf_add+0xab2>
   2d9e1:	48 83 c1 01          	add    $0x1,%rcx
   2d9e5:	48 83 c0 18          	add    $0x18,%rax
   2d9e9:	4c 39 e1             	cmp    %r12,%rcx
   2d9ec:	0f 83 6c 01 00 00    	jae    2db5e <elf_add+0xc1e>
   2d9f2:	0f b6 50 fe          	movzbl -0x2(%rax),%edx
   2d9f6:	80 e2 0f             	and    $0xf,%dl
   2d9f9:	80 c2 ff             	add    $0xff,%dl
   2d9fc:	80 fa 01             	cmp    $0x1,%dl
   2d9ff:	77 e0                	ja     2d9e1 <elf_add+0xaa1>
   2da01:	66 83 38 01          	cmpw   $0x1,(%rax)
   2da05:	48 83 de ff          	sbb    $0xffffffffffffffff,%rsi
   2da09:	eb d6                	jmp    2d9e1 <elf_add+0xaa1>
   2da0b:	48 8d 35 fa 06 01 00 	lea    0x106fa(%rip),%rsi        # 3e10c <str.0+0x2ec>
   2da12:	45 31 e4             	xor    %r12d,%r12d
   2da15:	4c 89 ff             	mov    %r15,%rdi
   2da18:	31 d2                	xor    %edx,%edx
   2da1a:	41 ff d5             	callq  *%r13
   2da1d:	b3 01                	mov    $0x1,%bl
   2da1f:	48 8d b4 24 38 02 00 	lea    0x238(%rsp),%rsi
   2da26:	00 
   2da27:	48 8b 6c 24 10       	mov    0x10(%rsp),%rbp
   2da2c:	48 89 ef             	mov    %rbp,%rdi
   2da2f:	4c 89 ea             	mov    %r13,%rdx
   2da32:	4c 89 f9             	mov    %r15,%rcx
   2da35:	e8 76 b2 00 00       	callq  38cb0 <__rdos_backtrace_release_view>
   2da3a:	48 8d b4 24 68 02 00 	lea    0x268(%rsp),%rsi
   2da41:	00 
   2da42:	48 89 ef             	mov    %rbp,%rdi
   2da45:	4c 89 ea             	mov    %r13,%rdx
   2da48:	4c 89 f9             	mov    %r15,%rcx
   2da4b:	e8 60 b2 00 00       	callq  38cb0 <__rdos_backtrace_release_view>
   2da50:	c7 44 24 30 00 00 00 	movl   $0x0,0x30(%rsp)
   2da57:	00 
   2da58:	84 db                	test   %bl,%bl
   2da5a:	75 16                	jne    2da72 <elf_add+0xb32>
   2da5c:	48 8d b4 24 50 02 00 	lea    0x250(%rsp),%rsi
   2da63:	00 
   2da64:	48 89 ef             	mov    %rbp,%rdi
   2da67:	4c 89 ea             	mov    %r13,%rdx
   2da6a:	4c 89 f9             	mov    %r15,%rcx
   2da6d:	e8 3e b2 00 00       	callq  38cb0 <__rdos_backtrace_release_view>
   2da72:	48 8b ac 24 80 00 00 	mov    0x80(%rsp),%rbp
   2da79:	00 
   2da7a:	45 85 e4             	test   %r12d,%r12d
   2da7d:	48 8b 5c 24 10       	mov    0x10(%rsp),%rbx
   2da82:	74 16                	je     2da9a <elf_add+0xb5a>
   2da84:	48 8d b4 24 b0 02 00 	lea    0x2b0(%rsp),%rsi
   2da8b:	00 
   2da8c:	48 89 df             	mov    %rbx,%rdi
   2da8f:	4c 89 ea             	mov    %r13,%rdx
   2da92:	4c 89 f9             	mov    %r15,%rcx
   2da95:	e8 16 b2 00 00       	callq  38cb0 <__rdos_backtrace_release_view>
   2da9a:	83 7c 24 0c 00       	cmpl   $0x0,0xc(%rsp)
   2da9f:	74 16                	je     2dab7 <elf_add+0xb77>
   2daa1:	48 8d b4 24 08 02 00 	lea    0x208(%rsp),%rsi
   2daa8:	00 
   2daa9:	48 89 df             	mov    %rbx,%rdi
   2daac:	4c 89 ea             	mov    %r13,%rdx
   2daaf:	4c 89 f9             	mov    %r15,%rcx
   2dab2:	e8 f9 b1 00 00       	callq  38cb0 <__rdos_backtrace_release_view>
   2dab7:	83 7c 24 18 00       	cmpl   $0x0,0x18(%rsp)
   2dabc:	74 16                	je     2dad4 <elf_add+0xb94>
   2dabe:	48 8d b4 24 20 02 00 	lea    0x220(%rsp),%rsi
   2dac5:	00 
   2dac6:	48 89 df             	mov    %rbx,%rdi
   2dac9:	4c 89 ea             	mov    %r13,%rdx
   2dacc:	4c 89 f9             	mov    %r15,%rcx
   2dacf:	e8 dc b1 00 00       	callq  38cb0 <__rdos_backtrace_release_view>
   2dad4:	83 7c 24 30 00       	cmpl   $0x0,0x30(%rsp)
   2dad9:	74 16                	je     2daf1 <elf_add+0xbb1>
   2dadb:	48 8d b4 24 f8 02 00 	lea    0x2f8(%rsp),%rsi
   2dae2:	00 
   2dae3:	48 89 df             	mov    %rbx,%rdi
   2dae6:	4c 89 ea             	mov    %r13,%rdx
   2dae9:	4c 89 f9             	mov    %r15,%rcx
   2daec:	e8 bf b1 00 00       	callq  38cb0 <__rdos_backtrace_release_view>
   2daf1:	48 85 ed             	test   %rbp,%rbp
   2daf4:	0f 84 e6 f6 ff ff    	je     2d1e0 <elf_add+0x2a0>
   2dafa:	48 83 c5 18          	add    $0x18,%rbp
   2dafe:	48 89 df             	mov    %rbx,%rdi
   2db01:	48 89 ee             	mov    %rbp,%rsi
   2db04:	4c 89 ea             	mov    %r13,%rdx
   2db07:	4c 89 f9             	mov    %r15,%rcx
   2db0a:	e8 a1 b1 00 00       	callq  38cb0 <__rdos_backtrace_release_view>
   2db0f:	41 83 fe ff          	cmp    $0xffffffff,%r14d
   2db13:	0f 85 cd f6 ff ff    	jne    2d1e6 <elf_add+0x2a6>
   2db19:	e9 d6 f6 ff ff       	jmpq   2d1f4 <elf_add+0x2b4>
   2db1e:	b3 01                	mov    $0x1,%bl
   2db20:	45 31 e4             	xor    %r12d,%r12d
   2db23:	e9 f7 fe ff ff       	jmpq   2da1f <elf_add+0xadf>
   2db28:	45 31 e4             	xor    %r12d,%r12d
   2db2b:	31 db                	xor    %ebx,%ebx
   2db2d:	e9 ed fe ff ff       	jmpq   2da1f <elf_add+0xadf>
   2db32:	b3 01                	mov    $0x1,%bl
   2db34:	31 c0                	xor    %eax,%eax
   2db36:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   2db3b:	45 31 e4             	xor    %r12d,%r12d
   2db3e:	e9 dc fe ff ff       	jmpq   2da1f <elf_add+0xadf>
   2db43:	b3 01                	mov    $0x1,%bl
   2db45:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%rsp)
   2db4c:	00 
   2db4d:	45 31 e4             	xor    %r12d,%r12d
   2db50:	e9 ca fe ff ff       	jmpq   2da1f <elf_add+0xadf>
   2db55:	31 db                	xor    %ebx,%ebx
   2db57:	e9 c3 fe ff ff       	jmpq   2da1f <elf_add+0xadf>
   2db5c:	31 f6                	xor    %esi,%esi
   2db5e:	48 89 7c 24 20       	mov    %rdi,0x20(%rsp)
   2db63:	48 89 74 24 70       	mov    %rsi,0x70(%rsp)
   2db68:	48 8d 04 f5 00 00 00 	lea    0x0(,%rsi,8),%rax
   2db6f:	00 
   2db70:	48 8d 34 40          	lea    (%rax,%rax,2),%rsi
   2db74:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
   2db79:	48 89 b4 24 a0 00 00 	mov    %rsi,0xa0(%rsp)
   2db80:	00 
   2db81:	4c 89 ea             	mov    %r13,%rdx
   2db84:	4c 89 f9             	mov    %r15,%rcx
   2db87:	e8 b4 32 00 00       	callq  30e40 <__rdos_backtrace_alloc>
   2db8c:	48 85 c0             	test   %rax,%rax
   2db8f:	0f 84 61 01 00 00    	je     2dcf6 <elf_add+0xdb6>
   2db95:	49 89 c3             	mov    %rax,%r11
   2db98:	48 83 7c 24 58 18    	cmpq   $0x18,0x58(%rsp)
   2db9e:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   2dba3:	4c 8b 54 24 20       	mov    0x20(%rsp),%r10
   2dba8:	0f 82 6f 01 00 00    	jb     2dd1d <elf_add+0xddd>
   2dbae:	49 89 e9             	mov    %rbp,%r9
   2dbb1:	48 89 c5             	mov    %rax,%rbp
   2dbb4:	48 83 bc 24 80 00 00 	cmpq   $0x0,0x80(%rsp)
   2dbbb:	00 00 
   2dbbd:	0f 84 ae 00 00 00    	je     2dc71 <elf_add+0xd31>
   2dbc3:	45 31 c0             	xor    %r8d,%r8d
   2dbc6:	31 c9                	xor    %ecx,%ecx
   2dbc8:	eb 35                	jmp    2dbff <elf_add+0xcbf>
   2dbca:	4c 8b 7c 24 40       	mov    0x40(%rsp),%r15
   2dbcf:	48 8b 6c 24 10       	mov    0x10(%rsp),%rbp
   2dbd4:	48 03 b4 24 90 00 00 	add    0x90(%rsp),%rsi
   2dbdb:	00 
   2dbdc:	49 89 74 d3 08       	mov    %rsi,0x8(%r11,%rdx,8)
   2dbe1:	48 8b 73 10          	mov    0x10(%rbx),%rsi
   2dbe5:	49 89 74 d3 10       	mov    %rsi,0x10(%r11,%rdx,8)
   2dbea:	41 83 c0 01          	add    $0x1,%r8d
   2dbee:	48 83 c1 01          	add    $0x1,%rcx
   2dbf2:	48 83 c3 18          	add    $0x18,%rbx
   2dbf6:	4c 39 e1             	cmp    %r12,%rcx
   2dbf9:	0f 83 1e 01 00 00    	jae    2dd1d <elf_add+0xddd>
   2dbff:	0f b6 53 04          	movzbl 0x4(%rbx),%edx
   2dc03:	80 e2 0f             	and    $0xf,%dl
   2dc06:	80 c2 ff             	add    $0xff,%dl
   2dc09:	80 fa 01             	cmp    $0x1,%dl
   2dc0c:	77 e0                	ja     2dbee <elf_add+0xcae>
   2dc0e:	66 83 7b 06 00       	cmpw   $0x0,0x6(%rbx)
   2dc13:	74 d9                	je     2dbee <elf_add+0xcae>
   2dc15:	8b 33                	mov    (%rbx),%esi
   2dc17:	49 39 f2             	cmp    %rsi,%r10
   2dc1a:	0f 86 ab 00 00 00    	jbe    2dccb <elf_add+0xd8b>
   2dc20:	4c 01 ce             	add    %r9,%rsi
   2dc23:	44 89 c2             	mov    %r8d,%edx
   2dc26:	48 8d 14 52          	lea    (%rdx,%rdx,2),%rdx
   2dc2a:	49 89 34 d3          	mov    %rsi,(%r11,%rdx,8)
   2dc2e:	48 8b 73 08          	mov    0x8(%rbx),%rsi
   2dc32:	48 8b 84 24 80 00 00 	mov    0x80(%rsp),%rax
   2dc39:	00 
   2dc3a:	48 8b 28             	mov    (%rax),%rbp
   2dc3d:	48 89 f7             	mov    %rsi,%rdi
   2dc40:	48 29 ef             	sub    %rbp,%rdi
   2dc43:	72 85                	jb     2dbca <elf_add+0xc8a>
   2dc45:	48 03 68 10          	add    0x10(%rax),%rbp
   2dc49:	48 39 ee             	cmp    %rbp,%rsi
   2dc4c:	4c 8b 7c 24 40       	mov    0x40(%rsp),%r15
   2dc51:	48 8b 6c 24 10       	mov    0x10(%rsp),%rbp
   2dc56:	0f 83 78 ff ff ff    	jae    2dbd4 <elf_add+0xc94>
   2dc5c:	48 8b 84 24 80 00 00 	mov    0x80(%rsp),%rax
   2dc63:	00 
   2dc64:	48 8b 70 08          	mov    0x8(%rax),%rsi
   2dc68:	48 8b 34 3e          	mov    (%rsi,%rdi,1),%rsi
   2dc6c:	e9 63 ff ff ff       	jmpq   2dbd4 <elf_add+0xc94>
   2dc71:	31 c0                	xor    %eax,%eax
   2dc73:	31 c9                	xor    %ecx,%ecx
   2dc75:	eb 37                	jmp    2dcae <elf_add+0xd6e>
   2dc77:	4c 01 ca             	add    %r9,%rdx
   2dc7a:	89 c6                	mov    %eax,%esi
   2dc7c:	48 8d 34 76          	lea    (%rsi,%rsi,2),%rsi
   2dc80:	49 89 14 f3          	mov    %rdx,(%r11,%rsi,8)
   2dc84:	48 8b 53 08          	mov    0x8(%rbx),%rdx
   2dc88:	48 03 94 24 90 00 00 	add    0x90(%rsp),%rdx
   2dc8f:	00 
   2dc90:	49 89 54 f3 08       	mov    %rdx,0x8(%r11,%rsi,8)
   2dc95:	48 8b 53 10          	mov    0x10(%rbx),%rdx
   2dc99:	49 89 54 f3 10       	mov    %rdx,0x10(%r11,%rsi,8)
   2dc9e:	83 c0 01             	add    $0x1,%eax
   2dca1:	48 83 c1 01          	add    $0x1,%rcx
   2dca5:	48 83 c3 18          	add    $0x18,%rbx
   2dca9:	4c 39 e1             	cmp    %r12,%rcx
   2dcac:	73 6f                	jae    2dd1d <elf_add+0xddd>
   2dcae:	0f b6 53 04          	movzbl 0x4(%rbx),%edx
   2dcb2:	80 e2 0f             	and    $0xf,%dl
   2dcb5:	80 c2 ff             	add    $0xff,%dl
   2dcb8:	80 fa 01             	cmp    $0x1,%dl
   2dcbb:	77 e4                	ja     2dca1 <elf_add+0xd61>
   2dcbd:	66 83 7b 06 00       	cmpw   $0x0,0x6(%rbx)
   2dcc2:	74 dd                	je     2dca1 <elf_add+0xd61>
   2dcc4:	8b 13                	mov    (%rbx),%edx
   2dcc6:	49 39 d2             	cmp    %rdx,%r10
   2dcc9:	77 ac                	ja     2dc77 <elf_add+0xd37>
   2dccb:	48 8d 35 e7 04 01 00 	lea    0x104e7(%rip),%rsi        # 3e1b9 <str.0+0x399>
   2dcd2:	4c 89 ff             	mov    %r15,%rdi
   2dcd5:	31 d2                	xor    %edx,%edx
   2dcd7:	4c 89 db             	mov    %r11,%rbx
   2dcda:	41 ff d5             	callq  *%r13
   2dcdd:	48 89 ef             	mov    %rbp,%rdi
   2dce0:	48 89 de             	mov    %rbx,%rsi
   2dce3:	48 8b 94 24 a0 00 00 	mov    0xa0(%rsp),%rdx
   2dcea:	00 
   2dceb:	4c 89 e9             	mov    %r13,%rcx
   2dcee:	4d 89 f8             	mov    %r15,%r8
   2dcf1:	e8 8a 31 00 00       	callq  30e80 <__rdos_backtrace_free>
   2dcf6:	ba 18 00 00 00       	mov    $0x18,%edx
   2dcfb:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
   2dd00:	48 8b 74 24 30       	mov    0x30(%rsp),%rsi
   2dd05:	4c 89 e9             	mov    %r13,%rcx
   2dd08:	4d 89 f8             	mov    %r15,%r8
   2dd0b:	e8 70 31 00 00       	callq  30e80 <__rdos_backtrace_free>
   2dd10:	31 db                	xor    %ebx,%ebx
   2dd12:	41 bc 01 00 00 00    	mov    $0x1,%r12d
   2dd18:	e9 02 fd ff ff       	jmpq   2da1f <elf_add+0xadf>
   2dd1d:	48 8d 0d dc 30 00 00 	lea    0x30dc(%rip),%rcx        # 30e00 <elf_symbol_compare>
   2dd24:	ba 18 00 00 00       	mov    $0x18,%edx
   2dd29:	4c 89 df             	mov    %r11,%rdi
   2dd2c:	48 8b 6c 24 70       	mov    0x70(%rsp),%rbp
   2dd31:	48 89 ee             	mov    %rbp,%rsi
   2dd34:	4d 89 dc             	mov    %r11,%r12
   2dd37:	e8 94 af 00 00       	callq  38cd0 <__rdos_backtrace_qsort>
   2dd3c:	48 8b 5c 24 30       	mov    0x30(%rsp),%rbx
   2dd41:	48 c7 03 00 00 00 00 	movq   $0x0,(%rbx)
   2dd48:	4c 89 63 08          	mov    %r12,0x8(%rbx)
   2dd4c:	48 89 6b 10          	mov    %rbp,0x10(%rbx)
   2dd50:	48 8b 6c 24 10       	mov    0x10(%rsp),%rbp
   2dd55:	48 8d b4 24 50 02 00 	lea    0x250(%rsp),%rsi
   2dd5c:	00 
   2dd5d:	48 89 ef             	mov    %rbp,%rdi
   2dd60:	4c 89 ea             	mov    %r13,%rdx
   2dd63:	4c 89 f9             	mov    %r15,%rcx
   2dd66:	e8 45 af 00 00       	callq  38cb0 <__rdos_backtrace_release_view>
   2dd6b:	48 8b 84 24 c8 03 00 	mov    0x3c8(%rsp),%rax
   2dd72:	00 
   2dd73:	c7 00 01 00 00 00    	movl   $0x1,(%rax)
   2dd79:	83 7d 08 00          	cmpl   $0x0,0x8(%rbp)
   2dd7d:	0f 85 7d 12 00 00    	jne    2f000 <elf_add+0x20c0>
   2dd83:	48 8d 45 30          	lea    0x30(%rbp),%rax
   2dd87:	44 8b 64 24 64       	mov    0x64(%rsp),%r12d
   2dd8c:	48 89 c1             	mov    %rax,%rcx
   2dd8f:	48 8b 00             	mov    (%rax),%rax
   2dd92:	48 85 c0             	test   %rax,%rax
   2dd95:	75 f5                	jne    2dd8c <elf_add+0xe4c>
   2dd97:	48 89 19             	mov    %rbx,(%rcx)
   2dd9a:	ba 01 00 00 00       	mov    $0x1,%edx
   2dd9f:	89 54 24 20          	mov    %edx,0x20(%rsp)
   2dda3:	48 8d b4 24 38 02 00 	lea    0x238(%rsp),%rsi
   2ddaa:	00 
   2ddab:	48 8b 6c 24 10       	mov    0x10(%rsp),%rbp
   2ddb0:	48 89 ef             	mov    %rbp,%rdi
   2ddb3:	4c 89 ea             	mov    %r13,%rdx
   2ddb6:	4c 89 f9             	mov    %r15,%rcx
   2ddb9:	e8 f2 ae 00 00       	callq  38cb0 <__rdos_backtrace_release_view>
   2ddbe:	48 8d b4 24 68 02 00 	lea    0x268(%rsp),%rsi
   2ddc5:	00 
   2ddc6:	48 89 ef             	mov    %rbp,%rdi
   2ddc9:	4c 89 ea             	mov    %r13,%rdx
   2ddcc:	4c 89 f9             	mov    %r15,%rcx
   2ddcf:	e8 dc ae 00 00       	callq  38cb0 <__rdos_backtrace_release_view>
   2ddd4:	48 83 bc 24 88 00 00 	cmpq   $0x0,0x88(%rsp)
   2dddb:	00 00 
   2dddd:	0f 84 99 01 00 00    	je     2df7c <elf_add+0x103c>
   2dde3:	44 89 e3             	mov    %r12d,%ebx
   2dde6:	48 8d 34 1b          	lea    (%rbx,%rbx,1),%rsi
   2ddea:	48 83 c6 21          	add    $0x21,%rsi
   2ddee:	48 89 ef             	mov    %rbp,%rdi
   2ddf1:	48 89 74 24 30       	mov    %rsi,0x30(%rsp)
   2ddf6:	4c 89 ea             	mov    %r13,%rdx
   2ddf9:	4c 89 f9             	mov    %r15,%rcx
   2ddfc:	e8 3f 30 00 00       	callq  30e40 <__rdos_backtrace_alloc>
   2de01:	48 85 c0             	test   %rax,%rax
   2de04:	0f 84 95 00 00 00    	je     2de9f <elf_add+0xf5f>
   2de0a:	49 89 c6             	mov    %rax,%r14
   2de0d:	0f 10 05 cf 03 01 00 	movups 0x103cf(%rip),%xmm0        # 3e1e3 <str.0+0x3c3>
   2de14:	0f 11 40 09          	movups %xmm0,0x9(%rax)
   2de18:	0f 10 05 bb 03 01 00 	movups 0x103bb(%rip),%xmm0        # 3e1da <str.0+0x3ba>
   2de1f:	0f 11 00             	movups %xmm0,(%rax)
   2de22:	48 83 c0 19          	add    $0x19,%rax
   2de26:	45 85 e4             	test   %r12d,%r12d
   2de29:	74 7e                	je     2dea9 <elf_add+0xf69>
   2de2b:	31 c9                	xor    %ecx,%ecx
   2de2d:	48 8b ac 24 88 00 00 	mov    0x88(%rsp),%rbp
   2de34:	00 
   2de35:	4c 8b 64 24 30       	mov    0x30(%rsp),%r12
   2de3a:	eb 11                	jmp    2de4d <elf_add+0xf0d>
   2de3c:	c6 40 02 2f          	movb   $0x2f,0x2(%rax)
   2de40:	48 83 c0 03          	add    $0x3,%rax
   2de44:	48 83 c1 01          	add    $0x1,%rcx
   2de48:	48 39 cb             	cmp    %rcx,%rbx
   2de4b:	74 61                	je     2deae <elf_add+0xf6e>
   2de4d:	0f b6 54 0d 00       	movzbl 0x0(%rbp,%rcx,1),%edx
   2de52:	89 d6                	mov    %edx,%esi
   2de54:	40 c0 ee 04          	shr    $0x4,%sil
   2de58:	8d 7e 30             	lea    0x30(%rsi),%edi
   2de5b:	40 80 c6 57          	add    $0x57,%sil
   2de5f:	80 fa a0             	cmp    $0xa0,%dl
   2de62:	40 0f b6 ff          	movzbl %dil,%edi
   2de66:	40 0f b6 f6          	movzbl %sil,%esi
   2de6a:	0f 42 f7             	cmovb  %edi,%esi
   2de6d:	40 88 30             	mov    %sil,(%rax)
   2de70:	80 e2 0f             	and    $0xf,%dl
   2de73:	8d 72 30             	lea    0x30(%rdx),%esi
   2de76:	8d 7a 57             	lea    0x57(%rdx),%edi
   2de79:	80 fa 0a             	cmp    $0xa,%dl
   2de7c:	40 0f b6 d6          	movzbl %sil,%edx
   2de80:	40 0f b6 f7          	movzbl %dil,%esi
   2de84:	0f 42 f2             	cmovb  %edx,%esi
   2de87:	40 88 70 01          	mov    %sil,0x1(%rax)
   2de8b:	48 85 c9             	test   %rcx,%rcx
   2de8e:	74 ac                	je     2de3c <elf_add+0xefc>
   2de90:	48 83 c0 02          	add    $0x2,%rax
   2de94:	48 83 c1 01          	add    $0x1,%rcx
   2de98:	48 39 cb             	cmp    %rcx,%rbx
   2de9b:	75 b0                	jne    2de4d <elf_add+0xf0d>
   2de9d:	eb 0f                	jmp    2deae <elf_add+0xf6e>
   2de9f:	44 8b 74 24 38       	mov    0x38(%rsp),%r14d
   2dea4:	e9 d3 00 00 00       	jmpq   2df7c <elf_add+0x103c>
   2dea9:	4c 8b 64 24 30       	mov    0x30(%rsp),%r12
   2deae:	66 c7 40 04 75 67    	movw   $0x6775,0x4(%rax)
   2deb4:	c7 00 2e 64 65 62    	movl   $0x6265642e,(%rax)
   2deba:	c6 40 06 00          	movb   $0x0,0x6(%rax)
   2debe:	48 8d 8c 24 f8 02 00 	lea    0x2f8(%rsp),%rcx
   2dec5:	00 
   2dec6:	4c 89 f7             	mov    %r14,%rdi
   2dec9:	4c 89 ee             	mov    %r13,%rsi
   2decc:	4c 89 fa             	mov    %r15,%rdx
   2decf:	e8 bc ed ff ff       	callq  2cc90 <__rdos_backtrace_open>
   2ded4:	89 c5                	mov    %eax,%ebp
   2ded6:	48 8b 5c 24 10       	mov    0x10(%rsp),%rbx
   2dedb:	48 89 df             	mov    %rbx,%rdi
   2dede:	4c 89 f6             	mov    %r14,%rsi
   2dee1:	4c 89 e2             	mov    %r12,%rdx
   2dee4:	4c 89 e9             	mov    %r13,%rcx
   2dee7:	4d 89 f8             	mov    %r15,%r8
   2deea:	e8 91 2f 00 00       	callq  30e80 <__rdos_backtrace_free>
   2deef:	85 ed                	test   %ebp,%ebp
   2def1:	44 8b 74 24 38       	mov    0x38(%rsp),%r14d
   2def6:	0f 88 80 00 00 00    	js     2df7c <elf_add+0x103c>
   2defc:	48 8d b4 24 20 02 00 	lea    0x220(%rsp),%rsi
   2df03:	00 
   2df04:	48 89 df             	mov    %rbx,%rdi
   2df07:	4c 89 ea             	mov    %r13,%rdx
   2df0a:	4c 89 f9             	mov    %r15,%rcx
   2df0d:	e8 9e ad 00 00       	callq  38cb0 <__rdos_backtrace_release_view>
   2df12:	83 7c 24 0c 00       	cmpl   $0x0,0xc(%rsp)
   2df17:	74 16                	je     2df2f <elf_add+0xfef>
   2df19:	48 8d b4 24 08 02 00 	lea    0x208(%rsp),%rsi
   2df20:	00 
   2df21:	48 89 df             	mov    %rbx,%rdi
   2df24:	4c 89 ea             	mov    %r13,%rdx
   2df27:	4c 89 f9             	mov    %r15,%rcx
   2df2a:	e8 81 ad 00 00       	callq  38cb0 <__rdos_backtrace_release_view>
   2df2f:	48 83 ec 08          	sub    $0x8,%rsp
   2df33:	48 89 df             	mov    %rbx,%rdi
   2df36:	31 f6                	xor    %esi,%esi
   2df38:	89 ea                	mov    %ebp,%edx
   2df3a:	48 8b 8c 24 98 00 00 	mov    0x98(%rsp),%rcx
   2df41:	00 
   2df42:	4d 89 e8             	mov    %r13,%r8
   2df45:	4d 89 f9             	mov    %r15,%r9
   2df48:	6a 01                	pushq  $0x1
   2df4a:	6a 00                	pushq  $0x0
   2df4c:	ff b4 24 e8 03 00 00 	pushq  0x3e8(%rsp)
   2df53:	ff b4 24 e8 03 00 00 	pushq  0x3e8(%rsp)
   2df5a:	ff b4 24 e8 03 00 00 	pushq  0x3e8(%rsp)
   2df61:	e8 da ef ff ff       	callq  2cf40 <elf_add>
   2df66:	48 83 c4 30          	add    $0x30,%rsp
   2df6a:	41 89 c4             	mov    %eax,%r12d
   2df6d:	85 c0                	test   %eax,%eax
   2df6f:	0f 89 01 04 00 00    	jns    2e376 <elf_add+0x1436>
   2df75:	89 ef                	mov    %ebp,%edi
   2df77:	e9 bd 07 00 00       	jmpq   2e739 <elf_add+0x17f9>
   2df7c:	83 7c 24 18 00       	cmpl   $0x0,0x18(%rsp)
   2df81:	74 18                	je     2df9b <elf_add+0x105b>
   2df83:	48 8d b4 24 20 02 00 	lea    0x220(%rsp),%rsi
   2df8a:	00 
   2df8b:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
   2df90:	4c 89 ea             	mov    %r13,%rdx
   2df93:	4c 89 f9             	mov    %r15,%rcx
   2df96:	e8 15 ad 00 00       	callq  38cb0 <__rdos_backtrace_release_view>
   2df9b:	48 8b b4 24 80 00 00 	mov    0x80(%rsp),%rsi
   2dfa2:	00 
   2dfa3:	48 85 f6             	test   %rsi,%rsi
   2dfa6:	48 8b 5c 24 68       	mov    0x68(%rsp),%rbx
   2dfab:	74 14                	je     2dfc1 <elf_add+0x1081>
   2dfad:	48 83 c6 18          	add    $0x18,%rsi
   2dfb1:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
   2dfb6:	4c 89 ea             	mov    %r13,%rdx
   2dfb9:	4c 89 f9             	mov    %r15,%rcx
   2dfbc:	e8 ef ac 00 00       	callq  38cb0 <__rdos_backtrace_release_view>
   2dfc1:	48 85 db             	test   %rbx,%rbx
   2dfc4:	48 8b 9c 24 00 02 00 	mov    0x200(%rsp),%rbx
   2dfcb:	00 
   2dfcc:	0f 84 ac 03 00 00    	je     2e37e <elf_add+0x143e>
   2dfd2:	48 89 df             	mov    %rbx,%rdi
   2dfd5:	be 2f 00 00 00       	mov    $0x2f,%esi
   2dfda:	e8 41 60 fd ff       	callq  4020 <strrchr@plt>
   2dfdf:	49 89 c4             	mov    %rax,%r12
   2dfe2:	49 29 dc             	sub    %rbx,%r12
   2dfe5:	49 83 c4 01          	add    $0x1,%r12
   2dfe9:	48 85 c0             	test   %rax,%rax
   2dfec:	48 8d 2d 00 02 01 00 	lea    0x10200(%rip),%rbp        # 3e1f3 <str.0+0x3d3>
   2dff3:	48 0f 45 eb          	cmovne %rbx,%rbp
   2dff7:	4c 0f 44 e0          	cmove  %rax,%r12
   2dffb:	48 8b 7c 24 68       	mov    0x68(%rsp),%rdi
   2e000:	e8 c3 60 fd ff       	callq  40c8 <strlen@plt>
   2e005:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   2e00a:	49 8d 34 04          	lea    (%r12,%rax,1),%rsi
   2e00e:	48 83 c6 01          	add    $0x1,%rsi
   2e012:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
   2e017:	48 89 74 24 30       	mov    %rsi,0x30(%rsp)
   2e01c:	4c 89 ea             	mov    %r13,%rdx
   2e01f:	4c 89 f9             	mov    %r15,%rcx
   2e022:	e8 19 2e 00 00       	callq  30e40 <__rdos_backtrace_alloc>
   2e027:	48 85 c0             	test   %rax,%rax
   2e02a:	48 89 6c 24 58       	mov    %rbp,0x58(%rsp)
   2e02f:	74 70                	je     2e0a1 <elf_add+0x1161>
   2e031:	48 89 c3             	mov    %rax,%rbx
   2e034:	4c 8b 7c 24 38       	mov    0x38(%rsp),%r15
   2e039:	4d 01 e7             	add    %r12,%r15
   2e03c:	48 89 c7             	mov    %rax,%rdi
   2e03f:	48 89 ee             	mov    %rbp,%rsi
   2e042:	4c 89 e2             	mov    %r12,%rdx
   2e045:	e8 8e 60 fd ff       	callq  40d8 <memcpy@plt>
   2e04a:	48 89 df             	mov    %rbx,%rdi
   2e04d:	4c 01 e7             	add    %r12,%rdi
   2e050:	48 8b 74 24 68       	mov    0x68(%rsp),%rsi
   2e055:	48 8b 54 24 38       	mov    0x38(%rsp),%rdx
   2e05a:	e8 79 60 fd ff       	callq  40d8 <memcpy@plt>
   2e05f:	42 c6 04 3b 00       	movb   $0x0,(%rbx,%r15,1)
   2e064:	4c 8b 7c 24 40       	mov    0x40(%rsp),%r15
   2e069:	48 8d 8c 24 f8 02 00 	lea    0x2f8(%rsp),%rcx
   2e070:	00 
   2e071:	48 89 df             	mov    %rbx,%rdi
   2e074:	4c 89 ee             	mov    %r13,%rsi
   2e077:	4c 89 fa             	mov    %r15,%rdx
   2e07a:	e8 11 ec ff ff       	callq  2cc90 <__rdos_backtrace_open>
   2e07f:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
   2e084:	48 89 de             	mov    %rbx,%rsi
   2e087:	89 c3                	mov    %eax,%ebx
   2e089:	48 8b 54 24 30       	mov    0x30(%rsp),%rdx
   2e08e:	4c 89 e9             	mov    %r13,%rcx
   2e091:	4d 89 f8             	mov    %r15,%r8
   2e094:	e8 e7 2d 00 00       	callq  30e80 <__rdos_backtrace_free>
   2e099:	85 db                	test   %ebx,%ebx
   2e09b:	0f 89 7e 01 00 00    	jns    2e21f <elf_add+0x12df>
   2e0a1:	48 8b 7c 24 68       	mov    0x68(%rsp),%rdi
   2e0a6:	e8 1d 60 fd ff       	callq  40c8 <strlen@plt>
   2e0ab:	48 89 c5             	mov    %rax,%rbp
   2e0ae:	49 8d 34 04          	lea    (%r12,%rax,1),%rsi
   2e0b2:	48 83 c6 08          	add    $0x8,%rsi
   2e0b6:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
   2e0bb:	48 89 74 24 38       	mov    %rsi,0x38(%rsp)
   2e0c0:	4c 89 ea             	mov    %r13,%rdx
   2e0c3:	4c 89 f9             	mov    %r15,%rcx
   2e0c6:	e8 75 2d 00 00       	callq  30e40 <__rdos_backtrace_alloc>
   2e0cb:	48 85 c0             	test   %rax,%rax
   2e0ce:	0f 84 83 00 00 00    	je     2e157 <elf_add+0x1217>
   2e0d4:	48 89 c3             	mov    %rax,%rbx
   2e0d7:	4d 8d 3c 2c          	lea    (%r12,%rbp,1),%r15
   2e0db:	49 83 c7 07          	add    $0x7,%r15
   2e0df:	48 89 c7             	mov    %rax,%rdi
   2e0e2:	48 8b 74 24 58       	mov    0x58(%rsp),%rsi
   2e0e7:	4c 89 e2             	mov    %r12,%rdx
   2e0ea:	e8 e9 5f fd ff       	callq  40d8 <memcpy@plt>
   2e0ef:	42 c7 04 23 2e 64 65 	movl   $0x6265642e,(%rbx,%r12,1)
   2e0f6:	62 
   2e0f7:	42 c7 44 23 03 62 75 	movl   $0x2f677562,0x3(%rbx,%r12,1)
   2e0fe:	67 2f 
   2e100:	4a 8d 3c 23          	lea    (%rbx,%r12,1),%rdi
   2e104:	48 83 c7 07          	add    $0x7,%rdi
   2e108:	48 8b 74 24 68       	mov    0x68(%rsp),%rsi
   2e10d:	48 89 ea             	mov    %rbp,%rdx
   2e110:	e8 c3 5f fd ff       	callq  40d8 <memcpy@plt>
   2e115:	42 c6 04 3b 00       	movb   $0x0,(%rbx,%r15,1)
   2e11a:	4c 8b 7c 24 40       	mov    0x40(%rsp),%r15
   2e11f:	48 8d 8c 24 f8 02 00 	lea    0x2f8(%rsp),%rcx
   2e126:	00 
   2e127:	48 89 df             	mov    %rbx,%rdi
   2e12a:	4c 89 ee             	mov    %r13,%rsi
   2e12d:	4c 89 fa             	mov    %r15,%rdx
   2e130:	e8 5b eb ff ff       	callq  2cc90 <__rdos_backtrace_open>
   2e135:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
   2e13a:	48 89 de             	mov    %rbx,%rsi
   2e13d:	89 c3                	mov    %eax,%ebx
   2e13f:	48 8b 54 24 38       	mov    0x38(%rsp),%rdx
   2e144:	4c 89 e9             	mov    %r13,%rcx
   2e147:	4d 89 f8             	mov    %r15,%r8
   2e14a:	e8 31 2d 00 00       	callq  30e80 <__rdos_backtrace_free>
   2e14f:	85 db                	test   %ebx,%ebx
   2e151:	0f 89 c8 00 00 00    	jns    2e21f <elf_add+0x12df>
   2e157:	48 8b 7c 24 68       	mov    0x68(%rsp),%rdi
   2e15c:	e8 67 5f fd ff       	callq  40c8 <strlen@plt>
   2e161:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   2e166:	49 8d 34 04          	lea    (%r12,%rax,1),%rsi
   2e16a:	48 83 c6 10          	add    $0x10,%rsi
   2e16e:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
   2e173:	48 89 74 24 38       	mov    %rsi,0x38(%rsp)
   2e178:	4c 89 ea             	mov    %r13,%rdx
   2e17b:	4c 89 f9             	mov    %r15,%rcx
   2e17e:	e8 bd 2c 00 00       	callq  30e40 <__rdos_backtrace_alloc>
   2e183:	48 85 c0             	test   %rax,%rax
   2e186:	0f 84 f2 01 00 00    	je     2e37e <elf_add+0x143e>
   2e18c:	48 89 c3             	mov    %rax,%rbx
   2e18f:	48 8b 6c 24 30       	mov    0x30(%rsp),%rbp
   2e194:	4d 8d 3c 2c          	lea    (%r12,%rbp,1),%r15
   2e198:	49 83 c7 0f          	add    $0xf,%r15
   2e19c:	48 b8 62 2f 64 65 62 	movabs $0x2f67756265642f62,%rax
   2e1a3:	75 67 2f 
   2e1a6:	48 89 43 07          	mov    %rax,0x7(%rbx)
   2e1aa:	48 b8 2f 75 73 72 2f 	movabs $0x62696c2f7273752f,%rax
   2e1b1:	6c 69 62 
   2e1b4:	48 89 03             	mov    %rax,(%rbx)
   2e1b7:	48 8d 7b 0f          	lea    0xf(%rbx),%rdi
   2e1bb:	48 8b 74 24 58       	mov    0x58(%rsp),%rsi
   2e1c0:	4c 89 e2             	mov    %r12,%rdx
   2e1c3:	e8 10 5f fd ff       	callq  40d8 <memcpy@plt>
   2e1c8:	4a 8d 3c 23          	lea    (%rbx,%r12,1),%rdi
   2e1cc:	48 83 c7 0f          	add    $0xf,%rdi
   2e1d0:	48 8b 74 24 68       	mov    0x68(%rsp),%rsi
   2e1d5:	48 89 ea             	mov    %rbp,%rdx
   2e1d8:	e8 fb 5e fd ff       	callq  40d8 <memcpy@plt>
   2e1dd:	42 c6 04 3b 00       	movb   $0x0,(%rbx,%r15,1)
   2e1e2:	4c 8b 7c 24 40       	mov    0x40(%rsp),%r15
   2e1e7:	48 8d 8c 24 f8 02 00 	lea    0x2f8(%rsp),%rcx
   2e1ee:	00 
   2e1ef:	48 89 df             	mov    %rbx,%rdi
   2e1f2:	4c 89 ee             	mov    %r13,%rsi
   2e1f5:	4c 89 fa             	mov    %r15,%rdx
   2e1f8:	e8 93 ea ff ff       	callq  2cc90 <__rdos_backtrace_open>
   2e1fd:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
   2e202:	48 89 de             	mov    %rbx,%rsi
   2e205:	89 c3                	mov    %eax,%ebx
   2e207:	48 8b 54 24 38       	mov    0x38(%rsp),%rdx
   2e20c:	4c 89 e9             	mov    %r13,%rcx
   2e20f:	4d 89 f8             	mov    %r15,%r8
   2e212:	e8 69 2c 00 00       	callq  30e80 <__rdos_backtrace_free>
   2e217:	85 db                	test   %ebx,%ebx
   2e219:	0f 88 5f 01 00 00    	js     2e37e <elf_add+0x143e>
   2e21f:	83 7c 24 7c 00       	cmpl   $0x0,0x7c(%rsp)
   2e224:	0f 84 eb 00 00 00    	je     2e315 <elf_add+0x13d5>
   2e22a:	48 8d 94 24 f8 02 00 	lea    0x2f8(%rsp),%rdx
   2e231:	00 
   2e232:	bf 01 00 00 00       	mov    $0x1,%edi
   2e237:	89 de                	mov    %ebx,%esi
   2e239:	e8 32 5e fd ff       	callq  4070 <__fxstat@plt>
   2e23e:	85 c0                	test   %eax,%eax
   2e240:	89 de                	mov    %ebx,%esi
   2e242:	78 77                	js     2e2bb <elf_add+0x137b>
   2e244:	48 8b 8c 24 28 03 00 	mov    0x328(%rsp),%rcx
   2e24b:	00 
   2e24c:	48 83 ec 08          	sub    $0x8,%rsp
   2e250:	48 8d 84 24 e8 02 00 	lea    0x2e8(%rsp),%rax
   2e257:	00 
   2e258:	31 db                	xor    %ebx,%ebx
   2e25a:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
   2e25f:	41 89 f4             	mov    %esi,%r12d
   2e262:	31 d2                	xor    %edx,%edx
   2e264:	4d 89 e8             	mov    %r13,%r8
   2e267:	4d 89 f9             	mov    %r15,%r9
   2e26a:	50                   	push   %rax
   2e26b:	e8 70 a9 00 00       	callq  38be0 <__rdos_backtrace_get_view>
   2e270:	48 83 c4 10          	add    $0x10,%rsp
   2e274:	85 c0                	test   %eax,%eax
   2e276:	0f 84 8b 00 00 00    	je     2e307 <elf_add+0x13c7>
   2e27c:	48 8b 84 24 28 03 00 	mov    0x328(%rsp),%rax
   2e283:	00 
   2e284:	48 85 c0             	test   %rax,%rax
   2e287:	7e 64                	jle    2e2ed <elf_add+0x13ad>
   2e289:	48 8b 8c 24 e0 02 00 	mov    0x2e0(%rsp),%rcx
   2e290:	00 
   2e291:	48 01 c8             	add    %rcx,%rax
   2e294:	bb ff ff ff ff       	mov    $0xffffffff,%ebx
   2e299:	48 8d 15 80 04 01 00 	lea    0x10480(%rip),%rdx        # 3e720 <elf_crc32.crc32_table>
   2e2a0:	0f b6 31             	movzbl (%rcx),%esi
   2e2a3:	0f b6 fb             	movzbl %bl,%edi
   2e2a6:	31 f7                	xor    %esi,%edi
   2e2a8:	c1 eb 08             	shr    $0x8,%ebx
   2e2ab:	33 1c ba             	xor    (%rdx,%rdi,4),%ebx
   2e2ae:	48 83 c1 01          	add    $0x1,%rcx
   2e2b2:	48 39 c1             	cmp    %rax,%rcx
   2e2b5:	72 e9                	jb     2e2a0 <elf_add+0x1360>
   2e2b7:	f7 d3                	not    %ebx
   2e2b9:	eb 34                	jmp    2e2ef <elf_add+0x13af>
   2e2bb:	41 89 f4             	mov    %esi,%r12d
   2e2be:	e8 fd 5d fd ff       	callq  40c0 <__errno_location@plt>
   2e2c3:	8b 10                	mov    (%rax),%edx
   2e2c5:	48 8d 35 47 ff 00 00 	lea    0xff47(%rip),%rsi        # 3e213 <str.0+0x3f3>
   2e2cc:	4c 89 ff             	mov    %r15,%rdi
   2e2cf:	41 ff d5             	callq  *%r13
   2e2d2:	31 db                	xor    %ebx,%ebx
   2e2d4:	3b 5c 24 7c          	cmp    0x7c(%rsp),%ebx
   2e2d8:	74 33                	je     2e30d <elf_add+0x13cd>
   2e2da:	44 89 e7             	mov    %r12d,%edi
   2e2dd:	4c 89 ee             	mov    %r13,%rsi
   2e2e0:	4c 89 fa             	mov    %r15,%rdx
   2e2e3:	e8 18 ea ff ff       	callq  2cd00 <__rdos_backtrace_close>
   2e2e8:	e9 91 00 00 00       	jmpq   2e37e <elf_add+0x143e>
   2e2ed:	31 db                	xor    %ebx,%ebx
   2e2ef:	48 8d b4 24 e0 02 00 	lea    0x2e0(%rsp),%rsi
   2e2f6:	00 
   2e2f7:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
   2e2fc:	4c 89 ea             	mov    %r13,%rdx
   2e2ff:	4c 89 f9             	mov    %r15,%rcx
   2e302:	e8 a9 a9 00 00       	callq  38cb0 <__rdos_backtrace_release_view>
   2e307:	3b 5c 24 7c          	cmp    0x7c(%rsp),%ebx
   2e30b:	75 cd                	jne    2e2da <elf_add+0x139a>
   2e30d:	44 89 e3             	mov    %r12d,%ebx
   2e310:	45 85 e4             	test   %r12d,%r12d
   2e313:	78 69                	js     2e37e <elf_add+0x143e>
   2e315:	48 8d b4 24 08 02 00 	lea    0x208(%rsp),%rsi
   2e31c:	00 
   2e31d:	48 8b 6c 24 10       	mov    0x10(%rsp),%rbp
   2e322:	48 89 ef             	mov    %rbp,%rdi
   2e325:	4c 89 ea             	mov    %r13,%rdx
   2e328:	4c 89 f9             	mov    %r15,%rcx
   2e32b:	e8 80 a9 00 00       	callq  38cb0 <__rdos_backtrace_release_view>
   2e330:	48 83 ec 08          	sub    $0x8,%rsp
   2e334:	48 89 ef             	mov    %rbp,%rdi
   2e337:	31 f6                	xor    %esi,%esi
   2e339:	89 da                	mov    %ebx,%edx
   2e33b:	48 8b 8c 24 98 00 00 	mov    0x98(%rsp),%rcx
   2e342:	00 
   2e343:	4d 89 e8             	mov    %r13,%r8
   2e346:	4d 89 f9             	mov    %r15,%r9
   2e349:	6a 01                	pushq  $0x1
   2e34b:	6a 00                	pushq  $0x0
   2e34d:	ff b4 24 e8 03 00 00 	pushq  0x3e8(%rsp)
   2e354:	ff b4 24 e8 03 00 00 	pushq  0x3e8(%rsp)
   2e35b:	ff b4 24 e8 03 00 00 	pushq  0x3e8(%rsp)
   2e362:	e8 d9 eb ff ff       	callq  2cf40 <elf_add>
   2e367:	48 83 c4 30          	add    $0x30,%rsp
   2e36b:	41 89 c4             	mov    %eax,%r12d
   2e36e:	85 c0                	test   %eax,%eax
   2e370:	0f 88 c1 03 00 00    	js     2e737 <elf_add+0x17f7>
   2e376:	44 89 f7             	mov    %r14d,%edi
   2e379:	e9 bb 03 00 00       	jmpq   2e739 <elf_add+0x17f9>
   2e37e:	83 7c 24 0c 00       	cmpl   $0x0,0xc(%rsp)
   2e383:	74 18                	je     2e39d <elf_add+0x145d>
   2e385:	48 8d b4 24 08 02 00 	lea    0x208(%rsp),%rsi
   2e38c:	00 
   2e38d:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
   2e392:	4c 89 ea             	mov    %r13,%rdx
   2e395:	4c 89 f9             	mov    %r15,%rcx
   2e398:	e8 13 a9 00 00       	callq  38cb0 <__rdos_backtrace_release_view>
   2e39d:	48 8b 84 24 b8 00 00 	mov    0xb8(%rsp),%rax
   2e3a4:	00 
   2e3a5:	48 85 c0             	test   %rax,%rax
   2e3a8:	0f 84 52 03 00 00    	je     2e700 <elf_add+0x17c0>
   2e3ae:	4c 8b a4 24 b0 00 00 	mov    0xb0(%rsp),%r12
   2e3b5:	00 
   2e3b6:	31 c9                	xor    %ecx,%ecx
   2e3b8:	4c 01 e0             	add    %r12,%rax
   2e3bb:	48 0f 49 c8          	cmovns %rax,%rcx
   2e3bf:	48 8b 84 24 d8 00 00 	mov    0xd8(%rsp),%rax
   2e3c6:	00 
   2e3c7:	48 85 c0             	test   %rax,%rax
   2e3ca:	74 26                	je     2e3f2 <elf_add+0x14b2>
   2e3cc:	48 8b 94 24 d0 00 00 	mov    0xd0(%rsp),%rdx
   2e3d3:	00 
   2e3d4:	4c 39 e2             	cmp    %r12,%rdx
   2e3d7:	4c 89 e6             	mov    %r12,%rsi
   2e3da:	48 0f 4e f2          	cmovle %rdx,%rsi
   2e3de:	4d 85 e4             	test   %r12,%r12
   2e3e1:	48 0f 44 f2          	cmove  %rdx,%rsi
   2e3e5:	48 01 d0             	add    %rdx,%rax
   2e3e8:	48 39 c8             	cmp    %rcx,%rax
   2e3eb:	48 0f 4d c8          	cmovge %rax,%rcx
   2e3ef:	49 89 f4             	mov    %rsi,%r12
   2e3f2:	48 8b 84 24 f8 00 00 	mov    0xf8(%rsp),%rax
   2e3f9:	00 
   2e3fa:	48 85 c0             	test   %rax,%rax
   2e3fd:	74 26                	je     2e425 <elf_add+0x14e5>
   2e3ff:	48 8b 94 24 f0 00 00 	mov    0xf0(%rsp),%rdx
   2e406:	00 
   2e407:	4c 39 e2             	cmp    %r12,%rdx
   2e40a:	4c 89 e6             	mov    %r12,%rsi
   2e40d:	48 0f 4e f2          	cmovle %rdx,%rsi
   2e411:	4d 85 e4             	test   %r12,%r12
   2e414:	48 0f 44 f2          	cmove  %rdx,%rsi
   2e418:	48 01 d0             	add    %rdx,%rax
   2e41b:	48 39 c8             	cmp    %rcx,%rax
   2e41e:	48 0f 4d c8          	cmovge %rax,%rcx
   2e422:	49 89 f4             	mov    %rsi,%r12
   2e425:	48 8b 84 24 18 01 00 	mov    0x118(%rsp),%rax
   2e42c:	00 
   2e42d:	48 85 c0             	test   %rax,%rax
   2e430:	74 26                	je     2e458 <elf_add+0x1518>
   2e432:	48 8b 94 24 10 01 00 	mov    0x110(%rsp),%rdx
   2e439:	00 
   2e43a:	4c 39 e2             	cmp    %r12,%rdx
   2e43d:	4c 89 e6             	mov    %r12,%rsi
   2e440:	48 0f 4e f2          	cmovle %rdx,%rsi
   2e444:	4d 85 e4             	test   %r12,%r12
   2e447:	48 0f 44 f2          	cmove  %rdx,%rsi
   2e44b:	48 01 d0             	add    %rdx,%rax
   2e44e:	48 39 c8             	cmp    %rcx,%rax
   2e451:	48 0f 4d c8          	cmovge %rax,%rcx
   2e455:	49 89 f4             	mov    %rsi,%r12
   2e458:	48 8b 84 24 38 01 00 	mov    0x138(%rsp),%rax
   2e45f:	00 
   2e460:	48 85 c0             	test   %rax,%rax
   2e463:	74 26                	je     2e48b <elf_add+0x154b>
   2e465:	48 8b 94 24 30 01 00 	mov    0x130(%rsp),%rdx
   2e46c:	00 
   2e46d:	4c 39 e2             	cmp    %r12,%rdx
   2e470:	4c 89 e6             	mov    %r12,%rsi
   2e473:	48 0f 4e f2          	cmovle %rdx,%rsi
   2e477:	4d 85 e4             	test   %r12,%r12
   2e47a:	48 0f 44 f2          	cmove  %rdx,%rsi
   2e47e:	48 01 d0             	add    %rdx,%rax
   2e481:	48 39 c8             	cmp    %rcx,%rax
   2e484:	48 0f 4d c8          	cmovge %rax,%rcx
   2e488:	49 89 f4             	mov    %rsi,%r12
   2e48b:	48 8b 84 24 58 01 00 	mov    0x158(%rsp),%rax
   2e492:	00 
   2e493:	48 85 c0             	test   %rax,%rax
   2e496:	74 26                	je     2e4be <elf_add+0x157e>
   2e498:	48 8b 94 24 50 01 00 	mov    0x150(%rsp),%rdx
   2e49f:	00 
   2e4a0:	4c 39 e2             	cmp    %r12,%rdx
   2e4a3:	4c 89 e6             	mov    %r12,%rsi
   2e4a6:	48 0f 4e f2          	cmovle %rdx,%rsi
   2e4aa:	4d 85 e4             	test   %r12,%r12
   2e4ad:	48 0f 44 f2          	cmove  %rdx,%rsi
   2e4b1:	48 01 d0             	add    %rdx,%rax
   2e4b4:	48 39 c8             	cmp    %rcx,%rax
   2e4b7:	48 0f 4d c8          	cmovge %rax,%rcx
   2e4bb:	49 89 f4             	mov    %rsi,%r12
   2e4be:	48 8b 84 24 78 01 00 	mov    0x178(%rsp),%rax
   2e4c5:	00 
   2e4c6:	48 85 c0             	test   %rax,%rax
   2e4c9:	74 26                	je     2e4f1 <elf_add+0x15b1>
   2e4cb:	48 8b 94 24 70 01 00 	mov    0x170(%rsp),%rdx
   2e4d2:	00 
   2e4d3:	4c 39 e2             	cmp    %r12,%rdx
   2e4d6:	4c 89 e6             	mov    %r12,%rsi
   2e4d9:	48 0f 4e f2          	cmovle %rdx,%rsi
   2e4dd:	4d 85 e4             	test   %r12,%r12
   2e4e0:	48 0f 44 f2          	cmove  %rdx,%rsi
   2e4e4:	48 01 d0             	add    %rdx,%rax
   2e4e7:	48 39 c8             	cmp    %rcx,%rax
   2e4ea:	48 0f 4d c8          	cmovge %rax,%rcx
   2e4ee:	49 89 f4             	mov    %rsi,%r12
   2e4f1:	48 8b 84 24 98 01 00 	mov    0x198(%rsp),%rax
   2e4f8:	00 
   2e4f9:	48 85 c0             	test   %rax,%rax
   2e4fc:	74 26                	je     2e524 <elf_add+0x15e4>
   2e4fe:	48 8b 94 24 90 01 00 	mov    0x190(%rsp),%rdx
   2e505:	00 
   2e506:	4c 39 e2             	cmp    %r12,%rdx
   2e509:	4c 89 e6             	mov    %r12,%rsi
   2e50c:	48 0f 4e f2          	cmovle %rdx,%rsi
   2e510:	4d 85 e4             	test   %r12,%r12
   2e513:	48 0f 44 f2          	cmove  %rdx,%rsi
   2e517:	48 01 d0             	add    %rdx,%rax
   2e51a:	48 39 c8             	cmp    %rcx,%rax
   2e51d:	48 0f 4d c8          	cmovge %rax,%rcx
   2e521:	49 89 f4             	mov    %rsi,%r12
   2e524:	48 8b 84 24 b8 01 00 	mov    0x1b8(%rsp),%rax
   2e52b:	00 
   2e52c:	48 85 c0             	test   %rax,%rax
   2e52f:	74 26                	je     2e557 <elf_add+0x1617>
   2e531:	48 8b 94 24 b0 01 00 	mov    0x1b0(%rsp),%rdx
   2e538:	00 
   2e539:	4c 39 e2             	cmp    %r12,%rdx
   2e53c:	4c 89 e6             	mov    %r12,%rsi
   2e53f:	48 0f 4e f2          	cmovle %rdx,%rsi
   2e543:	4d 85 e4             	test   %r12,%r12
   2e546:	48 0f 44 f2          	cmove  %rdx,%rsi
   2e54a:	48 01 d0             	add    %rdx,%rax
   2e54d:	48 39 c8             	cmp    %rcx,%rax
   2e550:	48 0f 4d c8          	cmovge %rax,%rcx
   2e554:	49 89 f4             	mov    %rsi,%r12
   2e557:	48 8b 84 24 d8 01 00 	mov    0x1d8(%rsp),%rax
   2e55e:	00 
   2e55f:	48 85 c0             	test   %rax,%rax
   2e562:	74 26                	je     2e58a <elf_add+0x164a>
   2e564:	48 8b 94 24 d0 01 00 	mov    0x1d0(%rsp),%rdx
   2e56b:	00 
   2e56c:	4c 39 e2             	cmp    %r12,%rdx
   2e56f:	4c 89 e6             	mov    %r12,%rsi
   2e572:	48 0f 4e f2          	cmovle %rdx,%rsi
   2e576:	4d 85 e4             	test   %r12,%r12
   2e579:	48 0f 44 f2          	cmove  %rdx,%rsi
   2e57d:	48 01 d0             	add    %rdx,%rax
   2e580:	48 39 c8             	cmp    %rcx,%rax
   2e583:	48 0f 4d c8          	cmovge %rax,%rcx
   2e587:	49 89 f4             	mov    %rsi,%r12
   2e58a:	48 85 c9             	test   %rcx,%rcx
   2e58d:	0f 84 35 01 00 00    	je     2e6c8 <elf_add+0x1788>
   2e593:	4d 85 e4             	test   %r12,%r12
   2e596:	0f 84 2c 01 00 00    	je     2e6c8 <elf_add+0x1788>
   2e59c:	4c 29 e1             	sub    %r12,%rcx
   2e59f:	48 83 ec 08          	sub    $0x8,%rsp
   2e5a3:	48 8d 84 24 00 03 00 	lea    0x300(%rsp),%rax
   2e5aa:	00 
   2e5ab:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
   2e5b0:	44 89 f6             	mov    %r14d,%esi
   2e5b3:	4c 89 e2             	mov    %r12,%rdx
   2e5b6:	4d 89 e8             	mov    %r13,%r8
   2e5b9:	4d 89 f9             	mov    %r15,%r9
   2e5bc:	50                   	push   %rax
   2e5bd:	e8 1e a6 00 00       	callq  38be0 <__rdos_backtrace_get_view>
   2e5c2:	48 83 c4 10          	add    $0x10,%rsp
   2e5c6:	85 c0                	test   %eax,%eax
   2e5c8:	0f 84 4d 01 00 00    	je     2e71b <elf_add+0x17db>
   2e5ce:	44 89 f7             	mov    %r14d,%edi
   2e5d1:	4c 89 ee             	mov    %r13,%rsi
   2e5d4:	4c 89 fa             	mov    %r15,%rdx
   2e5d7:	e8 24 e7 ff ff       	callq  2cd00 <__rdos_backtrace_close>
   2e5dc:	c7 44 24 30 01 00 00 	movl   $0x1,0x30(%rsp)
   2e5e3:	00 
   2e5e4:	85 c0                	test   %eax,%eax
   2e5e6:	0f 84 5d 01 00 00    	je     2e749 <elf_add+0x1809>
   2e5ec:	48 8b 8c 24 f8 02 00 	mov    0x2f8(%rsp),%rcx
   2e5f3:	00 
   2e5f4:	48 8b b4 24 b0 00 00 	mov    0xb0(%rsp),%rsi
   2e5fb:	00 
   2e5fc:	48 8b 84 24 b8 00 00 	mov    0xb8(%rsp),%rax
   2e603:	00 
   2e604:	4c 29 e6             	sub    %r12,%rsi
   2e607:	48 01 ce             	add    %rcx,%rsi
   2e60a:	31 ff                	xor    %edi,%edi
   2e60c:	48 85 c0             	test   %rax,%rax
   2e60f:	48 0f 44 f0          	cmove  %rax,%rsi
   2e613:	0f 95 c2             	setne  %dl
   2e616:	48 89 b4 24 c0 00 00 	mov    %rsi,0xc0(%rsp)
   2e61d:	00 
   2e61e:	48 83 bc 24 d8 00 00 	cmpq   $0x0,0xd8(%rsp)
   2e625:	00 00 
   2e627:	0f 84 28 01 00 00    	je     2e755 <elf_add+0x1815>
   2e62d:	48 8b 94 24 d0 00 00 	mov    0xd0(%rsp),%rdx
   2e634:	00 
   2e635:	4c 29 e2             	sub    %r12,%rdx
   2e638:	48 01 ca             	add    %rcx,%rdx
   2e63b:	48 83 f8 01          	cmp    $0x1,%rax
   2e63f:	bf 02 00 00 00       	mov    $0x2,%edi
   2e644:	83 df 00             	sbb    $0x0,%edi
   2e647:	48 89 94 24 e0 00 00 	mov    %rdx,0xe0(%rsp)
   2e64e:	00 
   2e64f:	48 83 bc 24 f8 00 00 	cmpq   $0x0,0xf8(%rsp)
   2e656:	00 00 
   2e658:	0f 84 13 01 00 00    	je     2e771 <elf_add+0x1831>
   2e65e:	48 8b 94 24 f0 00 00 	mov    0xf0(%rsp),%rdx
   2e665:	00 
   2e666:	4c 29 e2             	sub    %r12,%rdx
   2e669:	48 01 ca             	add    %rcx,%rdx
   2e66c:	83 c7 01             	add    $0x1,%edi
   2e66f:	48 89 94 24 00 01 00 	mov    %rdx,0x100(%rsp)
   2e676:	00 
   2e677:	48 83 bc 24 18 01 00 	cmpq   $0x0,0x118(%rsp)
   2e67e:	00 00 
   2e680:	0f 84 04 01 00 00    	je     2e78a <elf_add+0x184a>
   2e686:	48 8b 94 24 10 01 00 	mov    0x110(%rsp),%rdx
   2e68d:	00 
   2e68e:	4c 29 e2             	sub    %r12,%rdx
   2e691:	48 01 ca             	add    %rcx,%rdx
   2e694:	83 c7 01             	add    $0x1,%edi
   2e697:	48 89 94 24 20 01 00 	mov    %rdx,0x120(%rsp)
   2e69e:	00 
   2e69f:	48 83 bc 24 38 01 00 	cmpq   $0x0,0x138(%rsp)
   2e6a6:	00 00 
   2e6a8:	0f 84 f5 00 00 00    	je     2e7a3 <elf_add+0x1863>
   2e6ae:	48 8b 94 24 30 01 00 	mov    0x130(%rsp),%rdx
   2e6b5:	00 
   2e6b6:	4c 29 e2             	sub    %r12,%rdx
   2e6b9:	48 01 ca             	add    %rcx,%rdx
   2e6bc:	83 c7 01             	add    $0x1,%edi
   2e6bf:	89 7c 24 38          	mov    %edi,0x38(%rsp)
   2e6c3:	e9 e1 00 00 00       	jmpq   2e7a9 <elf_add+0x1869>
   2e6c8:	44 89 f7             	mov    %r14d,%edi
   2e6cb:	4c 89 ee             	mov    %r13,%rsi
   2e6ce:	4c 89 fa             	mov    %r15,%rdx
   2e6d1:	e8 2a e6 ff ff       	callq  2cd00 <__rdos_backtrace_close>
   2e6d6:	41 bc 01 00 00 00    	mov    $0x1,%r12d
   2e6dc:	85 c0                	test   %eax,%eax
   2e6de:	0f 85 13 eb ff ff    	jne    2d1f7 <elf_add+0x2b7>
   2e6e4:	31 c0                	xor    %eax,%eax
   2e6e6:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   2e6eb:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%rsp)
   2e6f2:	00 
   2e6f3:	c7 44 24 30 00 00 00 	movl   $0x0,0x30(%rsp)
   2e6fa:	00 
   2e6fb:	e9 08 07 00 00       	jmpq   2ee08 <elf_add+0x1ec8>
   2e700:	31 c9                	xor    %ecx,%ecx
   2e702:	45 31 e4             	xor    %r12d,%r12d
   2e705:	48 8b 84 24 d8 00 00 	mov    0xd8(%rsp),%rax
   2e70c:	00 
   2e70d:	48 85 c0             	test   %rax,%rax
   2e710:	0f 85 b6 fc ff ff    	jne    2e3cc <elf_add+0x148c>
   2e716:	e9 d7 fc ff ff       	jmpq   2e3f2 <elf_add+0x14b2>
   2e71b:	31 c0                	xor    %eax,%eax
   2e71d:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   2e722:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%rsp)
   2e729:	00 
   2e72a:	c7 44 24 30 00 00 00 	movl   $0x0,0x30(%rsp)
   2e731:	00 
   2e732:	e9 7b 08 00 00       	jmpq   2efb2 <elf_add+0x2072>
   2e737:	89 df                	mov    %ebx,%edi
   2e739:	4c 89 ee             	mov    %r13,%rsi
   2e73c:	4c 89 fa             	mov    %r15,%rdx
   2e73f:	e8 bc e5 ff ff       	callq  2cd00 <__rdos_backtrace_close>
   2e744:	e9 ae ea ff ff       	jmpq   2d1f7 <elf_add+0x2b7>
   2e749:	31 c0                	xor    %eax,%eax
   2e74b:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   2e750:	e9 55 08 00 00       	jmpq   2efaa <elf_add+0x206a>
   2e755:	40 88 d7             	mov    %dl,%dil
   2e758:	31 d2                	xor    %edx,%edx
   2e75a:	48 89 94 24 e0 00 00 	mov    %rdx,0xe0(%rsp)
   2e761:	00 
   2e762:	48 83 bc 24 f8 00 00 	cmpq   $0x0,0xf8(%rsp)
   2e769:	00 00 
   2e76b:	0f 85 ed fe ff ff    	jne    2e65e <elf_add+0x171e>
   2e771:	31 d2                	xor    %edx,%edx
   2e773:	48 89 94 24 00 01 00 	mov    %rdx,0x100(%rsp)
   2e77a:	00 
   2e77b:	48 83 bc 24 18 01 00 	cmpq   $0x0,0x118(%rsp)
   2e782:	00 00 
   2e784:	0f 85 fc fe ff ff    	jne    2e686 <elf_add+0x1746>
   2e78a:	31 d2                	xor    %edx,%edx
   2e78c:	48 89 94 24 20 01 00 	mov    %rdx,0x120(%rsp)
   2e793:	00 
   2e794:	48 83 bc 24 38 01 00 	cmpq   $0x0,0x138(%rsp)
   2e79b:	00 00 
   2e79d:	0f 85 0b ff ff ff    	jne    2e6ae <elf_add+0x176e>
   2e7a3:	89 7c 24 38          	mov    %edi,0x38(%rsp)
   2e7a7:	31 d2                	xor    %edx,%edx
   2e7a9:	48 89 94 24 40 01 00 	mov    %rdx,0x140(%rsp)
   2e7b0:	00 
   2e7b1:	48 8b 94 24 50 01 00 	mov    0x150(%rsp),%rdx
   2e7b8:	00 
   2e7b9:	48 8b b4 24 58 01 00 	mov    0x158(%rsp),%rsi
   2e7c0:	00 
   2e7c1:	4c 29 e2             	sub    %r12,%rdx
   2e7c4:	48 01 ca             	add    %rcx,%rdx
   2e7c7:	48 85 f6             	test   %rsi,%rsi
   2e7ca:	48 0f 44 d6          	cmove  %rsi,%rdx
   2e7ce:	48 89 94 24 60 01 00 	mov    %rdx,0x160(%rsp)
   2e7d5:	00 
   2e7d6:	48 8b 94 24 78 01 00 	mov    0x178(%rsp),%rdx
   2e7dd:	00 
   2e7de:	48 8b b4 24 70 01 00 	mov    0x170(%rsp),%rsi
   2e7e5:	00 
   2e7e6:	4c 29 e6             	sub    %r12,%rsi
   2e7e9:	48 01 ce             	add    %rcx,%rsi
   2e7ec:	48 85 d2             	test   %rdx,%rdx
   2e7ef:	48 0f 44 f2          	cmove  %rdx,%rsi
   2e7f3:	48 89 b4 24 80 01 00 	mov    %rsi,0x180(%rsp)
   2e7fa:	00 
   2e7fb:	48 8b 94 24 98 01 00 	mov    0x198(%rsp),%rdx
   2e802:	00 
   2e803:	48 8b b4 24 90 01 00 	mov    0x190(%rsp),%rsi
   2e80a:	00 
   2e80b:	4c 29 e6             	sub    %r12,%rsi
   2e80e:	48 01 ce             	add    %rcx,%rsi
   2e811:	48 85 d2             	test   %rdx,%rdx
   2e814:	48 0f 44 f2          	cmove  %rdx,%rsi
   2e818:	48 89 b4 24 a0 01 00 	mov    %rsi,0x1a0(%rsp)
   2e81f:	00 
   2e820:	48 8b 94 24 b8 01 00 	mov    0x1b8(%rsp),%rdx
   2e827:	00 
   2e828:	48 8b b4 24 b0 01 00 	mov    0x1b0(%rsp),%rsi
   2e82f:	00 
   2e830:	4c 29 e6             	sub    %r12,%rsi
   2e833:	48 01 ce             	add    %rcx,%rsi
   2e836:	48 85 d2             	test   %rdx,%rdx
   2e839:	48 0f 44 f2          	cmove  %rdx,%rsi
   2e83d:	48 89 b4 24 c0 01 00 	mov    %rsi,0x1c0(%rsp)
   2e844:	00 
   2e845:	48 8b 94 24 d8 01 00 	mov    0x1d8(%rsp),%rdx
   2e84c:	00 
   2e84d:	48 8b b4 24 d0 01 00 	mov    0x1d0(%rsp),%rsi
   2e854:	00 
   2e855:	4c 29 e6             	sub    %r12,%rsi
   2e858:	48 01 ce             	add    %rcx,%rsi
   2e85b:	48 85 d2             	test   %rdx,%rdx
   2e85e:	48 0f 44 f2          	cmove  %rdx,%rsi
   2e862:	48 89 b4 24 e0 01 00 	mov    %rsi,0x1e0(%rsp)
   2e869:	00 
   2e86a:	48 c7 c3 80 ff ff ff 	mov    $0xffffffffffffff80,%rbx
   2e871:	31 c9                	xor    %ecx,%ecx
   2e873:	48 85 c0             	test   %rax,%rax
   2e876:	0f 85 4b 01 00 00    	jne    2e9c7 <elf_add+0x1a87>
   2e87c:	eb 15                	jmp    2e893 <elf_add+0x1953>
   2e87e:	48 8b 84 1c 58 01 00 	mov    0x158(%rsp,%rbx,1),%rax
   2e885:	00 
   2e886:	48 83 c3 20          	add    $0x20,%rbx
   2e88a:	48 85 c0             	test   %rax,%rax
   2e88d:	0f 85 34 01 00 00    	jne    2e9c7 <elf_add+0x1a87>
   2e893:	4c 8b b4 1c d8 01 00 	mov    0x1d8(%rsp,%rbx,1),%r14
   2e89a:	00 
   2e89b:	4d 85 f6             	test   %r14,%r14
   2e89e:	0f 84 23 01 00 00    	je     2e9c7 <elf_add+0x1a87>
   2e8a4:	48 85 c9             	test   %rcx,%rcx
   2e8a7:	75 29                	jne    2e8d2 <elf_add+0x1992>
   2e8a9:	be b4 13 00 00       	mov    $0x13b4,%esi
   2e8ae:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
   2e8b3:	4c 89 ea             	mov    %r13,%rdx
   2e8b6:	4c 89 f9             	mov    %r15,%rcx
   2e8b9:	e8 82 25 00 00       	callq  30e40 <__rdos_backtrace_alloc>
   2e8be:	48 85 c0             	test   %rax,%rax
   2e8c1:	0f 84 d6 06 00 00    	je     2ef9d <elf_add+0x205d>
   2e8c7:	48 89 c1             	mov    %rax,%rcx
   2e8ca:	4c 8b b4 1c d8 01 00 	mov    0x1d8(%rsp,%rbx,1),%r14
   2e8d1:	00 
   2e8d2:	49 83 fe 0c          	cmp    $0xc,%r14
   2e8d6:	72 10                	jb     2e8e8 <elf_add+0x19a8>
   2e8d8:	48 8b 94 1c e0 01 00 	mov    0x1e0(%rsp,%rbx,1),%rdx
   2e8df:	00 
   2e8e0:	81 3a 5a 4c 49 42    	cmpl   $0x42494c5a,(%rdx)
   2e8e6:	74 2a                	je     2e912 <elf_add+0x19d2>
   2e8e8:	31 ed                	xor    %ebp,%ebp
   2e8ea:	45 31 e4             	xor    %r12d,%r12d
   2e8ed:	48 89 ac 1c 40 01 00 	mov    %rbp,0x140(%rsp,%rbx,1)
   2e8f4:	00 
   2e8f5:	4c 89 a4 1c 38 01 00 	mov    %r12,0x138(%rsp,%rbx,1)
   2e8fc:	00 
   2e8fd:	c7 84 1c 48 01 00 00 	movl   $0x0,0x148(%rsp,%rbx,1)
   2e904:	00 00 00 00 
   2e908:	4c 8b 7c 24 40       	mov    0x40(%rsp),%r15
   2e90d:	e9 b5 00 00 00       	jmpq   2e9c7 <elf_add+0x1a87>
   2e912:	48 89 4c 24 58       	mov    %rcx,0x58(%rsp)
   2e917:	0f b6 42 04          	movzbl 0x4(%rdx),%eax
   2e91b:	48 c1 e0 08          	shl    $0x8,%rax
   2e91f:	0f b6 4a 05          	movzbl 0x5(%rdx),%ecx
   2e923:	48 09 c1             	or     %rax,%rcx
   2e926:	48 c1 e1 08          	shl    $0x8,%rcx
   2e92a:	0f b6 42 06          	movzbl 0x6(%rdx),%eax
   2e92e:	48 09 c8             	or     %rcx,%rax
   2e931:	48 c1 e0 08          	shl    $0x8,%rax
   2e935:	0f b6 4a 07          	movzbl 0x7(%rdx),%ecx
   2e939:	48 09 c1             	or     %rax,%rcx
   2e93c:	48 c1 e1 08          	shl    $0x8,%rcx
   2e940:	0f b6 42 08          	movzbl 0x8(%rdx),%eax
   2e944:	48 09 c8             	or     %rcx,%rax
   2e947:	48 c1 e0 08          	shl    $0x8,%rax
   2e94b:	0f b6 4a 09          	movzbl 0x9(%rdx),%ecx
   2e94f:	48 09 c1             	or     %rax,%rcx
   2e952:	48 c1 e1 08          	shl    $0x8,%rcx
   2e956:	0f b6 42 0a          	movzbl 0xa(%rdx),%eax
   2e95a:	48 09 c8             	or     %rcx,%rax
   2e95d:	48 c1 e0 08          	shl    $0x8,%rax
   2e961:	48 89 54 24 70       	mov    %rdx,0x70(%rsp)
   2e966:	44 0f b6 62 0b       	movzbl 0xb(%rdx),%r12d
   2e96b:	49 09 c4             	or     %rax,%r12
   2e96e:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
   2e973:	4c 89 e6             	mov    %r12,%rsi
   2e976:	4c 89 ea             	mov    %r13,%rdx
   2e979:	4c 89 f9             	mov    %r15,%rcx
   2e97c:	e8 bf 24 00 00       	callq  30e40 <__rdos_backtrace_alloc>
   2e981:	48 85 c0             	test   %rax,%rax
   2e984:	0f 84 42 06 00 00    	je     2efcc <elf_add+0x208c>
   2e98a:	48 89 c5             	mov    %rax,%rbp
   2e98d:	48 8b 7c 24 70       	mov    0x70(%rsp),%rdi
   2e992:	48 83 c7 0c          	add    $0xc,%rdi
   2e996:	49 83 c6 f4          	add    $0xfffffffffffffff4,%r14
   2e99a:	4c 89 f6             	mov    %r14,%rsi
   2e99d:	4c 8b 74 24 58       	mov    0x58(%rsp),%r14
   2e9a2:	4c 89 f2             	mov    %r14,%rdx
   2e9a5:	48 89 c1             	mov    %rax,%rcx
   2e9a8:	4d 89 e0             	mov    %r12,%r8
   2e9ab:	e8 f0 07 00 00       	callq  2f1a0 <elf_zlib_inflate_and_verify>
   2e9b0:	4c 89 f1             	mov    %r14,%rcx
   2e9b3:	85 c0                	test   %eax,%eax
   2e9b5:	b8 00 00 00 00       	mov    $0x0,%eax
   2e9ba:	48 0f 44 e8          	cmove  %rax,%rbp
   2e9be:	4c 0f 44 e0          	cmove  %rax,%r12
   2e9c2:	e9 26 ff ff ff       	jmpq   2e8ed <elf_add+0x19ad>
   2e9c7:	48 85 db             	test   %rbx,%rbx
   2e9ca:	0f 85 ae fe ff ff    	jne    2e87e <elf_add+0x193e>
   2e9d0:	48 8b 9c 24 b8 00 00 	mov    0xb8(%rsp),%rbx
   2e9d7:	00 
   2e9d8:	48 85 db             	test   %rbx,%rbx
   2e9db:	0f 84 de 00 00 00    	je     2eabf <elf_add+0x1b7f>
   2e9e1:	83 bc 24 c8 00 00 00 	cmpl   $0x0,0xc8(%rsp)
   2e9e8:	00 
   2e9e9:	0f 84 d0 00 00 00    	je     2eabf <elf_add+0x1b7f>
   2e9ef:	49 89 cf             	mov    %rcx,%r15
   2e9f2:	48 85 c9             	test   %rcx,%rcx
   2e9f5:	75 2d                	jne    2ea24 <elf_add+0x1ae4>
   2e9f7:	be b4 13 00 00       	mov    $0x13b4,%esi
   2e9fc:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
   2ea01:	48 8b 54 24 28       	mov    0x28(%rsp),%rdx
   2ea06:	48 8b 4c 24 40       	mov    0x40(%rsp),%rcx
   2ea0b:	e8 30 24 00 00       	callq  30e40 <__rdos_backtrace_alloc>
   2ea10:	48 85 c0             	test   %rax,%rax
   2ea13:	0f 84 da 03 00 00    	je     2edf3 <elf_add+0x1eb3>
   2ea19:	49 89 c7             	mov    %rax,%r15
   2ea1c:	48 8b 9c 24 b8 00 00 	mov    0xb8(%rsp),%rbx
   2ea23:	00 
   2ea24:	48 83 fb 18          	cmp    $0x18,%rbx
   2ea28:	73 09                	jae    2ea33 <elf_add+0x1af3>
   2ea2a:	31 c0                	xor    %eax,%eax
   2ea2c:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   2ea31:	eb 62                	jmp    2ea95 <elf_add+0x1b55>
   2ea33:	48 8b ac 24 c0 00 00 	mov    0xc0(%rsp),%rbp
   2ea3a:	00 
   2ea3b:	31 c0                	xor    %eax,%eax
   2ea3d:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   2ea42:	83 7d 00 01          	cmpl   $0x1,0x0(%rbp)
   2ea46:	75 4d                	jne    2ea95 <elf_add+0x1b55>
   2ea48:	48 8b 75 08          	mov    0x8(%rbp),%rsi
   2ea4c:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
   2ea51:	48 8b 54 24 28       	mov    0x28(%rsp),%rdx
   2ea56:	48 8b 4c 24 40       	mov    0x40(%rsp),%rcx
   2ea5b:	e8 e0 23 00 00       	callq  30e40 <__rdos_backtrace_alloc>
   2ea60:	48 85 c0             	test   %rax,%rax
   2ea63:	0f 84 91 03 00 00    	je     2edfa <elf_add+0x1eba>
   2ea69:	49 89 c6             	mov    %rax,%r14
   2ea6c:	48 8d 7d 18          	lea    0x18(%rbp),%rdi
   2ea70:	48 83 c3 e8          	add    $0xffffffffffffffe8,%rbx
   2ea74:	4c 8b 45 08          	mov    0x8(%rbp),%r8
   2ea78:	48 89 de             	mov    %rbx,%rsi
   2ea7b:	4c 89 fa             	mov    %r15,%rdx
   2ea7e:	48 89 c1             	mov    %rax,%rcx
   2ea81:	e8 1a 07 00 00       	callq  2f1a0 <elf_zlib_inflate_and_verify>
   2ea86:	85 c0                	test   %eax,%eax
   2ea88:	74 a0                	je     2ea2a <elf_add+0x1aea>
   2ea8a:	48 8b 45 08          	mov    0x8(%rbp),%rax
   2ea8e:	4c 89 74 24 18       	mov    %r14,0x18(%rsp)
   2ea93:	eb 02                	jmp    2ea97 <elf_add+0x1b57>
   2ea95:	31 c0                	xor    %eax,%eax
   2ea97:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
   2ea9c:	48 89 8c 24 c0 00 00 	mov    %rcx,0xc0(%rsp)
   2eaa3:	00 
   2eaa4:	48 89 84 24 b8 00 00 	mov    %rax,0xb8(%rsp)
   2eaab:	00 
   2eaac:	c7 84 24 c8 00 00 00 	movl   $0x0,0xc8(%rsp)
   2eab3:	00 00 00 00 
   2eab7:	83 44 24 38 ff       	addl   $0xffffffff,0x38(%rsp)
   2eabc:	4c 89 f9             	mov    %r15,%rcx
   2eabf:	48 8b 9c 24 d8 00 00 	mov    0xd8(%rsp),%rbx
   2eac6:	00 
   2eac7:	48 85 db             	test   %rbx,%rbx
   2eaca:	0f 84 de 00 00 00    	je     2ebae <elf_add+0x1c6e>
   2ead0:	83 bc 24 e8 00 00 00 	cmpl   $0x0,0xe8(%rsp)
   2ead7:	00 
   2ead8:	0f 84 d0 00 00 00    	je     2ebae <elf_add+0x1c6e>
   2eade:	49 89 cf             	mov    %rcx,%r15
   2eae1:	48 85 c9             	test   %rcx,%rcx
   2eae4:	75 2d                	jne    2eb13 <elf_add+0x1bd3>
   2eae6:	be b4 13 00 00       	mov    $0x13b4,%esi
   2eaeb:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
   2eaf0:	48 8b 54 24 28       	mov    0x28(%rsp),%rdx
   2eaf5:	48 8b 4c 24 40       	mov    0x40(%rsp),%rcx
   2eafa:	e8 41 23 00 00       	callq  30e40 <__rdos_backtrace_alloc>
   2eaff:	48 85 c0             	test   %rax,%rax
   2eb02:	0f 84 eb 02 00 00    	je     2edf3 <elf_add+0x1eb3>
   2eb08:	49 89 c7             	mov    %rax,%r15
   2eb0b:	48 8b 9c 24 d8 00 00 	mov    0xd8(%rsp),%rbx
   2eb12:	00 
   2eb13:	48 83 fb 18          	cmp    $0x18,%rbx
   2eb17:	73 09                	jae    2eb22 <elf_add+0x1be2>
   2eb19:	31 c0                	xor    %eax,%eax
   2eb1b:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   2eb20:	eb 62                	jmp    2eb84 <elf_add+0x1c44>
   2eb22:	48 8b ac 24 e0 00 00 	mov    0xe0(%rsp),%rbp
   2eb29:	00 
   2eb2a:	31 c0                	xor    %eax,%eax
   2eb2c:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   2eb31:	83 7d 00 01          	cmpl   $0x1,0x0(%rbp)
   2eb35:	75 4d                	jne    2eb84 <elf_add+0x1c44>
   2eb37:	48 8b 75 08          	mov    0x8(%rbp),%rsi
   2eb3b:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
   2eb40:	48 8b 54 24 28       	mov    0x28(%rsp),%rdx
   2eb45:	48 8b 4c 24 40       	mov    0x40(%rsp),%rcx
   2eb4a:	e8 f1 22 00 00       	callq  30e40 <__rdos_backtrace_alloc>
   2eb4f:	48 85 c0             	test   %rax,%rax
   2eb52:	0f 84 a2 02 00 00    	je     2edfa <elf_add+0x1eba>
   2eb58:	49 89 c6             	mov    %rax,%r14
   2eb5b:	48 8d 7d 18          	lea    0x18(%rbp),%rdi
   2eb5f:	48 83 c3 e8          	add    $0xffffffffffffffe8,%rbx
   2eb63:	4c 8b 45 08          	mov    0x8(%rbp),%r8
   2eb67:	48 89 de             	mov    %rbx,%rsi
   2eb6a:	4c 89 fa             	mov    %r15,%rdx
   2eb6d:	48 89 c1             	mov    %rax,%rcx
   2eb70:	e8 2b 06 00 00       	callq  2f1a0 <elf_zlib_inflate_and_verify>
   2eb75:	85 c0                	test   %eax,%eax
   2eb77:	74 a0                	je     2eb19 <elf_add+0x1bd9>
   2eb79:	48 8b 45 08          	mov    0x8(%rbp),%rax
   2eb7d:	4c 89 74 24 18       	mov    %r14,0x18(%rsp)
   2eb82:	eb 02                	jmp    2eb86 <elf_add+0x1c46>
   2eb84:	31 c0                	xor    %eax,%eax
   2eb86:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
   2eb8b:	48 89 8c 24 e0 00 00 	mov    %rcx,0xe0(%rsp)
   2eb92:	00 
   2eb93:	48 89 84 24 d8 00 00 	mov    %rax,0xd8(%rsp)
   2eb9a:	00 
   2eb9b:	c7 84 24 e8 00 00 00 	movl   $0x0,0xe8(%rsp)
   2eba2:	00 00 00 00 
   2eba6:	83 44 24 38 ff       	addl   $0xffffffff,0x38(%rsp)
   2ebab:	4c 89 f9             	mov    %r15,%rcx
   2ebae:	48 8b 9c 24 f8 00 00 	mov    0xf8(%rsp),%rbx
   2ebb5:	00 
   2ebb6:	48 85 db             	test   %rbx,%rbx
   2ebb9:	74 4e                	je     2ec09 <elf_add+0x1cc9>
   2ebbb:	83 bc 24 08 01 00 00 	cmpl   $0x0,0x108(%rsp)
   2ebc2:	00 
   2ebc3:	74 44                	je     2ec09 <elf_add+0x1cc9>
   2ebc5:	49 89 cc             	mov    %rcx,%r12
   2ebc8:	48 85 c9             	test   %rcx,%rcx
   2ebcb:	75 2d                	jne    2ebfa <elf_add+0x1cba>
   2ebcd:	be b4 13 00 00       	mov    $0x13b4,%esi
   2ebd2:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
   2ebd7:	48 8b 54 24 28       	mov    0x28(%rsp),%rdx
   2ebdc:	48 8b 4c 24 40       	mov    0x40(%rsp),%rcx
   2ebe1:	e8 5a 22 00 00       	callq  30e40 <__rdos_backtrace_alloc>
   2ebe6:	48 85 c0             	test   %rax,%rax
   2ebe9:	0f 84 04 02 00 00    	je     2edf3 <elf_add+0x1eb3>
   2ebef:	49 89 c4             	mov    %rax,%r12
   2ebf2:	48 8b 9c 24 f8 00 00 	mov    0xf8(%rsp),%rbx
   2ebf9:	00 
   2ebfa:	48 83 fb 18          	cmp    $0x18,%rbx
   2ebfe:	73 22                	jae    2ec22 <elf_add+0x1ce2>
   2ec00:	31 c0                	xor    %eax,%eax
   2ec02:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   2ec07:	eb 7b                	jmp    2ec84 <elf_add+0x1d44>
   2ec09:	49 89 cc             	mov    %rcx,%r12
   2ec0c:	48 8b 9c 24 18 01 00 	mov    0x118(%rsp),%rbx
   2ec13:	00 
   2ec14:	48 85 db             	test   %rbx,%rbx
   2ec17:	0f 85 9f 00 00 00    	jne    2ecbc <elf_add+0x1d7c>
   2ec1d:	e9 72 01 00 00       	jmpq   2ed94 <elf_add+0x1e54>
   2ec22:	48 8b ac 24 00 01 00 	mov    0x100(%rsp),%rbp
   2ec29:	00 
   2ec2a:	31 c0                	xor    %eax,%eax
   2ec2c:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   2ec31:	83 7d 00 01          	cmpl   $0x1,0x0(%rbp)
   2ec35:	75 4d                	jne    2ec84 <elf_add+0x1d44>
   2ec37:	48 8b 75 08          	mov    0x8(%rbp),%rsi
   2ec3b:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
   2ec40:	48 8b 54 24 28       	mov    0x28(%rsp),%rdx
   2ec45:	48 8b 4c 24 40       	mov    0x40(%rsp),%rcx
   2ec4a:	e8 f1 21 00 00       	callq  30e40 <__rdos_backtrace_alloc>
   2ec4f:	48 85 c0             	test   %rax,%rax
   2ec52:	0f 84 a2 01 00 00    	je     2edfa <elf_add+0x1eba>
   2ec58:	49 89 c6             	mov    %rax,%r14
   2ec5b:	48 8d 7d 18          	lea    0x18(%rbp),%rdi
   2ec5f:	48 83 c3 e8          	add    $0xffffffffffffffe8,%rbx
   2ec63:	4c 8b 45 08          	mov    0x8(%rbp),%r8
   2ec67:	48 89 de             	mov    %rbx,%rsi
   2ec6a:	4c 89 e2             	mov    %r12,%rdx
   2ec6d:	48 89 c1             	mov    %rax,%rcx
   2ec70:	e8 2b 05 00 00       	callq  2f1a0 <elf_zlib_inflate_and_verify>
   2ec75:	85 c0                	test   %eax,%eax
   2ec77:	74 87                	je     2ec00 <elf_add+0x1cc0>
   2ec79:	48 8b 45 08          	mov    0x8(%rbp),%rax
   2ec7d:	4c 89 74 24 18       	mov    %r14,0x18(%rsp)
   2ec82:	eb 02                	jmp    2ec86 <elf_add+0x1d46>
   2ec84:	31 c0                	xor    %eax,%eax
   2ec86:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
   2ec8b:	48 89 8c 24 00 01 00 	mov    %rcx,0x100(%rsp)
   2ec92:	00 
   2ec93:	48 89 84 24 f8 00 00 	mov    %rax,0xf8(%rsp)
   2ec9a:	00 
   2ec9b:	c7 84 24 08 01 00 00 	movl   $0x0,0x108(%rsp)
   2eca2:	00 00 00 00 
   2eca6:	83 44 24 38 ff       	addl   $0xffffffff,0x38(%rsp)
   2ecab:	48 8b 9c 24 18 01 00 	mov    0x118(%rsp),%rbx
   2ecb2:	00 
   2ecb3:	48 85 db             	test   %rbx,%rbx
   2ecb6:	0f 84 d8 00 00 00    	je     2ed94 <elf_add+0x1e54>
   2ecbc:	83 bc 24 28 01 00 00 	cmpl   $0x0,0x128(%rsp)
   2ecc3:	00 
   2ecc4:	0f 84 ca 00 00 00    	je     2ed94 <elf_add+0x1e54>
   2ecca:	4d 85 e4             	test   %r12,%r12
   2eccd:	75 2d                	jne    2ecfc <elf_add+0x1dbc>
   2eccf:	be b4 13 00 00       	mov    $0x13b4,%esi
   2ecd4:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
   2ecd9:	48 8b 54 24 28       	mov    0x28(%rsp),%rdx
   2ecde:	48 8b 4c 24 40       	mov    0x40(%rsp),%rcx
   2ece3:	e8 58 21 00 00       	callq  30e40 <__rdos_backtrace_alloc>
   2ece8:	48 85 c0             	test   %rax,%rax
   2eceb:	0f 84 02 01 00 00    	je     2edf3 <elf_add+0x1eb3>
   2ecf1:	49 89 c4             	mov    %rax,%r12
   2ecf4:	48 8b 9c 24 18 01 00 	mov    0x118(%rsp),%rbx
   2ecfb:	00 
   2ecfc:	48 83 fb 18          	cmp    $0x18,%rbx
   2ed00:	73 09                	jae    2ed0b <elf_add+0x1dcb>
   2ed02:	31 c0                	xor    %eax,%eax
   2ed04:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   2ed09:	eb 62                	jmp    2ed6d <elf_add+0x1e2d>
   2ed0b:	48 8b ac 24 20 01 00 	mov    0x120(%rsp),%rbp
   2ed12:	00 
   2ed13:	31 c0                	xor    %eax,%eax
   2ed15:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   2ed1a:	83 7d 00 01          	cmpl   $0x1,0x0(%rbp)
   2ed1e:	75 4d                	jne    2ed6d <elf_add+0x1e2d>
   2ed20:	48 8b 75 08          	mov    0x8(%rbp),%rsi
   2ed24:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
   2ed29:	48 8b 54 24 28       	mov    0x28(%rsp),%rdx
   2ed2e:	48 8b 4c 24 40       	mov    0x40(%rsp),%rcx
   2ed33:	e8 08 21 00 00       	callq  30e40 <__rdos_backtrace_alloc>
   2ed38:	48 85 c0             	test   %rax,%rax
   2ed3b:	0f 84 b9 00 00 00    	je     2edfa <elf_add+0x1eba>
   2ed41:	49 89 c6             	mov    %rax,%r14
   2ed44:	48 8d 7d 18          	lea    0x18(%rbp),%rdi
   2ed48:	48 83 c3 e8          	add    $0xffffffffffffffe8,%rbx
   2ed4c:	4c 8b 45 08          	mov    0x8(%rbp),%r8
   2ed50:	48 89 de             	mov    %rbx,%rsi
   2ed53:	4c 89 e2             	mov    %r12,%rdx
   2ed56:	48 89 c1             	mov    %rax,%rcx
   2ed59:	e8 42 04 00 00       	callq  2f1a0 <elf_zlib_inflate_and_verify>
   2ed5e:	85 c0                	test   %eax,%eax
   2ed60:	74 a0                	je     2ed02 <elf_add+0x1dc2>
   2ed62:	48 8b 45 08          	mov    0x8(%rbp),%rax
   2ed66:	4c 89 74 24 18       	mov    %r14,0x18(%rsp)
   2ed6b:	eb 02                	jmp    2ed6f <elf_add+0x1e2f>
   2ed6d:	31 c0                	xor    %eax,%eax
   2ed6f:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
   2ed74:	48 89 8c 24 20 01 00 	mov    %rcx,0x120(%rsp)
   2ed7b:	00 
   2ed7c:	48 89 84 24 18 01 00 	mov    %rax,0x118(%rsp)
   2ed83:	00 
   2ed84:	c7 84 24 28 01 00 00 	movl   $0x0,0x128(%rsp)
   2ed8b:	00 00 00 00 
   2ed8f:	83 44 24 38 ff       	addl   $0xffffffff,0x38(%rsp)
   2ed94:	48 8b 9c 24 38 01 00 	mov    0x138(%rsp),%rbx
   2ed9b:	00 
   2ed9c:	48 85 db             	test   %rbx,%rbx
   2ed9f:	0f 84 10 01 00 00    	je     2eeb5 <elf_add+0x1f75>
   2eda5:	83 bc 24 48 01 00 00 	cmpl   $0x0,0x148(%rsp)
   2edac:	00 
   2edad:	0f 84 02 01 00 00    	je     2eeb5 <elf_add+0x1f75>
   2edb3:	4d 85 e4             	test   %r12,%r12
   2edb6:	75 29                	jne    2ede1 <elf_add+0x1ea1>
   2edb8:	be b4 13 00 00       	mov    $0x13b4,%esi
   2edbd:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
   2edc2:	48 8b 54 24 28       	mov    0x28(%rsp),%rdx
   2edc7:	48 8b 4c 24 40       	mov    0x40(%rsp),%rcx
   2edcc:	e8 6f 20 00 00       	callq  30e40 <__rdos_backtrace_alloc>
   2edd1:	48 85 c0             	test   %rax,%rax
   2edd4:	74 1d                	je     2edf3 <elf_add+0x1eb3>
   2edd6:	49 89 c4             	mov    %rax,%r12
   2edd9:	48 8b 9c 24 38 01 00 	mov    0x138(%rsp),%rbx
   2ede0:	00 
   2ede1:	48 83 fb 18          	cmp    $0x18,%rbx
   2ede5:	73 45                	jae    2ee2c <elf_add+0x1eec>
   2ede7:	31 c0                	xor    %eax,%eax
   2ede9:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   2edee:	e9 9b 00 00 00       	jmpq   2ee8e <elf_add+0x1f4e>
   2edf3:	31 c0                	xor    %eax,%eax
   2edf5:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   2edfa:	41 be ff ff ff ff    	mov    $0xffffffff,%r14d
   2ee00:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%rsp)
   2ee07:	00 
   2ee08:	31 ed                	xor    %ebp,%ebp
   2ee0a:	4c 8b 7c 24 40       	mov    0x40(%rsp),%r15
   2ee0f:	4c 8b 6c 24 28       	mov    0x28(%rsp),%r13
   2ee14:	44 8b 64 24 20       	mov    0x20(%rsp),%r12d
   2ee19:	45 85 e4             	test   %r12d,%r12d
   2ee1c:	48 8b 5c 24 10       	mov    0x10(%rsp),%rbx
   2ee21:	0f 85 5d ec ff ff    	jne    2da84 <elf_add+0xb44>
   2ee27:	e9 6e ec ff ff       	jmpq   2da9a <elf_add+0xb5a>
   2ee2c:	48 8b ac 24 40 01 00 	mov    0x140(%rsp),%rbp
   2ee33:	00 
   2ee34:	31 c0                	xor    %eax,%eax
   2ee36:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   2ee3b:	83 7d 00 01          	cmpl   $0x1,0x0(%rbp)
   2ee3f:	75 4d                	jne    2ee8e <elf_add+0x1f4e>
   2ee41:	48 8b 75 08          	mov    0x8(%rbp),%rsi
   2ee45:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
   2ee4a:	48 8b 54 24 28       	mov    0x28(%rsp),%rdx
   2ee4f:	48 8b 4c 24 40       	mov    0x40(%rsp),%rcx
   2ee54:	e8 e7 1f 00 00       	callq  30e40 <__rdos_backtrace_alloc>
   2ee59:	48 85 c0             	test   %rax,%rax
   2ee5c:	74 9c                	je     2edfa <elf_add+0x1eba>
   2ee5e:	49 89 c6             	mov    %rax,%r14
   2ee61:	48 8d 7d 18          	lea    0x18(%rbp),%rdi
   2ee65:	48 83 c3 e8          	add    $0xffffffffffffffe8,%rbx
   2ee69:	4c 8b 45 08          	mov    0x8(%rbp),%r8
   2ee6d:	48 89 de             	mov    %rbx,%rsi
   2ee70:	4c 89 e2             	mov    %r12,%rdx
   2ee73:	48 89 c1             	mov    %rax,%rcx
   2ee76:	e8 25 03 00 00       	callq  2f1a0 <elf_zlib_inflate_and_verify>
   2ee7b:	85 c0                	test   %eax,%eax
   2ee7d:	0f 84 64 ff ff ff    	je     2ede7 <elf_add+0x1ea7>
   2ee83:	48 8b 45 08          	mov    0x8(%rbp),%rax
   2ee87:	4c 89 74 24 18       	mov    %r14,0x18(%rsp)
   2ee8c:	eb 02                	jmp    2ee90 <elf_add+0x1f50>
   2ee8e:	31 c0                	xor    %eax,%eax
   2ee90:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
   2ee95:	48 89 8c 24 40 01 00 	mov    %rcx,0x140(%rsp)
   2ee9c:	00 
   2ee9d:	48 89 84 24 38 01 00 	mov    %rax,0x138(%rsp)
   2eea4:	00 
   2eea5:	c7 84 24 48 01 00 00 	movl   $0x0,0x148(%rsp)
   2eeac:	00 00 00 00 
   2eeb0:	83 44 24 38 ff       	addl   $0xffffffff,0x38(%rsp)
   2eeb5:	4c 8b 7c 24 40       	mov    0x40(%rsp),%r15
   2eeba:	4c 8b 6c 24 28       	mov    0x28(%rsp),%r13
   2eebf:	48 8b 5c 24 10       	mov    0x10(%rsp),%rbx
   2eec4:	48 8b ac 24 c0 03 00 	mov    0x3c0(%rsp),%rbp
   2eecb:	00 
   2eecc:	4d 85 e4             	test   %r12,%r12
   2eecf:	74 16                	je     2eee7 <elf_add+0x1fa7>
   2eed1:	ba b4 13 00 00       	mov    $0x13b4,%edx
   2eed6:	48 89 df             	mov    %rbx,%rdi
   2eed9:	4c 89 e6             	mov    %r12,%rsi
   2eedc:	4c 89 e9             	mov    %r13,%rcx
   2eedf:	4d 89 f8             	mov    %r15,%r8
   2eee2:	e8 99 1f 00 00       	callq  30e80 <__rdos_backtrace_free>
   2eee7:	b8 01 00 00 00       	mov    $0x1,%eax
   2eeec:	83 7c 24 38 00       	cmpl   $0x0,0x38(%rsp)
   2eef1:	75 18                	jne    2ef0b <elf_add+0x1fcb>
   2eef3:	48 8d b4 24 f8 02 00 	lea    0x2f8(%rsp),%rsi
   2eefa:	00 
   2eefb:	48 89 df             	mov    %rbx,%rdi
   2eefe:	4c 89 ea             	mov    %r13,%rdx
   2ef01:	4c 89 f9             	mov    %r15,%rcx
   2ef04:	e8 a7 9d 00 00       	callq  38cb0 <__rdos_backtrace_release_view>
   2ef09:	31 c0                	xor    %eax,%eax
   2ef0b:	89 44 24 30          	mov    %eax,0x30(%rsp)
   2ef0f:	48 8b 8c 24 b8 00 00 	mov    0xb8(%rsp),%rcx
   2ef16:	00 
   2ef17:	48 8b 94 24 c0 00 00 	mov    0xc0(%rsp),%rdx
   2ef1e:	00 
   2ef1f:	4c 8b 84 24 e0 00 00 	mov    0xe0(%rsp),%r8
   2ef26:	00 
   2ef27:	4c 8b 8c 24 d8 00 00 	mov    0xd8(%rsp),%r9
   2ef2e:	00 
   2ef2f:	31 c0                	xor    %eax,%eax
   2ef31:	80 bc 24 a8 00 00 00 	cmpb   $0x2,0xa8(%rsp)
   2ef38:	02 
   2ef39:	0f 94 c0             	sete   %al
   2ef3c:	48 89 df             	mov    %rbx,%rdi
   2ef3f:	48 8b b4 24 90 00 00 	mov    0x90(%rsp),%rsi
   2ef46:	00 
   2ef47:	55                   	push   %rbp
   2ef48:	41 57                	push   %r15
   2ef4a:	41 55                	push   %r13
   2ef4c:	50                   	push   %rax
   2ef4d:	ff b4 24 58 01 00 00 	pushq  0x158(%rsp)
   2ef54:	ff b4 24 68 01 00 00 	pushq  0x168(%rsp)
   2ef5b:	ff b4 24 48 01 00 00 	pushq  0x148(%rsp)
   2ef62:	ff b4 24 58 01 00 00 	pushq  0x158(%rsp)
   2ef69:	ff b4 24 38 01 00 00 	pushq  0x138(%rsp)
   2ef70:	ff b4 24 48 01 00 00 	pushq  0x148(%rsp)
   2ef77:	e8 84 20 00 00       	callq  31000 <__rdos_backtrace_dwarf_add>
   2ef7c:	48 83 c4 50          	add    $0x50,%rsp
   2ef80:	85 c0                	test   %eax,%eax
   2ef82:	74 19                	je     2ef9d <elf_add+0x205d>
   2ef84:	48 8b 84 24 d0 03 00 	mov    0x3d0(%rsp),%rax
   2ef8b:	00 
   2ef8c:	c7 00 01 00 00 00    	movl   $0x1,(%rax)
   2ef92:	41 bc 01 00 00 00    	mov    $0x1,%r12d
   2ef98:	e9 5a e2 ff ff       	jmpq   2d1f7 <elf_add+0x2b7>
   2ef9d:	31 c0                	xor    %eax,%eax
   2ef9f:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   2efa4:	41 be ff ff ff ff    	mov    $0xffffffff,%r14d
   2efaa:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%rsp)
   2efb1:	00 
   2efb2:	31 ed                	xor    %ebp,%ebp
   2efb4:	44 8b 64 24 20       	mov    0x20(%rsp),%r12d
   2efb9:	45 85 e4             	test   %r12d,%r12d
   2efbc:	48 8b 5c 24 10       	mov    0x10(%rsp),%rbx
   2efc1:	0f 85 bd ea ff ff    	jne    2da84 <elf_add+0xb44>
   2efc7:	e9 ce ea ff ff       	jmpq   2da9a <elf_add+0xb5a>
   2efcc:	31 c0                	xor    %eax,%eax
   2efce:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   2efd3:	41 be ff ff ff ff    	mov    $0xffffffff,%r14d
   2efd9:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%rsp)
   2efe0:	00 
   2efe1:	31 ed                	xor    %ebp,%ebp
   2efe3:	4c 8b 7c 24 40       	mov    0x40(%rsp),%r15
   2efe8:	44 8b 64 24 20       	mov    0x20(%rsp),%r12d
   2efed:	45 85 e4             	test   %r12d,%r12d
   2eff0:	48 8b 5c 24 10       	mov    0x10(%rsp),%rbx
   2eff5:	0f 85 89 ea ff ff    	jne    2da84 <elf_add+0xb44>
   2effb:	e9 9a ea ff ff       	jmpq   2da9a <elf_add+0xb5a>
   2f000:	e8 b3 50 fd ff       	callq  40b8 <abort@plt>
   2f005:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2f00c:	00 00 00 
   2f00f:	90                   	nop

000000000002f010 <phdr_callback>:
   2f010:	41 57                	push   %r15
   2f012:	41 56                	push   %r14
   2f014:	53                   	push   %rbx
   2f015:	48 83 ec 20          	sub    $0x20,%rsp
   2f019:	48 89 d3             	mov    %rdx,%rbx
   2f01c:	49 89 fe             	mov    %rdi,%r14
   2f01f:	4c 8b 7f 08          	mov    0x8(%rdi),%r15
   2f023:	4d 85 ff             	test   %r15,%r15
   2f026:	74 43                	je     2f06b <phdr_callback+0x5b>
   2f028:	41 80 3f 00          	cmpb   $0x0,(%r15)
   2f02c:	74 3d                	je     2f06b <phdr_callback+0x5b>
   2f02e:	8b 7b 38             	mov    0x38(%rbx),%edi
   2f031:	83 ff ff             	cmp    $0xffffffff,%edi
   2f034:	74 18                	je     2f04e <phdr_callback+0x3e>
   2f036:	48 8b 73 08          	mov    0x8(%rbx),%rsi
   2f03a:	48 8b 53 10          	mov    0x10(%rbx),%rdx
   2f03e:	e8 bd dc ff ff       	callq  2cd00 <__rdos_backtrace_close>
   2f043:	c7 43 38 ff ff ff ff 	movl   $0xffffffff,0x38(%rbx)
   2f04a:	4d 8b 7e 08          	mov    0x8(%r14),%r15
   2f04e:	48 8b 73 08          	mov    0x8(%rbx),%rsi
   2f052:	48 8b 53 10          	mov    0x10(%rbx),%rdx
   2f056:	48 8d 4c 24 1c       	lea    0x1c(%rsp),%rcx
   2f05b:	4c 89 ff             	mov    %r15,%rdi
   2f05e:	e8 2d dc ff ff       	callq  2cc90 <__rdos_backtrace_open>
   2f063:	89 c2                	mov    %eax,%edx
   2f065:	85 c0                	test   %eax,%eax
   2f067:	79 15                	jns    2f07e <phdr_callback+0x6e>
   2f069:	eb 66                	jmp    2f0d1 <phdr_callback+0xc1>
   2f06b:	8b 53 38             	mov    0x38(%rbx),%edx
   2f06e:	83 fa ff             	cmp    $0xffffffff,%edx
   2f071:	74 5e                	je     2f0d1 <phdr_callback+0xc1>
   2f073:	4c 8b 7b 30          	mov    0x30(%rbx),%r15
   2f077:	c7 43 38 ff ff ff ff 	movl   $0xffffffff,0x38(%rbx)
   2f07e:	49 8b 0e             	mov    (%r14),%rcx
   2f081:	48 8b 3b             	mov    (%rbx),%rdi
   2f084:	4c 8b 43 08          	mov    0x8(%rbx),%r8
   2f088:	4c 8b 4b 10          	mov    0x10(%rbx),%r9
   2f08c:	48 83 ec 08          	sub    $0x8,%rsp
   2f090:	48 8d 44 24 14       	lea    0x14(%rsp),%rax
   2f095:	4c 8d 54 24 18       	lea    0x18(%rsp),%r10
   2f09a:	4c 89 fe             	mov    %r15,%rsi
   2f09d:	6a 00                	pushq  $0x0
   2f09f:	6a 00                	pushq  $0x0
   2f0a1:	50                   	push   %rax
   2f0a2:	ff 73 20             	pushq  0x20(%rbx)
   2f0a5:	41 52                	push   %r10
   2f0a7:	e8 94 de ff ff       	callq  2cf40 <elf_add>
   2f0ac:	48 83 c4 30          	add    $0x30,%rsp
   2f0b0:	85 c0                	test   %eax,%eax
   2f0b2:	74 1d                	je     2f0d1 <phdr_callback+0xc1>
   2f0b4:	83 7c 24 0c 00       	cmpl   $0x0,0xc(%rsp)
   2f0b9:	74 16                	je     2f0d1 <phdr_callback+0xc1>
   2f0bb:	48 8b 43 28          	mov    0x28(%rbx),%rax
   2f0bf:	c7 00 01 00 00 00    	movl   $0x1,(%rax)
   2f0c5:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   2f0ca:	48 8b 4b 18          	mov    0x18(%rbx),%rcx
   2f0ce:	48 89 01             	mov    %rax,(%rcx)
   2f0d1:	31 c0                	xor    %eax,%eax
   2f0d3:	48 83 c4 20          	add    $0x20,%rsp
   2f0d7:	5b                   	pop    %rbx
   2f0d8:	41 5e                	pop    %r14
   2f0da:	41 5f                	pop    %r15
   2f0dc:	c3                   	retq   
   2f0dd:	0f 1f 00             	nopl   (%rax)

000000000002f0e0 <elf_syminfo>:
   2f0e0:	41 57                	push   %r15
   2f0e2:	41 56                	push   %r14
   2f0e4:	41 55                	push   %r13
   2f0e6:	41 54                	push   %r12
   2f0e8:	53                   	push   %rbx
   2f0e9:	48 83 ec 10          	sub    $0x10,%rsp
   2f0ed:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
   2f0f2:	83 7f 08 00          	cmpl   $0x0,0x8(%rdi)
   2f0f6:	0f 85 7e 00 00 00    	jne    2f17a <elf_syminfo+0x9a>
   2f0fc:	4d 89 c7             	mov    %r8,%r15
   2f0ff:	49 89 d6             	mov    %rdx,%r14
   2f102:	48 8b 5f 30          	mov    0x30(%rdi),%rbx
   2f106:	48 85 db             	test   %rbx,%rbx
   2f109:	74 3f                	je     2f14a <elf_syminfo+0x6a>
   2f10b:	4c 8d 25 0e 1d 00 00 	lea    0x1d0e(%rip),%r12        # 30e20 <elf_symbol_search>
   2f112:	4c 8d 6c 24 08       	lea    0x8(%rsp),%r13
   2f117:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   2f11e:	00 00 
   2f120:	48 8b 73 08          	mov    0x8(%rbx),%rsi
   2f124:	48 8b 53 10          	mov    0x10(%rbx),%rdx
   2f128:	b9 18 00 00 00       	mov    $0x18,%ecx
   2f12d:	4c 89 ef             	mov    %r13,%rdi
   2f130:	4d 89 e0             	mov    %r12,%r8
   2f133:	e8 58 4f fd ff       	callq  4090 <bsearch@plt>
   2f138:	48 85 c0             	test   %rax,%rax
   2f13b:	75 19                	jne    2f156 <elf_syminfo+0x76>
   2f13d:	48 8b 1b             	mov    (%rbx),%rbx
   2f140:	48 85 db             	test   %rbx,%rbx
   2f143:	75 db                	jne    2f120 <elf_syminfo+0x40>
   2f145:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
   2f14a:	4c 89 ff             	mov    %r15,%rdi
   2f14d:	31 d2                	xor    %edx,%edx
   2f14f:	31 c9                	xor    %ecx,%ecx
   2f151:	45 31 c0             	xor    %r8d,%r8d
   2f154:	eb 13                	jmp    2f169 <elf_syminfo+0x89>
   2f156:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
   2f15b:	48 8b 10             	mov    (%rax),%rdx
   2f15e:	48 8b 48 08          	mov    0x8(%rax),%rcx
   2f162:	4c 8b 40 10          	mov    0x10(%rax),%r8
   2f166:	4c 89 ff             	mov    %r15,%rdi
   2f169:	41 ff d6             	callq  *%r14
   2f16c:	48 83 c4 10          	add    $0x10,%rsp
   2f170:	5b                   	pop    %rbx
   2f171:	41 5c                	pop    %r12
   2f173:	41 5d                	pop    %r13
   2f175:	41 5e                	pop    %r14
   2f177:	41 5f                	pop    %r15
   2f179:	c3                   	retq   
   2f17a:	e8 39 4f fd ff       	callq  40b8 <abort@plt>
   2f17f:	90                   	nop

000000000002f180 <elf_nosyms>:
   2f180:	4c 89 c7             	mov    %r8,%rdi
   2f183:	48 8d 35 8f f0 00 00 	lea    0xf08f(%rip),%rsi        # 3e219 <str.0+0x3f9>
   2f18a:	ba ff ff ff ff       	mov    $0xffffffff,%edx
   2f18f:	ff e1                	jmpq   *%rcx
   2f191:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2f198:	00 00 00 
   2f19b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000002f1a0 <elf_zlib_inflate_and_verify>:
   2f1a0:	55                   	push   %rbp
   2f1a1:	41 57                	push   %r15
   2f1a3:	41 56                	push   %r14
   2f1a5:	41 55                	push   %r13
   2f1a7:	41 54                	push   %r12
   2f1a9:	53                   	push   %rbx
   2f1aa:	48 81 ec 88 00 00 00 	sub    $0x88,%rsp
   2f1b1:	49 89 cd             	mov    %rcx,%r13
   2f1b4:	4c 8d 14 37          	lea    (%rdi,%rsi,1),%r10
   2f1b8:	4c 89 84 24 80 00 00 	mov    %r8,0x80(%rsp)
   2f1bf:	00 
   2f1c0:	4a 8d 04 01          	lea    (%rcx,%r8,1),%rax
   2f1c4:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
   2f1c9:	49 89 ce             	mov    %rcx,%r14
   2f1cc:	48 83 fe 05          	cmp    $0x5,%rsi
   2f1d0:	0f 8c 4c 0c 00 00    	jl     2fe22 <elf_zlib_inflate_and_verify+0xc82>
   2f1d6:	48 89 fd             	mov    %rdi,%rbp
   2f1d9:	48 8d 82 78 12 00 00 	lea    0x1278(%rdx),%rax
   2f1e0:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
   2f1e5:	48 8d 82 00 08 00 00 	lea    0x800(%rdx),%rax
   2f1ec:	48 89 44 24 78       	mov    %rax,0x78(%rsp)
   2f1f1:	4d 89 ee             	mov    %r13,%r14
   2f1f4:	4c 89 6c 24 50       	mov    %r13,0x50(%rsp)
   2f1f9:	4c 89 54 24 08       	mov    %r10,0x8(%rsp)
   2f1fe:	48 89 54 24 38       	mov    %rdx,0x38(%rsp)
   2f203:	0f b6 45 00          	movzbl 0x0(%rbp),%eax
   2f207:	84 c0                	test   %al,%al
   2f209:	0f 88 96 0e 00 00    	js     300a5 <elf_zlib_inflate_and_verify+0xf05>
   2f20f:	89 c1                	mov    %eax,%ecx
   2f211:	83 e1 0f             	and    $0xf,%ecx
   2f214:	83 f9 08             	cmp    $0x8,%ecx
   2f217:	0f 85 88 0e 00 00    	jne    300a5 <elf_zlib_inflate_and_verify+0xf05>
   2f21d:	0f b6 4d 01          	movzbl 0x1(%rbp),%ecx
   2f221:	f6 c1 20             	test   $0x20,%cl
   2f224:	0f 85 7b 0e 00 00    	jne    300a5 <elf_zlib_inflate_and_verify+0xf05>
   2f22a:	c1 e0 08             	shl    $0x8,%eax
   2f22d:	09 c8                	or     %ecx,%eax
   2f22f:	69 c0 df 7b ef bd    	imul   $0xbdef7bdf,%eax,%eax
   2f235:	3d 84 10 42 08       	cmp    $0x8421084,%eax
   2f23a:	0f 87 65 0e 00 00    	ja     300a5 <elf_zlib_inflate_and_verify+0xf05>
   2f240:	48 83 c5 02          	add    $0x2,%rbp
   2f244:	45 31 e4             	xor    %r12d,%r12d
   2f247:	31 db                	xor    %ebx,%ebx
   2f249:	40 f6 c5 03          	test   $0x3,%bpl
   2f24d:	74 35                	je     2f284 <elf_zlib_inflate_and_verify+0xe4>
   2f24f:	90                   	nop
   2f250:	0f b6 45 00          	movzbl 0x0(%rbp),%eax
   2f254:	44 89 e1             	mov    %r12d,%ecx
   2f257:	48 d3 e0             	shl    %cl,%rax
   2f25a:	48 09 c3             	or     %rax,%rbx
   2f25d:	41 83 c4 08          	add    $0x8,%r12d
   2f261:	48 83 c5 01          	add    $0x1,%rbp
   2f265:	40 f6 c5 03          	test   $0x3,%bpl
   2f269:	75 e5                	jne    2f250 <elf_zlib_inflate_and_verify+0xb0>
   2f26b:	eb 17                	jmp    2f284 <elf_zlib_inflate_and_verify+0xe4>
   2f26d:	45 31 c0             	xor    %r8d,%r8d
   2f270:	45 31 e4             	xor    %r12d,%r12d
   2f273:	4c 8b 54 24 08       	mov    0x8(%rsp),%r10
   2f278:	f6 c3 01             	test   $0x1,%bl
   2f27b:	4c 89 c3             	mov    %r8,%rbx
   2f27e:	0f 85 8e 0b 00 00    	jne    2fe12 <elf_zlib_inflate_and_verify+0xc72>
   2f284:	41 83 fc 0e          	cmp    $0xe,%r12d
   2f288:	77 28                	ja     2f2b2 <elf_zlib_inflate_and_verify+0x112>
   2f28a:	4c 89 d0             	mov    %r10,%rax
   2f28d:	48 29 e8             	sub    %rbp,%rax
   2f290:	48 83 f8 04          	cmp    $0x4,%rax
   2f294:	0f 8c 0b 0e 00 00    	jl     300a5 <elf_zlib_inflate_and_verify+0xf05>
   2f29a:	8b 45 00             	mov    0x0(%rbp),%eax
   2f29d:	44 89 e1             	mov    %r12d,%ecx
   2f2a0:	48 d3 e0             	shl    %cl,%rax
   2f2a3:	48 09 c3             	or     %rax,%rbx
   2f2a6:	41 83 c4 20          	add    $0x20,%r12d
   2f2aa:	0f 18 45 04          	prefetchnta 0x4(%rbp)
   2f2ae:	48 83 c5 04          	add    $0x4,%rbp
   2f2b2:	48 89 ef             	mov    %rbp,%rdi
   2f2b5:	89 d8                	mov    %ebx,%eax
   2f2b7:	d1 e8                	shr    %eax
   2f2b9:	83 e0 03             	and    $0x3,%eax
   2f2bc:	0f 84 4e 01 00 00    	je     2f410 <elf_zlib_inflate_and_verify+0x270>
   2f2c2:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%rsp)
   2f2c9:	00 
   2f2ca:	49 89 d8             	mov    %rbx,%r8
   2f2cd:	49 c1 e8 03          	shr    $0x3,%r8
   2f2d1:	45 8d 7c 24 fd       	lea    -0x3(%r12),%r15d
   2f2d6:	83 f8 01             	cmp    $0x1,%eax
   2f2d9:	48 89 5c 24 58       	mov    %rbx,0x58(%rsp)
   2f2de:	0f 84 ec 01 00 00    	je     2f4d0 <elf_zlib_inflate_and_verify+0x330>
   2f2e4:	83 f8 03             	cmp    $0x3,%eax
   2f2e7:	0f 84 a2 0d 00 00    	je     3008f <elf_zlib_inflate_and_verify+0xeef>
   2f2ed:	41 83 ff 0e          	cmp    $0xe,%r15d
   2f2f1:	77 2c                	ja     2f31f <elf_zlib_inflate_and_verify+0x17f>
   2f2f3:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   2f2f8:	48 29 f8             	sub    %rdi,%rax
   2f2fb:	48 83 f8 04          	cmp    $0x4,%rax
   2f2ff:	0f 8c 8a 0d 00 00    	jl     3008f <elf_zlib_inflate_and_verify+0xeef>
   2f305:	8b 07                	mov    (%rdi),%eax
   2f307:	44 89 f9             	mov    %r15d,%ecx
   2f30a:	48 d3 e0             	shl    %cl,%rax
   2f30d:	49 09 c0             	or     %rax,%r8
   2f310:	41 83 c4 1d          	add    $0x1d,%r12d
   2f314:	0f 18 47 04          	prefetchnta 0x4(%rdi)
   2f318:	48 83 c7 04          	add    $0x4,%rdi
   2f31c:	45 89 e7             	mov    %r12d,%r15d
   2f31f:	45 89 c4             	mov    %r8d,%r12d
   2f322:	41 83 e4 1f          	and    $0x1f,%r12d
   2f326:	41 81 c4 01 01 00 00 	add    $0x101,%r12d
   2f32d:	41 81 fc 1e 01 00 00 	cmp    $0x11e,%r12d
   2f334:	0f 87 55 0d 00 00    	ja     3008f <elf_zlib_inflate_and_verify+0xeef>
   2f33a:	44 89 c3             	mov    %r8d,%ebx
   2f33d:	c1 eb 05             	shr    $0x5,%ebx
   2f340:	83 e3 1f             	and    $0x1f,%ebx
   2f343:	83 fb 1d             	cmp    $0x1d,%ebx
   2f346:	0f 87 43 0d 00 00    	ja     3008f <elf_zlib_inflate_and_verify+0xeef>
   2f34c:	4c 89 c2             	mov    %r8,%rdx
   2f34f:	48 c1 ea 0e          	shr    $0xe,%rdx
   2f353:	41 8d 47 f2          	lea    -0xe(%r15),%eax
   2f357:	0f 57 c0             	xorps  %xmm0,%xmm0
   2f35a:	0f 29 44 24 10       	movaps %xmm0,0x10(%rsp)
   2f35f:	c7 44 24 1f 00 00 00 	movl   $0x0,0x1f(%rsp)
   2f366:	00 
   2f367:	83 f8 0e             	cmp    $0xe,%eax
   2f36a:	77 2b                	ja     2f397 <elf_zlib_inflate_and_verify+0x1f7>
   2f36c:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
   2f371:	48 29 f9             	sub    %rdi,%rcx
   2f374:	48 83 f9 04          	cmp    $0x4,%rcx
   2f378:	0f 8c 11 0d 00 00    	jl     3008f <elf_zlib_inflate_and_verify+0xeef>
   2f37e:	8b 37                	mov    (%rdi),%esi
   2f380:	89 c1                	mov    %eax,%ecx
   2f382:	48 d3 e6             	shl    %cl,%rsi
   2f385:	48 09 f2             	or     %rsi,%rdx
   2f388:	41 83 c7 12          	add    $0x12,%r15d
   2f38c:	0f 18 47 04          	prefetchnta 0x4(%rdi)
   2f390:	48 83 c7 04          	add    $0x4,%rdi
   2f394:	44 89 f8             	mov    %r15d,%eax
   2f397:	41 c1 e8 0a          	shr    $0xa,%r8d
   2f39b:	44 89 c6             	mov    %r8d,%esi
   2f39e:	83 e6 0f             	and    $0xf,%esi
   2f3a1:	89 d1                	mov    %edx,%ecx
   2f3a3:	80 e1 07             	and    $0x7,%cl
   2f3a6:	88 4c 24 20          	mov    %cl,0x20(%rsp)
   2f3aa:	89 d1                	mov    %edx,%ecx
   2f3ac:	c0 e9 03             	shr    $0x3,%cl
   2f3af:	80 e1 07             	and    $0x7,%cl
   2f3b2:	88 4c 24 21          	mov    %cl,0x21(%rsp)
   2f3b6:	48 89 d1             	mov    %rdx,%rcx
   2f3b9:	48 c1 e9 06          	shr    $0x6,%rcx
   2f3bd:	80 e1 07             	and    $0x7,%cl
   2f3c0:	88 4c 24 22          	mov    %cl,0x22(%rsp)
   2f3c4:	48 89 d1             	mov    %rdx,%rcx
   2f3c7:	48 c1 e9 09          	shr    $0x9,%rcx
   2f3cb:	80 e1 07             	and    $0x7,%cl
   2f3ce:	88 4c 24 10          	mov    %cl,0x10(%rsp)
   2f3d2:	48 89 d1             	mov    %rdx,%rcx
   2f3d5:	48 c1 e9 0c          	shr    $0xc,%rcx
   2f3d9:	85 f6                	test   %esi,%esi
   2f3db:	0f 84 82 02 00 00    	je     2f663 <elf_zlib_inflate_and_verify+0x4c3>
   2f3e1:	83 c6 04             	add    $0x4,%esi
   2f3e4:	80 e1 07             	and    $0x7,%cl
   2f3e7:	88 4c 24 18          	mov    %cl,0x18(%rsp)
   2f3eb:	48 c1 ea 0f          	shr    $0xf,%rdx
   2f3ef:	44 8d 78 f1          	lea    -0xf(%rax),%r15d
   2f3f3:	83 fe 05             	cmp    $0x5,%esi
   2f3f6:	0f 85 ef 00 00 00    	jne    2f4eb <elf_zlib_inflate_and_verify+0x34b>
   2f3fc:	49 89 fd             	mov    %rdi,%r13
   2f3ff:	48 89 d5             	mov    %rdx,%rbp
   2f402:	e9 68 02 00 00       	jmpq   2f66f <elf_zlib_inflate_and_verify+0x4cf>
   2f407:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   2f40e:	00 00 
   2f410:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%rsp)
   2f417:	00 
   2f418:	41 83 c4 f4          	add    $0xfffffff4,%r12d
   2f41c:	41 c1 ec 03          	shr    $0x3,%r12d
   2f420:	49 f7 d4             	not    %r12
   2f423:	4c 89 e5             	mov    %r12,%rbp
   2f426:	48 01 fd             	add    %rdi,%rbp
   2f429:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
   2f42e:	48 89 d0             	mov    %rdx,%rax
   2f431:	48 29 e8             	sub    %rbp,%rax
   2f434:	48 83 f8 04          	cmp    $0x4,%rax
   2f438:	0f 8c 51 0c 00 00    	jl     3008f <elf_zlib_inflate_and_verify+0xeef>
   2f43e:	0f b6 45 00          	movzbl 0x0(%rbp),%eax
   2f442:	44 0f b6 7d 01       	movzbl 0x1(%rbp),%r15d
   2f447:	49 c1 e7 08          	shl    $0x8,%r15
   2f44b:	49 09 c7             	or     %rax,%r15
   2f44e:	0f b6 4d 02          	movzbl 0x2(%rbp),%ecx
   2f452:	0f b6 45 03          	movzbl 0x3(%rbp),%eax
   2f456:	c1 e0 08             	shl    $0x8,%eax
   2f459:	09 c8                	or     %ecx,%eax
   2f45b:	35 ff ff 00 00       	xor    $0xffff,%eax
   2f460:	44 39 f8             	cmp    %r15d,%eax
   2f463:	0f 85 26 0c 00 00    	jne    3008f <elf_zlib_inflate_and_verify+0xeef>
   2f469:	48 83 c5 04          	add    $0x4,%rbp
   2f46d:	89 d1                	mov    %edx,%ecx
   2f46f:	29 e9                	sub    %ebp,%ecx
   2f471:	39 c8                	cmp    %ecx,%eax
   2f473:	0f 87 16 0c 00 00    	ja     3008f <elf_zlib_inflate_and_verify+0xeef>
   2f479:	48 8b 4c 24 48       	mov    0x48(%rsp),%rcx
   2f47e:	44 29 f1             	sub    %r14d,%ecx
   2f481:	39 c8                	cmp    %ecx,%eax
   2f483:	0f 87 06 0c 00 00    	ja     3008f <elf_zlib_inflate_and_verify+0xeef>
   2f489:	4c 89 f7             	mov    %r14,%rdi
   2f48c:	48 89 ee             	mov    %rbp,%rsi
   2f48f:	4c 89 fa             	mov    %r15,%rdx
   2f492:	e8 41 4c fd ff       	callq  40d8 <memcpy@plt>
   2f497:	4d 01 fe             	add    %r15,%r14
   2f49a:	4c 01 fd             	add    %r15,%rbp
   2f49d:	40 f6 c5 03          	test   $0x3,%bpl
   2f4a1:	0f 84 c6 fd ff ff    	je     2f26d <elf_zlib_inflate_and_verify+0xcd>
   2f4a7:	45 31 e4             	xor    %r12d,%r12d
   2f4aa:	45 31 c0             	xor    %r8d,%r8d
   2f4ad:	0f 1f 00             	nopl   (%rax)
   2f4b0:	0f b6 45 00          	movzbl 0x0(%rbp),%eax
   2f4b4:	44 89 e1             	mov    %r12d,%ecx
   2f4b7:	48 d3 e0             	shl    %cl,%rax
   2f4ba:	49 09 c0             	or     %rax,%r8
   2f4bd:	41 83 c4 08          	add    $0x8,%r12d
   2f4c1:	48 83 c5 01          	add    $0x1,%rbp
   2f4c5:	40 f6 c5 03          	test   $0x3,%bpl
   2f4c9:	75 e5                	jne    2f4b0 <elf_zlib_inflate_and_verify+0x310>
   2f4cb:	e9 a3 fd ff ff       	jmpq   2f273 <elf_zlib_inflate_and_verify+0xd3>
   2f4d0:	48 8d 05 49 f0 00 00 	lea    0xf049(%rip),%rax        # 3e520 <elf_zlib_default_dist_table>
   2f4d7:	49 89 c3             	mov    %rax,%r11
   2f4da:	48 8d 05 5f ed 00 00 	lea    0xed5f(%rip),%rax        # 3e240 <elf_zlib_default_table>
   2f4e1:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   2f4e6:	e9 46 02 00 00       	jmpq   2f731 <elf_zlib_inflate_and_verify+0x591>
   2f4eb:	41 83 ff 0e          	cmp    $0xe,%r15d
   2f4ef:	77 2b                	ja     2f51c <elf_zlib_inflate_and_verify+0x37c>
   2f4f1:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
   2f4f6:	48 29 f9             	sub    %rdi,%rcx
   2f4f9:	48 83 f9 04          	cmp    $0x4,%rcx
   2f4fd:	0f 8c 8c 0b 00 00    	jl     3008f <elf_zlib_inflate_and_verify+0xeef>
   2f503:	8b 2f                	mov    (%rdi),%ebp
   2f505:	44 89 f9             	mov    %r15d,%ecx
   2f508:	48 d3 e5             	shl    %cl,%rbp
   2f50b:	48 09 ea             	or     %rbp,%rdx
   2f50e:	83 c0 11             	add    $0x11,%eax
   2f511:	0f 18 47 04          	prefetchnta 0x4(%rdi)
   2f515:	48 83 c7 04          	add    $0x4,%rdi
   2f519:	41 89 c7             	mov    %eax,%r15d
   2f51c:	89 d0                	mov    %edx,%eax
   2f51e:	24 07                	and    $0x7,%al
   2f520:	88 44 24 17          	mov    %al,0x17(%rsp)
   2f524:	48 89 d0             	mov    %rdx,%rax
   2f527:	48 c1 e8 03          	shr    $0x3,%rax
   2f52b:	83 fe 06             	cmp    $0x6,%esi
   2f52e:	75 0f                	jne    2f53f <elf_zlib_inflate_and_verify+0x39f>
   2f530:	49 89 fd             	mov    %rdi,%r13
   2f533:	48 89 c5             	mov    %rax,%rbp
   2f536:	41 83 c7 fd          	add    $0xfffffffd,%r15d
   2f53a:	e9 30 01 00 00       	jmpq   2f66f <elf_zlib_inflate_and_verify+0x4cf>
   2f53f:	24 07                	and    $0x7,%al
   2f541:	88 44 24 19          	mov    %al,0x19(%rsp)
   2f545:	48 89 d0             	mov    %rdx,%rax
   2f548:	48 c1 e8 06          	shr    $0x6,%rax
   2f54c:	83 fe 07             	cmp    $0x7,%esi
   2f54f:	75 0f                	jne    2f560 <elf_zlib_inflate_and_verify+0x3c0>
   2f551:	49 89 fd             	mov    %rdi,%r13
   2f554:	48 89 c5             	mov    %rax,%rbp
   2f557:	41 83 c7 fa          	add    $0xfffffffa,%r15d
   2f55b:	e9 0f 01 00 00       	jmpq   2f66f <elf_zlib_inflate_and_verify+0x4cf>
   2f560:	24 07                	and    $0x7,%al
   2f562:	88 44 24 16          	mov    %al,0x16(%rsp)
   2f566:	48 89 d0             	mov    %rdx,%rax
   2f569:	48 c1 e8 09          	shr    $0x9,%rax
   2f56d:	83 fe 08             	cmp    $0x8,%esi
   2f570:	75 0f                	jne    2f581 <elf_zlib_inflate_and_verify+0x3e1>
   2f572:	49 89 fd             	mov    %rdi,%r13
   2f575:	48 89 c5             	mov    %rax,%rbp
   2f578:	41 83 c7 f7          	add    $0xfffffff7,%r15d
   2f57c:	e9 ee 00 00 00       	jmpq   2f66f <elf_zlib_inflate_and_verify+0x4cf>
   2f581:	24 07                	and    $0x7,%al
   2f583:	88 44 24 1a          	mov    %al,0x1a(%rsp)
   2f587:	48 89 d0             	mov    %rdx,%rax
   2f58a:	48 c1 e8 0c          	shr    $0xc,%rax
   2f58e:	83 fe 09             	cmp    $0x9,%esi
   2f591:	75 0f                	jne    2f5a2 <elf_zlib_inflate_and_verify+0x402>
   2f593:	49 89 fd             	mov    %rdi,%r13
   2f596:	48 89 c5             	mov    %rax,%rbp
   2f599:	41 83 c7 f4          	add    $0xfffffff4,%r15d
   2f59d:	e9 cd 00 00 00       	jmpq   2f66f <elf_zlib_inflate_and_verify+0x4cf>
   2f5a2:	24 07                	and    $0x7,%al
   2f5a4:	88 44 24 15          	mov    %al,0x15(%rsp)
   2f5a8:	48 c1 ea 0f          	shr    $0xf,%rdx
   2f5ac:	41 8d 47 f1          	lea    -0xf(%r15),%eax
   2f5b0:	83 fe 0a             	cmp    $0xa,%esi
   2f5b3:	75 0b                	jne    2f5c0 <elf_zlib_inflate_and_verify+0x420>
   2f5b5:	49 89 fd             	mov    %rdi,%r13
   2f5b8:	48 89 d5             	mov    %rdx,%rbp
   2f5bb:	e9 ac 00 00 00       	jmpq   2f66c <elf_zlib_inflate_and_verify+0x4cc>
   2f5c0:	83 f8 0e             	cmp    $0xe,%eax
   2f5c3:	77 2b                	ja     2f5f0 <elf_zlib_inflate_and_verify+0x450>
   2f5c5:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
   2f5ca:	48 29 f9             	sub    %rdi,%rcx
   2f5cd:	48 83 f9 04          	cmp    $0x4,%rcx
   2f5d1:	0f 8c b8 0a 00 00    	jl     3008f <elf_zlib_inflate_and_verify+0xeef>
   2f5d7:	8b 2f                	mov    (%rdi),%ebp
   2f5d9:	89 c1                	mov    %eax,%ecx
   2f5db:	48 d3 e5             	shl    %cl,%rbp
   2f5de:	48 09 ea             	or     %rbp,%rdx
   2f5e1:	41 83 c7 11          	add    $0x11,%r15d
   2f5e5:	0f 18 47 04          	prefetchnta 0x4(%rdi)
   2f5e9:	48 83 c7 04          	add    $0x4,%rdi
   2f5ed:	44 89 f8             	mov    %r15d,%eax
   2f5f0:	89 d1                	mov    %edx,%ecx
   2f5f2:	80 e1 07             	and    $0x7,%cl
   2f5f5:	88 4c 24 1b          	mov    %cl,0x1b(%rsp)
   2f5f9:	48 89 d1             	mov    %rdx,%rcx
   2f5fc:	48 c1 e9 03          	shr    $0x3,%rcx
   2f600:	83 fe 0b             	cmp    $0xb,%esi
   2f603:	75 0b                	jne    2f610 <elf_zlib_inflate_and_verify+0x470>
   2f605:	49 89 fd             	mov    %rdi,%r13
   2f608:	48 89 cd             	mov    %rcx,%rbp
   2f60b:	83 c0 fd             	add    $0xfffffffd,%eax
   2f60e:	eb 5c                	jmp    2f66c <elf_zlib_inflate_and_verify+0x4cc>
   2f610:	80 e1 07             	and    $0x7,%cl
   2f613:	88 4c 24 14          	mov    %cl,0x14(%rsp)
   2f617:	48 89 d1             	mov    %rdx,%rcx
   2f61a:	48 c1 e9 06          	shr    $0x6,%rcx
   2f61e:	83 fe 0c             	cmp    $0xc,%esi
   2f621:	75 0b                	jne    2f62e <elf_zlib_inflate_and_verify+0x48e>
   2f623:	49 89 fd             	mov    %rdi,%r13
   2f626:	48 89 cd             	mov    %rcx,%rbp
   2f629:	83 c0 fa             	add    $0xfffffffa,%eax
   2f62c:	eb 3e                	jmp    2f66c <elf_zlib_inflate_and_verify+0x4cc>
   2f62e:	80 e1 07             	and    $0x7,%cl
   2f631:	88 4c 24 1c          	mov    %cl,0x1c(%rsp)
   2f635:	48 89 d1             	mov    %rdx,%rcx
   2f638:	48 c1 e9 09          	shr    $0x9,%rcx
   2f63c:	83 fe 0d             	cmp    $0xd,%esi
   2f63f:	75 0b                	jne    2f64c <elf_zlib_inflate_and_verify+0x4ac>
   2f641:	49 89 fd             	mov    %rdi,%r13
   2f644:	48 89 cd             	mov    %rcx,%rbp
   2f647:	83 c0 f7             	add    $0xfffffff7,%eax
   2f64a:	eb 20                	jmp    2f66c <elf_zlib_inflate_and_verify+0x4cc>
   2f64c:	80 e1 07             	and    $0x7,%cl
   2f64f:	88 4c 24 13          	mov    %cl,0x13(%rsp)
   2f653:	48 89 d1             	mov    %rdx,%rcx
   2f656:	48 c1 e9 0c          	shr    $0xc,%rcx
   2f65a:	83 fe 0e             	cmp    $0xe,%esi
   2f65d:	0f 85 0c 07 00 00    	jne    2fd6f <elf_zlib_inflate_and_verify+0xbcf>
   2f663:	49 89 fd             	mov    %rdi,%r13
   2f666:	48 89 cd             	mov    %rcx,%rbp
   2f669:	83 c0 f4             	add    $0xfffffff4,%eax
   2f66c:	41 89 c7             	mov    %eax,%r15d
   2f66f:	be 13 00 00 00       	mov    $0x13,%esi
   2f674:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
   2f679:	48 8b 4c 24 38       	mov    0x38(%rsp),%rcx
   2f67e:	48 89 ca             	mov    %rcx,%rdx
   2f681:	e8 2a 0a 00 00       	callq  300b0 <elf_zlib_inflate_table>
   2f686:	85 c0                	test   %eax,%eax
   2f688:	0f 84 01 0a 00 00    	je     3008f <elf_zlib_inflate_and_verify+0xeef>
   2f68e:	4d 89 e8             	mov    %r13,%r8
   2f691:	83 c3 01             	add    $0x1,%ebx
   2f694:	44 89 e0             	mov    %r12d,%eax
   2f697:	4c 8b 6c 24 68       	mov    0x68(%rsp),%r13
   2f69c:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   2f6a1:	4c 01 e8             	add    %r13,%rax
   2f6a4:	89 d9                	mov    %ebx,%ecx
   2f6a6:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
   2f6ab:	48 89 4c 24 70       	mov    %rcx,0x70(%rsp)
   2f6b0:	48 8d 34 08          	lea    (%rax,%rcx,1),%rsi
   2f6b4:	4c 39 ee             	cmp    %r13,%rsi
   2f6b7:	0f 87 d4 04 00 00    	ja     2fb91 <elf_zlib_inflate_and_verify+0x9f1>
   2f6bd:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
   2f6c2:	80 b8 78 13 00 00 00 	cmpb   $0x0,0x1378(%rax)
   2f6c9:	0f 84 c0 09 00 00    	je     3008f <elf_zlib_inflate_and_verify+0xeef>
   2f6cf:	48 8b 7c 24 68       	mov    0x68(%rsp),%rdi
   2f6d4:	48 8b 74 24 30       	mov    0x30(%rsp),%rsi
   2f6d9:	48 8b 4c 24 38       	mov    0x38(%rsp),%rcx
   2f6de:	48 89 ca             	mov    %rcx,%rdx
   2f6e1:	4c 89 c3             	mov    %r8,%rbx
   2f6e4:	e8 c7 09 00 00       	callq  300b0 <elf_zlib_inflate_table>
   2f6e9:	85 c0                	test   %eax,%eax
   2f6eb:	0f 84 9e 09 00 00    	je     3008f <elf_zlib_inflate_and_verify+0xeef>
   2f6f1:	48 8b 7c 24 40       	mov    0x40(%rsp),%rdi
   2f6f6:	48 8b 74 24 70       	mov    0x70(%rsp),%rsi
   2f6fb:	48 8b 54 24 38       	mov    0x38(%rsp),%rdx
   2f700:	48 8b 4c 24 78       	mov    0x78(%rsp),%rcx
   2f705:	e8 a6 09 00 00       	callq  300b0 <elf_zlib_inflate_table>
   2f70a:	85 c0                	test   %eax,%eax
   2f70c:	0f 84 7d 09 00 00    	je     3008f <elf_zlib_inflate_and_verify+0xeef>
   2f712:	48 89 df             	mov    %rbx,%rdi
   2f715:	49 89 e8             	mov    %rbp,%r8
   2f718:	4c 8b 5c 24 78       	mov    0x78(%rsp),%r11
   2f71d:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
   2f722:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   2f727:	4c 8b 6c 24 50       	mov    0x50(%rsp),%r13
   2f72c:	48 8b 5c 24 58       	mov    0x58(%rsp),%rbx
   2f731:	48 89 fd             	mov    %rdi,%rbp
   2f734:	45 89 fc             	mov    %r15d,%r12d
   2f737:	4c 8b 54 24 08       	mov    0x8(%rsp),%r10
   2f73c:	4c 89 5c 24 40       	mov    %r11,0x40(%rsp)
   2f741:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
   2f746:	41 83 fc 0e          	cmp    $0xe,%r12d
   2f74a:	0f 87 68 03 00 00    	ja     2fab8 <elf_zlib_inflate_and_verify+0x918>
   2f750:	e9 3b 03 00 00       	jmpq   2fa90 <elf_zlib_inflate_and_verify+0x8f0>
   2f755:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2f75c:	00 00 00 
   2f75f:	90                   	nop
   2f760:	81 fe 08 01 00 00    	cmp    $0x108,%esi
   2f766:	77 48                	ja     2f7b0 <elf_zlib_inflate_and_verify+0x610>
   2f768:	81 c6 02 ff ff ff    	add    $0xffffff02,%esi
   2f76e:	89 f3                	mov    %esi,%ebx
   2f770:	41 83 fc 0e          	cmp    $0xe,%r12d
   2f774:	0f 87 cc 00 00 00    	ja     2f846 <elf_zlib_inflate_and_verify+0x6a6>
   2f77a:	4c 89 d0             	mov    %r10,%rax
   2f77d:	48 29 e8             	sub    %rbp,%rax
   2f780:	48 83 f8 04          	cmp    $0x4,%rax
   2f784:	0f 8c 05 09 00 00    	jl     3008f <elf_zlib_inflate_and_verify+0xeef>
   2f78a:	8b 45 00             	mov    0x0(%rbp),%eax
   2f78d:	44 89 e1             	mov    %r12d,%ecx
   2f790:	48 d3 e0             	shl    %cl,%rax
   2f793:	49 09 c0             	or     %rax,%r8
   2f796:	41 83 c4 20          	add    $0x20,%r12d
   2f79a:	0f 18 45 04          	prefetchnta 0x4(%rbp)
   2f79e:	48 83 c5 04          	add    $0x4,%rbp
   2f7a2:	e9 9f 00 00 00       	jmpq   2f846 <elf_zlib_inflate_and_verify+0x6a6>
   2f7a7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   2f7ae:	00 00 
   2f7b0:	bb 02 01 00 00       	mov    $0x102,%ebx
   2f7b5:	81 fe 1d 01 00 00    	cmp    $0x11d,%esi
   2f7bb:	74 7f                	je     2f83c <elf_zlib_inflate_and_verify+0x69c>
   2f7bd:	0f 87 cc 08 00 00    	ja     3008f <elf_zlib_inflate_and_verify+0xeef>
   2f7c3:	41 83 fc 0e          	cmp    $0xe,%r12d
   2f7c7:	77 28                	ja     2f7f1 <elf_zlib_inflate_and_verify+0x651>
   2f7c9:	4c 89 d0             	mov    %r10,%rax
   2f7cc:	48 29 e8             	sub    %rbp,%rax
   2f7cf:	48 83 f8 04          	cmp    $0x4,%rax
   2f7d3:	0f 8c b6 08 00 00    	jl     3008f <elf_zlib_inflate_and_verify+0xeef>
   2f7d9:	8b 45 00             	mov    0x0(%rbp),%eax
   2f7dc:	44 89 e1             	mov    %r12d,%ecx
   2f7df:	48 d3 e0             	shl    %cl,%rax
   2f7e2:	49 09 c0             	or     %rax,%r8
   2f7e5:	41 83 c4 20          	add    $0x20,%r12d
   2f7e9:	0f 18 45 04          	prefetchnta 0x4(%rbp)
   2f7ed:	48 83 c5 04          	add    $0x4,%rbp
   2f7f1:	49 89 e9             	mov    %rbp,%r9
   2f7f4:	81 c6 f7 fe ff ff    	add    $0xfffffef7,%esi
   2f7fa:	89 f0                	mov    %esi,%eax
   2f7fc:	c1 e8 02             	shr    $0x2,%eax
   2f7ff:	8d 50 01             	lea    0x1(%rax),%edx
   2f802:	83 e6 03             	and    $0x3,%esi
   2f805:	89 d1                	mov    %edx,%ecx
   2f807:	d3 e6                	shl    %cl,%esi
   2f809:	bf f8 ff ff ff       	mov    $0xfffffff8,%edi
   2f80e:	89 c1                	mov    %eax,%ecx
   2f810:	d3 e7                	shl    %cl,%edi
   2f812:	83 f7 f8             	xor    $0xfffffff8,%edi
   2f815:	bd 02 00 00 00       	mov    $0x2,%ebp
   2f81a:	d3 e5                	shl    %cl,%ebp
   2f81c:	01 f7                	add    %esi,%edi
   2f81e:	83 c5 ff             	add    $0xffffffff,%ebp
   2f821:	44 89 c0             	mov    %r8d,%eax
   2f824:	21 e8                	and    %ebp,%eax
   2f826:	8d 1c 38             	lea    (%rax,%rdi,1),%ebx
   2f829:	83 c3 0b             	add    $0xb,%ebx
   2f82c:	89 d1                	mov    %edx,%ecx
   2f82e:	49 d3 e8             	shr    %cl,%r8
   2f831:	41 29 d4             	sub    %edx,%r12d
   2f834:	4c 8b 54 24 08       	mov    0x8(%rsp),%r10
   2f839:	4c 89 cd             	mov    %r9,%rbp
   2f83c:	41 83 fc 0e          	cmp    $0xe,%r12d
   2f840:	0f 86 34 ff ff ff    	jbe    2f77a <elf_zlib_inflate_and_verify+0x5da>
   2f846:	41 0f b6 c0          	movzbl %r8b,%eax
   2f84a:	41 0f b7 04 43       	movzwl (%r11,%rax,2),%eax
   2f84f:	89 c1                	mov    %eax,%ecx
   2f851:	c1 e9 09             	shr    $0x9,%ecx
   2f854:	83 e1 07             	and    $0x7,%ecx
   2f857:	41 89 c7             	mov    %eax,%r15d
   2f85a:	41 81 e7 ff 01 00 00 	and    $0x1ff,%r15d
   2f861:	a9 00 10 00 00       	test   $0x1000,%eax
   2f866:	75 48                	jne    2f8b0 <elf_zlib_inflate_and_verify+0x710>
   2f868:	83 c1 01             	add    $0x1,%ecx
   2f86b:	41 29 cc             	sub    %ecx,%r12d
   2f86e:	49 d3 e8             	shr    %cl,%r8
   2f871:	45 85 ff             	test   %r15d,%r15d
   2f874:	74 76                	je     2f8ec <elf_zlib_inflate_and_verify+0x74c>
   2f876:	41 83 ff 1d          	cmp    $0x1d,%r15d
   2f87a:	0f 87 0f 08 00 00    	ja     3008f <elf_zlib_inflate_and_verify+0xeef>
   2f880:	41 83 ff 03          	cmp    $0x3,%r15d
   2f884:	0f 87 c6 00 00 00    	ja     2f950 <elf_zlib_inflate_and_verify+0x7b0>
   2f88a:	41 83 c7 01          	add    $0x1,%r15d
   2f88e:	44 89 f0             	mov    %r14d,%eax
   2f891:	44 29 e8             	sub    %r13d,%eax
   2f894:	41 39 c7             	cmp    %eax,%r15d
   2f897:	0f 86 33 01 00 00    	jbe    2f9d0 <elf_zlib_inflate_and_verify+0x830>
   2f89d:	e9 ed 07 00 00       	jmpq   3008f <elf_zlib_inflate_and_verify+0xeef>
   2f8a2:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2f8a9:	00 00 00 
   2f8ac:	0f 1f 40 00          	nopl   0x0(%rax)
   2f8b0:	4c 89 c0             	mov    %r8,%rax
   2f8b3:	48 c1 e8 08          	shr    $0x8,%rax
   2f8b7:	ba ff ff ff ff       	mov    $0xffffffff,%edx
   2f8bc:	d3 e2                	shl    %cl,%edx
   2f8be:	f7 d2                	not    %edx
   2f8c0:	21 d0                	and    %edx,%eax
   2f8c2:	49 01 c7             	add    %rax,%r15
   2f8c5:	47 0f b7 bc 7b 00 02 	movzwl 0x200(%r11,%r15,2),%r15d
   2f8cc:	00 00 
   2f8ce:	44 89 f9             	mov    %r15d,%ecx
   2f8d1:	c1 e9 09             	shr    $0x9,%ecx
   2f8d4:	83 e1 07             	and    $0x7,%ecx
   2f8d7:	41 81 e7 ff 01 00 00 	and    $0x1ff,%r15d
   2f8de:	83 c9 08             	or     $0x8,%ecx
   2f8e1:	41 29 cc             	sub    %ecx,%r12d
   2f8e4:	49 d3 e8             	shr    %cl,%r8
   2f8e7:	45 85 ff             	test   %r15d,%r15d
   2f8ea:	75 8a                	jne    2f876 <elf_zlib_inflate_and_verify+0x6d6>
   2f8ec:	4d 39 ee             	cmp    %r13,%r14
   2f8ef:	0f 84 9a 07 00 00    	je     3008f <elf_zlib_inflate_and_verify+0xeef>
   2f8f5:	48 8b 44 24 48       	mov    0x48(%rsp),%rax
   2f8fa:	44 29 f0             	sub    %r14d,%eax
   2f8fd:	39 c3                	cmp    %eax,%ebx
   2f8ff:	0f 87 8a 07 00 00    	ja     3008f <elf_zlib_inflate_and_verify+0xeef>
   2f905:	89 db                	mov    %ebx,%ebx
   2f907:	41 0f b6 76 ff       	movzbl -0x1(%r14),%esi
   2f90c:	4c 89 f7             	mov    %r14,%rdi
   2f90f:	48 89 da             	mov    %rbx,%rdx
   2f912:	49 89 ef             	mov    %rbp,%r15
   2f915:	4c 89 c5             	mov    %r8,%rbp
   2f918:	4d 89 d5             	mov    %r10,%r13
   2f91b:	e8 b0 47 fd ff       	callq  40d0 <memset@plt>
   2f920:	4c 8b 5c 24 40       	mov    0x40(%rsp),%r11
   2f925:	4d 89 ea             	mov    %r13,%r10
   2f928:	4c 8b 6c 24 50       	mov    0x50(%rsp),%r13
   2f92d:	49 89 e8             	mov    %rbp,%r8
   2f930:	4c 89 fd             	mov    %r15,%rbp
   2f933:	49 01 de             	add    %rbx,%r14
   2f936:	48 8b 5c 24 58       	mov    0x58(%rsp),%rbx
   2f93b:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
   2f940:	41 83 fc 0e          	cmp    $0xe,%r12d
   2f944:	0f 87 6e 01 00 00    	ja     2fab8 <elf_zlib_inflate_and_verify+0x918>
   2f94a:	e9 41 01 00 00       	jmpq   2fa90 <elf_zlib_inflate_and_verify+0x8f0>
   2f94f:	90                   	nop
   2f950:	41 83 fc 0e          	cmp    $0xe,%r12d
   2f954:	77 28                	ja     2f97e <elf_zlib_inflate_and_verify+0x7de>
   2f956:	4c 89 d0             	mov    %r10,%rax
   2f959:	48 29 e8             	sub    %rbp,%rax
   2f95c:	48 83 f8 04          	cmp    $0x4,%rax
   2f960:	0f 8c 29 07 00 00    	jl     3008f <elf_zlib_inflate_and_verify+0xeef>
   2f966:	8b 45 00             	mov    0x0(%rbp),%eax
   2f969:	44 89 e1             	mov    %r12d,%ecx
   2f96c:	48 d3 e0             	shl    %cl,%rax
   2f96f:	49 09 c0             	or     %rax,%r8
   2f972:	41 83 c4 20          	add    $0x20,%r12d
   2f976:	0f 18 45 04          	prefetchnta 0x4(%rbp)
   2f97a:	48 83 c5 04          	add    $0x4,%rbp
   2f97e:	41 83 c7 fc          	add    $0xfffffffc,%r15d
   2f982:	44 89 f8             	mov    %r15d,%eax
   2f985:	d1 e8                	shr    %eax
   2f987:	8d 50 01             	lea    0x1(%rax),%edx
   2f98a:	41 83 e7 01          	and    $0x1,%r15d
   2f98e:	89 d1                	mov    %edx,%ecx
   2f990:	41 d3 e7             	shl    %cl,%r15d
   2f993:	be fc ff ff ff       	mov    $0xfffffffc,%esi
   2f998:	89 c1                	mov    %eax,%ecx
   2f99a:	d3 e6                	shl    %cl,%esi
   2f99c:	83 f6 fc             	xor    $0xfffffffc,%esi
   2f99f:	bf 02 00 00 00       	mov    $0x2,%edi
   2f9a4:	d3 e7                	shl    %cl,%edi
   2f9a6:	44 01 fe             	add    %r15d,%esi
   2f9a9:	83 c7 ff             	add    $0xffffffff,%edi
   2f9ac:	44 89 c0             	mov    %r8d,%eax
   2f9af:	21 f8                	and    %edi,%eax
   2f9b1:	44 8d 3c 30          	lea    (%rax,%rsi,1),%r15d
   2f9b5:	41 83 c7 05          	add    $0x5,%r15d
   2f9b9:	89 d1                	mov    %edx,%ecx
   2f9bb:	49 d3 e8             	shr    %cl,%r8
   2f9be:	41 29 d4             	sub    %edx,%r12d
   2f9c1:	44 89 f0             	mov    %r14d,%eax
   2f9c4:	44 29 e8             	sub    %r13d,%eax
   2f9c7:	41 39 c7             	cmp    %eax,%r15d
   2f9ca:	0f 87 bf 06 00 00    	ja     3008f <elf_zlib_inflate_and_verify+0xeef>
   2f9d0:	48 8b 44 24 48       	mov    0x48(%rsp),%rax
   2f9d5:	44 29 f0             	sub    %r14d,%eax
   2f9d8:	39 c3                	cmp    %eax,%ebx
   2f9da:	0f 87 af 06 00 00    	ja     3008f <elf_zlib_inflate_and_verify+0xeef>
   2f9e0:	4c 89 44 24 60       	mov    %r8,0x60(%rsp)
   2f9e5:	45 89 fd             	mov    %r15d,%r13d
   2f9e8:	49 f7 dd             	neg    %r13
   2f9eb:	41 39 df             	cmp    %ebx,%r15d
   2f9ee:	73 60                	jae    2fa50 <elf_zlib_inflate_and_verify+0x8b0>
   2f9f0:	48 89 6c 24 70       	mov    %rbp,0x70(%rsp)
   2f9f5:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2f9fc:	00 00 00 
   2f9ff:	90                   	nop
   2fa00:	44 39 fb             	cmp    %r15d,%ebx
   2fa03:	44 89 fd             	mov    %r15d,%ebp
   2fa06:	0f 42 eb             	cmovb  %ebx,%ebp
   2fa09:	4b 8d 34 2e          	lea    (%r14,%r13,1),%rsi
   2fa0d:	4c 89 f7             	mov    %r14,%rdi
   2fa10:	48 89 ea             	mov    %rbp,%rdx
   2fa13:	e8 c0 46 fd ff       	callq  40d8 <memcpy@plt>
   2fa18:	49 01 ee             	add    %rbp,%r14
   2fa1b:	29 eb                	sub    %ebp,%ebx
   2fa1d:	75 e1                	jne    2fa00 <elf_zlib_inflate_and_verify+0x860>
   2fa1f:	4c 8b 6c 24 50       	mov    0x50(%rsp),%r13
   2fa24:	4c 8b 54 24 08       	mov    0x8(%rsp),%r10
   2fa29:	48 8b 5c 24 58       	mov    0x58(%rsp),%rbx
   2fa2e:	4c 8b 44 24 60       	mov    0x60(%rsp),%r8
   2fa33:	48 8b 6c 24 70       	mov    0x70(%rsp),%rbp
   2fa38:	4c 8b 5c 24 40       	mov    0x40(%rsp),%r11
   2fa3d:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
   2fa42:	41 83 fc 0e          	cmp    $0xe,%r12d
   2fa46:	77 70                	ja     2fab8 <elf_zlib_inflate_and_verify+0x918>
   2fa48:	eb 46                	jmp    2fa90 <elf_zlib_inflate_and_verify+0x8f0>
   2fa4a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   2fa50:	4d 01 f5             	add    %r14,%r13
   2fa53:	41 89 df             	mov    %ebx,%r15d
   2fa56:	4c 89 f7             	mov    %r14,%rdi
   2fa59:	4c 89 ee             	mov    %r13,%rsi
   2fa5c:	4c 89 fa             	mov    %r15,%rdx
   2fa5f:	4c 89 d3             	mov    %r10,%rbx
   2fa62:	e8 71 46 fd ff       	callq  40d8 <memcpy@plt>
   2fa67:	49 89 da             	mov    %rbx,%r10
   2fa6a:	4d 01 fe             	add    %r15,%r14
   2fa6d:	4c 8b 6c 24 50       	mov    0x50(%rsp),%r13
   2fa72:	48 8b 5c 24 58       	mov    0x58(%rsp),%rbx
   2fa77:	4c 8b 44 24 60       	mov    0x60(%rsp),%r8
   2fa7c:	4c 8b 5c 24 40       	mov    0x40(%rsp),%r11
   2fa81:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
   2fa86:	41 83 fc 0e          	cmp    $0xe,%r12d
   2fa8a:	77 2c                	ja     2fab8 <elf_zlib_inflate_and_verify+0x918>
   2fa8c:	0f 1f 40 00          	nopl   0x0(%rax)
   2fa90:	4c 89 d0             	mov    %r10,%rax
   2fa93:	48 29 e8             	sub    %rbp,%rax
   2fa96:	48 83 f8 04          	cmp    $0x4,%rax
   2fa9a:	0f 8c ef 05 00 00    	jl     3008f <elf_zlib_inflate_and_verify+0xeef>
   2faa0:	8b 45 00             	mov    0x0(%rbp),%eax
   2faa3:	44 89 e1             	mov    %r12d,%ecx
   2faa6:	48 d3 e0             	shl    %cl,%rax
   2faa9:	49 09 c0             	or     %rax,%r8
   2faac:	41 83 c4 20          	add    $0x20,%r12d
   2fab0:	0f 18 45 04          	prefetchnta 0x4(%rbp)
   2fab4:	48 83 c5 04          	add    $0x4,%rbp
   2fab8:	41 0f b6 c0          	movzbl %r8b,%eax
   2fabc:	0f b7 04 47          	movzwl (%rdi,%rax,2),%eax
   2fac0:	89 c1                	mov    %eax,%ecx
   2fac2:	c1 e9 09             	shr    $0x9,%ecx
   2fac5:	83 e1 07             	and    $0x7,%ecx
   2fac8:	89 c6                	mov    %eax,%esi
   2faca:	81 e6 ff 01 00 00    	and    $0x1ff,%esi
   2fad0:	a9 00 10 00 00       	test   $0x1000,%eax
   2fad5:	75 19                	jne    2faf0 <elf_zlib_inflate_and_verify+0x950>
   2fad7:	83 c1 01             	add    $0x1,%ecx
   2fada:	41 29 cc             	sub    %ecx,%r12d
   2fadd:	49 d3 e8             	shr    %cl,%r8
   2fae0:	81 fe ff 00 00 00    	cmp    $0xff,%esi
   2fae6:	77 78                	ja     2fb60 <elf_zlib_inflate_and_verify+0x9c0>
   2fae8:	eb 42                	jmp    2fb2c <elf_zlib_inflate_and_verify+0x98c>
   2faea:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   2faf0:	4c 89 c0             	mov    %r8,%rax
   2faf3:	48 c1 e8 08          	shr    $0x8,%rax
   2faf7:	ba ff ff ff ff       	mov    $0xffffffff,%edx
   2fafc:	d3 e2                	shl    %cl,%edx
   2fafe:	f7 d2                	not    %edx
   2fb00:	21 d0                	and    %edx,%eax
   2fb02:	48 01 c6             	add    %rax,%rsi
   2fb05:	0f b7 b4 77 00 02 00 	movzwl 0x200(%rdi,%rsi,2),%esi
   2fb0c:	00 
   2fb0d:	89 f1                	mov    %esi,%ecx
   2fb0f:	c1 e9 09             	shr    $0x9,%ecx
   2fb12:	83 e1 07             	and    $0x7,%ecx
   2fb15:	81 e6 ff 01 00 00    	and    $0x1ff,%esi
   2fb1b:	83 c9 08             	or     $0x8,%ecx
   2fb1e:	41 29 cc             	sub    %ecx,%r12d
   2fb21:	49 d3 e8             	shr    %cl,%r8
   2fb24:	81 fe ff 00 00 00    	cmp    $0xff,%esi
   2fb2a:	77 34                	ja     2fb60 <elf_zlib_inflate_and_verify+0x9c0>
   2fb2c:	4c 3b 74 24 48       	cmp    0x48(%rsp),%r14
   2fb31:	0f 84 58 05 00 00    	je     3008f <elf_zlib_inflate_and_verify+0xeef>
   2fb37:	41 88 36             	mov    %sil,(%r14)
   2fb3a:	41 0f 18 4e 01       	prefetcht0 0x1(%r14)
   2fb3f:	49 83 c6 01          	add    $0x1,%r14
   2fb43:	41 83 fc 0e          	cmp    $0xe,%r12d
   2fb47:	0f 86 43 ff ff ff    	jbe    2fa90 <elf_zlib_inflate_and_verify+0x8f0>
   2fb4d:	e9 66 ff ff ff       	jmpq   2fab8 <elf_zlib_inflate_and_verify+0x918>
   2fb52:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2fb59:	00 00 00 
   2fb5c:	0f 1f 40 00          	nopl   0x0(%rax)
   2fb60:	81 fe 00 01 00 00    	cmp    $0x100,%esi
   2fb66:	0f 85 f4 fb ff ff    	jne    2f760 <elf_zlib_inflate_and_verify+0x5c0>
   2fb6c:	e9 07 f7 ff ff       	jmpq   2f278 <elf_zlib_inflate_and_verify+0xd8>
   2fb71:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2fb78:	00 00 00 
   2fb7b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   2fb80:	41 88 45 00          	mov    %al,0x0(%r13)
   2fb84:	49 83 c5 01          	add    $0x1,%r13
   2fb88:	49 39 f5             	cmp    %rsi,%r13
   2fb8b:	0f 83 2c fb ff ff    	jae    2f6bd <elf_zlib_inflate_and_verify+0x51d>
   2fb91:	41 83 ff 0e          	cmp    $0xe,%r15d
   2fb95:	77 2b                	ja     2fbc2 <elf_zlib_inflate_and_verify+0xa22>
   2fb97:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   2fb9c:	4c 29 c0             	sub    %r8,%rax
   2fb9f:	48 83 f8 04          	cmp    $0x4,%rax
   2fba3:	0f 8c e6 04 00 00    	jl     3008f <elf_zlib_inflate_and_verify+0xeef>
   2fba9:	41 8b 00             	mov    (%r8),%eax
   2fbac:	44 89 f9             	mov    %r15d,%ecx
   2fbaf:	48 d3 e0             	shl    %cl,%rax
   2fbb2:	48 09 c5             	or     %rax,%rbp
   2fbb5:	41 83 c7 20          	add    $0x20,%r15d
   2fbb9:	41 0f 18 40 04       	prefetchnta 0x4(%r8)
   2fbbe:	49 83 c0 04          	add    $0x4,%r8
   2fbc2:	40 0f b6 c5          	movzbl %bpl,%eax
   2fbc6:	48 8b 4c 24 38       	mov    0x38(%rsp),%rcx
   2fbcb:	0f b7 04 41          	movzwl (%rcx,%rax,2),%eax
   2fbcf:	a9 00 10 00 00       	test   $0x1000,%eax
   2fbd4:	0f 85 b5 04 00 00    	jne    3008f <elf_zlib_inflate_and_verify+0xeef>
   2fbda:	89 c1                	mov    %eax,%ecx
   2fbdc:	c1 e9 09             	shr    $0x9,%ecx
   2fbdf:	83 e1 07             	and    $0x7,%ecx
   2fbe2:	48 83 c1 01          	add    $0x1,%rcx
   2fbe6:	48 d3 ed             	shr    %cl,%rbp
   2fbe9:	41 29 cf             	sub    %ecx,%r15d
   2fbec:	89 c1                	mov    %eax,%ecx
   2fbee:	81 e1 ff 01 00 00    	and    $0x1ff,%ecx
   2fbf4:	66 83 f9 0f          	cmp    $0xf,%cx
   2fbf8:	76 86                	jbe    2fb80 <elf_zlib_inflate_and_verify+0x9e0>
   2fbfa:	66 83 f9 12          	cmp    $0x12,%cx
   2fbfe:	0f 84 86 00 00 00    	je     2fc8a <elf_zlib_inflate_and_verify+0xaea>
   2fc04:	66 83 f9 11          	cmp    $0x11,%cx
   2fc08:	0f 84 cf 00 00 00    	je     2fcdd <elf_zlib_inflate_and_verify+0xb3d>
   2fc0e:	66 83 f9 10          	cmp    $0x10,%cx
   2fc12:	0f 85 77 04 00 00    	jne    3008f <elf_zlib_inflate_and_verify+0xeef>
   2fc18:	4c 3b 6c 24 68       	cmp    0x68(%rsp),%r13
   2fc1d:	0f 84 6c 04 00 00    	je     3008f <elf_zlib_inflate_and_verify+0xeef>
   2fc23:	89 e9                	mov    %ebp,%ecx
   2fc25:	83 e1 03             	and    $0x3,%ecx
   2fc28:	8d 41 03             	lea    0x3(%rcx),%eax
   2fc2b:	89 f2                	mov    %esi,%edx
   2fc2d:	44 29 ea             	sub    %r13d,%edx
   2fc30:	39 d0                	cmp    %edx,%eax
   2fc32:	0f 87 57 04 00 00    	ja     3008f <elf_zlib_inflate_and_verify+0xeef>
   2fc38:	41 0f b6 45 ff       	movzbl -0x1(%r13),%eax
   2fc3d:	83 f9 01             	cmp    $0x1,%ecx
   2fc40:	74 1a                	je     2fc5c <elf_zlib_inflate_and_verify+0xabc>
   2fc42:	83 f9 02             	cmp    $0x2,%ecx
   2fc45:	74 0d                	je     2fc54 <elf_zlib_inflate_and_verify+0xab4>
   2fc47:	83 f9 03             	cmp    $0x3,%ecx
   2fc4a:	75 18                	jne    2fc64 <elf_zlib_inflate_and_verify+0xac4>
   2fc4c:	41 88 45 00          	mov    %al,0x0(%r13)
   2fc50:	49 83 c5 01          	add    $0x1,%r13
   2fc54:	41 88 45 00          	mov    %al,0x0(%r13)
   2fc58:	49 83 c5 01          	add    $0x1,%r13
   2fc5c:	41 88 45 00          	mov    %al,0x0(%r13)
   2fc60:	49 83 c5 01          	add    $0x1,%r13
   2fc64:	48 c1 ed 02          	shr    $0x2,%rbp
   2fc68:	41 83 c7 fe          	add    $0xfffffffe,%r15d
   2fc6c:	41 88 45 00          	mov    %al,0x0(%r13)
   2fc70:	41 88 45 01          	mov    %al,0x1(%r13)
   2fc74:	41 88 45 02          	mov    %al,0x2(%r13)
   2fc78:	49 83 c5 03          	add    $0x3,%r13
   2fc7c:	49 39 f5             	cmp    %rsi,%r13
   2fc7f:	0f 82 0c ff ff ff    	jb     2fb91 <elf_zlib_inflate_and_verify+0x9f1>
   2fc85:	e9 33 fa ff ff       	jmpq   2f6bd <elf_zlib_inflate_and_verify+0x51d>
   2fc8a:	89 e8                	mov    %ebp,%eax
   2fc8c:	83 e0 7f             	and    $0x7f,%eax
   2fc8f:	83 c0 0b             	add    $0xb,%eax
   2fc92:	89 f1                	mov    %esi,%ecx
   2fc94:	44 29 e9             	sub    %r13d,%ecx
   2fc97:	39 c8                	cmp    %ecx,%eax
   2fc99:	0f 87 f0 03 00 00    	ja     3008f <elf_zlib_inflate_and_verify+0xeef>
   2fc9f:	41 83 c7 f9          	add    $0xfffffff9,%r15d
   2fca3:	4c 89 7c 24 60       	mov    %r15,0x60(%rsp)
   2fca8:	48 c1 ed 07          	shr    $0x7,%rbp
   2fcac:	89 c3                	mov    %eax,%ebx
   2fcae:	4c 89 ef             	mov    %r13,%rdi
   2fcb1:	49 89 f7             	mov    %rsi,%r15
   2fcb4:	31 f6                	xor    %esi,%esi
   2fcb6:	48 89 da             	mov    %rbx,%rdx
   2fcb9:	4d 89 c4             	mov    %r8,%r12
   2fcbc:	e8 0f 44 fd ff       	callq  40d0 <memset@plt>
   2fcc1:	4c 89 fe             	mov    %r15,%rsi
   2fcc4:	4c 8b 7c 24 60       	mov    0x60(%rsp),%r15
   2fcc9:	4d 89 e0             	mov    %r12,%r8
   2fccc:	49 01 dd             	add    %rbx,%r13
   2fccf:	49 39 f5             	cmp    %rsi,%r13
   2fcd2:	0f 82 b9 fe ff ff    	jb     2fb91 <elf_zlib_inflate_and_verify+0x9f1>
   2fcd8:	e9 e0 f9 ff ff       	jmpq   2f6bd <elf_zlib_inflate_and_verify+0x51d>
   2fcdd:	89 e8                	mov    %ebp,%eax
   2fcdf:	83 e0 07             	and    $0x7,%eax
   2fce2:	8d 48 03             	lea    0x3(%rax),%ecx
   2fce5:	89 f2                	mov    %esi,%edx
   2fce7:	44 29 ea             	sub    %r13d,%edx
   2fcea:	39 d1                	cmp    %edx,%ecx
   2fcec:	0f 87 9d 03 00 00    	ja     3008f <elf_zlib_inflate_and_verify+0xeef>
   2fcf2:	83 c0 ff             	add    $0xffffffff,%eax
   2fcf5:	83 f8 06             	cmp    $0x6,%eax
   2fcf8:	77 4f                	ja     2fd49 <elf_zlib_inflate_and_verify+0xba9>
   2fcfa:	48 8d 0d ef e2 00 00 	lea    0xe2ef(%rip),%rcx        # 3dff0 <str.0+0x1d0>
   2fd01:	48 63 04 81          	movslq (%rcx,%rax,4),%rax
   2fd05:	48 01 c8             	add    %rcx,%rax
   2fd08:	ff e0                	jmpq   *%rax
   2fd0a:	41 c6 45 00 00       	movb   $0x0,0x0(%r13)
   2fd0f:	49 83 c5 01          	add    $0x1,%r13
   2fd13:	41 c6 45 00 00       	movb   $0x0,0x0(%r13)
   2fd18:	49 83 c5 01          	add    $0x1,%r13
   2fd1c:	41 c6 45 00 00       	movb   $0x0,0x0(%r13)
   2fd21:	49 83 c5 01          	add    $0x1,%r13
   2fd25:	41 c6 45 00 00       	movb   $0x0,0x0(%r13)
   2fd2a:	49 83 c5 01          	add    $0x1,%r13
   2fd2e:	41 c6 45 00 00       	movb   $0x0,0x0(%r13)
   2fd33:	49 83 c5 01          	add    $0x1,%r13
   2fd37:	41 c6 45 00 00       	movb   $0x0,0x0(%r13)
   2fd3c:	49 83 c5 01          	add    $0x1,%r13
   2fd40:	41 c6 45 00 00       	movb   $0x0,0x0(%r13)
   2fd45:	49 83 c5 01          	add    $0x1,%r13
   2fd49:	48 c1 ed 03          	shr    $0x3,%rbp
   2fd4d:	41 83 c7 fd          	add    $0xfffffffd,%r15d
   2fd51:	66 41 c7 45 00 00 00 	movw   $0x0,0x0(%r13)
   2fd58:	41 c6 45 02 00       	movb   $0x0,0x2(%r13)
   2fd5d:	49 83 c5 03          	add    $0x3,%r13
   2fd61:	49 39 f5             	cmp    %rsi,%r13
   2fd64:	0f 82 27 fe ff ff    	jb     2fb91 <elf_zlib_inflate_and_verify+0x9f1>
   2fd6a:	e9 4e f9 ff ff       	jmpq   2f6bd <elf_zlib_inflate_and_verify+0x51d>
   2fd6f:	80 e1 07             	and    $0x7,%cl
   2fd72:	88 4c 24 1d          	mov    %cl,0x1d(%rsp)
   2fd76:	48 c1 ea 0f          	shr    $0xf,%rdx
   2fd7a:	44 8d 78 f1          	lea    -0xf(%rax),%r15d
   2fd7e:	83 fe 0f             	cmp    $0xf,%esi
   2fd81:	0f 84 75 f6 ff ff    	je     2f3fc <elf_zlib_inflate_and_verify+0x25c>
   2fd87:	41 83 ff 0e          	cmp    $0xe,%r15d
   2fd8b:	77 2b                	ja     2fdb8 <elf_zlib_inflate_and_verify+0xc18>
   2fd8d:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
   2fd92:	48 29 f9             	sub    %rdi,%rcx
   2fd95:	48 83 f9 04          	cmp    $0x4,%rcx
   2fd99:	0f 8c f0 02 00 00    	jl     3008f <elf_zlib_inflate_and_verify+0xeef>
   2fd9f:	8b 2f                	mov    (%rdi),%ebp
   2fda1:	44 89 f9             	mov    %r15d,%ecx
   2fda4:	48 d3 e5             	shl    %cl,%rbp
   2fda7:	48 09 ea             	or     %rbp,%rdx
   2fdaa:	83 c0 11             	add    $0x11,%eax
   2fdad:	0f 18 47 04          	prefetchnta 0x4(%rdi)
   2fdb1:	48 83 c7 04          	add    $0x4,%rdi
   2fdb5:	41 89 c7             	mov    %eax,%r15d
   2fdb8:	89 d0                	mov    %edx,%eax
   2fdba:	24 07                	and    $0x7,%al
   2fdbc:	88 44 24 12          	mov    %al,0x12(%rsp)
   2fdc0:	48 89 d0             	mov    %rdx,%rax
   2fdc3:	48 c1 e8 03          	shr    $0x3,%rax
   2fdc7:	83 fe 10             	cmp    $0x10,%esi
   2fdca:	0f 84 60 f7 ff ff    	je     2f530 <elf_zlib_inflate_and_verify+0x390>
   2fdd0:	49 89 fd             	mov    %rdi,%r13
   2fdd3:	24 07                	and    $0x7,%al
   2fdd5:	88 44 24 1e          	mov    %al,0x1e(%rsp)
   2fdd9:	48 89 d0             	mov    %rdx,%rax
   2fddc:	48 c1 e8 06          	shr    $0x6,%rax
   2fde0:	83 fe 11             	cmp    $0x11,%esi
   2fde3:	0f 84 6b f7 ff ff    	je     2f554 <elf_zlib_inflate_and_verify+0x3b4>
   2fde9:	24 07                	and    $0x7,%al
   2fdeb:	88 44 24 11          	mov    %al,0x11(%rsp)
   2fdef:	48 89 d0             	mov    %rdx,%rax
   2fdf2:	48 c1 e8 09          	shr    $0x9,%rax
   2fdf6:	83 fe 12             	cmp    $0x12,%esi
   2fdf9:	0f 84 76 f7 ff ff    	je     2f575 <elf_zlib_inflate_and_verify+0x3d5>
   2fdff:	24 07                	and    $0x7,%al
   2fe01:	88 44 24 1f          	mov    %al,0x1f(%rsp)
   2fe05:	48 c1 ea 0c          	shr    $0xc,%rdx
   2fe09:	41 83 c7 f4          	add    $0xfffffff4,%r15d
   2fe0d:	e9 ed f5 ff ff       	jmpq   2f3ff <elf_zlib_inflate_and_verify+0x25f>
   2fe12:	4c 89 d0             	mov    %r10,%rax
   2fe15:	48 29 e8             	sub    %rbp,%rax
   2fe18:	48 83 f8 05          	cmp    $0x5,%rax
   2fe1c:	0f 8d e1 f3 ff ff    	jge    2f203 <elf_zlib_inflate_and_verify+0x63>
   2fe22:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%rsp)
   2fe29:	00 
   2fe2a:	4c 3b 74 24 48       	cmp    0x48(%rsp),%r14
   2fe2f:	0f 85 5a 02 00 00    	jne    3008f <elf_zlib_inflate_and_verify+0xeef>
   2fe35:	45 8b 4a fc          	mov    -0x4(%r10),%r9d
   2fe39:	48 8b 84 24 80 00 00 	mov    0x80(%rsp),%rax
   2fe40:	00 
   2fe41:	48 3d b0 15 00 00    	cmp    $0x15b0,%rax
   2fe47:	0f 82 d7 01 00 00    	jb     30024 <elf_zlib_inflate_and_verify+0xe84>
   2fe4d:	ba 01 00 00 00       	mov    $0x1,%edx
   2fe52:	31 c9                	xor    %ecx,%ecx
   2fe54:	be 71 80 07 80       	mov    $0x80078071,%esi
   2fe59:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   2fe60:	31 ff                	xor    %edi,%edi
   2fe62:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2fe69:	00 00 00 
   2fe6c:	0f 1f 40 00          	nopl   0x0(%rax)
   2fe70:	41 0f b6 6c 3d 00    	movzbl 0x0(%r13,%rdi,1),%ebp
   2fe76:	01 d5                	add    %edx,%ebp
   2fe78:	01 e9                	add    %ebp,%ecx
   2fe7a:	41 0f b6 54 3d 01    	movzbl 0x1(%r13,%rdi,1),%edx
   2fe80:	01 ea                	add    %ebp,%edx
   2fe82:	01 d1                	add    %edx,%ecx
   2fe84:	41 0f b6 6c 3d 02    	movzbl 0x2(%r13,%rdi,1),%ebp
   2fe8a:	01 d5                	add    %edx,%ebp
   2fe8c:	01 e9                	add    %ebp,%ecx
   2fe8e:	41 0f b6 54 3d 03    	movzbl 0x3(%r13,%rdi,1),%edx
   2fe94:	01 ea                	add    %ebp,%edx
   2fe96:	01 d1                	add    %edx,%ecx
   2fe98:	41 0f b6 6c 3d 04    	movzbl 0x4(%r13,%rdi,1),%ebp
   2fe9e:	01 d5                	add    %edx,%ebp
   2fea0:	01 e9                	add    %ebp,%ecx
   2fea2:	41 0f b6 54 3d 05    	movzbl 0x5(%r13,%rdi,1),%edx
   2fea8:	01 ea                	add    %ebp,%edx
   2feaa:	01 d1                	add    %edx,%ecx
   2feac:	41 0f b6 6c 3d 06    	movzbl 0x6(%r13,%rdi,1),%ebp
   2feb2:	01 d5                	add    %edx,%ebp
   2feb4:	01 e9                	add    %ebp,%ecx
   2feb6:	41 0f b6 54 3d 07    	movzbl 0x7(%r13,%rdi,1),%edx
   2febc:	01 ea                	add    %ebp,%edx
   2febe:	01 d1                	add    %edx,%ecx
   2fec0:	41 0f b6 6c 3d 08    	movzbl 0x8(%r13,%rdi,1),%ebp
   2fec6:	01 d5                	add    %edx,%ebp
   2fec8:	01 e9                	add    %ebp,%ecx
   2feca:	41 0f b6 54 3d 09    	movzbl 0x9(%r13,%rdi,1),%edx
   2fed0:	01 ea                	add    %ebp,%edx
   2fed2:	01 d1                	add    %edx,%ecx
   2fed4:	41 0f b6 6c 3d 0a    	movzbl 0xa(%r13,%rdi,1),%ebp
   2feda:	01 d5                	add    %edx,%ebp
   2fedc:	01 e9                	add    %ebp,%ecx
   2fede:	41 0f b6 54 3d 0b    	movzbl 0xb(%r13,%rdi,1),%edx
   2fee4:	01 ea                	add    %ebp,%edx
   2fee6:	01 d1                	add    %edx,%ecx
   2fee8:	41 0f b6 6c 3d 0c    	movzbl 0xc(%r13,%rdi,1),%ebp
   2feee:	01 d5                	add    %edx,%ebp
   2fef0:	01 e9                	add    %ebp,%ecx
   2fef2:	41 0f b6 54 3d 0d    	movzbl 0xd(%r13,%rdi,1),%edx
   2fef8:	01 ea                	add    %ebp,%edx
   2fefa:	01 d1                	add    %edx,%ecx
   2fefc:	41 0f b6 6c 3d 0e    	movzbl 0xe(%r13,%rdi,1),%ebp
   2ff02:	01 d5                	add    %edx,%ebp
   2ff04:	01 e9                	add    %ebp,%ecx
   2ff06:	41 0f b6 54 3d 0f    	movzbl 0xf(%r13,%rdi,1),%edx
   2ff0c:	01 ea                	add    %ebp,%edx
   2ff0e:	01 d1                	add    %edx,%ecx
   2ff10:	48 83 c7 10          	add    $0x10,%rdi
   2ff14:	81 ff b0 15 00 00    	cmp    $0x15b0,%edi
   2ff1a:	0f 82 50 ff ff ff    	jb     2fe70 <elf_zlib_inflate_and_verify+0xcd0>
   2ff20:	49 81 c5 b0 15 00 00 	add    $0x15b0,%r13
   2ff27:	48 05 50 ea ff ff    	add    $0xffffffffffffea50,%rax
   2ff2d:	89 d7                	mov    %edx,%edi
   2ff2f:	48 0f af fe          	imul   %rsi,%rdi
   2ff33:	48 c1 ef 2f          	shr    $0x2f,%rdi
   2ff37:	69 ff f1 ff 00 00    	imul   $0xfff1,%edi,%edi
   2ff3d:	29 fa                	sub    %edi,%edx
   2ff3f:	89 cf                	mov    %ecx,%edi
   2ff41:	48 0f af fe          	imul   %rsi,%rdi
   2ff45:	48 c1 ef 2f          	shr    $0x2f,%rdi
   2ff49:	69 ff f1 ff 00 00    	imul   $0xfff1,%edi,%edi
   2ff4f:	29 f9                	sub    %edi,%ecx
   2ff51:	48 3d af 15 00 00    	cmp    $0x15af,%rax
   2ff57:	0f 87 03 ff ff ff    	ja     2fe60 <elf_zlib_inflate_and_verify+0xcc0>
   2ff5d:	48 83 f8 10          	cmp    $0x10,%rax
   2ff61:	0f 82 ce 00 00 00    	jb     30035 <elf_zlib_inflate_and_verify+0xe95>
   2ff67:	48 8d 70 f0          	lea    -0x10(%rax),%rsi
   2ff6b:	48 89 f7             	mov    %rsi,%rdi
   2ff6e:	48 83 e7 f0          	and    $0xfffffffffffffff0,%rdi
   2ff72:	4c 8d 47 10          	lea    0x10(%rdi),%r8
   2ff76:	4c 89 eb             	mov    %r13,%rbx
   2ff79:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   2ff80:	0f b6 2b             	movzbl (%rbx),%ebp
   2ff83:	01 d5                	add    %edx,%ebp
   2ff85:	01 e9                	add    %ebp,%ecx
   2ff87:	0f b6 53 01          	movzbl 0x1(%rbx),%edx
   2ff8b:	01 ea                	add    %ebp,%edx
   2ff8d:	01 d1                	add    %edx,%ecx
   2ff8f:	0f b6 6b 02          	movzbl 0x2(%rbx),%ebp
   2ff93:	01 d5                	add    %edx,%ebp
   2ff95:	01 e9                	add    %ebp,%ecx
   2ff97:	0f b6 53 03          	movzbl 0x3(%rbx),%edx
   2ff9b:	01 ea                	add    %ebp,%edx
   2ff9d:	01 d1                	add    %edx,%ecx
   2ff9f:	0f b6 6b 04          	movzbl 0x4(%rbx),%ebp
   2ffa3:	01 d5                	add    %edx,%ebp
   2ffa5:	01 e9                	add    %ebp,%ecx
   2ffa7:	0f b6 53 05          	movzbl 0x5(%rbx),%edx
   2ffab:	01 ea                	add    %ebp,%edx
   2ffad:	01 d1                	add    %edx,%ecx
   2ffaf:	0f b6 6b 06          	movzbl 0x6(%rbx),%ebp
   2ffb3:	01 d5                	add    %edx,%ebp
   2ffb5:	01 e9                	add    %ebp,%ecx
   2ffb7:	0f b6 53 07          	movzbl 0x7(%rbx),%edx
   2ffbb:	01 ea                	add    %ebp,%edx
   2ffbd:	01 d1                	add    %edx,%ecx
   2ffbf:	0f b6 6b 08          	movzbl 0x8(%rbx),%ebp
   2ffc3:	01 d5                	add    %edx,%ebp
   2ffc5:	01 e9                	add    %ebp,%ecx
   2ffc7:	0f b6 53 09          	movzbl 0x9(%rbx),%edx
   2ffcb:	01 ea                	add    %ebp,%edx
   2ffcd:	01 d1                	add    %edx,%ecx
   2ffcf:	0f b6 6b 0a          	movzbl 0xa(%rbx),%ebp
   2ffd3:	01 d5                	add    %edx,%ebp
   2ffd5:	01 e9                	add    %ebp,%ecx
   2ffd7:	0f b6 53 0b          	movzbl 0xb(%rbx),%edx
   2ffdb:	01 ea                	add    %ebp,%edx
   2ffdd:	01 d1                	add    %edx,%ecx
   2ffdf:	0f b6 6b 0c          	movzbl 0xc(%rbx),%ebp
   2ffe3:	01 d5                	add    %edx,%ebp
   2ffe5:	01 e9                	add    %ebp,%ecx
   2ffe7:	0f b6 53 0d          	movzbl 0xd(%rbx),%edx
   2ffeb:	01 ea                	add    %ebp,%edx
   2ffed:	01 d1                	add    %edx,%ecx
   2ffef:	0f b6 6b 0e          	movzbl 0xe(%rbx),%ebp
   2fff3:	01 d5                	add    %edx,%ebp
   2fff5:	01 e9                	add    %ebp,%ecx
   2fff7:	0f b6 53 0f          	movzbl 0xf(%rbx),%edx
   2fffb:	01 ea                	add    %ebp,%edx
   2fffd:	01 d1                	add    %edx,%ecx
   2ffff:	48 83 c0 f0          	add    $0xfffffffffffffff0,%rax
   30003:	48 83 c3 10          	add    $0x10,%rbx
   30007:	48 83 f8 0f          	cmp    $0xf,%rax
   3000b:	0f 87 6f ff ff ff    	ja     2ff80 <elf_zlib_inflate_and_verify+0xde0>
   30011:	4d 01 c5             	add    %r8,%r13
   30014:	48 29 fe             	sub    %rdi,%rsi
   30017:	48 89 f0             	mov    %rsi,%rax
   3001a:	41 0f c9             	bswap  %r9d
   3001d:	48 85 c0             	test   %rax,%rax
   30020:	75 1b                	jne    3003d <elf_zlib_inflate_and_verify+0xe9d>
   30022:	eb 31                	jmp    30055 <elf_zlib_inflate_and_verify+0xeb5>
   30024:	31 c9                	xor    %ecx,%ecx
   30026:	ba 01 00 00 00       	mov    $0x1,%edx
   3002b:	48 83 f8 10          	cmp    $0x10,%rax
   3002f:	0f 83 32 ff ff ff    	jae    2ff67 <elf_zlib_inflate_and_verify+0xdc7>
   30035:	41 0f c9             	bswap  %r9d
   30038:	48 85 c0             	test   %rax,%rax
   3003b:	74 18                	je     30055 <elf_zlib_inflate_and_verify+0xeb5>
   3003d:	31 f6                	xor    %esi,%esi
   3003f:	90                   	nop
   30040:	41 0f b6 7c 35 00    	movzbl 0x0(%r13,%rsi,1),%edi
   30046:	01 fa                	add    %edi,%edx
   30048:	01 d1                	add    %edx,%ecx
   3004a:	48 83 c6 01          	add    $0x1,%rsi
   3004e:	89 f7                	mov    %esi,%edi
   30050:	48 39 f8             	cmp    %rdi,%rax
   30053:	77 eb                	ja     30040 <elf_zlib_inflate_and_verify+0xea0>
   30055:	89 d6                	mov    %edx,%esi
   30057:	bf 71 80 07 80       	mov    $0x80078071,%edi
   3005c:	48 0f af f7          	imul   %rdi,%rsi
   30060:	48 c1 ee 2f          	shr    $0x2f,%rsi
   30064:	69 f6 f1 ff 00 00    	imul   $0xfff1,%esi,%esi
   3006a:	29 f2                	sub    %esi,%edx
   3006c:	89 ce                	mov    %ecx,%esi
   3006e:	48 0f af f7          	imul   %rdi,%rsi
   30072:	48 c1 ee 2f          	shr    $0x2f,%rsi
   30076:	69 f6 f1 ff 00 00    	imul   $0xfff1,%esi,%esi
   3007c:	29 f1                	sub    %esi,%ecx
   3007e:	c1 e1 10             	shl    $0x10,%ecx
   30081:	09 d1                	or     %edx,%ecx
   30083:	31 c0                	xor    %eax,%eax
   30085:	44 39 c9             	cmp    %r9d,%ecx
   30088:	0f 94 c0             	sete   %al
   3008b:	89 44 24 04          	mov    %eax,0x4(%rsp)
   3008f:	8b 44 24 04          	mov    0x4(%rsp),%eax
   30093:	48 81 c4 88 00 00 00 	add    $0x88,%rsp
   3009a:	5b                   	pop    %rbx
   3009b:	41 5c                	pop    %r12
   3009d:	41 5d                	pop    %r13
   3009f:	41 5e                	pop    %r14
   300a1:	41 5f                	pop    %r15
   300a3:	5d                   	pop    %rbp
   300a4:	c3                   	retq   
   300a5:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%rsp)
   300ac:	00 
   300ad:	eb e0                	jmp    3008f <elf_zlib_inflate_and_verify+0xeef>
   300af:	90                   	nop

00000000000300b0 <elf_zlib_inflate_table>:
   300b0:	55                   	push   %rbp
   300b1:	41 57                	push   %r15
   300b3:	41 56                	push   %r14
   300b5:	41 55                	push   %r13
   300b7:	41 54                	push   %r12
   300b9:	53                   	push   %rbx
   300ba:	48 81 ec b8 00 00 00 	sub    $0xb8,%rsp
   300c1:	49 89 cf             	mov    %rcx,%r15
   300c4:	49 89 d4             	mov    %rdx,%r12
   300c7:	0f 57 c0             	xorps  %xmm0,%xmm0
   300ca:	0f 29 44 24 20       	movaps %xmm0,0x20(%rsp)
   300cf:	0f 29 44 24 30       	movaps %xmm0,0x30(%rsp)
   300d4:	48 85 f6             	test   %rsi,%rsi
   300d7:	74 6b                	je     30144 <elf_zlib_inflate_table+0x94>
   300d9:	45 31 f6             	xor    %r14d,%r14d
   300dc:	31 c9                	xor    %ecx,%ecx
   300de:	0f b6 04 0f          	movzbl (%rdi,%rcx,1),%eax
   300e2:	48 83 f8 0f          	cmp    $0xf,%rax
   300e6:	76 36                	jbe    3011e <elf_zlib_inflate_table+0x6e>
   300e8:	e9 f7 0c 00 00       	jmpq   30de4 <elf_zlib_inflate_table+0xd34>
   300ed:	0f 1f 00             	nopl   (%rax)
   300f0:	66 89 8c 44 90 00 00 	mov    %cx,0x90(%rsp,%rax,2)
   300f7:	00 
   300f8:	66 89 4c 44 70       	mov    %cx,0x70(%rsp,%rax,2)
   300fd:	31 d2                	xor    %edx,%edx
   300ff:	83 c2 01             	add    $0x1,%edx
   30102:	66 89 54 44 20       	mov    %dx,0x20(%rsp,%rax,2)
   30107:	48 83 c1 01          	add    $0x1,%rcx
   3010b:	48 39 ce             	cmp    %rcx,%rsi
   3010e:	74 34                	je     30144 <elf_zlib_inflate_table+0x94>
   30110:	0f b6 04 0f          	movzbl (%rdi,%rcx,1),%eax
   30114:	48 83 f8 0f          	cmp    $0xf,%rax
   30118:	0f 87 c6 0c 00 00    	ja     30de4 <elf_zlib_inflate_table+0xd34>
   3011e:	66 83 7c 44 20 00    	cmpw   $0x0,0x20(%rsp,%rax,2)
   30124:	74 ca                	je     300f0 <elf_zlib_inflate_table+0x40>
   30126:	0f b7 44 44 70       	movzwl 0x70(%rsp,%rax,2),%eax
   3012b:	66 41 89 8c 44 00 10 	mov    %cx,0x1000(%r12,%rax,2)
   30132:	00 00 
   30134:	0f b6 04 0f          	movzbl (%rdi,%rcx,1),%eax
   30138:	66 89 4c 44 70       	mov    %cx,0x70(%rsp,%rax,2)
   3013d:	0f b7 54 44 20       	movzwl 0x20(%rsp,%rax,2),%edx
   30142:	eb bb                	jmp    300ff <elf_zlib_inflate_table+0x4f>
   30144:	31 db                	xor    %ebx,%ebx
   30146:	ba 00 08 00 00       	mov    $0x800,%edx
   3014b:	4c 89 ff             	mov    %r15,%rdi
   3014e:	31 f6                	xor    %esi,%esi
   30150:	e8 7b 3f fd ff       	callq  40d0 <memset@plt>
   30155:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   3015b:	42 0f b7 44 44 20    	movzwl 0x20(%rsp,%r8,2),%eax
   30161:	85 c0                	test   %eax,%eax
   30163:	75 23                	jne    30188 <elf_zlib_inflate_table+0xd8>
   30165:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   3016c:	00 00 00 
   3016f:	90                   	nop
   30170:	49 83 c0 01          	add    $0x1,%r8
   30174:	49 83 f8 09          	cmp    $0x9,%r8
   30178:	0f 84 e5 00 00 00    	je     30263 <elf_zlib_inflate_table+0x1b3>
   3017e:	42 0f b7 44 44 20    	movzwl 0x20(%rsp,%r8,2),%eax
   30184:	85 c0                	test   %eax,%eax
   30186:	74 e8                	je     30170 <elf_zlib_inflate_table+0xc0>
   30188:	ba 01 00 00 00       	mov    $0x1,%edx
   3018d:	44 89 c1             	mov    %r8d,%ecx
   30190:	d3 e2                	shl    %cl,%edx
   30192:	45 31 f6             	xor    %r14d,%r14d
   30195:	39 c2                	cmp    %eax,%edx
   30197:	0f 82 47 0c 00 00    	jb     30de4 <elf_zlib_inflate_table+0xd34>
   3019d:	89 c6                	mov    %eax,%esi
   3019f:	42 0f b7 ac 44 90 00 	movzwl 0x90(%rsp,%r8,2),%ebp
   301a6:	00 00 
   301a8:	49 8d 48 ff          	lea    -0x1(%r8),%rcx
   301ac:	49 89 c9             	mov    %rcx,%r9
   301af:	49 c1 e1 09          	shl    $0x9,%r9
   301b3:	48 63 d2             	movslq %edx,%rdx
   301b6:	41 ba 01 00 00 00    	mov    $0x1,%r10d
   301bc:	41 d3 e2             	shl    %cl,%r10d
   301bf:	31 c9                	xor    %ecx,%ecx
   301c1:	81 fd ff 01 00 00    	cmp    $0x1ff,%ebp
   301c7:	76 1a                	jbe    301e3 <elf_zlib_inflate_table+0x133>
   301c9:	e9 16 0c 00 00       	jmpq   30de4 <elf_zlib_inflate_table+0xd34>
   301ce:	66 90                	xchg   %ax,%ax
   301d0:	31 db                	xor    %ebx,%ebx
   301d2:	48 39 f1             	cmp    %rsi,%rcx
   301d5:	74 99                	je     30170 <elf_zlib_inflate_table+0xc0>
   301d7:	81 fd ff 01 00 00    	cmp    $0x1ff,%ebp
   301dd:	0f 87 01 0c 00 00    	ja     30de4 <elf_zlib_inflate_table+0xd34>
   301e3:	81 fb ff 00 00 00    	cmp    $0xff,%ebx
   301e9:	77 32                	ja     3021d <elf_zlib_inflate_table+0x16d>
   301eb:	44 89 c8             	mov    %r9d,%eax
   301ee:	09 e8                	or     %ebp,%eax
   301f0:	89 df                	mov    %ebx,%edi
   301f2:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   301f9:	00 00 00 
   301fc:	0f 1f 40 00          	nopl   0x0(%rax)
   30200:	66 41 83 3c 7f 00    	cmpw   $0x0,(%r15,%rdi,2)
   30206:	0f 85 d8 0b 00 00    	jne    30de4 <elf_zlib_inflate_table+0xd34>
   3020c:	66 41 89 04 7f       	mov    %ax,(%r15,%rdi,2)
   30211:	48 01 d7             	add    %rdx,%rdi
   30214:	48 81 ff 00 01 00 00 	cmp    $0x100,%rdi
   3021b:	72 e3                	jb     30200 <elf_zlib_inflate_table+0x150>
   3021d:	48 83 c1 01          	add    $0x1,%rcx
   30221:	48 39 f1             	cmp    %rsi,%rcx
   30224:	73 0b                	jae    30231 <elf_zlib_inflate_table+0x181>
   30226:	89 e8                	mov    %ebp,%eax
   30228:	41 0f b7 ac 44 00 10 	movzwl 0x1000(%r12,%rax,2),%ebp
   3022f:	00 00 
   30231:	44 89 d7             	mov    %r10d,%edi
   30234:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   3023b:	00 00 00 
   3023e:	66 90                	xchg   %ax,%ax
   30240:	89 f8                	mov    %edi,%eax
   30242:	d1 ef                	shr    %edi
   30244:	85 d8                	test   %ebx,%eax
   30246:	75 f8                	jne    30240 <elf_zlib_inflate_table+0x190>
   30248:	85 c0                	test   %eax,%eax
   3024a:	74 84                	je     301d0 <elf_zlib_inflate_table+0x120>
   3024c:	8d 78 ff             	lea    -0x1(%rax),%edi
   3024f:	21 df                	and    %ebx,%edi
   30251:	01 c7                	add    %eax,%edi
   30253:	89 fb                	mov    %edi,%ebx
   30255:	48 39 f1             	cmp    %rsi,%rcx
   30258:	0f 85 79 ff ff ff    	jne    301d7 <elf_zlib_inflate_table+0x127>
   3025e:	e9 0d ff ff ff       	jmpq   30170 <elf_zlib_inflate_table+0xc0>
   30263:	0f b7 44 24 32       	movzwl 0x32(%rsp),%eax
   30268:	85 c0                	test   %eax,%eax
   3026a:	74 58                	je     302c4 <elf_zlib_inflate_table+0x214>
   3026c:	66 89 5c 24 0e       	mov    %bx,0xe(%rsp)
   30271:	a8 01                	test   $0x1,%al
   30273:	0f 85 f7 04 00 00    	jne    30770 <elf_zlib_inflate_table+0x6c0>
   30279:	a8 02                	test   $0x2,%al
   3027b:	0f 85 86 05 00 00    	jne    30807 <elf_zlib_inflate_table+0x757>
   30281:	a8 04                	test   $0x4,%al
   30283:	0f 85 ac 05 00 00    	jne    30835 <elf_zlib_inflate_table+0x785>
   30289:	a8 08                	test   $0x8,%al
   3028b:	0f 85 d4 05 00 00    	jne    30865 <elf_zlib_inflate_table+0x7b5>
   30291:	a8 10                	test   $0x10,%al
   30293:	0f 85 fc 05 00 00    	jne    30895 <elf_zlib_inflate_table+0x7e5>
   30299:	a8 20                	test   $0x20,%al
   3029b:	0f 85 24 06 00 00    	jne    308c5 <elf_zlib_inflate_table+0x815>
   302a1:	a8 40                	test   $0x40,%al
   302a3:	0f 85 4c 06 00 00    	jne    308f5 <elf_zlib_inflate_table+0x845>
   302a9:	84 c0                	test   %al,%al
   302ab:	0f 88 74 06 00 00    	js     30925 <elf_zlib_inflate_table+0x875>
   302b1:	a9 00 01 00 00       	test   $0x100,%eax
   302b6:	0f 85 65 09 00 00    	jne    30c21 <elf_zlib_inflate_table+0xb71>
   302bc:	85 c0                	test   %eax,%eax
   302be:	0f 85 1d 0b 00 00    	jne    30de1 <elf_zlib_inflate_table+0xd31>
   302c4:	0f b7 44 24 34       	movzwl 0x34(%rsp),%eax
   302c9:	85 c0                	test   %eax,%eax
   302cb:	74 63                	je     30330 <elf_zlib_inflate_table+0x280>
   302cd:	66 89 5c 24 10       	mov    %bx,0x10(%rsp)
   302d2:	a8 01                	test   $0x1,%al
   302d4:	0f 85 bc 04 00 00    	jne    30796 <elf_zlib_inflate_table+0x6e6>
   302da:	a8 02                	test   $0x2,%al
   302dc:	0f 85 7a 06 00 00    	jne    3095c <elf_zlib_inflate_table+0x8ac>
   302e2:	a8 04                	test   $0x4,%al
   302e4:	0f 85 ab 06 00 00    	jne    30995 <elf_zlib_inflate_table+0x8e5>
   302ea:	a8 08                	test   $0x8,%al
   302ec:	0f 85 d3 06 00 00    	jne    309c5 <elf_zlib_inflate_table+0x915>
   302f2:	a8 10                	test   $0x10,%al
   302f4:	0f 85 fb 06 00 00    	jne    309f5 <elf_zlib_inflate_table+0x945>
   302fa:	a8 20                	test   $0x20,%al
   302fc:	0f 85 23 07 00 00    	jne    30a25 <elf_zlib_inflate_table+0x975>
   30302:	a8 40                	test   $0x40,%al
   30304:	0f 85 4b 07 00 00    	jne    30a55 <elf_zlib_inflate_table+0x9a5>
   3030a:	84 c0                	test   %al,%al
   3030c:	0f 88 73 07 00 00    	js     30a85 <elf_zlib_inflate_table+0x9d5>
   30312:	a9 00 01 00 00       	test   $0x100,%eax
   30317:	0f 85 60 09 00 00    	jne    30c7d <elf_zlib_inflate_table+0xbcd>
   3031d:	a9 00 02 00 00       	test   $0x200,%eax
   30322:	0f 85 92 09 00 00    	jne    30cba <elf_zlib_inflate_table+0xc0a>
   30328:	85 c0                	test   %eax,%eax
   3032a:	0f 85 b1 0a 00 00    	jne    30de1 <elf_zlib_inflate_table+0xd31>
   30330:	0f b7 44 24 36       	movzwl 0x36(%rsp),%eax
   30335:	85 c0                	test   %eax,%eax
   30337:	74 6e                	je     303a7 <elf_zlib_inflate_table+0x2f7>
   30339:	66 89 5c 24 12       	mov    %bx,0x12(%rsp)
   3033e:	a8 01                	test   $0x1,%al
   30340:	0f 85 77 04 00 00    	jne    307bd <elf_zlib_inflate_table+0x70d>
   30346:	a8 02                	test   $0x2,%al
   30348:	0f 85 6e 07 00 00    	jne    30abc <elf_zlib_inflate_table+0xa0c>
   3034e:	a8 04                	test   $0x4,%al
   30350:	0f 85 9f 07 00 00    	jne    30af5 <elf_zlib_inflate_table+0xa45>
   30356:	a8 08                	test   $0x8,%al
   30358:	0f 85 c7 07 00 00    	jne    30b25 <elf_zlib_inflate_table+0xa75>
   3035e:	a8 10                	test   $0x10,%al
   30360:	0f 85 ef 07 00 00    	jne    30b55 <elf_zlib_inflate_table+0xaa5>
   30366:	a8 20                	test   $0x20,%al
   30368:	0f 85 17 08 00 00    	jne    30b85 <elf_zlib_inflate_table+0xad5>
   3036e:	a8 40                	test   $0x40,%al
   30370:	0f 85 3f 08 00 00    	jne    30bb5 <elf_zlib_inflate_table+0xb05>
   30376:	84 c0                	test   %al,%al
   30378:	0f 88 67 08 00 00    	js     30be5 <elf_zlib_inflate_table+0xb35>
   3037e:	a9 00 01 00 00       	test   $0x100,%eax
   30383:	0f 85 94 09 00 00    	jne    30d1d <elf_zlib_inflate_table+0xc6d>
   30389:	a9 00 02 00 00       	test   $0x200,%eax
   3038e:	0f 85 c6 09 00 00    	jne    30d5a <elf_zlib_inflate_table+0xcaa>
   30394:	a9 00 04 00 00       	test   $0x400,%eax
   30399:	0f 85 fb 09 00 00    	jne    30d9a <elf_zlib_inflate_table+0xcea>
   3039f:	85 c0                	test   %eax,%eax
   303a1:	0f 85 3a 0a 00 00    	jne    30de1 <elf_zlib_inflate_table+0xd31>
   303a7:	44 0f b7 44 24 38    	movzwl 0x38(%rsp),%r8d
   303ad:	45 85 c0             	test   %r8d,%r8d
   303b0:	74 6f                	je     30421 <elf_zlib_inflate_table+0x371>
   303b2:	66 89 5c 24 14       	mov    %bx,0x14(%rsp)
   303b7:	31 c0                	xor    %eax,%eax
   303b9:	eb 0f                	jmp    303ca <elf_zlib_inflate_table+0x31a>
   303bb:	01 eb                	add    %ebp,%ebx
   303bd:	f7 d6                	not    %esi
   303bf:	41 21 f0             	and    %esi,%r8d
   303c2:	83 c0 01             	add    $0x1,%eax
   303c5:	83 f8 0c             	cmp    $0xc,%eax
   303c8:	73 4e                	jae    30418 <elf_zlib_inflate_table+0x368>
   303ca:	be 01 00 00 00       	mov    $0x1,%esi
   303cf:	89 c1                	mov    %eax,%ecx
   303d1:	d3 e6                	shl    %cl,%esi
   303d3:	41 0f a3 c0          	bt     %eax,%r8d
   303d7:	73 e9                	jae    303c2 <elf_zlib_inflate_table+0x312>
   303d9:	bf 0c 00 00 00       	mov    $0xc,%edi
   303de:	48 29 c7             	sub    %rax,%rdi
   303e1:	74 da                	je     303bd <elf_zlib_inflate_table+0x30d>
   303e3:	8d 4f ff             	lea    -0x1(%rdi),%ecx
   303e6:	ba 01 00 00 00       	mov    $0x1,%edx
   303eb:	bd 01 00 00 00       	mov    $0x1,%ebp
   303f0:	d3 e5                	shl    %cl,%ebp
   303f2:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   303f9:	00 00 00 
   303fc:	0f 1f 40 00          	nopl   0x0(%rax)
   30400:	85 dd                	test   %ebx,%ebp
   30402:	74 b7                	je     303bb <elf_zlib_inflate_table+0x30b>
   30404:	89 e9                	mov    %ebp,%ecx
   30406:	f7 d1                	not    %ecx
   30408:	21 cb                	and    %ecx,%ebx
   3040a:	d1 ed                	shr    %ebp
   3040c:	89 d1                	mov    %edx,%ecx
   3040e:	83 c2 01             	add    $0x1,%edx
   30411:	48 39 cf             	cmp    %rcx,%rdi
   30414:	77 ea                	ja     30400 <elf_zlib_inflate_table+0x350>
   30416:	eb a5                	jmp    303bd <elf_zlib_inflate_table+0x30d>
   30418:	45 85 c0             	test   %r8d,%r8d
   3041b:	0f 85 c0 09 00 00    	jne    30de1 <elf_zlib_inflate_table+0xd31>
   30421:	44 0f b7 44 24 3a    	movzwl 0x3a(%rsp),%r8d
   30427:	45 85 c0             	test   %r8d,%r8d
   3042a:	74 65                	je     30491 <elf_zlib_inflate_table+0x3e1>
   3042c:	66 89 5c 24 16       	mov    %bx,0x16(%rsp)
   30431:	31 c0                	xor    %eax,%eax
   30433:	eb 0f                	jmp    30444 <elf_zlib_inflate_table+0x394>
   30435:	01 eb                	add    %ebp,%ebx
   30437:	f7 d6                	not    %esi
   30439:	41 21 f0             	and    %esi,%r8d
   3043c:	83 c0 01             	add    $0x1,%eax
   3043f:	83 f8 0d             	cmp    $0xd,%eax
   30442:	73 44                	jae    30488 <elf_zlib_inflate_table+0x3d8>
   30444:	be 01 00 00 00       	mov    $0x1,%esi
   30449:	89 c1                	mov    %eax,%ecx
   3044b:	d3 e6                	shl    %cl,%esi
   3044d:	41 0f a3 c0          	bt     %eax,%r8d
   30451:	73 e9                	jae    3043c <elf_zlib_inflate_table+0x38c>
   30453:	bf 0d 00 00 00       	mov    $0xd,%edi
   30458:	48 29 c7             	sub    %rax,%rdi
   3045b:	74 da                	je     30437 <elf_zlib_inflate_table+0x387>
   3045d:	8d 4f ff             	lea    -0x1(%rdi),%ecx
   30460:	ba 01 00 00 00       	mov    $0x1,%edx
   30465:	bd 01 00 00 00       	mov    $0x1,%ebp
   3046a:	d3 e5                	shl    %cl,%ebp
   3046c:	0f 1f 40 00          	nopl   0x0(%rax)
   30470:	85 dd                	test   %ebx,%ebp
   30472:	74 c1                	je     30435 <elf_zlib_inflate_table+0x385>
   30474:	89 e9                	mov    %ebp,%ecx
   30476:	f7 d1                	not    %ecx
   30478:	21 cb                	and    %ecx,%ebx
   3047a:	d1 ed                	shr    %ebp
   3047c:	89 d1                	mov    %edx,%ecx
   3047e:	83 c2 01             	add    $0x1,%edx
   30481:	48 39 cf             	cmp    %rcx,%rdi
   30484:	77 ea                	ja     30470 <elf_zlib_inflate_table+0x3c0>
   30486:	eb af                	jmp    30437 <elf_zlib_inflate_table+0x387>
   30488:	45 85 c0             	test   %r8d,%r8d
   3048b:	0f 85 50 09 00 00    	jne    30de1 <elf_zlib_inflate_table+0xd31>
   30491:	44 0f b7 44 24 3c    	movzwl 0x3c(%rsp),%r8d
   30497:	45 85 c0             	test   %r8d,%r8d
   3049a:	74 65                	je     30501 <elf_zlib_inflate_table+0x451>
   3049c:	66 89 5c 24 18       	mov    %bx,0x18(%rsp)
   304a1:	31 c0                	xor    %eax,%eax
   304a3:	eb 0f                	jmp    304b4 <elf_zlib_inflate_table+0x404>
   304a5:	01 eb                	add    %ebp,%ebx
   304a7:	f7 d6                	not    %esi
   304a9:	41 21 f0             	and    %esi,%r8d
   304ac:	83 c0 01             	add    $0x1,%eax
   304af:	83 f8 0e             	cmp    $0xe,%eax
   304b2:	73 44                	jae    304f8 <elf_zlib_inflate_table+0x448>
   304b4:	be 01 00 00 00       	mov    $0x1,%esi
   304b9:	89 c1                	mov    %eax,%ecx
   304bb:	d3 e6                	shl    %cl,%esi
   304bd:	41 0f a3 c0          	bt     %eax,%r8d
   304c1:	73 e9                	jae    304ac <elf_zlib_inflate_table+0x3fc>
   304c3:	bf 0e 00 00 00       	mov    $0xe,%edi
   304c8:	48 29 c7             	sub    %rax,%rdi
   304cb:	74 da                	je     304a7 <elf_zlib_inflate_table+0x3f7>
   304cd:	8d 4f ff             	lea    -0x1(%rdi),%ecx
   304d0:	ba 01 00 00 00       	mov    $0x1,%edx
   304d5:	bd 01 00 00 00       	mov    $0x1,%ebp
   304da:	d3 e5                	shl    %cl,%ebp
   304dc:	0f 1f 40 00          	nopl   0x0(%rax)
   304e0:	85 dd                	test   %ebx,%ebp
   304e2:	74 c1                	je     304a5 <elf_zlib_inflate_table+0x3f5>
   304e4:	89 e9                	mov    %ebp,%ecx
   304e6:	f7 d1                	not    %ecx
   304e8:	21 cb                	and    %ecx,%ebx
   304ea:	d1 ed                	shr    %ebp
   304ec:	89 d1                	mov    %edx,%ecx
   304ee:	83 c2 01             	add    $0x1,%edx
   304f1:	48 39 cf             	cmp    %rcx,%rdi
   304f4:	77 ea                	ja     304e0 <elf_zlib_inflate_table+0x430>
   304f6:	eb af                	jmp    304a7 <elf_zlib_inflate_table+0x3f7>
   304f8:	45 85 c0             	test   %r8d,%r8d
   304fb:	0f 85 e0 08 00 00    	jne    30de1 <elf_zlib_inflate_table+0xd31>
   30501:	44 0f b7 4c 24 3e    	movzwl 0x3e(%rsp),%r9d
   30507:	45 85 c9             	test   %r9d,%r9d
   3050a:	74 65                	je     30571 <elf_zlib_inflate_table+0x4c1>
   3050c:	66 89 5c 24 1a       	mov    %bx,0x1a(%rsp)
   30511:	31 c0                	xor    %eax,%eax
   30513:	45 89 c8             	mov    %r9d,%r8d
   30516:	eb 0f                	jmp    30527 <elf_zlib_inflate_table+0x477>
   30518:	01 d3                	add    %edx,%ebx
   3051a:	f7 d7                	not    %edi
   3051c:	41 21 f8             	and    %edi,%r8d
   3051f:	83 c0 01             	add    $0x1,%eax
   30522:	83 f8 0f             	cmp    $0xf,%eax
   30525:	73 41                	jae    30568 <elf_zlib_inflate_table+0x4b8>
   30527:	bf 01 00 00 00       	mov    $0x1,%edi
   3052c:	89 c1                	mov    %eax,%ecx
   3052e:	d3 e7                	shl    %cl,%edi
   30530:	41 0f a3 c0          	bt     %eax,%r8d
   30534:	73 e9                	jae    3051f <elf_zlib_inflate_table+0x46f>
   30536:	bd 0f 00 00 00       	mov    $0xf,%ebp
   3053b:	48 29 c5             	sub    %rax,%rbp
   3053e:	74 da                	je     3051a <elf_zlib_inflate_table+0x46a>
   30540:	8d 4d ff             	lea    -0x1(%rbp),%ecx
   30543:	be 01 00 00 00       	mov    $0x1,%esi
   30548:	ba 01 00 00 00       	mov    $0x1,%edx
   3054d:	d3 e2                	shl    %cl,%edx
   3054f:	90                   	nop
   30550:	85 da                	test   %ebx,%edx
   30552:	74 c4                	je     30518 <elf_zlib_inflate_table+0x468>
   30554:	89 d1                	mov    %edx,%ecx
   30556:	f7 d1                	not    %ecx
   30558:	21 cb                	and    %ecx,%ebx
   3055a:	d1 ea                	shr    %edx
   3055c:	89 f1                	mov    %esi,%ecx
   3055e:	83 c6 01             	add    $0x1,%esi
   30561:	48 39 cd             	cmp    %rcx,%rbp
   30564:	77 ea                	ja     30550 <elf_zlib_inflate_table+0x4a0>
   30566:	eb b2                	jmp    3051a <elf_zlib_inflate_table+0x46a>
   30568:	45 85 c0             	test   %r8d,%r8d
   3056b:	0f 85 70 08 00 00    	jne    30de1 <elf_zlib_inflate_table+0xd31>
   30571:	49 8d 87 00 02 00 00 	lea    0x200(%r15),%rax
   30578:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
   3057d:	b8 0f 00 00 00       	mov    $0xf,%eax
   30582:	45 31 c0             	xor    %r8d,%r8d
   30585:	4c 89 64 24 60       	mov    %r12,0x60(%rsp)
   3058a:	66 45 85 c9          	test   %r9w,%r9w
   3058e:	48 89 44 24 50       	mov    %rax,0x50(%rsp)
   30593:	0f 84 a7 01 00 00    	je     30740 <elf_zlib_inflate_table+0x690>
   30599:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   305a0:	45 0f b7 e1          	movzwl %r9w,%r12d
   305a4:	0f b7 7c 44 fc       	movzwl -0x4(%rsp,%rax,2),%edi
   305a9:	48 8d 48 f8          	lea    -0x8(%rax),%rcx
   305ad:	be 01 00 00 00       	mov    $0x1,%esi
   305b2:	d3 e6                	shl    %cl,%esi
   305b4:	44 0f b7 9c 44 90 00 	movzwl 0x90(%rsp,%rax,2),%r11d
   305bb:	00 00 
   305bd:	48 63 d6             	movslq %esi,%rdx
   305c0:	48 89 54 24 58       	mov    %rdx,0x58(%rsp)
   305c5:	48 89 4c 24 40       	mov    %rcx,0x40(%rsp)
   305ca:	48 c1 e1 09          	shl    $0x9,%rcx
   305ce:	48 89 4c 24 48       	mov    %rcx,0x48(%rsp)
   305d3:	8d 48 ff             	lea    -0x1(%rax),%ecx
   305d6:	b8 01 00 00 00       	mov    $0x1,%eax
   305db:	d3 e0                	shl    %cl,%eax
   305dd:	89 44 24 1c          	mov    %eax,0x1c(%rsp)
   305e1:	41 b9 00 01 00 00    	mov    $0x100,%r9d
   305e7:	45 31 ed             	xor    %r13d,%r13d
   305ea:	31 c9                	xor    %ecx,%ecx
   305ec:	45 31 d2             	xor    %r10d,%r10d
   305ef:	40 0f b6 c7          	movzbl %dil,%eax
   305f3:	49 39 c1             	cmp    %rax,%r9
   305f6:	74 1f                	je     30617 <elf_zlib_inflate_table+0x567>
   305f8:	eb 26                	jmp    30620 <elf_zlib_inflate_table+0x570>
   305fa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   30600:	31 ff                	xor    %edi,%edi
   30602:	4d 89 f0             	mov    %r14,%r8
   30605:	4d 39 e5             	cmp    %r12,%r13
   30608:	0f 84 35 01 00 00    	je     30743 <elf_zlib_inflate_table+0x693>
   3060e:	40 0f b6 c7          	movzbl %dil,%eax
   30612:	49 39 c1             	cmp    %rax,%r9
   30615:	75 09                	jne    30620 <elf_zlib_inflate_table+0x570>
   30617:	4d 89 c6             	mov    %r8,%r14
   3061a:	e9 81 00 00 00       	jmpq   306a0 <elf_zlib_inflate_table+0x5f0>
   3061f:	90                   	nop
   30620:	45 0f b7 14 47       	movzwl (%r15,%rax,2),%r10d
   30625:	45 85 d2             	test   %r10d,%r10d
   30628:	74 33                	je     3065d <elf_zlib_inflate_table+0x5ad>
   3062a:	45 31 f6             	xor    %r14d,%r14d
   3062d:	41 f7 c2 00 10 00 00 	test   $0x1000,%r10d
   30634:	0f 84 aa 07 00 00    	je     30de4 <elf_zlib_inflate_table+0xd34>
   3063a:	44 89 d1             	mov    %r10d,%ecx
   3063d:	c1 e9 09             	shr    $0x9,%ecx
   30640:	83 e1 07             	and    $0x7,%ecx
   30643:	48 39 4c 24 40       	cmp    %rcx,0x40(%rsp)
   30648:	0f 87 96 07 00 00    	ja     30de4 <elf_zlib_inflate_table+0xd34>
   3064e:	41 81 e2 ff 01 00 00 	and    $0x1ff,%r10d
   30655:	4d 89 c6             	mov    %r8,%r14
   30658:	49 89 c1             	mov    %rax,%r9
   3065b:	eb 43                	jmp    306a0 <elf_zlib_inflate_table+0x5f0>
   3065d:	49 81 f8 ff 01 00 00 	cmp    $0x1ff,%r8
   30664:	0f 87 77 07 00 00    	ja     30de1 <elf_zlib_inflate_table+0xd31>
   3066a:	48 8b 4c 24 58       	mov    0x58(%rsp),%rcx
   3066f:	4d 8d 34 08          	lea    (%r8,%rcx,1),%r14
   30673:	48 8b 4c 24 48       	mov    0x48(%rsp),%rcx
   30678:	41 8d 0c 08          	lea    (%r8,%rcx,1),%ecx
   3067c:	81 c1 00 10 00 00    	add    $0x1000,%ecx
   30682:	66 41 89 0c 47       	mov    %cx,(%r15,%rax,2)
   30687:	49 89 c1             	mov    %rax,%r9
   3068a:	4d 89 c2             	mov    %r8,%r10
   3068d:	48 8b 4c 24 40       	mov    0x40(%rsp),%rcx
   30692:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   30699:	00 00 00 
   3069c:	0f 1f 40 00          	nopl   0x0(%rax)
   306a0:	89 fb                	mov    %edi,%ebx
   306a2:	c1 eb 08             	shr    $0x8,%ebx
   306a5:	b8 01 00 00 00       	mov    $0x1,%eax
   306aa:	d3 e0                	shl    %cl,%eax
   306ac:	39 c3                	cmp    %eax,%ebx
   306ae:	73 37                	jae    306e7 <elf_zlib_inflate_table+0x637>
   306b0:	48 8b 54 24 48       	mov    0x48(%rsp),%rdx
   306b5:	89 d5                	mov    %edx,%ebp
   306b7:	44 09 dd             	or     %r11d,%ebp
   306ba:	89 db                	mov    %ebx,%ebx
   306bc:	48 8b 54 24 68       	mov    0x68(%rsp),%rdx
   306c1:	4a 8d 14 52          	lea    (%rdx,%r10,2),%rdx
   306c5:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   306cc:	00 00 00 
   306cf:	90                   	nop
   306d0:	66 83 3c 5a 00       	cmpw   $0x0,(%rdx,%rbx,2)
   306d5:	0f 85 06 07 00 00    	jne    30de1 <elf_zlib_inflate_table+0xd31>
   306db:	66 89 2c 5a          	mov    %bp,(%rdx,%rbx,2)
   306df:	48 01 f3             	add    %rsi,%rbx
   306e2:	48 39 c3             	cmp    %rax,%rbx
   306e5:	72 e9                	jb     306d0 <elf_zlib_inflate_table+0x620>
   306e7:	49 83 c5 01          	add    $0x1,%r13
   306eb:	4d 39 e5             	cmp    %r12,%r13
   306ee:	73 11                	jae    30701 <elf_zlib_inflate_table+0x651>
   306f0:	44 89 d8             	mov    %r11d,%eax
   306f3:	48 8b 54 24 60       	mov    0x60(%rsp),%rdx
   306f8:	44 0f b7 9c 42 00 10 	movzwl 0x1000(%rdx,%rax,2),%r11d
   306ff:	00 00 
   30701:	8b 54 24 1c          	mov    0x1c(%rsp),%edx
   30705:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   3070c:	00 00 00 
   3070f:	90                   	nop
   30710:	89 d0                	mov    %edx,%eax
   30712:	d1 ea                	shr    %edx
   30714:	85 f8                	test   %edi,%eax
   30716:	75 f8                	jne    30710 <elf_zlib_inflate_table+0x660>
   30718:	85 c0                	test   %eax,%eax
   3071a:	0f 84 e0 fe ff ff    	je     30600 <elf_zlib_inflate_table+0x550>
   30720:	8d 50 ff             	lea    -0x1(%rax),%edx
   30723:	21 fa                	and    %edi,%edx
   30725:	01 c2                	add    %eax,%edx
   30727:	89 d7                	mov    %edx,%edi
   30729:	4d 89 f0             	mov    %r14,%r8
   3072c:	4d 39 e5             	cmp    %r12,%r13
   3072f:	0f 85 d9 fe ff ff    	jne    3060e <elf_zlib_inflate_table+0x55e>
   30735:	eb 0c                	jmp    30743 <elf_zlib_inflate_table+0x693>
   30737:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   3073e:	00 00 
   30740:	4d 89 c6             	mov    %r8,%r14
   30743:	48 8b 4c 24 50       	mov    0x50(%rsp),%rcx
   30748:	48 8d 41 ff          	lea    -0x1(%rcx),%rax
   3074c:	48 83 f8 09          	cmp    $0x9,%rax
   30750:	0f 82 97 00 00 00    	jb     307ed <elf_zlib_inflate_table+0x73d>
   30756:	44 0f b7 4c 4c 1e    	movzwl 0x1e(%rsp,%rcx,2),%r9d
   3075c:	4d 89 f0             	mov    %r14,%r8
   3075f:	66 45 85 c9          	test   %r9w,%r9w
   30763:	48 89 44 24 50       	mov    %rax,0x50(%rsp)
   30768:	0f 85 32 fe ff ff    	jne    305a0 <elf_zlib_inflate_table+0x4f0>
   3076e:	eb d0                	jmp    30740 <elf_zlib_inflate_table+0x690>
   30770:	31 d2                	xor    %edx,%edx
   30772:	b9 00 01 00 00       	mov    $0x100,%ecx
   30777:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   3077e:	00 00 
   30780:	85 d9                	test   %ebx,%ecx
   30782:	74 74                	je     307f8 <elf_zlib_inflate_table+0x748>
   30784:	89 ce                	mov    %ecx,%esi
   30786:	f7 d6                	not    %esi
   30788:	21 f3                	and    %esi,%ebx
   3078a:	83 c2 01             	add    $0x1,%edx
   3078d:	d1 e9                	shr    %ecx
   3078f:	83 fa 09             	cmp    $0x9,%edx
   30792:	72 ec                	jb     30780 <elf_zlib_inflate_table+0x6d0>
   30794:	eb 66                	jmp    307fc <elf_zlib_inflate_table+0x74c>
   30796:	31 d2                	xor    %edx,%edx
   30798:	b9 00 02 00 00       	mov    $0x200,%ecx
   3079d:	0f 1f 00             	nopl   (%rax)
   307a0:	85 d9                	test   %ebx,%ecx
   307a2:	0f 84 a5 01 00 00    	je     3094d <elf_zlib_inflate_table+0x89d>
   307a8:	89 ce                	mov    %ecx,%esi
   307aa:	f7 d6                	not    %esi
   307ac:	21 f3                	and    %esi,%ebx
   307ae:	83 c2 01             	add    $0x1,%edx
   307b1:	d1 e9                	shr    %ecx
   307b3:	83 fa 0a             	cmp    $0xa,%edx
   307b6:	72 e8                	jb     307a0 <elf_zlib_inflate_table+0x6f0>
   307b8:	e9 94 01 00 00       	jmpq   30951 <elf_zlib_inflate_table+0x8a1>
   307bd:	31 d2                	xor    %edx,%edx
   307bf:	b9 00 04 00 00       	mov    $0x400,%ecx
   307c4:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   307cb:	00 00 00 
   307ce:	66 90                	xchg   %ax,%ax
   307d0:	85 d9                	test   %ebx,%ecx
   307d2:	0f 84 d5 02 00 00    	je     30aad <elf_zlib_inflate_table+0x9fd>
   307d8:	89 ce                	mov    %ecx,%esi
   307da:	f7 d6                	not    %esi
   307dc:	21 f3                	and    %esi,%ebx
   307de:	83 c2 01             	add    $0x1,%edx
   307e1:	d1 e9                	shr    %ecx
   307e3:	83 fa 0b             	cmp    $0xb,%edx
   307e6:	72 e8                	jb     307d0 <elf_zlib_inflate_table+0x720>
   307e8:	e9 c4 02 00 00       	jmpq   30ab1 <elf_zlib_inflate_table+0xa01>
   307ed:	41 be 01 00 00 00    	mov    $0x1,%r14d
   307f3:	e9 ec 05 00 00       	jmpq   30de4 <elf_zlib_inflate_table+0xd34>
   307f8:	01 d9                	add    %ebx,%ecx
   307fa:	89 cb                	mov    %ecx,%ebx
   307fc:	83 e0 fe             	and    $0xfffffffe,%eax
   307ff:	a8 02                	test   $0x2,%al
   30801:	0f 84 7a fa ff ff    	je     30281 <elf_zlib_inflate_table+0x1d1>
   30807:	31 d2                	xor    %edx,%edx
   30809:	b9 80 00 00 00       	mov    $0x80,%ecx
   3080e:	66 90                	xchg   %ax,%ax
   30810:	85 d9                	test   %ebx,%ecx
   30812:	74 12                	je     30826 <elf_zlib_inflate_table+0x776>
   30814:	89 ce                	mov    %ecx,%esi
   30816:	f7 d6                	not    %esi
   30818:	21 f3                	and    %esi,%ebx
   3081a:	83 c2 01             	add    $0x1,%edx
   3081d:	d1 e9                	shr    %ecx
   3081f:	83 fa 08             	cmp    $0x8,%edx
   30822:	72 ec                	jb     30810 <elf_zlib_inflate_table+0x760>
   30824:	eb 04                	jmp    3082a <elf_zlib_inflate_table+0x77a>
   30826:	01 d9                	add    %ebx,%ecx
   30828:	89 cb                	mov    %ecx,%ebx
   3082a:	83 e0 fd             	and    $0xfffffffd,%eax
   3082d:	a8 04                	test   $0x4,%al
   3082f:	0f 84 54 fa ff ff    	je     30289 <elf_zlib_inflate_table+0x1d9>
   30835:	31 d2                	xor    %edx,%edx
   30837:	b9 40 00 00 00       	mov    $0x40,%ecx
   3083c:	0f 1f 40 00          	nopl   0x0(%rax)
   30840:	85 d9                	test   %ebx,%ecx
   30842:	74 12                	je     30856 <elf_zlib_inflate_table+0x7a6>
   30844:	89 ce                	mov    %ecx,%esi
   30846:	f7 d6                	not    %esi
   30848:	21 f3                	and    %esi,%ebx
   3084a:	83 c2 01             	add    $0x1,%edx
   3084d:	d1 e9                	shr    %ecx
   3084f:	83 fa 07             	cmp    $0x7,%edx
   30852:	72 ec                	jb     30840 <elf_zlib_inflate_table+0x790>
   30854:	eb 04                	jmp    3085a <elf_zlib_inflate_table+0x7aa>
   30856:	01 d9                	add    %ebx,%ecx
   30858:	89 cb                	mov    %ecx,%ebx
   3085a:	83 e0 fb             	and    $0xfffffffb,%eax
   3085d:	a8 08                	test   $0x8,%al
   3085f:	0f 84 2c fa ff ff    	je     30291 <elf_zlib_inflate_table+0x1e1>
   30865:	31 d2                	xor    %edx,%edx
   30867:	b9 20 00 00 00       	mov    $0x20,%ecx
   3086c:	0f 1f 40 00          	nopl   0x0(%rax)
   30870:	85 d9                	test   %ebx,%ecx
   30872:	74 12                	je     30886 <elf_zlib_inflate_table+0x7d6>
   30874:	89 ce                	mov    %ecx,%esi
   30876:	f7 d6                	not    %esi
   30878:	21 f3                	and    %esi,%ebx
   3087a:	83 c2 01             	add    $0x1,%edx
   3087d:	d1 e9                	shr    %ecx
   3087f:	83 fa 06             	cmp    $0x6,%edx
   30882:	72 ec                	jb     30870 <elf_zlib_inflate_table+0x7c0>
   30884:	eb 04                	jmp    3088a <elf_zlib_inflate_table+0x7da>
   30886:	01 d9                	add    %ebx,%ecx
   30888:	89 cb                	mov    %ecx,%ebx
   3088a:	83 e0 f7             	and    $0xfffffff7,%eax
   3088d:	a8 10                	test   $0x10,%al
   3088f:	0f 84 04 fa ff ff    	je     30299 <elf_zlib_inflate_table+0x1e9>
   30895:	31 d2                	xor    %edx,%edx
   30897:	b9 10 00 00 00       	mov    $0x10,%ecx
   3089c:	0f 1f 40 00          	nopl   0x0(%rax)
   308a0:	85 d9                	test   %ebx,%ecx
   308a2:	74 12                	je     308b6 <elf_zlib_inflate_table+0x806>
   308a4:	89 ce                	mov    %ecx,%esi
   308a6:	f7 d6                	not    %esi
   308a8:	21 f3                	and    %esi,%ebx
   308aa:	83 c2 01             	add    $0x1,%edx
   308ad:	d1 e9                	shr    %ecx
   308af:	83 fa 05             	cmp    $0x5,%edx
   308b2:	72 ec                	jb     308a0 <elf_zlib_inflate_table+0x7f0>
   308b4:	eb 04                	jmp    308ba <elf_zlib_inflate_table+0x80a>
   308b6:	01 d9                	add    %ebx,%ecx
   308b8:	89 cb                	mov    %ecx,%ebx
   308ba:	83 e0 ef             	and    $0xffffffef,%eax
   308bd:	a8 20                	test   $0x20,%al
   308bf:	0f 84 dc f9 ff ff    	je     302a1 <elf_zlib_inflate_table+0x1f1>
   308c5:	31 d2                	xor    %edx,%edx
   308c7:	b9 08 00 00 00       	mov    $0x8,%ecx
   308cc:	0f 1f 40 00          	nopl   0x0(%rax)
   308d0:	85 d9                	test   %ebx,%ecx
   308d2:	74 12                	je     308e6 <elf_zlib_inflate_table+0x836>
   308d4:	89 ce                	mov    %ecx,%esi
   308d6:	f7 d6                	not    %esi
   308d8:	21 f3                	and    %esi,%ebx
   308da:	83 c2 01             	add    $0x1,%edx
   308dd:	d1 e9                	shr    %ecx
   308df:	83 fa 04             	cmp    $0x4,%edx
   308e2:	72 ec                	jb     308d0 <elf_zlib_inflate_table+0x820>
   308e4:	eb 04                	jmp    308ea <elf_zlib_inflate_table+0x83a>
   308e6:	01 d9                	add    %ebx,%ecx
   308e8:	89 cb                	mov    %ecx,%ebx
   308ea:	83 e0 df             	and    $0xffffffdf,%eax
   308ed:	a8 40                	test   $0x40,%al
   308ef:	0f 84 b4 f9 ff ff    	je     302a9 <elf_zlib_inflate_table+0x1f9>
   308f5:	31 d2                	xor    %edx,%edx
   308f7:	b9 04 00 00 00       	mov    $0x4,%ecx
   308fc:	0f 1f 40 00          	nopl   0x0(%rax)
   30900:	85 d9                	test   %ebx,%ecx
   30902:	74 12                	je     30916 <elf_zlib_inflate_table+0x866>
   30904:	89 ce                	mov    %ecx,%esi
   30906:	f7 d6                	not    %esi
   30908:	21 f3                	and    %esi,%ebx
   3090a:	83 c2 01             	add    $0x1,%edx
   3090d:	d1 e9                	shr    %ecx
   3090f:	83 fa 03             	cmp    $0x3,%edx
   30912:	72 ec                	jb     30900 <elf_zlib_inflate_table+0x850>
   30914:	eb 04                	jmp    3091a <elf_zlib_inflate_table+0x86a>
   30916:	01 d9                	add    %ebx,%ecx
   30918:	89 cb                	mov    %ecx,%ebx
   3091a:	83 e0 bf             	and    $0xffffffbf,%eax
   3091d:	84 c0                	test   %al,%al
   3091f:	0f 89 8c f9 ff ff    	jns    302b1 <elf_zlib_inflate_table+0x201>
   30925:	31 d2                	xor    %edx,%edx
   30927:	b9 02 00 00 00       	mov    $0x2,%ecx
   3092c:	0f 1f 40 00          	nopl   0x0(%rax)
   30930:	85 d9                	test   %ebx,%ecx
   30932:	0f 84 d5 02 00 00    	je     30c0d <elf_zlib_inflate_table+0xb5d>
   30938:	89 ce                	mov    %ecx,%esi
   3093a:	f7 d6                	not    %esi
   3093c:	21 f3                	and    %esi,%ebx
   3093e:	83 c2 01             	add    $0x1,%edx
   30941:	d1 e9                	shr    %ecx
   30943:	83 fa 02             	cmp    $0x2,%edx
   30946:	72 e8                	jb     30930 <elf_zlib_inflate_table+0x880>
   30948:	e9 c4 02 00 00       	jmpq   30c11 <elf_zlib_inflate_table+0xb61>
   3094d:	01 d9                	add    %ebx,%ecx
   3094f:	89 cb                	mov    %ecx,%ebx
   30951:	83 e0 fe             	and    $0xfffffffe,%eax
   30954:	a8 02                	test   $0x2,%al
   30956:	0f 84 86 f9 ff ff    	je     302e2 <elf_zlib_inflate_table+0x232>
   3095c:	31 d2                	xor    %edx,%edx
   3095e:	b9 00 01 00 00       	mov    $0x100,%ecx
   30963:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   3096a:	00 00 00 
   3096d:	0f 1f 00             	nopl   (%rax)
   30970:	85 d9                	test   %ebx,%ecx
   30972:	74 12                	je     30986 <elf_zlib_inflate_table+0x8d6>
   30974:	89 ce                	mov    %ecx,%esi
   30976:	f7 d6                	not    %esi
   30978:	21 f3                	and    %esi,%ebx
   3097a:	83 c2 01             	add    $0x1,%edx
   3097d:	d1 e9                	shr    %ecx
   3097f:	83 fa 09             	cmp    $0x9,%edx
   30982:	72 ec                	jb     30970 <elf_zlib_inflate_table+0x8c0>
   30984:	eb 04                	jmp    3098a <elf_zlib_inflate_table+0x8da>
   30986:	01 d9                	add    %ebx,%ecx
   30988:	89 cb                	mov    %ecx,%ebx
   3098a:	83 e0 fd             	and    $0xfffffffd,%eax
   3098d:	a8 04                	test   $0x4,%al
   3098f:	0f 84 55 f9 ff ff    	je     302ea <elf_zlib_inflate_table+0x23a>
   30995:	31 d2                	xor    %edx,%edx
   30997:	b9 80 00 00 00       	mov    $0x80,%ecx
   3099c:	0f 1f 40 00          	nopl   0x0(%rax)
   309a0:	85 d9                	test   %ebx,%ecx
   309a2:	74 12                	je     309b6 <elf_zlib_inflate_table+0x906>
   309a4:	89 ce                	mov    %ecx,%esi
   309a6:	f7 d6                	not    %esi
   309a8:	21 f3                	and    %esi,%ebx
   309aa:	83 c2 01             	add    $0x1,%edx
   309ad:	d1 e9                	shr    %ecx
   309af:	83 fa 08             	cmp    $0x8,%edx
   309b2:	72 ec                	jb     309a0 <elf_zlib_inflate_table+0x8f0>
   309b4:	eb 04                	jmp    309ba <elf_zlib_inflate_table+0x90a>
   309b6:	01 d9                	add    %ebx,%ecx
   309b8:	89 cb                	mov    %ecx,%ebx
   309ba:	83 e0 fb             	and    $0xfffffffb,%eax
   309bd:	a8 08                	test   $0x8,%al
   309bf:	0f 84 2d f9 ff ff    	je     302f2 <elf_zlib_inflate_table+0x242>
   309c5:	31 d2                	xor    %edx,%edx
   309c7:	b9 40 00 00 00       	mov    $0x40,%ecx
   309cc:	0f 1f 40 00          	nopl   0x0(%rax)
   309d0:	85 d9                	test   %ebx,%ecx
   309d2:	74 12                	je     309e6 <elf_zlib_inflate_table+0x936>
   309d4:	89 ce                	mov    %ecx,%esi
   309d6:	f7 d6                	not    %esi
   309d8:	21 f3                	and    %esi,%ebx
   309da:	83 c2 01             	add    $0x1,%edx
   309dd:	d1 e9                	shr    %ecx
   309df:	83 fa 07             	cmp    $0x7,%edx
   309e2:	72 ec                	jb     309d0 <elf_zlib_inflate_table+0x920>
   309e4:	eb 04                	jmp    309ea <elf_zlib_inflate_table+0x93a>
   309e6:	01 d9                	add    %ebx,%ecx
   309e8:	89 cb                	mov    %ecx,%ebx
   309ea:	83 e0 f7             	and    $0xfffffff7,%eax
   309ed:	a8 10                	test   $0x10,%al
   309ef:	0f 84 05 f9 ff ff    	je     302fa <elf_zlib_inflate_table+0x24a>
   309f5:	31 d2                	xor    %edx,%edx
   309f7:	b9 20 00 00 00       	mov    $0x20,%ecx
   309fc:	0f 1f 40 00          	nopl   0x0(%rax)
   30a00:	85 d9                	test   %ebx,%ecx
   30a02:	74 12                	je     30a16 <elf_zlib_inflate_table+0x966>
   30a04:	89 ce                	mov    %ecx,%esi
   30a06:	f7 d6                	not    %esi
   30a08:	21 f3                	and    %esi,%ebx
   30a0a:	83 c2 01             	add    $0x1,%edx
   30a0d:	d1 e9                	shr    %ecx
   30a0f:	83 fa 06             	cmp    $0x6,%edx
   30a12:	72 ec                	jb     30a00 <elf_zlib_inflate_table+0x950>
   30a14:	eb 04                	jmp    30a1a <elf_zlib_inflate_table+0x96a>
   30a16:	01 d9                	add    %ebx,%ecx
   30a18:	89 cb                	mov    %ecx,%ebx
   30a1a:	83 e0 ef             	and    $0xffffffef,%eax
   30a1d:	a8 20                	test   $0x20,%al
   30a1f:	0f 84 dd f8 ff ff    	je     30302 <elf_zlib_inflate_table+0x252>
   30a25:	31 d2                	xor    %edx,%edx
   30a27:	b9 10 00 00 00       	mov    $0x10,%ecx
   30a2c:	0f 1f 40 00          	nopl   0x0(%rax)
   30a30:	85 d9                	test   %ebx,%ecx
   30a32:	74 12                	je     30a46 <elf_zlib_inflate_table+0x996>
   30a34:	89 ce                	mov    %ecx,%esi
   30a36:	f7 d6                	not    %esi
   30a38:	21 f3                	and    %esi,%ebx
   30a3a:	83 c2 01             	add    $0x1,%edx
   30a3d:	d1 e9                	shr    %ecx
   30a3f:	83 fa 05             	cmp    $0x5,%edx
   30a42:	72 ec                	jb     30a30 <elf_zlib_inflate_table+0x980>
   30a44:	eb 04                	jmp    30a4a <elf_zlib_inflate_table+0x99a>
   30a46:	01 d9                	add    %ebx,%ecx
   30a48:	89 cb                	mov    %ecx,%ebx
   30a4a:	83 e0 df             	and    $0xffffffdf,%eax
   30a4d:	a8 40                	test   $0x40,%al
   30a4f:	0f 84 b5 f8 ff ff    	je     3030a <elf_zlib_inflate_table+0x25a>
   30a55:	31 d2                	xor    %edx,%edx
   30a57:	b9 08 00 00 00       	mov    $0x8,%ecx
   30a5c:	0f 1f 40 00          	nopl   0x0(%rax)
   30a60:	85 d9                	test   %ebx,%ecx
   30a62:	74 12                	je     30a76 <elf_zlib_inflate_table+0x9c6>
   30a64:	89 ce                	mov    %ecx,%esi
   30a66:	f7 d6                	not    %esi
   30a68:	21 f3                	and    %esi,%ebx
   30a6a:	83 c2 01             	add    $0x1,%edx
   30a6d:	d1 e9                	shr    %ecx
   30a6f:	83 fa 04             	cmp    $0x4,%edx
   30a72:	72 ec                	jb     30a60 <elf_zlib_inflate_table+0x9b0>
   30a74:	eb 04                	jmp    30a7a <elf_zlib_inflate_table+0x9ca>
   30a76:	01 d9                	add    %ebx,%ecx
   30a78:	89 cb                	mov    %ecx,%ebx
   30a7a:	83 e0 bf             	and    $0xffffffbf,%eax
   30a7d:	84 c0                	test   %al,%al
   30a7f:	0f 89 8d f8 ff ff    	jns    30312 <elf_zlib_inflate_table+0x262>
   30a85:	31 d2                	xor    %edx,%edx
   30a87:	b9 04 00 00 00       	mov    $0x4,%ecx
   30a8c:	0f 1f 40 00          	nopl   0x0(%rax)
   30a90:	85 d9                	test   %ebx,%ecx
   30a92:	0f 84 d1 01 00 00    	je     30c69 <elf_zlib_inflate_table+0xbb9>
   30a98:	89 ce                	mov    %ecx,%esi
   30a9a:	f7 d6                	not    %esi
   30a9c:	21 f3                	and    %esi,%ebx
   30a9e:	83 c2 01             	add    $0x1,%edx
   30aa1:	d1 e9                	shr    %ecx
   30aa3:	83 fa 03             	cmp    $0x3,%edx
   30aa6:	72 e8                	jb     30a90 <elf_zlib_inflate_table+0x9e0>
   30aa8:	e9 c0 01 00 00       	jmpq   30c6d <elf_zlib_inflate_table+0xbbd>
   30aad:	01 d9                	add    %ebx,%ecx
   30aaf:	89 cb                	mov    %ecx,%ebx
   30ab1:	83 e0 fe             	and    $0xfffffffe,%eax
   30ab4:	a8 02                	test   $0x2,%al
   30ab6:	0f 84 92 f8 ff ff    	je     3034e <elf_zlib_inflate_table+0x29e>
   30abc:	31 d2                	xor    %edx,%edx
   30abe:	b9 00 02 00 00       	mov    $0x200,%ecx
   30ac3:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   30aca:	00 00 00 
   30acd:	0f 1f 00             	nopl   (%rax)
   30ad0:	85 d9                	test   %ebx,%ecx
   30ad2:	74 12                	je     30ae6 <elf_zlib_inflate_table+0xa36>
   30ad4:	89 ce                	mov    %ecx,%esi
   30ad6:	f7 d6                	not    %esi
   30ad8:	21 f3                	and    %esi,%ebx
   30ada:	83 c2 01             	add    $0x1,%edx
   30add:	d1 e9                	shr    %ecx
   30adf:	83 fa 0a             	cmp    $0xa,%edx
   30ae2:	72 ec                	jb     30ad0 <elf_zlib_inflate_table+0xa20>
   30ae4:	eb 04                	jmp    30aea <elf_zlib_inflate_table+0xa3a>
   30ae6:	01 d9                	add    %ebx,%ecx
   30ae8:	89 cb                	mov    %ecx,%ebx
   30aea:	83 e0 fd             	and    $0xfffffffd,%eax
   30aed:	a8 04                	test   $0x4,%al
   30aef:	0f 84 61 f8 ff ff    	je     30356 <elf_zlib_inflate_table+0x2a6>
   30af5:	31 d2                	xor    %edx,%edx
   30af7:	b9 00 01 00 00       	mov    $0x100,%ecx
   30afc:	0f 1f 40 00          	nopl   0x0(%rax)
   30b00:	85 d9                	test   %ebx,%ecx
   30b02:	74 12                	je     30b16 <elf_zlib_inflate_table+0xa66>
   30b04:	89 ce                	mov    %ecx,%esi
   30b06:	f7 d6                	not    %esi
   30b08:	21 f3                	and    %esi,%ebx
   30b0a:	83 c2 01             	add    $0x1,%edx
   30b0d:	d1 e9                	shr    %ecx
   30b0f:	83 fa 09             	cmp    $0x9,%edx
   30b12:	72 ec                	jb     30b00 <elf_zlib_inflate_table+0xa50>
   30b14:	eb 04                	jmp    30b1a <elf_zlib_inflate_table+0xa6a>
   30b16:	01 d9                	add    %ebx,%ecx
   30b18:	89 cb                	mov    %ecx,%ebx
   30b1a:	83 e0 fb             	and    $0xfffffffb,%eax
   30b1d:	a8 08                	test   $0x8,%al
   30b1f:	0f 84 39 f8 ff ff    	je     3035e <elf_zlib_inflate_table+0x2ae>
   30b25:	31 d2                	xor    %edx,%edx
   30b27:	b9 80 00 00 00       	mov    $0x80,%ecx
   30b2c:	0f 1f 40 00          	nopl   0x0(%rax)
   30b30:	85 d9                	test   %ebx,%ecx
   30b32:	74 12                	je     30b46 <elf_zlib_inflate_table+0xa96>
   30b34:	89 ce                	mov    %ecx,%esi
   30b36:	f7 d6                	not    %esi
   30b38:	21 f3                	and    %esi,%ebx
   30b3a:	83 c2 01             	add    $0x1,%edx
   30b3d:	d1 e9                	shr    %ecx
   30b3f:	83 fa 08             	cmp    $0x8,%edx
   30b42:	72 ec                	jb     30b30 <elf_zlib_inflate_table+0xa80>
   30b44:	eb 04                	jmp    30b4a <elf_zlib_inflate_table+0xa9a>
   30b46:	01 d9                	add    %ebx,%ecx
   30b48:	89 cb                	mov    %ecx,%ebx
   30b4a:	83 e0 f7             	and    $0xfffffff7,%eax
   30b4d:	a8 10                	test   $0x10,%al
   30b4f:	0f 84 11 f8 ff ff    	je     30366 <elf_zlib_inflate_table+0x2b6>
   30b55:	31 d2                	xor    %edx,%edx
   30b57:	b9 40 00 00 00       	mov    $0x40,%ecx
   30b5c:	0f 1f 40 00          	nopl   0x0(%rax)
   30b60:	85 d9                	test   %ebx,%ecx
   30b62:	74 12                	je     30b76 <elf_zlib_inflate_table+0xac6>
   30b64:	89 ce                	mov    %ecx,%esi
   30b66:	f7 d6                	not    %esi
   30b68:	21 f3                	and    %esi,%ebx
   30b6a:	83 c2 01             	add    $0x1,%edx
   30b6d:	d1 e9                	shr    %ecx
   30b6f:	83 fa 07             	cmp    $0x7,%edx
   30b72:	72 ec                	jb     30b60 <elf_zlib_inflate_table+0xab0>
   30b74:	eb 04                	jmp    30b7a <elf_zlib_inflate_table+0xaca>
   30b76:	01 d9                	add    %ebx,%ecx
   30b78:	89 cb                	mov    %ecx,%ebx
   30b7a:	83 e0 ef             	and    $0xffffffef,%eax
   30b7d:	a8 20                	test   $0x20,%al
   30b7f:	0f 84 e9 f7 ff ff    	je     3036e <elf_zlib_inflate_table+0x2be>
   30b85:	31 d2                	xor    %edx,%edx
   30b87:	b9 20 00 00 00       	mov    $0x20,%ecx
   30b8c:	0f 1f 40 00          	nopl   0x0(%rax)
   30b90:	85 d9                	test   %ebx,%ecx
   30b92:	74 12                	je     30ba6 <elf_zlib_inflate_table+0xaf6>
   30b94:	89 ce                	mov    %ecx,%esi
   30b96:	f7 d6                	not    %esi
   30b98:	21 f3                	and    %esi,%ebx
   30b9a:	83 c2 01             	add    $0x1,%edx
   30b9d:	d1 e9                	shr    %ecx
   30b9f:	83 fa 06             	cmp    $0x6,%edx
   30ba2:	72 ec                	jb     30b90 <elf_zlib_inflate_table+0xae0>
   30ba4:	eb 04                	jmp    30baa <elf_zlib_inflate_table+0xafa>
   30ba6:	01 d9                	add    %ebx,%ecx
   30ba8:	89 cb                	mov    %ecx,%ebx
   30baa:	83 e0 df             	and    $0xffffffdf,%eax
   30bad:	a8 40                	test   $0x40,%al
   30baf:	0f 84 c1 f7 ff ff    	je     30376 <elf_zlib_inflate_table+0x2c6>
   30bb5:	31 d2                	xor    %edx,%edx
   30bb7:	b9 10 00 00 00       	mov    $0x10,%ecx
   30bbc:	0f 1f 40 00          	nopl   0x0(%rax)
   30bc0:	85 d9                	test   %ebx,%ecx
   30bc2:	74 12                	je     30bd6 <elf_zlib_inflate_table+0xb26>
   30bc4:	89 ce                	mov    %ecx,%esi
   30bc6:	f7 d6                	not    %esi
   30bc8:	21 f3                	and    %esi,%ebx
   30bca:	83 c2 01             	add    $0x1,%edx
   30bcd:	d1 e9                	shr    %ecx
   30bcf:	83 fa 05             	cmp    $0x5,%edx
   30bd2:	72 ec                	jb     30bc0 <elf_zlib_inflate_table+0xb10>
   30bd4:	eb 04                	jmp    30bda <elf_zlib_inflate_table+0xb2a>
   30bd6:	01 d9                	add    %ebx,%ecx
   30bd8:	89 cb                	mov    %ecx,%ebx
   30bda:	83 e0 bf             	and    $0xffffffbf,%eax
   30bdd:	84 c0                	test   %al,%al
   30bdf:	0f 89 99 f7 ff ff    	jns    3037e <elf_zlib_inflate_table+0x2ce>
   30be5:	31 d2                	xor    %edx,%edx
   30be7:	b9 08 00 00 00       	mov    $0x8,%ecx
   30bec:	0f 1f 40 00          	nopl   0x0(%rax)
   30bf0:	85 d9                	test   %ebx,%ecx
   30bf2:	0f 84 11 01 00 00    	je     30d09 <elf_zlib_inflate_table+0xc59>
   30bf8:	89 ce                	mov    %ecx,%esi
   30bfa:	f7 d6                	not    %esi
   30bfc:	21 f3                	and    %esi,%ebx
   30bfe:	83 c2 01             	add    $0x1,%edx
   30c01:	d1 e9                	shr    %ecx
   30c03:	83 fa 04             	cmp    $0x4,%edx
   30c06:	72 e8                	jb     30bf0 <elf_zlib_inflate_table+0xb40>
   30c08:	e9 00 01 00 00       	jmpq   30d0d <elf_zlib_inflate_table+0xc5d>
   30c0d:	01 d9                	add    %ebx,%ecx
   30c0f:	89 cb                	mov    %ecx,%ebx
   30c11:	25 7f ff 00 00       	and    $0xff7f,%eax
   30c16:	a9 00 01 00 00       	test   $0x100,%eax
   30c1b:	0f 84 9b f6 ff ff    	je     302bc <elf_zlib_inflate_table+0x20c>
   30c21:	b9 01 00 00 00       	mov    $0x1,%ecx
   30c26:	31 d2                	xor    %edx,%edx
   30c28:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   30c2f:	00 
   30c30:	85 d9                	test   %ebx,%ecx
   30c32:	74 1f                	je     30c53 <elf_zlib_inflate_table+0xba3>
   30c34:	89 ce                	mov    %ecx,%esi
   30c36:	f7 d6                	not    %esi
   30c38:	21 f3                	and    %esi,%ebx
   30c3a:	d1 e9                	shr    %ecx
   30c3c:	83 c2 ff             	add    $0xffffffff,%edx
   30c3f:	74 ef                	je     30c30 <elf_zlib_inflate_table+0xb80>
   30c41:	25 ff fe 00 00       	and    $0xfeff,%eax
   30c46:	85 c0                	test   %eax,%eax
   30c48:	0f 84 76 f6 ff ff    	je     302c4 <elf_zlib_inflate_table+0x214>
   30c4e:	e9 8e 01 00 00       	jmpq   30de1 <elf_zlib_inflate_table+0xd31>
   30c53:	01 d9                	add    %ebx,%ecx
   30c55:	89 cb                	mov    %ecx,%ebx
   30c57:	25 ff fe 00 00       	and    $0xfeff,%eax
   30c5c:	85 c0                	test   %eax,%eax
   30c5e:	0f 84 60 f6 ff ff    	je     302c4 <elf_zlib_inflate_table+0x214>
   30c64:	e9 78 01 00 00       	jmpq   30de1 <elf_zlib_inflate_table+0xd31>
   30c69:	01 d9                	add    %ebx,%ecx
   30c6b:	89 cb                	mov    %ecx,%ebx
   30c6d:	25 7f ff 00 00       	and    $0xff7f,%eax
   30c72:	a9 00 01 00 00       	test   $0x100,%eax
   30c77:	0f 84 a0 f6 ff ff    	je     3031d <elf_zlib_inflate_table+0x26d>
   30c7d:	31 d2                	xor    %edx,%edx
   30c7f:	b9 02 00 00 00       	mov    $0x2,%ecx
   30c84:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   30c8b:	00 00 00 
   30c8e:	66 90                	xchg   %ax,%ax
   30c90:	85 d9                	test   %ebx,%ecx
   30c92:	74 12                	je     30ca6 <elf_zlib_inflate_table+0xbf6>
   30c94:	89 ce                	mov    %ecx,%esi
   30c96:	f7 d6                	not    %esi
   30c98:	21 f3                	and    %esi,%ebx
   30c9a:	83 c2 01             	add    $0x1,%edx
   30c9d:	d1 e9                	shr    %ecx
   30c9f:	83 fa 02             	cmp    $0x2,%edx
   30ca2:	72 ec                	jb     30c90 <elf_zlib_inflate_table+0xbe0>
   30ca4:	eb 04                	jmp    30caa <elf_zlib_inflate_table+0xbfa>
   30ca6:	01 d9                	add    %ebx,%ecx
   30ca8:	89 cb                	mov    %ecx,%ebx
   30caa:	25 ff fe 00 00       	and    $0xfeff,%eax
   30caf:	a9 00 02 00 00       	test   $0x200,%eax
   30cb4:	0f 84 6e f6 ff ff    	je     30328 <elf_zlib_inflate_table+0x278>
   30cba:	b9 01 00 00 00       	mov    $0x1,%ecx
   30cbf:	31 d2                	xor    %edx,%edx
   30cc1:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   30cc8:	00 00 00 
   30ccb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   30cd0:	85 d9                	test   %ebx,%ecx
   30cd2:	74 1f                	je     30cf3 <elf_zlib_inflate_table+0xc43>
   30cd4:	89 ce                	mov    %ecx,%esi
   30cd6:	f7 d6                	not    %esi
   30cd8:	21 f3                	and    %esi,%ebx
   30cda:	d1 e9                	shr    %ecx
   30cdc:	83 c2 ff             	add    $0xffffffff,%edx
   30cdf:	74 ef                	je     30cd0 <elf_zlib_inflate_table+0xc20>
   30ce1:	25 ff fd 00 00       	and    $0xfdff,%eax
   30ce6:	85 c0                	test   %eax,%eax
   30ce8:	0f 84 42 f6 ff ff    	je     30330 <elf_zlib_inflate_table+0x280>
   30cee:	e9 ee 00 00 00       	jmpq   30de1 <elf_zlib_inflate_table+0xd31>
   30cf3:	01 d9                	add    %ebx,%ecx
   30cf5:	89 cb                	mov    %ecx,%ebx
   30cf7:	25 ff fd 00 00       	and    $0xfdff,%eax
   30cfc:	85 c0                	test   %eax,%eax
   30cfe:	0f 84 2c f6 ff ff    	je     30330 <elf_zlib_inflate_table+0x280>
   30d04:	e9 d8 00 00 00       	jmpq   30de1 <elf_zlib_inflate_table+0xd31>
   30d09:	01 d9                	add    %ebx,%ecx
   30d0b:	89 cb                	mov    %ecx,%ebx
   30d0d:	25 7f ff 00 00       	and    $0xff7f,%eax
   30d12:	a9 00 01 00 00       	test   $0x100,%eax
   30d17:	0f 84 6c f6 ff ff    	je     30389 <elf_zlib_inflate_table+0x2d9>
   30d1d:	31 d2                	xor    %edx,%edx
   30d1f:	b9 04 00 00 00       	mov    $0x4,%ecx
   30d24:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   30d2b:	00 00 00 
   30d2e:	66 90                	xchg   %ax,%ax
   30d30:	85 d9                	test   %ebx,%ecx
   30d32:	74 12                	je     30d46 <elf_zlib_inflate_table+0xc96>
   30d34:	89 ce                	mov    %ecx,%esi
   30d36:	f7 d6                	not    %esi
   30d38:	21 f3                	and    %esi,%ebx
   30d3a:	83 c2 01             	add    $0x1,%edx
   30d3d:	d1 e9                	shr    %ecx
   30d3f:	83 fa 03             	cmp    $0x3,%edx
   30d42:	72 ec                	jb     30d30 <elf_zlib_inflate_table+0xc80>
   30d44:	eb 04                	jmp    30d4a <elf_zlib_inflate_table+0xc9a>
   30d46:	01 d9                	add    %ebx,%ecx
   30d48:	89 cb                	mov    %ecx,%ebx
   30d4a:	25 ff fe 00 00       	and    $0xfeff,%eax
   30d4f:	a9 00 02 00 00       	test   $0x200,%eax
   30d54:	0f 84 3a f6 ff ff    	je     30394 <elf_zlib_inflate_table+0x2e4>
   30d5a:	31 d2                	xor    %edx,%edx
   30d5c:	b9 02 00 00 00       	mov    $0x2,%ecx
   30d61:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   30d68:	00 00 00 
   30d6b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   30d70:	85 d9                	test   %ebx,%ecx
   30d72:	74 12                	je     30d86 <elf_zlib_inflate_table+0xcd6>
   30d74:	89 ce                	mov    %ecx,%esi
   30d76:	f7 d6                	not    %esi
   30d78:	21 f3                	and    %esi,%ebx
   30d7a:	83 c2 01             	add    $0x1,%edx
   30d7d:	d1 e9                	shr    %ecx
   30d7f:	83 fa 02             	cmp    $0x2,%edx
   30d82:	72 ec                	jb     30d70 <elf_zlib_inflate_table+0xcc0>
   30d84:	eb 04                	jmp    30d8a <elf_zlib_inflate_table+0xcda>
   30d86:	01 d9                	add    %ebx,%ecx
   30d88:	89 cb                	mov    %ecx,%ebx
   30d8a:	25 ff fd 00 00       	and    $0xfdff,%eax
   30d8f:	a9 00 04 00 00       	test   $0x400,%eax
   30d94:	0f 84 05 f6 ff ff    	je     3039f <elf_zlib_inflate_table+0x2ef>
   30d9a:	b9 01 00 00 00       	mov    $0x1,%ecx
   30d9f:	31 d2                	xor    %edx,%edx
   30da1:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   30da8:	00 00 00 
   30dab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   30db0:	85 d9                	test   %ebx,%ecx
   30db2:	74 1c                	je     30dd0 <elf_zlib_inflate_table+0xd20>
   30db4:	89 ce                	mov    %ecx,%esi
   30db6:	f7 d6                	not    %esi
   30db8:	21 f3                	and    %esi,%ebx
   30dba:	d1 e9                	shr    %ecx
   30dbc:	83 c2 ff             	add    $0xffffffff,%edx
   30dbf:	74 ef                	je     30db0 <elf_zlib_inflate_table+0xd00>
   30dc1:	25 ff fb 00 00       	and    $0xfbff,%eax
   30dc6:	85 c0                	test   %eax,%eax
   30dc8:	0f 84 d9 f5 ff ff    	je     303a7 <elf_zlib_inflate_table+0x2f7>
   30dce:	eb 11                	jmp    30de1 <elf_zlib_inflate_table+0xd31>
   30dd0:	01 d9                	add    %ebx,%ecx
   30dd2:	89 cb                	mov    %ecx,%ebx
   30dd4:	25 ff fb 00 00       	and    $0xfbff,%eax
   30dd9:	85 c0                	test   %eax,%eax
   30ddb:	0f 84 c6 f5 ff ff    	je     303a7 <elf_zlib_inflate_table+0x2f7>
   30de1:	45 31 f6             	xor    %r14d,%r14d
   30de4:	44 89 f0             	mov    %r14d,%eax
   30de7:	48 81 c4 b8 00 00 00 	add    $0xb8,%rsp
   30dee:	5b                   	pop    %rbx
   30def:	41 5c                	pop    %r12
   30df1:	41 5d                	pop    %r13
   30df3:	41 5e                	pop    %r14
   30df5:	41 5f                	pop    %r15
   30df7:	5d                   	pop    %rbp
   30df8:	c3                   	retq   
   30df9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000030e00 <elf_symbol_compare>:
   30e00:	48 8b 47 08          	mov    0x8(%rdi),%rax
   30e04:	31 c9                	xor    %ecx,%ecx
   30e06:	48 3b 46 08          	cmp    0x8(%rsi),%rax
   30e0a:	0f 97 c1             	seta   %cl
   30e0d:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   30e12:	0f 43 c1             	cmovae %ecx,%eax
   30e15:	c3                   	retq   
   30e16:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   30e1d:	00 00 00 

0000000000030e20 <elf_symbol_search>:
   30e20:	48 8b 0f             	mov    (%rdi),%rcx
   30e23:	48 8b 56 08          	mov    0x8(%rsi),%rdx
   30e27:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   30e2c:	48 39 d1             	cmp    %rdx,%rcx
   30e2f:	72 0c                	jb     30e3d <elf_symbol_search+0x1d>
   30e31:	48 03 56 10          	add    0x10(%rsi),%rdx
   30e35:	31 c0                	xor    %eax,%eax
   30e37:	48 39 d1             	cmp    %rdx,%rcx
   30e3a:	0f 93 c0             	setae  %al
   30e3d:	c3                   	retq   
   30e3e:	66 90                	xchg   %ax,%ax

0000000000030e40 <__rdos_backtrace_alloc>:
   30e40:	41 57                	push   %r15
   30e42:	41 56                	push   %r14
   30e44:	53                   	push   %rbx
   30e45:	49 89 ce             	mov    %rcx,%r14
   30e48:	49 89 d7             	mov    %rdx,%r15
   30e4b:	48 89 f7             	mov    %rsi,%rdi
   30e4e:	e8 8d 32 fd ff       	callq  40e0 <malloc@plt>
   30e53:	48 89 c3             	mov    %rax,%rbx
   30e56:	4d 85 ff             	test   %r15,%r15
   30e59:	74 19                	je     30e74 <__rdos_backtrace_alloc+0x34>
   30e5b:	48 85 db             	test   %rbx,%rbx
   30e5e:	75 14                	jne    30e74 <__rdos_backtrace_alloc+0x34>
   30e60:	e8 5b 32 fd ff       	callq  40c0 <__errno_location@plt>
   30e65:	8b 10                	mov    (%rax),%edx
   30e67:	48 8d 35 b2 dc 00 00 	lea    0xdcb2(%rip),%rsi        # 3eb20 <elf_crc32.crc32_table+0x400>
   30e6e:	4c 89 f7             	mov    %r14,%rdi
   30e71:	41 ff d7             	callq  *%r15
   30e74:	48 89 d8             	mov    %rbx,%rax
   30e77:	5b                   	pop    %rbx
   30e78:	41 5e                	pop    %r14
   30e7a:	41 5f                	pop    %r15
   30e7c:	c3                   	retq   
   30e7d:	0f 1f 00             	nopl   (%rax)

0000000000030e80 <__rdos_backtrace_free>:
   30e80:	48 89 f7             	mov    %rsi,%rdi
   30e83:	e9 28 32 fd ff       	jmpq   40b0 <free@plt>
   30e88:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   30e8f:	00 

0000000000030e90 <__rdos_backtrace_vector_grow>:
   30e90:	41 57                	push   %r15
   30e92:	41 56                	push   %r14
   30e94:	41 55                	push   %r13
   30e96:	41 54                	push   %r12
   30e98:	53                   	push   %rbx
   30e99:	4d 89 c7             	mov    %r8,%r15
   30e9c:	49 89 f6             	mov    %rsi,%r14
   30e9f:	49 8b 58 10          	mov    0x10(%r8),%rbx
   30ea3:	48 39 f3             	cmp    %rsi,%rbx
   30ea6:	73 21                	jae    30ec9 <__rdos_backtrace_vector_grow+0x39>
   30ea8:	49 89 cd             	mov    %rcx,%r13
   30eab:	49 89 d4             	mov    %rdx,%r12
   30eae:	49 8b 5f 08          	mov    0x8(%r15),%rbx
   30eb2:	48 85 db             	test   %rbx,%rbx
   30eb5:	74 1b                	je     30ed2 <__rdos_backtrace_vector_grow+0x42>
   30eb7:	48 81 fb 00 10 00 00 	cmp    $0x1000,%rbx
   30ebe:	72 1b                	jb     30edb <__rdos_backtrace_vector_grow+0x4b>
   30ec0:	48 8d 83 00 10 00 00 	lea    0x1000(%rbx),%rax
   30ec7:	eb 16                	jmp    30edf <__rdos_backtrace_vector_grow+0x4f>
   30ec9:	49 8b 07             	mov    (%r15),%rax
   30ecc:	49 8b 4f 08          	mov    0x8(%r15),%rcx
   30ed0:	eb 35                	jmp    30f07 <__rdos_backtrace_vector_grow+0x77>
   30ed2:	4c 89 f0             	mov    %r14,%rax
   30ed5:	48 c1 e0 05          	shl    $0x5,%rax
   30ed9:	eb 04                	jmp    30edf <__rdos_backtrace_vector_grow+0x4f>
   30edb:	48 8d 04 1b          	lea    (%rbx,%rbx,1),%rax
   30edf:	4c 01 f3             	add    %r14,%rbx
   30ee2:	48 39 d8             	cmp    %rbx,%rax
   30ee5:	48 0f 43 d8          	cmovae %rax,%rbx
   30ee9:	49 8b 3f             	mov    (%r15),%rdi
   30eec:	48 89 de             	mov    %rbx,%rsi
   30eef:	e8 f4 31 fd ff       	callq  40e8 <realloc@plt>
   30ef4:	48 85 c0             	test   %rax,%rax
   30ef7:	74 29                	je     30f22 <__rdos_backtrace_vector_grow+0x92>
   30ef9:	49 89 07             	mov    %rax,(%r15)
   30efc:	49 8b 4f 08          	mov    0x8(%r15),%rcx
   30f00:	48 29 cb             	sub    %rcx,%rbx
   30f03:	49 89 5f 10          	mov    %rbx,0x10(%r15)
   30f07:	48 01 c8             	add    %rcx,%rax
   30f0a:	4c 01 f1             	add    %r14,%rcx
   30f0d:	49 89 4f 08          	mov    %rcx,0x8(%r15)
   30f11:	4c 29 f3             	sub    %r14,%rbx
   30f14:	49 89 5f 10          	mov    %rbx,0x10(%r15)
   30f18:	5b                   	pop    %rbx
   30f19:	41 5c                	pop    %r12
   30f1b:	41 5d                	pop    %r13
   30f1d:	41 5e                	pop    %r14
   30f1f:	41 5f                	pop    %r15
   30f21:	c3                   	retq   
   30f22:	e8 99 31 fd ff       	callq  40c0 <__errno_location@plt>
   30f27:	8b 10                	mov    (%rax),%edx
   30f29:	48 8d 35 f7 db 00 00 	lea    0xdbf7(%rip),%rsi        # 3eb27 <elf_crc32.crc32_table+0x407>
   30f30:	4c 89 ef             	mov    %r13,%rdi
   30f33:	41 ff d4             	callq  *%r12
   30f36:	31 c0                	xor    %eax,%eax
   30f38:	eb de                	jmp    30f18 <__rdos_backtrace_vector_grow+0x88>
   30f3a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000030f40 <__rdos_backtrace_vector_finish>:
   30f40:	41 57                	push   %r15
   30f42:	41 56                	push   %r14
   30f44:	41 54                	push   %r12
   30f46:	53                   	push   %rbx
   30f47:	50                   	push   %rax
   30f48:	49 89 cf             	mov    %rcx,%r15
   30f4b:	49 89 d6             	mov    %rdx,%r14
   30f4e:	48 89 f3             	mov    %rsi,%rbx
   30f51:	48 8b 3e             	mov    (%rsi),%rdi
   30f54:	48 8b 76 08          	mov    0x8(%rsi),%rsi
   30f58:	e8 8b 31 fd ff       	callq  40e8 <realloc@plt>
   30f5d:	49 89 c4             	mov    %rax,%r12
   30f60:	48 89 03             	mov    %rax,(%rbx)
   30f63:	48 85 c0             	test   %rax,%rax
   30f66:	74 10                	je     30f78 <__rdos_backtrace_vector_finish+0x38>
   30f68:	0f 57 c0             	xorps  %xmm0,%xmm0
   30f6b:	0f 11 03             	movups %xmm0,(%rbx)
   30f6e:	48 c7 43 10 00 00 00 	movq   $0x0,0x10(%rbx)
   30f75:	00 
   30f76:	eb 14                	jmp    30f8c <__rdos_backtrace_vector_finish+0x4c>
   30f78:	e8 43 31 fd ff       	callq  40c0 <__errno_location@plt>
   30f7d:	8b 10                	mov    (%rax),%edx
   30f7f:	48 8d 35 a1 db 00 00 	lea    0xdba1(%rip),%rsi        # 3eb27 <elf_crc32.crc32_table+0x407>
   30f86:	4c 89 ff             	mov    %r15,%rdi
   30f89:	41 ff d6             	callq  *%r14
   30f8c:	4c 89 e0             	mov    %r12,%rax
   30f8f:	48 83 c4 08          	add    $0x8,%rsp
   30f93:	5b                   	pop    %rbx
   30f94:	41 5c                	pop    %r12
   30f96:	41 5e                	pop    %r14
   30f98:	41 5f                	pop    %r15
   30f9a:	c3                   	retq   
   30f9b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000030fa0 <__rdos_backtrace_vector_release>:
   30fa0:	41 57                	push   %r15
   30fa2:	41 56                	push   %r14
   30fa4:	53                   	push   %rbx
   30fa5:	49 89 cf             	mov    %rcx,%r15
   30fa8:	49 89 d6             	mov    %rdx,%r14
   30fab:	48 89 f3             	mov    %rsi,%rbx
   30fae:	48 8b 3e             	mov    (%rsi),%rdi
   30fb1:	48 8b 76 08          	mov    0x8(%rsi),%rsi
   30fb5:	e8 2e 31 fd ff       	callq  40e8 <realloc@plt>
   30fba:	48 89 03             	mov    %rax,(%rbx)
   30fbd:	48 85 c0             	test   %rax,%rax
   30fc0:	74 13                	je     30fd5 <__rdos_backtrace_vector_release+0x35>
   30fc2:	48 c7 43 10 00 00 00 	movq   $0x0,0x10(%rbx)
   30fc9:	00 
   30fca:	b8 01 00 00 00       	mov    $0x1,%eax
   30fcf:	5b                   	pop    %rbx
   30fd0:	41 5e                	pop    %r14
   30fd2:	41 5f                	pop    %r15
   30fd4:	c3                   	retq   
   30fd5:	e8 e6 30 fd ff       	callq  40c0 <__errno_location@plt>
   30fda:	8b 10                	mov    (%rax),%edx
   30fdc:	48 8d 35 44 db 00 00 	lea    0xdb44(%rip),%rsi        # 3eb27 <elf_crc32.crc32_table+0x407>
   30fe3:	4c 89 ff             	mov    %r15,%rdi
   30fe6:	41 ff d6             	callq  *%r14
   30fe9:	31 c0                	xor    %eax,%eax
   30feb:	5b                   	pop    %rbx
   30fec:	41 5e                	pop    %r14
   30fee:	41 5f                	pop    %r15
   30ff0:	c3                   	retq   
   30ff1:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   30ff8:	00 00 00 
   30ffb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000031000 <__rdos_backtrace_dwarf_add>:
   31000:	55                   	push   %rbp
   31001:	41 57                	push   %r15
   31003:	41 56                	push   %r14
   31005:	41 55                	push   %r13
   31007:	41 54                	push   %r12
   31009:	53                   	push   %rbx
   3100a:	48 81 ec 38 02 00 00 	sub    $0x238,%rsp
   31011:	4c 89 8c 24 68 01 00 	mov    %r9,0x168(%rsp)
   31018:	00 
   31019:	4d 89 c7             	mov    %r8,%r15
   3101c:	49 89 cd             	mov    %rcx,%r13
   3101f:	48 89 fd             	mov    %rdi,%rbp
   31022:	4c 8b a4 24 b0 02 00 	mov    0x2b0(%rsp),%r12
   31029:	00 
   3102a:	4c 8b 84 24 a8 02 00 	mov    0x2a8(%rsp),%r8
   31031:	00 
   31032:	44 8b b4 24 a0 02 00 	mov    0x2a0(%rsp),%r14d
   31039:	00 
   3103a:	66 0f ef c0          	pxor   %xmm0,%xmm0
   3103e:	66 0f 7f 84 24 10 01 	movdqa %xmm0,0x110(%rsp)
   31045:	00 00 
   31047:	66 0f 7f 84 24 20 01 	movdqa %xmm0,0x120(%rsp)
   3104e:	00 00 
   31050:	48 8d 05 df d0 00 00 	lea    0xd0df(%rip),%rax        # 3e136 <str.0+0x316>
   31057:	48 89 84 24 90 00 00 	mov    %rax,0x90(%rsp)
   3105e:	00 
   3105f:	48 89 94 24 98 00 00 	mov    %rdx,0x98(%rsp)
   31066:	00 
   31067:	48 89 94 24 a0 00 00 	mov    %rdx,0xa0(%rsp)
   3106e:	00 
   3106f:	48 89 8c 24 a8 00 00 	mov    %rcx,0xa8(%rsp)
   31076:	00 
   31077:	44 89 b4 24 b0 00 00 	mov    %r14d,0xb0(%rsp)
   3107e:	00 
   3107f:	4c 89 84 24 b8 00 00 	mov    %r8,0xb8(%rsp)
   31086:	00 
   31087:	4c 89 a4 24 c0 00 00 	mov    %r12,0xc0(%rsp)
   3108e:	00 
   3108f:	c7 84 24 c8 00 00 00 	movl   $0x0,0xc8(%rsp)
   31096:	00 00 00 00 
   3109a:	48 85 c9             	test   %rcx,%rcx
   3109d:	4c 89 bc 24 60 01 00 	mov    %r15,0x160(%rsp)
   310a4:	00 
   310a5:	48 89 94 24 58 01 00 	mov    %rdx,0x158(%rsp)
   310ac:	00 
   310ad:	48 89 b4 24 08 01 00 	mov    %rsi,0x108(%rsp)
   310b4:	00 
   310b5:	0f 84 66 14 00 00    	je     32521 <__rdos_backtrace_dwarf_add+0x1521>
   310bb:	49 89 d2             	mov    %rdx,%r10
   310be:	31 c0                	xor    %eax,%eax
   310c0:	4c 89 eb             	mov    %r13,%rbx
   310c3:	48 89 6c 24 18       	mov    %rbp,0x18(%rsp)
   310c8:	85 c0                	test   %eax,%eax
   310ca:	0f 85 ec 18 00 00    	jne    329bc <__rdos_backtrace_dwarf_add+0x19bc>
   310d0:	48 83 fb 03          	cmp    $0x3,%rbx
   310d4:	4d 89 c4             	mov    %r8,%r12
   310d7:	0f 86 0d 17 00 00    	jbe    327ea <__rdos_backtrace_dwarf_add+0x17ea>
   310dd:	49 8d 42 04          	lea    0x4(%r10),%rax
   310e1:	48 89 84 24 a0 00 00 	mov    %rax,0xa0(%rsp)
   310e8:	00 
   310e9:	48 83 c3 fc          	add    $0xfffffffffffffffc,%rbx
   310ed:	48 89 9c 24 a8 00 00 	mov    %rbx,0xa8(%rsp)
   310f4:	00 
   310f5:	83 bc 24 b0 00 00 00 	cmpl   $0x0,0xb0(%rsp)
   310fc:	00 
   310fd:	74 21                	je     31120 <__rdos_backtrace_dwarf_add+0x120>
   310ff:	41 0f b6 02          	movzbl (%r10),%eax
   31103:	c1 e0 18             	shl    $0x18,%eax
   31106:	41 0f b6 4a 01       	movzbl 0x1(%r10),%ecx
   3110b:	c1 e1 10             	shl    $0x10,%ecx
   3110e:	09 c1                	or     %eax,%ecx
   31110:	41 0f b6 42 02       	movzbl 0x2(%r10),%eax
   31115:	c1 e0 08             	shl    $0x8,%eax
   31118:	09 c8                	or     %ecx,%eax
   3111a:	49 8d 4a 03          	lea    0x3(%r10),%rcx
   3111e:	eb 1f                	jmp    3113f <__rdos_backtrace_dwarf_add+0x13f>
   31120:	41 0f b6 42 03       	movzbl 0x3(%r10),%eax
   31125:	c1 e0 18             	shl    $0x18,%eax
   31128:	41 0f b6 4a 02       	movzbl 0x2(%r10),%ecx
   3112d:	c1 e1 10             	shl    $0x10,%ecx
   31130:	09 c1                	or     %eax,%ecx
   31132:	41 0f b6 42 01       	movzbl 0x1(%r10),%eax
   31137:	c1 e0 08             	shl    $0x8,%eax
   3113a:	09 c8                	or     %ecx,%eax
   3113c:	4c 89 d1             	mov    %r10,%rcx
   3113f:	0f b6 09             	movzbl (%rcx),%ecx
   31142:	89 c0                	mov    %eax,%eax
   31144:	48 09 c8             	or     %rcx,%rax
   31147:	45 31 c0             	xor    %r8d,%r8d
   3114a:	83 f8 ff             	cmp    $0xffffffff,%eax
   3114d:	75 21                	jne    31170 <__rdos_backtrace_dwarf_add+0x170>
   3114f:	48 8d bc 24 90 00 00 	lea    0x90(%rsp),%rdi
   31156:	00 
   31157:	4c 89 d3             	mov    %r10,%rbx
   3115a:	e8 71 1b 00 00       	callq  32cd0 <read_uint64>
   3115f:	49 89 da             	mov    %rbx,%r10
   31162:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   31168:	48 8b 9c 24 a8 00 00 	mov    0xa8(%rsp),%rbx
   3116f:	00 
   31170:	f3 0f 6f 84 24 90 00 	movdqu 0x90(%rsp),%xmm0
   31177:	00 00 
   31179:	0f 10 8c 24 a0 00 00 	movups 0xa0(%rsp),%xmm1
   31180:	00 
   31181:	0f 10 94 24 b0 00 00 	movups 0xb0(%rsp),%xmm2
   31188:	00 
   31189:	0f 10 9c 24 c0 00 00 	movups 0xc0(%rsp),%xmm3
   31190:	00 
   31191:	0f 29 4c 24 50       	movaps %xmm1,0x50(%rsp)
   31196:	0f 29 5c 24 70       	movaps %xmm3,0x70(%rsp)
   3119b:	0f 29 54 24 60       	movaps %xmm2,0x60(%rsp)
   311a0:	66 0f 7f 44 24 40    	movdqa %xmm0,0x40(%rsp)
   311a6:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
   311ab:	48 29 c3             	sub    %rax,%rbx
   311ae:	0f 82 53 17 00 00    	jb     32907 <__rdos_backtrace_dwarf_add+0x1907>
   311b4:	48 8b ac 24 a0 00 00 	mov    0xa0(%rsp),%rbp
   311bb:	00 
   311bc:	48 01 c5             	add    %rax,%rbp
   311bf:	48 89 ac 24 a0 00 00 	mov    %rbp,0xa0(%rsp)
   311c6:	00 
   311c7:	48 89 9c 24 a8 00 00 	mov    %rbx,0xa8(%rsp)
   311ce:	00 
   311cf:	4c 8b 4c 24 50       	mov    0x50(%rsp),%r9
   311d4:	48 83 f8 01          	cmp    $0x1,%rax
   311d8:	0f 86 d2 16 00 00    	jbe    328b0 <__rdos_backtrace_dwarf_add+0x18b0>
   311de:	4d 8d 59 02          	lea    0x2(%r9),%r11
   311e2:	4c 89 5c 24 50       	mov    %r11,0x50(%rsp)
   311e7:	48 8d 50 fe          	lea    -0x2(%rax),%rdx
   311eb:	48 89 54 24 58       	mov    %rdx,0x58(%rsp)
   311f0:	8b 4c 24 60          	mov    0x60(%rsp),%ecx
   311f4:	31 f6                	xor    %esi,%esi
   311f6:	31 ff                	xor    %edi,%edi
   311f8:	85 c9                	test   %ecx,%ecx
   311fa:	40 0f 94 c6          	sete   %sil
   311fe:	40 0f 95 c7          	setne  %dil
   31202:	41 0f b6 34 31       	movzbl (%r9,%rsi,1),%esi
   31207:	c1 e6 08             	shl    $0x8,%esi
   3120a:	45 0f b6 34 39       	movzbl (%r9,%rdi,1),%r14d
   3120f:	48 89 b4 24 88 00 00 	mov    %rsi,0x88(%rsp)
   31216:	00 
   31217:	42 8d 34 36          	lea    (%rsi,%r14,1),%esi
   3121b:	83 c6 fe             	add    $0xfffffffe,%esi
   3121e:	66 83 fe 03          	cmp    $0x3,%si
   31222:	0f 83 51 17 00 00    	jae    32979 <__rdos_backtrace_dwarf_add+0x1979>
   31228:	45 85 c0             	test   %r8d,%r8d
   3122b:	48 89 9c 24 48 01 00 	mov    %rbx,0x148(%rsp)
   31232:	00 
   31233:	4c 89 94 24 50 01 00 	mov    %r10,0x150(%rsp)
   3123a:	00 
   3123b:	48 89 ac 24 40 01 00 	mov    %rbp,0x140(%rsp)
   31242:	00 
   31243:	44 89 84 24 f4 00 00 	mov    %r8d,0xf4(%rsp)
   3124a:	00 
   3124b:	74 23                	je     31270 <__rdos_backtrace_dwarf_add+0x270>
   3124d:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
   31252:	e8 79 1a 00 00       	callq  32cd0 <read_uint64>
   31257:	48 8b 94 24 78 02 00 	mov    0x278(%rsp),%rdx
   3125e:	00 
   3125f:	48 39 d0             	cmp    %rdx,%rax
   31262:	0f 82 28 01 00 00    	jb     31390 <__rdos_backtrace_dwarf_add+0x390>
   31268:	e9 65 17 00 00       	jmpq   329d2 <__rdos_backtrace_dwarf_add+0x19d2>
   3126d:	0f 1f 00             	nopl   (%rax)
   31270:	48 83 fa 03          	cmp    $0x3,%rdx
   31274:	77 1f                	ja     31295 <__rdos_backtrace_dwarf_add+0x295>
   31276:	83 7c 24 78 00       	cmpl   $0x0,0x78(%rsp)
   3127b:	74 71                	je     312ee <__rdos_backtrace_dwarf_add+0x2ee>
   3127d:	31 c0                	xor    %eax,%eax
   3127f:	48 8b 94 24 78 02 00 	mov    0x278(%rsp),%rdx
   31286:	00 
   31287:	48 39 d0             	cmp    %rdx,%rax
   3128a:	0f 82 00 01 00 00    	jb     31390 <__rdos_backtrace_dwarf_add+0x390>
   31290:	e9 3d 17 00 00       	jmpq   329d2 <__rdos_backtrace_dwarf_add+0x19d2>
   31295:	49 8d 51 06          	lea    0x6(%r9),%rdx
   31299:	48 83 c0 fa          	add    $0xfffffffffffffffa,%rax
   3129d:	48 89 54 24 50       	mov    %rdx,0x50(%rsp)
   312a2:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
   312a7:	85 c9                	test   %ecx,%ecx
   312a9:	0f 84 9b 00 00 00    	je     3134a <__rdos_backtrace_dwarf_add+0x34a>
   312af:	41 0f b6 41 02       	movzbl 0x2(%r9),%eax
   312b4:	48 c1 e0 18          	shl    $0x18,%rax
   312b8:	41 0f b6 49 03       	movzbl 0x3(%r9),%ecx
   312bd:	48 c1 e1 10          	shl    $0x10,%rcx
   312c1:	48 09 c1             	or     %rax,%rcx
   312c4:	41 0f b6 51 04       	movzbl 0x4(%r9),%edx
   312c9:	48 c1 e2 08          	shl    $0x8,%rdx
   312cd:	48 09 ca             	or     %rcx,%rdx
   312d0:	41 0f b6 41 05       	movzbl 0x5(%r9),%eax
   312d5:	48 09 d0             	or     %rdx,%rax
   312d8:	48 8b 94 24 78 02 00 	mov    0x278(%rsp),%rdx
   312df:	00 
   312e0:	48 39 d0             	cmp    %rdx,%rax
   312e3:	0f 82 a7 00 00 00    	jb     31390 <__rdos_backtrace_dwarf_add+0x390>
   312e9:	e9 e4 16 00 00       	jmpq   329d2 <__rdos_backtrace_dwarf_add+0x19d2>
   312ee:	4c 8b 44 24 40       	mov    0x40(%rsp),%r8
   312f3:	44 2b 5c 24 48       	sub    0x48(%rsp),%r11d
   312f8:	be c8 00 00 00       	mov    $0xc8,%esi
   312fd:	48 8d 9c 24 70 01 00 	lea    0x170(%rsp),%rbx
   31304:	00 
   31305:	48 89 df             	mov    %rbx,%rdi
   31308:	48 8d 15 b8 db 00 00 	lea    0xdbb8(%rip),%rdx        # 3eec7 <elf_crc32.crc32_table+0x7a7>
   3130f:	48 8d 0d a1 db 00 00 	lea    0xdba1(%rip),%rcx        # 3eeb7 <elf_crc32.crc32_table+0x797>
   31316:	45 89 d9             	mov    %r11d,%r9d
   31319:	31 c0                	xor    %eax,%eax
   3131b:	e8 f0 2c fd ff       	callq  4010 <snprintf@plt>
   31320:	48 8b 7c 24 70       	mov    0x70(%rsp),%rdi
   31325:	48 89 de             	mov    %rbx,%rsi
   31328:	31 d2                	xor    %edx,%edx
   3132a:	ff 54 24 68          	callq  *0x68(%rsp)
   3132e:	c7 44 24 78 01 00 00 	movl   $0x1,0x78(%rsp)
   31335:	00 
   31336:	31 c0                	xor    %eax,%eax
   31338:	48 8b 94 24 78 02 00 	mov    0x278(%rsp),%rdx
   3133f:	00 
   31340:	48 39 d0             	cmp    %rdx,%rax
   31343:	72 4b                	jb     31390 <__rdos_backtrace_dwarf_add+0x390>
   31345:	e9 88 16 00 00       	jmpq   329d2 <__rdos_backtrace_dwarf_add+0x19d2>
   3134a:	41 0f b6 41 05       	movzbl 0x5(%r9),%eax
   3134f:	48 c1 e0 18          	shl    $0x18,%rax
   31353:	41 0f b6 49 04       	movzbl 0x4(%r9),%ecx
   31358:	48 c1 e1 10          	shl    $0x10,%rcx
   3135c:	48 09 c1             	or     %rax,%rcx
   3135f:	41 0f b6 51 03       	movzbl 0x3(%r9),%edx
   31364:	48 c1 e2 08          	shl    $0x8,%rdx
   31368:	48 09 ca             	or     %rcx,%rdx
   3136b:	41 0f b6 41 02       	movzbl 0x2(%r9),%eax
   31370:	48 09 d0             	or     %rdx,%rax
   31373:	48 8b 94 24 78 02 00 	mov    0x278(%rsp),%rdx
   3137a:	00 
   3137b:	48 39 d0             	cmp    %rdx,%rax
   3137e:	0f 83 4e 16 00 00    	jae    329d2 <__rdos_backtrace_dwarf_add+0x19d2>
   31384:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   3138b:	00 00 00 
   3138e:	66 90                	xchg   %ax,%ax
   31390:	4c 89 ac 24 e8 00 00 	mov    %r13,0xe8(%rsp)
   31397:	00 
   31398:	48 8b 8c 24 88 00 00 	mov    0x88(%rsp),%rcx
   3139f:	00 
   313a0:	44 09 f1             	or     %r14d,%ecx
   313a3:	48 89 8c 24 88 00 00 	mov    %rcx,0x88(%rsp)
   313aa:	00 
   313ab:	48 8b 8c 24 70 02 00 	mov    0x270(%rsp),%rcx
   313b2:	00 
   313b3:	4c 8d 2c 01          	lea    (%rcx,%rax,1),%r13
   313b7:	49 89 d6             	mov    %rdx,%r14
   313ba:	49 29 c6             	sub    %rax,%r14
   313bd:	31 c0                	xor    %eax,%eax
   313bf:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   313c4:	4c 89 b4 24 d8 00 00 	mov    %r14,0xd8(%rsp)
   313cb:	00 
   313cc:	4c 89 6c 24 28       	mov    %r13,0x28(%rsp)
   313d1:	31 c0                	xor    %eax,%eax
   313d3:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   313d8:	b9 02 00 00 00       	mov    $0x2,%ecx
   313dd:	4c 29 f1             	sub    %r14,%rcx
   313e0:	31 ed                	xor    %ebp,%ebp
   313e2:	45 31 e4             	xor    %r12d,%r12d
   313e5:	31 c0                	xor    %eax,%eax
   313e7:	4d 85 f6             	test   %r14,%r14
   313ea:	75 41                	jne    3142d <__rdos_backtrace_dwarf_add+0x42d>
   313ec:	e9 71 12 00 00       	jmpq   32662 <__rdos_backtrace_dwarf_add+0x1662>
   313f1:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   313f8:	00 00 00 
   313fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   31400:	44 89 fa             	mov    %r15d,%edx
   31403:	83 e2 7f             	and    $0x7f,%edx
   31406:	44 89 e1             	mov    %r12d,%ecx
   31409:	48 d3 e2             	shl    %cl,%rdx
   3140c:	48 09 d5             	or     %rdx,%rbp
   3140f:	49 83 c6 ff          	add    $0xffffffffffffffff,%r14
   31413:	41 83 c4 07          	add    $0x7,%r12d
   31417:	48 8d 4b 01          	lea    0x1(%rbx),%rcx
   3141b:	45 84 ff             	test   %r15b,%r15b
   3141e:	0f 89 7c 00 00 00    	jns    314a0 <__rdos_backtrace_dwarf_add+0x4a0>
   31424:	4d 85 f6             	test   %r14,%r14
   31427:	0f 84 35 12 00 00    	je     32662 <__rdos_backtrace_dwarf_add+0x1662>
   3142d:	48 89 cb             	mov    %rcx,%rbx
   31430:	45 0f b6 7d 00       	movzbl 0x0(%r13),%r15d
   31435:	49 83 c5 01          	add    $0x1,%r13
   31439:	41 83 fc 3f          	cmp    $0x3f,%r12d
   3143d:	76 c1                	jbe    31400 <__rdos_backtrace_dwarf_add+0x400>
   3143f:	85 c0                	test   %eax,%eax
   31441:	75 cc                	jne    3140f <__rdos_backtrace_dwarf_add+0x40f>
   31443:	45 89 e9             	mov    %r13d,%r9d
   31446:	48 8b 84 24 70 02 00 	mov    0x270(%rsp),%rax
   3144d:	00 
   3144e:	41 29 c1             	sub    %eax,%r9d
   31451:	be c8 00 00 00       	mov    $0xc8,%esi
   31456:	48 8d 84 24 70 01 00 	lea    0x170(%rsp),%rax
   3145d:	00 
   3145e:	48 89 c7             	mov    %rax,%rdi
   31461:	48 8d 15 5f da 00 00 	lea    0xda5f(%rip),%rdx        # 3eec7 <elf_crc32.crc32_table+0x7a7>
   31468:	48 8d 0d ef da 00 00 	lea    0xdaef(%rip),%rcx        # 3ef5e <elf_crc32.crc32_table+0x83e>
   3146f:	4c 8d 05 d8 cc 00 00 	lea    0xccd8(%rip),%r8        # 3e14e <str.0+0x32e>
   31476:	31 c0                	xor    %eax,%eax
   31478:	e8 93 2b fd ff       	callq  4010 <snprintf@plt>
   3147d:	48 8b bc 24 b0 02 00 	mov    0x2b0(%rsp),%rdi
   31484:	00 
   31485:	48 8d b4 24 70 01 00 	lea    0x170(%rsp),%rsi
   3148c:	00 
   3148d:	31 d2                	xor    %edx,%edx
   3148f:	ff 94 24 a8 02 00 00 	callq  *0x2a8(%rsp)
   31496:	b8 01 00 00 00       	mov    $0x1,%eax
   3149b:	e9 6f ff ff ff       	jmpq   3140f <__rdos_backtrace_dwarf_add+0x40f>
   314a0:	48 85 ed             	test   %rbp,%rbp
   314a3:	4c 8b a4 24 b0 02 00 	mov    0x2b0(%rsp),%r12
   314aa:	00 
   314ab:	0f 84 ea 03 00 00    	je     3189b <__rdos_backtrace_dwarf_add+0x89b>
   314b1:	83 7c 24 08 00       	cmpl   $0x0,0x8(%rsp)
   314b6:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
   314bb:	0f 85 f9 11 00 00    	jne    326ba <__rdos_backtrace_dwarf_add+0x16ba>
   314c1:	48 83 c0 01          	add    $0x1,%rax
   314c5:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   314ca:	31 ed                	xor    %ebp,%ebp
   314cc:	4d 89 ec             	mov    %r13,%r12
   314cf:	31 c0                	xor    %eax,%eax
   314d1:	4d 89 e5             	mov    %r12,%r13
   314d4:	48 83 fb 01          	cmp    $0x1,%rbx
   314d8:	75 1f                	jne    314f9 <__rdos_backtrace_dwarf_add+0x4f9>
   314da:	e9 81 00 00 00       	jmpq   31560 <__rdos_backtrace_dwarf_add+0x560>
   314df:	90                   	nop
   314e0:	83 c5 07             	add    $0x7,%ebp
   314e3:	48 83 c3 01          	add    $0x1,%rbx
   314e7:	45 84 f6             	test   %r14b,%r14b
   314ea:	0f 89 e0 00 00 00    	jns    315d0 <__rdos_backtrace_dwarf_add+0x5d0>
   314f0:	4d 89 e5             	mov    %r12,%r13
   314f3:	48 83 fb 01          	cmp    $0x1,%rbx
   314f7:	74 67                	je     31560 <__rdos_backtrace_dwarf_add+0x560>
   314f9:	4d 8d 65 01          	lea    0x1(%r13),%r12
   314fd:	45 0f b6 75 00       	movzbl 0x0(%r13),%r14d
   31502:	83 fd 40             	cmp    $0x40,%ebp
   31505:	72 d9                	jb     314e0 <__rdos_backtrace_dwarf_add+0x4e0>
   31507:	85 c0                	test   %eax,%eax
   31509:	75 d5                	jne    314e0 <__rdos_backtrace_dwarf_add+0x4e0>
   3150b:	45 89 e1             	mov    %r12d,%r9d
   3150e:	48 8b 84 24 70 02 00 	mov    0x270(%rsp),%rax
   31515:	00 
   31516:	41 29 c1             	sub    %eax,%r9d
   31519:	be c8 00 00 00       	mov    $0xc8,%esi
   3151e:	4c 8d bc 24 70 01 00 	lea    0x170(%rsp),%r15
   31525:	00 
   31526:	4c 89 ff             	mov    %r15,%rdi
   31529:	48 8d 15 97 d9 00 00 	lea    0xd997(%rip),%rdx        # 3eec7 <elf_crc32.crc32_table+0x7a7>
   31530:	48 8d 0d 27 da 00 00 	lea    0xda27(%rip),%rcx        # 3ef5e <elf_crc32.crc32_table+0x83e>
   31537:	4c 8d 05 10 cc 00 00 	lea    0xcc10(%rip),%r8        # 3e14e <str.0+0x32e>
   3153e:	31 c0                	xor    %eax,%eax
   31540:	e8 cb 2a fd ff       	callq  4010 <snprintf@plt>
   31545:	48 8b bc 24 b0 02 00 	mov    0x2b0(%rsp),%rdi
   3154c:	00 
   3154d:	4c 89 fe             	mov    %r15,%rsi
   31550:	31 d2                	xor    %edx,%edx
   31552:	ff 94 24 a8 02 00 00 	callq  *0x2a8(%rsp)
   31559:	b8 01 00 00 00       	mov    $0x1,%eax
   3155e:	eb 80                	jmp    314e0 <__rdos_backtrace_dwarf_add+0x4e0>
   31560:	45 89 e9             	mov    %r13d,%r9d
   31563:	48 8b 84 24 70 02 00 	mov    0x270(%rsp),%rax
   3156a:	00 
   3156b:	41 29 c1             	sub    %eax,%r9d
   3156e:	be c8 00 00 00       	mov    $0xc8,%esi
   31573:	48 8d 9c 24 70 01 00 	lea    0x170(%rsp),%rbx
   3157a:	00 
   3157b:	48 89 df             	mov    %rbx,%rdi
   3157e:	48 8d 15 42 d9 00 00 	lea    0xd942(%rip),%rdx        # 3eec7 <elf_crc32.crc32_table+0x7a7>
   31585:	48 8d 0d 2b d9 00 00 	lea    0xd92b(%rip),%rcx        # 3eeb7 <elf_crc32.crc32_table+0x797>
   3158c:	4c 8d 05 bb cb 00 00 	lea    0xcbbb(%rip),%r8        # 3e14e <str.0+0x32e>
   31593:	31 c0                	xor    %eax,%eax
   31595:	e8 76 2a fd ff       	callq  4010 <snprintf@plt>
   3159a:	4c 8b a4 24 b0 02 00 	mov    0x2b0(%rsp),%r12
   315a1:	00 
   315a2:	4c 89 e7             	mov    %r12,%rdi
   315a5:	48 89 de             	mov    %rbx,%rsi
   315a8:	31 d2                	xor    %edx,%edx
   315aa:	ff 94 24 a8 02 00 00 	callq  *0x2a8(%rsp)
   315b1:	b8 01 00 00 00       	mov    $0x1,%eax
   315b6:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   315bb:	45 31 f6             	xor    %r14d,%r14d
   315be:	e9 f6 00 00 00       	jmpq   316b9 <__rdos_backtrace_dwarf_add+0x6b9>
   315c3:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   315ca:	00 00 00 
   315cd:	0f 1f 00             	nopl   (%rax)
   315d0:	48 83 fb 01          	cmp    $0x1,%rbx
   315d4:	75 63                	jne    31639 <__rdos_backtrace_dwarf_add+0x639>
   315d6:	45 89 e1             	mov    %r12d,%r9d
   315d9:	48 8b 84 24 70 02 00 	mov    0x270(%rsp),%rax
   315e0:	00 
   315e1:	41 29 c1             	sub    %eax,%r9d
   315e4:	be c8 00 00 00       	mov    $0xc8,%esi
   315e9:	48 8d ac 24 70 01 00 	lea    0x170(%rsp),%rbp
   315f0:	00 
   315f1:	48 89 ef             	mov    %rbp,%rdi
   315f4:	48 8d 15 cc d8 00 00 	lea    0xd8cc(%rip),%rdx        # 3eec7 <elf_crc32.crc32_table+0x7a7>
   315fb:	48 8d 0d b5 d8 00 00 	lea    0xd8b5(%rip),%rcx        # 3eeb7 <elf_crc32.crc32_table+0x797>
   31602:	4c 8d 05 45 cb 00 00 	lea    0xcb45(%rip),%r8        # 3e14e <str.0+0x32e>
   31609:	31 c0                	xor    %eax,%eax
   3160b:	e8 00 2a fd ff       	callq  4010 <snprintf@plt>
   31610:	48 8b bc 24 b0 02 00 	mov    0x2b0(%rsp),%rdi
   31617:	00 
   31618:	48 89 ee             	mov    %rbp,%rsi
   3161b:	31 d2                	xor    %edx,%edx
   3161d:	ff 94 24 a8 02 00 00 	callq  *0x2a8(%rsp)
   31624:	b8 01 00 00 00       	mov    $0x1,%eax
   31629:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   3162e:	45 31 f6             	xor    %r14d,%r14d
   31631:	4d 89 e5             	mov    %r12,%r13
   31634:	e9 80 00 00 00       	jmpq   316b9 <__rdos_backtrace_dwarf_add+0x6b9>
   31639:	49 83 c5 02          	add    $0x2,%r13
   3163d:	48 f7 db             	neg    %rbx
   31640:	31 c0                	xor    %eax,%eax
   31642:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   31647:	49 89 de             	mov    %rbx,%r14
   3164a:	eb 6d                	jmp    316b9 <__rdos_backtrace_dwarf_add+0x6b9>
   3164c:	45 89 e9             	mov    %r13d,%r9d
   3164f:	48 8b 84 24 70 02 00 	mov    0x270(%rsp),%rax
   31656:	00 
   31657:	41 29 c1             	sub    %eax,%r9d
   3165a:	be c8 00 00 00       	mov    $0xc8,%esi
   3165f:	48 8d 9c 24 70 01 00 	lea    0x170(%rsp),%rbx
   31666:	00 
   31667:	48 89 df             	mov    %rbx,%rdi
   3166a:	48 8d 15 56 d8 00 00 	lea    0xd856(%rip),%rdx        # 3eec7 <elf_crc32.crc32_table+0x7a7>
   31671:	48 8d 0d 3f d8 00 00 	lea    0xd83f(%rip),%rcx        # 3eeb7 <elf_crc32.crc32_table+0x797>
   31678:	4c 8d 05 cf ca 00 00 	lea    0xcacf(%rip),%r8        # 3e14e <str.0+0x32e>
   3167f:	31 c0                	xor    %eax,%eax
   31681:	e8 8a 29 fd ff       	callq  4010 <snprintf@plt>
   31686:	48 8b bc 24 b0 02 00 	mov    0x2b0(%rsp),%rdi
   3168d:	00 
   3168e:	48 89 de             	mov    %rbx,%rsi
   31691:	31 d2                	xor    %edx,%edx
   31693:	ff 94 24 a8 02 00 00 	callq  *0x2a8(%rsp)
   3169a:	b8 01 00 00 00       	mov    $0x1,%eax
   3169f:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   316a4:	45 31 f6             	xor    %r14d,%r14d
   316a7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   316ae:	00 00 
   316b0:	4d 85 ff             	test   %r15,%r15
   316b3:	0f 84 1f fd ff ff    	je     313d8 <__rdos_backtrace_dwarf_add+0x3d8>
   316b9:	45 31 ff             	xor    %r15d,%r15d
   316bc:	31 ed                	xor    %ebp,%ebp
   316be:	31 c0                	xor    %eax,%eax
   316c0:	4d 85 f6             	test   %r14,%r14
   316c3:	0f 85 ac 00 00 00    	jne    31775 <__rdos_backtrace_dwarf_add+0x775>
   316c9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   316d0:	83 7c 24 08 00       	cmpl   $0x0,0x8(%rsp)
   316d5:	75 58                	jne    3172f <__rdos_backtrace_dwarf_add+0x72f>
   316d7:	45 89 e9             	mov    %r13d,%r9d
   316da:	48 8b 84 24 70 02 00 	mov    0x270(%rsp),%rax
   316e1:	00 
   316e2:	41 29 c1             	sub    %eax,%r9d
   316e5:	be c8 00 00 00       	mov    $0xc8,%esi
   316ea:	48 8d 9c 24 70 01 00 	lea    0x170(%rsp),%rbx
   316f1:	00 
   316f2:	48 89 df             	mov    %rbx,%rdi
   316f5:	48 8d 15 cb d7 00 00 	lea    0xd7cb(%rip),%rdx        # 3eec7 <elf_crc32.crc32_table+0x7a7>
   316fc:	48 8d 0d b4 d7 00 00 	lea    0xd7b4(%rip),%rcx        # 3eeb7 <elf_crc32.crc32_table+0x797>
   31703:	4c 8d 05 44 ca 00 00 	lea    0xca44(%rip),%r8        # 3e14e <str.0+0x32e>
   3170a:	31 c0                	xor    %eax,%eax
   3170c:	e8 ff 28 fd ff       	callq  4010 <snprintf@plt>
   31711:	48 8b bc 24 b0 02 00 	mov    0x2b0(%rsp),%rdi
   31718:	00 
   31719:	48 89 de             	mov    %rbx,%rsi
   3171c:	31 d2                	xor    %edx,%edx
   3171e:	ff 94 24 a8 02 00 00 	callq  *0x2a8(%rsp)
   31725:	b8 01 00 00 00       	mov    $0x1,%eax
   3172a:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   3172f:	45 31 f6             	xor    %r14d,%r14d
   31732:	45 31 ff             	xor    %r15d,%r15d
   31735:	31 ed                	xor    %ebp,%ebp
   31737:	31 c0                	xor    %eax,%eax
   31739:	4d 85 f6             	test   %r14,%r14
   3173c:	0f 85 f2 00 00 00    	jne    31834 <__rdos_backtrace_dwarf_add+0x834>
   31742:	e9 b9 00 00 00       	jmpq   31800 <__rdos_backtrace_dwarf_add+0x800>
   31747:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   3174e:	00 00 
   31750:	89 da                	mov    %ebx,%edx
   31752:	83 e2 7f             	and    $0x7f,%edx
   31755:	89 e9                	mov    %ebp,%ecx
   31757:	48 d3 e2             	shl    %cl,%rdx
   3175a:	49 09 d7             	or     %rdx,%r15
   3175d:	49 83 c6 ff          	add    $0xffffffffffffffff,%r14
   31761:	83 c5 07             	add    $0x7,%ebp
   31764:	84 db                	test   %bl,%bl
   31766:	0f 89 84 00 00 00    	jns    317f0 <__rdos_backtrace_dwarf_add+0x7f0>
   3176c:	4d 85 f6             	test   %r14,%r14
   3176f:	0f 84 5b ff ff ff    	je     316d0 <__rdos_backtrace_dwarf_add+0x6d0>
   31775:	41 0f b6 5d 00       	movzbl 0x0(%r13),%ebx
   3177a:	49 83 c5 01          	add    $0x1,%r13
   3177e:	83 fd 3f             	cmp    $0x3f,%ebp
   31781:	76 cd                	jbe    31750 <__rdos_backtrace_dwarf_add+0x750>
   31783:	85 c0                	test   %eax,%eax
   31785:	75 d6                	jne    3175d <__rdos_backtrace_dwarf_add+0x75d>
   31787:	45 89 e9             	mov    %r13d,%r9d
   3178a:	48 8b 84 24 70 02 00 	mov    0x270(%rsp),%rax
   31791:	00 
   31792:	41 29 c1             	sub    %eax,%r9d
   31795:	be c8 00 00 00       	mov    $0xc8,%esi
   3179a:	4c 8d a4 24 70 01 00 	lea    0x170(%rsp),%r12
   317a1:	00 
   317a2:	4c 89 e7             	mov    %r12,%rdi
   317a5:	48 8d 15 1b d7 00 00 	lea    0xd71b(%rip),%rdx        # 3eec7 <elf_crc32.crc32_table+0x7a7>
   317ac:	48 8d 0d ab d7 00 00 	lea    0xd7ab(%rip),%rcx        # 3ef5e <elf_crc32.crc32_table+0x83e>
   317b3:	4c 8d 05 94 c9 00 00 	lea    0xc994(%rip),%r8        # 3e14e <str.0+0x32e>
   317ba:	31 c0                	xor    %eax,%eax
   317bc:	e8 4f 28 fd ff       	callq  4010 <snprintf@plt>
   317c1:	48 8b bc 24 b0 02 00 	mov    0x2b0(%rsp),%rdi
   317c8:	00 
   317c9:	4c 89 e6             	mov    %r12,%rsi
   317cc:	31 d2                	xor    %edx,%edx
   317ce:	ff 94 24 a8 02 00 00 	callq  *0x2a8(%rsp)
   317d5:	b8 01 00 00 00       	mov    $0x1,%eax
   317da:	49 83 c6 ff          	add    $0xffffffffffffffff,%r14
   317de:	83 c5 07             	add    $0x7,%ebp
   317e1:	84 db                	test   %bl,%bl
   317e3:	78 87                	js     3176c <__rdos_backtrace_dwarf_add+0x76c>
   317e5:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   317ec:	00 00 00 
   317ef:	90                   	nop
   317f0:	31 ed                	xor    %ebp,%ebp
   317f2:	31 c0                	xor    %eax,%eax
   317f4:	4d 85 f6             	test   %r14,%r14
   317f7:	75 3b                	jne    31834 <__rdos_backtrace_dwarf_add+0x834>
   317f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   31800:	83 7c 24 08 00       	cmpl   $0x0,0x8(%rsp)
   31805:	0f 84 41 fe ff ff    	je     3164c <__rdos_backtrace_dwarf_add+0x64c>
   3180b:	45 31 f6             	xor    %r14d,%r14d
   3180e:	4d 85 ff             	test   %r15,%r15
   31811:	0f 85 a2 fe ff ff    	jne    316b9 <__rdos_backtrace_dwarf_add+0x6b9>
   31817:	e9 bc fb ff ff       	jmpq   313d8 <__rdos_backtrace_dwarf_add+0x3d8>
   3181c:	0f 1f 40 00          	nopl   0x0(%rax)
   31820:	49 83 c6 ff          	add    $0xffffffffffffffff,%r14
   31824:	83 c5 07             	add    $0x7,%ebp
   31827:	84 db                	test   %bl,%bl
   31829:	0f 89 81 fe ff ff    	jns    316b0 <__rdos_backtrace_dwarf_add+0x6b0>
   3182f:	4d 85 f6             	test   %r14,%r14
   31832:	74 cc                	je     31800 <__rdos_backtrace_dwarf_add+0x800>
   31834:	41 0f b6 5d 00       	movzbl 0x0(%r13),%ebx
   31839:	49 83 c5 01          	add    $0x1,%r13
   3183d:	83 fd 40             	cmp    $0x40,%ebp
   31840:	72 de                	jb     31820 <__rdos_backtrace_dwarf_add+0x820>
   31842:	85 c0                	test   %eax,%eax
   31844:	75 da                	jne    31820 <__rdos_backtrace_dwarf_add+0x820>
   31846:	45 89 e9             	mov    %r13d,%r9d
   31849:	48 8b 84 24 70 02 00 	mov    0x270(%rsp),%rax
   31850:	00 
   31851:	41 29 c1             	sub    %eax,%r9d
   31854:	be c8 00 00 00       	mov    $0xc8,%esi
   31859:	4c 8d a4 24 70 01 00 	lea    0x170(%rsp),%r12
   31860:	00 
   31861:	4c 89 e7             	mov    %r12,%rdi
   31864:	48 8d 15 5c d6 00 00 	lea    0xd65c(%rip),%rdx        # 3eec7 <elf_crc32.crc32_table+0x7a7>
   3186b:	48 8d 0d ec d6 00 00 	lea    0xd6ec(%rip),%rcx        # 3ef5e <elf_crc32.crc32_table+0x83e>
   31872:	4c 8d 05 d5 c8 00 00 	lea    0xc8d5(%rip),%r8        # 3e14e <str.0+0x32e>
   31879:	31 c0                	xor    %eax,%eax
   3187b:	e8 90 27 fd ff       	callq  4010 <snprintf@plt>
   31880:	48 8b bc 24 b0 02 00 	mov    0x2b0(%rsp),%rdi
   31887:	00 
   31888:	4c 89 e6             	mov    %r12,%rsi
   3188b:	31 d2                	xor    %edx,%edx
   3188d:	ff 94 24 a8 02 00 00 	callq  *0x2a8(%rsp)
   31894:	b8 01 00 00 00       	mov    $0x1,%eax
   31899:	eb 85                	jmp    31820 <__rdos_backtrace_dwarf_add+0x820>
   3189b:	83 7c 24 08 00       	cmpl   $0x0,0x8(%rsp)
   318a0:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
   318a5:	0f 85 0f 0e 00 00    	jne    326ba <__rdos_backtrace_dwarf_add+0x16ba>
   318ab:	48 85 c0             	test   %rax,%rax
   318ae:	0f 84 a2 0a 00 00    	je     32356 <__rdos_backtrace_dwarf_add+0x1356>
   318b4:	48 89 c3             	mov    %rax,%rbx
   318b7:	48 c1 e3 05          	shl    $0x5,%rbx
   318bb:	4c 8b 74 24 18       	mov    0x18(%rsp),%r14
   318c0:	4c 89 f7             	mov    %r14,%rdi
   318c3:	48 89 de             	mov    %rbx,%rsi
   318c6:	4c 8b bc 24 a8 02 00 	mov    0x2a8(%rsp),%r15
   318cd:	00 
   318ce:	4c 89 fa             	mov    %r15,%rdx
   318d1:	4c 89 e1             	mov    %r12,%rcx
   318d4:	e8 67 f5 ff ff       	callq  30e40 <__rdos_backtrace_alloc>
   318d9:	48 85 c0             	test   %rax,%rax
   318dc:	0f 84 87 12 00 00    	je     32b69 <__rdos_backtrace_dwarf_add+0x1b69>
   318e2:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   318e7:	48 89 c7             	mov    %rax,%rdi
   318ea:	31 f6                	xor    %esi,%esi
   318ec:	48 89 9c 24 38 01 00 	mov    %rbx,0x138(%rsp)
   318f3:	00 
   318f4:	48 89 da             	mov    %rbx,%rdx
   318f7:	e8 d4 27 fd ff       	callq  40d0 <memset@plt>
   318fc:	31 c0                	xor    %eax,%eax
   318fe:	48 89 84 24 f8 00 00 	mov    %rax,0xf8(%rsp)
   31905:	00 
   31906:	48 8b 9c 24 d8 00 00 	mov    0xd8(%rsp),%rbx
   3190d:	00 
   3190e:	b9 02 00 00 00       	mov    $0x2,%ecx
   31913:	48 29 d9             	sub    %rbx,%rcx
   31916:	31 c0                	xor    %eax,%eax
   31918:	48 89 84 24 e0 00 00 	mov    %rax,0xe0(%rsp)
   3191f:	00 
   31920:	48 89 da             	mov    %rbx,%rdx
   31923:	45 31 e4             	xor    %r12d,%r12d
   31926:	31 c0                	xor    %eax,%eax
   31928:	4c 8b 6c 24 28       	mov    0x28(%rsp),%r13
   3192d:	48 85 d2             	test   %rdx,%rdx
   31930:	75 35                	jne    31967 <__rdos_backtrace_dwarf_add+0x967>
   31932:	e9 ae 09 00 00       	jmpq   322e5 <__rdos_backtrace_dwarf_add+0x12e5>
   31937:	89 ea                	mov    %ebp,%edx
   31939:	83 e2 7f             	and    $0x7f,%edx
   3193c:	44 89 e1             	mov    %r12d,%ecx
   3193f:	48 d3 e2             	shl    %cl,%rdx
   31942:	48 09 94 24 e0 00 00 	or     %rdx,0xe0(%rsp)
   31949:	00 
   3194a:	48 89 da             	mov    %rbx,%rdx
   3194d:	48 83 c2 ff          	add    $0xffffffffffffffff,%rdx
   31951:	41 83 c4 07          	add    $0x7,%r12d
   31955:	49 8d 4f 01          	lea    0x1(%r15),%rcx
   31959:	40 84 ed             	test   %bpl,%bpl
   3195c:	79 7a                	jns    319d8 <__rdos_backtrace_dwarf_add+0x9d8>
   3195e:	48 85 d2             	test   %rdx,%rdx
   31961:	0f 84 7e 09 00 00    	je     322e5 <__rdos_backtrace_dwarf_add+0x12e5>
   31967:	49 89 cf             	mov    %rcx,%r15
   3196a:	48 89 d3             	mov    %rdx,%rbx
   3196d:	41 0f b6 6d 00       	movzbl 0x0(%r13),%ebp
   31972:	49 83 c5 01          	add    $0x1,%r13
   31976:	41 83 fc 3f          	cmp    $0x3f,%r12d
   3197a:	76 bb                	jbe    31937 <__rdos_backtrace_dwarf_add+0x937>
   3197c:	85 c0                	test   %eax,%eax
   3197e:	75 ca                	jne    3194a <__rdos_backtrace_dwarf_add+0x94a>
   31980:	45 89 e9             	mov    %r13d,%r9d
   31983:	48 8b 84 24 70 02 00 	mov    0x270(%rsp),%rax
   3198a:	00 
   3198b:	41 29 c1             	sub    %eax,%r9d
   3198e:	be c8 00 00 00       	mov    $0xc8,%esi
   31993:	4c 8d b4 24 70 01 00 	lea    0x170(%rsp),%r14
   3199a:	00 
   3199b:	4c 89 f7             	mov    %r14,%rdi
   3199e:	48 8d 15 22 d5 00 00 	lea    0xd522(%rip),%rdx        # 3eec7 <elf_crc32.crc32_table+0x7a7>
   319a5:	48 8d 0d b2 d5 00 00 	lea    0xd5b2(%rip),%rcx        # 3ef5e <elf_crc32.crc32_table+0x83e>
   319ac:	4c 8d 05 9b c7 00 00 	lea    0xc79b(%rip),%r8        # 3e14e <str.0+0x32e>
   319b3:	31 c0                	xor    %eax,%eax
   319b5:	e8 56 26 fd ff       	callq  4010 <snprintf@plt>
   319ba:	48 8b bc 24 b0 02 00 	mov    0x2b0(%rsp),%rdi
   319c1:	00 
   319c2:	4c 89 f6             	mov    %r14,%rsi
   319c5:	31 d2                	xor    %edx,%edx
   319c7:	ff 94 24 a8 02 00 00 	callq  *0x2a8(%rsp)
   319ce:	b8 01 00 00 00       	mov    $0x1,%eax
   319d3:	e9 72 ff ff ff       	jmpq   3194a <__rdos_backtrace_dwarf_add+0x94a>
   319d8:	48 83 bc 24 e0 00 00 	cmpq   $0x0,0xe0(%rsp)
   319df:	00 00 
   319e1:	4c 8b a4 24 b0 02 00 	mov    0x2b0(%rsp),%r12
   319e8:	00 
   319e9:	0f 84 47 09 00 00    	je     32336 <__rdos_backtrace_dwarf_add+0x1336>
   319ef:	31 f6                	xor    %esi,%esi
   319f1:	4d 89 ee             	mov    %r13,%r14
   319f4:	31 ed                	xor    %ebp,%ebp
   319f6:	31 c0                	xor    %eax,%eax
   319f8:	4d 89 f5             	mov    %r14,%r13
   319fb:	49 83 ff 01          	cmp    $0x1,%r15
   319ff:	75 2e                	jne    31a2f <__rdos_backtrace_dwarf_add+0xa2f>
   31a01:	e9 1b 01 00 00       	jmpq   31b21 <__rdos_backtrace_dwarf_add+0xb21>
   31a06:	89 da                	mov    %ebx,%edx
   31a08:	83 e2 7f             	and    $0x7f,%edx
   31a0b:	89 e9                	mov    %ebp,%ecx
   31a0d:	48 d3 e2             	shl    %cl,%rdx
   31a10:	48 09 d6             	or     %rdx,%rsi
   31a13:	83 c5 07             	add    $0x7,%ebp
   31a16:	49 83 c7 01          	add    $0x1,%r15
   31a1a:	84 db                	test   %bl,%bl
   31a1c:	0f 89 96 00 00 00    	jns    31ab8 <__rdos_backtrace_dwarf_add+0xab8>
   31a22:	4d 89 f5             	mov    %r14,%r13
   31a25:	49 83 ff 01          	cmp    $0x1,%r15
   31a29:	0f 84 f2 00 00 00    	je     31b21 <__rdos_backtrace_dwarf_add+0xb21>
   31a2f:	4d 8d 75 01          	lea    0x1(%r13),%r14
   31a33:	41 0f b6 5d 00       	movzbl 0x0(%r13),%ebx
   31a38:	83 fd 3f             	cmp    $0x3f,%ebp
   31a3b:	76 c9                	jbe    31a06 <__rdos_backtrace_dwarf_add+0xa06>
   31a3d:	85 c0                	test   %eax,%eax
   31a3f:	75 d2                	jne    31a13 <__rdos_backtrace_dwarf_add+0xa13>
   31a41:	45 89 f1             	mov    %r14d,%r9d
   31a44:	48 8b 84 24 70 02 00 	mov    0x270(%rsp),%rax
   31a4b:	00 
   31a4c:	41 29 c1             	sub    %eax,%r9d
   31a4f:	48 89 b4 24 d0 00 00 	mov    %rsi,0xd0(%rsp)
   31a56:	00 
   31a57:	be c8 00 00 00       	mov    $0xc8,%esi
   31a5c:	4c 89 6c 24 28       	mov    %r13,0x28(%rsp)
   31a61:	4c 8d ac 24 70 01 00 	lea    0x170(%rsp),%r13
   31a68:	00 
   31a69:	4c 89 ef             	mov    %r13,%rdi
   31a6c:	48 8d 15 54 d4 00 00 	lea    0xd454(%rip),%rdx        # 3eec7 <elf_crc32.crc32_table+0x7a7>
   31a73:	48 8d 0d e4 d4 00 00 	lea    0xd4e4(%rip),%rcx        # 3ef5e <elf_crc32.crc32_table+0x83e>
   31a7a:	4c 8d 05 cd c6 00 00 	lea    0xc6cd(%rip),%r8        # 3e14e <str.0+0x32e>
   31a81:	31 c0                	xor    %eax,%eax
   31a83:	e8 88 25 fd ff       	callq  4010 <snprintf@plt>
   31a88:	4c 89 e7             	mov    %r12,%rdi
   31a8b:	4c 89 ee             	mov    %r13,%rsi
   31a8e:	4c 8b 6c 24 28       	mov    0x28(%rsp),%r13
   31a93:	31 d2                	xor    %edx,%edx
   31a95:	ff 94 24 a8 02 00 00 	callq  *0x2a8(%rsp)
   31a9c:	48 8b b4 24 d0 00 00 	mov    0xd0(%rsp),%rsi
   31aa3:	00 
   31aa4:	b8 01 00 00 00       	mov    $0x1,%eax
   31aa9:	83 c5 07             	add    $0x7,%ebp
   31aac:	49 83 c7 01          	add    $0x1,%r15
   31ab0:	84 db                	test   %bl,%bl
   31ab2:	0f 88 6a ff ff ff    	js     31a22 <__rdos_backtrace_dwarf_add+0xa22>
   31ab8:	48 89 b4 24 d0 00 00 	mov    %rsi,0xd0(%rsp)
   31abf:	00 
   31ac0:	49 83 ff 01          	cmp    $0x1,%r15
   31ac4:	0f 85 b5 00 00 00    	jne    31b7f <__rdos_backtrace_dwarf_add+0xb7f>
   31aca:	45 89 f1             	mov    %r14d,%r9d
   31acd:	48 8b 84 24 70 02 00 	mov    0x270(%rsp),%rax
   31ad4:	00 
   31ad5:	41 29 c1             	sub    %eax,%r9d
   31ad8:	be c8 00 00 00       	mov    $0xc8,%esi
   31add:	48 8d ac 24 70 01 00 	lea    0x170(%rsp),%rbp
   31ae4:	00 
   31ae5:	48 89 ef             	mov    %rbp,%rdi
   31ae8:	48 8d 15 d8 d3 00 00 	lea    0xd3d8(%rip),%rdx        # 3eec7 <elf_crc32.crc32_table+0x7a7>
   31aef:	48 8d 0d c1 d3 00 00 	lea    0xd3c1(%rip),%rcx        # 3eeb7 <elf_crc32.crc32_table+0x797>
   31af6:	4c 8d 05 51 c6 00 00 	lea    0xc651(%rip),%r8        # 3e14e <str.0+0x32e>
   31afd:	31 c0                	xor    %eax,%eax
   31aff:	e8 0c 25 fd ff       	callq  4010 <snprintf@plt>
   31b04:	4c 89 e7             	mov    %r12,%rdi
   31b07:	31 db                	xor    %ebx,%ebx
   31b09:	48 89 ee             	mov    %rbp,%rsi
   31b0c:	31 d2                	xor    %edx,%edx
   31b0e:	ff 94 24 a8 02 00 00 	callq  *0x2a8(%rsp)
   31b15:	b9 01 00 00 00       	mov    $0x1,%ecx
   31b1a:	4d 89 f5             	mov    %r14,%r13
   31b1d:	31 c0                	xor    %eax,%eax
   31b1f:	eb 6e                	jmp    31b8f <__rdos_backtrace_dwarf_add+0xb8f>
   31b21:	45 89 e9             	mov    %r13d,%r9d
   31b24:	48 8b 84 24 70 02 00 	mov    0x270(%rsp),%rax
   31b2b:	00 
   31b2c:	41 29 c1             	sub    %eax,%r9d
   31b2f:	31 c0                	xor    %eax,%eax
   31b31:	48 89 84 24 d0 00 00 	mov    %rax,0xd0(%rsp)
   31b38:	00 
   31b39:	be c8 00 00 00       	mov    $0xc8,%esi
   31b3e:	48 8d 9c 24 70 01 00 	lea    0x170(%rsp),%rbx
   31b45:	00 
   31b46:	48 89 df             	mov    %rbx,%rdi
   31b49:	48 8d 15 77 d3 00 00 	lea    0xd377(%rip),%rdx        # 3eec7 <elf_crc32.crc32_table+0x7a7>
   31b50:	48 8d 0d 60 d3 00 00 	lea    0xd360(%rip),%rcx        # 3eeb7 <elf_crc32.crc32_table+0x797>
   31b57:	4c 8d 05 f0 c5 00 00 	lea    0xc5f0(%rip),%r8        # 3e14e <str.0+0x32e>
   31b5e:	31 c0                	xor    %eax,%eax
   31b60:	e8 ab 24 fd ff       	callq  4010 <snprintf@plt>
   31b65:	4c 89 e7             	mov    %r12,%rdi
   31b68:	48 89 de             	mov    %rbx,%rsi
   31b6b:	31 d2                	xor    %edx,%edx
   31b6d:	ff 94 24 a8 02 00 00 	callq  *0x2a8(%rsp)
   31b74:	b9 01 00 00 00       	mov    $0x1,%ecx
   31b79:	31 db                	xor    %ebx,%ebx
   31b7b:	31 c0                	xor    %eax,%eax
   31b7d:	eb 10                	jmp    31b8f <__rdos_backtrace_dwarf_add+0xb8f>
   31b7f:	49 f7 df             	neg    %r15
   31b82:	41 8a 45 01          	mov    0x1(%r13),%al
   31b86:	49 83 c5 02          	add    $0x2,%r13
   31b8a:	31 c9                	xor    %ecx,%ecx
   31b8c:	4c 89 fb             	mov    %r15,%rbx
   31b8f:	0f b6 c0             	movzbl %al,%eax
   31b92:	89 84 24 f0 00 00 00 	mov    %eax,0xf0(%rsp)
   31b99:	89 4c 24 14          	mov    %ecx,0x14(%rsp)
   31b9d:	89 4c 24 38          	mov    %ecx,0x38(%rsp)
   31ba1:	48 89 9c 24 d8 00 00 	mov    %rbx,0xd8(%rsp)
   31ba8:	00 
   31ba9:	4c 89 6c 24 28       	mov    %r13,0x28(%rsp)
   31bae:	31 c0                	xor    %eax,%eax
   31bb0:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   31bb5:	45 31 e4             	xor    %r12d,%r12d
   31bb8:	31 ed                	xor    %ebp,%ebp
   31bba:	31 c0                	xor    %eax,%eax
   31bbc:	48 85 db             	test   %rbx,%rbx
   31bbf:	75 28                	jne    31be9 <__rdos_backtrace_dwarf_add+0xbe9>
   31bc1:	e9 95 01 00 00       	jmpq   31d5b <__rdos_backtrace_dwarf_add+0xd5b>
   31bc6:	44 89 fa             	mov    %r15d,%edx
   31bc9:	83 e2 7f             	and    $0x7f,%edx
   31bcc:	89 e9                	mov    %ebp,%ecx
   31bce:	48 d3 e2             	shl    %cl,%rdx
   31bd1:	49 09 d4             	or     %rdx,%r12
   31bd4:	48 83 c3 ff          	add    $0xffffffffffffffff,%rbx
   31bd8:	83 c5 07             	add    $0x7,%ebp
   31bdb:	45 84 ff             	test   %r15b,%r15b
   31bde:	79 7a                	jns    31c5a <__rdos_backtrace_dwarf_add+0xc5a>
   31be0:	48 85 db             	test   %rbx,%rbx
   31be3:	0f 84 72 01 00 00    	je     31d5b <__rdos_backtrace_dwarf_add+0xd5b>
   31be9:	45 0f b6 7d 00       	movzbl 0x0(%r13),%r15d
   31bee:	49 83 c5 01          	add    $0x1,%r13
   31bf2:	83 fd 3f             	cmp    $0x3f,%ebp
   31bf5:	76 cf                	jbe    31bc6 <__rdos_backtrace_dwarf_add+0xbc6>
   31bf7:	85 c0                	test   %eax,%eax
   31bf9:	75 d9                	jne    31bd4 <__rdos_backtrace_dwarf_add+0xbd4>
   31bfb:	45 89 e9             	mov    %r13d,%r9d
   31bfe:	48 8b 84 24 70 02 00 	mov    0x270(%rsp),%rax
   31c05:	00 
   31c06:	41 29 c1             	sub    %eax,%r9d
   31c09:	be c8 00 00 00       	mov    $0xc8,%esi
   31c0e:	4c 8d b4 24 70 01 00 	lea    0x170(%rsp),%r14
   31c15:	00 
   31c16:	4c 89 f7             	mov    %r14,%rdi
   31c19:	48 8d 15 a7 d2 00 00 	lea    0xd2a7(%rip),%rdx        # 3eec7 <elf_crc32.crc32_table+0x7a7>
   31c20:	48 8d 0d 37 d3 00 00 	lea    0xd337(%rip),%rcx        # 3ef5e <elf_crc32.crc32_table+0x83e>
   31c27:	4c 8d 05 20 c5 00 00 	lea    0xc520(%rip),%r8        # 3e14e <str.0+0x32e>
   31c2e:	31 c0                	xor    %eax,%eax
   31c30:	e8 db 23 fd ff       	callq  4010 <snprintf@plt>
   31c35:	48 8b bc 24 b0 02 00 	mov    0x2b0(%rsp),%rdi
   31c3c:	00 
   31c3d:	4c 89 f6             	mov    %r14,%rsi
   31c40:	31 d2                	xor    %edx,%edx
   31c42:	ff 94 24 a8 02 00 00 	callq  *0x2a8(%rsp)
   31c49:	b8 01 00 00 00       	mov    $0x1,%eax
   31c4e:	48 83 c3 ff          	add    $0xffffffffffffffff,%rbx
   31c52:	83 c5 07             	add    $0x7,%ebp
   31c55:	45 84 ff             	test   %r15b,%r15b
   31c58:	78 86                	js     31be0 <__rdos_backtrace_dwarf_add+0xbe0>
   31c5a:	4d 85 e4             	test   %r12,%r12
   31c5d:	4c 8b a4 24 b0 02 00 	mov    0x2b0(%rsp),%r12
   31c64:	00 
   31c65:	0f 84 48 01 00 00    	je     31db3 <__rdos_backtrace_dwarf_add+0xdb3>
   31c6b:	48 83 44 24 08 01    	addq   $0x1,0x8(%rsp)
   31c71:	31 ed                	xor    %ebp,%ebp
   31c73:	31 c0                	xor    %eax,%eax
   31c75:	48 85 db             	test   %rbx,%rbx
   31c78:	75 17                	jne    31c91 <__rdos_backtrace_dwarf_add+0xc91>
   31c7a:	eb 77                	jmp    31cf3 <__rdos_backtrace_dwarf_add+0xcf3>
   31c7c:	48 83 c3 ff          	add    $0xffffffffffffffff,%rbx
   31c80:	83 c5 07             	add    $0x7,%ebp
   31c83:	45 84 ff             	test   %r15b,%r15b
   31c86:	0f 89 29 ff ff ff    	jns    31bb5 <__rdos_backtrace_dwarf_add+0xbb5>
   31c8c:	48 85 db             	test   %rbx,%rbx
   31c8f:	74 62                	je     31cf3 <__rdos_backtrace_dwarf_add+0xcf3>
   31c91:	45 0f b6 7d 00       	movzbl 0x0(%r13),%r15d
   31c96:	49 83 c5 01          	add    $0x1,%r13
   31c9a:	83 fd 40             	cmp    $0x40,%ebp
   31c9d:	72 dd                	jb     31c7c <__rdos_backtrace_dwarf_add+0xc7c>
   31c9f:	85 c0                	test   %eax,%eax
   31ca1:	75 d9                	jne    31c7c <__rdos_backtrace_dwarf_add+0xc7c>
   31ca3:	45 89 e9             	mov    %r13d,%r9d
   31ca6:	48 8b 84 24 70 02 00 	mov    0x270(%rsp),%rax
   31cad:	00 
   31cae:	41 29 c1             	sub    %eax,%r9d
   31cb1:	be c8 00 00 00       	mov    $0xc8,%esi
   31cb6:	4c 8d b4 24 70 01 00 	lea    0x170(%rsp),%r14
   31cbd:	00 
   31cbe:	4c 89 f7             	mov    %r14,%rdi
   31cc1:	48 8d 15 ff d1 00 00 	lea    0xd1ff(%rip),%rdx        # 3eec7 <elf_crc32.crc32_table+0x7a7>
   31cc8:	48 8d 0d 8f d2 00 00 	lea    0xd28f(%rip),%rcx        # 3ef5e <elf_crc32.crc32_table+0x83e>
   31ccf:	4c 8d 05 78 c4 00 00 	lea    0xc478(%rip),%r8        # 3e14e <str.0+0x32e>
   31cd6:	31 c0                	xor    %eax,%eax
   31cd8:	e8 33 23 fd ff       	callq  4010 <snprintf@plt>
   31cdd:	4c 89 e7             	mov    %r12,%rdi
   31ce0:	4c 89 f6             	mov    %r14,%rsi
   31ce3:	31 d2                	xor    %edx,%edx
   31ce5:	ff 94 24 a8 02 00 00 	callq  *0x2a8(%rsp)
   31cec:	b8 01 00 00 00       	mov    $0x1,%eax
   31cf1:	eb 89                	jmp    31c7c <__rdos_backtrace_dwarf_add+0xc7c>
   31cf3:	bb 00 00 00 00       	mov    $0x0,%ebx
   31cf8:	83 7c 24 38 00       	cmpl   $0x0,0x38(%rsp)
   31cfd:	0f 85 b2 fe ff ff    	jne    31bb5 <__rdos_backtrace_dwarf_add+0xbb5>
   31d03:	45 89 e9             	mov    %r13d,%r9d
   31d06:	48 8b 84 24 70 02 00 	mov    0x270(%rsp),%rax
   31d0d:	00 
   31d0e:	41 29 c1             	sub    %eax,%r9d
   31d11:	be c8 00 00 00       	mov    $0xc8,%esi
   31d16:	48 8d 9c 24 70 01 00 	lea    0x170(%rsp),%rbx
   31d1d:	00 
   31d1e:	48 89 df             	mov    %rbx,%rdi
   31d21:	48 8d 15 9f d1 00 00 	lea    0xd19f(%rip),%rdx        # 3eec7 <elf_crc32.crc32_table+0x7a7>
   31d28:	48 8d 0d 88 d1 00 00 	lea    0xd188(%rip),%rcx        # 3eeb7 <elf_crc32.crc32_table+0x797>
   31d2f:	4c 8d 05 18 c4 00 00 	lea    0xc418(%rip),%r8        # 3e14e <str.0+0x32e>
   31d36:	31 c0                	xor    %eax,%eax
   31d38:	e8 d3 22 fd ff       	callq  4010 <snprintf@plt>
   31d3d:	4c 89 e7             	mov    %r12,%rdi
   31d40:	48 89 de             	mov    %rbx,%rsi
   31d43:	31 d2                	xor    %edx,%edx
   31d45:	ff 94 24 a8 02 00 00 	callq  *0x2a8(%rsp)
   31d4c:	c7 44 24 38 01 00 00 	movl   $0x1,0x38(%rsp)
   31d53:	00 
   31d54:	31 db                	xor    %ebx,%ebx
   31d56:	e9 5a fe ff ff       	jmpq   31bb5 <__rdos_backtrace_dwarf_add+0xbb5>
   31d5b:	83 7c 24 38 00       	cmpl   $0x0,0x38(%rsp)
   31d60:	4c 8b a4 24 b0 02 00 	mov    0x2b0(%rsp),%r12
   31d67:	00 
   31d68:	75 49                	jne    31db3 <__rdos_backtrace_dwarf_add+0xdb3>
   31d6a:	48 8b 84 24 70 02 00 	mov    0x270(%rsp),%rax
   31d71:	00 
   31d72:	41 29 c5             	sub    %eax,%r13d
   31d75:	be c8 00 00 00       	mov    $0xc8,%esi
   31d7a:	48 8d 9c 24 70 01 00 	lea    0x170(%rsp),%rbx
   31d81:	00 
   31d82:	48 89 df             	mov    %rbx,%rdi
   31d85:	48 8d 15 3b d1 00 00 	lea    0xd13b(%rip),%rdx        # 3eec7 <elf_crc32.crc32_table+0x7a7>
   31d8c:	48 8d 0d 24 d1 00 00 	lea    0xd124(%rip),%rcx        # 3eeb7 <elf_crc32.crc32_table+0x797>
   31d93:	4c 8d 05 b4 c3 00 00 	lea    0xc3b4(%rip),%r8        # 3e14e <str.0+0x32e>
   31d9a:	45 89 e9             	mov    %r13d,%r9d
   31d9d:	31 c0                	xor    %eax,%eax
   31d9f:	e8 6c 22 fd ff       	callq  4010 <snprintf@plt>
   31da4:	4c 89 e7             	mov    %r12,%rdi
   31da7:	48 89 de             	mov    %rbx,%rsi
   31daa:	31 d2                	xor    %edx,%edx
   31dac:	ff 94 24 a8 02 00 00 	callq  *0x2a8(%rsp)
   31db3:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
   31db8:	48 85 f6             	test   %rsi,%rsi
   31dbb:	0f 84 b6 02 00 00    	je     32077 <__rdos_backtrace_dwarf_add+0x1077>
   31dc1:	48 c1 e6 03          	shl    $0x3,%rsi
   31dc5:	4c 8b 74 24 18       	mov    0x18(%rsp),%r14
   31dca:	4c 89 f7             	mov    %r14,%rdi
   31dcd:	48 8b 94 24 a8 02 00 	mov    0x2a8(%rsp),%rdx
   31dd4:	00 
   31dd5:	4c 89 e1             	mov    %r12,%rcx
   31dd8:	e8 63 f0 ff ff       	callq  30e40 <__rdos_backtrace_alloc>
   31ddd:	48 85 c0             	test   %rax,%rax
   31de0:	48 8b 9c 24 d8 00 00 	mov    0xd8(%rsp),%rbx
   31de7:	00 
   31de8:	0f 84 d1 0c 00 00    	je     32abf <__rdos_backtrace_dwarf_add+0x1abf>
   31dee:	48 89 84 24 00 01 00 	mov    %rax,0x100(%rsp)
   31df5:	00 
   31df6:	31 c0                	xor    %eax,%eax
   31df8:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   31dfd:	4c 8b 6c 24 28       	mov    0x28(%rsp),%r13
   31e02:	45 31 f6             	xor    %r14d,%r14d
   31e05:	31 ed                	xor    %ebp,%ebp
   31e07:	31 c0                	xor    %eax,%eax
   31e09:	48 85 db             	test   %rbx,%rbx
   31e0c:	75 31                	jne    31e3f <__rdos_backtrace_dwarf_add+0xe3f>
   31e0e:	e9 a4 00 00 00       	jmpq   31eb7 <__rdos_backtrace_dwarf_add+0xeb7>
   31e13:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   31e1a:	00 00 00 
   31e1d:	0f 1f 00             	nopl   (%rax)
   31e20:	44 89 e2             	mov    %r12d,%edx
   31e23:	83 e2 7f             	and    $0x7f,%edx
   31e26:	89 e9                	mov    %ebp,%ecx
   31e28:	48 d3 e2             	shl    %cl,%rdx
   31e2b:	49 09 d6             	or     %rdx,%r14
   31e2e:	48 83 c3 ff          	add    $0xffffffffffffffff,%rbx
   31e32:	83 c5 07             	add    $0x7,%ebp
   31e35:	45 84 e4             	test   %r12b,%r12b
   31e38:	79 76                	jns    31eb0 <__rdos_backtrace_dwarf_add+0xeb0>
   31e3a:	48 85 db             	test   %rbx,%rbx
   31e3d:	74 78                	je     31eb7 <__rdos_backtrace_dwarf_add+0xeb7>
   31e3f:	45 0f b6 65 00       	movzbl 0x0(%r13),%r12d
   31e44:	49 83 c5 01          	add    $0x1,%r13
   31e48:	83 fd 3f             	cmp    $0x3f,%ebp
   31e4b:	76 d3                	jbe    31e20 <__rdos_backtrace_dwarf_add+0xe20>
   31e4d:	85 c0                	test   %eax,%eax
   31e4f:	75 dd                	jne    31e2e <__rdos_backtrace_dwarf_add+0xe2e>
   31e51:	45 89 e9             	mov    %r13d,%r9d
   31e54:	48 8b 84 24 70 02 00 	mov    0x270(%rsp),%rax
   31e5b:	00 
   31e5c:	41 29 c1             	sub    %eax,%r9d
   31e5f:	be c8 00 00 00       	mov    $0xc8,%esi
   31e64:	4c 8d bc 24 70 01 00 	lea    0x170(%rsp),%r15
   31e6b:	00 
   31e6c:	4c 89 ff             	mov    %r15,%rdi
   31e6f:	48 8d 15 51 d0 00 00 	lea    0xd051(%rip),%rdx        # 3eec7 <elf_crc32.crc32_table+0x7a7>
   31e76:	48 8d 0d e1 d0 00 00 	lea    0xd0e1(%rip),%rcx        # 3ef5e <elf_crc32.crc32_table+0x83e>
   31e7d:	4c 8d 05 ca c2 00 00 	lea    0xc2ca(%rip),%r8        # 3e14e <str.0+0x32e>
   31e84:	31 c0                	xor    %eax,%eax
   31e86:	e8 85 21 fd ff       	callq  4010 <snprintf@plt>
   31e8b:	48 8b bc 24 b0 02 00 	mov    0x2b0(%rsp),%rdi
   31e92:	00 
   31e93:	4c 89 fe             	mov    %r15,%rsi
   31e96:	31 d2                	xor    %edx,%edx
   31e98:	ff 94 24 a8 02 00 00 	callq  *0x2a8(%rsp)
   31e9f:	b8 01 00 00 00       	mov    $0x1,%eax
   31ea4:	48 83 c3 ff          	add    $0xffffffffffffffff,%rbx
   31ea8:	83 c5 07             	add    $0x7,%ebp
   31eab:	45 84 e4             	test   %r12b,%r12b
   31eae:	78 8a                	js     31e3a <__rdos_backtrace_dwarf_add+0xe3a>
   31eb0:	4c 89 74 24 08       	mov    %r14,0x8(%rsp)
   31eb5:	eb 66                	jmp    31f1d <__rdos_backtrace_dwarf_add+0xf1d>
   31eb7:	83 7c 24 14 00       	cmpl   $0x0,0x14(%rsp)
   31ebc:	75 56                	jne    31f14 <__rdos_backtrace_dwarf_add+0xf14>
   31ebe:	45 89 e9             	mov    %r13d,%r9d
   31ec1:	48 8b 84 24 70 02 00 	mov    0x270(%rsp),%rax
   31ec8:	00 
   31ec9:	41 29 c1             	sub    %eax,%r9d
   31ecc:	be c8 00 00 00       	mov    $0xc8,%esi
   31ed1:	48 8d 9c 24 70 01 00 	lea    0x170(%rsp),%rbx
   31ed8:	00 
   31ed9:	48 89 df             	mov    %rbx,%rdi
   31edc:	48 8d 15 e4 cf 00 00 	lea    0xcfe4(%rip),%rdx        # 3eec7 <elf_crc32.crc32_table+0x7a7>
   31ee3:	48 8d 0d cd cf 00 00 	lea    0xcfcd(%rip),%rcx        # 3eeb7 <elf_crc32.crc32_table+0x797>
   31eea:	4c 8d 05 5d c2 00 00 	lea    0xc25d(%rip),%r8        # 3e14e <str.0+0x32e>
   31ef1:	31 c0                	xor    %eax,%eax
   31ef3:	e8 18 21 fd ff       	callq  4010 <snprintf@plt>
   31ef8:	48 8b bc 24 b0 02 00 	mov    0x2b0(%rsp),%rdi
   31eff:	00 
   31f00:	48 89 de             	mov    %rbx,%rsi
   31f03:	31 d2                	xor    %edx,%edx
   31f05:	ff 94 24 a8 02 00 00 	callq  *0x2a8(%rsp)
   31f0c:	c7 44 24 14 01 00 00 	movl   $0x1,0x14(%rsp)
   31f13:	00 
   31f14:	31 db                	xor    %ebx,%ebx
   31f16:	31 c0                	xor    %eax,%eax
   31f18:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   31f1d:	45 31 ff             	xor    %r15d,%r15d
   31f20:	31 ed                	xor    %ebp,%ebp
   31f22:	31 c0                	xor    %eax,%eax
   31f24:	48 85 db             	test   %rbx,%rbx
   31f27:	75 2a                	jne    31f53 <__rdos_backtrace_dwarf_add+0xf53>
   31f29:	e9 9e 00 00 00       	jmpq   31fcc <__rdos_backtrace_dwarf_add+0xfcc>
   31f2e:	66 90                	xchg   %ax,%ax
   31f30:	44 89 f2             	mov    %r14d,%edx
   31f33:	83 e2 7f             	and    $0x7f,%edx
   31f36:	89 e9                	mov    %ebp,%ecx
   31f38:	48 d3 e2             	shl    %cl,%rdx
   31f3b:	49 09 d7             	or     %rdx,%r15
   31f3e:	48 83 c3 ff          	add    $0xffffffffffffffff,%rbx
   31f42:	83 c5 07             	add    $0x7,%ebp
   31f45:	45 84 f6             	test   %r14b,%r14b
   31f48:	0f 89 e0 00 00 00    	jns    3202e <__rdos_backtrace_dwarf_add+0x102e>
   31f4e:	48 85 db             	test   %rbx,%rbx
   31f51:	74 79                	je     31fcc <__rdos_backtrace_dwarf_add+0xfcc>
   31f53:	45 0f b6 75 00       	movzbl 0x0(%r13),%r14d
   31f58:	49 83 c5 01          	add    $0x1,%r13
   31f5c:	83 fd 3f             	cmp    $0x3f,%ebp
   31f5f:	76 cf                	jbe    31f30 <__rdos_backtrace_dwarf_add+0xf30>
   31f61:	85 c0                	test   %eax,%eax
   31f63:	75 d9                	jne    31f3e <__rdos_backtrace_dwarf_add+0xf3e>
   31f65:	45 89 e9             	mov    %r13d,%r9d
   31f68:	48 8b 84 24 70 02 00 	mov    0x270(%rsp),%rax
   31f6f:	00 
   31f70:	41 29 c1             	sub    %eax,%r9d
   31f73:	be c8 00 00 00       	mov    $0xc8,%esi
   31f78:	4d 89 ec             	mov    %r13,%r12
   31f7b:	4c 8d ac 24 70 01 00 	lea    0x170(%rsp),%r13
   31f82:	00 
   31f83:	4c 89 ef             	mov    %r13,%rdi
   31f86:	48 8d 15 3a cf 00 00 	lea    0xcf3a(%rip),%rdx        # 3eec7 <elf_crc32.crc32_table+0x7a7>
   31f8d:	48 8d 0d ca cf 00 00 	lea    0xcfca(%rip),%rcx        # 3ef5e <elf_crc32.crc32_table+0x83e>
   31f94:	4c 8d 05 b3 c1 00 00 	lea    0xc1b3(%rip),%r8        # 3e14e <str.0+0x32e>
   31f9b:	31 c0                	xor    %eax,%eax
   31f9d:	e8 6e 20 fd ff       	callq  4010 <snprintf@plt>
   31fa2:	48 8b bc 24 b0 02 00 	mov    0x2b0(%rsp),%rdi
   31fa9:	00 
   31faa:	4c 89 ee             	mov    %r13,%rsi
   31fad:	4d 89 e5             	mov    %r12,%r13
   31fb0:	31 d2                	xor    %edx,%edx
   31fb2:	ff 94 24 a8 02 00 00 	callq  *0x2a8(%rsp)
   31fb9:	b8 01 00 00 00       	mov    $0x1,%eax
   31fbe:	48 83 c3 ff          	add    $0xffffffffffffffff,%rbx
   31fc2:	83 c5 07             	add    $0x7,%ebp
   31fc5:	45 84 f6             	test   %r14b,%r14b
   31fc8:	78 84                	js     31f4e <__rdos_backtrace_dwarf_add+0xf4e>
   31fca:	eb 62                	jmp    3202e <__rdos_backtrace_dwarf_add+0x102e>
   31fcc:	83 7c 24 14 00       	cmpl   $0x0,0x14(%rsp)
   31fd1:	75 56                	jne    32029 <__rdos_backtrace_dwarf_add+0x1029>
   31fd3:	45 89 e9             	mov    %r13d,%r9d
   31fd6:	48 8b 84 24 70 02 00 	mov    0x270(%rsp),%rax
   31fdd:	00 
   31fde:	41 29 c1             	sub    %eax,%r9d
   31fe1:	be c8 00 00 00       	mov    $0xc8,%esi
   31fe6:	48 8d 9c 24 70 01 00 	lea    0x170(%rsp),%rbx
   31fed:	00 
   31fee:	48 89 df             	mov    %rbx,%rdi
   31ff1:	48 8d 15 cf ce 00 00 	lea    0xcecf(%rip),%rdx        # 3eec7 <elf_crc32.crc32_table+0x7a7>
   31ff8:	48 8d 0d b8 ce 00 00 	lea    0xceb8(%rip),%rcx        # 3eeb7 <elf_crc32.crc32_table+0x797>
   31fff:	4c 8d 05 48 c1 00 00 	lea    0xc148(%rip),%r8        # 3e14e <str.0+0x32e>
   32006:	31 c0                	xor    %eax,%eax
   32008:	e8 03 20 fd ff       	callq  4010 <snprintf@plt>
   3200d:	48 8b bc 24 b0 02 00 	mov    0x2b0(%rsp),%rdi
   32014:	00 
   32015:	48 89 de             	mov    %rbx,%rsi
   32018:	31 d2                	xor    %edx,%edx
   3201a:	ff 94 24 a8 02 00 00 	callq  *0x2a8(%rsp)
   32021:	c7 44 24 14 01 00 00 	movl   $0x1,0x14(%rsp)
   32028:	00 
   32029:	31 db                	xor    %ebx,%ebx
   3202b:	45 31 ff             	xor    %r15d,%r15d
   3202e:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
   32033:	48 85 d2             	test   %rdx,%rdx
   32036:	74 23                	je     3205b <__rdos_backtrace_dwarf_add+0x105b>
   32038:	48 8b 84 24 00 01 00 	mov    0x100(%rsp),%rax
   3203f:	00 
   32040:	48 8b 4c 24 38       	mov    0x38(%rsp),%rcx
   32045:	89 14 c8             	mov    %edx,(%rax,%rcx,8)
   32048:	44 89 7c c8 04       	mov    %r15d,0x4(%rax,%rcx,8)
   3204d:	48 83 c1 01          	add    $0x1,%rcx
   32051:	48 89 4c 24 38       	mov    %rcx,0x38(%rsp)
   32056:	e9 a7 fd ff ff       	jmpq   31e02 <__rdos_backtrace_dwarf_add+0xe02>
   3205b:	4c 89 6c 24 28       	mov    %r13,0x28(%rsp)
   32060:	4c 8b 74 24 18       	mov    0x18(%rsp),%r14
   32065:	48 8b bc 24 00 01 00 	mov    0x100(%rsp),%rdi
   3206c:	00 
   3206d:	4c 8b 44 24 38       	mov    0x38(%rsp),%r8
   32072:	e9 11 02 00 00       	jmpq   32288 <__rdos_backtrace_dwarf_add+0x1288>
   32077:	31 db                	xor    %ebx,%ebx
   32079:	31 c0                	xor    %eax,%eax
   3207b:	4c 8b 74 24 18       	mov    0x18(%rsp),%r14
   32080:	4c 8b 6c 24 28       	mov    0x28(%rsp),%r13
   32085:	48 8b 8c 24 d8 00 00 	mov    0xd8(%rsp),%rcx
   3208c:	00 
   3208d:	48 85 c9             	test   %rcx,%rcx
   32090:	75 22                	jne    320b4 <__rdos_backtrace_dwarf_add+0x10b4>
   32092:	e9 85 00 00 00       	jmpq   3211c <__rdos_backtrace_dwarf_add+0x111c>
   32097:	4c 89 f1             	mov    %r14,%rcx
   3209a:	48 83 c1 ff          	add    $0xffffffffffffffff,%rcx
   3209e:	83 c3 07             	add    $0x7,%ebx
   320a1:	40 84 ed             	test   %bpl,%bpl
   320a4:	4c 8b 74 24 18       	mov    0x18(%rsp),%r14
   320a9:	0f 89 cd 00 00 00    	jns    3217c <__rdos_backtrace_dwarf_add+0x117c>
   320af:	48 85 c9             	test   %rcx,%rcx
   320b2:	74 68                	je     3211c <__rdos_backtrace_dwarf_add+0x111c>
   320b4:	49 89 ce             	mov    %rcx,%r14
   320b7:	41 0f b6 6d 00       	movzbl 0x0(%r13),%ebp
   320bc:	49 83 c5 01          	add    $0x1,%r13
   320c0:	83 fb 40             	cmp    $0x40,%ebx
   320c3:	72 d2                	jb     32097 <__rdos_backtrace_dwarf_add+0x1097>
   320c5:	85 c0                	test   %eax,%eax
   320c7:	75 ce                	jne    32097 <__rdos_backtrace_dwarf_add+0x1097>
   320c9:	45 89 e9             	mov    %r13d,%r9d
   320cc:	48 8b 84 24 70 02 00 	mov    0x270(%rsp),%rax
   320d3:	00 
   320d4:	41 29 c1             	sub    %eax,%r9d
   320d7:	be c8 00 00 00       	mov    $0xc8,%esi
   320dc:	4c 8d bc 24 70 01 00 	lea    0x170(%rsp),%r15
   320e3:	00 
   320e4:	4c 89 ff             	mov    %r15,%rdi
   320e7:	48 8d 15 d9 cd 00 00 	lea    0xcdd9(%rip),%rdx        # 3eec7 <elf_crc32.crc32_table+0x7a7>
   320ee:	48 8d 0d 69 ce 00 00 	lea    0xce69(%rip),%rcx        # 3ef5e <elf_crc32.crc32_table+0x83e>
   320f5:	4c 8d 05 52 c0 00 00 	lea    0xc052(%rip),%r8        # 3e14e <str.0+0x32e>
   320fc:	31 c0                	xor    %eax,%eax
   320fe:	e8 0d 1f fd ff       	callq  4010 <snprintf@plt>
   32103:	4c 89 e7             	mov    %r12,%rdi
   32106:	4c 89 fe             	mov    %r15,%rsi
   32109:	31 d2                	xor    %edx,%edx
   3210b:	ff 94 24 a8 02 00 00 	callq  *0x2a8(%rsp)
   32112:	b8 01 00 00 00       	mov    $0x1,%eax
   32117:	e9 7b ff ff ff       	jmpq   32097 <__rdos_backtrace_dwarf_add+0x1097>
   3211c:	4c 89 f5             	mov    %r14,%rbp
   3211f:	83 7c 24 14 00       	cmpl   $0x0,0x14(%rsp)
   32124:	75 51                	jne    32177 <__rdos_backtrace_dwarf_add+0x1177>
   32126:	45 89 e9             	mov    %r13d,%r9d
   32129:	48 8b 84 24 70 02 00 	mov    0x270(%rsp),%rax
   32130:	00 
   32131:	41 29 c1             	sub    %eax,%r9d
   32134:	be c8 00 00 00       	mov    $0xc8,%esi
   32139:	48 8d 9c 24 70 01 00 	lea    0x170(%rsp),%rbx
   32140:	00 
   32141:	48 89 df             	mov    %rbx,%rdi
   32144:	48 8d 15 7c cd 00 00 	lea    0xcd7c(%rip),%rdx        # 3eec7 <elf_crc32.crc32_table+0x7a7>
   3214b:	48 8d 0d 65 cd 00 00 	lea    0xcd65(%rip),%rcx        # 3eeb7 <elf_crc32.crc32_table+0x797>
   32152:	4c 8d 05 f5 bf 00 00 	lea    0xbff5(%rip),%r8        # 3e14e <str.0+0x32e>
   32159:	31 c0                	xor    %eax,%eax
   3215b:	e8 b0 1e fd ff       	callq  4010 <snprintf@plt>
   32160:	4c 89 e7             	mov    %r12,%rdi
   32163:	48 89 de             	mov    %rbx,%rsi
   32166:	31 d2                	xor    %edx,%edx
   32168:	ff 94 24 a8 02 00 00 	callq  *0x2a8(%rsp)
   3216f:	c7 44 24 14 01 00 00 	movl   $0x1,0x14(%rsp)
   32176:	00 
   32177:	31 c9                	xor    %ecx,%ecx
   32179:	49 89 ee             	mov    %rbp,%r14
   3217c:	31 db                	xor    %ebx,%ebx
   3217e:	31 c0                	xor    %eax,%eax
   32180:	48 85 c9             	test   %rcx,%rcx
   32183:	75 22                	jne    321a7 <__rdos_backtrace_dwarf_add+0x11a7>
   32185:	e9 85 00 00 00       	jmpq   3220f <__rdos_backtrace_dwarf_add+0x120f>
   3218a:	4c 89 f1             	mov    %r14,%rcx
   3218d:	48 83 c1 ff          	add    $0xffffffffffffffff,%rcx
   32191:	83 c3 07             	add    $0x7,%ebx
   32194:	40 84 ed             	test   %bpl,%bpl
   32197:	4c 8b 74 24 18       	mov    0x18(%rsp),%r14
   3219c:	0f 89 d9 00 00 00    	jns    3227b <__rdos_backtrace_dwarf_add+0x127b>
   321a2:	48 85 c9             	test   %rcx,%rcx
   321a5:	74 68                	je     3220f <__rdos_backtrace_dwarf_add+0x120f>
   321a7:	49 89 ce             	mov    %rcx,%r14
   321aa:	41 0f b6 6d 00       	movzbl 0x0(%r13),%ebp
   321af:	49 83 c5 01          	add    $0x1,%r13
   321b3:	83 fb 40             	cmp    $0x40,%ebx
   321b6:	72 d2                	jb     3218a <__rdos_backtrace_dwarf_add+0x118a>
   321b8:	85 c0                	test   %eax,%eax
   321ba:	75 ce                	jne    3218a <__rdos_backtrace_dwarf_add+0x118a>
   321bc:	45 89 e9             	mov    %r13d,%r9d
   321bf:	48 8b 84 24 70 02 00 	mov    0x270(%rsp),%rax
   321c6:	00 
   321c7:	41 29 c1             	sub    %eax,%r9d
   321ca:	be c8 00 00 00       	mov    $0xc8,%esi
   321cf:	4c 8d bc 24 70 01 00 	lea    0x170(%rsp),%r15
   321d6:	00 
   321d7:	4c 89 ff             	mov    %r15,%rdi
   321da:	48 8d 15 e6 cc 00 00 	lea    0xcce6(%rip),%rdx        # 3eec7 <elf_crc32.crc32_table+0x7a7>
   321e1:	48 8d 0d 76 cd 00 00 	lea    0xcd76(%rip),%rcx        # 3ef5e <elf_crc32.crc32_table+0x83e>
   321e8:	4c 8d 05 5f bf 00 00 	lea    0xbf5f(%rip),%r8        # 3e14e <str.0+0x32e>
   321ef:	31 c0                	xor    %eax,%eax
   321f1:	e8 1a 1e fd ff       	callq  4010 <snprintf@plt>
   321f6:	4c 89 e7             	mov    %r12,%rdi
   321f9:	4c 89 fe             	mov    %r15,%rsi
   321fc:	31 d2                	xor    %edx,%edx
   321fe:	ff 94 24 a8 02 00 00 	callq  *0x2a8(%rsp)
   32205:	b8 01 00 00 00       	mov    $0x1,%eax
   3220a:	e9 7b ff ff ff       	jmpq   3218a <__rdos_backtrace_dwarf_add+0x118a>
   3220f:	4c 89 f5             	mov    %r14,%rbp
   32212:	83 7c 24 14 00       	cmpl   $0x0,0x14(%rsp)
   32217:	4c 89 6c 24 28       	mov    %r13,0x28(%rsp)
   3221c:	75 51                	jne    3226f <__rdos_backtrace_dwarf_add+0x126f>
   3221e:	45 89 e9             	mov    %r13d,%r9d
   32221:	48 8b 84 24 70 02 00 	mov    0x270(%rsp),%rax
   32228:	00 
   32229:	41 29 c1             	sub    %eax,%r9d
   3222c:	be c8 00 00 00       	mov    $0xc8,%esi
   32231:	48 8d 9c 24 70 01 00 	lea    0x170(%rsp),%rbx
   32238:	00 
   32239:	48 89 df             	mov    %rbx,%rdi
   3223c:	48 8d 15 84 cc 00 00 	lea    0xcc84(%rip),%rdx        # 3eec7 <elf_crc32.crc32_table+0x7a7>
   32243:	48 8d 0d 6d cc 00 00 	lea    0xcc6d(%rip),%rcx        # 3eeb7 <elf_crc32.crc32_table+0x797>
   3224a:	4c 8d 05 fd be 00 00 	lea    0xbefd(%rip),%r8        # 3e14e <str.0+0x32e>
   32251:	31 c0                	xor    %eax,%eax
   32253:	e8 b8 1d fd ff       	callq  4010 <snprintf@plt>
   32258:	4c 89 e7             	mov    %r12,%rdi
   3225b:	48 89 de             	mov    %rbx,%rsi
   3225e:	31 d2                	xor    %edx,%edx
   32260:	ff 94 24 a8 02 00 00 	callq  *0x2a8(%rsp)
   32267:	c7 44 24 14 01 00 00 	movl   $0x1,0x14(%rsp)
   3226e:	00 
   3226f:	31 db                	xor    %ebx,%ebx
   32271:	45 31 c0             	xor    %r8d,%r8d
   32274:	31 ff                	xor    %edi,%edi
   32276:	49 89 ee             	mov    %rbp,%r14
   32279:	eb 0d                	jmp    32288 <__rdos_backtrace_dwarf_add+0x1288>
   3227b:	4c 89 6c 24 28       	mov    %r13,0x28(%rsp)
   32280:	45 31 c0             	xor    %r8d,%r8d
   32283:	31 ff                	xor    %edi,%edi
   32285:	48 89 cb             	mov    %rcx,%rbx
   32288:	48 8b 84 24 f8 00 00 	mov    0xf8(%rsp),%rax
   3228f:	00 
   32290:	48 89 c2             	mov    %rax,%rdx
   32293:	48 c1 e0 05          	shl    $0x5,%rax
   32297:	48 8b 4c 24 30       	mov    0x30(%rsp),%rcx
   3229c:	48 8b b4 24 e0 00 00 	mov    0xe0(%rsp),%rsi
   322a3:	00 
   322a4:	48 89 34 01          	mov    %rsi,(%rcx,%rax,1)
   322a8:	48 8b b4 24 d0 00 00 	mov    0xd0(%rsp),%rsi
   322af:	00 
   322b0:	89 74 01 08          	mov    %esi,0x8(%rcx,%rax,1)
   322b4:	8b b4 24 f0 00 00 00 	mov    0xf0(%rsp),%esi
   322bb:	89 74 01 0c          	mov    %esi,0xc(%rcx,%rax,1)
   322bf:	4c 89 44 01 10       	mov    %r8,0x10(%rcx,%rax,1)
   322c4:	48 89 7c 01 18       	mov    %rdi,0x18(%rcx,%rax,1)
   322c9:	48 83 c2 01          	add    $0x1,%rdx
   322cd:	48 89 94 24 f8 00 00 	mov    %rdx,0xf8(%rsp)
   322d4:	00 
   322d5:	83 7c 24 14 00       	cmpl   $0x0,0x14(%rsp)
   322da:	0f 84 2e f6 ff ff    	je     3190e <__rdos_backtrace_dwarf_add+0x90e>
   322e0:	e9 da 07 00 00       	jmpq   32abf <__rdos_backtrace_dwarf_add+0x1abf>
   322e5:	48 8b 84 24 70 02 00 	mov    0x270(%rsp),%rax
   322ec:	00 
   322ed:	41 29 c5             	sub    %eax,%r13d
   322f0:	be c8 00 00 00       	mov    $0xc8,%esi
   322f5:	48 8d 9c 24 70 01 00 	lea    0x170(%rsp),%rbx
   322fc:	00 
   322fd:	48 89 df             	mov    %rbx,%rdi
   32300:	48 8d 15 c0 cb 00 00 	lea    0xcbc0(%rip),%rdx        # 3eec7 <elf_crc32.crc32_table+0x7a7>
   32307:	48 8d 0d a9 cb 00 00 	lea    0xcba9(%rip),%rcx        # 3eeb7 <elf_crc32.crc32_table+0x797>
   3230e:	4c 8d 05 39 be 00 00 	lea    0xbe39(%rip),%r8        # 3e14e <str.0+0x32e>
   32315:	45 89 e9             	mov    %r13d,%r9d
   32318:	31 c0                	xor    %eax,%eax
   3231a:	e8 f1 1c fd ff       	callq  4010 <snprintf@plt>
   3231f:	4c 8b a4 24 b0 02 00 	mov    0x2b0(%rsp),%r12
   32326:	00 
   32327:	4c 89 e7             	mov    %r12,%rdi
   3232a:	48 89 de             	mov    %rbx,%rsi
   3232d:	31 d2                	xor    %edx,%edx
   3232f:	ff 94 24 a8 02 00 00 	callq  *0x2a8(%rsp)
   32336:	ba 20 00 00 00       	mov    $0x20,%edx
   3233b:	48 8b 5c 24 30       	mov    0x30(%rsp),%rbx
   32340:	48 89 df             	mov    %rbx,%rdi
   32343:	48 8b 74 24 20       	mov    0x20(%rsp),%rsi
   32348:	48 8d 0d b1 10 00 00 	lea    0x10b1(%rip),%rcx        # 33400 <abbrev_compare>
   3234f:	e8 7c 69 00 00       	callq  38cd0 <__rdos_backtrace_qsort>
   32354:	eb 02                	jmp    32358 <__rdos_backtrace_dwarf_add+0x1358>
   32356:	31 db                	xor    %ebx,%ebx
   32358:	4c 8b 4c 24 50       	mov    0x50(%rsp),%r9
   3235d:	48 8b 44 24 58       	mov    0x58(%rsp),%rax
   32362:	48 85 c0             	test   %rax,%rax
   32365:	48 89 5c 24 30       	mov    %rbx,0x30(%rsp)
   3236a:	74 17                	je     32383 <__rdos_backtrace_dwarf_add+0x1383>
   3236c:	49 8d 49 01          	lea    0x1(%r9),%rcx
   32370:	48 89 4c 24 50       	mov    %rcx,0x50(%rsp)
   32375:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
   32379:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
   3237e:	45 8a 31             	mov    (%r9),%r14b
   32381:	eb 54                	jmp    323d7 <__rdos_backtrace_dwarf_add+0x13d7>
   32383:	83 7c 24 78 00       	cmpl   $0x0,0x78(%rsp)
   32388:	74 05                	je     3238f <__rdos_backtrace_dwarf_add+0x138f>
   3238a:	45 31 f6             	xor    %r14d,%r14d
   3238d:	eb 48                	jmp    323d7 <__rdos_backtrace_dwarf_add+0x13d7>
   3238f:	4c 8b 44 24 40       	mov    0x40(%rsp),%r8
   32394:	44 2b 4c 24 48       	sub    0x48(%rsp),%r9d
   32399:	45 31 f6             	xor    %r14d,%r14d
   3239c:	be c8 00 00 00       	mov    $0xc8,%esi
   323a1:	48 8d 9c 24 70 01 00 	lea    0x170(%rsp),%rbx
   323a8:	00 
   323a9:	48 89 df             	mov    %rbx,%rdi
   323ac:	48 8d 15 14 cb 00 00 	lea    0xcb14(%rip),%rdx        # 3eec7 <elf_crc32.crc32_table+0x7a7>
   323b3:	48 8d 0d fd ca 00 00 	lea    0xcafd(%rip),%rcx        # 3eeb7 <elf_crc32.crc32_table+0x797>
   323ba:	31 c0                	xor    %eax,%eax
   323bc:	e8 4f 1c fd ff       	callq  4010 <snprintf@plt>
   323c1:	48 8b 7c 24 70       	mov    0x70(%rsp),%rdi
   323c6:	48 89 de             	mov    %rbx,%rsi
   323c9:	31 d2                	xor    %edx,%edx
   323cb:	ff 54 24 68          	callq  *0x68(%rsp)
   323cf:	c7 44 24 78 01 00 00 	movl   $0x1,0x78(%rsp)
   323d6:	00 
   323d7:	be 78 00 00 00       	mov    $0x78,%esi
   323dc:	48 8b 6c 24 18       	mov    0x18(%rsp),%rbp
   323e1:	48 89 ef             	mov    %rbp,%rdi
   323e4:	48 8b 9c 24 a8 02 00 	mov    0x2a8(%rsp),%rbx
   323eb:	00 
   323ec:	48 89 da             	mov    %rbx,%rdx
   323ef:	4c 89 e1             	mov    %r12,%rcx
   323f2:	e8 49 ea ff ff       	callq  30e40 <__rdos_backtrace_alloc>
   323f7:	48 85 c0             	test   %rax,%rax
   323fa:	0f 84 f1 05 00 00    	je     329f1 <__rdos_backtrace_dwarf_add+0x19f1>
   32400:	49 89 c5             	mov    %rax,%r13
   32403:	41 0f b6 c6          	movzbl %r14b,%eax
   32407:	66 0f 6f 44 24 50    	movdqa 0x50(%rsp),%xmm0
   3240d:	f3 41 0f 7f 45 00    	movdqu %xmm0,0x0(%r13)
   32413:	66 48 0f 7e c1       	movq   %xmm0,%rcx
   32418:	48 2b 8c 24 50 01 00 	sub    0x150(%rsp),%rcx
   3241f:	00 
   32420:	49 89 4d 10          	mov    %rcx,0x10(%r13)
   32424:	48 8b 8c 24 88 00 00 	mov    0x88(%rsp),%rcx
   3242b:	00 
   3242c:	41 89 4d 18          	mov    %ecx,0x18(%r13)
   32430:	8b 8c 24 f4 00 00 00 	mov    0xf4(%rsp),%ecx
   32437:	41 89 4d 1c          	mov    %ecx,0x1c(%r13)
   3243b:	41 89 45 20          	mov    %eax,0x20(%r13)
   3243f:	4d 89 ee             	mov    %r13,%r14
   32442:	49 83 c6 48          	add    $0x48,%r14
   32446:	66 0f ef c0          	pxor   %xmm0,%xmm0
   3244a:	f3 41 0f 7f 45 28    	movdqu %xmm0,0x28(%r13)
   32450:	f3 41 0f 7f 45 38    	movdqu %xmm0,0x38(%r13)
   32456:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
   3245b:	49 89 45 48          	mov    %rax,0x48(%r13)
   3245f:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
   32464:	49 89 45 50          	mov    %rax,0x50(%r13)
   32468:	f3 41 0f 7f 45 58    	movdqu %xmm0,0x58(%r13)
   3246e:	f3 41 0f 7f 45 68    	movdqu %xmm0,0x68(%r13)
   32474:	48 89 ef             	mov    %rbp,%rdi
   32477:	48 8b b4 24 08 01 00 	mov    0x108(%rsp),%rsi
   3247e:	00 
   3247f:	48 8d 54 24 40       	lea    0x40(%rsp),%rdx
   32484:	48 8b 8c 24 90 02 00 	mov    0x290(%rsp),%rcx
   3248b:	00 
   3248c:	4c 8b 84 24 98 02 00 	mov    0x298(%rsp),%r8
   32493:	00 
   32494:	4c 8b 8c 24 80 02 00 	mov    0x280(%rsp),%r9
   3249b:	00 
   3249c:	48 8d 84 24 10 01 00 	lea    0x110(%rsp),%rax
   324a3:	00 
   324a4:	50                   	push   %rax
   324a5:	41 55                	push   %r13
   324a7:	41 54                	push   %r12
   324a9:	53                   	push   %rbx
   324aa:	8b 84 24 c0 02 00 00 	mov    0x2c0(%rsp),%eax
   324b1:	50                   	push   %rax
   324b2:	ff b4 24 b0 02 00 00 	pushq  0x2b0(%rsp)
   324b9:	e8 b2 08 00 00       	callq  32d70 <find_address_ranges>
   324be:	48 83 c4 30          	add    $0x30,%rsp
   324c2:	85 c0                	test   %eax,%eax
   324c4:	0f 84 4a 05 00 00    	je     32a14 <__rdos_backtrace_dwarf_add+0x1a14>
   324ca:	83 7c 24 78 00       	cmpl   $0x0,0x78(%rsp)
   324cf:	0f 85 91 05 00 00    	jne    32a66 <__rdos_backtrace_dwarf_add+0x1a66>
   324d5:	8b 84 24 c8 00 00 00 	mov    0xc8(%rsp),%eax
   324dc:	4c 8b 94 24 40 01 00 	mov    0x140(%rsp),%r10
   324e3:	00 
   324e4:	48 8b 9c 24 48 01 00 	mov    0x148(%rsp),%rbx
   324eb:	00 
   324ec:	48 85 db             	test   %rbx,%rbx
   324ef:	4c 8b 84 24 a8 02 00 	mov    0x2a8(%rsp),%r8
   324f6:	00 
   324f7:	44 8b b4 24 a0 02 00 	mov    0x2a0(%rsp),%r14d
   324fe:	00 
   324ff:	4c 8b ac 24 e8 00 00 	mov    0xe8(%rsp),%r13
   32506:	00 
   32507:	0f 85 bb eb ff ff    	jne    310c8 <__rdos_backtrace_dwarf_add+0xc8>
   3250d:	31 c9                	xor    %ecx,%ecx
   3250f:	85 c0                	test   %eax,%eax
   32511:	b8 00 00 00 00       	mov    $0x0,%eax
   32516:	48 8b 6c 24 18       	mov    0x18(%rsp),%rbp
   3251b:	0f 85 aa 01 00 00    	jne    326cb <__rdos_backtrace_dwarf_add+0x16cb>
   32521:	48 8d b4 24 10 01 00 	lea    0x110(%rsp),%rsi
   32528:	00 
   32529:	48 89 ef             	mov    %rbp,%rdi
   3252c:	4c 89 c2             	mov    %r8,%rdx
   3252f:	4c 89 e1             	mov    %r12,%rcx
   32532:	4d 89 c7             	mov    %r8,%r15
   32535:	e8 66 ea ff ff       	callq  30fa0 <__rdos_backtrace_vector_release>
   3253a:	85 c0                	test   %eax,%eax
   3253c:	0f 84 94 02 00 00    	je     327d6 <__rdos_backtrace_dwarf_add+0x17d6>
   32542:	48 89 eb             	mov    %rbp,%rbx
   32545:	48 8b ac 24 10 01 00 	mov    0x110(%rsp),%rbp
   3254c:	00 
   3254d:	4c 89 ac 24 e8 00 00 	mov    %r13,0xe8(%rsp)
   32554:	00 
   32555:	4d 89 f5             	mov    %r14,%r13
   32558:	4d 89 e6             	mov    %r12,%r14
   3255b:	4c 8b a4 24 28 01 00 	mov    0x128(%rsp),%r12
   32562:	00 
   32563:	48 8d 0d 16 07 00 00 	lea    0x716(%rip),%rcx        # 32c80 <unit_addrs_compare>
   3256a:	ba 18 00 00 00       	mov    $0x18,%edx
   3256f:	48 89 ef             	mov    %rbp,%rdi
   32572:	4c 89 e6             	mov    %r12,%rsi
   32575:	e8 56 67 00 00       	callq  38cd0 <__rdos_backtrace_qsort>
   3257a:	be 88 00 00 00       	mov    $0x88,%esi
   3257f:	48 89 df             	mov    %rbx,%rdi
   32582:	4c 89 fa             	mov    %r15,%rdx
   32585:	4c 89 f1             	mov    %r14,%rcx
   32588:	4c 8b bc 24 e8 00 00 	mov    0xe8(%rsp),%r15
   3258f:	00 
   32590:	e8 ab e8 ff ff       	callq  30e40 <__rdos_backtrace_alloc>
   32595:	48 85 c0             	test   %rax,%rax
   32598:	0f 84 38 02 00 00    	je     327d6 <__rdos_backtrace_dwarf_add+0x17d6>
   3259e:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   325a5:	48 8b 8c 24 08 01 00 	mov    0x108(%rsp),%rcx
   325ac:	00 
   325ad:	48 89 48 08          	mov    %rcx,0x8(%rax)
   325b1:	48 89 68 10          	mov    %rbp,0x10(%rax)
   325b5:	4c 89 60 18          	mov    %r12,0x18(%rax)
   325b9:	48 8b 8c 24 58 01 00 	mov    0x158(%rsp),%rcx
   325c0:	00 
   325c1:	48 89 48 20          	mov    %rcx,0x20(%rax)
   325c5:	4c 89 78 28          	mov    %r15,0x28(%rax)
   325c9:	48 8b 8c 24 60 01 00 	mov    0x160(%rsp),%rcx
   325d0:	00 
   325d1:	48 89 48 30          	mov    %rcx,0x30(%rax)
   325d5:	48 8b 8c 24 68 01 00 	mov    0x168(%rsp),%rcx
   325dc:	00 
   325dd:	48 89 48 38          	mov    %rcx,0x38(%rax)
   325e1:	48 8b 8c 24 80 02 00 	mov    0x280(%rsp),%rcx
   325e8:	00 
   325e9:	48 89 48 40          	mov    %rcx,0x40(%rax)
   325ed:	48 8b 8c 24 88 02 00 	mov    0x288(%rsp),%rcx
   325f4:	00 
   325f5:	48 89 48 48          	mov    %rcx,0x48(%rax)
   325f9:	48 8b 8c 24 90 02 00 	mov    0x290(%rsp),%rcx
   32600:	00 
   32601:	48 89 48 50          	mov    %rcx,0x50(%rax)
   32605:	48 8b 8c 24 98 02 00 	mov    0x298(%rsp),%rcx
   3260c:	00 
   3260d:	48 89 48 58          	mov    %rcx,0x58(%rax)
   32611:	44 89 68 60          	mov    %r13d,0x60(%rax)
   32615:	66 0f ef c0          	pxor   %xmm0,%xmm0
   32619:	f3 0f 7f 40 68       	movdqu %xmm0,0x68(%rax)
   3261e:	f3 0f 7f 40 78       	movdqu %xmm0,0x78(%rax)
   32623:	83 7b 08 00          	cmpl   $0x0,0x8(%rbx)
   32627:	0f 85 b1 05 00 00    	jne    32bde <__rdos_backtrace_dwarf_add+0x1bde>
   3262d:	48 8b 8c 24 b8 02 00 	mov    0x2b8(%rsp),%rcx
   32634:	00 
   32635:	48 83 c3 20          	add    $0x20,%rbx
   32639:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   32640:	48 89 da             	mov    %rbx,%rdx
   32643:	48 8b 1b             	mov    (%rbx),%rbx
   32646:	48 85 db             	test   %rbx,%rbx
   32649:	75 f5                	jne    32640 <__rdos_backtrace_dwarf_add+0x1640>
   3264b:	48 89 02             	mov    %rax,(%rdx)
   3264e:	48 8d 05 9b 05 00 00 	lea    0x59b(%rip),%rax        # 32bf0 <dwarf_fileline>
   32655:	48 89 01             	mov    %rax,(%rcx)
   32658:	b8 01 00 00 00       	mov    $0x1,%eax
   3265d:	e9 76 01 00 00       	jmpq   327d8 <__rdos_backtrace_dwarf_add+0x17d8>
   32662:	83 7c 24 08 00       	cmpl   $0x0,0x8(%rsp)
   32667:	4c 8b a4 24 b0 02 00 	mov    0x2b0(%rsp),%r12
   3266e:	00 
   3266f:	75 49                	jne    326ba <__rdos_backtrace_dwarf_add+0x16ba>
   32671:	48 8b 84 24 70 02 00 	mov    0x270(%rsp),%rax
   32678:	00 
   32679:	41 29 c5             	sub    %eax,%r13d
   3267c:	48 8d 15 44 c8 00 00 	lea    0xc844(%rip),%rdx        # 3eec7 <elf_crc32.crc32_table+0x7a7>
   32683:	48 8d 0d 2d c8 00 00 	lea    0xc82d(%rip),%rcx        # 3eeb7 <elf_crc32.crc32_table+0x797>
   3268a:	4c 8d 05 bd ba 00 00 	lea    0xbabd(%rip),%r8        # 3e14e <str.0+0x32e>
   32691:	48 8d ac 24 70 01 00 	lea    0x170(%rsp),%rbp
   32698:	00 
   32699:	be c8 00 00 00       	mov    $0xc8,%esi
   3269e:	48 89 ef             	mov    %rbp,%rdi
   326a1:	45 89 e9             	mov    %r13d,%r9d
   326a4:	31 c0                	xor    %eax,%eax
   326a6:	e8 65 19 fd ff       	callq  4010 <snprintf@plt>
   326ab:	4c 89 e7             	mov    %r12,%rdi
   326ae:	48 89 ee             	mov    %rbp,%rsi
   326b1:	31 d2                	xor    %edx,%edx
   326b3:	ff 94 24 a8 02 00 00 	callq  *0x2a8(%rsp)
   326ba:	31 c9                	xor    %ecx,%ecx
   326bc:	31 c0                	xor    %eax,%eax
   326be:	48 8b 6c 24 18       	mov    0x18(%rsp),%rbp
   326c3:	4c 8b 84 24 a8 02 00 	mov    0x2a8(%rsp),%r8
   326ca:	00 
   326cb:	48 89 ef             	mov    %rbp,%rdi
   326ce:	48 89 ce             	mov    %rcx,%rsi
   326d1:	48 89 c2             	mov    %rax,%rdx
   326d4:	4c 89 c1             	mov    %r8,%rcx
   326d7:	4d 89 e0             	mov    %r12,%r8
   326da:	e8 a1 e7 ff ff       	callq  30e80 <__rdos_backtrace_free>
   326df:	48 83 bc 24 28 01 00 	cmpq   $0x0,0x128(%rsp)
   326e6:	00 00 
   326e8:	0f 84 e8 00 00 00    	je     327d6 <__rdos_backtrace_dwarf_add+0x17d6>
   326ee:	49 89 ee             	mov    %rbp,%r14
   326f1:	48 8b 84 24 10 01 00 	mov    0x110(%rsp),%rax
   326f8:	00 
   326f9:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   326fe:	31 db                	xor    %ebx,%ebx
   32700:	eb 43                	jmp    32745 <__rdos_backtrace_dwarf_add+0x1745>
   32702:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   32709:	00 00 00 
   3270c:	0f 1f 40 00          	nopl   0x0(%rax)
   32710:	31 d2                	xor    %edx,%edx
   32712:	4c 89 f7             	mov    %r14,%rdi
   32715:	48 8b 8c 24 a8 02 00 	mov    0x2a8(%rsp),%rcx
   3271c:	00 
   3271d:	4c 8b 84 24 b0 02 00 	mov    0x2b0(%rsp),%r8
   32724:	00 
   32725:	e8 56 e7 ff ff       	callq  30e80 <__rdos_backtrace_free>
   3272a:	66 0f ef c0          	pxor   %xmm0,%xmm0
   3272e:	f3 0f 7f 45 00       	movdqu %xmm0,0x0(%rbp)
   32733:	48 83 c3 01          	add    $0x1,%rbx
   32737:	48 3b 9c 24 28 01 00 	cmp    0x128(%rsp),%rbx
   3273e:	00 
   3273f:	0f 83 91 00 00 00    	jae    327d6 <__rdos_backtrace_dwarf_add+0x17d6>
   32745:	48 8d 04 5b          	lea    (%rbx,%rbx,2),%rax
   32749:	48 8b 4c 24 20       	mov    0x20(%rsp),%rcx
   3274e:	4c 8b 6c c1 10       	mov    0x10(%rcx,%rax,8),%r13
   32753:	49 8d 6d 48          	lea    0x48(%r13),%rbp
   32757:	49 83 7d 48 00       	cmpq   $0x0,0x48(%r13)
   3275c:	49 8b 75 50          	mov    0x50(%r13),%rsi
   32760:	74 ae                	je     32710 <__rdos_backtrace_dwarf_add+0x1710>
   32762:	48 89 ac 24 88 00 00 	mov    %rbp,0x88(%rsp)
   32769:	00 
   3276a:	48 89 5c 24 08       	mov    %rbx,0x8(%rsp)
   3276f:	bd 18 00 00 00       	mov    $0x18,%ebp
   32774:	31 db                	xor    %ebx,%ebx
   32776:	4c 8b bc 24 b0 02 00 	mov    0x2b0(%rsp),%r15
   3277d:	00 
   3277e:	4c 8b a4 24 a8 02 00 	mov    0x2a8(%rsp),%r12
   32785:	00 
   32786:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   3278d:	00 00 00 
   32790:	48 8b 54 2e f8       	mov    -0x8(%rsi,%rbp,1),%rdx
   32795:	48 8b 34 2e          	mov    (%rsi,%rbp,1),%rsi
   32799:	48 c1 e2 03          	shl    $0x3,%rdx
   3279d:	4c 89 f7             	mov    %r14,%rdi
   327a0:	4c 89 e1             	mov    %r12,%rcx
   327a3:	4d 89 f8             	mov    %r15,%r8
   327a6:	e8 d5 e6 ff ff       	callq  30e80 <__rdos_backtrace_free>
   327ab:	48 83 c3 01          	add    $0x1,%rbx
   327af:	49 8b 55 48          	mov    0x48(%r13),%rdx
   327b3:	49 8b 75 50          	mov    0x50(%r13),%rsi
   327b7:	48 83 c5 20          	add    $0x20,%rbp
   327bb:	48 39 d3             	cmp    %rdx,%rbx
   327be:	72 d0                	jb     32790 <__rdos_backtrace_dwarf_add+0x1790>
   327c0:	48 c1 e2 05          	shl    $0x5,%rdx
   327c4:	48 8b 5c 24 08       	mov    0x8(%rsp),%rbx
   327c9:	48 8b ac 24 88 00 00 	mov    0x88(%rsp),%rbp
   327d0:	00 
   327d1:	e9 3c ff ff ff       	jmpq   32712 <__rdos_backtrace_dwarf_add+0x1712>
   327d6:	31 c0                	xor    %eax,%eax
   327d8:	48 81 c4 38 02 00 00 	add    $0x238,%rsp
   327df:	5b                   	pop    %rbx
   327e0:	41 5c                	pop    %r12
   327e2:	41 5d                	pop    %r13
   327e4:	41 5e                	pop    %r14
   327e6:	41 5f                	pop    %r15
   327e8:	5d                   	pop    %rbp
   327e9:	c3                   	retq   
   327ea:	4c 8b 84 24 90 00 00 	mov    0x90(%rsp),%r8
   327f1:	00 
   327f2:	8b 84 24 98 00 00 00 	mov    0x98(%rsp),%eax
   327f9:	45 89 d1             	mov    %r10d,%r9d
   327fc:	41 29 c1             	sub    %eax,%r9d
   327ff:	48 8d 15 c1 c6 00 00 	lea    0xc6c1(%rip),%rdx        # 3eec7 <elf_crc32.crc32_table+0x7a7>
   32806:	48 8d 0d aa c6 00 00 	lea    0xc6aa(%rip),%rcx        # 3eeb7 <elf_crc32.crc32_table+0x797>
   3280d:	4c 8d b4 24 70 01 00 	lea    0x170(%rsp),%r14
   32814:	00 
   32815:	be c8 00 00 00       	mov    $0xc8,%esi
   3281a:	4c 89 f7             	mov    %r14,%rdi
   3281d:	31 c0                	xor    %eax,%eax
   3281f:	4c 89 d5             	mov    %r10,%rbp
   32822:	e8 e9 17 fd ff       	callq  4010 <snprintf@plt>
   32827:	48 8b bc 24 c0 00 00 	mov    0xc0(%rsp),%rdi
   3282e:	00 
   3282f:	4c 89 f6             	mov    %r14,%rsi
   32832:	31 d2                	xor    %edx,%edx
   32834:	ff 94 24 b8 00 00 00 	callq  *0xb8(%rsp)
   3283b:	c7 84 24 c8 00 00 00 	movl   $0x1,0xc8(%rsp)
   32842:	01 00 00 00 
   32846:	f3 0f 6f 84 24 90 00 	movdqu 0x90(%rsp),%xmm0
   3284d:	00 00 
   3284f:	0f 10 8c 24 a0 00 00 	movups 0xa0(%rsp),%xmm1
   32856:	00 
   32857:	0f 10 94 24 b0 00 00 	movups 0xb0(%rsp),%xmm2
   3285e:	00 
   3285f:	0f 29 4c 24 50       	movaps %xmm1,0x50(%rsp)
   32864:	66 0f 7f 44 24 40    	movdqa %xmm0,0x40(%rsp)
   3286a:	0f 29 54 24 60       	movaps %xmm2,0x60(%rsp)
   3286f:	48 8b 84 24 c0 00 00 	mov    0xc0(%rsp),%rax
   32876:	00 
   32877:	48 89 44 24 70       	mov    %rax,0x70(%rsp)
   3287c:	8b 84 24 c8 00 00 00 	mov    0xc8(%rsp),%eax
   32883:	89 44 24 78          	mov    %eax,0x78(%rsp)
   32887:	8b 84 24 cc 00 00 00 	mov    0xcc(%rsp),%eax
   3288e:	89 44 24 7c          	mov    %eax,0x7c(%rsp)
   32892:	48 c7 44 24 58 00 00 	movq   $0x0,0x58(%rsp)
   32899:	00 00 
   3289b:	48 89 ac 24 a0 00 00 	mov    %rbp,0xa0(%rsp)
   328a2:	00 
   328a3:	48 89 9c 24 a8 00 00 	mov    %rbx,0xa8(%rsp)
   328aa:	00 
   328ab:	4c 8b 4c 24 50       	mov    0x50(%rsp),%r9
   328b0:	83 7c 24 78 00       	cmpl   $0x0,0x78(%rsp)
   328b5:	0f 85 c1 00 00 00    	jne    3297c <__rdos_backtrace_dwarf_add+0x197c>
   328bb:	4c 8b 44 24 40       	mov    0x40(%rsp),%r8
   328c0:	44 2b 4c 24 48       	sub    0x48(%rsp),%r9d
   328c5:	48 8d 15 fb c5 00 00 	lea    0xc5fb(%rip),%rdx        # 3eec7 <elf_crc32.crc32_table+0x7a7>
   328cc:	48 8d 0d e4 c5 00 00 	lea    0xc5e4(%rip),%rcx        # 3eeb7 <elf_crc32.crc32_table+0x797>
   328d3:	48 8d ac 24 70 01 00 	lea    0x170(%rsp),%rbp
   328da:	00 
   328db:	be c8 00 00 00       	mov    $0xc8,%esi
   328e0:	48 89 ef             	mov    %rbp,%rdi
   328e3:	31 c0                	xor    %eax,%eax
   328e5:	e8 26 17 fd ff       	callq  4010 <snprintf@plt>
   328ea:	48 8b 7c 24 70       	mov    0x70(%rsp),%rdi
   328ef:	48 89 ee             	mov    %rbp,%rsi
   328f2:	31 d2                	xor    %edx,%edx
   328f4:	ff 54 24 68          	callq  *0x68(%rsp)
   328f8:	c7 44 24 78 01 00 00 	movl   $0x1,0x78(%rsp)
   328ff:	00 
   32900:	4c 8b 4c 24 50       	mov    0x50(%rsp),%r9
   32905:	eb 75                	jmp    3297c <__rdos_backtrace_dwarf_add+0x197c>
   32907:	83 bc 24 c8 00 00 00 	cmpl   $0x0,0xc8(%rsp)
   3290e:	00 
   3290f:	4d 89 e0             	mov    %r12,%r8
   32912:	0f 85 a4 00 00 00    	jne    329bc <__rdos_backtrace_dwarf_add+0x19bc>
   32918:	4c 8b 84 24 90 00 00 	mov    0x90(%rsp),%r8
   3291f:	00 
   32920:	44 8b 8c 24 a0 00 00 	mov    0xa0(%rsp),%r9d
   32927:	00 
   32928:	44 2b 8c 24 98 00 00 	sub    0x98(%rsp),%r9d
   3292f:	00 
   32930:	48 8d 15 90 c5 00 00 	lea    0xc590(%rip),%rdx        # 3eec7 <elf_crc32.crc32_table+0x7a7>
   32937:	48 8d 0d 79 c5 00 00 	lea    0xc579(%rip),%rcx        # 3eeb7 <elf_crc32.crc32_table+0x797>
   3293e:	48 8d ac 24 70 01 00 	lea    0x170(%rsp),%rbp
   32945:	00 
   32946:	be c8 00 00 00       	mov    $0xc8,%esi
   3294b:	48 89 ef             	mov    %rbp,%rdi
   3294e:	31 c0                	xor    %eax,%eax
   32950:	e8 bb 16 fd ff       	callq  4010 <snprintf@plt>
   32955:	48 8b bc 24 c0 00 00 	mov    0xc0(%rsp),%rdi
   3295c:	00 
   3295d:	48 89 ee             	mov    %rbp,%rsi
   32960:	31 d2                	xor    %edx,%edx
   32962:	ff 94 24 b8 00 00 00 	callq  *0xb8(%rsp)
   32969:	4d 89 e0             	mov    %r12,%r8
   3296c:	c7 84 24 c8 00 00 00 	movl   $0x1,0xc8(%rsp)
   32973:	01 00 00 00 
   32977:	eb 43                	jmp    329bc <__rdos_backtrace_dwarf_add+0x19bc>
   32979:	4d 89 d9             	mov    %r11,%r9
   3297c:	4c 8b 44 24 40       	mov    0x40(%rsp),%r8
   32981:	44 2b 4c 24 48       	sub    0x48(%rsp),%r9d
   32986:	48 8d 15 3a c5 00 00 	lea    0xc53a(%rip),%rdx        # 3eec7 <elf_crc32.crc32_table+0x7a7>
   3298d:	48 8d 0d 08 c5 00 00 	lea    0xc508(%rip),%rcx        # 3ee9c <elf_crc32.crc32_table+0x77c>
   32994:	48 8d ac 24 70 01 00 	lea    0x170(%rsp),%rbp
   3299b:	00 
   3299c:	be c8 00 00 00       	mov    $0xc8,%esi
   329a1:	48 89 ef             	mov    %rbp,%rdi
   329a4:	31 c0                	xor    %eax,%eax
   329a6:	e8 65 16 fd ff       	callq  4010 <snprintf@plt>
   329ab:	48 8b 7c 24 70       	mov    0x70(%rsp),%rdi
   329b0:	48 89 ee             	mov    %rbp,%rsi
   329b3:	31 d2                	xor    %edx,%edx
   329b5:	ff 54 24 68          	callq  *0x68(%rsp)
   329b9:	4d 89 e0             	mov    %r12,%r8
   329bc:	31 c9                	xor    %ecx,%ecx
   329be:	31 c0                	xor    %eax,%eax
   329c0:	4c 8b a4 24 b0 02 00 	mov    0x2b0(%rsp),%r12
   329c7:	00 
   329c8:	48 8b 6c 24 18       	mov    0x18(%rsp),%rbp
   329cd:	e9 f9 fc ff ff       	jmpq   326cb <__rdos_backtrace_dwarf_add+0x16cb>
   329d2:	48 8d 35 fd c4 00 00 	lea    0xc4fd(%rip),%rsi        # 3eed6 <elf_crc32.crc32_table+0x7b6>
   329d9:	48 8b 9c 24 b0 02 00 	mov    0x2b0(%rsp),%rbx
   329e0:	00 
   329e1:	48 89 df             	mov    %rbx,%rdi
   329e4:	31 d2                	xor    %edx,%edx
   329e6:	41 ff d4             	callq  *%r12
   329e9:	49 89 dc             	mov    %rbx,%r12
   329ec:	e9 c9 fc ff ff       	jmpq   326ba <__rdos_backtrace_dwarf_add+0x16ba>
   329f1:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
   329f6:	48 85 c0             	test   %rax,%rax
   329f9:	0f 84 c6 01 00 00    	je     32bc5 <__rdos_backtrace_dwarf_add+0x1bc5>
   329ff:	4d 89 e5             	mov    %r12,%r13
   32a02:	4c 8b 84 24 a8 02 00 	mov    0x2a8(%rsp),%r8
   32a09:	00 
   32a0a:	48 8b 5c 24 30       	mov    0x30(%rsp),%rbx
   32a0f:	e9 62 01 00 00       	jmpq   32b76 <__rdos_backtrace_dwarf_add+0x1b76>
   32a14:	49 83 7d 48 00       	cmpq   $0x0,0x48(%r13)
   32a19:	49 8b 75 50          	mov    0x50(%r13),%rsi
   32a1d:	0f 84 02 01 00 00    	je     32b25 <__rdos_backtrace_dwarf_add+0x1b25>
   32a23:	4c 8b 7c 24 18       	mov    0x18(%rsp),%r15
   32a28:	bd 18 00 00 00       	mov    $0x18,%ebp
   32a2d:	31 db                	xor    %ebx,%ebx
   32a2f:	48 8b 54 2e f8       	mov    -0x8(%rsi,%rbp,1),%rdx
   32a34:	48 8b 34 2e          	mov    (%rsi,%rbp,1),%rsi
   32a38:	48 c1 e2 03          	shl    $0x3,%rdx
   32a3c:	4c 89 ff             	mov    %r15,%rdi
   32a3f:	48 8b 8c 24 a8 02 00 	mov    0x2a8(%rsp),%rcx
   32a46:	00 
   32a47:	4d 89 e0             	mov    %r12,%r8
   32a4a:	e8 31 e4 ff ff       	callq  30e80 <__rdos_backtrace_free>
   32a4f:	48 83 c3 01          	add    $0x1,%rbx
   32a53:	49 8b 55 48          	mov    0x48(%r13),%rdx
   32a57:	49 8b 75 50          	mov    0x50(%r13),%rsi
   32a5b:	48 83 c5 20          	add    $0x20,%rbp
   32a5f:	48 39 d3             	cmp    %rdx,%rbx
   32a62:	72 cb                	jb     32a2f <__rdos_backtrace_dwarf_add+0x1a2f>
   32a64:	eb 50                	jmp    32ab6 <__rdos_backtrace_dwarf_add+0x1ab6>
   32a66:	49 83 7d 48 00       	cmpq   $0x0,0x48(%r13)
   32a6b:	49 8b 75 50          	mov    0x50(%r13),%rsi
   32a6f:	0f 84 b0 00 00 00    	je     32b25 <__rdos_backtrace_dwarf_add+0x1b25>
   32a75:	4c 8b 7c 24 18       	mov    0x18(%rsp),%r15
   32a7a:	bd 18 00 00 00       	mov    $0x18,%ebp
   32a7f:	31 db                	xor    %ebx,%ebx
   32a81:	48 8b 54 2e f8       	mov    -0x8(%rsi,%rbp,1),%rdx
   32a86:	48 8b 34 2e          	mov    (%rsi,%rbp,1),%rsi
   32a8a:	48 c1 e2 03          	shl    $0x3,%rdx
   32a8e:	4c 89 ff             	mov    %r15,%rdi
   32a91:	48 8b 8c 24 a8 02 00 	mov    0x2a8(%rsp),%rcx
   32a98:	00 
   32a99:	4d 89 e0             	mov    %r12,%r8
   32a9c:	e8 df e3 ff ff       	callq  30e80 <__rdos_backtrace_free>
   32aa1:	48 83 c3 01          	add    $0x1,%rbx
   32aa5:	49 8b 55 48          	mov    0x48(%r13),%rdx
   32aa9:	49 8b 75 50          	mov    0x50(%r13),%rsi
   32aad:	48 83 c5 20          	add    $0x20,%rbp
   32ab1:	48 39 d3             	cmp    %rdx,%rbx
   32ab4:	72 cb                	jb     32a81 <__rdos_backtrace_dwarf_add+0x1a81>
   32ab6:	48 c1 e2 05          	shl    $0x5,%rdx
   32aba:	4c 89 fb             	mov    %r15,%rbx
   32abd:	eb 6d                	jmp    32b2c <__rdos_backtrace_dwarf_add+0x1b2c>
   32abf:	48 8b 5c 24 30       	mov    0x30(%rsp),%rbx
   32ac4:	48 83 c3 18          	add    $0x18,%rbx
   32ac8:	31 ed                	xor    %ebp,%ebp
   32aca:	4c 8b a4 24 b0 02 00 	mov    0x2b0(%rsp),%r12
   32ad1:	00 
   32ad2:	4c 8b bc 24 a8 02 00 	mov    0x2a8(%rsp),%r15
   32ad9:	00 
   32ada:	4c 8b 6c 24 20       	mov    0x20(%rsp),%r13
   32adf:	48 8b 53 f8          	mov    -0x8(%rbx),%rdx
   32ae3:	48 8b 33             	mov    (%rbx),%rsi
   32ae6:	48 c1 e2 03          	shl    $0x3,%rdx
   32aea:	4c 89 f7             	mov    %r14,%rdi
   32aed:	4c 89 f9             	mov    %r15,%rcx
   32af0:	4d 89 e0             	mov    %r12,%r8
   32af3:	e8 88 e3 ff ff       	callq  30e80 <__rdos_backtrace_free>
   32af8:	48 83 c5 01          	add    $0x1,%rbp
   32afc:	48 83 c3 20          	add    $0x20,%rbx
   32b00:	4c 39 ed             	cmp    %r13,%rbp
   32b03:	72 da                	jb     32adf <__rdos_backtrace_dwarf_add+0x1adf>
   32b05:	4c 89 f7             	mov    %r14,%rdi
   32b08:	48 8b 74 24 30       	mov    0x30(%rsp),%rsi
   32b0d:	48 8b 94 24 38 01 00 	mov    0x138(%rsp),%rdx
   32b14:	00 
   32b15:	4c 89 f9             	mov    %r15,%rcx
   32b18:	4d 89 e0             	mov    %r12,%r8
   32b1b:	e8 60 e3 ff ff       	callq  30e80 <__rdos_backtrace_free>
   32b20:	e9 95 fb ff ff       	jmpq   326ba <__rdos_backtrace_dwarf_add+0x16ba>
   32b25:	31 d2                	xor    %edx,%edx
   32b27:	48 8b 5c 24 18       	mov    0x18(%rsp),%rbx
   32b2c:	48 89 df             	mov    %rbx,%rdi
   32b2f:	4c 8b bc 24 a8 02 00 	mov    0x2a8(%rsp),%r15
   32b36:	00 
   32b37:	4c 89 f9             	mov    %r15,%rcx
   32b3a:	4d 89 e0             	mov    %r12,%r8
   32b3d:	e8 3e e3 ff ff       	callq  30e80 <__rdos_backtrace_free>
   32b42:	66 0f ef c0          	pxor   %xmm0,%xmm0
   32b46:	f3 41 0f 7f 06       	movdqu %xmm0,(%r14)
   32b4b:	ba 78 00 00 00       	mov    $0x78,%edx
   32b50:	48 89 df             	mov    %rbx,%rdi
   32b53:	4c 89 ee             	mov    %r13,%rsi
   32b56:	4c 89 f9             	mov    %r15,%rcx
   32b59:	4d 89 e0             	mov    %r12,%r8
   32b5c:	e8 1f e3 ff ff       	callq  30e80 <__rdos_backtrace_free>
   32b61:	4d 89 f8             	mov    %r15,%r8
   32b64:	e9 53 fe ff ff       	jmpq   329bc <__rdos_backtrace_dwarf_add+0x19bc>
   32b69:	4d 89 e5             	mov    %r12,%r13
   32b6c:	31 db                	xor    %ebx,%ebx
   32b6e:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
   32b73:	4d 89 f8             	mov    %r15,%r8
   32b76:	49 89 df             	mov    %rbx,%r15
   32b79:	48 83 c3 18          	add    $0x18,%rbx
   32b7d:	48 89 c5             	mov    %rax,%rbp
   32b80:	4c 8b 74 24 18       	mov    0x18(%rsp),%r14
   32b85:	48 8b 53 f8          	mov    -0x8(%rbx),%rdx
   32b89:	48 8b 33             	mov    (%rbx),%rsi
   32b8c:	48 c1 e2 03          	shl    $0x3,%rdx
   32b90:	4c 89 f7             	mov    %r14,%rdi
   32b93:	4c 89 c1             	mov    %r8,%rcx
   32b96:	4d 89 c4             	mov    %r8,%r12
   32b99:	4d 89 e8             	mov    %r13,%r8
   32b9c:	e8 df e2 ff ff       	callq  30e80 <__rdos_backtrace_free>
   32ba1:	4d 89 e0             	mov    %r12,%r8
   32ba4:	48 83 c3 20          	add    $0x20,%rbx
   32ba8:	48 83 c5 ff          	add    $0xffffffffffffffff,%rbp
   32bac:	75 d7                	jne    32b85 <__rdos_backtrace_dwarf_add+0x1b85>
   32bae:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
   32bb3:	48 c1 e0 05          	shl    $0x5,%rax
   32bb7:	4c 89 f5             	mov    %r14,%rbp
   32bba:	4c 89 f9             	mov    %r15,%rcx
   32bbd:	4d 89 ec             	mov    %r13,%r12
   32bc0:	e9 06 fb ff ff       	jmpq   326cb <__rdos_backtrace_dwarf_add+0x16cb>
   32bc5:	31 c0                	xor    %eax,%eax
   32bc7:	4c 8b 84 24 a8 02 00 	mov    0x2a8(%rsp),%r8
   32bce:	00 
   32bcf:	48 8b 4c 24 30       	mov    0x30(%rsp),%rcx
   32bd4:	48 8b 6c 24 18       	mov    0x18(%rsp),%rbp
   32bd9:	e9 ed fa ff ff       	jmpq   326cb <__rdos_backtrace_dwarf_add+0x16cb>
   32bde:	e8 d5 14 fd ff       	callq  40b8 <abort@plt>
   32be3:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   32bea:	00 00 00 
   32bed:	0f 1f 00             	nopl   (%rax)

0000000000032bf0 <dwarf_fileline>:
   32bf0:	55                   	push   %rbp
   32bf1:	41 57                	push   %r15
   32bf3:	41 56                	push   %r14
   32bf5:	41 55                	push   %r13
   32bf7:	41 54                	push   %r12
   32bf9:	53                   	push   %rbx
   32bfa:	48 83 ec 18          	sub    $0x18,%rsp
   32bfe:	83 7f 08 00          	cmpl   $0x0,0x8(%rdi)
   32c02:	75 6c                	jne    32c70 <dwarf_fileline+0x80>
   32c04:	4d 89 c7             	mov    %r8,%r15
   32c07:	49 89 d6             	mov    %rdx,%r14
   32c0a:	49 89 f5             	mov    %rsi,%r13
   32c0d:	48 89 fb             	mov    %rdi,%rbx
   32c10:	48 8b 6f 20          	mov    0x20(%rdi),%rbp
   32c14:	48 85 ed             	test   %rbp,%rbp
   32c17:	74 38                	je     32c51 <dwarf_fileline+0x61>
   32c19:	49 89 cc             	mov    %rcx,%r12
   32c1c:	0f 1f 40 00          	nopl   0x0(%rax)
   32c20:	48 8d 44 24 14       	lea    0x14(%rsp),%rax
   32c25:	48 89 04 24          	mov    %rax,(%rsp)
   32c29:	48 89 df             	mov    %rbx,%rdi
   32c2c:	48 89 ee             	mov    %rbp,%rsi
   32c2f:	4c 89 ea             	mov    %r13,%rdx
   32c32:	4c 89 f1             	mov    %r14,%rcx
   32c35:	4d 89 e0             	mov    %r12,%r8
   32c38:	4d 89 f9             	mov    %r15,%r9
   32c3b:	e8 40 1e 00 00       	callq  34a80 <dwarf_lookup_pc>
   32c40:	8b 4c 24 14          	mov    0x14(%rsp),%ecx
   32c44:	09 c1                	or     %eax,%ecx
   32c46:	75 19                	jne    32c61 <dwarf_fileline+0x71>
   32c48:	48 8b 6d 00          	mov    0x0(%rbp),%rbp
   32c4c:	48 85 ed             	test   %rbp,%rbp
   32c4f:	75 cf                	jne    32c20 <dwarf_fileline+0x30>
   32c51:	4c 89 ff             	mov    %r15,%rdi
   32c54:	4c 89 ee             	mov    %r13,%rsi
   32c57:	31 d2                	xor    %edx,%edx
   32c59:	31 c9                	xor    %ecx,%ecx
   32c5b:	45 31 c0             	xor    %r8d,%r8d
   32c5e:	41 ff d6             	callq  *%r14
   32c61:	48 83 c4 18          	add    $0x18,%rsp
   32c65:	5b                   	pop    %rbx
   32c66:	41 5c                	pop    %r12
   32c68:	41 5d                	pop    %r13
   32c6a:	41 5e                	pop    %r14
   32c6c:	41 5f                	pop    %r15
   32c6e:	5d                   	pop    %rbp
   32c6f:	c3                   	retq   
   32c70:	e8 43 14 fd ff       	callq  40b8 <abort@plt>
   32c75:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   32c7c:	00 00 00 
   32c7f:	90                   	nop

0000000000032c80 <unit_addrs_compare>:
   32c80:	48 8b 06             	mov    (%rsi),%rax
   32c83:	48 39 07             	cmp    %rax,(%rdi)
   32c86:	73 06                	jae    32c8e <unit_addrs_compare+0xe>
   32c88:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   32c8d:	c3                   	retq   
   32c8e:	b8 01 00 00 00       	mov    $0x1,%eax
   32c93:	77 2f                	ja     32cc4 <unit_addrs_compare+0x44>
   32c95:	48 8b 4e 08          	mov    0x8(%rsi),%rcx
   32c99:	48 39 4f 08          	cmp    %rcx,0x8(%rdi)
   32c9d:	72 25                	jb     32cc4 <unit_addrs_compare+0x44>
   32c9f:	76 06                	jbe    32ca7 <unit_addrs_compare+0x27>
   32ca1:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   32ca6:	c3                   	retq   
   32ca7:	48 8b 4f 10          	mov    0x10(%rdi),%rcx
   32cab:	48 8b 46 10          	mov    0x10(%rsi),%rax
   32caf:	48 8b 50 28          	mov    0x28(%rax),%rdx
   32cb3:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   32cb8:	48 39 51 28          	cmp    %rdx,0x28(%rcx)
   32cbc:	7c 06                	jl     32cc4 <unit_addrs_compare+0x44>
   32cbe:	0f 9f c0             	setg   %al
   32cc1:	0f b6 c0             	movzbl %al,%eax
   32cc4:	c3                   	retq   
   32cc5:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   32ccc:	00 00 00 
   32ccf:	90                   	nop

0000000000032cd0 <read_uint64>:
   32cd0:	41 57                	push   %r15
   32cd2:	41 56                	push   %r14
   32cd4:	53                   	push   %rbx
   32cd5:	48 81 ec d0 00 00 00 	sub    $0xd0,%rsp
   32cdc:	48 89 fb             	mov    %rdi,%rbx
   32cdf:	4c 8b 4f 10          	mov    0x10(%rdi),%r9
   32ce3:	48 8b 47 18          	mov    0x18(%rdi),%rax
   32ce7:	48 83 f8 07          	cmp    $0x7,%rax
   32ceb:	77 0b                	ja     32cf8 <read_uint64+0x28>
   32ced:	83 7b 38 00          	cmpl   $0x0,0x38(%rbx)
   32cf1:	74 23                	je     32d16 <read_uint64+0x46>
   32cf3:	45 31 f6             	xor    %r14d,%r14d
   32cf6:	eb 60                	jmp    32d58 <read_uint64+0x88>
   32cf8:	49 8d 49 08          	lea    0x8(%r9),%rcx
   32cfc:	48 89 4b 10          	mov    %rcx,0x10(%rbx)
   32d00:	48 83 c0 f8          	add    $0xfffffffffffffff8,%rax
   32d04:	48 89 43 18          	mov    %rax,0x18(%rbx)
   32d08:	83 7b 20 00          	cmpl   $0x0,0x20(%rbx)
   32d0c:	74 47                	je     32d55 <read_uint64+0x85>
   32d0e:	4d 8b 31             	mov    (%r9),%r14
   32d11:	49 0f ce             	bswap  %r14
   32d14:	eb 42                	jmp    32d58 <read_uint64+0x88>
   32d16:	4c 8b 03             	mov    (%rbx),%r8
   32d19:	44 2b 4b 08          	sub    0x8(%rbx),%r9d
   32d1d:	48 8d 15 a3 c1 00 00 	lea    0xc1a3(%rip),%rdx        # 3eec7 <elf_crc32.crc32_table+0x7a7>
   32d24:	48 8d 0d 8c c1 00 00 	lea    0xc18c(%rip),%rcx        # 3eeb7 <elf_crc32.crc32_table+0x797>
   32d2b:	45 31 f6             	xor    %r14d,%r14d
   32d2e:	49 89 e7             	mov    %rsp,%r15
   32d31:	be c8 00 00 00       	mov    $0xc8,%esi
   32d36:	4c 89 ff             	mov    %r15,%rdi
   32d39:	31 c0                	xor    %eax,%eax
   32d3b:	e8 d0 12 fd ff       	callq  4010 <snprintf@plt>
   32d40:	48 8b 7b 30          	mov    0x30(%rbx),%rdi
   32d44:	4c 89 fe             	mov    %r15,%rsi
   32d47:	31 d2                	xor    %edx,%edx
   32d49:	ff 53 28             	callq  *0x28(%rbx)
   32d4c:	c7 43 38 01 00 00 00 	movl   $0x1,0x38(%rbx)
   32d53:	eb 03                	jmp    32d58 <read_uint64+0x88>
   32d55:	4d 8b 31             	mov    (%r9),%r14
   32d58:	4c 89 f0             	mov    %r14,%rax
   32d5b:	48 81 c4 d0 00 00 00 	add    $0xd0,%rsp
   32d62:	5b                   	pop    %rbx
   32d63:	41 5e                	pop    %r14
   32d65:	41 5f                	pop    %r15
   32d67:	c3                   	retq   
   32d68:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   32d6f:	00 

0000000000032d70 <find_address_ranges>:
   32d70:	55                   	push   %rbp
   32d71:	41 57                	push   %r15
   32d73:	41 56                	push   %r14
   32d75:	41 55                	push   %r13
   32d77:	41 54                	push   %r12
   32d79:	53                   	push   %rbx
   32d7a:	48 81 ec 28 01 00 00 	sub    $0x128,%rsp
   32d81:	48 89 cb             	mov    %rcx,%rbx
   32d84:	48 8b 4a 18          	mov    0x18(%rdx),%rcx
   32d88:	48 85 c9             	test   %rcx,%rcx
   32d8b:	0f 84 30 06 00 00    	je     333c1 <find_address_ranges+0x651>
   32d91:	4d 89 c7             	mov    %r8,%r15
   32d94:	49 89 d4             	mov    %rdx,%r12
   32d97:	49 89 f6             	mov    %rsi,%r14
   32d9a:	4c 89 4c 24 40       	mov    %r9,0x40(%rsp)
   32d9f:	48 89 7c 24 38       	mov    %rdi,0x38(%rsp)
   32da4:	4c 89 44 24 58       	mov    %r8,0x58(%rsp)
   32da9:	48 89 5c 24 50       	mov    %rbx,0x50(%rsp)
   32dae:	48 89 74 24 48       	mov    %rsi,0x48(%rsp)
   32db3:	4d 8b 4c 24 10       	mov    0x10(%r12),%r9
   32db8:	48 85 c9             	test   %rcx,%rcx
   32dbb:	0f 84 ae 05 00 00    	je     3336f <find_address_ranges+0x5ff>
   32dc1:	31 d2                	xor    %edx,%edx
   32dc3:	31 ed                	xor    %ebp,%ebp
   32dc5:	45 31 ff             	xor    %r15d,%r15d
   32dc8:	4c 8b b4 24 80 01 00 	mov    0x180(%rsp),%r14
   32dcf:	00 
   32dd0:	49 8d 41 01          	lea    0x1(%r9),%rax
   32dd4:	49 89 44 24 10       	mov    %rax,0x10(%r12)
   32dd9:	48 83 c1 ff          	add    $0xffffffffffffffff,%rcx
   32ddd:	49 89 4c 24 18       	mov    %rcx,0x18(%r12)
   32de2:	41 0f b6 19          	movzbl (%r9),%ebx
   32de6:	83 fd 3f             	cmp    $0x3f,%ebp
   32de9:	77 15                	ja     32e00 <find_address_ranges+0x90>
   32deb:	89 d8                	mov    %ebx,%eax
   32ded:	83 e0 7f             	and    $0x7f,%eax
   32df0:	89 e9                	mov    %ebp,%ecx
   32df2:	48 d3 e0             	shl    %cl,%rax
   32df5:	49 09 c7             	or     %rax,%r15
   32df8:	84 db                	test   %bl,%bl
   32dfa:	78 0c                	js     32e08 <find_address_ranges+0x98>
   32dfc:	eb 72                	jmp    32e70 <find_address_ranges+0x100>
   32dfe:	66 90                	xchg   %ax,%ax
   32e00:	85 d2                	test   %edx,%edx
   32e02:	74 1b                	je     32e1f <find_address_ranges+0xaf>
   32e04:	84 db                	test   %bl,%bl
   32e06:	79 68                	jns    32e70 <find_address_ranges+0x100>
   32e08:	83 c5 07             	add    $0x7,%ebp
   32e0b:	4d 8b 4c 24 10       	mov    0x10(%r12),%r9
   32e10:	49 8b 4c 24 18       	mov    0x18(%r12),%rcx
   32e15:	48 85 c9             	test   %rcx,%rcx
   32e18:	75 b6                	jne    32dd0 <find_address_ranges+0x60>
   32e1a:	e9 50 05 00 00       	jmpq   3336f <find_address_ranges+0x5ff>
   32e1f:	4d 8b 04 24          	mov    (%r12),%r8
   32e23:	41 2b 44 24 08       	sub    0x8(%r12),%eax
   32e28:	be c8 00 00 00       	mov    $0xc8,%esi
   32e2d:	4c 8d 6c 24 60       	lea    0x60(%rsp),%r13
   32e32:	4c 89 ef             	mov    %r13,%rdi
   32e35:	48 8d 15 8b c0 00 00 	lea    0xc08b(%rip),%rdx        # 3eec7 <elf_crc32.crc32_table+0x7a7>
   32e3c:	48 8d 0d 1b c1 00 00 	lea    0xc11b(%rip),%rcx        # 3ef5e <elf_crc32.crc32_table+0x83e>
   32e43:	41 89 c1             	mov    %eax,%r9d
   32e46:	31 c0                	xor    %eax,%eax
   32e48:	e8 c3 11 fd ff       	callq  4010 <snprintf@plt>
   32e4d:	49 8b 7c 24 30       	mov    0x30(%r12),%rdi
   32e52:	4c 89 ee             	mov    %r13,%rsi
   32e55:	31 d2                	xor    %edx,%edx
   32e57:	41 ff 54 24 28       	callq  *0x28(%r12)
   32e5c:	ba 01 00 00 00       	mov    $0x1,%edx
   32e61:	84 db                	test   %bl,%bl
   32e63:	78 a3                	js     32e08 <find_address_ranges+0x98>
   32e65:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   32e6c:	00 00 00 
   32e6f:	90                   	nop
   32e70:	bd 01 00 00 00       	mov    $0x1,%ebp
   32e75:	4d 85 ff             	test   %r15,%r15
   32e78:	0f 84 4c 05 00 00    	je     333ca <find_address_ranges+0x65a>
   32e7e:	49 8d 47 ff          	lea    -0x1(%r15),%rax
   32e82:	49 8b 56 48          	mov    0x48(%r14),%rdx
   32e86:	48 39 d0             	cmp    %rdx,%rax
   32e89:	0f 83 41 02 00 00    	jae    330d0 <find_address_ranges+0x360>
   32e8f:	4d 8b 6e 50          	mov    0x50(%r14),%r13
   32e93:	48 c1 e0 05          	shl    $0x5,%rax
   32e97:	4d 39 7c 05 00       	cmp    %r15,0x0(%r13,%rax,1)
   32e9c:	0f 85 32 02 00 00    	jne    330d4 <find_address_ranges+0x364>
   32ea2:	49 01 c5             	add    %rax,%r13
   32ea5:	4d 85 ed             	test   %r13,%r13
   32ea8:	4c 8b 7c 24 58       	mov    0x58(%rsp),%r15
   32ead:	48 8b 5c 24 50       	mov    0x50(%rsp),%rbx
   32eb2:	0f 84 10 05 00 00    	je     333c8 <find_address_ranges+0x658>
   32eb8:	49 83 7d 10 00       	cmpq   $0x0,0x10(%r13)
   32ebd:	0f 84 66 02 00 00    	je     33129 <find_address_ranges+0x3b9>
   32ec3:	49 8b 45 18          	mov    0x18(%r13),%rax
   32ec7:	31 ed                	xor    %ebp,%ebp
   32ec9:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%rsp)
   32ed0:	00 
   32ed1:	31 c9                	xor    %ecx,%ecx
   32ed3:	48 89 4c 24 30       	mov    %rcx,0x30(%rsp)
   32ed8:	c7 44 24 24 00 00 00 	movl   $0x0,0x24(%rsp)
   32edf:	00 
   32ee0:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%rsp)
   32ee7:	00 
   32ee8:	31 c9                	xor    %ecx,%ecx
   32eea:	48 89 4c 24 18       	mov    %rcx,0x18(%rsp)
   32eef:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%rsp)
   32ef6:	00 
   32ef7:	31 c9                	xor    %ecx,%ecx
   32ef9:	48 89 4c 24 28       	mov    %rcx,0x28(%rsp)
   32efe:	eb 3e                	jmp    32f3e <find_address_ranges+0x1ce>
   32f00:	83 7c 24 60 00       	cmpl   $0x0,0x60(%rsp)
   32f05:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
   32f0a:	48 0f 44 4c 24 68    	cmove  0x68(%rsp),%rcx
   32f10:	48 89 4c 24 28       	mov    %rcx,0x28(%rsp)
   32f15:	b9 01 00 00 00       	mov    $0x1,%ecx
   32f1a:	8b 54 24 10          	mov    0x10(%rsp),%edx
   32f1e:	0f 44 d1             	cmove  %ecx,%edx
   32f21:	89 54 24 10          	mov    %edx,0x10(%rsp)
   32f25:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   32f2c:	00 00 00 
   32f2f:	90                   	nop
   32f30:	48 83 c5 01          	add    $0x1,%rbp
   32f34:	49 3b 6d 10          	cmp    0x10(%r13),%rbp
   32f38:	0f 83 20 02 00 00    	jae    3315e <find_address_ranges+0x3ee>
   32f3e:	8b 7c e8 04          	mov    0x4(%rax,%rbp,8),%edi
   32f42:	41 8b 4e 18          	mov    0x18(%r14),%ecx
   32f46:	41 8b 56 1c          	mov    0x1c(%r14),%edx
   32f4a:	45 8b 46 20          	mov    0x20(%r14),%r8d
   32f4e:	4c 89 e6             	mov    %r12,%rsi
   32f51:	49 89 d9             	mov    %rbx,%r9
   32f54:	48 8d 44 24 60       	lea    0x60(%rsp),%rax
   32f59:	50                   	push   %rax
   32f5a:	41 57                	push   %r15
   32f5c:	e8 bf 04 00 00       	callq  33420 <read_attribute>
   32f61:	48 83 c4 10          	add    $0x10,%rsp
   32f65:	85 c0                	test   %eax,%eax
   32f67:	0f 84 5b 04 00 00    	je     333c8 <find_address_ranges+0x658>
   32f6d:	49 8b 45 18          	mov    0x18(%r13),%rax
   32f71:	8b 0c e8             	mov    (%rax,%rbp,8),%ecx
   32f74:	8d 51 fd             	lea    -0x3(%rcx),%edx
   32f77:	83 fa 18             	cmp    $0x18,%edx
   32f7a:	77 44                	ja     32fc0 <find_address_ranges+0x250>
   32f7c:	48 8d 0d ad bb 00 00 	lea    0xbbad(%rip),%rcx        # 3eb30 <elf_crc32.crc32_table+0x410>
   32f83:	48 89 ce             	mov    %rcx,%rsi
   32f86:	48 63 0c 91          	movslq (%rcx,%rdx,4),%rcx
   32f8a:	48 01 f1             	add    %rsi,%rcx
   32f8d:	ff e1                	jmpq   *%rcx
   32f8f:	41 83 7d 08 11       	cmpl   $0x11,0x8(%r13)
   32f94:	75 9a                	jne    32f30 <find_address_ranges+0x1c0>
   32f96:	83 7c 24 60 03       	cmpl   $0x3,0x60(%rsp)
   32f9b:	75 93                	jne    32f30 <find_address_ranges+0x1c0>
   32f9d:	48 8b 4c 24 68       	mov    0x68(%rsp),%rcx
   32fa2:	49 89 4e 30          	mov    %rcx,0x30(%r14)
   32fa6:	48 83 c5 01          	add    $0x1,%rbp
   32faa:	49 3b 6d 10          	cmp    0x10(%r13),%rbp
   32fae:	72 8e                	jb     32f3e <find_address_ranges+0x1ce>
   32fb0:	e9 a9 01 00 00       	jmpq   3315e <find_address_ranges+0x3ee>
   32fb5:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   32fbc:	00 00 00 
   32fbf:	90                   	nop
   32fc0:	83 f9 55             	cmp    $0x55,%ecx
   32fc3:	0f 85 67 ff ff ff    	jne    32f30 <find_address_ranges+0x1c0>
   32fc9:	8b 4c 24 60          	mov    0x60(%rsp),%ecx
   32fcd:	83 f9 06             	cmp    $0x6,%ecx
   32fd0:	74 09                	je     32fdb <find_address_ranges+0x26b>
   32fd2:	83 f9 01             	cmp    $0x1,%ecx
   32fd5:	0f 85 55 ff ff ff    	jne    32f30 <find_address_ranges+0x1c0>
   32fdb:	c7 44 24 14 01 00 00 	movl   $0x1,0x14(%rsp)
   32fe2:	00 
   32fe3:	48 8b 4c 24 68       	mov    0x68(%rsp),%rcx
   32fe8:	48 89 4c 24 30       	mov    %rcx,0x30(%rsp)
   32fed:	48 83 c5 01          	add    $0x1,%rbp
   32ff1:	49 3b 6d 10          	cmp    0x10(%r13),%rbp
   32ff5:	0f 82 43 ff ff ff    	jb     32f3e <find_address_ranges+0x1ce>
   32ffb:	e9 5e 01 00 00       	jmpq   3315e <find_address_ranges+0x3ee>
   33000:	41 83 7d 08 11       	cmpl   $0x11,0x8(%r13)
   33005:	0f 85 25 ff ff ff    	jne    32f30 <find_address_ranges+0x1c0>
   3300b:	8b 4c 24 60          	mov    0x60(%rsp),%ecx
   3300f:	83 f9 06             	cmp    $0x6,%ecx
   33012:	74 09                	je     3301d <find_address_ranges+0x2ad>
   33014:	83 f9 01             	cmp    $0x1,%ecx
   33017:	0f 85 13 ff ff ff    	jne    32f30 <find_address_ranges+0x1c0>
   3301d:	48 8b 4c 24 68       	mov    0x68(%rsp),%rcx
   33022:	49 89 4e 28          	mov    %rcx,0x28(%r14)
   33026:	48 83 c5 01          	add    $0x1,%rbp
   3302a:	49 3b 6d 10          	cmp    0x10(%r13),%rbp
   3302e:	0f 82 0a ff ff ff    	jb     32f3e <find_address_ranges+0x1ce>
   33034:	e9 25 01 00 00       	jmpq   3315e <find_address_ranges+0x3ee>
   33039:	8b 4c 24 60          	mov    0x60(%rsp),%ecx
   3303d:	83 f9 01             	cmp    $0x1,%ecx
   33040:	74 5f                	je     330a1 <find_address_ranges+0x331>
   33042:	85 c9                	test   %ecx,%ecx
   33044:	0f 85 e6 fe ff ff    	jne    32f30 <find_address_ranges+0x1c0>
   3304a:	c7 44 24 0c 01 00 00 	movl   $0x1,0xc(%rsp)
   33051:	00 
   33052:	48 8b 4c 24 68       	mov    0x68(%rsp),%rcx
   33057:	48 89 4c 24 18       	mov    %rcx,0x18(%rsp)
   3305c:	48 83 c5 01          	add    $0x1,%rbp
   33060:	49 3b 6d 10          	cmp    0x10(%r13),%rbp
   33064:	0f 82 d4 fe ff ff    	jb     32f3e <find_address_ranges+0x1ce>
   3306a:	e9 ef 00 00 00       	jmpq   3315e <find_address_ranges+0x3ee>
   3306f:	41 83 7d 08 11       	cmpl   $0x11,0x8(%r13)
   33074:	0f 85 b6 fe ff ff    	jne    32f30 <find_address_ranges+0x1c0>
   3307a:	83 7c 24 60 03       	cmpl   $0x3,0x60(%rsp)
   3307f:	0f 85 ab fe ff ff    	jne    32f30 <find_address_ranges+0x1c0>
   33085:	48 8b 4c 24 68       	mov    0x68(%rsp),%rcx
   3308a:	49 89 4e 38          	mov    %rcx,0x38(%r14)
   3308e:	48 83 c5 01          	add    $0x1,%rbp
   33092:	49 3b 6d 10          	cmp    0x10(%r13),%rbp
   33096:	0f 82 a2 fe ff ff    	jb     32f3e <find_address_ranges+0x1ce>
   3309c:	e9 bd 00 00 00       	jmpq   3315e <find_address_ranges+0x3ee>
   330a1:	c7 44 24 0c 01 00 00 	movl   $0x1,0xc(%rsp)
   330a8:	00 
   330a9:	48 8b 4c 24 68       	mov    0x68(%rsp),%rcx
   330ae:	48 89 4c 24 18       	mov    %rcx,0x18(%rsp)
   330b3:	c7 44 24 24 01 00 00 	movl   $0x1,0x24(%rsp)
   330ba:	00 
   330bb:	48 83 c5 01          	add    $0x1,%rbp
   330bf:	49 3b 6d 10          	cmp    0x10(%r13),%rbp
   330c3:	0f 82 75 fe ff ff    	jb     32f3e <find_address_ranges+0x1ce>
   330c9:	e9 90 00 00 00       	jmpq   3315e <find_address_ranges+0x3ee>
   330ce:	66 90                	xchg   %ax,%ax
   330d0:	4d 8b 6e 50          	mov    0x50(%r14),%r13
   330d4:	48 8d 44 24 68       	lea    0x68(%rsp),%rax
   330d9:	0f 57 c0             	xorps  %xmm0,%xmm0
   330dc:	0f 11 00             	movups %xmm0,(%rax)
   330df:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
   330e6:	00 
   330e7:	4c 89 7c 24 60       	mov    %r15,0x60(%rsp)
   330ec:	b9 20 00 00 00       	mov    $0x20,%ecx
   330f1:	48 8d 7c 24 60       	lea    0x60(%rsp),%rdi
   330f6:	4c 89 ee             	mov    %r13,%rsi
   330f9:	4c 8d 05 00 03 00 00 	lea    0x300(%rip),%r8        # 33400 <abbrev_compare>
   33100:	e8 8b 0f fd ff       	callq  4090 <bsearch@plt>
   33105:	48 85 c0             	test   %rax,%rax
   33108:	0f 84 d0 02 00 00    	je     333de <find_address_ranges+0x66e>
   3310e:	49 89 c5             	mov    %rax,%r13
   33111:	4d 85 ed             	test   %r13,%r13
   33114:	4c 8b 7c 24 58       	mov    0x58(%rsp),%r15
   33119:	48 8b 5c 24 50       	mov    0x50(%rsp),%rbx
   3311e:	0f 85 94 fd ff ff    	jne    32eb8 <find_address_ranges+0x148>
   33124:	e9 9f 02 00 00       	jmpq   333c8 <find_address_ranges+0x658>
   33129:	31 c0                	xor    %eax,%eax
   3312b:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   33130:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%rsp)
   33137:	00 
   33138:	31 c0                	xor    %eax,%eax
   3313a:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   3313f:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%rsp)
   33146:	00 
   33147:	c7 44 24 24 00 00 00 	movl   $0x0,0x24(%rsp)
   3314e:	00 
   3314f:	31 c0                	xor    %eax,%eax
   33151:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   33156:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%rsp)
   3315d:	00 
   3315e:	41 8b 45 08          	mov    0x8(%r13),%eax
   33162:	83 f8 2e             	cmp    $0x2e,%eax
   33165:	4c 8b 74 24 48       	mov    0x48(%rsp),%r14
   3316a:	74 09                	je     33175 <find_address_ranges+0x405>
   3316c:	83 f8 11             	cmp    $0x11,%eax
   3316f:	0f 85 5b 01 00 00    	jne    332d0 <find_address_ranges+0x560>
   33175:	83 7c 24 14 00       	cmpl   $0x0,0x14(%rsp)
   3317a:	74 5c                	je     331d8 <find_address_ranges+0x468>
   3317c:	48 83 ec 08          	sub    $0x8,%rsp
   33180:	48 8b 7c 24 40       	mov    0x40(%rsp),%rdi
   33185:	4c 89 f6             	mov    %r14,%rsi
   33188:	48 8b 94 24 88 01 00 	mov    0x188(%rsp),%rdx
   3318f:	00 
   33190:	48 8b 4c 24 38       	mov    0x38(%rsp),%rcx
   33195:	4c 8b 44 24 30       	mov    0x30(%rsp),%r8
   3319a:	44 8b 8c 24 70 01 00 	mov    0x170(%rsp),%r9d
   331a1:	00 
   331a2:	ff b4 24 90 01 00 00 	pushq  0x190(%rsp)
   331a9:	ff b4 24 88 01 00 00 	pushq  0x188(%rsp)
   331b0:	ff b4 24 88 01 00 00 	pushq  0x188(%rsp)
   331b7:	ff b4 24 80 01 00 00 	pushq  0x180(%rsp)
   331be:	ff 74 24 68          	pushq  0x68(%rsp)
   331c2:	e8 b9 11 00 00       	callq  34380 <add_unit_ranges>
   331c7:	48 83 c4 30          	add    $0x30,%rsp
   331cb:	85 c0                	test   %eax,%eax
   331cd:	0f 85 d3 00 00 00    	jne    332a6 <find_address_ranges+0x536>
   331d3:	e9 f0 01 00 00       	jmpq   333c8 <find_address_ranges+0x658>
   331d8:	83 7c 24 10 00       	cmpl   $0x0,0x10(%rsp)
   331dd:	0f 84 c3 00 00 00    	je     332a6 <find_address_ranges+0x536>
   331e3:	83 7c 24 0c 00       	cmpl   $0x0,0xc(%rsp)
   331e8:	0f 84 b8 00 00 00    	je     332a6 <find_address_ranges+0x536>
   331ee:	83 7c 24 24 00       	cmpl   $0x0,0x24(%rsp)
   331f3:	48 8b 6c 24 28       	mov    0x28(%rsp),%rbp
   331f8:	48 89 e8             	mov    %rbp,%rax
   331fb:	b9 00 00 00 00       	mov    $0x0,%ecx
   33200:	48 0f 44 c1          	cmove  %rcx,%rax
   33204:	4c 01 f5             	add    %r14,%rbp
   33207:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
   3320c:	4c 01 f1             	add    %r14,%rcx
   3320f:	48 01 c1             	add    %rax,%rcx
   33212:	48 89 4c 24 18       	mov    %rcx,0x18(%rsp)
   33217:	4c 8b 84 24 88 01 00 	mov    0x188(%rsp),%r8
   3321e:	00 
   3321f:	49 8b 48 18          	mov    0x18(%r8),%rcx
   33223:	48 85 c9             	test   %rcx,%rcx
   33226:	74 31                	je     33259 <find_address_ranges+0x4e9>
   33228:	49 8b 00             	mov    (%r8),%rax
   3322b:	48 83 c1 ff          	add    $0xffffffffffffffff,%rcx
   3322f:	48 8d 0c 49          	lea    (%rcx,%rcx,2),%rcx
   33233:	48 8b 54 c8 08       	mov    0x8(%rax,%rcx,8),%rdx
   33238:	48 39 d5             	cmp    %rdx,%rbp
   3323b:	74 09                	je     33246 <find_address_ranges+0x4d6>
   3323d:	48 8d 72 01          	lea    0x1(%rdx),%rsi
   33241:	48 39 f5             	cmp    %rsi,%rbp
   33244:	75 13                	jne    33259 <find_address_ranges+0x4e9>
   33246:	48 8b b4 24 80 01 00 	mov    0x180(%rsp),%rsi
   3324d:	00 
   3324e:	48 39 74 c8 10       	cmp    %rsi,0x10(%rax,%rcx,8)
   33253:	0f 84 eb 00 00 00    	je     33344 <find_address_ranges+0x5d4>
   33259:	be 18 00 00 00       	mov    $0x18,%esi
   3325e:	48 8b 7c 24 38       	mov    0x38(%rsp),%rdi
   33263:	48 8b 94 24 70 01 00 	mov    0x170(%rsp),%rdx
   3326a:	00 
   3326b:	48 8b 8c 24 78 01 00 	mov    0x178(%rsp),%rcx
   33272:	00 
   33273:	e8 18 dc ff ff       	callq  30e90 <__rdos_backtrace_vector_grow>
   33278:	48 85 c0             	test   %rax,%rax
   3327b:	0f 84 47 01 00 00    	je     333c8 <find_address_ranges+0x658>
   33281:	48 89 28             	mov    %rbp,(%rax)
   33284:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
   33289:	48 89 48 08          	mov    %rcx,0x8(%rax)
   3328d:	48 8b 8c 24 80 01 00 	mov    0x180(%rsp),%rcx
   33294:	00 
   33295:	48 89 48 10          	mov    %rcx,0x10(%rax)
   33299:	48 8b 84 24 88 01 00 	mov    0x188(%rsp),%rax
   332a0:	00 
   332a1:	48 83 40 18 01       	addq   $0x1,0x18(%rax)
   332a6:	41 83 7d 08 11       	cmpl   $0x11,0x8(%r13)
   332ab:	75 23                	jne    332d0 <find_address_ranges+0x560>
   332ad:	83 7c 24 14 00       	cmpl   $0x0,0x14(%rsp)
   332b2:	0f 85 09 01 00 00    	jne    333c1 <find_address_ranges+0x651>
   332b8:	83 7c 24 10 00       	cmpl   $0x0,0x10(%rsp)
   332bd:	74 11                	je     332d0 <find_address_ranges+0x560>
   332bf:	83 7c 24 0c 00       	cmpl   $0x0,0xc(%rsp)
   332c4:	0f 85 f7 00 00 00    	jne    333c1 <find_address_ranges+0x651>
   332ca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   332d0:	41 83 7d 0c 00       	cmpl   $0x0,0xc(%r13)
   332d5:	48 8b 6c 24 40       	mov    0x40(%rsp),%rbp
   332da:	74 50                	je     3332c <find_address_ranges+0x5bc>
   332dc:	48 8b 7c 24 38       	mov    0x38(%rsp),%rdi
   332e1:	4c 89 f6             	mov    %r14,%rsi
   332e4:	4c 89 e2             	mov    %r12,%rdx
   332e7:	48 89 d9             	mov    %rbx,%rcx
   332ea:	4d 89 f8             	mov    %r15,%r8
   332ed:	49 89 e9             	mov    %rbp,%r9
   332f0:	ff b4 24 88 01 00 00 	pushq  0x188(%rsp)
   332f7:	ff b4 24 88 01 00 00 	pushq  0x188(%rsp)
   332fe:	ff b4 24 88 01 00 00 	pushq  0x188(%rsp)
   33305:	ff b4 24 88 01 00 00 	pushq  0x188(%rsp)
   3330c:	8b 84 24 88 01 00 00 	mov    0x188(%rsp),%eax
   33313:	50                   	push   %rax
   33314:	ff b4 24 88 01 00 00 	pushq  0x188(%rsp)
   3331b:	e8 50 fa ff ff       	callq  32d70 <find_address_ranges>
   33320:	48 83 c4 30          	add    $0x30,%rsp
   33324:	85 c0                	test   %eax,%eax
   33326:	0f 84 9c 00 00 00    	je     333c8 <find_address_ranges+0x658>
   3332c:	49 8b 4c 24 18       	mov    0x18(%r12),%rcx
   33331:	48 85 c9             	test   %rcx,%rcx
   33334:	bd 01 00 00 00       	mov    $0x1,%ebp
   33339:	0f 85 74 fa ff ff    	jne    32db3 <find_address_ranges+0x43>
   3333f:	e9 86 00 00 00       	jmpq   333ca <find_address_ranges+0x65a>
   33344:	48 39 54 24 18       	cmp    %rdx,0x18(%rsp)
   33349:	0f 86 57 ff ff ff    	jbe    332a6 <find_address_ranges+0x536>
   3334f:	48 8d 04 c8          	lea    (%rax,%rcx,8),%rax
   33353:	48 83 c0 08          	add    $0x8,%rax
   33357:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
   3335c:	48 89 08             	mov    %rcx,(%rax)
   3335f:	41 83 7d 08 11       	cmpl   $0x11,0x8(%r13)
   33364:	0f 84 43 ff ff ff    	je     332ad <find_address_ranges+0x53d>
   3336a:	e9 61 ff ff ff       	jmpq   332d0 <find_address_ranges+0x560>
   3336f:	bd 01 00 00 00       	mov    $0x1,%ebp
   33374:	41 83 7c 24 38 00    	cmpl   $0x0,0x38(%r12)
   3337a:	75 4e                	jne    333ca <find_address_ranges+0x65a>
   3337c:	4d 8b 04 24          	mov    (%r12),%r8
   33380:	45 2b 4c 24 08       	sub    0x8(%r12),%r9d
   33385:	48 8d 15 3b bb 00 00 	lea    0xbb3b(%rip),%rdx        # 3eec7 <elf_crc32.crc32_table+0x7a7>
   3338c:	48 8d 0d 24 bb 00 00 	lea    0xbb24(%rip),%rcx        # 3eeb7 <elf_crc32.crc32_table+0x797>
   33393:	48 8d 5c 24 60       	lea    0x60(%rsp),%rbx
   33398:	be c8 00 00 00       	mov    $0xc8,%esi
   3339d:	48 89 df             	mov    %rbx,%rdi
   333a0:	31 c0                	xor    %eax,%eax
   333a2:	e8 69 0c fd ff       	callq  4010 <snprintf@plt>
   333a7:	49 8b 7c 24 30       	mov    0x30(%r12),%rdi
   333ac:	48 89 de             	mov    %rbx,%rsi
   333af:	31 d2                	xor    %edx,%edx
   333b1:	41 ff 54 24 28       	callq  *0x28(%r12)
   333b6:	41 c7 44 24 38 01 00 	movl   $0x1,0x38(%r12)
   333bd:	00 00 
   333bf:	eb 09                	jmp    333ca <find_address_ranges+0x65a>
   333c1:	bd 01 00 00 00       	mov    $0x1,%ebp
   333c6:	eb 02                	jmp    333ca <find_address_ranges+0x65a>
   333c8:	31 ed                	xor    %ebp,%ebp
   333ca:	89 e8                	mov    %ebp,%eax
   333cc:	48 81 c4 28 01 00 00 	add    $0x128,%rsp
   333d3:	5b                   	pop    %rbx
   333d4:	41 5c                	pop    %r12
   333d6:	41 5d                	pop    %r13
   333d8:	41 5e                	pop    %r14
   333da:	41 5f                	pop    %r15
   333dc:	5d                   	pop    %rbp
   333dd:	c3                   	retq   
   333de:	48 8d 35 0c bb 00 00 	lea    0xbb0c(%rip),%rsi        # 3eef1 <elf_crc32.crc32_table+0x7d1>
   333e5:	31 ed                	xor    %ebp,%ebp
   333e7:	48 8b bc 24 78 01 00 	mov    0x178(%rsp),%rdi
   333ee:	00 
   333ef:	31 d2                	xor    %edx,%edx
   333f1:	ff 94 24 70 01 00 00 	callq  *0x170(%rsp)
   333f8:	eb d0                	jmp    333ca <find_address_ranges+0x65a>
   333fa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000033400 <abbrev_compare>:
   33400:	48 8b 07             	mov    (%rdi),%rax
   33403:	31 c9                	xor    %ecx,%ecx
   33405:	48 3b 06             	cmp    (%rsi),%rax
   33408:	0f 97 c1             	seta   %cl
   3340b:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   33410:	0f 43 c1             	cmovae %ecx,%eax
   33413:	c3                   	retq   
   33414:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   3341b:	00 00 00 
   3341e:	66 90                	xchg   %ax,%ax

0000000000033420 <read_attribute>:
   33420:	55                   	push   %rbp
   33421:	41 57                	push   %r15
   33423:	41 56                	push   %r14
   33425:	41 55                	push   %r13
   33427:	41 54                	push   %r12
   33429:	53                   	push   %rbx
   3342a:	48 81 ec d8 00 00 00 	sub    $0xd8,%rsp
   33431:	48 89 f3             	mov    %rsi,%rbx
   33434:	4c 8b b4 24 18 01 00 	mov    0x118(%rsp),%r14
   3343b:	00 
   3343c:	0f 57 c0             	xorps  %xmm0,%xmm0
   3343f:	41 0f 11 06          	movups %xmm0,(%r14)
   33443:	8d 47 ff             	lea    -0x1(%rdi),%eax
   33446:	83 f8 1f             	cmp    $0x1f,%eax
   33449:	77 3e                	ja     33489 <read_attribute+0x69>
   3344b:	4c 89 cd             	mov    %r9,%rbp
   3344e:	45 89 c7             	mov    %r8d,%r15d
   33451:	41 89 cc             	mov    %ecx,%r12d
   33454:	48 8b b4 24 10 01 00 	mov    0x110(%rsp),%rsi
   3345b:	00 
   3345c:	48 8d 0d 31 b7 00 00 	lea    0xb731(%rip),%rcx        # 3eb94 <elf_crc32.crc32_table+0x474>
   33463:	48 63 04 81          	movslq (%rcx,%rax,4),%rax
   33467:	48 01 c8             	add    %rcx,%rax
   3346a:	ff e0                	jmpq   *%rax
   3346c:	41 c7 06 01 00 00 00 	movl   $0x1,(%r14)
   33473:	4c 8b 4b 10          	mov    0x10(%rbx),%r9
   33477:	48 8b 43 18          	mov    0x18(%rbx),%rax
   3347b:	48 85 c0             	test   %rax,%rax
   3347e:	0f 85 ed 04 00 00    	jne    33971 <read_attribute+0x551>
   33484:	e9 be 0a 00 00       	jmpq   33f47 <read_attribute+0xb27>
   33489:	81 c7 ff e0 ff ff    	add    $0xffffe0ff,%edi
   3348f:	83 ff 20             	cmp    $0x20,%edi
   33492:	0f 87 34 09 00 00    	ja     33dcc <read_attribute+0x9ac>
   33498:	48 8d 05 75 b7 00 00 	lea    0xb775(%rip),%rax        # 3ec14 <elf_crc32.crc32_table+0x4f4>
   3349f:	48 63 0c b8          	movslq (%rax,%rdi,4),%rcx
   334a3:	48 01 c1             	add    %rax,%rcx
   334a6:	ff e1                	jmpq   *%rcx
   334a8:	41 c7 06 06 00 00 00 	movl   $0x6,(%r14)
   334af:	85 d2                	test   %edx,%edx
   334b1:	0f 84 82 0a 00 00    	je     33f39 <read_attribute+0xb19>
   334b7:	48 89 df             	mov    %rbx,%rdi
   334ba:	4c 89 f3             	mov    %r14,%rbx
   334bd:	e8 0e f8 ff ff       	callq  32cd0 <read_uint64>
   334c2:	48 89 c5             	mov    %rax,%rbp
   334c5:	e9 9a 0c 00 00       	jmpq   34164 <read_attribute+0xd44>
   334ca:	41 c7 06 00 00 00 00 	movl   $0x0,(%r14)
   334d1:	41 83 c7 ff          	add    $0xffffffff,%r15d
   334d5:	41 83 ff 07          	cmp    $0x7,%r15d
   334d9:	0f 87 44 0c 00 00    	ja     34123 <read_attribute+0xd03>
   334df:	48 8d 05 d2 b7 00 00 	lea    0xb7d2(%rip),%rax        # 3ecb8 <elf_crc32.crc32_table+0x598>
   334e6:	4a 63 0c b8          	movslq (%rax,%r15,4),%rcx
   334ea:	48 01 c1             	add    %rax,%rcx
   334ed:	ff e1                	jmpq   *%rcx
   334ef:	41 c7 06 08 00 00 00 	movl   $0x8,(%r14)
   334f6:	4c 8b 4b 10          	mov    0x10(%rbx),%r9
   334fa:	48 8b 43 18          	mov    0x18(%rbx),%rax
   334fe:	48 83 f8 01          	cmp    $0x1,%rax
   33502:	0f 87 43 09 00 00    	ja     33e4b <read_attribute+0xa2b>
   33508:	83 7b 38 00          	cmpl   $0x0,0x38(%rbx)
   3350c:	75 6f                	jne    3357d <read_attribute+0x15d>
   3350e:	4c 8b 03             	mov    (%rbx),%r8
   33511:	44 2b 4b 08          	sub    0x8(%rbx),%r9d
   33515:	48 8d 15 ab b9 00 00 	lea    0xb9ab(%rip),%rdx        # 3eec7 <elf_crc32.crc32_table+0x7a7>
   3351c:	48 8d 0d 94 b9 00 00 	lea    0xb994(%rip),%rcx        # 3eeb7 <elf_crc32.crc32_table+0x797>
   33523:	31 ed                	xor    %ebp,%ebp
   33525:	4c 8d 74 24 10       	lea    0x10(%rsp),%r14
   3352a:	be c8 00 00 00       	mov    $0xc8,%esi
   3352f:	4c 89 f7             	mov    %r14,%rdi
   33532:	31 c0                	xor    %eax,%eax
   33534:	e8 d7 0a fd ff       	callq  4010 <snprintf@plt>
   33539:	48 8b 7b 30          	mov    0x30(%rbx),%rdi
   3353d:	4c 89 f6             	mov    %r14,%rsi
   33540:	31 d2                	xor    %edx,%edx
   33542:	ff 53 28             	callq  *0x28(%rbx)
   33545:	c7 43 38 01 00 00 00 	movl   $0x1,0x38(%rbx)
   3354c:	48 8b 43 18          	mov    0x18(%rbx),%rax
   33550:	48 29 e8             	sub    %rbp,%rax
   33553:	0f 82 25 09 00 00    	jb     33e7e <read_attribute+0xa5e>
   33559:	e9 be 09 00 00       	jmpq   33f1c <read_attribute+0xafc>
   3355e:	41 c7 06 08 00 00 00 	movl   $0x8,(%r14)
   33565:	4c 8b 4b 10          	mov    0x10(%rbx),%r9
   33569:	48 8b 43 18          	mov    0x18(%rbx),%rax
   3356d:	48 83 f8 03          	cmp    $0x3,%rax
   33571:	0f 87 5a 09 00 00    	ja     33ed1 <read_attribute+0xab1>
   33577:	83 7b 38 00          	cmpl   $0x0,0x38(%rbx)
   3357b:	74 91                	je     3350e <read_attribute+0xee>
   3357d:	31 ed                	xor    %ebp,%ebp
   3357f:	48 29 e8             	sub    %rbp,%rax
   33582:	0f 82 f6 08 00 00    	jb     33e7e <read_attribute+0xa5e>
   33588:	e9 8f 09 00 00       	jmpq   33f1c <read_attribute+0xafc>
   3358d:	41 c7 06 01 00 00 00 	movl   $0x1,(%r14)
   33594:	4c 8b 4b 10          	mov    0x10(%rbx),%r9
   33598:	48 8b 43 18          	mov    0x18(%rbx),%rax
   3359c:	48 83 f8 01          	cmp    $0x1,%rax
   335a0:	0f 86 a1 09 00 00    	jbe    33f47 <read_attribute+0xb27>
   335a6:	e9 3e 0b 00 00       	jmpq   340e9 <read_attribute+0xcc9>
   335ab:	41 c7 06 01 00 00 00 	movl   $0x1,(%r14)
   335b2:	4c 8b 4b 10          	mov    0x10(%rbx),%r9
   335b6:	48 8b 43 18          	mov    0x18(%rbx),%rax
   335ba:	48 83 f8 03          	cmp    $0x3,%rax
   335be:	0f 86 83 09 00 00    	jbe    33f47 <read_attribute+0xb27>
   335c4:	e9 8b 09 00 00       	jmpq   33f54 <read_attribute+0xb34>
   335c9:	41 c7 06 01 00 00 00 	movl   $0x1,(%r14)
   335d0:	e9 67 06 00 00       	jmpq   33c3c <read_attribute+0x81c>
   335d5:	41 c7 06 03 00 00 00 	movl   $0x3,(%r14)
   335dc:	48 8b 43 10          	mov    0x10(%rbx),%rax
   335e0:	49 89 46 08          	mov    %rax,0x8(%r14)
   335e4:	4c 8b 4b 10          	mov    0x10(%rbx),%r9
   335e8:	48 8b 43 18          	mov    0x18(%rbx),%rax
   335ec:	31 c9                	xor    %ecx,%ecx
   335ee:	48 85 c0             	test   %rax,%rax
   335f1:	74 20                	je     33613 <read_attribute+0x1f3>
   335f3:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   335fa:	00 00 00 
   335fd:	0f 1f 00             	nopl   (%rax)
   33600:	41 80 3c 09 00       	cmpb   $0x0,(%r9,%rcx,1)
   33605:	74 0c                	je     33613 <read_attribute+0x1f3>
   33607:	48 83 c1 01          	add    $0x1,%rcx
   3360b:	48 39 c8             	cmp    %rcx,%rax
   3360e:	75 f0                	jne    33600 <read_attribute+0x1e0>
   33610:	48 89 c1             	mov    %rax,%rcx
   33613:	48 83 c1 01          	add    $0x1,%rcx
   33617:	48 29 c8             	sub    %rcx,%rax
   3361a:	0f 83 05 09 00 00    	jae    33f25 <read_attribute+0xb05>
   33620:	31 ed                	xor    %ebp,%ebp
   33622:	83 7b 38 00          	cmpl   $0x0,0x38(%rbx)
   33626:	0f 85 a7 0c 00 00    	jne    342d3 <read_attribute+0xeb3>
   3362c:	4c 8b 03             	mov    (%rbx),%r8
   3362f:	44 2b 4b 08          	sub    0x8(%rbx),%r9d
   33633:	48 8d 15 8d b8 00 00 	lea    0xb88d(%rip),%rdx        # 3eec7 <elf_crc32.crc32_table+0x7a7>
   3363a:	48 8d 0d 76 b8 00 00 	lea    0xb876(%rip),%rcx        # 3eeb7 <elf_crc32.crc32_table+0x797>
   33641:	31 ed                	xor    %ebp,%ebp
   33643:	4c 8d 74 24 10       	lea    0x10(%rsp),%r14
   33648:	be c8 00 00 00       	mov    $0xc8,%esi
   3364d:	4c 89 f7             	mov    %r14,%rdi
   33650:	e9 5d 08 00 00       	jmpq   33eb2 <read_attribute+0xa92>
   33655:	41 c7 06 08 00 00 00 	movl   $0x8,(%r14)
   3365c:	4c 8d 3d fb b8 00 00 	lea    0xb8fb(%rip),%r15        # 3ef5e <elf_crc32.crc32_table+0x83e>
   33663:	4c 8d 64 24 10       	lea    0x10(%rsp),%r12
   33668:	45 31 ed             	xor    %r13d,%r13d
   3366b:	31 ed                	xor    %ebp,%ebp
   3366d:	31 d2                	xor    %edx,%edx
   3366f:	4c 8b 4b 10          	mov    0x10(%rbx),%r9
   33673:	48 8b 4b 18          	mov    0x18(%rbx),%rcx
   33677:	48 85 c9             	test   %rcx,%rcx
   3367a:	75 3f                	jne    336bb <read_attribute+0x29b>
   3367c:	e9 8c 05 00 00       	jmpq   33c0d <read_attribute+0x7ed>
   33681:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   33688:	00 00 00 
   3368b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   33690:	44 89 f0             	mov    %r14d,%eax
   33693:	83 e0 7f             	and    $0x7f,%eax
   33696:	89 e9                	mov    %ebp,%ecx
   33698:	48 d3 e0             	shl    %cl,%rax
   3369b:	49 09 c5             	or     %rax,%r13
   3369e:	83 c5 07             	add    $0x7,%ebp
   336a1:	45 84 f6             	test   %r14b,%r14b
   336a4:	0f 89 51 05 00 00    	jns    33bfb <read_attribute+0x7db>
   336aa:	4c 8b 4b 10          	mov    0x10(%rbx),%r9
   336ae:	48 8b 4b 18          	mov    0x18(%rbx),%rcx
   336b2:	48 85 c9             	test   %rcx,%rcx
   336b5:	0f 84 52 05 00 00    	je     33c0d <read_attribute+0x7ed>
   336bb:	49 8d 41 01          	lea    0x1(%r9),%rax
   336bf:	48 89 43 10          	mov    %rax,0x10(%rbx)
   336c3:	48 83 c1 ff          	add    $0xffffffffffffffff,%rcx
   336c7:	48 89 4b 18          	mov    %rcx,0x18(%rbx)
   336cb:	45 0f b6 31          	movzbl (%r9),%r14d
   336cf:	83 fd 3f             	cmp    $0x3f,%ebp
   336d2:	76 bc                	jbe    33690 <read_attribute+0x270>
   336d4:	85 d2                	test   %edx,%edx
   336d6:	75 c6                	jne    3369e <read_attribute+0x27e>
   336d8:	4c 8b 03             	mov    (%rbx),%r8
   336db:	2b 43 08             	sub    0x8(%rbx),%eax
   336de:	be c8 00 00 00       	mov    $0xc8,%esi
   336e3:	4c 89 e7             	mov    %r12,%rdi
   336e6:	48 8d 15 da b7 00 00 	lea    0xb7da(%rip),%rdx        # 3eec7 <elf_crc32.crc32_table+0x7a7>
   336ed:	4c 89 f9             	mov    %r15,%rcx
   336f0:	41 89 c1             	mov    %eax,%r9d
   336f3:	31 c0                	xor    %eax,%eax
   336f5:	e8 16 09 fd ff       	callq  4010 <snprintf@plt>
   336fa:	48 8b 7b 30          	mov    0x30(%rbx),%rdi
   336fe:	4c 89 e6             	mov    %r12,%rsi
   33701:	31 d2                	xor    %edx,%edx
   33703:	ff 53 28             	callq  *0x28(%rbx)
   33706:	ba 01 00 00 00       	mov    $0x1,%edx
   3370b:	83 c5 07             	add    $0x7,%ebp
   3370e:	45 84 f6             	test   %r14b,%r14b
   33711:	78 97                	js     336aa <read_attribute+0x28a>
   33713:	e9 e3 04 00 00       	jmpq   33bfb <read_attribute+0x7db>
   33718:	41 c7 06 08 00 00 00 	movl   $0x8,(%r14)
   3371f:	4c 8b 4b 10          	mov    0x10(%rbx),%r9
   33723:	48 8b 43 18          	mov    0x18(%rbx),%rax
   33727:	48 85 c0             	test   %rax,%rax
   3372a:	0f 84 2c 09 00 00    	je     3405c <read_attribute+0xc3c>
   33730:	49 8d 49 01          	lea    0x1(%r9),%rcx
   33734:	48 89 4b 10          	mov    %rcx,0x10(%rbx)
   33738:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
   3373c:	48 89 43 18          	mov    %rax,0x18(%rbx)
   33740:	41 0f b6 29          	movzbl (%r9),%ebp
   33744:	48 39 e8             	cmp    %rbp,%rax
   33747:	0f 82 31 07 00 00    	jb     33e7e <read_attribute+0xa5e>
   3374d:	e9 71 0b 00 00       	jmpq   342c3 <read_attribute+0xea3>
   33752:	41 c7 06 02 00 00 00 	movl   $0x2,(%r14)
   33759:	4c 8d 3d f7 b7 00 00 	lea    0xb7f7(%rip),%r15        # 3ef57 <elf_crc32.crc32_table+0x837>
   33760:	4c 8d 64 24 10       	lea    0x10(%rsp),%r12
   33765:	45 31 ed             	xor    %r13d,%r13d
   33768:	31 ed                	xor    %ebp,%ebp
   3376a:	31 d2                	xor    %edx,%edx
   3376c:	4c 8b 4b 10          	mov    0x10(%rbx),%r9
   33770:	48 8b 4b 18          	mov    0x18(%rbx),%rcx
   33774:	48 85 c9             	test   %rcx,%rcx
   33777:	75 2e                	jne    337a7 <read_attribute+0x387>
   33779:	e9 43 06 00 00       	jmpq   33dc1 <read_attribute+0x9a1>
   3377e:	66 90                	xchg   %ax,%ax
   33780:	44 89 f0             	mov    %r14d,%eax
   33783:	83 e0 7f             	and    $0x7f,%eax
   33786:	89 e9                	mov    %ebp,%ecx
   33788:	48 d3 e0             	shl    %cl,%rax
   3378b:	49 09 c5             	or     %rax,%r13
   3378e:	83 c5 07             	add    $0x7,%ebp
   33791:	45 84 f6             	test   %r14b,%r14b
   33794:	79 69                	jns    337ff <read_attribute+0x3df>
   33796:	4c 8b 4b 10          	mov    0x10(%rbx),%r9
   3379a:	48 8b 4b 18          	mov    0x18(%rbx),%rcx
   3379e:	48 85 c9             	test   %rcx,%rcx
   337a1:	0f 84 1a 06 00 00    	je     33dc1 <read_attribute+0x9a1>
   337a7:	49 8d 41 01          	lea    0x1(%r9),%rax
   337ab:	48 89 43 10          	mov    %rax,0x10(%rbx)
   337af:	48 83 c1 ff          	add    $0xffffffffffffffff,%rcx
   337b3:	48 89 4b 18          	mov    %rcx,0x18(%rbx)
   337b7:	45 0f b6 31          	movzbl (%r9),%r14d
   337bb:	83 fd 3f             	cmp    $0x3f,%ebp
   337be:	76 c0                	jbe    33780 <read_attribute+0x360>
   337c0:	85 d2                	test   %edx,%edx
   337c2:	75 ca                	jne    3378e <read_attribute+0x36e>
   337c4:	4c 8b 03             	mov    (%rbx),%r8
   337c7:	2b 43 08             	sub    0x8(%rbx),%eax
   337ca:	be c8 00 00 00       	mov    $0xc8,%esi
   337cf:	4c 89 e7             	mov    %r12,%rdi
   337d2:	48 8d 15 ee b6 00 00 	lea    0xb6ee(%rip),%rdx        # 3eec7 <elf_crc32.crc32_table+0x7a7>
   337d9:	4c 89 f9             	mov    %r15,%rcx
   337dc:	41 89 c1             	mov    %eax,%r9d
   337df:	31 c0                	xor    %eax,%eax
   337e1:	e8 2a 08 fd ff       	callq  4010 <snprintf@plt>
   337e6:	48 8b 7b 30          	mov    0x30(%rbx),%rdi
   337ea:	4c 89 e6             	mov    %r12,%rsi
   337ed:	31 d2                	xor    %edx,%edx
   337ef:	ff 53 28             	callq  *0x28(%rbx)
   337f2:	ba 01 00 00 00       	mov    $0x1,%edx
   337f7:	83 c5 07             	add    $0x7,%ebp
   337fa:	45 84 f6             	test   %r14b,%r14b
   337fd:	78 97                	js     33796 <read_attribute+0x376>
   337ff:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
   33806:	89 e9                	mov    %ebp,%ecx
   33808:	48 d3 e0             	shl    %cl,%rax
   3380b:	31 c9                	xor    %ecx,%ecx
   3380d:	41 f6 c6 40          	test   $0x40,%r14b
   33811:	48 0f 44 c1          	cmove  %rcx,%rax
   33815:	83 fd 40             	cmp    $0x40,%ebp
   33818:	48 0f 43 c1          	cmovae %rcx,%rax
   3381c:	49 09 c5             	or     %rax,%r13
   3381f:	e9 05 06 00 00       	jmpq   33e29 <read_attribute+0xa09>
   33824:	85 d2                	test   %edx,%edx
   33826:	0f 84 43 08 00 00    	je     3406f <read_attribute+0xc4f>
   3382c:	48 89 df             	mov    %rbx,%rdi
   3382f:	49 89 f7             	mov    %rsi,%r15
   33832:	e8 99 f4 ff ff       	callq  32cd0 <read_uint64>
   33837:	4c 89 fe             	mov    %r15,%rsi
   3383a:	49 89 c4             	mov    %rax,%r12
   3383d:	49 39 f4             	cmp    %rsi,%r12
   33840:	0f 83 51 08 00 00    	jae    34097 <read_attribute+0xc77>
   33846:	41 c7 06 03 00 00 00 	movl   $0x3,(%r14)
   3384d:	4c 01 e5             	add    %r12,%rbp
   33850:	e9 0f 09 00 00       	jmpq   34164 <read_attribute+0xd44>
   33855:	41 c7 06 01 00 00 00 	movl   $0x1,(%r14)
   3385c:	4c 8d 3d fb b6 00 00 	lea    0xb6fb(%rip),%r15        # 3ef5e <elf_crc32.crc32_table+0x83e>
   33863:	4c 8d 64 24 10       	lea    0x10(%rsp),%r12
   33868:	45 31 ed             	xor    %r13d,%r13d
   3386b:	31 ed                	xor    %ebp,%ebp
   3386d:	31 d2                	xor    %edx,%edx
   3386f:	4c 8b 4b 10          	mov    0x10(%rbx),%r9
   33873:	48 8b 4b 18          	mov    0x18(%rbx),%rcx
   33877:	48 85 c9             	test   %rcx,%rcx
   3387a:	75 3f                	jne    338bb <read_attribute+0x49b>
   3387c:	e9 40 05 00 00       	jmpq   33dc1 <read_attribute+0x9a1>
   33881:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   33888:	00 00 00 
   3388b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   33890:	44 89 f0             	mov    %r14d,%eax
   33893:	83 e0 7f             	and    $0x7f,%eax
   33896:	89 e9                	mov    %ebp,%ecx
   33898:	48 d3 e0             	shl    %cl,%rax
   3389b:	49 09 c5             	or     %rax,%r13
   3389e:	83 c5 07             	add    $0x7,%ebp
   338a1:	45 84 f6             	test   %r14b,%r14b
   338a4:	0f 89 7f 05 00 00    	jns    33e29 <read_attribute+0xa09>
   338aa:	4c 8b 4b 10          	mov    0x10(%rbx),%r9
   338ae:	48 8b 4b 18          	mov    0x18(%rbx),%rcx
   338b2:	48 85 c9             	test   %rcx,%rcx
   338b5:	0f 84 06 05 00 00    	je     33dc1 <read_attribute+0x9a1>
   338bb:	49 8d 41 01          	lea    0x1(%r9),%rax
   338bf:	48 89 43 10          	mov    %rax,0x10(%rbx)
   338c3:	48 83 c1 ff          	add    $0xffffffffffffffff,%rcx
   338c7:	48 89 4b 18          	mov    %rcx,0x18(%rbx)
   338cb:	45 0f b6 31          	movzbl (%r9),%r14d
   338cf:	83 fd 3f             	cmp    $0x3f,%ebp
   338d2:	76 bc                	jbe    33890 <read_attribute+0x470>
   338d4:	85 d2                	test   %edx,%edx
   338d6:	75 c6                	jne    3389e <read_attribute+0x47e>
   338d8:	4c 8b 03             	mov    (%rbx),%r8
   338db:	2b 43 08             	sub    0x8(%rbx),%eax
   338de:	be c8 00 00 00       	mov    $0xc8,%esi
   338e3:	4c 89 e7             	mov    %r12,%rdi
   338e6:	48 8d 15 da b5 00 00 	lea    0xb5da(%rip),%rdx        # 3eec7 <elf_crc32.crc32_table+0x7a7>
   338ed:	4c 89 f9             	mov    %r15,%rcx
   338f0:	41 89 c1             	mov    %eax,%r9d
   338f3:	31 c0                	xor    %eax,%eax
   338f5:	e8 16 07 fd ff       	callq  4010 <snprintf@plt>
   338fa:	48 8b 7b 30          	mov    0x30(%rbx),%rdi
   338fe:	4c 89 e6             	mov    %r12,%rsi
   33901:	31 d2                	xor    %edx,%edx
   33903:	ff 53 28             	callq  *0x28(%rbx)
   33906:	ba 01 00 00 00       	mov    $0x1,%edx
   3390b:	83 c5 07             	add    $0x7,%ebp
   3390e:	45 84 f6             	test   %r14b,%r14b
   33911:	78 97                	js     338aa <read_attribute+0x48a>
   33913:	e9 11 05 00 00       	jmpq   33e29 <read_attribute+0xa09>
   33918:	41 c7 06 05 00 00 00 	movl   $0x5,(%r14)
   3391f:	41 83 fc 02          	cmp    $0x2,%r12d
   33923:	0f 85 08 06 00 00    	jne    33f31 <read_attribute+0xb11>
   33929:	41 83 c7 ff          	add    $0xffffffff,%r15d
   3392d:	41 83 ff 07          	cmp    $0x7,%r15d
   33931:	0f 87 ec 07 00 00    	ja     34123 <read_attribute+0xd03>
   33937:	48 8d 05 5a b3 00 00 	lea    0xb35a(%rip),%rax        # 3ec98 <elf_crc32.crc32_table+0x578>
   3393e:	4a 63 0c b8          	movslq (%rax,%r15,4),%rcx
   33942:	48 01 c1             	add    %rax,%rcx
   33945:	ff e1                	jmpq   *%rcx
   33947:	4c 8b 4b 10          	mov    0x10(%rbx),%r9
   3394b:	48 8b 43 18          	mov    0x18(%rbx),%rax
   3394f:	48 85 c0             	test   %rax,%rax
   33952:	75 1d                	jne    33971 <read_attribute+0x551>
   33954:	e9 ee 05 00 00       	jmpq   33f47 <read_attribute+0xb27>
   33959:	41 c7 06 04 00 00 00 	movl   $0x4,(%r14)
   33960:	4c 8b 4b 10          	mov    0x10(%rbx),%r9
   33964:	48 8b 43 18          	mov    0x18(%rbx),%rax
   33968:	48 85 c0             	test   %rax,%rax
   3396b:	0f 84 d6 05 00 00    	je     33f47 <read_attribute+0xb27>
   33971:	49 8d 49 01          	lea    0x1(%r9),%rcx
   33975:	48 89 4b 10          	mov    %rcx,0x10(%rbx)
   33979:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
   3397d:	48 89 43 18          	mov    %rax,0x18(%rbx)
   33981:	41 0f b6 29          	movzbl (%r9),%ebp
   33985:	e9 da 07 00 00       	jmpq   34164 <read_attribute+0xd44>
   3398a:	41 c7 06 04 00 00 00 	movl   $0x4,(%r14)
   33991:	4c 8b 4b 10          	mov    0x10(%rbx),%r9
   33995:	48 8b 43 18          	mov    0x18(%rbx),%rax
   33999:	48 83 f8 01          	cmp    $0x1,%rax
   3399d:	0f 86 a4 05 00 00    	jbe    33f47 <read_attribute+0xb27>
   339a3:	e9 41 07 00 00       	jmpq   340e9 <read_attribute+0xcc9>
   339a8:	41 c7 06 04 00 00 00 	movl   $0x4,(%r14)
   339af:	4c 8b 4b 10          	mov    0x10(%rbx),%r9
   339b3:	48 8b 43 18          	mov    0x18(%rbx),%rax
   339b7:	48 83 f8 03          	cmp    $0x3,%rax
   339bb:	0f 86 86 05 00 00    	jbe    33f47 <read_attribute+0xb27>
   339c1:	e9 8e 05 00 00       	jmpq   33f54 <read_attribute+0xb34>
   339c6:	41 c7 06 04 00 00 00 	movl   $0x4,(%r14)
   339cd:	e9 6a 02 00 00       	jmpq   33c3c <read_attribute+0x81c>
   339d2:	41 c7 06 04 00 00 00 	movl   $0x4,(%r14)
   339d9:	4c 8d 3d 7e b5 00 00 	lea    0xb57e(%rip),%r15        # 3ef5e <elf_crc32.crc32_table+0x83e>
   339e0:	4c 8d 64 24 10       	lea    0x10(%rsp),%r12
   339e5:	45 31 ed             	xor    %r13d,%r13d
   339e8:	31 ed                	xor    %ebp,%ebp
   339ea:	31 d2                	xor    %edx,%edx
   339ec:	4c 8b 4b 10          	mov    0x10(%rbx),%r9
   339f0:	48 8b 4b 18          	mov    0x18(%rbx),%rcx
   339f4:	48 85 c9             	test   %rcx,%rcx
   339f7:	75 32                	jne    33a2b <read_attribute+0x60b>
   339f9:	e9 c3 03 00 00       	jmpq   33dc1 <read_attribute+0x9a1>
   339fe:	66 90                	xchg   %ax,%ax
   33a00:	44 89 f0             	mov    %r14d,%eax
   33a03:	83 e0 7f             	and    $0x7f,%eax
   33a06:	89 e9                	mov    %ebp,%ecx
   33a08:	48 d3 e0             	shl    %cl,%rax
   33a0b:	49 09 c5             	or     %rax,%r13
   33a0e:	83 c5 07             	add    $0x7,%ebp
   33a11:	45 84 f6             	test   %r14b,%r14b
   33a14:	0f 89 0f 04 00 00    	jns    33e29 <read_attribute+0xa09>
   33a1a:	4c 8b 4b 10          	mov    0x10(%rbx),%r9
   33a1e:	48 8b 4b 18          	mov    0x18(%rbx),%rcx
   33a22:	48 85 c9             	test   %rcx,%rcx
   33a25:	0f 84 96 03 00 00    	je     33dc1 <read_attribute+0x9a1>
   33a2b:	49 8d 41 01          	lea    0x1(%r9),%rax
   33a2f:	48 89 43 10          	mov    %rax,0x10(%rbx)
   33a33:	48 83 c1 ff          	add    $0xffffffffffffffff,%rcx
   33a37:	48 89 4b 18          	mov    %rcx,0x18(%rbx)
   33a3b:	45 0f b6 31          	movzbl (%r9),%r14d
   33a3f:	83 fd 3f             	cmp    $0x3f,%ebp
   33a42:	76 bc                	jbe    33a00 <read_attribute+0x5e0>
   33a44:	85 d2                	test   %edx,%edx
   33a46:	75 c6                	jne    33a0e <read_attribute+0x5ee>
   33a48:	4c 8b 03             	mov    (%rbx),%r8
   33a4b:	2b 43 08             	sub    0x8(%rbx),%eax
   33a4e:	be c8 00 00 00       	mov    $0xc8,%esi
   33a53:	4c 89 e7             	mov    %r12,%rdi
   33a56:	48 8d 15 6a b4 00 00 	lea    0xb46a(%rip),%rdx        # 3eec7 <elf_crc32.crc32_table+0x7a7>
   33a5d:	4c 89 f9             	mov    %r15,%rcx
   33a60:	41 89 c1             	mov    %eax,%r9d
   33a63:	31 c0                	xor    %eax,%eax
   33a65:	e8 a6 05 fd ff       	callq  4010 <snprintf@plt>
   33a6a:	48 8b 7b 30          	mov    0x30(%rbx),%rdi
   33a6e:	4c 89 e6             	mov    %r12,%rsi
   33a71:	31 d2                	xor    %edx,%edx
   33a73:	ff 53 28             	callq  *0x28(%rbx)
   33a76:	ba 01 00 00 00       	mov    $0x1,%edx
   33a7b:	83 c5 07             	add    $0x7,%ebp
   33a7e:	45 84 f6             	test   %r14b,%r14b
   33a81:	78 97                	js     33a1a <read_attribute+0x5fa>
   33a83:	e9 a1 03 00 00       	jmpq   33e29 <read_attribute+0xa09>
   33a88:	89 54 24 04          	mov    %edx,0x4(%rsp)
   33a8c:	48 89 6c 24 08       	mov    %rbp,0x8(%rsp)
   33a91:	31 ed                	xor    %ebp,%ebp
   33a93:	45 31 f6             	xor    %r14d,%r14d
   33a96:	31 d2                	xor    %edx,%edx
   33a98:	4c 8b 4b 10          	mov    0x10(%rbx),%r9
   33a9c:	48 8b 4b 18          	mov    0x18(%rbx),%rcx
   33aa0:	48 85 c9             	test   %rcx,%rcx
   33aa3:	75 38                	jne    33add <read_attribute+0x6bd>
   33aa5:	e9 90 03 00 00       	jmpq   33e3a <read_attribute+0xa1a>
   33aaa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   33ab0:	44 89 e8             	mov    %r13d,%eax
   33ab3:	83 e0 7f             	and    $0x7f,%eax
   33ab6:	44 89 f1             	mov    %r14d,%ecx
   33ab9:	48 d3 e0             	shl    %cl,%rax
   33abc:	48 09 c5             	or     %rax,%rbp
   33abf:	41 83 c6 07          	add    $0x7,%r14d
   33ac3:	45 84 ed             	test   %r13b,%r13b
   33ac6:	0f 89 df 06 00 00    	jns    341ab <read_attribute+0xd8b>
   33acc:	4c 8b 4b 10          	mov    0x10(%rbx),%r9
   33ad0:	48 8b 4b 18          	mov    0x18(%rbx),%rcx
   33ad4:	48 85 c9             	test   %rcx,%rcx
   33ad7:	0f 84 5d 03 00 00    	je     33e3a <read_attribute+0xa1a>
   33add:	49 8d 41 01          	lea    0x1(%r9),%rax
   33ae1:	48 89 43 10          	mov    %rax,0x10(%rbx)
   33ae5:	48 83 c1 ff          	add    $0xffffffffffffffff,%rcx
   33ae9:	48 89 4b 18          	mov    %rcx,0x18(%rbx)
   33aed:	45 0f b6 29          	movzbl (%r9),%r13d
   33af1:	41 83 fe 3f          	cmp    $0x3f,%r14d
   33af5:	76 b9                	jbe    33ab0 <read_attribute+0x690>
   33af7:	85 d2                	test   %edx,%edx
   33af9:	75 c4                	jne    33abf <read_attribute+0x69f>
   33afb:	4c 8b 03             	mov    (%rbx),%r8
   33afe:	2b 43 08             	sub    0x8(%rbx),%eax
   33b01:	be c8 00 00 00       	mov    $0xc8,%esi
   33b06:	48 8d 4c 24 10       	lea    0x10(%rsp),%rcx
   33b0b:	48 89 cf             	mov    %rcx,%rdi
   33b0e:	48 8d 15 b2 b3 00 00 	lea    0xb3b2(%rip),%rdx        # 3eec7 <elf_crc32.crc32_table+0x7a7>
   33b15:	48 8d 0d 42 b4 00 00 	lea    0xb442(%rip),%rcx        # 3ef5e <elf_crc32.crc32_table+0x83e>
   33b1c:	41 89 c1             	mov    %eax,%r9d
   33b1f:	31 c0                	xor    %eax,%eax
   33b21:	e8 ea 04 fd ff       	callq  4010 <snprintf@plt>
   33b26:	48 8b 7b 30          	mov    0x30(%rbx),%rdi
   33b2a:	48 8d 74 24 10       	lea    0x10(%rsp),%rsi
   33b2f:	31 d2                	xor    %edx,%edx
   33b31:	ff 53 28             	callq  *0x28(%rbx)
   33b34:	ba 01 00 00 00       	mov    $0x1,%edx
   33b39:	41 83 c6 07          	add    $0x7,%r14d
   33b3d:	45 84 ed             	test   %r13b,%r13b
   33b40:	78 8a                	js     33acc <read_attribute+0x6ac>
   33b42:	e9 64 06 00 00       	jmpq   341ab <read_attribute+0xd8b>
   33b47:	41 c7 06 09 00 00 00 	movl   $0x9,(%r14)
   33b4e:	4c 8d 3d 09 b4 00 00 	lea    0xb409(%rip),%r15        # 3ef5e <elf_crc32.crc32_table+0x83e>
   33b55:	4c 8d 64 24 10       	lea    0x10(%rsp),%r12
   33b5a:	45 31 ed             	xor    %r13d,%r13d
   33b5d:	31 ed                	xor    %ebp,%ebp
   33b5f:	31 d2                	xor    %edx,%edx
   33b61:	4c 8b 4b 10          	mov    0x10(%rbx),%r9
   33b65:	48 8b 4b 18          	mov    0x18(%rbx),%rcx
   33b69:	48 85 c9             	test   %rcx,%rcx
   33b6c:	75 35                	jne    33ba3 <read_attribute+0x783>
   33b6e:	e9 9a 00 00 00       	jmpq   33c0d <read_attribute+0x7ed>
   33b73:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   33b7a:	00 00 00 
   33b7d:	0f 1f 00             	nopl   (%rax)
   33b80:	44 89 f0             	mov    %r14d,%eax
   33b83:	83 e0 7f             	and    $0x7f,%eax
   33b86:	89 e9                	mov    %ebp,%ecx
   33b88:	48 d3 e0             	shl    %cl,%rax
   33b8b:	49 09 c5             	or     %rax,%r13
   33b8e:	83 c5 07             	add    $0x7,%ebp
   33b91:	45 84 f6             	test   %r14b,%r14b
   33b94:	79 65                	jns    33bfb <read_attribute+0x7db>
   33b96:	4c 8b 4b 10          	mov    0x10(%rbx),%r9
   33b9a:	48 8b 4b 18          	mov    0x18(%rbx),%rcx
   33b9e:	48 85 c9             	test   %rcx,%rcx
   33ba1:	74 6a                	je     33c0d <read_attribute+0x7ed>
   33ba3:	49 8d 41 01          	lea    0x1(%r9),%rax
   33ba7:	48 89 43 10          	mov    %rax,0x10(%rbx)
   33bab:	48 83 c1 ff          	add    $0xffffffffffffffff,%rcx
   33baf:	48 89 4b 18          	mov    %rcx,0x18(%rbx)
   33bb3:	45 0f b6 31          	movzbl (%r9),%r14d
   33bb7:	83 fd 3f             	cmp    $0x3f,%ebp
   33bba:	76 c4                	jbe    33b80 <read_attribute+0x760>
   33bbc:	85 d2                	test   %edx,%edx
   33bbe:	75 ce                	jne    33b8e <read_attribute+0x76e>
   33bc0:	4c 8b 03             	mov    (%rbx),%r8
   33bc3:	2b 43 08             	sub    0x8(%rbx),%eax
   33bc6:	be c8 00 00 00       	mov    $0xc8,%esi
   33bcb:	4c 89 e7             	mov    %r12,%rdi
   33bce:	48 8d 15 f2 b2 00 00 	lea    0xb2f2(%rip),%rdx        # 3eec7 <elf_crc32.crc32_table+0x7a7>
   33bd5:	4c 89 f9             	mov    %r15,%rcx
   33bd8:	41 89 c1             	mov    %eax,%r9d
   33bdb:	31 c0                	xor    %eax,%eax
   33bdd:	e8 2e 04 fd ff       	callq  4010 <snprintf@plt>
   33be2:	48 8b 7b 30          	mov    0x30(%rbx),%rdi
   33be6:	4c 89 e6             	mov    %r12,%rsi
   33be9:	31 d2                	xor    %edx,%edx
   33beb:	ff 53 28             	callq  *0x28(%rbx)
   33bee:	ba 01 00 00 00       	mov    $0x1,%edx
   33bf3:	83 c5 07             	add    $0x7,%ebp
   33bf6:	45 84 f6             	test   %r14b,%r14b
   33bf9:	78 9b                	js     33b96 <read_attribute+0x776>
   33bfb:	48 8b 43 18          	mov    0x18(%rbx),%rax
   33bff:	4c 39 e8             	cmp    %r13,%rax
   33c02:	0f 83 48 04 00 00    	jae    34050 <read_attribute+0xc30>
   33c08:	e9 71 02 00 00       	jmpq   33e7e <read_attribute+0xa5e>
   33c0d:	83 7b 38 00          	cmpl   $0x0,0x38(%rbx)
   33c11:	0f 84 f6 03 00 00    	je     3400d <read_attribute+0xbed>
   33c17:	31 c0                	xor    %eax,%eax
   33c19:	45 31 ed             	xor    %r13d,%r13d
   33c1c:	e9 2f 04 00 00       	jmpq   34050 <read_attribute+0xc30>
   33c21:	41 c7 06 01 00 00 00 	movl   $0x1,(%r14)
   33c28:	49 c7 46 08 01 00 00 	movq   $0x1,0x8(%r14)
   33c2f:	00 
   33c30:	e9 99 06 00 00       	jmpq   342ce <read_attribute+0xeae>
   33c35:	41 c7 06 07 00 00 00 	movl   $0x7,(%r14)
   33c3c:	48 89 df             	mov    %rbx,%rdi
   33c3f:	4c 89 f3             	mov    %r14,%rbx
   33c42:	e8 89 f0 ff ff       	callq  32cd0 <read_uint64>
   33c47:	49 89 46 08          	mov    %rax,0x8(%r14)
   33c4b:	e9 7e 06 00 00       	jmpq   342ce <read_attribute+0xeae>
   33c50:	41 c7 06 06 00 00 00 	movl   $0x6,(%r14)
   33c57:	4c 8d 3d 00 b3 00 00 	lea    0xb300(%rip),%r15        # 3ef5e <elf_crc32.crc32_table+0x83e>
   33c5e:	4c 8d 64 24 10       	lea    0x10(%rsp),%r12
   33c63:	45 31 ed             	xor    %r13d,%r13d
   33c66:	31 ed                	xor    %ebp,%ebp
   33c68:	31 d2                	xor    %edx,%edx
   33c6a:	4c 8b 4b 10          	mov    0x10(%rbx),%r9
   33c6e:	48 8b 4b 18          	mov    0x18(%rbx),%rcx
   33c72:	48 85 c9             	test   %rcx,%rcx
   33c75:	75 34                	jne    33cab <read_attribute+0x88b>
   33c77:	e9 45 01 00 00       	jmpq   33dc1 <read_attribute+0x9a1>
   33c7c:	0f 1f 40 00          	nopl   0x0(%rax)
   33c80:	44 89 f0             	mov    %r14d,%eax
   33c83:	83 e0 7f             	and    $0x7f,%eax
   33c86:	89 e9                	mov    %ebp,%ecx
   33c88:	48 d3 e0             	shl    %cl,%rax
   33c8b:	49 09 c5             	or     %rax,%r13
   33c8e:	83 c5 07             	add    $0x7,%ebp
   33c91:	45 84 f6             	test   %r14b,%r14b
   33c94:	0f 89 8f 01 00 00    	jns    33e29 <read_attribute+0xa09>
   33c9a:	4c 8b 4b 10          	mov    0x10(%rbx),%r9
   33c9e:	48 8b 4b 18          	mov    0x18(%rbx),%rcx
   33ca2:	48 85 c9             	test   %rcx,%rcx
   33ca5:	0f 84 16 01 00 00    	je     33dc1 <read_attribute+0x9a1>
   33cab:	49 8d 41 01          	lea    0x1(%r9),%rax
   33caf:	48 89 43 10          	mov    %rax,0x10(%rbx)
   33cb3:	48 83 c1 ff          	add    $0xffffffffffffffff,%rcx
   33cb7:	48 89 4b 18          	mov    %rcx,0x18(%rbx)
   33cbb:	45 0f b6 31          	movzbl (%r9),%r14d
   33cbf:	83 fd 3f             	cmp    $0x3f,%ebp
   33cc2:	76 bc                	jbe    33c80 <read_attribute+0x860>
   33cc4:	85 d2                	test   %edx,%edx
   33cc6:	75 c6                	jne    33c8e <read_attribute+0x86e>
   33cc8:	4c 8b 03             	mov    (%rbx),%r8
   33ccb:	2b 43 08             	sub    0x8(%rbx),%eax
   33cce:	be c8 00 00 00       	mov    $0xc8,%esi
   33cd3:	4c 89 e7             	mov    %r12,%rdi
   33cd6:	48 8d 15 ea b1 00 00 	lea    0xb1ea(%rip),%rdx        # 3eec7 <elf_crc32.crc32_table+0x7a7>
   33cdd:	4c 89 f9             	mov    %r15,%rcx
   33ce0:	41 89 c1             	mov    %eax,%r9d
   33ce3:	31 c0                	xor    %eax,%eax
   33ce5:	e8 26 03 fd ff       	callq  4010 <snprintf@plt>
   33cea:	48 8b 7b 30          	mov    0x30(%rbx),%rdi
   33cee:	4c 89 e6             	mov    %r12,%rsi
   33cf1:	31 d2                	xor    %edx,%edx
   33cf3:	ff 53 28             	callq  *0x28(%rbx)
   33cf6:	ba 01 00 00 00       	mov    $0x1,%edx
   33cfb:	83 c5 07             	add    $0x7,%ebp
   33cfe:	45 84 f6             	test   %r14b,%r14b
   33d01:	78 97                	js     33c9a <read_attribute+0x87a>
   33d03:	e9 21 01 00 00       	jmpq   33e29 <read_attribute+0xa09>
   33d08:	41 c7 06 06 00 00 00 	movl   $0x6,(%r14)
   33d0f:	4c 8d 3d 48 b2 00 00 	lea    0xb248(%rip),%r15        # 3ef5e <elf_crc32.crc32_table+0x83e>
   33d16:	4c 8d 64 24 10       	lea    0x10(%rsp),%r12
   33d1b:	45 31 ed             	xor    %r13d,%r13d
   33d1e:	31 ed                	xor    %ebp,%ebp
   33d20:	31 d2                	xor    %edx,%edx
   33d22:	4c 8b 4b 10          	mov    0x10(%rbx),%r9
   33d26:	48 8b 4b 18          	mov    0x18(%rbx),%rcx
   33d2a:	48 85 c9             	test   %rcx,%rcx
   33d2d:	75 38                	jne    33d67 <read_attribute+0x947>
   33d2f:	e9 8d 00 00 00       	jmpq   33dc1 <read_attribute+0x9a1>
   33d34:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   33d3b:	00 00 00 
   33d3e:	66 90                	xchg   %ax,%ax
   33d40:	44 89 f0             	mov    %r14d,%eax
   33d43:	83 e0 7f             	and    $0x7f,%eax
   33d46:	89 e9                	mov    %ebp,%ecx
   33d48:	48 d3 e0             	shl    %cl,%rax
   33d4b:	49 09 c5             	or     %rax,%r13
   33d4e:	83 c5 07             	add    $0x7,%ebp
   33d51:	45 84 f6             	test   %r14b,%r14b
   33d54:	0f 89 cf 00 00 00    	jns    33e29 <read_attribute+0xa09>
   33d5a:	4c 8b 4b 10          	mov    0x10(%rbx),%r9
   33d5e:	48 8b 4b 18          	mov    0x18(%rbx),%rcx
   33d62:	48 85 c9             	test   %rcx,%rcx
   33d65:	74 5a                	je     33dc1 <read_attribute+0x9a1>
   33d67:	49 8d 41 01          	lea    0x1(%r9),%rax
   33d6b:	48 89 43 10          	mov    %rax,0x10(%rbx)
   33d6f:	48 83 c1 ff          	add    $0xffffffffffffffff,%rcx
   33d73:	48 89 4b 18          	mov    %rcx,0x18(%rbx)
   33d77:	45 0f b6 31          	movzbl (%r9),%r14d
   33d7b:	83 fd 3f             	cmp    $0x3f,%ebp
   33d7e:	76 c0                	jbe    33d40 <read_attribute+0x920>
   33d80:	85 d2                	test   %edx,%edx
   33d82:	75 ca                	jne    33d4e <read_attribute+0x92e>
   33d84:	4c 8b 03             	mov    (%rbx),%r8
   33d87:	2b 43 08             	sub    0x8(%rbx),%eax
   33d8a:	be c8 00 00 00       	mov    $0xc8,%esi
   33d8f:	4c 89 e7             	mov    %r12,%rdi
   33d92:	48 8d 15 2e b1 00 00 	lea    0xb12e(%rip),%rdx        # 3eec7 <elf_crc32.crc32_table+0x7a7>
   33d99:	4c 89 f9             	mov    %r15,%rcx
   33d9c:	41 89 c1             	mov    %eax,%r9d
   33d9f:	31 c0                	xor    %eax,%eax
   33da1:	e8 6a 02 fd ff       	callq  4010 <snprintf@plt>
   33da6:	48 8b 7b 30          	mov    0x30(%rbx),%rdi
   33daa:	4c 89 e6             	mov    %r12,%rsi
   33dad:	31 d2                	xor    %edx,%edx
   33daf:	ff 53 28             	callq  *0x28(%rbx)
   33db2:	ba 01 00 00 00       	mov    $0x1,%edx
   33db7:	83 c5 07             	add    $0x7,%ebp
   33dba:	45 84 f6             	test   %r14b,%r14b
   33dbd:	78 9b                	js     33d5a <read_attribute+0x93a>
   33dbf:	eb 68                	jmp    33e29 <read_attribute+0xa09>
   33dc1:	83 7b 38 00          	cmpl   $0x0,0x38(%rbx)
   33dc5:	74 23                	je     33dea <read_attribute+0x9ca>
   33dc7:	45 31 ed             	xor    %r13d,%r13d
   33dca:	eb 5d                	jmp    33e29 <read_attribute+0xa09>
   33dcc:	4c 8b 03             	mov    (%rbx),%r8
   33dcf:	44 8b 4b 10          	mov    0x10(%rbx),%r9d
   33dd3:	44 2b 4b 08          	sub    0x8(%rbx),%r9d
   33dd7:	48 8d 15 e9 b0 00 00 	lea    0xb0e9(%rip),%rdx        # 3eec7 <elf_crc32.crc32_table+0x7a7>
   33dde:	48 8d 0d 40 b1 00 00 	lea    0xb140(%rip),%rcx        # 3ef25 <elf_crc32.crc32_table+0x805>
   33de5:	e9 c6 02 00 00       	jmpq   340b0 <read_attribute+0xc90>
   33dea:	4c 8b 03             	mov    (%rbx),%r8
   33ded:	44 2b 4b 08          	sub    0x8(%rbx),%r9d
   33df1:	48 8d 15 cf b0 00 00 	lea    0xb0cf(%rip),%rdx        # 3eec7 <elf_crc32.crc32_table+0x7a7>
   33df8:	48 8d 0d b8 b0 00 00 	lea    0xb0b8(%rip),%rcx        # 3eeb7 <elf_crc32.crc32_table+0x797>
   33dff:	45 31 ed             	xor    %r13d,%r13d
   33e02:	48 8d 6c 24 10       	lea    0x10(%rsp),%rbp
   33e07:	be c8 00 00 00       	mov    $0xc8,%esi
   33e0c:	48 89 ef             	mov    %rbp,%rdi
   33e0f:	31 c0                	xor    %eax,%eax
   33e11:	e8 fa 01 fd ff       	callq  4010 <snprintf@plt>
   33e16:	48 8b 7b 30          	mov    0x30(%rbx),%rdi
   33e1a:	48 89 ee             	mov    %rbp,%rsi
   33e1d:	31 d2                	xor    %edx,%edx
   33e1f:	ff 53 28             	callq  *0x28(%rbx)
   33e22:	c7 43 38 01 00 00 00 	movl   $0x1,0x38(%rbx)
   33e29:	48 8b 84 24 18 01 00 	mov    0x118(%rsp),%rax
   33e30:	00 
   33e31:	4c 89 68 08          	mov    %r13,0x8(%rax)
   33e35:	e9 94 04 00 00       	jmpq   342ce <read_attribute+0xeae>
   33e3a:	83 7b 38 00          	cmpl   $0x0,0x38(%rbx)
   33e3e:	0f 84 29 03 00 00    	je     3416d <read_attribute+0xd4d>
   33e44:	31 ed                	xor    %ebp,%ebp
   33e46:	e9 60 03 00 00       	jmpq   341ab <read_attribute+0xd8b>
   33e4b:	49 8d 49 02          	lea    0x2(%r9),%rcx
   33e4f:	48 89 4b 10          	mov    %rcx,0x10(%rbx)
   33e53:	48 83 c0 fe          	add    $0xfffffffffffffffe,%rax
   33e57:	48 89 43 18          	mov    %rax,0x18(%rbx)
   33e5b:	83 7b 20 00          	cmpl   $0x0,0x20(%rbx)
   33e5f:	0f 84 78 03 00 00    	je     341dd <read_attribute+0xdbd>
   33e65:	41 0f b6 09          	movzbl (%r9),%ecx
   33e69:	48 c1 e1 08          	shl    $0x8,%rcx
   33e6d:	41 0f b6 69 01       	movzbl 0x1(%r9),%ebp
   33e72:	48 09 cd             	or     %rcx,%rbp
   33e75:	48 29 e8             	sub    %rbp,%rax
   33e78:	0f 83 9e 00 00 00    	jae    33f1c <read_attribute+0xafc>
   33e7e:	31 ed                	xor    %ebp,%ebp
   33e80:	83 7b 38 00          	cmpl   $0x0,0x38(%rbx)
   33e84:	0f 85 49 04 00 00    	jne    342d3 <read_attribute+0xeb3>
   33e8a:	4c 8b 03             	mov    (%rbx),%r8
   33e8d:	44 8b 4b 10          	mov    0x10(%rbx),%r9d
   33e91:	44 2b 4b 08          	sub    0x8(%rbx),%r9d
   33e95:	48 8d 15 2b b0 00 00 	lea    0xb02b(%rip),%rdx        # 3eec7 <elf_crc32.crc32_table+0x7a7>
   33e9c:	48 8d 0d 14 b0 00 00 	lea    0xb014(%rip),%rcx        # 3eeb7 <elf_crc32.crc32_table+0x797>
   33ea3:	31 ed                	xor    %ebp,%ebp
   33ea5:	4c 8d 74 24 10       	lea    0x10(%rsp),%r14
   33eaa:	be c8 00 00 00       	mov    $0xc8,%esi
   33eaf:	4c 89 f7             	mov    %r14,%rdi
   33eb2:	31 c0                	xor    %eax,%eax
   33eb4:	e8 57 01 fd ff       	callq  4010 <snprintf@plt>
   33eb9:	48 8b 7b 30          	mov    0x30(%rbx),%rdi
   33ebd:	4c 89 f6             	mov    %r14,%rsi
   33ec0:	31 d2                	xor    %edx,%edx
   33ec2:	ff 53 28             	callq  *0x28(%rbx)
   33ec5:	c7 43 38 01 00 00 00 	movl   $0x1,0x38(%rbx)
   33ecc:	e9 02 04 00 00       	jmpq   342d3 <read_attribute+0xeb3>
   33ed1:	49 8d 49 04          	lea    0x4(%r9),%rcx
   33ed5:	48 89 4b 10          	mov    %rcx,0x10(%rbx)
   33ed9:	48 83 c0 fc          	add    $0xfffffffffffffffc,%rax
   33edd:	48 89 43 18          	mov    %rax,0x18(%rbx)
   33ee1:	83 7b 20 00          	cmpl   $0x0,0x20(%rbx)
   33ee5:	0f 84 10 03 00 00    	je     341fb <read_attribute+0xddb>
   33eeb:	41 0f b6 09          	movzbl (%r9),%ecx
   33eef:	48 c1 e1 18          	shl    $0x18,%rcx
   33ef3:	41 0f b6 51 01       	movzbl 0x1(%r9),%edx
   33ef8:	48 c1 e2 10          	shl    $0x10,%rdx
   33efc:	48 09 ca             	or     %rcx,%rdx
   33eff:	41 0f b6 49 02       	movzbl 0x2(%r9),%ecx
   33f04:	48 c1 e1 08          	shl    $0x8,%rcx
   33f08:	48 09 d1             	or     %rdx,%rcx
   33f0b:	41 0f b6 69 03       	movzbl 0x3(%r9),%ebp
   33f10:	48 09 cd             	or     %rcx,%rbp
   33f13:	48 29 e8             	sub    %rbp,%rax
   33f16:	0f 82 62 ff ff ff    	jb     33e7e <read_attribute+0xa5e>
   33f1c:	48 01 6b 10          	add    %rbp,0x10(%rbx)
   33f20:	e9 a5 03 00 00       	jmpq   342ca <read_attribute+0xeaa>
   33f25:	49 01 c9             	add    %rcx,%r9
   33f28:	4c 89 4b 10          	mov    %r9,0x10(%rbx)
   33f2c:	e9 99 03 00 00       	jmpq   342ca <read_attribute+0xeaa>
   33f31:	85 d2                	test   %edx,%edx
   33f33:	0f 85 7e f5 ff ff    	jne    334b7 <read_attribute+0x97>
   33f39:	4c 8b 4b 10          	mov    0x10(%rbx),%r9
   33f3d:	48 8b 43 18          	mov    0x18(%rbx),%rax
   33f41:	48 83 f8 03          	cmp    $0x3,%rax
   33f45:	77 0d                	ja     33f54 <read_attribute+0xb34>
   33f47:	83 7b 38 00          	cmpl   $0x0,0x38(%rbx)
   33f4b:	74 4a                	je     33f97 <read_attribute+0xb77>
   33f4d:	31 ed                	xor    %ebp,%ebp
   33f4f:	e9 10 02 00 00       	jmpq   34164 <read_attribute+0xd44>
   33f54:	49 8d 49 04          	lea    0x4(%r9),%rcx
   33f58:	48 89 4b 10          	mov    %rcx,0x10(%rbx)
   33f5c:	48 83 c0 fc          	add    $0xfffffffffffffffc,%rax
   33f60:	48 89 43 18          	mov    %rax,0x18(%rbx)
   33f64:	83 7b 20 00          	cmpl   $0x0,0x20(%rbx)
   33f68:	74 76                	je     33fe0 <read_attribute+0xbc0>
   33f6a:	41 0f b6 01          	movzbl (%r9),%eax
   33f6e:	48 c1 e0 18          	shl    $0x18,%rax
   33f72:	41 0f b6 49 01       	movzbl 0x1(%r9),%ecx
   33f77:	48 c1 e1 10          	shl    $0x10,%rcx
   33f7b:	48 09 c1             	or     %rax,%rcx
   33f7e:	41 0f b6 41 02       	movzbl 0x2(%r9),%eax
   33f83:	48 c1 e0 08          	shl    $0x8,%rax
   33f87:	48 09 c8             	or     %rcx,%rax
   33f8a:	41 0f b6 69 03       	movzbl 0x3(%r9),%ebp
   33f8f:	48 09 c5             	or     %rax,%rbp
   33f92:	e9 cd 01 00 00       	jmpq   34164 <read_attribute+0xd44>
   33f97:	4c 8b 03             	mov    (%rbx),%r8
   33f9a:	44 2b 4b 08          	sub    0x8(%rbx),%r9d
   33f9e:	4d 89 f7             	mov    %r14,%r15
   33fa1:	48 8d 15 1f af 00 00 	lea    0xaf1f(%rip),%rdx        # 3eec7 <elf_crc32.crc32_table+0x7a7>
   33fa8:	48 8d 0d 08 af 00 00 	lea    0xaf08(%rip),%rcx        # 3eeb7 <elf_crc32.crc32_table+0x797>
   33faf:	31 ed                	xor    %ebp,%ebp
   33fb1:	4c 8d 74 24 10       	lea    0x10(%rsp),%r14
   33fb6:	be c8 00 00 00       	mov    $0xc8,%esi
   33fbb:	4c 89 f7             	mov    %r14,%rdi
   33fbe:	31 c0                	xor    %eax,%eax
   33fc0:	e8 4b 00 fd ff       	callq  4010 <snprintf@plt>
   33fc5:	48 8b 7b 30          	mov    0x30(%rbx),%rdi
   33fc9:	4c 89 f6             	mov    %r14,%rsi
   33fcc:	31 d2                	xor    %edx,%edx
   33fce:	ff 53 28             	callq  *0x28(%rbx)
   33fd1:	4d 89 fe             	mov    %r15,%r14
   33fd4:	c7 43 38 01 00 00 00 	movl   $0x1,0x38(%rbx)
   33fdb:	e9 84 01 00 00       	jmpq   34164 <read_attribute+0xd44>
   33fe0:	41 0f b6 41 03       	movzbl 0x3(%r9),%eax
   33fe5:	48 c1 e0 18          	shl    $0x18,%rax
   33fe9:	41 0f b6 49 02       	movzbl 0x2(%r9),%ecx
   33fee:	48 c1 e1 10          	shl    $0x10,%rcx
   33ff2:	48 09 c1             	or     %rax,%rcx
   33ff5:	41 0f b6 41 01       	movzbl 0x1(%r9),%eax
   33ffa:	48 c1 e0 08          	shl    $0x8,%rax
   33ffe:	48 09 c8             	or     %rcx,%rax
   34001:	41 0f b6 29          	movzbl (%r9),%ebp
   34005:	48 09 c5             	or     %rax,%rbp
   34008:	e9 57 01 00 00       	jmpq   34164 <read_attribute+0xd44>
   3400d:	4c 8b 03             	mov    (%rbx),%r8
   34010:	44 2b 4b 08          	sub    0x8(%rbx),%r9d
   34014:	48 8d 15 ac ae 00 00 	lea    0xaeac(%rip),%rdx        # 3eec7 <elf_crc32.crc32_table+0x7a7>
   3401b:	48 8d 0d 95 ae 00 00 	lea    0xae95(%rip),%rcx        # 3eeb7 <elf_crc32.crc32_table+0x797>
   34022:	45 31 ed             	xor    %r13d,%r13d
   34025:	48 8d 6c 24 10       	lea    0x10(%rsp),%rbp
   3402a:	be c8 00 00 00       	mov    $0xc8,%esi
   3402f:	48 89 ef             	mov    %rbp,%rdi
   34032:	31 c0                	xor    %eax,%eax
   34034:	e8 d7 ff fc ff       	callq  4010 <snprintf@plt>
   34039:	48 8b 7b 30          	mov    0x30(%rbx),%rdi
   3403d:	48 89 ee             	mov    %rbp,%rsi
   34040:	31 d2                	xor    %edx,%edx
   34042:	ff 53 28             	callq  *0x28(%rbx)
   34045:	c7 43 38 01 00 00 00 	movl   $0x1,0x38(%rbx)
   3404c:	48 8b 43 18          	mov    0x18(%rbx),%rax
   34050:	4c 01 6b 10          	add    %r13,0x10(%rbx)
   34054:	4c 29 e8             	sub    %r13,%rax
   34057:	e9 6e 02 00 00       	jmpq   342ca <read_attribute+0xeaa>
   3405c:	83 7b 38 00          	cmpl   $0x0,0x38(%rbx)
   34060:	0f 84 1b 02 00 00    	je     34281 <read_attribute+0xe61>
   34066:	31 ed                	xor    %ebp,%ebp
   34068:	31 c0                	xor    %eax,%eax
   3406a:	e9 54 02 00 00       	jmpq   342c3 <read_attribute+0xea3>
   3406f:	4c 8b 4b 10          	mov    0x10(%rbx),%r9
   34073:	48 8b 43 18          	mov    0x18(%rbx),%rax
   34077:	48 83 f8 03          	cmp    $0x3,%rax
   3407b:	0f 87 b0 01 00 00    	ja     34231 <read_attribute+0xe11>
   34081:	83 7b 38 00          	cmpl   $0x0,0x38(%rbx)
   34085:	0f 84 5c 02 00 00    	je     342e7 <read_attribute+0xec7>
   3408b:	45 31 e4             	xor    %r12d,%r12d
   3408e:	49 39 f4             	cmp    %rsi,%r12
   34091:	0f 82 af f7 ff ff    	jb     33846 <read_attribute+0x426>
   34097:	4c 8b 03             	mov    (%rbx),%r8
   3409a:	44 8b 4b 10          	mov    0x10(%rbx),%r9d
   3409e:	44 2b 4b 08          	sub    0x8(%rbx),%r9d
   340a2:	48 8d 15 1e ae 00 00 	lea    0xae1e(%rip),%rdx        # 3eec7 <elf_crc32.crc32_table+0x7a7>
   340a9:	48 8d 0d 5b ae 00 00 	lea    0xae5b(%rip),%rcx        # 3ef0b <elf_crc32.crc32_table+0x7eb>
   340b0:	31 ed                	xor    %ebp,%ebp
   340b2:	4c 8d 74 24 10       	lea    0x10(%rsp),%r14
   340b7:	be c8 00 00 00       	mov    $0xc8,%esi
   340bc:	4c 89 f7             	mov    %r14,%rdi
   340bf:	31 c0                	xor    %eax,%eax
   340c1:	e8 4a ff fc ff       	callq  4010 <snprintf@plt>
   340c6:	48 8b 7b 30          	mov    0x30(%rbx),%rdi
   340ca:	4c 89 f6             	mov    %r14,%rsi
   340cd:	31 d2                	xor    %edx,%edx
   340cf:	ff 53 28             	callq  *0x28(%rbx)
   340d2:	e9 fc 01 00 00       	jmpq   342d3 <read_attribute+0xeb3>
   340d7:	4c 8b 4b 10          	mov    0x10(%rbx),%r9
   340db:	48 8b 43 18          	mov    0x18(%rbx),%rax
   340df:	48 83 f8 01          	cmp    $0x1,%rax
   340e3:	0f 86 5e fe ff ff    	jbe    33f47 <read_attribute+0xb27>
   340e9:	49 8d 49 02          	lea    0x2(%r9),%rcx
   340ed:	48 89 4b 10          	mov    %rcx,0x10(%rbx)
   340f1:	48 83 c0 fe          	add    $0xfffffffffffffffe,%rax
   340f5:	48 89 43 18          	mov    %rax,0x18(%rbx)
   340f9:	83 7b 20 00          	cmpl   $0x0,0x20(%rbx)
   340fd:	74 12                	je     34111 <read_attribute+0xcf1>
   340ff:	41 0f b6 01          	movzbl (%r9),%eax
   34103:	48 c1 e0 08          	shl    $0x8,%rax
   34107:	41 0f b6 69 01       	movzbl 0x1(%r9),%ebp
   3410c:	48 09 c5             	or     %rax,%rbp
   3410f:	eb 53                	jmp    34164 <read_attribute+0xd44>
   34111:	41 0f b6 41 01       	movzbl 0x1(%r9),%eax
   34116:	48 c1 e0 08          	shl    $0x8,%rax
   3411a:	41 0f b6 29          	movzbl (%r9),%ebp
   3411e:	48 09 c5             	or     %rax,%rbp
   34121:	eb 41                	jmp    34164 <read_attribute+0xd44>
   34123:	4c 8b 03             	mov    (%rbx),%r8
   34126:	44 8b 4b 10          	mov    0x10(%rbx),%r9d
   3412a:	44 2b 4b 08          	sub    0x8(%rbx),%r9d
   3412e:	4d 89 f7             	mov    %r14,%r15
   34131:	48 8d 15 8f ad 00 00 	lea    0xad8f(%rip),%rdx        # 3eec7 <elf_crc32.crc32_table+0x7a7>
   34138:	48 8d 0d fe ad 00 00 	lea    0xadfe(%rip),%rcx        # 3ef3d <elf_crc32.crc32_table+0x81d>
   3413f:	31 ed                	xor    %ebp,%ebp
   34141:	4c 8d 74 24 10       	lea    0x10(%rsp),%r14
   34146:	be c8 00 00 00       	mov    $0xc8,%esi
   3414b:	4c 89 f7             	mov    %r14,%rdi
   3414e:	31 c0                	xor    %eax,%eax
   34150:	e8 bb fe fc ff       	callq  4010 <snprintf@plt>
   34155:	48 8b 7b 30          	mov    0x30(%rbx),%rdi
   34159:	4c 89 f6             	mov    %r14,%rsi
   3415c:	31 d2                	xor    %edx,%edx
   3415e:	ff 53 28             	callq  *0x28(%rbx)
   34161:	4d 89 fe             	mov    %r15,%r14
   34164:	49 89 6e 08          	mov    %rbp,0x8(%r14)
   34168:	e9 61 01 00 00       	jmpq   342ce <read_attribute+0xeae>
   3416d:	4c 8b 03             	mov    (%rbx),%r8
   34170:	44 2b 4b 08          	sub    0x8(%rbx),%r9d
   34174:	48 8d 15 4c ad 00 00 	lea    0xad4c(%rip),%rdx        # 3eec7 <elf_crc32.crc32_table+0x7a7>
   3417b:	48 8d 0d 35 ad 00 00 	lea    0xad35(%rip),%rcx        # 3eeb7 <elf_crc32.crc32_table+0x797>
   34182:	31 ed                	xor    %ebp,%ebp
   34184:	4c 8d 74 24 10       	lea    0x10(%rsp),%r14
   34189:	be c8 00 00 00       	mov    $0xc8,%esi
   3418e:	4c 89 f7             	mov    %r14,%rdi
   34191:	31 c0                	xor    %eax,%eax
   34193:	e8 78 fe fc ff       	callq  4010 <snprintf@plt>
   34198:	48 8b 7b 30          	mov    0x30(%rbx),%rdi
   3419c:	4c 89 f6             	mov    %r14,%rsi
   3419f:	31 d2                	xor    %edx,%edx
   341a1:	ff 53 28             	callq  *0x28(%rbx)
   341a4:	c7 43 38 01 00 00 00 	movl   $0x1,0x38(%rbx)
   341ab:	89 ef                	mov    %ebp,%edi
   341ad:	48 89 de             	mov    %rbx,%rsi
   341b0:	8b 54 24 04          	mov    0x4(%rsp),%edx
   341b4:	44 89 e1             	mov    %r12d,%ecx
   341b7:	45 89 f8             	mov    %r15d,%r8d
   341ba:	4c 8b 4c 24 08       	mov    0x8(%rsp),%r9
   341bf:	ff b4 24 18 01 00 00 	pushq  0x118(%rsp)
   341c6:	ff b4 24 18 01 00 00 	pushq  0x118(%rsp)
   341cd:	e8 4e f2 ff ff       	callq  33420 <read_attribute>
   341d2:	48 83 c4 10          	add    $0x10,%rsp
   341d6:	89 c5                	mov    %eax,%ebp
   341d8:	e9 f6 00 00 00       	jmpq   342d3 <read_attribute+0xeb3>
   341dd:	41 0f b6 49 01       	movzbl 0x1(%r9),%ecx
   341e2:	48 c1 e1 08          	shl    $0x8,%rcx
   341e6:	41 0f b6 29          	movzbl (%r9),%ebp
   341ea:	48 09 cd             	or     %rcx,%rbp
   341ed:	48 29 e8             	sub    %rbp,%rax
   341f0:	0f 82 88 fc ff ff    	jb     33e7e <read_attribute+0xa5e>
   341f6:	e9 21 fd ff ff       	jmpq   33f1c <read_attribute+0xafc>
   341fb:	41 0f b6 49 03       	movzbl 0x3(%r9),%ecx
   34200:	48 c1 e1 18          	shl    $0x18,%rcx
   34204:	41 0f b6 51 02       	movzbl 0x2(%r9),%edx
   34209:	48 c1 e2 10          	shl    $0x10,%rdx
   3420d:	48 09 ca             	or     %rcx,%rdx
   34210:	41 0f b6 49 01       	movzbl 0x1(%r9),%ecx
   34215:	48 c1 e1 08          	shl    $0x8,%rcx
   34219:	48 09 d1             	or     %rdx,%rcx
   3421c:	41 0f b6 29          	movzbl (%r9),%ebp
   34220:	48 09 cd             	or     %rcx,%rbp
   34223:	48 29 e8             	sub    %rbp,%rax
   34226:	0f 83 f0 fc ff ff    	jae    33f1c <read_attribute+0xafc>
   3422c:	e9 4d fc ff ff       	jmpq   33e7e <read_attribute+0xa5e>
   34231:	49 8d 49 04          	lea    0x4(%r9),%rcx
   34235:	48 89 4b 10          	mov    %rcx,0x10(%rbx)
   34239:	48 83 c0 fc          	add    $0xfffffffffffffffc,%rax
   3423d:	48 89 43 18          	mov    %rax,0x18(%rbx)
   34241:	83 7b 20 00          	cmpl   $0x0,0x20(%rbx)
   34245:	0f 84 f5 00 00 00    	je     34340 <read_attribute+0xf20>
   3424b:	41 0f b6 01          	movzbl (%r9),%eax
   3424f:	48 c1 e0 18          	shl    $0x18,%rax
   34253:	41 0f b6 49 01       	movzbl 0x1(%r9),%ecx
   34258:	48 c1 e1 10          	shl    $0x10,%rcx
   3425c:	48 09 c1             	or     %rax,%rcx
   3425f:	41 0f b6 41 02       	movzbl 0x2(%r9),%eax
   34264:	48 c1 e0 08          	shl    $0x8,%rax
   34268:	48 09 c8             	or     %rcx,%rax
   3426b:	45 0f b6 61 03       	movzbl 0x3(%r9),%r12d
   34270:	49 09 c4             	or     %rax,%r12
   34273:	49 39 f4             	cmp    %rsi,%r12
   34276:	0f 82 ca f5 ff ff    	jb     33846 <read_attribute+0x426>
   3427c:	e9 16 fe ff ff       	jmpq   34097 <read_attribute+0xc77>
   34281:	4c 8b 03             	mov    (%rbx),%r8
   34284:	44 2b 4b 08          	sub    0x8(%rbx),%r9d
   34288:	48 8d 15 38 ac 00 00 	lea    0xac38(%rip),%rdx        # 3eec7 <elf_crc32.crc32_table+0x7a7>
   3428f:	48 8d 0d 21 ac 00 00 	lea    0xac21(%rip),%rcx        # 3eeb7 <elf_crc32.crc32_table+0x797>
   34296:	31 ed                	xor    %ebp,%ebp
   34298:	4c 8d 74 24 10       	lea    0x10(%rsp),%r14
   3429d:	be c8 00 00 00       	mov    $0xc8,%esi
   342a2:	4c 89 f7             	mov    %r14,%rdi
   342a5:	31 c0                	xor    %eax,%eax
   342a7:	e8 64 fd fc ff       	callq  4010 <snprintf@plt>
   342ac:	48 8b 7b 30          	mov    0x30(%rbx),%rdi
   342b0:	4c 89 f6             	mov    %r14,%rsi
   342b3:	31 d2                	xor    %edx,%edx
   342b5:	ff 53 28             	callq  *0x28(%rbx)
   342b8:	c7 43 38 01 00 00 00 	movl   $0x1,0x38(%rbx)
   342bf:	48 8b 43 18          	mov    0x18(%rbx),%rax
   342c3:	48 01 6b 10          	add    %rbp,0x10(%rbx)
   342c7:	48 29 e8             	sub    %rbp,%rax
   342ca:	48 89 43 18          	mov    %rax,0x18(%rbx)
   342ce:	bd 01 00 00 00       	mov    $0x1,%ebp
   342d3:	89 e8                	mov    %ebp,%eax
   342d5:	48 81 c4 d8 00 00 00 	add    $0xd8,%rsp
   342dc:	5b                   	pop    %rbx
   342dd:	41 5c                	pop    %r12
   342df:	41 5d                	pop    %r13
   342e1:	41 5e                	pop    %r14
   342e3:	41 5f                	pop    %r15
   342e5:	5d                   	pop    %rbp
   342e6:	c3                   	retq   
   342e7:	4c 8b 03             	mov    (%rbx),%r8
   342ea:	44 2b 4b 08          	sub    0x8(%rbx),%r9d
   342ee:	4d 89 f7             	mov    %r14,%r15
   342f1:	48 8d 15 cf ab 00 00 	lea    0xabcf(%rip),%rdx        # 3eec7 <elf_crc32.crc32_table+0x7a7>
   342f8:	48 8d 0d b8 ab 00 00 	lea    0xabb8(%rip),%rcx        # 3eeb7 <elf_crc32.crc32_table+0x797>
   342ff:	45 31 e4             	xor    %r12d,%r12d
   34302:	4c 8d 74 24 10       	lea    0x10(%rsp),%r14
   34307:	49 89 f5             	mov    %rsi,%r13
   3430a:	be c8 00 00 00       	mov    $0xc8,%esi
   3430f:	4c 89 f7             	mov    %r14,%rdi
   34312:	31 c0                	xor    %eax,%eax
   34314:	e8 f7 fc fc ff       	callq  4010 <snprintf@plt>
   34319:	48 8b 7b 30          	mov    0x30(%rbx),%rdi
   3431d:	4c 89 f6             	mov    %r14,%rsi
   34320:	31 d2                	xor    %edx,%edx
   34322:	ff 53 28             	callq  *0x28(%rbx)
   34325:	4c 89 ee             	mov    %r13,%rsi
   34328:	4d 89 fe             	mov    %r15,%r14
   3432b:	c7 43 38 01 00 00 00 	movl   $0x1,0x38(%rbx)
   34332:	49 39 f4             	cmp    %rsi,%r12
   34335:	0f 82 0b f5 ff ff    	jb     33846 <read_attribute+0x426>
   3433b:	e9 57 fd ff ff       	jmpq   34097 <read_attribute+0xc77>
   34340:	41 0f b6 41 03       	movzbl 0x3(%r9),%eax
   34345:	48 c1 e0 18          	shl    $0x18,%rax
   34349:	41 0f b6 49 02       	movzbl 0x2(%r9),%ecx
   3434e:	48 c1 e1 10          	shl    $0x10,%rcx
   34352:	48 09 c1             	or     %rax,%rcx
   34355:	41 0f b6 41 01       	movzbl 0x1(%r9),%eax
   3435a:	48 c1 e0 08          	shl    $0x8,%rax
   3435e:	48 09 c8             	or     %rcx,%rax
   34361:	45 0f b6 21          	movzbl (%r9),%r12d
   34365:	49 09 c4             	or     %rax,%r12
   34368:	49 39 f4             	cmp    %rsi,%r12
   3436b:	0f 82 d5 f4 ff ff    	jb     33846 <read_attribute+0x426>
   34371:	e9 21 fd ff ff       	jmpq   34097 <read_attribute+0xc77>
   34376:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   3437d:	00 00 00 

0000000000034380 <add_unit_ranges>:
   34380:	55                   	push   %rbp
   34381:	41 57                	push   %r15
   34383:	41 56                	push   %r14
   34385:	41 55                	push   %r13
   34387:	41 54                	push   %r12
   34389:	53                   	push   %rbx
   3438a:	48 81 ec 18 01 00 00 	sub    $0x118,%rsp
   34391:	48 89 74 24 48       	mov    %rsi,0x48(%rsp)
   34396:	48 89 7c 24 40       	mov    %rdi,0x40(%rsp)
   3439b:	48 8b bc 24 68 01 00 	mov    0x168(%rsp),%rdi
   343a2:	00 
   343a3:	48 8b ac 24 60 01 00 	mov    0x160(%rsp),%rbp
   343aa:	00 
   343ab:	48 8b 84 24 58 01 00 	mov    0x158(%rsp),%rax
   343b2:	00 
   343b3:	48 29 c8             	sub    %rcx,%rax
   343b6:	0f 86 99 06 00 00    	jbe    34a55 <add_unit_ranges+0x6d5>
   343bc:	4d 89 c4             	mov    %r8,%r12
   343bf:	48 89 d3             	mov    %rdx,%rbx
   343c2:	4c 8b b4 24 70 01 00 	mov    0x170(%rsp),%r14
   343c9:	00 
   343ca:	48 8b 94 24 50 01 00 	mov    0x150(%rsp),%rdx
   343d1:	00 
   343d2:	48 8d 35 83 9d 00 00 	lea    0x9d83(%rip),%rsi        # 3e15c <str.0+0x33c>
   343d9:	48 89 34 24          	mov    %rsi,(%rsp)
   343dd:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
   343e2:	48 01 d1             	add    %rdx,%rcx
   343e5:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
   343ea:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   343ef:	44 89 4c 24 20       	mov    %r9d,0x20(%rsp)
   343f4:	48 89 6c 24 28       	mov    %rbp,0x28(%rsp)
   343f9:	48 89 7c 24 30       	mov    %rdi,0x30(%rsp)
   343fe:	c7 44 24 38 00 00 00 	movl   $0x0,0x38(%rsp)
   34405:	00 
   34406:	4c 8d 3d cb a8 00 00 	lea    0xa8cb(%rip),%r15        # 3ecd8 <elf_crc32.crc32_table+0x5b8>
   3440d:	8b 43 20             	mov    0x20(%rbx),%eax
   34410:	83 c0 ff             	add    $0xffffffff,%eax
   34413:	83 f8 07             	cmp    $0x7,%eax
   34416:	76 22                	jbe    3443a <add_unit_ranges+0xba>
   34418:	e9 a3 00 00 00       	jmpq   344c0 <add_unit_ranges+0x140>
   3441d:	49 89 ec             	mov    %rbp,%r12
   34420:	83 7c 24 38 00       	cmpl   $0x0,0x38(%rsp)
   34425:	0f 85 39 06 00 00    	jne    34a64 <add_unit_ranges+0x6e4>
   3442b:	8b 43 20             	mov    0x20(%rbx),%eax
   3442e:	83 c0 ff             	add    $0xffffffff,%eax
   34431:	83 f8 07             	cmp    $0x7,%eax
   34434:	0f 87 86 00 00 00    	ja     344c0 <add_unit_ranges+0x140>
   3443a:	49 63 04 87          	movslq (%r15,%rax,4),%rax
   3443e:	4c 01 f8             	add    %r15,%rax
   34441:	ff e0                	jmpq   *%rax
   34443:	4c 8b 4c 24 10       	mov    0x10(%rsp),%r9
   34448:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   3444d:	48 85 c0             	test   %rax,%rax
   34450:	0f 84 13 03 00 00    	je     34769 <add_unit_ranges+0x3e9>
   34456:	49 8d 49 01          	lea    0x1(%r9),%rcx
   3445a:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
   3445f:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
   34463:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   34468:	41 8a 29             	mov    (%r9),%bpl
   3446b:	e9 3c 03 00 00       	jmpq   347ac <add_unit_ranges+0x42c>
   34470:	4c 8b 4c 24 10       	mov    0x10(%rsp),%r9
   34475:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   3447a:	48 83 f8 01          	cmp    $0x1,%rax
   3447e:	0f 86 90 00 00 00    	jbe    34514 <add_unit_ranges+0x194>
   34484:	49 8d 49 02          	lea    0x2(%r9),%rcx
   34488:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
   3448d:	48 83 c0 fe          	add    $0xfffffffffffffffe,%rax
   34491:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   34496:	83 7c 24 20 00       	cmpl   $0x0,0x20(%rsp)
   3449b:	0f 84 42 03 00 00    	je     347e3 <add_unit_ranges+0x463>
   344a1:	41 0f b6 01          	movzbl (%r9),%eax
   344a5:	48 c1 e0 08          	shl    $0x8,%rax
   344a9:	45 0f b6 69 01       	movzbl 0x1(%r9),%r13d
   344ae:	e9 6e 03 00 00       	jmpq   34821 <add_unit_ranges+0x4a1>
   344b3:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   344ba:	00 00 00 
   344bd:	0f 1f 00             	nopl   (%rax)
   344c0:	4c 8b 04 24          	mov    (%rsp),%r8
   344c4:	44 8b 4c 24 10       	mov    0x10(%rsp),%r9d
   344c9:	44 2b 4c 24 08       	sub    0x8(%rsp),%r9d
   344ce:	be c8 00 00 00       	mov    $0xc8,%esi
   344d3:	48 8d 6c 24 50       	lea    0x50(%rsp),%rbp
   344d8:	48 89 ef             	mov    %rbp,%rdi
   344db:	48 8d 15 e5 a9 00 00 	lea    0xa9e5(%rip),%rdx        # 3eec7 <elf_crc32.crc32_table+0x7a7>
   344e2:	48 8d 0d 54 aa 00 00 	lea    0xaa54(%rip),%rcx        # 3ef3d <elf_crc32.crc32_table+0x81d>
   344e9:	31 c0                	xor    %eax,%eax
   344eb:	e8 20 fb fc ff       	callq  4010 <snprintf@plt>
   344f0:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
   344f5:	48 89 ee             	mov    %rbp,%rsi
   344f8:	31 d2                	xor    %edx,%edx
   344fa:	ff 54 24 28          	callq  *0x28(%rsp)
   344fe:	eb 55                	jmp    34555 <add_unit_ranges+0x1d5>
   34500:	4c 8b 4c 24 10       	mov    0x10(%rsp),%r9
   34505:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   3450a:	48 83 f8 03          	cmp    $0x3,%rax
   3450e:	0f 87 b8 01 00 00    	ja     346cc <add_unit_ranges+0x34c>
   34514:	4c 8b 04 24          	mov    (%rsp),%r8
   34518:	44 2b 4c 24 08       	sub    0x8(%rsp),%r9d
   3451d:	be c8 00 00 00       	mov    $0xc8,%esi
   34522:	48 8d 6c 24 50       	lea    0x50(%rsp),%rbp
   34527:	48 89 ef             	mov    %rbp,%rdi
   3452a:	48 8d 15 96 a9 00 00 	lea    0xa996(%rip),%rdx        # 3eec7 <elf_crc32.crc32_table+0x7a7>
   34531:	48 8d 0d 7f a9 00 00 	lea    0xa97f(%rip),%rcx        # 3eeb7 <elf_crc32.crc32_table+0x797>
   34538:	31 c0                	xor    %eax,%eax
   3453a:	e8 d1 fa fc ff       	callq  4010 <snprintf@plt>
   3453f:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
   34544:	48 89 ee             	mov    %rbp,%rsi
   34547:	31 d2                	xor    %edx,%edx
   34549:	ff 54 24 28          	callq  *0x28(%rsp)
   3454d:	c7 44 24 38 01 00 00 	movl   $0x1,0x38(%rsp)
   34554:	00 
   34555:	45 31 ed             	xor    %r13d,%r13d
   34558:	8b 43 20             	mov    0x20(%rbx),%eax
   3455b:	83 c0 ff             	add    $0xffffffff,%eax
   3455e:	83 f8 07             	cmp    $0x7,%eax
   34561:	0f 87 d9 02 00 00    	ja     34840 <add_unit_ranges+0x4c0>
   34567:	48 8d 0d 8a a7 00 00 	lea    0xa78a(%rip),%rcx        # 3ecf8 <elf_crc32.crc32_table+0x5d8>
   3456e:	48 63 04 81          	movslq (%rcx,%rax,4),%rax
   34572:	48 01 c8             	add    %rcx,%rax
   34575:	ff e0                	jmpq   *%rax
   34577:	4c 8b 4c 24 10       	mov    0x10(%rsp),%r9
   3457c:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   34581:	48 85 c0             	test   %rax,%rax
   34584:	0f 84 37 02 00 00    	je     347c1 <add_unit_ranges+0x441>
   3458a:	49 8d 49 01          	lea    0x1(%r9),%rcx
   3458e:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
   34593:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
   34597:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   3459c:	41 8a 29             	mov    (%r9),%bpl
   3459f:	40 0f b6 ed          	movzbl %bpl,%ebp
   345a3:	48 89 e8             	mov    %rbp,%rax
   345a6:	4c 09 e8             	or     %r13,%rax
   345a9:	0f 85 dd 02 00 00    	jne    3488c <add_unit_ranges+0x50c>
   345af:	e9 95 04 00 00       	jmpq   34a49 <add_unit_ranges+0x6c9>
   345b4:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   345bb:	00 00 00 
   345be:	66 90                	xchg   %ax,%ax
   345c0:	48 89 e7             	mov    %rsp,%rdi
   345c3:	e8 08 e7 ff ff       	callq  32cd0 <read_uint64>
   345c8:	49 89 c5             	mov    %rax,%r13
   345cb:	8b 43 20             	mov    0x20(%rbx),%eax
   345ce:	83 c0 ff             	add    $0xffffffff,%eax
   345d1:	83 f8 07             	cmp    $0x7,%eax
   345d4:	76 91                	jbe    34567 <add_unit_ranges+0x1e7>
   345d6:	e9 65 02 00 00       	jmpq   34840 <add_unit_ranges+0x4c0>
   345db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   345e0:	4c 8b 4c 24 10       	mov    0x10(%rsp),%r9
   345e5:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   345ea:	48 83 f8 01          	cmp    $0x1,%rax
   345ee:	76 54                	jbe    34644 <add_unit_ranges+0x2c4>
   345f0:	49 8d 49 02          	lea    0x2(%r9),%rcx
   345f4:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
   345f9:	48 83 c0 fe          	add    $0xfffffffffffffffe,%rax
   345fd:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   34602:	83 7c 24 20 00       	cmpl   $0x0,0x20(%rsp)
   34607:	0f 84 e1 01 00 00    	je     347ee <add_unit_ranges+0x46e>
   3460d:	41 0f b6 01          	movzbl (%r9),%eax
   34611:	48 c1 e0 08          	shl    $0x8,%rax
   34615:	41 0f b6 69 01       	movzbl 0x1(%r9),%ebp
   3461a:	48 09 c5             	or     %rax,%rbp
   3461d:	48 89 e8             	mov    %rbp,%rax
   34620:	4c 09 e8             	or     %r13,%rax
   34623:	0f 85 63 02 00 00    	jne    3488c <add_unit_ranges+0x50c>
   34629:	e9 1b 04 00 00       	jmpq   34a49 <add_unit_ranges+0x6c9>
   3462e:	66 90                	xchg   %ax,%ax
   34630:	4c 8b 4c 24 10       	mov    0x10(%rsp),%r9
   34635:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   3463a:	48 83 f8 03          	cmp    $0x3,%rax
   3463e:	0f 87 cf 00 00 00    	ja     34713 <add_unit_ranges+0x393>
   34644:	83 7c 24 38 00       	cmpl   $0x0,0x38(%rsp)
   34649:	0f 85 2f 02 00 00    	jne    3487e <add_unit_ranges+0x4fe>
   3464f:	4c 8b 04 24          	mov    (%rsp),%r8
   34653:	44 2b 4c 24 08       	sub    0x8(%rsp),%r9d
   34658:	be c8 00 00 00       	mov    $0xc8,%esi
   3465d:	48 8d 6c 24 50       	lea    0x50(%rsp),%rbp
   34662:	48 89 ef             	mov    %rbp,%rdi
   34665:	48 8d 15 5b a8 00 00 	lea    0xa85b(%rip),%rdx        # 3eec7 <elf_crc32.crc32_table+0x7a7>
   3466c:	48 8d 0d 44 a8 00 00 	lea    0xa844(%rip),%rcx        # 3eeb7 <elf_crc32.crc32_table+0x797>
   34673:	31 c0                	xor    %eax,%eax
   34675:	e8 96 f9 fc ff       	callq  4010 <snprintf@plt>
   3467a:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
   3467f:	48 89 ee             	mov    %rbp,%rsi
   34682:	31 d2                	xor    %edx,%edx
   34684:	ff 54 24 28          	callq  *0x28(%rsp)
   34688:	c7 44 24 38 01 00 00 	movl   $0x1,0x38(%rsp)
   3468f:	00 
   34690:	31 ed                	xor    %ebp,%ebp
   34692:	48 89 e8             	mov    %rbp,%rax
   34695:	4c 09 e8             	or     %r13,%rax
   34698:	0f 85 ee 01 00 00    	jne    3488c <add_unit_ranges+0x50c>
   3469e:	e9 a6 03 00 00       	jmpq   34a49 <add_unit_ranges+0x6c9>
   346a3:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   346aa:	00 00 00 
   346ad:	0f 1f 00             	nopl   (%rax)
   346b0:	48 89 e7             	mov    %rsp,%rdi
   346b3:	e8 18 e6 ff ff       	callq  32cd0 <read_uint64>
   346b8:	48 89 c5             	mov    %rax,%rbp
   346bb:	48 89 e8             	mov    %rbp,%rax
   346be:	4c 09 e8             	or     %r13,%rax
   346c1:	0f 85 c5 01 00 00    	jne    3488c <add_unit_ranges+0x50c>
   346c7:	e9 7d 03 00 00       	jmpq   34a49 <add_unit_ranges+0x6c9>
   346cc:	49 8d 49 04          	lea    0x4(%r9),%rcx
   346d0:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
   346d5:	48 83 c0 fc          	add    $0xfffffffffffffffc,%rax
   346d9:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   346de:	83 7c 24 20 00       	cmpl   $0x0,0x20(%rsp)
   346e3:	0f 84 13 01 00 00    	je     347fc <add_unit_ranges+0x47c>
   346e9:	41 0f b6 01          	movzbl (%r9),%eax
   346ed:	48 c1 e0 18          	shl    $0x18,%rax
   346f1:	41 0f b6 49 01       	movzbl 0x1(%r9),%ecx
   346f6:	48 c1 e1 10          	shl    $0x10,%rcx
   346fa:	48 09 c1             	or     %rax,%rcx
   346fd:	41 0f b6 41 02       	movzbl 0x2(%r9),%eax
   34702:	48 c1 e0 08          	shl    $0x8,%rax
   34706:	48 09 c8             	or     %rcx,%rax
   34709:	45 0f b6 69 03       	movzbl 0x3(%r9),%r13d
   3470e:	e9 0e 01 00 00       	jmpq   34821 <add_unit_ranges+0x4a1>
   34713:	49 8d 49 04          	lea    0x4(%r9),%rcx
   34717:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
   3471c:	48 83 c0 fc          	add    $0xfffffffffffffffc,%rax
   34720:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   34725:	83 7c 24 20 00       	cmpl   $0x0,0x20(%rsp)
   3472a:	0f 84 8e 02 00 00    	je     349be <add_unit_ranges+0x63e>
   34730:	41 0f b6 01          	movzbl (%r9),%eax
   34734:	48 c1 e0 18          	shl    $0x18,%rax
   34738:	41 0f b6 49 01       	movzbl 0x1(%r9),%ecx
   3473d:	48 c1 e1 10          	shl    $0x10,%rcx
   34741:	48 09 c1             	or     %rax,%rcx
   34744:	41 0f b6 41 02       	movzbl 0x2(%r9),%eax
   34749:	48 c1 e0 08          	shl    $0x8,%rax
   3474d:	48 09 c8             	or     %rcx,%rax
   34750:	41 0f b6 69 03       	movzbl 0x3(%r9),%ebp
   34755:	48 09 c5             	or     %rax,%rbp
   34758:	48 89 e8             	mov    %rbp,%rax
   3475b:	4c 09 e8             	or     %r13,%rax
   3475e:	0f 85 28 01 00 00    	jne    3488c <add_unit_ranges+0x50c>
   34764:	e9 e0 02 00 00       	jmpq   34a49 <add_unit_ranges+0x6c9>
   34769:	4c 8b 04 24          	mov    (%rsp),%r8
   3476d:	44 2b 4c 24 08       	sub    0x8(%rsp),%r9d
   34772:	31 ed                	xor    %ebp,%ebp
   34774:	be c8 00 00 00       	mov    $0xc8,%esi
   34779:	4c 8d 6c 24 50       	lea    0x50(%rsp),%r13
   3477e:	4c 89 ef             	mov    %r13,%rdi
   34781:	48 8d 15 3f a7 00 00 	lea    0xa73f(%rip),%rdx        # 3eec7 <elf_crc32.crc32_table+0x7a7>
   34788:	48 8d 0d 28 a7 00 00 	lea    0xa728(%rip),%rcx        # 3eeb7 <elf_crc32.crc32_table+0x797>
   3478f:	31 c0                	xor    %eax,%eax
   34791:	e8 7a f8 fc ff       	callq  4010 <snprintf@plt>
   34796:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
   3479b:	4c 89 ee             	mov    %r13,%rsi
   3479e:	31 d2                	xor    %edx,%edx
   347a0:	ff 54 24 28          	callq  *0x28(%rsp)
   347a4:	c7 44 24 38 01 00 00 	movl   $0x1,0x38(%rsp)
   347ab:	00 
   347ac:	44 0f b6 ed          	movzbl %bpl,%r13d
   347b0:	8b 43 20             	mov    0x20(%rbx),%eax
   347b3:	83 c0 ff             	add    $0xffffffff,%eax
   347b6:	83 f8 07             	cmp    $0x7,%eax
   347b9:	0f 86 a8 fd ff ff    	jbe    34567 <add_unit_ranges+0x1e7>
   347bf:	eb 7f                	jmp    34840 <add_unit_ranges+0x4c0>
   347c1:	83 7c 24 38 00       	cmpl   $0x0,0x38(%rsp)
   347c6:	0f 84 28 02 00 00    	je     349f4 <add_unit_ranges+0x674>
   347cc:	31 ed                	xor    %ebp,%ebp
   347ce:	40 0f b6 ed          	movzbl %bpl,%ebp
   347d2:	48 89 e8             	mov    %rbp,%rax
   347d5:	4c 09 e8             	or     %r13,%rax
   347d8:	0f 85 ae 00 00 00    	jne    3488c <add_unit_ranges+0x50c>
   347de:	e9 66 02 00 00       	jmpq   34a49 <add_unit_ranges+0x6c9>
   347e3:	41 0f b6 41 01       	movzbl 0x1(%r9),%eax
   347e8:	48 c1 e0 08          	shl    $0x8,%rax
   347ec:	eb 2f                	jmp    3481d <add_unit_ranges+0x49d>
   347ee:	41 0f b6 41 01       	movzbl 0x1(%r9),%eax
   347f3:	48 c1 e0 08          	shl    $0x8,%rax
   347f7:	e9 e3 01 00 00       	jmpq   349df <add_unit_ranges+0x65f>
   347fc:	41 0f b6 41 03       	movzbl 0x3(%r9),%eax
   34801:	48 c1 e0 18          	shl    $0x18,%rax
   34805:	41 0f b6 49 02       	movzbl 0x2(%r9),%ecx
   3480a:	48 c1 e1 10          	shl    $0x10,%rcx
   3480e:	48 09 c1             	or     %rax,%rcx
   34811:	41 0f b6 41 01       	movzbl 0x1(%r9),%eax
   34816:	48 c1 e0 08          	shl    $0x8,%rax
   3481a:	48 09 c8             	or     %rcx,%rax
   3481d:	45 0f b6 29          	movzbl (%r9),%r13d
   34821:	49 09 c5             	or     %rax,%r13
   34824:	8b 43 20             	mov    0x20(%rbx),%eax
   34827:	83 c0 ff             	add    $0xffffffff,%eax
   3482a:	83 f8 07             	cmp    $0x7,%eax
   3482d:	0f 86 34 fd ff ff    	jbe    34567 <add_unit_ranges+0x1e7>
   34833:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   3483a:	00 00 00 
   3483d:	0f 1f 00             	nopl   (%rax)
   34840:	4c 8b 04 24          	mov    (%rsp),%r8
   34844:	44 8b 4c 24 10       	mov    0x10(%rsp),%r9d
   34849:	44 2b 4c 24 08       	sub    0x8(%rsp),%r9d
   3484e:	be c8 00 00 00       	mov    $0xc8,%esi
   34853:	48 8d 6c 24 50       	lea    0x50(%rsp),%rbp
   34858:	48 89 ef             	mov    %rbp,%rdi
   3485b:	48 8d 15 65 a6 00 00 	lea    0xa665(%rip),%rdx        # 3eec7 <elf_crc32.crc32_table+0x7a7>
   34862:	48 8d 0d d4 a6 00 00 	lea    0xa6d4(%rip),%rcx        # 3ef3d <elf_crc32.crc32_table+0x81d>
   34869:	31 c0                	xor    %eax,%eax
   3486b:	e8 a0 f7 fc ff       	callq  4010 <snprintf@plt>
   34870:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
   34875:	48 89 ee             	mov    %rbp,%rsi
   34878:	31 d2                	xor    %edx,%edx
   3487a:	ff 54 24 28          	callq  *0x28(%rsp)
   3487e:	31 ed                	xor    %ebp,%ebp
   34880:	48 89 e8             	mov    %rbp,%rax
   34883:	4c 09 e8             	or     %r13,%rax
   34886:	0f 84 bd 01 00 00    	je     34a49 <add_unit_ranges+0x6c9>
   3488c:	8b 43 20             	mov    0x20(%rbx),%eax
   3488f:	83 c0 ff             	add    $0xffffffff,%eax
   34892:	83 f8 07             	cmp    $0x7,%eax
   34895:	77 69                	ja     34900 <add_unit_ranges+0x580>
   34897:	48 8d 0d 7a a4 00 00 	lea    0xa47a(%rip),%rcx        # 3ed18 <elf_crc32.crc32_table+0x5f8>
   3489e:	48 63 04 81          	movslq (%rcx,%rax,4),%rax
   348a2:	48 01 c8             	add    %rcx,%rax
   348a5:	ff e0                	jmpq   *%rax
   348a7:	49 81 fd ff 00 00 00 	cmp    $0xff,%r13
   348ae:	75 50                	jne    34900 <add_unit_ranges+0x580>
   348b0:	49 89 ec             	mov    %rbp,%r12
   348b3:	83 7c 24 38 00       	cmpl   $0x0,0x38(%rsp)
   348b8:	0f 84 6d fb ff ff    	je     3442b <add_unit_ranges+0xab>
   348be:	e9 a1 01 00 00       	jmpq   34a64 <add_unit_ranges+0x6e4>
   348c3:	49 81 fd ff ff 00 00 	cmp    $0xffff,%r13
   348ca:	75 34                	jne    34900 <add_unit_ranges+0x580>
   348cc:	49 89 ec             	mov    %rbp,%r12
   348cf:	83 7c 24 38 00       	cmpl   $0x0,0x38(%rsp)
   348d4:	0f 84 51 fb ff ff    	je     3442b <add_unit_ranges+0xab>
   348da:	e9 85 01 00 00       	jmpq   34a64 <add_unit_ranges+0x6e4>
   348df:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   348e4:	49 39 c5             	cmp    %rax,%r13
   348e7:	75 17                	jne    34900 <add_unit_ranges+0x580>
   348e9:	e9 2f fb ff ff       	jmpq   3441d <add_unit_ranges+0x9d>
   348ee:	49 83 fd ff          	cmp    $0xffffffffffffffff,%r13
   348f2:	0f 84 8f 00 00 00    	je     34987 <add_unit_ranges+0x607>
   348f8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   348ff:	00 
   34900:	48 8b 44 24 48       	mov    0x48(%rsp),%rax
   34905:	4c 01 e0             	add    %r12,%rax
   34908:	49 01 c5             	add    %rax,%r13
   3490b:	48 01 c5             	add    %rax,%rbp
   3490e:	49 8b 4e 18          	mov    0x18(%r14),%rcx
   34912:	48 85 c9             	test   %rcx,%rcx
   34915:	74 25                	je     3493c <add_unit_ranges+0x5bc>
   34917:	49 8b 06             	mov    (%r14),%rax
   3491a:	48 83 c1 ff          	add    $0xffffffffffffffff,%rcx
   3491e:	48 8d 0c 49          	lea    (%rcx,%rcx,2),%rcx
   34922:	48 8b 54 c8 08       	mov    0x8(%rax,%rcx,8),%rdx
   34927:	49 39 d5             	cmp    %rdx,%r13
   3492a:	74 09                	je     34935 <add_unit_ranges+0x5b5>
   3492c:	48 8d 72 01          	lea    0x1(%rdx),%rsi
   34930:	49 39 f5             	cmp    %rsi,%r13
   34933:	75 07                	jne    3493c <add_unit_ranges+0x5bc>
   34935:	48 39 5c c8 10       	cmp    %rbx,0x10(%rax,%rcx,8)
   3493a:	74 5e                	je     3499a <add_unit_ranges+0x61a>
   3493c:	be 18 00 00 00       	mov    $0x18,%esi
   34941:	48 8b 7c 24 40       	mov    0x40(%rsp),%rdi
   34946:	48 8b 94 24 60 01 00 	mov    0x160(%rsp),%rdx
   3494d:	00 
   3494e:	48 8b 8c 24 68 01 00 	mov    0x168(%rsp),%rcx
   34955:	00 
   34956:	4d 89 f0             	mov    %r14,%r8
   34959:	e8 32 c5 ff ff       	callq  30e90 <__rdos_backtrace_vector_grow>
   3495e:	48 85 c0             	test   %rax,%rax
   34961:	0f 84 fd 00 00 00    	je     34a64 <add_unit_ranges+0x6e4>
   34967:	4c 89 28             	mov    %r13,(%rax)
   3496a:	48 89 68 08          	mov    %rbp,0x8(%rax)
   3496e:	48 89 58 10          	mov    %rbx,0x10(%rax)
   34972:	49 83 46 18 01       	addq   $0x1,0x18(%r14)
   34977:	83 7c 24 38 00       	cmpl   $0x0,0x38(%rsp)
   3497c:	0f 84 a9 fa ff ff    	je     3442b <add_unit_ranges+0xab>
   34982:	e9 dd 00 00 00       	jmpq   34a64 <add_unit_ranges+0x6e4>
   34987:	49 89 ec             	mov    %rbp,%r12
   3498a:	83 7c 24 38 00       	cmpl   $0x0,0x38(%rsp)
   3498f:	0f 84 96 fa ff ff    	je     3442b <add_unit_ranges+0xab>
   34995:	e9 ca 00 00 00       	jmpq   34a64 <add_unit_ranges+0x6e4>
   3499a:	48 39 d5             	cmp    %rdx,%rbp
   3499d:	0f 86 7d fa ff ff    	jbe    34420 <add_unit_ranges+0xa0>
   349a3:	48 8d 04 c8          	lea    (%rax,%rcx,8),%rax
   349a7:	48 83 c0 08          	add    $0x8,%rax
   349ab:	48 89 28             	mov    %rbp,(%rax)
   349ae:	83 7c 24 38 00       	cmpl   $0x0,0x38(%rsp)
   349b3:	0f 84 72 fa ff ff    	je     3442b <add_unit_ranges+0xab>
   349b9:	e9 a6 00 00 00       	jmpq   34a64 <add_unit_ranges+0x6e4>
   349be:	41 0f b6 41 03       	movzbl 0x3(%r9),%eax
   349c3:	48 c1 e0 18          	shl    $0x18,%rax
   349c7:	41 0f b6 49 02       	movzbl 0x2(%r9),%ecx
   349cc:	48 c1 e1 10          	shl    $0x10,%rcx
   349d0:	48 09 c1             	or     %rax,%rcx
   349d3:	41 0f b6 41 01       	movzbl 0x1(%r9),%eax
   349d8:	48 c1 e0 08          	shl    $0x8,%rax
   349dc:	48 09 c8             	or     %rcx,%rax
   349df:	41 0f b6 29          	movzbl (%r9),%ebp
   349e3:	48 09 c5             	or     %rax,%rbp
   349e6:	48 89 e8             	mov    %rbp,%rax
   349e9:	4c 09 e8             	or     %r13,%rax
   349ec:	0f 85 9a fe ff ff    	jne    3488c <add_unit_ranges+0x50c>
   349f2:	eb 55                	jmp    34a49 <add_unit_ranges+0x6c9>
   349f4:	4c 8b 04 24          	mov    (%rsp),%r8
   349f8:	44 2b 4c 24 08       	sub    0x8(%rsp),%r9d
   349fd:	31 ed                	xor    %ebp,%ebp
   349ff:	be c8 00 00 00       	mov    $0xc8,%esi
   34a04:	48 8d 44 24 50       	lea    0x50(%rsp),%rax
   34a09:	48 89 c7             	mov    %rax,%rdi
   34a0c:	48 8d 15 b4 a4 00 00 	lea    0xa4b4(%rip),%rdx        # 3eec7 <elf_crc32.crc32_table+0x7a7>
   34a13:	48 8d 0d 9d a4 00 00 	lea    0xa49d(%rip),%rcx        # 3eeb7 <elf_crc32.crc32_table+0x797>
   34a1a:	31 c0                	xor    %eax,%eax
   34a1c:	e8 ef f5 fc ff       	callq  4010 <snprintf@plt>
   34a21:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
   34a26:	48 8d 74 24 50       	lea    0x50(%rsp),%rsi
   34a2b:	31 d2                	xor    %edx,%edx
   34a2d:	ff 54 24 28          	callq  *0x28(%rsp)
   34a31:	c7 44 24 38 01 00 00 	movl   $0x1,0x38(%rsp)
   34a38:	00 
   34a39:	40 0f b6 ed          	movzbl %bpl,%ebp
   34a3d:	48 89 e8             	mov    %rbp,%rax
   34a40:	4c 09 e8             	or     %r13,%rax
   34a43:	0f 85 43 fe ff ff    	jne    3488c <add_unit_ranges+0x50c>
   34a49:	31 db                	xor    %ebx,%ebx
   34a4b:	83 7c 24 38 00       	cmpl   $0x0,0x38(%rsp)
   34a50:	0f 94 c3             	sete   %bl
   34a53:	eb 11                	jmp    34a66 <add_unit_ranges+0x6e6>
   34a55:	48 8d 35 7b a6 00 00 	lea    0xa67b(%rip),%rsi        # 3f0d7 <elf_crc32.crc32_table+0x9b7>
   34a5c:	31 db                	xor    %ebx,%ebx
   34a5e:	31 d2                	xor    %edx,%edx
   34a60:	ff d5                	callq  *%rbp
   34a62:	eb 02                	jmp    34a66 <add_unit_ranges+0x6e6>
   34a64:	31 db                	xor    %ebx,%ebx
   34a66:	89 d8                	mov    %ebx,%eax
   34a68:	48 81 c4 18 01 00 00 	add    $0x118,%rsp
   34a6f:	5b                   	pop    %rbx
   34a70:	41 5c                	pop    %r12
   34a72:	41 5d                	pop    %r13
   34a74:	41 5e                	pop    %r14
   34a76:	41 5f                	pop    %r15
   34a78:	5d                   	pop    %rbp
   34a79:	c3                   	retq   
   34a7a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000034a80 <dwarf_lookup_pc>:
   34a80:	55                   	push   %rbp
   34a81:	41 57                	push   %r15
   34a83:	41 56                	push   %r14
   34a85:	41 55                	push   %r13
   34a87:	41 54                	push   %r12
   34a89:	53                   	push   %rbx
   34a8a:	48 81 ec f8 00 00 00 	sub    $0xf8,%rsp
   34a91:	4d 89 cd             	mov    %r9,%r13
   34a94:	4c 89 44 24 18       	mov    %r8,0x18(%rsp)
   34a99:	49 89 cf             	mov    %rcx,%r15
   34a9c:	48 89 f5             	mov    %rsi,%rbp
   34a9f:	49 89 fc             	mov    %rdi,%r12
   34aa2:	4c 8b b4 24 30 01 00 	mov    0x130(%rsp),%r14
   34aa9:	00 
   34aaa:	48 89 14 24          	mov    %rdx,(%rsp)
   34aae:	41 c7 06 01 00 00 00 	movl   $0x1,(%r14)
   34ab5:	48 8b 76 10          	mov    0x10(%rsi),%rsi
   34ab9:	48 8b 55 18          	mov    0x18(%rbp),%rdx
   34abd:	4c 8d 05 2c 06 00 00 	lea    0x62c(%rip),%r8        # 350f0 <unit_addrs_search>
   34ac4:	48 89 e7             	mov    %rsp,%rdi
   34ac7:	b9 18 00 00 00       	mov    $0x18,%ecx
   34acc:	e8 bf f5 fc ff       	callq  4090 <bsearch@plt>
   34ad1:	48 85 c0             	test   %rax,%rax
   34ad4:	0f 84 1c 02 00 00    	je     34cf6 <dwarf_lookup_pc+0x276>
   34ada:	48 89 c3             	mov    %rax,%rbx
   34add:	4c 89 64 24 10       	mov    %r12,0x10(%rsp)
   34ae2:	48 8b 45 10          	mov    0x10(%rbp),%rax
   34ae6:	48 8b 4d 18          	mov    0x18(%rbp),%rcx
   34aea:	48 89 da             	mov    %rbx,%rdx
   34aed:	48 29 c2             	sub    %rax,%rdx
   34af0:	48 c1 fa 03          	sar    $0x3,%rdx
   34af4:	49 b8 ab aa aa aa aa 	movabs $0xaaaaaaaaaaaaaaab,%r8
   34afb:	aa aa aa 
   34afe:	49 0f af d0          	imul   %r8,%rdx
   34b02:	48 83 c2 01          	add    $0x1,%rdx
   34b06:	48 39 ca             	cmp    %rcx,%rdx
   34b09:	73 46                	jae    34b51 <dwarf_lookup_pc+0xd1>
   34b0b:	48 8b 34 24          	mov    (%rsp),%rsi
   34b0f:	48 89 da             	mov    %rbx,%rdx
   34b12:	48 83 c2 18          	add    $0x18,%rdx
   34b16:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   34b1d:	00 00 00 
   34b20:	48 3b 32             	cmp    (%rdx),%rsi
   34b23:	72 2c                	jb     34b51 <dwarf_lookup_pc+0xd1>
   34b25:	48 3b 72 08          	cmp    0x8(%rdx),%rsi
   34b29:	73 1f                	jae    34b4a <dwarf_lookup_pc+0xca>
   34b2b:	48 83 c3 18          	add    $0x18,%rbx
   34b2f:	48 89 d7             	mov    %rdx,%rdi
   34b32:	48 29 c7             	sub    %rax,%rdi
   34b35:	48 c1 ff 03          	sar    $0x3,%rdi
   34b39:	49 0f af f8          	imul   %r8,%rdi
   34b3d:	48 83 c7 01          	add    $0x1,%rdi
   34b41:	48 83 c2 18          	add    $0x18,%rdx
   34b45:	48 39 cf             	cmp    %rcx,%rdi
   34b48:	72 d6                	jb     34b20 <dwarf_lookup_pc+0xa0>
   34b4a:	48 83 c2 e8          	add    $0xffffffffffffffe8,%rdx
   34b4e:	48 89 d3             	mov    %rdx,%rbx
   34b51:	48 89 6c 24 30       	mov    %rbp,0x30(%rsp)
   34b56:	4c 8b 63 10          	mov    0x10(%rbx),%r12
   34b5a:	49 8b 74 24 58       	mov    0x58(%r12),%rsi
   34b5f:	48 89 74 24 38       	mov    %rsi,0x38(%rsp)
   34b64:	48 39 c3             	cmp    %rax,%rbx
   34b67:	0f 86 97 01 00 00    	jbe    34d04 <dwarf_lookup_pc+0x284>
   34b6d:	48 8b 14 24          	mov    (%rsp),%rdx
   34b71:	48 3b 53 e8          	cmp    -0x18(%rbx),%rdx
   34b75:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
   34b7a:	0f 82 89 01 00 00    	jb     34d09 <dwarf_lookup_pc+0x289>
   34b80:	48 89 d9             	mov    %rbx,%rcx
   34b83:	48 3b 53 f0          	cmp    -0x10(%rbx),%rdx
   34b87:	73 31                	jae    34bba <dwarf_lookup_pc+0x13a>
   34b89:	83 7f 08 00          	cmpl   $0x0,0x8(%rdi)
   34b8d:	0f 85 e2 03 00 00    	jne    34f75 <dwarf_lookup_pc+0x4f5>
   34b93:	48 83 fe ff          	cmp    $0xffffffffffffffff,%rsi
   34b97:	75 21                	jne    34bba <dwarf_lookup_pc+0x13a>
   34b99:	48 8d 59 e8          	lea    -0x18(%rcx),%rbx
   34b9d:	4c 8b 61 f8          	mov    -0x8(%rcx),%r12
   34ba1:	49 8b 74 24 58       	mov    0x58(%r12),%rsi
   34ba6:	48 89 74 24 38       	mov    %rsi,0x38(%rsp)
   34bab:	48 39 c3             	cmp    %rax,%rbx
   34bae:	76 06                	jbe    34bb6 <dwarf_lookup_pc+0x136>
   34bb0:	48 3b 51 d0          	cmp    -0x30(%rcx),%rdx
   34bb4:	73 ca                	jae    34b80 <dwarf_lookup_pc+0x100>
   34bb6:	48 83 c1 e8          	add    $0xffffffffffffffe8,%rcx
   34bba:	48 89 cb             	mov    %rcx,%rbx
   34bbd:	83 7f 08 00          	cmpl   $0x0,0x8(%rdi)
   34bc1:	0f 85 ae 03 00 00    	jne    34f75 <dwarf_lookup_pc+0x4f5>
   34bc7:	31 c0                	xor    %eax,%eax
   34bc9:	48 85 f6             	test   %rsi,%rsi
   34bcc:	0f 84 46 01 00 00    	je     34d18 <dwarf_lookup_pc+0x298>
   34bd2:	48 83 fe ff          	cmp    $0xffffffffffffffff,%rsi
   34bd6:	0f 84 94 04 00 00    	je     35070 <dwarf_lookup_pc+0x5f0>
   34bdc:	48 8b 43 10          	mov    0x10(%rbx),%rax
   34be0:	48 8b 50 60          	mov    0x60(%rax),%rdx
   34be4:	4c 8d 05 95 29 00 00 	lea    0x2995(%rip),%r8        # 37580 <line_search>
   34beb:	48 89 e7             	mov    %rsp,%rdi
   34bee:	b9 18 00 00 00       	mov    $0x18,%ecx
   34bf3:	e8 98 f4 fc ff       	callq  4090 <bsearch@plt>
   34bf8:	48 89 c5             	mov    %rax,%rbp
   34bfb:	48 8b 43 10          	mov    0x10(%rbx),%rax
   34bff:	48 85 ed             	test   %rbp,%rbp
   34c02:	0f 84 9f 02 00 00    	je     34ea7 <dwarf_lookup_pc+0x427>
   34c08:	48 8b 50 70          	mov    0x70(%rax),%rdx
   34c0c:	48 85 d2             	test   %rdx,%rdx
   34c0f:	0f 84 7f 02 00 00    	je     34e94 <dwarf_lookup_pc+0x414>
   34c15:	48 8b 70 68          	mov    0x68(%rax),%rsi
   34c19:	4c 8d 05 80 29 00 00 	lea    0x2980(%rip),%r8        # 375a0 <function_addrs_search>
   34c20:	48 89 e7             	mov    %rsp,%rdi
   34c23:	b9 18 00 00 00       	mov    $0x18,%ecx
   34c28:	e8 63 f4 fc ff       	callq  4090 <bsearch@plt>
   34c2d:	48 85 c0             	test   %rax,%rax
   34c30:	0f 84 5e 02 00 00    	je     34e94 <dwarf_lookup_pc+0x414>
   34c36:	48 8b 53 10          	mov    0x10(%rbx),%rdx
   34c3a:	48 8b 4a 68          	mov    0x68(%rdx),%rcx
   34c3e:	48 8b 52 70          	mov    0x70(%rdx),%rdx
   34c42:	48 89 c6             	mov    %rax,%rsi
   34c45:	48 29 ce             	sub    %rcx,%rsi
   34c48:	48 c1 fe 03          	sar    $0x3,%rsi
   34c4c:	49 b8 ab aa aa aa aa 	movabs $0xaaaaaaaaaaaaaaab,%r8
   34c53:	aa aa aa 
   34c56:	49 0f af f0          	imul   %r8,%rsi
   34c5a:	48 83 c6 01          	add    $0x1,%rsi
   34c5e:	48 8b 3c 24          	mov    (%rsp),%rdi
   34c62:	48 39 d6             	cmp    %rdx,%rsi
   34c65:	73 3a                	jae    34ca1 <dwarf_lookup_pc+0x221>
   34c67:	48 89 c3             	mov    %rax,%rbx
   34c6a:	48 83 c3 18          	add    $0x18,%rbx
   34c6e:	66 90                	xchg   %ax,%ax
   34c70:	48 3b 3b             	cmp    (%rbx),%rdi
   34c73:	72 25                	jb     34c9a <dwarf_lookup_pc+0x21a>
   34c75:	48 3b 7b 08          	cmp    0x8(%rbx),%rdi
   34c79:	73 26                	jae    34ca1 <dwarf_lookup_pc+0x221>
   34c7b:	48 83 c0 18          	add    $0x18,%rax
   34c7f:	48 89 de             	mov    %rbx,%rsi
   34c82:	48 29 ce             	sub    %rcx,%rsi
   34c85:	48 c1 fe 03          	sar    $0x3,%rsi
   34c89:	49 0f af f0          	imul   %r8,%rsi
   34c8d:	48 83 c6 01          	add    $0x1,%rsi
   34c91:	48 83 c3 18          	add    $0x18,%rbx
   34c95:	48 39 d6             	cmp    %rdx,%rsi
   34c98:	72 d6                	jb     34c70 <dwarf_lookup_pc+0x1f0>
   34c9a:	48 83 c3 e8          	add    $0xffffffffffffffe8,%rbx
   34c9e:	48 89 d8             	mov    %rbx,%rax
   34ca1:	48 8b 58 10          	mov    0x10(%rax),%rbx
   34ca5:	48 8b 45 08          	mov    0x8(%rbp),%rax
   34ca9:	48 89 44 24 50       	mov    %rax,0x50(%rsp)
   34cae:	8b 45 10             	mov    0x10(%rbp),%eax
   34cb1:	89 84 24 90 00 00 00 	mov    %eax,0x90(%rsp)
   34cb8:	4c 8d 44 24 50       	lea    0x50(%rsp),%r8
   34cbd:	4c 8d 8c 24 90 00 00 	lea    0x90(%rsp),%r9
   34cc4:	00 
   34cc5:	48 89 de             	mov    %rbx,%rsi
   34cc8:	4c 89 fa             	mov    %r15,%rdx
   34ccb:	4c 89 e9             	mov    %r13,%rcx
   34cce:	e8 ed 28 00 00       	callq  375c0 <report_inlined_functions>
   34cd3:	85 c0                	test   %eax,%eax
   34cd5:	0f 85 ea 03 00 00    	jne    350c5 <dwarf_lookup_pc+0x645>
   34cdb:	48 8b 34 24          	mov    (%rsp),%rsi
   34cdf:	48 8b 54 24 50       	mov    0x50(%rsp),%rdx
   34ce4:	8b 8c 24 90 00 00 00 	mov    0x90(%rsp),%ecx
   34ceb:	4c 8b 03             	mov    (%rbx),%r8
   34cee:	4c 89 ef             	mov    %r13,%rdi
   34cf1:	e9 cc 03 00 00       	jmpq   350c2 <dwarf_lookup_pc+0x642>
   34cf6:	41 c7 06 00 00 00 00 	movl   $0x0,(%r14)
   34cfd:	31 c0                	xor    %eax,%eax
   34cff:	e9 c1 03 00 00       	jmpq   350c5 <dwarf_lookup_pc+0x645>
   34d04:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
   34d09:	83 7f 08 00          	cmpl   $0x0,0x8(%rdi)
   34d0d:	0f 84 b4 fe ff ff    	je     34bc7 <dwarf_lookup_pc+0x147>
   34d13:	e9 5d 02 00 00       	jmpq   34f75 <dwarf_lookup_pc+0x4f5>
   34d18:	4c 89 7c 24 28       	mov    %r15,0x28(%rsp)
   34d1d:	4c 8b 43 10          	mov    0x10(%rbx),%r8
   34d21:	48 8d 44 24 48       	lea    0x48(%rsp),%rax
   34d26:	4c 8d 54 24 38       	lea    0x38(%rsp),%r10
   34d2b:	4c 8d 8c 24 90 00 00 	lea    0x90(%rsp),%r9
   34d32:	00 
   34d33:	4c 8b 74 24 30       	mov    0x30(%rsp),%r14
   34d38:	4c 89 f6             	mov    %r14,%rsi
   34d3b:	49 89 ff             	mov    %rdi,%r15
   34d3e:	48 8b 6c 24 18       	mov    0x18(%rsp),%rbp
   34d43:	48 89 ea             	mov    %rbp,%rdx
   34d46:	4c 89 e9             	mov    %r13,%rcx
   34d49:	50                   	push   %rax
   34d4a:	41 52                	push   %r10
   34d4c:	e8 bf 03 00 00       	callq  35110 <read_line_info>
   34d51:	48 83 c4 10          	add    $0x10,%rsp
   34d55:	85 c0                	test   %eax,%eax
   34d57:	4c 89 6c 24 08       	mov    %r13,0x8(%rsp)
   34d5c:	0f 84 01 02 00 00    	je     34f63 <dwarf_lookup_pc+0x4e3>
   34d62:	4d 8d 6e 68          	lea    0x68(%r14),%r13
   34d66:	31 c0                	xor    %eax,%eax
   34d68:	41 83 7f 08 00       	cmpl   $0x0,0x8(%r15)
   34d6d:	49 0f 44 c5          	cmove  %r13,%rax
   34d71:	4c 8b 7b 10          	mov    0x10(%rbx),%r15
   34d75:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
   34d7a:	48 85 c0             	test   %rax,%rax
   34d7d:	75 1b                	jne    34d9a <dwarf_lookup_pc+0x31a>
   34d7f:	0f 57 c0             	xorps  %xmm0,%xmm0
   34d82:	0f 29 84 24 e0 00 00 	movaps %xmm0,0xe0(%rsp)
   34d89:	00 
   34d8a:	0f 29 84 24 d0 00 00 	movaps %xmm0,0xd0(%rsp)
   34d91:	00 
   34d92:	4c 8d ac 24 d0 00 00 	lea    0xd0(%rsp),%r13
   34d99:	00 
   34d9a:	48 8d 05 95 93 00 00 	lea    0x9395(%rip),%rax        # 3e136 <str.0+0x316>
   34da1:	48 89 44 24 50       	mov    %rax,0x50(%rsp)
   34da6:	49 8b 46 20          	mov    0x20(%r14),%rax
   34daa:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
   34daf:	f3 41 0f 6f 07       	movdqu (%r15),%xmm0
   34db4:	f3 0f 7f 44 24 60    	movdqu %xmm0,0x60(%rsp)
   34dba:	41 8b 46 60          	mov    0x60(%r14),%eax
   34dbe:	89 44 24 70          	mov    %eax,0x70(%rsp)
   34dc2:	48 89 6c 24 78       	mov    %rbp,0x78(%rsp)
   34dc7:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   34dcc:	48 89 84 24 80 00 00 	mov    %rax,0x80(%rsp)
   34dd3:	00 
   34dd4:	c7 84 24 88 00 00 00 	movl   $0x0,0x88(%rsp)
   34ddb:	00 00 00 00 
   34ddf:	66 0f 70 c0 4e       	pshufd $0x4e,%xmm0,%xmm0
   34de4:	66 48 0f 7e c0       	movq   %xmm0,%rax
   34de9:	48 85 c0             	test   %rax,%rax
   34dec:	74 5e                	je     34e4c <dwarf_lookup_pc+0x3cc>
   34dee:	31 c0                	xor    %eax,%eax
   34df0:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   34df5:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   34dfc:	00 00 00 
   34dff:	90                   	nop
   34e00:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
   34e05:	48 8b 74 24 30       	mov    0x30(%rsp),%rsi
   34e0a:	4c 89 fa             	mov    %r15,%rdx
   34e0d:	b9 00 00 00 00       	mov    $0x0,%ecx
   34e12:	4c 8d 44 24 50       	lea    0x50(%rsp),%r8
   34e17:	4c 8d 8c 24 90 00 00 	lea    0x90(%rsp),%r9
   34e1e:	00 
   34e1f:	41 55                	push   %r13
   34e21:	41 55                	push   %r13
   34e23:	ff 74 24 18          	pushq  0x18(%rsp)
   34e27:	55                   	push   %rbp
   34e28:	e8 e3 28 00 00       	callq  37710 <read_function_entry>
   34e2d:	48 83 c4 20          	add    $0x20,%rsp
   34e31:	41 be 00 00 00 00    	mov    $0x0,%r14d
   34e37:	85 c0                	test   %eax,%eax
   34e39:	0f 84 87 01 00 00    	je     34fc6 <dwarf_lookup_pc+0x546>
   34e3f:	48 83 7c 24 68 00    	cmpq   $0x0,0x68(%rsp)
   34e45:	48 8b 6c 24 18       	mov    0x18(%rsp),%rbp
   34e4a:	75 b4                	jne    34e00 <dwarf_lookup_pc+0x380>
   34e4c:	4d 8b 75 18          	mov    0x18(%r13),%r14
   34e50:	4d 85 f6             	test   %r14,%r14
   34e53:	0f 84 63 01 00 00    	je     34fbc <dwarf_lookup_pc+0x53c>
   34e59:	48 8b 6c 24 40       	mov    0x40(%rsp),%rbp
   34e5e:	48 85 ed             	test   %rbp,%rbp
   34e61:	0f 84 13 01 00 00    	je     34f7a <dwarf_lookup_pc+0x4fa>
   34e67:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
   34e6c:	48 89 ee             	mov    %rbp,%rsi
   34e6f:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
   34e74:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
   34e79:	e8 c2 c0 ff ff       	callq  30f40 <__rdos_backtrace_vector_finish>
   34e7e:	48 85 c0             	test   %rax,%rax
   34e81:	0f 84 35 01 00 00    	je     34fbc <dwarf_lookup_pc+0x53c>
   34e87:	48 c7 45 18 00 00 00 	movq   $0x0,0x18(%rbp)
   34e8e:	00 
   34e8f:	e9 0a 01 00 00       	jmpq   34f9e <dwarf_lookup_pc+0x51e>
   34e94:	48 8b 34 24          	mov    (%rsp),%rsi
   34e98:	48 8b 55 08          	mov    0x8(%rbp),%rdx
   34e9c:	8b 4d 10             	mov    0x10(%rbp),%ecx
   34e9f:	4c 89 ef             	mov    %r13,%rdi
   34ea2:	e9 18 02 00 00       	jmpq   350bf <dwarf_lookup_pc+0x63f>
   34ea7:	48 8b 68 40          	mov    0x40(%rax),%rbp
   34eab:	48 85 ed             	test   %rbp,%rbp
   34eae:	0f 85 ff 01 00 00    	jne    350b3 <dwarf_lookup_pc+0x633>
   34eb4:	48 8b 68 30          	mov    0x30(%rax),%rbp
   34eb8:	48 85 ed             	test   %rbp,%rbp
   34ebb:	0f 84 e2 01 00 00    	je     350a3 <dwarf_lookup_pc+0x623>
   34ec1:	80 7d 00 2f          	cmpb   $0x2f,0x0(%rbp)
   34ec5:	0f 84 e4 01 00 00    	je     350af <dwarf_lookup_pc+0x62f>
   34ecb:	4c 89 f9             	mov    %r15,%rcx
   34ece:	4c 89 6c 24 08       	mov    %r13,0x8(%rsp)
   34ed3:	4c 8b 78 38          	mov    0x38(%rax),%r15
   34ed7:	4d 85 ff             	test   %r15,%r15
   34eda:	0f 84 c7 01 00 00    	je     350a7 <dwarf_lookup_pc+0x627>
   34ee0:	48 89 4c 24 28       	mov    %rcx,0x28(%rsp)
   34ee5:	48 89 ef             	mov    %rbp,%rdi
   34ee8:	e8 db f1 fc ff       	callq  40c8 <strlen@plt>
   34eed:	49 89 c6             	mov    %rax,%r14
   34ef0:	4c 89 ff             	mov    %r15,%rdi
   34ef3:	e8 d0 f1 fc ff       	callq  40c8 <strlen@plt>
   34ef8:	49 89 c5             	mov    %rax,%r13
   34efb:	49 8d 34 06          	lea    (%r14,%rax,1),%rsi
   34eff:	48 83 c6 02          	add    $0x2,%rsi
   34f03:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
   34f08:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
   34f0d:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
   34f12:	e8 29 bf ff ff       	callq  30e40 <__rdos_backtrace_alloc>
   34f17:	48 85 c0             	test   %rax,%rax
   34f1a:	0f 84 b7 01 00 00    	je     350d7 <dwarf_lookup_pc+0x657>
   34f20:	49 89 c4             	mov    %rax,%r12
   34f23:	48 89 c7             	mov    %rax,%rdi
   34f26:	4c 89 fe             	mov    %r15,%rsi
   34f29:	4c 89 ea             	mov    %r13,%rdx
   34f2c:	e8 a7 f1 fc ff       	callq  40d8 <memcpy@plt>
   34f31:	43 c6 04 2c 2f       	movb   $0x2f,(%r12,%r13,1)
   34f36:	4b 8d 3c 2c          	lea    (%r12,%r13,1),%rdi
   34f3a:	48 83 c7 01          	add    $0x1,%rdi
   34f3e:	49 83 c6 01          	add    $0x1,%r14
   34f42:	48 89 ee             	mov    %rbp,%rsi
   34f45:	4c 89 f2             	mov    %r14,%rdx
   34f48:	e8 8b f1 fc ff       	callq  40d8 <memcpy@plt>
   34f4d:	48 8b 43 10          	mov    0x10(%rbx),%rax
   34f51:	4c 89 e5             	mov    %r12,%rbp
   34f54:	4c 8b 7c 24 28       	mov    0x28(%rsp),%r15
   34f59:	4c 8b 6c 24 08       	mov    0x8(%rsp),%r13
   34f5e:	e9 4c 01 00 00       	jmpq   350af <dwarf_lookup_pc+0x62f>
   34f63:	31 d2                	xor    %edx,%edx
   34f65:	45 31 f6             	xor    %r14d,%r14d
   34f68:	31 c0                	xor    %eax,%eax
   34f6a:	41 83 7f 08 00       	cmpl   $0x0,0x8(%r15)
   34f6f:	0f 84 be 00 00 00    	je     35033 <dwarf_lookup_pc+0x5b3>
   34f75:	e8 3e f1 fc ff       	callq  40b8 <abort@plt>
   34f7a:	48 8d b4 24 d0 00 00 	lea    0xd0(%rsp),%rsi
   34f81:	00 
   34f82:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
   34f87:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
   34f8c:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
   34f91:	e8 0a c0 ff ff       	callq  30fa0 <__rdos_backtrace_vector_release>
   34f96:	85 c0                	test   %eax,%eax
   34f98:	74 22                	je     34fbc <dwarf_lookup_pc+0x53c>
   34f9a:	49 8b 45 00          	mov    0x0(%r13),%rax
   34f9e:	48 8d 0d 1b 31 00 00 	lea    0x311b(%rip),%rcx        # 380c0 <function_addrs_compare>
   34fa5:	ba 18 00 00 00       	mov    $0x18,%edx
   34faa:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   34faf:	48 89 c7             	mov    %rax,%rdi
   34fb2:	4c 89 f6             	mov    %r14,%rsi
   34fb5:	e8 16 3d 00 00       	callq  38cd0 <__rdos_backtrace_qsort>
   34fba:	eb 0a                	jmp    34fc6 <dwarf_lookup_pc+0x546>
   34fbc:	31 c0                	xor    %eax,%eax
   34fbe:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   34fc3:	45 31 f6             	xor    %r14d,%r14d
   34fc6:	48 8b 94 24 b0 00 00 	mov    0xb0(%rsp),%rdx
   34fcd:	00 
   34fce:	48 85 d2             	test   %rdx,%rdx
   34fd1:	48 8b 6c 24 08       	mov    0x8(%rsp),%rbp
   34fd6:	4c 8b 6c 24 18       	mov    0x18(%rsp),%r13
   34fdb:	4c 8b 7c 24 10       	mov    0x10(%rsp),%r15
   34fe0:	74 1a                	je     34ffc <dwarf_lookup_pc+0x57c>
   34fe2:	48 8b b4 24 b8 00 00 	mov    0xb8(%rsp),%rsi
   34fe9:	00 
   34fea:	48 c1 e2 03          	shl    $0x3,%rdx
   34fee:	4c 89 ff             	mov    %r15,%rdi
   34ff1:	4c 89 e9             	mov    %r13,%rcx
   34ff4:	49 89 e8             	mov    %rbp,%r8
   34ff7:	e8 84 be ff ff       	callq  30e80 <__rdos_backtrace_free>
   34ffc:	48 8b 94 24 c0 00 00 	mov    0xc0(%rsp),%rdx
   35003:	00 
   35004:	48 8b b4 24 c8 00 00 	mov    0xc8(%rsp),%rsi
   3500b:	00 
   3500c:	48 c1 e2 03          	shl    $0x3,%rdx
   35010:	4c 89 ff             	mov    %r15,%rdi
   35013:	4c 89 e9             	mov    %r13,%rcx
   35016:	49 89 e8             	mov    %rbp,%r8
   35019:	e8 62 be ff ff       	callq  30e80 <__rdos_backtrace_free>
   3501e:	b8 01 00 00 00       	mov    $0x1,%eax
   35023:	48 8b 54 24 20       	mov    0x20(%rsp),%rdx
   35028:	41 83 7f 08 00       	cmpl   $0x0,0x8(%r15)
   3502d:	0f 85 42 ff ff ff    	jne    34f75 <dwarf_lookup_pc+0x4f5>
   35033:	4c 89 ff             	mov    %r15,%rdi
   35036:	48 8b 4c 24 48       	mov    0x48(%rsp),%rcx
   3503b:	49 89 4c 24 60       	mov    %rcx,0x60(%r12)
   35040:	49 89 54 24 68       	mov    %rdx,0x68(%r12)
   35045:	4d 89 74 24 70       	mov    %r14,0x70(%r12)
   3504a:	48 8b 74 24 38       	mov    0x38(%rsp),%rsi
   3504f:	49 89 74 24 58       	mov    %rsi,0x58(%r12)
   35054:	4c 8b b4 24 30 01 00 	mov    0x130(%rsp),%r14
   3505b:	00 
   3505c:	4c 8b 7c 24 28       	mov    0x28(%rsp),%r15
   35061:	4c 8b 6c 24 08       	mov    0x8(%rsp),%r13
   35066:	48 83 fe ff          	cmp    $0xffffffffffffffff,%rsi
   3506a:	0f 85 6c fb ff ff    	jne    34bdc <dwarf_lookup_pc+0x15c>
   35070:	48 8b 14 24          	mov    (%rsp),%rdx
   35074:	85 c0                	test   %eax,%eax
   35076:	74 21                	je     35099 <dwarf_lookup_pc+0x619>
   35078:	48 83 ec 08          	sub    $0x8,%rsp
   3507c:	48 8b 74 24 38       	mov    0x38(%rsp),%rsi
   35081:	4c 89 f9             	mov    %r15,%rcx
   35084:	4c 8b 44 24 20       	mov    0x20(%rsp),%r8
   35089:	4d 89 e9             	mov    %r13,%r9
   3508c:	41 56                	push   %r14
   3508e:	e8 ed f9 ff ff       	callq  34a80 <dwarf_lookup_pc>
   35093:	48 83 c4 10          	add    $0x10,%rsp
   35097:	eb 2c                	jmp    350c5 <dwarf_lookup_pc+0x645>
   35099:	4c 89 ef             	mov    %r13,%rdi
   3509c:	48 89 d6             	mov    %rdx,%rsi
   3509f:	31 d2                	xor    %edx,%edx
   350a1:	eb 1a                	jmp    350bd <dwarf_lookup_pc+0x63d>
   350a3:	31 ed                	xor    %ebp,%ebp
   350a5:	eb 08                	jmp    350af <dwarf_lookup_pc+0x62f>
   350a7:	4c 8b 6c 24 08       	mov    0x8(%rsp),%r13
   350ac:	49 89 cf             	mov    %rcx,%r15
   350af:	48 89 68 40          	mov    %rbp,0x40(%rax)
   350b3:	48 8b 34 24          	mov    (%rsp),%rsi
   350b7:	4c 89 ef             	mov    %r13,%rdi
   350ba:	48 89 ea             	mov    %rbp,%rdx
   350bd:	31 c9                	xor    %ecx,%ecx
   350bf:	45 31 c0             	xor    %r8d,%r8d
   350c2:	41 ff d7             	callq  *%r15
   350c5:	48 81 c4 f8 00 00 00 	add    $0xf8,%rsp
   350cc:	5b                   	pop    %rbx
   350cd:	41 5c                	pop    %r12
   350cf:	41 5d                	pop    %r13
   350d1:	41 5e                	pop    %r14
   350d3:	41 5f                	pop    %r15
   350d5:	5d                   	pop    %rbp
   350d6:	c3                   	retq   
   350d7:	48 8b 84 24 30 01 00 	mov    0x130(%rsp),%rax
   350de:	00 
   350df:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
   350e5:	31 c0                	xor    %eax,%eax
   350e7:	eb dc                	jmp    350c5 <dwarf_lookup_pc+0x645>
   350e9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000350f0 <unit_addrs_search>:
   350f0:	48 8b 0f             	mov    (%rdi),%rcx
   350f3:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   350f8:	48 3b 0e             	cmp    (%rsi),%rcx
   350fb:	72 09                	jb     35106 <unit_addrs_search+0x16>
   350fd:	31 c0                	xor    %eax,%eax
   350ff:	48 3b 4e 08          	cmp    0x8(%rsi),%rcx
   35103:	0f 93 c0             	setae  %al
   35106:	c3                   	retq   
   35107:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   3510e:	00 00 

0000000000035110 <read_line_info>:
   35110:	55                   	push   %rbp
   35111:	41 57                	push   %r15
   35113:	41 56                	push   %r14
   35115:	41 55                	push   %r13
   35117:	41 54                	push   %r12
   35119:	53                   	push   %rbx
   3511a:	48 81 ec b8 01 00 00 	sub    $0x1b8,%rsp
   35121:	48 89 cd             	mov    %rcx,%rbp
   35124:	49 89 d7             	mov    %rdx,%r15
   35127:	49 89 fe             	mov    %rdi,%r14
   3512a:	0f 57 c0             	xorps  %xmm0,%xmm0
   3512d:	0f 29 84 24 90 00 00 	movaps %xmm0,0x90(%rsp)
   35134:	00 
   35135:	0f 29 84 24 a0 00 00 	movaps %xmm0,0xa0(%rsp)
   3513c:	00 
   3513d:	41 0f 11 41 30       	movups %xmm0,0x30(%r9)
   35142:	41 0f 11 41 20       	movups %xmm0,0x20(%r9)
   35147:	41 0f 11 41 10       	movups %xmm0,0x10(%r9)
   3514c:	41 0f 11 01          	movups %xmm0,(%r9)
   35150:	49 8b 40 28          	mov    0x28(%r8),%rax
   35154:	48 8b 4e 38          	mov    0x38(%rsi),%rcx
   35158:	48 29 c1             	sub    %rax,%rcx
   3515b:	4c 89 4c 24 70       	mov    %r9,0x70(%rsp)
   35160:	48 89 7c 24 58       	mov    %rdi,0x58(%rsp)
   35165:	0f 86 ae 00 00 00    	jbe    35219 <read_line_info+0x109>
   3516b:	4d 89 cc             	mov    %r9,%r12
   3516e:	48 8d 15 cd 8f 00 00 	lea    0x8fcd(%rip),%rdx        # 3e142 <str.0+0x322>
   35175:	48 89 54 24 18       	mov    %rdx,0x18(%rsp)
   3517a:	48 8b 56 30          	mov    0x30(%rsi),%rdx
   3517e:	48 89 54 24 20       	mov    %rdx,0x20(%rsp)
   35183:	48 01 d0             	add    %rdx,%rax
   35186:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   3518b:	48 89 4c 24 30       	mov    %rcx,0x30(%rsp)
   35190:	8b 7e 60             	mov    0x60(%rsi),%edi
   35193:	89 7c 24 38          	mov    %edi,0x38(%rsp)
   35197:	4c 89 7c 24 40       	mov    %r15,0x40(%rsp)
   3519c:	48 89 6c 24 48       	mov    %rbp,0x48(%rsp)
   351a1:	c7 44 24 50 00 00 00 	movl   $0x0,0x50(%rsp)
   351a8:	00 
   351a9:	48 83 f9 03          	cmp    $0x3,%rcx
   351ad:	48 89 ac 24 88 00 00 	mov    %rbp,0x88(%rsp)
   351b4:	00 
   351b5:	4c 89 bc 24 80 00 00 	mov    %r15,0x80(%rsp)
   351bc:	00 
   351bd:	77 71                	ja     35230 <read_line_info+0x120>
   351bf:	29 d0                	sub    %edx,%eax
   351c1:	48 8d 15 ff 9c 00 00 	lea    0x9cff(%rip),%rdx        # 3eec7 <elf_crc32.crc32_table+0x7a7>
   351c8:	48 8d 0d e8 9c 00 00 	lea    0x9ce8(%rip),%rcx        # 3eeb7 <elf_crc32.crc32_table+0x797>
   351cf:	4c 8d 05 6c 8f 00 00 	lea    0x8f6c(%rip),%r8        # 3e142 <str.0+0x322>
   351d6:	48 8d ac 24 e0 00 00 	lea    0xe0(%rsp),%rbp
   351dd:	00 
   351de:	be c8 00 00 00       	mov    $0xc8,%esi
   351e3:	48 89 ef             	mov    %rbp,%rdi
   351e6:	41 89 c1             	mov    %eax,%r9d
   351e9:	31 c0                	xor    %eax,%eax
   351eb:	e8 20 ee fc ff       	callq  4010 <snprintf@plt>
   351f0:	48 8b 7c 24 48       	mov    0x48(%rsp),%rdi
   351f5:	48 89 ee             	mov    %rbp,%rsi
   351f8:	31 d2                	xor    %edx,%edx
   351fa:	ff 54 24 40          	callq  *0x40(%rsp)
   351fe:	c7 44 24 50 01 00 00 	movl   $0x1,0x50(%rsp)
   35205:	00 
   35206:	48 c7 44 24 30 00 00 	movq   $0x0,0x30(%rsp)
   3520d:	00 00 
   3520f:	48 8b 6c 24 28       	mov    0x28(%rsp),%rbp
   35214:	e9 9f 00 00 00       	jmpq   352b8 <read_line_info+0x1a8>
   35219:	48 8d 35 58 9d 00 00 	lea    0x9d58(%rip),%rsi        # 3ef78 <elf_crc32.crc32_table+0x858>
   35220:	48 89 ef             	mov    %rbp,%rdi
   35223:	31 d2                	xor    %edx,%edx
   35225:	41 ff d7             	callq  *%r15
   35228:	49 89 ec             	mov    %rbp,%r12
   3522b:	e9 df 00 00 00       	jmpq   3530f <read_line_info+0x1ff>
   35230:	4d 89 c5             	mov    %r8,%r13
   35233:	48 89 b4 24 d8 00 00 	mov    %rsi,0xd8(%rsp)
   3523a:	00 
   3523b:	4c 8d 48 04          	lea    0x4(%rax),%r9
   3523f:	4c 89 4c 24 28       	mov    %r9,0x28(%rsp)
   35244:	48 83 c1 fc          	add    $0xfffffffffffffffc,%rcx
   35248:	48 89 4c 24 30       	mov    %rcx,0x30(%rsp)
   3524d:	85 ff                	test   %edi,%edi
   3524f:	74 1e                	je     3526f <read_line_info+0x15f>
   35251:	0f b6 08             	movzbl (%rax),%ecx
   35254:	c1 e1 18             	shl    $0x18,%ecx
   35257:	0f b6 50 01          	movzbl 0x1(%rax),%edx
   3525b:	c1 e2 10             	shl    $0x10,%edx
   3525e:	09 ca                	or     %ecx,%edx
   35260:	0f b6 48 02          	movzbl 0x2(%rax),%ecx
   35264:	c1 e1 08             	shl    $0x8,%ecx
   35267:	09 d1                	or     %edx,%ecx
   35269:	48 83 c0 03          	add    $0x3,%rax
   3526d:	eb 19                	jmp    35288 <read_line_info+0x178>
   3526f:	0f b6 48 03          	movzbl 0x3(%rax),%ecx
   35273:	c1 e1 18             	shl    $0x18,%ecx
   35276:	0f b6 50 02          	movzbl 0x2(%rax),%edx
   3527a:	c1 e2 10             	shl    $0x10,%edx
   3527d:	09 ca                	or     %ecx,%edx
   3527f:	0f b6 48 01          	movzbl 0x1(%rax),%ecx
   35283:	c1 e1 08             	shl    $0x8,%ecx
   35286:	09 d1                	or     %edx,%ecx
   35288:	0f b6 10             	movzbl (%rax),%edx
   3528b:	89 c8                	mov    %ecx,%eax
   3528d:	48 09 d0             	or     %rdx,%rax
   35290:	31 c9                	xor    %ecx,%ecx
   35292:	83 f8 ff             	cmp    $0xffffffff,%eax
   35295:	0f 84 19 01 00 00    	je     353b4 <read_line_info+0x2a4>
   3529b:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   352a0:	48 83 f8 01          	cmp    $0x1,%rax
   352a4:	0f 87 2d 01 00 00    	ja     353d7 <read_line_info+0x2c7>
   352aa:	83 7c 24 50 00       	cmpl   $0x0,0x50(%rsp)
   352af:	4c 89 cd             	mov    %r9,%rbp
   352b2:	0f 84 7e 01 00 00    	je     35436 <read_line_info+0x326>
   352b8:	41 c7 04 24 00 00 00 	movl   $0x0,(%r12)
   352bf:	00 
   352c0:	4c 8b 44 24 18       	mov    0x18(%rsp),%r8
   352c5:	2b 6c 24 20          	sub    0x20(%rsp),%ebp
   352c9:	48 8d 15 f7 9b 00 00 	lea    0x9bf7(%rip),%rdx        # 3eec7 <elf_crc32.crc32_table+0x7a7>
   352d0:	48 8d 0d bf 9c 00 00 	lea    0x9cbf(%rip),%rcx        # 3ef96 <elf_crc32.crc32_table+0x876>
   352d7:	48 8d 9c 24 e0 00 00 	lea    0xe0(%rsp),%rbx
   352de:	00 
   352df:	be c8 00 00 00       	mov    $0xc8,%esi
   352e4:	48 89 df             	mov    %rbx,%rdi
   352e7:	41 89 e9             	mov    %ebp,%r9d
   352ea:	31 c0                	xor    %eax,%eax
   352ec:	e8 1f ed fc ff       	callq  4010 <snprintf@plt>
   352f1:	48 8b 7c 24 48       	mov    0x48(%rsp),%rdi
   352f6:	48 89 de             	mov    %rbx,%rsi
   352f9:	31 d2                	xor    %edx,%edx
   352fb:	ff 54 24 40          	callq  *0x40(%rsp)
   352ff:	4c 8b a4 24 88 00 00 	mov    0x88(%rsp),%r12
   35306:	00 
   35307:	4c 8b bc 24 80 00 00 	mov    0x80(%rsp),%r15
   3530e:	00 
   3530f:	48 8b 84 24 98 00 00 	mov    0x98(%rsp),%rax
   35316:	00 
   35317:	48 01 84 24 a0 00 00 	add    %rax,0xa0(%rsp)
   3531e:	00 
   3531f:	48 c7 84 24 98 00 00 	movq   $0x0,0x98(%rsp)
   35326:	00 00 00 00 00 
   3532b:	48 8d b4 24 90 00 00 	lea    0x90(%rsp),%rsi
   35332:	00 
   35333:	48 8b 6c 24 58       	mov    0x58(%rsp),%rbp
   35338:	48 89 ef             	mov    %rbp,%rdi
   3533b:	4c 89 fa             	mov    %r15,%rdx
   3533e:	4c 89 e1             	mov    %r12,%rcx
   35341:	e8 5a bc ff ff       	callq  30fa0 <__rdos_backtrace_vector_release>
   35346:	48 8b 5c 24 70       	mov    0x70(%rsp),%rbx
   3534b:	48 8b 53 20          	mov    0x20(%rbx),%rdx
   3534f:	48 85 d2             	test   %rdx,%rdx
   35352:	74 16                	je     3536a <read_line_info+0x25a>
   35354:	48 8b 73 28          	mov    0x28(%rbx),%rsi
   35358:	48 c1 e2 03          	shl    $0x3,%rdx
   3535c:	48 89 ef             	mov    %rbp,%rdi
   3535f:	4c 89 f9             	mov    %r15,%rcx
   35362:	4d 89 e0             	mov    %r12,%r8
   35365:	e8 16 bb ff ff       	callq  30e80 <__rdos_backtrace_free>
   3536a:	48 8b 53 30          	mov    0x30(%rbx),%rdx
   3536e:	48 8b 73 38          	mov    0x38(%rbx),%rsi
   35372:	48 c1 e2 03          	shl    $0x3,%rdx
   35376:	48 89 ef             	mov    %rbp,%rdi
   35379:	4c 89 f9             	mov    %r15,%rcx
   3537c:	4d 89 e0             	mov    %r12,%r8
   3537f:	e8 fc ba ff ff       	callq  30e80 <__rdos_backtrace_free>
   35384:	48 8b 84 24 f0 01 00 	mov    0x1f0(%rsp),%rax
   3538b:	00 
   3538c:	48 c7 00 ff ff ff ff 	movq   $0xffffffffffffffff,(%rax)
   35393:	31 c9                	xor    %ecx,%ecx
   35395:	31 c0                	xor    %eax,%eax
   35397:	48 8b 9c 24 f8 01 00 	mov    0x1f8(%rsp),%rbx
   3539e:	00 
   3539f:	48 89 0b             	mov    %rcx,(%rbx)
   353a2:	48 81 c4 b8 01 00 00 	add    $0x1b8,%rsp
   353a9:	5b                   	pop    %rbx
   353aa:	41 5c                	pop    %r12
   353ac:	41 5d                	pop    %r13
   353ae:	41 5e                	pop    %r14
   353b0:	41 5f                	pop    %r15
   353b2:	5d                   	pop    %rbp
   353b3:	c3                   	retq   
   353b4:	48 8d 7c 24 18       	lea    0x18(%rsp),%rdi
   353b9:	e8 12 d9 ff ff       	callq  32cd0 <read_uint64>
   353be:	b9 01 00 00 00       	mov    $0x1,%ecx
   353c3:	4c 8b 4c 24 28       	mov    0x28(%rsp),%r9
   353c8:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   353cd:	48 83 f8 01          	cmp    $0x1,%rax
   353d1:	0f 86 d3 fe ff ff    	jbe    352aa <read_line_info+0x19a>
   353d7:	49 8d 69 02          	lea    0x2(%r9),%rbp
   353db:	48 89 6c 24 28       	mov    %rbp,0x28(%rsp)
   353e0:	48 8d 70 fe          	lea    -0x2(%rax),%rsi
   353e4:	48 89 74 24 30       	mov    %rsi,0x30(%rsp)
   353e9:	44 8b 44 24 38       	mov    0x38(%rsp),%r8d
   353ee:	49 8d 79 01          	lea    0x1(%r9),%rdi
   353f2:	45 85 c0             	test   %r8d,%r8d
   353f5:	48 89 fb             	mov    %rdi,%rbx
   353f8:	49 0f 44 d9          	cmove  %r9,%rbx
   353fc:	49 0f 45 f9          	cmovne %r9,%rdi
   35400:	0f b6 3f             	movzbl (%rdi),%edi
   35403:	c1 e7 08             	shl    $0x8,%edi
   35406:	0f b6 1b             	movzbl (%rbx),%ebx
   35409:	8d 14 1f             	lea    (%rdi,%rbx,1),%edx
   3540c:	41 89 14 24          	mov    %edx,(%r12)
   35410:	8d 14 1f             	lea    (%rdi,%rbx,1),%edx
   35413:	83 c2 fe             	add    $0xfffffffe,%edx
   35416:	66 83 fa 02          	cmp    $0x2,%dx
   3541a:	0f 87 a0 fe ff ff    	ja     352c0 <read_line_info+0x1b0>
   35420:	85 c9                	test   %ecx,%ecx
   35422:	74 5c                	je     35480 <read_line_info+0x370>
   35424:	48 8d 7c 24 18       	lea    0x18(%rsp),%rdi
   35429:	e8 a2 d8 ff ff       	callq  32cd0 <read_uint64>
   3542e:	48 89 c3             	mov    %rax,%rbx
   35431:	e9 11 01 00 00       	jmpq   35547 <read_line_info+0x437>
   35436:	4c 8b 44 24 18       	mov    0x18(%rsp),%r8
   3543b:	44 2b 4c 24 20       	sub    0x20(%rsp),%r9d
   35440:	48 8d 15 80 9a 00 00 	lea    0x9a80(%rip),%rdx        # 3eec7 <elf_crc32.crc32_table+0x7a7>
   35447:	48 8d 0d 69 9a 00 00 	lea    0x9a69(%rip),%rcx        # 3eeb7 <elf_crc32.crc32_table+0x797>
   3544e:	48 8d ac 24 e0 00 00 	lea    0xe0(%rsp),%rbp
   35455:	00 
   35456:	be c8 00 00 00       	mov    $0xc8,%esi
   3545b:	48 89 ef             	mov    %rbp,%rdi
   3545e:	31 c0                	xor    %eax,%eax
   35460:	e8 ab eb fc ff       	callq  4010 <snprintf@plt>
   35465:	48 8b 7c 24 48       	mov    0x48(%rsp),%rdi
   3546a:	48 89 ee             	mov    %rbp,%rsi
   3546d:	31 d2                	xor    %edx,%edx
   3546f:	ff 54 24 40          	callq  *0x40(%rsp)
   35473:	c7 44 24 50 01 00 00 	movl   $0x1,0x50(%rsp)
   3547a:	00 
   3547b:	e9 8f fd ff ff       	jmpq   3520f <read_line_info+0xff>
   35480:	48 83 fe 03          	cmp    $0x3,%rsi
   35484:	77 0e                	ja     35494 <read_line_info+0x384>
   35486:	83 7c 24 50 00       	cmpl   $0x0,0x50(%rsp)
   3548b:	74 46                	je     354d3 <read_line_info+0x3c3>
   3548d:	31 db                	xor    %ebx,%ebx
   3548f:	e9 b3 00 00 00       	jmpq   35547 <read_line_info+0x437>
   35494:	49 8d 49 06          	lea    0x6(%r9),%rcx
   35498:	48 83 c0 fa          	add    $0xfffffffffffffffa,%rax
   3549c:	48 89 4c 24 28       	mov    %rcx,0x28(%rsp)
   354a1:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   354a6:	45 85 c0             	test   %r8d,%r8d
   354a9:	74 73                	je     3551e <read_line_info+0x40e>
   354ab:	41 0f b6 41 02       	movzbl 0x2(%r9),%eax
   354b0:	48 c1 e0 18          	shl    $0x18,%rax
   354b4:	41 0f b6 49 03       	movzbl 0x3(%r9),%ecx
   354b9:	48 c1 e1 10          	shl    $0x10,%rcx
   354bd:	48 09 c1             	or     %rax,%rcx
   354c0:	41 0f b6 41 04       	movzbl 0x4(%r9),%eax
   354c5:	48 c1 e0 08          	shl    $0x8,%rax
   354c9:	48 09 c8             	or     %rcx,%rax
   354cc:	41 0f b6 59 05       	movzbl 0x5(%r9),%ebx
   354d1:	eb 71                	jmp    35544 <read_line_info+0x434>
   354d3:	4c 8b 44 24 18       	mov    0x18(%rsp),%r8
   354d8:	2b 6c 24 20          	sub    0x20(%rsp),%ebp
   354dc:	48 8d 15 e4 99 00 00 	lea    0x99e4(%rip),%rdx        # 3eec7 <elf_crc32.crc32_table+0x7a7>
   354e3:	48 8d 0d cd 99 00 00 	lea    0x99cd(%rip),%rcx        # 3eeb7 <elf_crc32.crc32_table+0x797>
   354ea:	31 db                	xor    %ebx,%ebx
   354ec:	4c 8d b4 24 e0 00 00 	lea    0xe0(%rsp),%r14
   354f3:	00 
   354f4:	be c8 00 00 00       	mov    $0xc8,%esi
   354f9:	4c 89 f7             	mov    %r14,%rdi
   354fc:	41 89 e9             	mov    %ebp,%r9d
   354ff:	31 c0                	xor    %eax,%eax
   35501:	e8 0a eb fc ff       	callq  4010 <snprintf@plt>
   35506:	48 8b 7c 24 48       	mov    0x48(%rsp),%rdi
   3550b:	4c 89 f6             	mov    %r14,%rsi
   3550e:	31 d2                	xor    %edx,%edx
   35510:	ff 54 24 40          	callq  *0x40(%rsp)
   35514:	c7 44 24 50 01 00 00 	movl   $0x1,0x50(%rsp)
   3551b:	00 
   3551c:	eb 29                	jmp    35547 <read_line_info+0x437>
   3551e:	41 0f b6 41 05       	movzbl 0x5(%r9),%eax
   35523:	48 c1 e0 18          	shl    $0x18,%rax
   35527:	41 0f b6 49 04       	movzbl 0x4(%r9),%ecx
   3552c:	48 c1 e1 10          	shl    $0x10,%rcx
   35530:	48 09 c1             	or     %rax,%rcx
   35533:	41 0f b6 41 03       	movzbl 0x3(%r9),%eax
   35538:	48 c1 e0 08          	shl    $0x8,%rax
   3553c:	48 09 c8             	or     %rcx,%rax
   3553f:	41 0f b6 59 02       	movzbl 0x2(%r9),%ebx
   35544:	48 09 c3             	or     %rax,%rbx
   35547:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   3554c:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
   35551:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
   35556:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   3555b:	48 8b 6c 24 28       	mov    0x28(%rsp),%rbp
   35560:	8b 54 24 50          	mov    0x50(%rsp),%edx
   35564:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
   35569:	48 29 d8             	sub    %rbx,%rax
   3556c:	73 64                	jae    355d2 <read_line_info+0x4c2>
   3556e:	85 d2                	test   %edx,%edx
   35570:	4c 8b a4 24 88 00 00 	mov    0x88(%rsp),%r12
   35577:	00 
   35578:	4c 8b bc 24 80 00 00 	mov    0x80(%rsp),%r15
   3557f:	00 
   35580:	0f 85 89 fd ff ff    	jne    3530f <read_line_info+0x1ff>
   35586:	2b 6c 24 08          	sub    0x8(%rsp),%ebp
   3558a:	48 8d 15 36 99 00 00 	lea    0x9936(%rip),%rdx        # 3eec7 <elf_crc32.crc32_table+0x7a7>
   35591:	48 8d 0d 1f 99 00 00 	lea    0x991f(%rip),%rcx        # 3eeb7 <elf_crc32.crc32_table+0x797>
   35598:	48 8d 9c 24 e0 00 00 	lea    0xe0(%rsp),%rbx
   3559f:	00 
   355a0:	be c8 00 00 00       	mov    $0xc8,%esi
   355a5:	48 89 df             	mov    %rbx,%rdi
   355a8:	4c 8b 44 24 68       	mov    0x68(%rsp),%r8
   355ad:	41 89 e9             	mov    %ebp,%r9d
   355b0:	31 c0                	xor    %eax,%eax
   355b2:	e8 59 ea fc ff       	callq  4010 <snprintf@plt>
   355b7:	48 8b 7c 24 48       	mov    0x48(%rsp),%rdi
   355bc:	48 89 de             	mov    %rbx,%rsi
   355bf:	31 d2                	xor    %edx,%edx
   355c1:	ff 54 24 40          	callq  *0x40(%rsp)
   355c5:	c7 44 24 50 01 00 00 	movl   $0x1,0x50(%rsp)
   355cc:	00 
   355cd:	e9 3d fd ff ff       	jmpq   3530f <read_line_info+0x1ff>
   355d2:	4c 8b 7c 24 40       	mov    0x40(%rsp),%r15
   355d7:	48 8b 4c 24 48       	mov    0x48(%rsp),%rcx
   355dc:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
   355e1:	48 8d 0c 2b          	lea    (%rbx,%rbp,1),%rcx
   355e5:	48 89 4c 24 28       	mov    %rcx,0x28(%rsp)
   355ea:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   355ef:	48 85 db             	test   %rbx,%rbx
   355f2:	4c 89 7c 24 78       	mov    %r15,0x78(%rsp)
   355f7:	74 0d                	je     35606 <read_line_info+0x4f6>
   355f9:	48 83 c3 ff          	add    $0xffffffffffffffff,%rbx
   355fd:	8a 45 00             	mov    0x0(%rbp),%al
   35600:	48 83 c5 01          	add    $0x1,%rbp
   35604:	eb 55                	jmp    3565b <read_line_info+0x54b>
   35606:	85 d2                	test   %edx,%edx
   35608:	74 04                	je     3560e <read_line_info+0x4fe>
   3560a:	31 db                	xor    %ebx,%ebx
   3560c:	eb 4b                	jmp    35659 <read_line_info+0x549>
   3560e:	41 89 e9             	mov    %ebp,%r9d
   35611:	44 2b 4c 24 08       	sub    0x8(%rsp),%r9d
   35616:	48 8d 15 aa 98 00 00 	lea    0x98aa(%rip),%rdx        # 3eec7 <elf_crc32.crc32_table+0x7a7>
   3561d:	48 8d 0d 93 98 00 00 	lea    0x9893(%rip),%rcx        # 3eeb7 <elf_crc32.crc32_table+0x797>
   35624:	31 db                	xor    %ebx,%ebx
   35626:	4c 8d bc 24 e0 00 00 	lea    0xe0(%rsp),%r15
   3562d:	00 
   3562e:	be c8 00 00 00       	mov    $0xc8,%esi
   35633:	4c 89 ff             	mov    %r15,%rdi
   35636:	4c 8b 44 24 68       	mov    0x68(%rsp),%r8
   3563b:	31 c0                	xor    %eax,%eax
   3563d:	e8 ce e9 fc ff       	callq  4010 <snprintf@plt>
   35642:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
   35647:	4c 89 fe             	mov    %r15,%rsi
   3564a:	4c 8b 7c 24 78       	mov    0x78(%rsp),%r15
   3564f:	31 d2                	xor    %edx,%edx
   35651:	41 ff d7             	callq  *%r15
   35654:	ba 01 00 00 00       	mov    $0x1,%edx
   35659:	31 c0                	xor    %eax,%eax
   3565b:	0f b6 c0             	movzbl %al,%eax
   3565e:	41 89 44 24 04       	mov    %eax,0x4(%r12)
   35663:	b8 01 00 00 00       	mov    $0x1,%eax
   35668:	41 83 3c 24 04       	cmpl   $0x4,(%r12)
   3566d:	7c 6a                	jl     356d9 <read_line_info+0x5c9>
   3566f:	48 85 db             	test   %rbx,%rbx
   35672:	74 0d                	je     35681 <read_line_info+0x571>
   35674:	48 83 c3 ff          	add    $0xffffffffffffffff,%rbx
   35678:	8a 45 00             	mov    0x0(%rbp),%al
   3567b:	48 83 c5 01          	add    $0x1,%rbp
   3567f:	eb 55                	jmp    356d6 <read_line_info+0x5c6>
   35681:	85 d2                	test   %edx,%edx
   35683:	74 04                	je     35689 <read_line_info+0x579>
   35685:	31 db                	xor    %ebx,%ebx
   35687:	eb 4b                	jmp    356d4 <read_line_info+0x5c4>
   35689:	41 89 e9             	mov    %ebp,%r9d
   3568c:	44 2b 4c 24 08       	sub    0x8(%rsp),%r9d
   35691:	48 8d 15 2f 98 00 00 	lea    0x982f(%rip),%rdx        # 3eec7 <elf_crc32.crc32_table+0x7a7>
   35698:	48 8d 0d 18 98 00 00 	lea    0x9818(%rip),%rcx        # 3eeb7 <elf_crc32.crc32_table+0x797>
   3569f:	31 db                	xor    %ebx,%ebx
   356a1:	4c 8d bc 24 e0 00 00 	lea    0xe0(%rsp),%r15
   356a8:	00 
   356a9:	be c8 00 00 00       	mov    $0xc8,%esi
   356ae:	4c 89 ff             	mov    %r15,%rdi
   356b1:	4c 8b 44 24 68       	mov    0x68(%rsp),%r8
   356b6:	31 c0                	xor    %eax,%eax
   356b8:	e8 53 e9 fc ff       	callq  4010 <snprintf@plt>
   356bd:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
   356c2:	4c 89 fe             	mov    %r15,%rsi
   356c5:	4c 8b 7c 24 78       	mov    0x78(%rsp),%r15
   356ca:	31 d2                	xor    %edx,%edx
   356cc:	41 ff d7             	callq  *%r15
   356cf:	ba 01 00 00 00       	mov    $0x1,%edx
   356d4:	31 c0                	xor    %eax,%eax
   356d6:	0f b6 c0             	movzbl %al,%eax
   356d9:	41 89 44 24 08       	mov    %eax,0x8(%r12)
   356de:	48 85 db             	test   %rbx,%rbx
   356e1:	74 0e                	je     356f1 <read_line_info+0x5e1>
   356e3:	48 83 fb 01          	cmp    $0x1,%rbx
   356e7:	0f 85 6a 01 00 00    	jne    35857 <read_line_info+0x747>
   356ed:	48 83 c5 01          	add    $0x1,%rbp
   356f1:	85 d2                	test   %edx,%edx
   356f3:	75 44                	jne    35739 <read_line_info+0x629>
   356f5:	41 89 e9             	mov    %ebp,%r9d
   356f8:	44 2b 4c 24 08       	sub    0x8(%rsp),%r9d
   356fd:	48 8d 15 c3 97 00 00 	lea    0x97c3(%rip),%rdx        # 3eec7 <elf_crc32.crc32_table+0x7a7>
   35704:	48 8d 0d ac 97 00 00 	lea    0x97ac(%rip),%rcx        # 3eeb7 <elf_crc32.crc32_table+0x797>
   3570b:	48 8d 9c 24 e0 00 00 	lea    0xe0(%rsp),%rbx
   35712:	00 
   35713:	be c8 00 00 00       	mov    $0xc8,%esi
   35718:	48 89 df             	mov    %rbx,%rdi
   3571b:	4c 8b 44 24 68       	mov    0x68(%rsp),%r8
   35720:	31 c0                	xor    %eax,%eax
   35722:	e8 e9 e8 fc ff       	callq  4010 <snprintf@plt>
   35727:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
   3572c:	48 89 de             	mov    %rbx,%rsi
   3572f:	31 d2                	xor    %edx,%edx
   35731:	41 ff d7             	callq  *%r15
   35734:	ba 01 00 00 00       	mov    $0x1,%edx
   35739:	41 c7 44 24 0c 00 00 	movl   $0x0,0xc(%r12)
   35740:	00 00 
   35742:	41 c7 44 24 10 00 00 	movl   $0x0,0x10(%r12)
   35749:	00 00 
   3574b:	31 db                	xor    %ebx,%ebx
   3574d:	31 c0                	xor    %eax,%eax
   3574f:	41 89 d0             	mov    %edx,%r8d
   35752:	41 89 44 24 14       	mov    %eax,0x14(%r12)
   35757:	49 89 6c 24 18       	mov    %rbp,0x18(%r12)
   3575c:	83 c0 ff             	add    $0xffffffff,%eax
   3575f:	48 39 c3             	cmp    %rax,%rbx
   35762:	73 5d                	jae    357c1 <read_line_info+0x6b1>
   35764:	45 85 c0             	test   %r8d,%r8d
   35767:	4c 8b a4 24 88 00 00 	mov    0x88(%rsp),%r12
   3576e:	00 
   3576f:	4c 8b bc 24 80 00 00 	mov    0x80(%rsp),%r15
   35776:	00 
   35777:	0f 85 92 fb ff ff    	jne    3530f <read_line_info+0x1ff>
   3577d:	2b 6c 24 08          	sub    0x8(%rsp),%ebp
   35781:	48 8d 15 3f 97 00 00 	lea    0x973f(%rip),%rdx        # 3eec7 <elf_crc32.crc32_table+0x7a7>
   35788:	48 8d 0d 28 97 00 00 	lea    0x9728(%rip),%rcx        # 3eeb7 <elf_crc32.crc32_table+0x797>
   3578f:	48 8d 9c 24 e0 00 00 	lea    0xe0(%rsp),%rbx
   35796:	00 
   35797:	be c8 00 00 00       	mov    $0xc8,%esi
   3579c:	48 89 df             	mov    %rbx,%rdi
   3579f:	4c 8b 44 24 68       	mov    0x68(%rsp),%r8
   357a4:	41 89 e9             	mov    %ebp,%r9d
   357a7:	31 c0                	xor    %eax,%eax
   357a9:	e8 62 e8 fc ff       	callq  4010 <snprintf@plt>
   357ae:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
   357b3:	48 89 de             	mov    %rbx,%rsi
   357b6:	31 d2                	xor    %edx,%edx
   357b8:	ff 54 24 78          	callq  *0x78(%rsp)
   357bc:	e9 4e fb ff ff       	jmpq   3530f <read_line_info+0x1ff>
   357c1:	4c 89 ac 24 b8 00 00 	mov    %r13,0xb8(%rsp)
   357c8:	00 
   357c9:	4c 8d 2c 28          	lea    (%rax,%rbp,1),%r13
   357cd:	49 89 de             	mov    %rbx,%r14
   357d0:	49 c7 44 24 20 00 00 	movq   $0x0,0x20(%r12)
   357d7:	00 00 
   357d9:	49 29 c6             	sub    %rax,%r14
   357dc:	44 89 44 24 60       	mov    %r8d,0x60(%rsp)
   357e1:	0f 8e d8 00 00 00    	jle    358bf <read_line_info+0x7af>
   357e7:	48 01 dd             	add    %rbx,%rbp
   357ea:	48 8d 5d ff          	lea    -0x1(%rbp),%rbx
   357ee:	31 f6                	xor    %esi,%esi
   357f0:	4c 89 e9             	mov    %r13,%rcx
   357f3:	80 39 00             	cmpb   $0x0,(%rcx)
   357f6:	75 2d                	jne    35825 <read_line_info+0x715>
   357f8:	e9 13 02 00 00       	jmpq   35a10 <read_line_info+0x900>
   357fd:	31 ff                	xor    %edi,%edi
   357ff:	48 01 f9             	add    %rdi,%rcx
   35802:	48 83 c1 01          	add    $0x1,%rcx
   35806:	48 83 c6 01          	add    $0x1,%rsi
   3580a:	48 8b 44 24 70       	mov    0x70(%rsp),%rax
   3580f:	48 89 70 20          	mov    %rsi,0x20(%rax)
   35813:	48 39 e9             	cmp    %rbp,%rcx
   35816:	0f 83 f4 01 00 00    	jae    35a10 <read_line_info+0x900>
   3581c:	80 39 00             	cmpb   $0x0,(%rcx)
   3581f:	0f 84 eb 01 00 00    	je     35a10 <read_line_info+0x900>
   35825:	48 89 ea             	mov    %rbp,%rdx
   35828:	48 29 ca             	sub    %rcx,%rdx
   3582b:	74 d0                	je     357fd <read_line_info+0x6ed>
   3582d:	48 89 d8             	mov    %rbx,%rax
   35830:	48 29 c8             	sub    %rcx,%rax
   35833:	31 ff                	xor    %edi,%edi
   35835:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   3583c:	00 00 00 
   3583f:	90                   	nop
   35840:	48 39 f8             	cmp    %rdi,%rax
   35843:	74 0d                	je     35852 <read_line_info+0x742>
   35845:	80 7c 39 01 00       	cmpb   $0x0,0x1(%rcx,%rdi,1)
   3584a:	48 8d 7f 01          	lea    0x1(%rdi),%rdi
   3584e:	75 f0                	jne    35840 <read_line_info+0x730>
   35850:	eb ad                	jmp    357ff <read_line_info+0x6ef>
   35852:	48 89 d7             	mov    %rdx,%rdi
   35855:	eb a8                	jmp    357ff <read_line_info+0x6ef>
   35857:	0f be 45 01          	movsbl 0x1(%rbp),%eax
   3585b:	41 89 44 24 0c       	mov    %eax,0xc(%r12)
   35860:	48 83 fb 02          	cmp    $0x2,%rbx
   35864:	0f 85 fa 01 00 00    	jne    35a64 <read_line_info+0x954>
   3586a:	48 83 c5 02          	add    $0x2,%rbp
   3586e:	85 d2                	test   %edx,%edx
   35870:	0f 85 cc fe ff ff    	jne    35742 <read_line_info+0x632>
   35876:	41 89 e9             	mov    %ebp,%r9d
   35879:	44 2b 4c 24 08       	sub    0x8(%rsp),%r9d
   3587e:	48 8d 15 42 96 00 00 	lea    0x9642(%rip),%rdx        # 3eec7 <elf_crc32.crc32_table+0x7a7>
   35885:	48 8d 0d 2b 96 00 00 	lea    0x962b(%rip),%rcx        # 3eeb7 <elf_crc32.crc32_table+0x797>
   3588c:	48 8d 9c 24 e0 00 00 	lea    0xe0(%rsp),%rbx
   35893:	00 
   35894:	be c8 00 00 00       	mov    $0xc8,%esi
   35899:	48 89 df             	mov    %rbx,%rdi
   3589c:	4c 8b 44 24 68       	mov    0x68(%rsp),%r8
   358a1:	31 c0                	xor    %eax,%eax
   358a3:	e8 68 e7 fc ff       	callq  4010 <snprintf@plt>
   358a8:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
   358ad:	48 89 de             	mov    %rbx,%rsi
   358b0:	31 d2                	xor    %edx,%edx
   358b2:	41 ff d7             	callq  *%r15
   358b5:	ba 01 00 00 00       	mov    $0x1,%edx
   358ba:	e9 83 fe ff ff       	jmpq   35742 <read_line_info+0x632>
   358bf:	49 8d 44 24 28       	lea    0x28(%r12),%rax
   358c4:	48 89 84 24 c8 00 00 	mov    %rax,0xc8(%rsp)
   358cb:	00 
   358cc:	49 c7 44 24 28 00 00 	movq   $0x0,0x28(%r12)
   358d3:	00 00 
   358d5:	31 c0                	xor    %eax,%eax
   358d7:	41 80 7d 00 00       	cmpb   $0x0,0x0(%r13)
   358dc:	0f 85 ba 01 00 00    	jne    35a9c <read_line_info+0x98c>
   358e2:	44 8b 54 24 60       	mov    0x60(%rsp),%r10d
   358e7:	4d 85 f6             	test   %r14,%r14
   358ea:	0f 84 28 07 00 00    	je     36018 <read_line_info+0xf08>
   358f0:	4d 8d 4d 01          	lea    0x1(%r13),%r9
   358f4:	48 8b 44 24 70       	mov    0x70(%rsp),%rax
   358f9:	48 c7 40 30 00 00 00 	movq   $0x0,0x30(%rax)
   35900:	00 
   35901:	49 83 fe 02          	cmp    $0x2,%r14
   35905:	0f 8c 2e 02 00 00    	jl     35b39 <read_line_info+0xa29>
   3590b:	4d 01 f5             	add    %r14,%r13
   3590e:	4d 8d 45 ff          	lea    -0x1(%r13),%r8
   35912:	31 f6                	xor    %esi,%esi
   35914:	4c 89 c9             	mov    %r9,%rcx
   35917:	80 39 00             	cmpb   $0x0,(%rcx)
   3591a:	75 2a                	jne    35946 <read_line_info+0x836>
   3591c:	e9 1a 02 00 00       	jmpq   35b3b <read_line_info+0xa2b>
   35921:	48 01 c3             	add    %rax,%rbx
   35924:	48 83 c6 01          	add    $0x1,%rsi
   35928:	48 8b 44 24 70       	mov    0x70(%rsp),%rax
   3592d:	48 89 70 30          	mov    %rsi,0x30(%rax)
   35931:	48 89 d9             	mov    %rbx,%rcx
   35934:	4c 39 eb             	cmp    %r13,%rbx
   35937:	0f 83 fe 01 00 00    	jae    35b3b <read_line_info+0xa2b>
   3593d:	80 39 00             	cmpb   $0x0,(%rcx)
   35940:	0f 84 f5 01 00 00    	je     35b3b <read_line_info+0xa2b>
   35946:	4c 89 ef             	mov    %r13,%rdi
   35949:	48 29 cf             	sub    %rcx,%rdi
   3594c:	74 24                	je     35972 <read_line_info+0x862>
   3594e:	4c 89 c0             	mov    %r8,%rax
   35951:	48 29 c8             	sub    %rcx,%rax
   35954:	31 d2                	xor    %edx,%edx
   35956:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   3595d:	00 00 00 
   35960:	48 39 d0             	cmp    %rdx,%rax
   35963:	74 11                	je     35976 <read_line_info+0x866>
   35965:	80 7c 11 01 00       	cmpb   $0x0,0x1(%rcx,%rdx,1)
   3596a:	48 8d 52 01          	lea    0x1(%rdx),%rdx
   3596e:	75 f0                	jne    35960 <read_line_info+0x850>
   35970:	eb 07                	jmp    35979 <read_line_info+0x869>
   35972:	31 d2                	xor    %edx,%edx
   35974:	eb 03                	jmp    35979 <read_line_info+0x869>
   35976:	48 89 fa             	mov    %rdi,%rdx
   35979:	48 8d 1c 0a          	lea    (%rdx,%rcx,1),%rbx
   3597d:	48 83 c3 01          	add    $0x1,%rbx
   35981:	bf 01 00 00 00       	mov    $0x1,%edi
   35986:	80 7c 0a 01 00       	cmpb   $0x0,0x1(%rdx,%rcx,1)
   3598b:	bd 01 00 00 00       	mov    $0x1,%ebp
   35990:	79 19                	jns    359ab <read_line_info+0x89b>
   35992:	48 8d 04 11          	lea    (%rcx,%rdx,1),%rax
   35996:	48 83 c0 02          	add    $0x2,%rax
   3599a:	bd 01 00 00 00       	mov    $0x1,%ebp
   3599f:	90                   	nop
   359a0:	80 7c 28 ff 00       	cmpb   $0x0,-0x1(%rax,%rbp,1)
   359a5:	48 8d 6d 01          	lea    0x1(%rbp),%rbp
   359a9:	78 f5                	js     359a0 <read_line_info+0x890>
   359ab:	80 3c 2b 00          	cmpb   $0x0,(%rbx,%rbp,1)
   359af:	48 8d 1c 2b          	lea    (%rbx,%rbp,1),%rbx
   359b3:	79 26                	jns    359db <read_line_info+0x8cb>
   359b5:	48 8d 04 2a          	lea    (%rdx,%rbp,1),%rax
   359b9:	48 01 c8             	add    %rcx,%rax
   359bc:	48 83 c0 02          	add    $0x2,%rax
   359c0:	bf 01 00 00 00       	mov    $0x1,%edi
   359c5:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   359cc:	00 00 00 
   359cf:	90                   	nop
   359d0:	80 7c 38 ff 00       	cmpb   $0x0,-0x1(%rax,%rdi,1)
   359d5:	48 8d 7f 01          	lea    0x1(%rdi),%rdi
   359d9:	78 f5                	js     359d0 <read_line_info+0x8c0>
   359db:	b8 01 00 00 00       	mov    $0x1,%eax
   359e0:	80 3c 3b 00          	cmpb   $0x0,(%rbx,%rdi,1)
   359e4:	48 8d 1c 3b          	lea    (%rbx,%rdi,1),%rbx
   359e8:	0f 89 33 ff ff ff    	jns    35921 <read_line_info+0x811>
   359ee:	48 01 ea             	add    %rbp,%rdx
   359f1:	48 01 fa             	add    %rdi,%rdx
   359f4:	48 01 d1             	add    %rdx,%rcx
   359f7:	48 83 c1 02          	add    $0x2,%rcx
   359fb:	b8 01 00 00 00       	mov    $0x1,%eax
   35a00:	80 7c 01 ff 00       	cmpb   $0x0,-0x1(%rcx,%rax,1)
   35a05:	48 8d 40 01          	lea    0x1(%rax),%rax
   35a09:	78 f5                	js     35a00 <read_line_info+0x8f0>
   35a0b:	e9 11 ff ff ff       	jmpq   35921 <read_line_info+0x811>
   35a10:	48 8b 44 24 70       	mov    0x70(%rsp),%rax
   35a15:	48 8d 68 28          	lea    0x28(%rax),%rbp
   35a19:	48 c7 40 28 00 00 00 	movq   $0x0,0x28(%rax)
   35a20:	00 
   35a21:	48 85 f6             	test   %rsi,%rsi
   35a24:	48 89 ac 24 c8 00 00 	mov    %rbp,0xc8(%rsp)
   35a2b:	00 
   35a2c:	74 61                	je     35a8f <read_line_info+0x97f>
   35a2e:	48 c1 e6 03          	shl    $0x3,%rsi
   35a32:	48 8b 54 24 40       	mov    0x40(%rsp),%rdx
   35a37:	48 8b 4c 24 48       	mov    0x48(%rsp),%rcx
   35a3c:	48 8b 7c 24 58       	mov    0x58(%rsp),%rdi
   35a41:	e8 fa b3 ff ff       	callq  30e40 <__rdos_backtrace_alloc>
   35a46:	48 89 45 00          	mov    %rax,0x0(%rbp)
   35a4a:	48 85 c0             	test   %rax,%rax
   35a4d:	4c 8b a4 24 88 00 00 	mov    0x88(%rsp),%r12
   35a54:	00 
   35a55:	4c 8b bc 24 80 00 00 	mov    0x80(%rsp),%r15
   35a5c:	00 
   35a5d:	75 32                	jne    35a91 <read_line_info+0x981>
   35a5f:	e9 ab f8 ff ff       	jmpq   3530f <read_line_info+0x1ff>
   35a64:	0f b6 45 02          	movzbl 0x2(%rbp),%eax
   35a68:	41 89 44 24 10       	mov    %eax,0x10(%r12)
   35a6d:	48 83 fb 03          	cmp    $0x3,%rbx
   35a71:	0f 85 b1 00 00 00    	jne    35b28 <read_line_info+0xa18>
   35a77:	48 83 c5 03          	add    $0x3,%rbp
   35a7b:	85 d2                	test   %edx,%edx
   35a7d:	0f 84 12 06 00 00    	je     36095 <read_line_info+0xf85>
   35a83:	41 89 d0             	mov    %edx,%r8d
   35a86:	31 db                	xor    %ebx,%ebx
   35a88:	31 c0                	xor    %eax,%eax
   35a8a:	e9 c3 fc ff ff       	jmpq   35752 <read_line_info+0x642>
   35a8f:	31 c0                	xor    %eax,%eax
   35a91:	41 80 7d 00 00       	cmpb   $0x0,0x0(%r13)
   35a96:	0f 84 46 fe ff ff    	je     358e2 <read_line_info+0x7d2>
   35a9c:	83 7c 24 60 00       	cmpl   $0x0,0x60(%rsp)
   35aa1:	4c 8b a4 24 88 00 00 	mov    0x88(%rsp),%r12
   35aa8:	00 
   35aa9:	4c 8b bc 24 80 00 00 	mov    0x80(%rsp),%r15
   35ab0:	00 
   35ab1:	0f 85 58 f8 ff ff    	jne    3530f <read_line_info+0x1ff>
   35ab7:	31 c9                	xor    %ecx,%ecx
   35ab9:	4d 89 e9             	mov    %r13,%r9
   35abc:	4c 8b 7c 24 78       	mov    0x78(%rsp),%r15
   35ac1:	4c 8b 44 24 68       	mov    0x68(%rsp),%r8
   35ac6:	44 8b 54 24 60       	mov    0x60(%rsp),%r10d
   35acb:	48 8b 94 24 c8 00 00 	mov    0xc8(%rsp),%rdx
   35ad2:	00 
   35ad3:	4c 89 2c c8          	mov    %r13,(%rax,%rcx,8)
   35ad7:	31 c0                	xor    %eax,%eax
   35ad9:	4d 85 f6             	test   %r14,%r14
   35adc:	74 16                	je     35af4 <read_line_info+0x9e4>
   35ade:	66 90                	xchg   %ax,%ax
   35ae0:	41 80 7c 05 00 00    	cmpb   $0x0,0x0(%r13,%rax,1)
   35ae6:	74 0c                	je     35af4 <read_line_info+0x9e4>
   35ae8:	48 83 c0 01          	add    $0x1,%rax
   35aec:	49 39 c6             	cmp    %rax,%r14
   35aef:	75 ef                	jne    35ae0 <read_line_info+0x9d0>
   35af1:	4c 89 f0             	mov    %r14,%rax
   35af4:	48 83 c0 01          	add    $0x1,%rax
   35af8:	49 29 c6             	sub    %rax,%r14
   35afb:	0f 82 cf 04 00 00    	jb     35fd0 <read_line_info+0xec0>
   35b01:	4e 8d 0c 28          	lea    (%rax,%r13,1),%r9
   35b05:	41 80 7c 05 00 00    	cmpb   $0x0,0x0(%r13,%rax,1)
   35b0b:	0f 84 fb 04 00 00    	je     3600c <read_line_info+0xefc>
   35b11:	48 83 c1 01          	add    $0x1,%rcx
   35b15:	48 8b 02             	mov    (%rdx),%rax
   35b18:	4d 89 cd             	mov    %r9,%r13
   35b1b:	4c 89 2c c8          	mov    %r13,(%rax,%rcx,8)
   35b1f:	31 c0                	xor    %eax,%eax
   35b21:	4d 85 f6             	test   %r14,%r14
   35b24:	75 ba                	jne    35ae0 <read_line_info+0x9d0>
   35b26:	eb cc                	jmp    35af4 <read_line_info+0x9e4>
   35b28:	48 83 c3 fc          	add    $0xfffffffffffffffc,%rbx
   35b2c:	0f b6 45 03          	movzbl 0x3(%rbp),%eax
   35b30:	48 83 c5 04          	add    $0x4,%rbp
   35b34:	e9 16 fc ff ff       	jmpq   3574f <read_line_info+0x63f>
   35b39:	31 f6                	xor    %esi,%esi
   35b3b:	44 89 d3             	mov    %r10d,%ebx
   35b3e:	48 c1 e6 03          	shl    $0x3,%rsi
   35b42:	48 8b 54 24 40       	mov    0x40(%rsp),%rdx
   35b47:	48 8b 4c 24 48       	mov    0x48(%rsp),%rcx
   35b4c:	48 8b 7c 24 58       	mov    0x58(%rsp),%rdi
   35b51:	4c 89 cd             	mov    %r9,%rbp
   35b54:	e8 e7 b2 ff ff       	callq  30e40 <__rdos_backtrace_alloc>
   35b59:	48 8b 4c 24 70       	mov    0x70(%rsp),%rcx
   35b5e:	48 89 41 38          	mov    %rax,0x38(%rcx)
   35b62:	48 85 c0             	test   %rax,%rax
   35b65:	4c 8b a4 24 88 00 00 	mov    0x88(%rsp),%r12
   35b6c:	00 
   35b6d:	4c 8b bc 24 80 00 00 	mov    0x80(%rsp),%r15
   35b74:	00 
   35b75:	0f 84 94 f7 ff ff    	je     3530f <read_line_info+0x1ff>
   35b7b:	49 89 e9             	mov    %rbp,%r9
   35b7e:	85 db                	test   %ebx,%ebx
   35b80:	0f 94 c0             	sete   %al
   35b83:	80 7d 00 00          	cmpb   $0x0,0x0(%rbp)
   35b87:	0f 84 d4 04 00 00    	je     36061 <read_line_info+0xf51>
   35b8d:	89 d9                	mov    %ebx,%ecx
   35b8f:	49 83 c6 ff          	add    $0xffffffffffffffff,%r14
   35b93:	31 d2                	xor    %edx,%edx
   35b95:	48 89 94 24 d0 00 00 	mov    %rdx,0xd0(%rsp)
   35b9c:	00 
   35b9d:	89 4c 24 60          	mov    %ecx,0x60(%rsp)
   35ba1:	a8 01                	test   $0x1,%al
   35ba3:	4c 8b a4 24 88 00 00 	mov    0x88(%rsp),%r12
   35baa:	00 
   35bab:	4c 8b bc 24 80 00 00 	mov    0x80(%rsp),%r15
   35bb2:	00 
   35bb3:	0f 84 56 f7 ff ff    	je     3530f <read_line_info+0x1ff>
   35bb9:	4d 85 f6             	test   %r14,%r14
   35bbc:	74 1f                	je     35bdd <read_line_info+0xacd>
   35bbe:	49 8d 46 ff          	lea    -0x1(%r14),%rax
   35bc2:	45 31 ed             	xor    %r13d,%r13d
   35bc5:	4c 8b 44 24 68       	mov    0x68(%rsp),%r8
   35bca:	4c 39 e8             	cmp    %r13,%rax
   35bcd:	74 24                	je     35bf3 <read_line_info+0xae3>
   35bcf:	43 80 7c 29 01 00    	cmpb   $0x0,0x1(%r9,%r13,1)
   35bd5:	4d 8d 6d 01          	lea    0x1(%r13),%r13
   35bd9:	75 ef                	jne    35bca <read_line_info+0xaba>
   35bdb:	eb 19                	jmp    35bf6 <read_line_info+0xae6>
   35bdd:	45 31 ed             	xor    %r13d,%r13d
   35be0:	4c 8b 44 24 68       	mov    0x68(%rsp),%r8
   35be5:	49 83 c5 01          	add    $0x1,%r13
   35be9:	4d 29 ee             	sub    %r13,%r14
   35bec:	73 15                	jae    35c03 <read_line_info+0xaf3>
   35bee:	e9 f1 04 00 00       	jmpq   360e4 <read_line_info+0xfd4>
   35bf3:	4d 89 f5             	mov    %r14,%r13
   35bf6:	49 83 c5 01          	add    $0x1,%r13
   35bfa:	4d 29 ee             	sub    %r13,%r14
   35bfd:	0f 82 e1 04 00 00    	jb     360e4 <read_line_info+0xfd4>
   35c03:	4d 01 cd             	add    %r9,%r13
   35c06:	45 31 e4             	xor    %r12d,%r12d
   35c09:	31 ed                	xor    %ebp,%ebp
   35c0b:	31 c0                	xor    %eax,%eax
   35c0d:	4c 89 8c 24 c0 00 00 	mov    %r9,0xc0(%rsp)
   35c14:	00 
   35c15:	4d 85 f6             	test   %r14,%r14
   35c18:	75 26                	jne    35c40 <read_line_info+0xb30>
   35c1a:	e9 8d 00 00 00       	jmpq   35cac <read_line_info+0xb9c>
   35c1f:	89 da                	mov    %ebx,%edx
   35c21:	83 e2 7f             	and    $0x7f,%edx
   35c24:	89 e9                	mov    %ebp,%ecx
   35c26:	48 d3 e2             	shl    %cl,%rdx
   35c29:	49 09 d4             	or     %rdx,%r12
   35c2c:	49 83 c6 ff          	add    $0xffffffffffffffff,%r14
   35c30:	83 c5 07             	add    $0x7,%ebp
   35c33:	84 db                	test   %bl,%bl
   35c35:	0f 89 ce 00 00 00    	jns    35d09 <read_line_info+0xbf9>
   35c3b:	4d 85 f6             	test   %r14,%r14
   35c3e:	74 6c                	je     35cac <read_line_info+0xb9c>
   35c40:	41 0f b6 5d 00       	movzbl 0x0(%r13),%ebx
   35c45:	49 83 c5 01          	add    $0x1,%r13
   35c49:	83 fd 3f             	cmp    $0x3f,%ebp
   35c4c:	76 d1                	jbe    35c1f <read_line_info+0xb0f>
   35c4e:	85 c0                	test   %eax,%eax
   35c50:	75 da                	jne    35c2c <read_line_info+0xb1c>
   35c52:	45 89 e9             	mov    %r13d,%r9d
   35c55:	44 2b 4c 24 08       	sub    0x8(%rsp),%r9d
   35c5a:	be c8 00 00 00       	mov    $0xc8,%esi
   35c5f:	4c 8d bc 24 e0 00 00 	lea    0xe0(%rsp),%r15
   35c66:	00 
   35c67:	4c 89 ff             	mov    %r15,%rdi
   35c6a:	48 8d 15 56 92 00 00 	lea    0x9256(%rip),%rdx        # 3eec7 <elf_crc32.crc32_table+0x7a7>
   35c71:	48 8d 0d e6 92 00 00 	lea    0x92e6(%rip),%rcx        # 3ef5e <elf_crc32.crc32_table+0x83e>
   35c78:	4c 8b 44 24 68       	mov    0x68(%rsp),%r8
   35c7d:	31 c0                	xor    %eax,%eax
   35c7f:	e8 8c e3 fc ff       	callq  4010 <snprintf@plt>
   35c84:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
   35c89:	4c 89 fe             	mov    %r15,%rsi
   35c8c:	31 d2                	xor    %edx,%edx
   35c8e:	ff 54 24 78          	callq  *0x78(%rsp)
   35c92:	4c 8b 8c 24 c0 00 00 	mov    0xc0(%rsp),%r9
   35c99:	00 
   35c9a:	b8 01 00 00 00       	mov    $0x1,%eax
   35c9f:	49 83 c6 ff          	add    $0xffffffffffffffff,%r14
   35ca3:	83 c5 07             	add    $0x7,%ebp
   35ca6:	84 db                	test   %bl,%bl
   35ca8:	78 91                	js     35c3b <read_line_info+0xb2b>
   35caa:	eb 5d                	jmp    35d09 <read_line_info+0xbf9>
   35cac:	83 7c 24 60 00       	cmpl   $0x0,0x60(%rsp)
   35cb1:	75 50                	jne    35d03 <read_line_info+0xbf3>
   35cb3:	45 89 e9             	mov    %r13d,%r9d
   35cb6:	44 2b 4c 24 08       	sub    0x8(%rsp),%r9d
   35cbb:	be c8 00 00 00       	mov    $0xc8,%esi
   35cc0:	48 8d 9c 24 e0 00 00 	lea    0xe0(%rsp),%rbx
   35cc7:	00 
   35cc8:	48 89 df             	mov    %rbx,%rdi
   35ccb:	48 8d 15 f5 91 00 00 	lea    0x91f5(%rip),%rdx        # 3eec7 <elf_crc32.crc32_table+0x7a7>
   35cd2:	48 8d 0d de 91 00 00 	lea    0x91de(%rip),%rcx        # 3eeb7 <elf_crc32.crc32_table+0x797>
   35cd9:	4c 8b 44 24 68       	mov    0x68(%rsp),%r8
   35cde:	31 c0                	xor    %eax,%eax
   35ce0:	e8 2b e3 fc ff       	callq  4010 <snprintf@plt>
   35ce5:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
   35cea:	48 89 de             	mov    %rbx,%rsi
   35ced:	31 d2                	xor    %edx,%edx
   35cef:	ff 54 24 78          	callq  *0x78(%rsp)
   35cf3:	4c 8b 8c 24 c0 00 00 	mov    0xc0(%rsp),%r9
   35cfa:	00 
   35cfb:	c7 44 24 60 01 00 00 	movl   $0x1,0x60(%rsp)
   35d02:	00 
   35d03:	45 31 f6             	xor    %r14d,%r14d
   35d06:	45 31 e4             	xor    %r12d,%r12d
   35d09:	41 80 39 2f          	cmpb   $0x2f,(%r9)
   35d0d:	0f 84 e1 00 00 00    	je     35df4 <read_line_info+0xce4>
   35d13:	4d 85 e4             	test   %r12,%r12
   35d16:	74 26                	je     35d3e <read_line_info+0xc2e>
   35d18:	49 8d 44 24 ff       	lea    -0x1(%r12),%rax
   35d1d:	48 8b 4c 24 70       	mov    0x70(%rsp),%rcx
   35d22:	48 3b 41 20          	cmp    0x20(%rcx),%rax
   35d26:	0f 83 ba 16 00 00    	jae    373e6 <read_line_info+0x22d6>
   35d2c:	48 8b 84 24 c8 00 00 	mov    0xc8(%rsp),%rax
   35d33:	00 
   35d34:	48 8b 00             	mov    (%rax),%rax
   35d37:	4a 8b 7c e0 f8       	mov    -0x8(%rax,%r12,8),%rdi
   35d3c:	eb 15                	jmp    35d53 <read_line_info+0xc43>
   35d3e:	48 8b 84 24 b8 00 00 	mov    0xb8(%rsp),%rax
   35d45:	00 
   35d46:	48 8b 78 38          	mov    0x38(%rax),%rdi
   35d4a:	48 85 ff             	test   %rdi,%rdi
   35d4d:	0f 84 a1 00 00 00    	je     35df4 <read_line_info+0xce4>
   35d53:	48 89 bc 24 b0 01 00 	mov    %rdi,0x1b0(%rsp)
   35d5a:	00 
   35d5b:	e8 68 e3 fc ff       	callq  40c8 <strlen@plt>
   35d60:	48 89 c3             	mov    %rax,%rbx
   35d63:	48 8b bc 24 c0 00 00 	mov    0xc0(%rsp),%rdi
   35d6a:	00 
   35d6b:	e8 58 e3 fc ff       	callq  40c8 <strlen@plt>
   35d70:	48 89 84 24 a8 01 00 	mov    %rax,0x1a8(%rsp)
   35d77:	00 
   35d78:	48 89 dd             	mov    %rbx,%rbp
   35d7b:	48 8d 34 03          	lea    (%rbx,%rax,1),%rsi
   35d7f:	48 83 c6 02          	add    $0x2,%rsi
   35d83:	48 8b 54 24 40       	mov    0x40(%rsp),%rdx
   35d88:	48 8b 4c 24 48       	mov    0x48(%rsp),%rcx
   35d8d:	48 8b 7c 24 58       	mov    0x58(%rsp),%rdi
   35d92:	e8 a9 b0 ff ff       	callq  30e40 <__rdos_backtrace_alloc>
   35d97:	48 8b 8c 24 c0 00 00 	mov    0xc0(%rsp),%rcx
   35d9e:	00 
   35d9f:	48 85 c0             	test   %rax,%rax
   35da2:	4c 8b a4 24 88 00 00 	mov    0x88(%rsp),%r12
   35da9:	00 
   35daa:	4c 8b bc 24 80 00 00 	mov    0x80(%rsp),%r15
   35db1:	00 
   35db2:	0f 84 57 f5 ff ff    	je     3530f <read_line_info+0x1ff>
   35db8:	48 89 c3             	mov    %rax,%rbx
   35dbb:	48 89 c7             	mov    %rax,%rdi
   35dbe:	48 8b b4 24 b0 01 00 	mov    0x1b0(%rsp),%rsi
   35dc5:	00 
   35dc6:	48 89 ea             	mov    %rbp,%rdx
   35dc9:	49 89 cf             	mov    %rcx,%r15
   35dcc:	e8 07 e3 fc ff       	callq  40d8 <memcpy@plt>
   35dd1:	c6 04 2b 2f          	movb   $0x2f,(%rbx,%rbp,1)
   35dd5:	48 8d 3c 2b          	lea    (%rbx,%rbp,1),%rdi
   35dd9:	48 83 c7 01          	add    $0x1,%rdi
   35ddd:	48 8b 94 24 a8 01 00 	mov    0x1a8(%rsp),%rdx
   35de4:	00 
   35de5:	48 83 c2 01          	add    $0x1,%rdx
   35de9:	4c 89 fe             	mov    %r15,%rsi
   35dec:	e8 e7 e2 fc ff       	callq  40d8 <memcpy@plt>
   35df1:	49 89 d9             	mov    %rbx,%r9
   35df4:	48 8b 44 24 70       	mov    0x70(%rsp),%rax
   35df9:	48 8b 40 38          	mov    0x38(%rax),%rax
   35dfd:	48 8b 8c 24 d0 00 00 	mov    0xd0(%rsp),%rcx
   35e04:	00 
   35e05:	4c 89 0c c8          	mov    %r9,(%rax,%rcx,8)
   35e09:	31 db                	xor    %ebx,%ebx
   35e0b:	31 c0                	xor    %eax,%eax
   35e0d:	4c 8b 64 24 68       	mov    0x68(%rsp),%r12
   35e12:	4d 85 f6             	test   %r14,%r14
   35e15:	75 1e                	jne    35e35 <read_line_info+0xd25>
   35e17:	eb 73                	jmp    35e8c <read_line_info+0xd7c>
   35e19:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   35e20:	49 83 c6 ff          	add    $0xffffffffffffffff,%r14
   35e24:	83 c3 07             	add    $0x7,%ebx
   35e27:	40 84 ed             	test   %bpl,%bpl
   35e2a:	0f 89 ac 00 00 00    	jns    35edc <read_line_info+0xdcc>
   35e30:	4d 85 f6             	test   %r14,%r14
   35e33:	74 57                	je     35e8c <read_line_info+0xd7c>
   35e35:	41 0f b6 6d 00       	movzbl 0x0(%r13),%ebp
   35e3a:	49 83 c5 01          	add    $0x1,%r13
   35e3e:	83 fb 40             	cmp    $0x40,%ebx
   35e41:	72 dd                	jb     35e20 <read_line_info+0xd10>
   35e43:	85 c0                	test   %eax,%eax
   35e45:	75 d9                	jne    35e20 <read_line_info+0xd10>
   35e47:	45 89 e9             	mov    %r13d,%r9d
   35e4a:	44 2b 4c 24 08       	sub    0x8(%rsp),%r9d
   35e4f:	be c8 00 00 00       	mov    $0xc8,%esi
   35e54:	4c 8d bc 24 e0 00 00 	lea    0xe0(%rsp),%r15
   35e5b:	00 
   35e5c:	4c 89 ff             	mov    %r15,%rdi
   35e5f:	48 8d 15 61 90 00 00 	lea    0x9061(%rip),%rdx        # 3eec7 <elf_crc32.crc32_table+0x7a7>
   35e66:	48 8d 0d f1 90 00 00 	lea    0x90f1(%rip),%rcx        # 3ef5e <elf_crc32.crc32_table+0x83e>
   35e6d:	4d 89 e0             	mov    %r12,%r8
   35e70:	31 c0                	xor    %eax,%eax
   35e72:	e8 99 e1 fc ff       	callq  4010 <snprintf@plt>
   35e77:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
   35e7c:	4c 89 fe             	mov    %r15,%rsi
   35e7f:	31 d2                	xor    %edx,%edx
   35e81:	ff 54 24 78          	callq  *0x78(%rsp)
   35e85:	b8 01 00 00 00       	mov    $0x1,%eax
   35e8a:	eb 94                	jmp    35e20 <read_line_info+0xd10>
   35e8c:	83 7c 24 60 00       	cmpl   $0x0,0x60(%rsp)
   35e91:	75 46                	jne    35ed9 <read_line_info+0xdc9>
   35e93:	45 89 e9             	mov    %r13d,%r9d
   35e96:	44 2b 4c 24 08       	sub    0x8(%rsp),%r9d
   35e9b:	be c8 00 00 00       	mov    $0xc8,%esi
   35ea0:	48 8d 9c 24 e0 00 00 	lea    0xe0(%rsp),%rbx
   35ea7:	00 
   35ea8:	48 89 df             	mov    %rbx,%rdi
   35eab:	48 8d 15 15 90 00 00 	lea    0x9015(%rip),%rdx        # 3eec7 <elf_crc32.crc32_table+0x7a7>
   35eb2:	48 8d 0d fe 8f 00 00 	lea    0x8ffe(%rip),%rcx        # 3eeb7 <elf_crc32.crc32_table+0x797>
   35eb9:	4d 89 e0             	mov    %r12,%r8
   35ebc:	31 c0                	xor    %eax,%eax
   35ebe:	e8 4d e1 fc ff       	callq  4010 <snprintf@plt>
   35ec3:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
   35ec8:	48 89 de             	mov    %rbx,%rsi
   35ecb:	31 d2                	xor    %edx,%edx
   35ecd:	ff 54 24 78          	callq  *0x78(%rsp)
   35ed1:	c7 44 24 60 01 00 00 	movl   $0x1,0x60(%rsp)
   35ed8:	00 
   35ed9:	45 31 f6             	xor    %r14d,%r14d
   35edc:	31 db                	xor    %ebx,%ebx
   35ede:	4d 89 e9             	mov    %r13,%r9
   35ee1:	31 c0                	xor    %eax,%eax
   35ee3:	4d 85 f6             	test   %r14,%r14
   35ee6:	75 19                	jne    35f01 <read_line_info+0xdf1>
   35ee8:	eb 70                	jmp    35f5a <read_line_info+0xe4a>
   35eea:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   35ef0:	49 83 c6 ff          	add    $0xffffffffffffffff,%r14
   35ef4:	83 c3 07             	add    $0x7,%ebx
   35ef7:	45 84 ed             	test   %r13b,%r13b
   35efa:	79 68                	jns    35f64 <read_line_info+0xe54>
   35efc:	4d 85 f6             	test   %r14,%r14
   35eff:	74 59                	je     35f5a <read_line_info+0xe4a>
   35f01:	45 0f b6 29          	movzbl (%r9),%r13d
   35f05:	49 83 c1 01          	add    $0x1,%r9
   35f09:	83 fb 40             	cmp    $0x40,%ebx
   35f0c:	72 e2                	jb     35ef0 <read_line_info+0xde0>
   35f0e:	85 c0                	test   %eax,%eax
   35f10:	75 de                	jne    35ef0 <read_line_info+0xde0>
   35f12:	4c 89 cd             	mov    %r9,%rbp
   35f15:	44 2b 4c 24 08       	sub    0x8(%rsp),%r9d
   35f1a:	be c8 00 00 00       	mov    $0xc8,%esi
   35f1f:	4c 8d bc 24 e0 00 00 	lea    0xe0(%rsp),%r15
   35f26:	00 
   35f27:	4c 89 ff             	mov    %r15,%rdi
   35f2a:	48 8d 15 96 8f 00 00 	lea    0x8f96(%rip),%rdx        # 3eec7 <elf_crc32.crc32_table+0x7a7>
   35f31:	48 8d 0d 26 90 00 00 	lea    0x9026(%rip),%rcx        # 3ef5e <elf_crc32.crc32_table+0x83e>
   35f38:	4d 89 e0             	mov    %r12,%r8
   35f3b:	31 c0                	xor    %eax,%eax
   35f3d:	e8 ce e0 fc ff       	callq  4010 <snprintf@plt>
   35f42:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
   35f47:	4c 89 fe             	mov    %r15,%rsi
   35f4a:	31 d2                	xor    %edx,%edx
   35f4c:	ff 54 24 78          	callq  *0x78(%rsp)
   35f50:	49 89 e9             	mov    %rbp,%r9
   35f53:	b8 01 00 00 00       	mov    $0x1,%eax
   35f58:	eb 96                	jmp    35ef0 <read_line_info+0xde0>
   35f5a:	83 7c 24 60 00       	cmpl   $0x0,0x60(%rsp)
   35f5f:	74 24                	je     35f85 <read_line_info+0xe75>
   35f61:	45 31 f6             	xor    %r14d,%r14d
   35f64:	8b 4c 24 60          	mov    0x60(%rsp),%ecx
   35f68:	48 83 84 24 d0 00 00 	addq   $0x1,0xd0(%rsp)
   35f6f:	00 01 
   35f71:	85 c9                	test   %ecx,%ecx
   35f73:	0f 94 c0             	sete   %al
   35f76:	41 80 39 00          	cmpb   $0x0,(%r9)
   35f7a:	0f 85 1d fc ff ff    	jne    35b9d <read_line_info+0xa8d>
   35f80:	e9 dc 00 00 00       	jmpq   36061 <read_line_info+0xf51>
   35f85:	4c 89 cb             	mov    %r9,%rbx
   35f88:	44 2b 4c 24 08       	sub    0x8(%rsp),%r9d
   35f8d:	be c8 00 00 00       	mov    $0xc8,%esi
   35f92:	48 8d ac 24 e0 00 00 	lea    0xe0(%rsp),%rbp
   35f99:	00 
   35f9a:	48 89 ef             	mov    %rbp,%rdi
   35f9d:	48 8d 15 23 8f 00 00 	lea    0x8f23(%rip),%rdx        # 3eec7 <elf_crc32.crc32_table+0x7a7>
   35fa4:	48 8d 0d 0c 8f 00 00 	lea    0x8f0c(%rip),%rcx        # 3eeb7 <elf_crc32.crc32_table+0x797>
   35fab:	4d 89 e0             	mov    %r12,%r8
   35fae:	31 c0                	xor    %eax,%eax
   35fb0:	e8 5b e0 fc ff       	callq  4010 <snprintf@plt>
   35fb5:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
   35fba:	48 89 ee             	mov    %rbp,%rsi
   35fbd:	31 d2                	xor    %edx,%edx
   35fbf:	ff 54 24 78          	callq  *0x78(%rsp)
   35fc3:	49 89 d9             	mov    %rbx,%r9
   35fc6:	b9 01 00 00 00       	mov    $0x1,%ecx
   35fcb:	45 31 f6             	xor    %r14d,%r14d
   35fce:	eb 98                	jmp    35f68 <read_line_info+0xe58>
   35fd0:	44 2b 4c 24 08       	sub    0x8(%rsp),%r9d
   35fd5:	48 8d 15 eb 8e 00 00 	lea    0x8eeb(%rip),%rdx        # 3eec7 <elf_crc32.crc32_table+0x7a7>
   35fdc:	48 8d 0d d4 8e 00 00 	lea    0x8ed4(%rip),%rcx        # 3eeb7 <elf_crc32.crc32_table+0x797>
   35fe3:	48 8d 9c 24 e0 00 00 	lea    0xe0(%rsp),%rbx
   35fea:	00 
   35feb:	be c8 00 00 00       	mov    $0xc8,%esi
   35ff0:	48 89 df             	mov    %rbx,%rdi
   35ff3:	31 c0                	xor    %eax,%eax
   35ff5:	e8 16 e0 fc ff       	callq  4010 <snprintf@plt>
   35ffa:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
   35fff:	48 89 de             	mov    %rbx,%rsi
   36002:	31 d2                	xor    %edx,%edx
   36004:	41 ff d7             	callq  *%r15
   36007:	e9 f3 f2 ff ff       	jmpq   352ff <read_line_info+0x1ef>
   3600c:	4d 89 cd             	mov    %r9,%r13
   3600f:	4d 85 f6             	test   %r14,%r14
   36012:	0f 85 d8 f8 ff ff    	jne    358f0 <read_line_info+0x7e0>
   36018:	45 85 d2             	test   %r10d,%r10d
   3601b:	4c 8b a4 24 88 00 00 	mov    0x88(%rsp),%r12
   36022:	00 
   36023:	4c 8b bc 24 80 00 00 	mov    0x80(%rsp),%r15
   3602a:	00 
   3602b:	0f 85 de f2 ff ff    	jne    3530f <read_line_info+0x1ff>
   36031:	44 2b 6c 24 08       	sub    0x8(%rsp),%r13d
   36036:	48 8d 15 8a 8e 00 00 	lea    0x8e8a(%rip),%rdx        # 3eec7 <elf_crc32.crc32_table+0x7a7>
   3603d:	48 8d 0d 73 8e 00 00 	lea    0x8e73(%rip),%rcx        # 3eeb7 <elf_crc32.crc32_table+0x797>
   36044:	48 8d 9c 24 e0 00 00 	lea    0xe0(%rsp),%rbx
   3604b:	00 
   3604c:	be c8 00 00 00       	mov    $0xc8,%esi
   36051:	48 89 df             	mov    %rbx,%rdi
   36054:	4c 8b 44 24 68       	mov    0x68(%rsp),%r8
   36059:	45 89 e9             	mov    %r13d,%r9d
   3605c:	e9 46 f7 ff ff       	jmpq   357a7 <read_line_info+0x697>
   36061:	84 c0                	test   %al,%al
   36063:	4c 8b a4 24 88 00 00 	mov    0x88(%rsp),%r12
   3606a:	00 
   3606b:	4c 8b bc 24 80 00 00 	mov    0x80(%rsp),%r15
   36072:	00 
   36073:	0f 84 96 f2 ff ff    	je     3530f <read_line_info+0x1ff>
   36079:	48 8b 54 24 70       	mov    0x70(%rsp),%rdx
   3607e:	48 83 7a 30 00       	cmpq   $0x0,0x30(%rdx)
   36083:	0f 84 98 00 00 00    	je     36121 <read_line_info+0x1011>
   36089:	48 8b 42 38          	mov    0x38(%rdx),%rax
   3608d:	4c 8b 38             	mov    (%rax),%r15
   36090:	e9 93 00 00 00       	jmpq   36128 <read_line_info+0x1018>
   36095:	41 89 e9             	mov    %ebp,%r9d
   36098:	44 2b 4c 24 08       	sub    0x8(%rsp),%r9d
   3609d:	48 8d 15 23 8e 00 00 	lea    0x8e23(%rip),%rdx        # 3eec7 <elf_crc32.crc32_table+0x7a7>
   360a4:	48 8d 0d 0c 8e 00 00 	lea    0x8e0c(%rip),%rcx        # 3eeb7 <elf_crc32.crc32_table+0x797>
   360ab:	31 db                	xor    %ebx,%ebx
   360ad:	4c 8d bc 24 e0 00 00 	lea    0xe0(%rsp),%r15
   360b4:	00 
   360b5:	be c8 00 00 00       	mov    $0xc8,%esi
   360ba:	4c 89 ff             	mov    %r15,%rdi
   360bd:	4c 8b 44 24 68       	mov    0x68(%rsp),%r8
   360c2:	31 c0                	xor    %eax,%eax
   360c4:	e8 47 df fc ff       	callq  4010 <snprintf@plt>
   360c9:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
   360ce:	4c 89 fe             	mov    %r15,%rsi
   360d1:	31 d2                	xor    %edx,%edx
   360d3:	ff 54 24 78          	callq  *0x78(%rsp)
   360d7:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   360dd:	31 c0                	xor    %eax,%eax
   360df:	e9 6e f6 ff ff       	jmpq   35752 <read_line_info+0x642>
   360e4:	44 2b 4c 24 08       	sub    0x8(%rsp),%r9d
   360e9:	48 8d 15 d7 8d 00 00 	lea    0x8dd7(%rip),%rdx        # 3eec7 <elf_crc32.crc32_table+0x7a7>
   360f0:	48 8d 0d c0 8d 00 00 	lea    0x8dc0(%rip),%rcx        # 3eeb7 <elf_crc32.crc32_table+0x797>
   360f7:	48 8d ac 24 e0 00 00 	lea    0xe0(%rsp),%rbp
   360fe:	00 
   360ff:	be c8 00 00 00       	mov    $0xc8,%esi
   36104:	48 89 ef             	mov    %rbp,%rdi
   36107:	31 c0                	xor    %eax,%eax
   36109:	e8 02 df fc ff       	callq  4010 <snprintf@plt>
   3610e:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
   36113:	48 89 ee             	mov    %rbp,%rsi
   36116:	31 d2                	xor    %edx,%edx
   36118:	ff 54 24 78          	callq  *0x78(%rsp)
   3611c:	e9 de f1 ff ff       	jmpq   352ff <read_line_info+0x1ef>
   36121:	4c 8d 3d cb 80 00 00 	lea    0x80cb(%rip),%r15        # 3e1f3 <str.0+0x3d3>
   36128:	4c 8b 74 24 58       	mov    0x58(%rsp),%r14
   3612d:	48 8b 84 24 b8 00 00 	mov    0xb8(%rsp),%rax
   36134:	00 
   36135:	48 8b 4c 24 30       	mov    0x30(%rsp),%rcx
   3613a:	40 b5 01             	mov    $0x1,%bpl
   3613d:	48 85 c9             	test   %rcx,%rcx
   36140:	0f 84 d0 11 00 00    	je     37316 <read_line_info+0x2206>
   36146:	48 83 c0 38          	add    $0x38,%rax
   3614a:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
   3614f:	41 bd 01 00 00 00    	mov    $0x1,%r13d
   36155:	31 c0                	xor    %eax,%eax
   36157:	45 31 e4             	xor    %r12d,%r12d
   3615a:	4c 89 7c 24 78       	mov    %r15,0x78(%rsp)
   3615f:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   36164:	48 8b 74 24 28       	mov    0x28(%rsp),%rsi
   36169:	4c 8d 4e 01          	lea    0x1(%rsi),%r9
   3616d:	4c 89 4c 24 28       	mov    %r9,0x28(%rsp)
   36172:	48 8d 51 ff          	lea    -0x1(%rcx),%rdx
   36176:	48 89 54 24 30       	mov    %rdx,0x30(%rsp)
   3617b:	0f b6 06             	movzbl (%rsi),%eax
   3617e:	48 8b 6c 24 70       	mov    0x70(%rsp),%rbp
   36183:	8b 7d 14             	mov    0x14(%rbp),%edi
   36186:	39 c7                	cmp    %eax,%edi
   36188:	0f 86 c9 01 00 00    	jbe    36357 <read_line_info+0x1247>
   3618e:	3c 0c                	cmp    $0xc,%al
   36190:	4c 89 64 24 10       	mov    %r12,0x10(%rsp)
   36195:	0f 87 ac 02 00 00    	ja     36447 <read_line_info+0x1337>
   3619b:	89 c0                	mov    %eax,%eax
   3619d:	48 8d 2d 94 8b 00 00 	lea    0x8b94(%rip),%rbp        # 3ed38 <elf_crc32.crc32_table+0x618>
   361a4:	48 63 44 85 00       	movslq 0x0(%rbp,%rax,4),%rax
   361a9:	48 01 e8             	add    %rbp,%rax
   361ac:	4c 8b 64 24 10       	mov    0x10(%rsp),%r12
   361b1:	ff e0                	jmpq   *%rax
   361b3:	48 85 d2             	test   %rdx,%rdx
   361b6:	0f 84 a3 00 00 00    	je     3625f <read_line_info+0x114f>
   361bc:	31 f6                	xor    %esi,%esi
   361be:	31 ed                	xor    %ebp,%ebp
   361c0:	45 31 f6             	xor    %r14d,%r14d
   361c3:	49 8d 41 01          	lea    0x1(%r9),%rax
   361c7:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   361cc:	48 83 c2 ff          	add    $0xffffffffffffffff,%rdx
   361d0:	48 89 54 24 30       	mov    %rdx,0x30(%rsp)
   361d5:	41 0f b6 19          	movzbl (%r9),%ebx
   361d9:	83 fd 3f             	cmp    $0x3f,%ebp
   361dc:	77 16                	ja     361f4 <read_line_info+0x10e4>
   361de:	89 d8                	mov    %ebx,%eax
   361e0:	83 e0 7f             	and    $0x7f,%eax
   361e3:	89 e9                	mov    %ebp,%ecx
   361e5:	48 d3 e0             	shl    %cl,%rax
   361e8:	49 09 c6             	or     %rax,%r14
   361eb:	84 db                	test   %bl,%bl
   361ed:	78 55                	js     36244 <read_line_info+0x1134>
   361ef:	e9 91 08 00 00       	jmpq   36a85 <read_line_info+0x1975>
   361f4:	85 f6                	test   %esi,%esi
   361f6:	75 44                	jne    3623c <read_line_info+0x112c>
   361f8:	4c 8b 44 24 18       	mov    0x18(%rsp),%r8
   361fd:	2b 44 24 20          	sub    0x20(%rsp),%eax
   36201:	be c8 00 00 00       	mov    $0xc8,%esi
   36206:	4c 8d a4 24 e0 00 00 	lea    0xe0(%rsp),%r12
   3620d:	00 
   3620e:	4c 89 e7             	mov    %r12,%rdi
   36211:	48 8d 15 af 8c 00 00 	lea    0x8caf(%rip),%rdx        # 3eec7 <elf_crc32.crc32_table+0x7a7>
   36218:	48 8d 0d 3f 8d 00 00 	lea    0x8d3f(%rip),%rcx        # 3ef5e <elf_crc32.crc32_table+0x83e>
   3621f:	41 89 c1             	mov    %eax,%r9d
   36222:	31 c0                	xor    %eax,%eax
   36224:	e8 e7 dd fc ff       	callq  4010 <snprintf@plt>
   36229:	48 8b 7c 24 48       	mov    0x48(%rsp),%rdi
   3622e:	4c 89 e6             	mov    %r12,%rsi
   36231:	31 d2                	xor    %edx,%edx
   36233:	ff 54 24 40          	callq  *0x40(%rsp)
   36237:	be 01 00 00 00       	mov    $0x1,%esi
   3623c:	84 db                	test   %bl,%bl
   3623e:	0f 89 41 08 00 00    	jns    36a85 <read_line_info+0x1975>
   36244:	83 c5 07             	add    $0x7,%ebp
   36247:	4c 8b 4c 24 28       	mov    0x28(%rsp),%r9
   3624c:	48 8b 54 24 30       	mov    0x30(%rsp),%rdx
   36251:	48 85 d2             	test   %rdx,%rdx
   36254:	0f 85 69 ff ff ff    	jne    361c3 <read_line_info+0x10b3>
   3625a:	4c 8b 64 24 10       	mov    0x10(%rsp),%r12
   3625f:	83 7c 24 50 00       	cmpl   $0x0,0x50(%rsp)
   36264:	75 45                	jne    362ab <read_line_info+0x119b>
   36266:	4c 8b 44 24 18       	mov    0x18(%rsp),%r8
   3626b:	44 2b 4c 24 20       	sub    0x20(%rsp),%r9d
   36270:	be c8 00 00 00       	mov    $0xc8,%esi
   36275:	48 8d 9c 24 e0 00 00 	lea    0xe0(%rsp),%rbx
   3627c:	00 
   3627d:	48 89 df             	mov    %rbx,%rdi
   36280:	48 8d 15 40 8c 00 00 	lea    0x8c40(%rip),%rdx        # 3eec7 <elf_crc32.crc32_table+0x7a7>
   36287:	48 8d 0d 29 8c 00 00 	lea    0x8c29(%rip),%rcx        # 3eeb7 <elf_crc32.crc32_table+0x797>
   3628e:	31 c0                	xor    %eax,%eax
   36290:	e8 7b dd fc ff       	callq  4010 <snprintf@plt>
   36295:	48 8b 7c 24 48       	mov    0x48(%rsp),%rdi
   3629a:	48 89 de             	mov    %rbx,%rsi
   3629d:	31 d2                	xor    %edx,%edx
   3629f:	ff 54 24 40          	callq  *0x40(%rsp)
   362a3:	c7 44 24 50 01 00 00 	movl   $0x1,0x50(%rsp)
   362aa:	00 
   362ab:	45 31 f6             	xor    %r14d,%r14d
   362ae:	4c 8b 4c 24 28       	mov    0x28(%rsp),%r9
   362b3:	4c 8b 44 24 30       	mov    0x30(%rsp),%r8
   362b8:	4d 85 c0             	test   %r8,%r8
   362bb:	0f 84 dc 07 00 00    	je     36a9d <read_line_info+0x198d>
   362c1:	49 8d 41 01          	lea    0x1(%r9),%rax
   362c5:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   362ca:	49 8d 48 ff          	lea    -0x1(%r8),%rcx
   362ce:	48 89 4c 24 30       	mov    %rcx,0x30(%rsp)
   362d3:	41 8a 19             	mov    (%r9),%bl
   362d6:	80 c3 ff             	add    $0xff,%bl
   362d9:	80 fb 03             	cmp    $0x3,%bl
   362dc:	0f 87 7e 09 00 00    	ja     36c60 <read_line_info+0x1b50>
   362e2:	31 f6                	xor    %esi,%esi
   362e4:	ba 01 00 00 00       	mov    $0x1,%edx
   362e9:	0f b6 fb             	movzbl %bl,%edi
   362ec:	48 8d 2d 79 8a 00 00 	lea    0x8a79(%rip),%rbp        # 3ed6c <elf_crc32.crc32_table+0x64c>
   362f3:	48 63 5c bd 00       	movslq 0x0(%rbp,%rdi,4),%rbx
   362f8:	48 01 eb             	add    %rbp,%rbx
   362fb:	48 8b 7c 24 78       	mov    0x78(%rsp),%rdi
   36300:	31 ed                	xor    %ebp,%ebp
   36302:	4c 8b 74 24 58       	mov    0x58(%rsp),%r14
   36307:	ff e3                	jmpq   *%rbx
   36309:	48 89 c7             	mov    %rax,%rdi
   3630c:	48 8b 94 24 b8 00 00 	mov    0xb8(%rsp),%rdx
   36313:	00 
   36314:	8b 52 20             	mov    0x20(%rdx),%edx
   36317:	83 c2 ff             	add    $0xffffffff,%edx
   3631a:	83 fa 07             	cmp    $0x7,%edx
   3631d:	0f 87 53 0e 00 00    	ja     37176 <read_line_info+0x2066>
   36323:	48 8d 35 52 8a 00 00 	lea    0x8a52(%rip),%rsi        # 3ed7c <elf_crc32.crc32_table+0x65c>
   3632a:	48 63 14 96          	movslq (%rsi,%rdx,4),%rdx
   3632e:	48 01 f2             	add    %rsi,%rdx
   36331:	ff e2                	jmpq   *%rdx
   36333:	48 85 c9             	test   %rcx,%rcx
   36336:	0f 84 2d 0f 00 00    	je     37269 <read_line_info+0x2159>
   3633c:	49 8d 49 02          	lea    0x2(%r9),%rcx
   36340:	48 89 4c 24 28       	mov    %rcx,0x28(%rsp)
   36345:	49 83 c0 fe          	add    $0xfffffffffffffffe,%r8
   36349:	4c 89 44 24 30       	mov    %r8,0x30(%rsp)
   3634e:	41 8a 59 01          	mov    0x1(%r9),%bl
   36352:	e9 a5 0f 00 00       	jmpq   372fc <read_line_info+0x21ec>
   36357:	29 f8                	sub    %edi,%eax
   36359:	31 d2                	xor    %edx,%edx
   3635b:	f7 75 10             	divl   0x10(%rbp)
   3635e:	89 d1                	mov    %edx,%ecx
   36360:	89 c6                	mov    %eax,%esi
   36362:	44 01 e6             	add    %r12d,%esi
   36365:	8b 45 04             	mov    0x4(%rbp),%eax
   36368:	0f af c6             	imul   %esi,%eax
   3636b:	8b 7d 08             	mov    0x8(%rbp),%edi
   3636e:	31 d2                	xor    %edx,%edx
   36370:	f7 f7                	div    %edi
   36372:	48 8b 5c 24 08       	mov    0x8(%rsp),%rbx
   36377:	48 01 c3             	add    %rax,%rbx
   3637a:	89 f0                	mov    %esi,%eax
   3637c:	31 d2                	xor    %edx,%edx
   3637e:	f7 f7                	div    %edi
   36380:	44 03 6d 0c          	add    0xc(%rbp),%r13d
   36384:	41 01 cd             	add    %ecx,%r13d
   36387:	48 8b 44 24 40       	mov    0x40(%rsp),%rax
   3638c:	48 8b 4c 24 48       	mov    0x48(%rsp),%rcx
   36391:	48 8b b4 24 a8 00 00 	mov    0xa8(%rsp),%rsi
   36398:	00 
   36399:	41 89 d4             	mov    %edx,%r12d
   3639c:	48 85 f6             	test   %rsi,%rsi
   3639f:	48 89 5c 24 08       	mov    %rbx,0x8(%rsp)
   363a4:	74 24                	je     363ca <read_line_info+0x12ba>
   363a6:	48 8b 94 24 90 00 00 	mov    0x90(%rsp),%rdx
   363ad:	00 
   363ae:	48 83 c6 ff          	add    $0xffffffffffffffff,%rsi
   363b2:	48 8d 34 76          	lea    (%rsi,%rsi,2),%rsi
   363b6:	48 39 1c f2          	cmp    %rbx,(%rdx,%rsi,8)
   363ba:	75 0e                	jne    363ca <read_line_info+0x12ba>
   363bc:	4c 39 7c f2 08       	cmp    %r15,0x8(%rdx,%rsi,8)
   363c1:	75 07                	jne    363ca <read_line_info+0x12ba>
   363c3:	44 39 6c f2 10       	cmp    %r13d,0x10(%rdx,%rsi,8)
   363c8:	74 50                	je     3641a <read_line_info+0x130a>
   363ca:	be 18 00 00 00       	mov    $0x18,%esi
   363cf:	4c 89 f7             	mov    %r14,%rdi
   363d2:	48 89 c2             	mov    %rax,%rdx
   363d5:	4c 8d 84 24 90 00 00 	lea    0x90(%rsp),%r8
   363dc:	00 
   363dd:	e8 ae aa ff ff       	callq  30e90 <__rdos_backtrace_vector_grow>
   363e2:	48 85 c0             	test   %rax,%rax
   363e5:	74 33                	je     3641a <read_line_info+0x130a>
   363e7:	48 8b 8c 24 d8 00 00 	mov    0xd8(%rsp),%rcx
   363ee:	00 
   363ef:	48 8b 49 08          	mov    0x8(%rcx),%rcx
   363f3:	48 03 4c 24 08       	add    0x8(%rsp),%rcx
   363f8:	48 89 08             	mov    %rcx,(%rax)
   363fb:	4c 89 78 08          	mov    %r15,0x8(%rax)
   363ff:	44 89 68 10          	mov    %r13d,0x10(%rax)
   36403:	48 8b 8c 24 a8 00 00 	mov    0xa8(%rsp),%rcx
   3640a:	00 
   3640b:	89 48 14             	mov    %ecx,0x14(%rax)
   3640e:	48 83 c1 01          	add    $0x1,%rcx
   36412:	48 89 8c 24 a8 00 00 	mov    %rcx,0xa8(%rsp)
   36419:	00 
   3641a:	48 8b 4c 24 30       	mov    0x30(%rsp),%rcx
   3641f:	44 89 ea             	mov    %r13d,%edx
   36422:	4c 89 ff             	mov    %r15,%rdi
   36425:	44 89 e6             	mov    %r12d,%esi
   36428:	48 8b 6c 24 08       	mov    0x8(%rsp),%rbp
   3642d:	48 89 e8             	mov    %rbp,%rax
   36430:	41 89 f4             	mov    %esi,%r12d
   36433:	49 89 ff             	mov    %rdi,%r15
   36436:	41 89 d5             	mov    %edx,%r13d
   36439:	48 85 c9             	test   %rcx,%rcx
   3643c:	0f 85 1d fd ff ff    	jne    3615f <read_line_info+0x104f>
   36442:	e9 cc 0e 00 00       	jmpq   37313 <read_line_info+0x2203>
   36447:	48 8b 4c 24 70       	mov    0x70(%rsp),%rcx
   3644c:	48 8b 49 18          	mov    0x18(%rcx),%rcx
   36450:	83 c0 ff             	add    $0xffffffff,%eax
   36453:	44 0f b6 34 01       	movzbl (%rcx,%rax,1),%r14d
   36458:	45 85 f6             	test   %r14d,%r14d
   3645b:	75 1c                	jne    36479 <read_line_info+0x1369>
   3645d:	4c 8b 74 24 58       	mov    0x58(%rsp),%r14
   36462:	eb b6                	jmp    3641a <read_line_info+0x130a>
   36464:	83 7c 24 50 00       	cmpl   $0x0,0x50(%rsp)
   36469:	0f 84 9a 00 00 00    	je     36509 <read_line_info+0x13f9>
   3646f:	41 83 c6 ff          	add    $0xffffffff,%r14d
   36473:	0f 84 8b 0e 00 00    	je     37304 <read_line_info+0x21f4>
   36479:	31 ed                	xor    %ebp,%ebp
   3647b:	31 c9                	xor    %ecx,%ecx
   3647d:	4c 8b 4c 24 28       	mov    0x28(%rsp),%r9
   36482:	48 8b 54 24 30       	mov    0x30(%rsp),%rdx
   36487:	48 85 d2             	test   %rdx,%rdx
   3648a:	75 18                	jne    364a4 <read_line_info+0x1394>
   3648c:	eb d6                	jmp    36464 <read_line_info+0x1354>
   3648e:	83 c5 07             	add    $0x7,%ebp
   36491:	84 db                	test   %bl,%bl
   36493:	79 da                	jns    3646f <read_line_info+0x135f>
   36495:	4c 8b 4c 24 28       	mov    0x28(%rsp),%r9
   3649a:	48 8b 54 24 30       	mov    0x30(%rsp),%rdx
   3649f:	48 85 d2             	test   %rdx,%rdx
   364a2:	74 c0                	je     36464 <read_line_info+0x1354>
   364a4:	49 8d 41 01          	lea    0x1(%r9),%rax
   364a8:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   364ad:	48 83 c2 ff          	add    $0xffffffffffffffff,%rdx
   364b1:	48 89 54 24 30       	mov    %rdx,0x30(%rsp)
   364b6:	41 0f b6 19          	movzbl (%r9),%ebx
   364ba:	83 fd 40             	cmp    $0x40,%ebp
   364bd:	72 cf                	jb     3648e <read_line_info+0x137e>
   364bf:	85 c9                	test   %ecx,%ecx
   364c1:	75 cb                	jne    3648e <read_line_info+0x137e>
   364c3:	4c 8b 44 24 18       	mov    0x18(%rsp),%r8
   364c8:	2b 44 24 20          	sub    0x20(%rsp),%eax
   364cc:	be c8 00 00 00       	mov    $0xc8,%esi
   364d1:	4c 8d a4 24 e0 00 00 	lea    0xe0(%rsp),%r12
   364d8:	00 
   364d9:	4c 89 e7             	mov    %r12,%rdi
   364dc:	48 8d 15 e4 89 00 00 	lea    0x89e4(%rip),%rdx        # 3eec7 <elf_crc32.crc32_table+0x7a7>
   364e3:	48 8d 0d 74 8a 00 00 	lea    0x8a74(%rip),%rcx        # 3ef5e <elf_crc32.crc32_table+0x83e>
   364ea:	41 89 c1             	mov    %eax,%r9d
   364ed:	31 c0                	xor    %eax,%eax
   364ef:	e8 1c db fc ff       	callq  4010 <snprintf@plt>
   364f4:	48 8b 7c 24 48       	mov    0x48(%rsp),%rdi
   364f9:	4c 89 e6             	mov    %r12,%rsi
   364fc:	31 d2                	xor    %edx,%edx
   364fe:	ff 54 24 40          	callq  *0x40(%rsp)
   36502:	b9 01 00 00 00       	mov    $0x1,%ecx
   36507:	eb 85                	jmp    3648e <read_line_info+0x137e>
   36509:	4c 8b 44 24 18       	mov    0x18(%rsp),%r8
   3650e:	44 2b 4c 24 20       	sub    0x20(%rsp),%r9d
   36513:	be c8 00 00 00       	mov    $0xc8,%esi
   36518:	48 8d 9c 24 e0 00 00 	lea    0xe0(%rsp),%rbx
   3651f:	00 
   36520:	48 89 df             	mov    %rbx,%rdi
   36523:	48 8d 15 9d 89 00 00 	lea    0x899d(%rip),%rdx        # 3eec7 <elf_crc32.crc32_table+0x7a7>
   3652a:	48 8d 0d 86 89 00 00 	lea    0x8986(%rip),%rcx        # 3eeb7 <elf_crc32.crc32_table+0x797>
   36531:	31 c0                	xor    %eax,%eax
   36533:	e8 d8 da fc ff       	callq  4010 <snprintf@plt>
   36538:	48 8b 7c 24 48       	mov    0x48(%rsp),%rdi
   3653d:	48 89 de             	mov    %rbx,%rsi
   36540:	31 d2                	xor    %edx,%edx
   36542:	ff 54 24 40          	callq  *0x40(%rsp)
   36546:	c7 44 24 50 01 00 00 	movl   $0x1,0x50(%rsp)
   3654d:	00 
   3654e:	41 83 c6 ff          	add    $0xffffffff,%r14d
   36552:	0f 85 21 ff ff ff    	jne    36479 <read_line_info+0x1369>
   36558:	e9 a7 0d 00 00       	jmpq   37304 <read_line_info+0x21f4>
   3655d:	48 8b 54 24 40       	mov    0x40(%rsp),%rdx
   36562:	48 8b 4c 24 48       	mov    0x48(%rsp),%rcx
   36567:	48 8b b4 24 a8 00 00 	mov    0xa8(%rsp),%rsi
   3656e:	00 
   3656f:	48 85 f6             	test   %rsi,%rsi
   36572:	74 2d                	je     365a1 <read_line_info+0x1491>
   36574:	48 8b 84 24 90 00 00 	mov    0x90(%rsp),%rax
   3657b:	00 
   3657c:	48 83 c6 ff          	add    $0xffffffffffffffff,%rsi
   36580:	48 8d 34 76          	lea    (%rsi,%rsi,2),%rsi
   36584:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   36589:	48 39 3c f0          	cmp    %rdi,(%rax,%rsi,8)
   3658d:	75 12                	jne    365a1 <read_line_info+0x1491>
   3658f:	4c 39 7c f0 08       	cmp    %r15,0x8(%rax,%rsi,8)
   36594:	75 0b                	jne    365a1 <read_line_info+0x1491>
   36596:	44 39 6c f0 10       	cmp    %r13d,0x10(%rax,%rsi,8)
   3659b:	0f 84 79 fe ff ff    	je     3641a <read_line_info+0x130a>
   365a1:	be 18 00 00 00       	mov    $0x18,%esi
   365a6:	4c 89 f7             	mov    %r14,%rdi
   365a9:	4c 8d 84 24 90 00 00 	lea    0x90(%rsp),%r8
   365b0:	00 
   365b1:	e8 da a8 ff ff       	callq  30e90 <__rdos_backtrace_vector_grow>
   365b6:	48 85 c0             	test   %rax,%rax
   365b9:	0f 85 28 fe ff ff    	jne    363e7 <read_line_info+0x12d7>
   365bf:	e9 56 fe ff ff       	jmpq   3641a <read_line_info+0x130a>
   365c4:	48 85 d2             	test   %rdx,%rdx
   365c7:	0f 84 a3 00 00 00    	je     36670 <read_line_info+0x1560>
   365cd:	31 f6                	xor    %esi,%esi
   365cf:	31 ed                	xor    %ebp,%ebp
   365d1:	45 31 f6             	xor    %r14d,%r14d
   365d4:	49 8d 41 01          	lea    0x1(%r9),%rax
   365d8:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   365dd:	48 83 c2 ff          	add    $0xffffffffffffffff,%rdx
   365e1:	48 89 54 24 30       	mov    %rdx,0x30(%rsp)
   365e6:	41 0f b6 19          	movzbl (%r9),%ebx
   365ea:	83 fd 3f             	cmp    $0x3f,%ebp
   365ed:	77 16                	ja     36605 <read_line_info+0x14f5>
   365ef:	89 d8                	mov    %ebx,%eax
   365f1:	83 e0 7f             	and    $0x7f,%eax
   365f4:	89 e9                	mov    %ebp,%ecx
   365f6:	48 d3 e0             	shl    %cl,%rax
   365f9:	49 09 c6             	or     %rax,%r14
   365fc:	84 db                	test   %bl,%bl
   365fe:	78 55                	js     36655 <read_line_info+0x1545>
   36600:	e9 bc 04 00 00       	jmpq   36ac1 <read_line_info+0x19b1>
   36605:	85 f6                	test   %esi,%esi
   36607:	75 44                	jne    3664d <read_line_info+0x153d>
   36609:	4c 8b 44 24 18       	mov    0x18(%rsp),%r8
   3660e:	2b 44 24 20          	sub    0x20(%rsp),%eax
   36612:	be c8 00 00 00       	mov    $0xc8,%esi
   36617:	4c 8d a4 24 e0 00 00 	lea    0xe0(%rsp),%r12
   3661e:	00 
   3661f:	4c 89 e7             	mov    %r12,%rdi
   36622:	48 8d 15 9e 88 00 00 	lea    0x889e(%rip),%rdx        # 3eec7 <elf_crc32.crc32_table+0x7a7>
   36629:	48 8d 0d 2e 89 00 00 	lea    0x892e(%rip),%rcx        # 3ef5e <elf_crc32.crc32_table+0x83e>
   36630:	41 89 c1             	mov    %eax,%r9d
   36633:	31 c0                	xor    %eax,%eax
   36635:	e8 d6 d9 fc ff       	callq  4010 <snprintf@plt>
   3663a:	48 8b 7c 24 48       	mov    0x48(%rsp),%rdi
   3663f:	4c 89 e6             	mov    %r12,%rsi
   36642:	31 d2                	xor    %edx,%edx
   36644:	ff 54 24 40          	callq  *0x40(%rsp)
   36648:	be 01 00 00 00       	mov    $0x1,%esi
   3664d:	84 db                	test   %bl,%bl
   3664f:	0f 89 6c 04 00 00    	jns    36ac1 <read_line_info+0x19b1>
   36655:	83 c5 07             	add    $0x7,%ebp
   36658:	4c 8b 4c 24 28       	mov    0x28(%rsp),%r9
   3665d:	48 8b 54 24 30       	mov    0x30(%rsp),%rdx
   36662:	48 85 d2             	test   %rdx,%rdx
   36665:	0f 85 69 ff ff ff    	jne    365d4 <read_line_info+0x14c4>
   3666b:	4c 8b 64 24 10       	mov    0x10(%rsp),%r12
   36670:	83 7c 24 50 00       	cmpl   $0x0,0x50(%rsp)
   36675:	75 45                	jne    366bc <read_line_info+0x15ac>
   36677:	4c 8b 44 24 18       	mov    0x18(%rsp),%r8
   3667c:	44 2b 4c 24 20       	sub    0x20(%rsp),%r9d
   36681:	be c8 00 00 00       	mov    $0xc8,%esi
   36686:	48 8d 9c 24 e0 00 00 	lea    0xe0(%rsp),%rbx
   3668d:	00 
   3668e:	48 89 df             	mov    %rbx,%rdi
   36691:	48 8d 15 2f 88 00 00 	lea    0x882f(%rip),%rdx        # 3eec7 <elf_crc32.crc32_table+0x7a7>
   36698:	48 8d 0d 18 88 00 00 	lea    0x8818(%rip),%rcx        # 3eeb7 <elf_crc32.crc32_table+0x797>
   3669f:	31 c0                	xor    %eax,%eax
   366a1:	e8 6a d9 fc ff       	callq  4010 <snprintf@plt>
   366a6:	48 8b 7c 24 48       	mov    0x48(%rsp),%rdi
   366ab:	48 89 de             	mov    %rbx,%rsi
   366ae:	31 d2                	xor    %edx,%edx
   366b0:	ff 54 24 40          	callq  *0x40(%rsp)
   366b4:	c7 44 24 50 01 00 00 	movl   $0x1,0x50(%rsp)
   366bb:	00 
   366bc:	45 31 f6             	xor    %r14d,%r14d
   366bf:	e9 02 04 00 00       	jmpq   36ac6 <read_line_info+0x19b6>
   366c4:	48 85 d2             	test   %rdx,%rdx
   366c7:	0f 84 a7 00 00 00    	je     36774 <read_line_info+0x1664>
   366cd:	31 f6                	xor    %esi,%esi
   366cf:	bd 07 00 00 00       	mov    $0x7,%ebp
   366d4:	45 31 f6             	xor    %r14d,%r14d
   366d7:	8d 4d f9             	lea    -0x7(%rbp),%ecx
   366da:	49 8d 41 01          	lea    0x1(%r9),%rax
   366de:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   366e3:	48 83 c2 ff          	add    $0xffffffffffffffff,%rdx
   366e7:	48 89 54 24 30       	mov    %rdx,0x30(%rsp)
   366ec:	41 0f b6 19          	movzbl (%r9),%ebx
   366f0:	83 f9 3f             	cmp    $0x3f,%ecx
   366f3:	77 14                	ja     36709 <read_line_info+0x15f9>
   366f5:	89 d8                	mov    %ebx,%eax
   366f7:	83 e0 7f             	and    $0x7f,%eax
   366fa:	48 d3 e0             	shl    %cl,%rax
   366fd:	49 09 c6             	or     %rax,%r14
   36700:	84 db                	test   %bl,%bl
   36702:	78 55                	js     36759 <read_line_info+0x1649>
   36704:	e9 f1 03 00 00       	jmpq   36afa <read_line_info+0x19ea>
   36709:	85 f6                	test   %esi,%esi
   3670b:	75 44                	jne    36751 <read_line_info+0x1641>
   3670d:	4c 8b 44 24 18       	mov    0x18(%rsp),%r8
   36712:	2b 44 24 20          	sub    0x20(%rsp),%eax
   36716:	be c8 00 00 00       	mov    $0xc8,%esi
   3671b:	4c 8d a4 24 e0 00 00 	lea    0xe0(%rsp),%r12
   36722:	00 
   36723:	4c 89 e7             	mov    %r12,%rdi
   36726:	48 8d 15 9a 87 00 00 	lea    0x879a(%rip),%rdx        # 3eec7 <elf_crc32.crc32_table+0x7a7>
   3672d:	48 8d 0d 23 88 00 00 	lea    0x8823(%rip),%rcx        # 3ef57 <elf_crc32.crc32_table+0x837>
   36734:	41 89 c1             	mov    %eax,%r9d
   36737:	31 c0                	xor    %eax,%eax
   36739:	e8 d2 d8 fc ff       	callq  4010 <snprintf@plt>
   3673e:	48 8b 7c 24 48       	mov    0x48(%rsp),%rdi
   36743:	4c 89 e6             	mov    %r12,%rsi
   36746:	31 d2                	xor    %edx,%edx
   36748:	ff 54 24 40          	callq  *0x40(%rsp)
   3674c:	be 01 00 00 00       	mov    $0x1,%esi
   36751:	84 db                	test   %bl,%bl
   36753:	0f 89 a1 03 00 00    	jns    36afa <read_line_info+0x19ea>
   36759:	4c 8b 4c 24 28       	mov    0x28(%rsp),%r9
   3675e:	48 8b 54 24 30       	mov    0x30(%rsp),%rdx
   36763:	83 c5 07             	add    $0x7,%ebp
   36766:	48 85 d2             	test   %rdx,%rdx
   36769:	0f 85 68 ff ff ff    	jne    366d7 <read_line_info+0x15c7>
   3676f:	4c 8b 64 24 10       	mov    0x10(%rsp),%r12
   36774:	83 7c 24 50 00       	cmpl   $0x0,0x50(%rsp)
   36779:	75 45                	jne    367c0 <read_line_info+0x16b0>
   3677b:	4c 8b 44 24 18       	mov    0x18(%rsp),%r8
   36780:	44 2b 4c 24 20       	sub    0x20(%rsp),%r9d
   36785:	be c8 00 00 00       	mov    $0xc8,%esi
   3678a:	48 8d 9c 24 e0 00 00 	lea    0xe0(%rsp),%rbx
   36791:	00 
   36792:	48 89 df             	mov    %rbx,%rdi
   36795:	48 8d 15 2b 87 00 00 	lea    0x872b(%rip),%rdx        # 3eec7 <elf_crc32.crc32_table+0x7a7>
   3679c:	48 8d 0d 14 87 00 00 	lea    0x8714(%rip),%rcx        # 3eeb7 <elf_crc32.crc32_table+0x797>
   367a3:	31 c0                	xor    %eax,%eax
   367a5:	e8 66 d8 fc ff       	callq  4010 <snprintf@plt>
   367aa:	48 8b 7c 24 48       	mov    0x48(%rsp),%rdi
   367af:	48 89 de             	mov    %rbx,%rsi
   367b2:	31 d2                	xor    %edx,%edx
   367b4:	ff 54 24 40          	callq  *0x40(%rsp)
   367b8:	c7 44 24 50 01 00 00 	movl   $0x1,0x50(%rsp)
   367bf:	00 
   367c0:	45 31 f6             	xor    %r14d,%r14d
   367c3:	e9 59 03 00 00       	jmpq   36b21 <read_line_info+0x1a11>
   367c8:	48 85 d2             	test   %rdx,%rdx
   367cb:	0f 84 a8 00 00 00    	je     36879 <read_line_info+0x1769>
   367d1:	31 f6                	xor    %esi,%esi
   367d3:	31 ed                	xor    %ebp,%ebp
   367d5:	45 31 f6             	xor    %r14d,%r14d
   367d8:	49 8d 41 01          	lea    0x1(%r9),%rax
   367dc:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   367e1:	48 83 c2 ff          	add    $0xffffffffffffffff,%rdx
   367e5:	48 89 54 24 30       	mov    %rdx,0x30(%rsp)
   367ea:	41 0f b6 19          	movzbl (%r9),%ebx
   367ee:	83 fd 3f             	cmp    $0x3f,%ebp
   367f1:	77 16                	ja     36809 <read_line_info+0x16f9>
   367f3:	89 d8                	mov    %ebx,%eax
   367f5:	83 e0 7f             	and    $0x7f,%eax
   367f8:	89 e9                	mov    %ebp,%ecx
   367fa:	48 d3 e0             	shl    %cl,%rax
   367fd:	49 09 c6             	or     %rax,%r14
   36800:	84 db                	test   %bl,%bl
   36802:	78 55                	js     36859 <read_line_info+0x1749>
   36804:	e9 25 03 00 00       	jmpq   36b2e <read_line_info+0x1a1e>
   36809:	85 f6                	test   %esi,%esi
   3680b:	75 44                	jne    36851 <read_line_info+0x1741>
   3680d:	4c 8b 44 24 18       	mov    0x18(%rsp),%r8
   36812:	2b 44 24 20          	sub    0x20(%rsp),%eax
   36816:	be c8 00 00 00       	mov    $0xc8,%esi
   3681b:	4c 8d a4 24 e0 00 00 	lea    0xe0(%rsp),%r12
   36822:	00 
   36823:	4c 89 e7             	mov    %r12,%rdi
   36826:	48 8d 15 9a 86 00 00 	lea    0x869a(%rip),%rdx        # 3eec7 <elf_crc32.crc32_table+0x7a7>
   3682d:	48 8d 0d 2a 87 00 00 	lea    0x872a(%rip),%rcx        # 3ef5e <elf_crc32.crc32_table+0x83e>
   36834:	41 89 c1             	mov    %eax,%r9d
   36837:	31 c0                	xor    %eax,%eax
   36839:	e8 d2 d7 fc ff       	callq  4010 <snprintf@plt>
   3683e:	48 8b 7c 24 48       	mov    0x48(%rsp),%rdi
   36843:	4c 89 e6             	mov    %r12,%rsi
   36846:	31 d2                	xor    %edx,%edx
   36848:	ff 54 24 40          	callq  *0x40(%rsp)
   3684c:	be 01 00 00 00       	mov    $0x1,%esi
   36851:	84 db                	test   %bl,%bl
   36853:	0f 89 d5 02 00 00    	jns    36b2e <read_line_info+0x1a1e>
   36859:	83 c5 07             	add    $0x7,%ebp
   3685c:	4c 8b 4c 24 28       	mov    0x28(%rsp),%r9
   36861:	48 8b 54 24 30       	mov    0x30(%rsp),%rdx
   36866:	48 85 d2             	test   %rdx,%rdx
   36869:	0f 85 69 ff ff ff    	jne    367d8 <read_line_info+0x16c8>
   3686f:	4c 8b 74 24 58       	mov    0x58(%rsp),%r14
   36874:	4c 8b 64 24 10       	mov    0x10(%rsp),%r12
   36879:	83 7c 24 50 00       	cmpl   $0x0,0x50(%rsp)
   3687e:	0f 84 d4 02 00 00    	je     36b58 <read_line_info+0x1a48>
   36884:	4c 8d 3d 68 79 00 00 	lea    0x7968(%rip),%r15        # 3e1f3 <str.0+0x3d3>
   3688b:	e9 8a fb ff ff       	jmpq   3641a <read_line_info+0x130a>
   36890:	48 85 d2             	test   %rdx,%rdx
   36893:	0f 84 69 01 00 00    	je     36a02 <read_line_info+0x18f2>
   36899:	31 c9                	xor    %ecx,%ecx
   3689b:	31 db                	xor    %ebx,%ebx
   3689d:	49 8d 41 01          	lea    0x1(%r9),%rax
   368a1:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   368a6:	48 83 c2 ff          	add    $0xffffffffffffffff,%rdx
   368aa:	48 89 54 24 30       	mov    %rdx,0x30(%rsp)
   368af:	41 0f b6 29          	movzbl (%r9),%ebp
   368b3:	83 fb 40             	cmp    $0x40,%ebx
   368b6:	72 48                	jb     36900 <read_line_info+0x17f0>
   368b8:	85 c9                	test   %ecx,%ecx
   368ba:	75 44                	jne    36900 <read_line_info+0x17f0>
   368bc:	4c 8b 44 24 18       	mov    0x18(%rsp),%r8
   368c1:	2b 44 24 20          	sub    0x20(%rsp),%eax
   368c5:	be c8 00 00 00       	mov    $0xc8,%esi
   368ca:	4c 8d a4 24 e0 00 00 	lea    0xe0(%rsp),%r12
   368d1:	00 
   368d2:	4c 89 e7             	mov    %r12,%rdi
   368d5:	48 8d 15 eb 85 00 00 	lea    0x85eb(%rip),%rdx        # 3eec7 <elf_crc32.crc32_table+0x7a7>
   368dc:	48 8d 0d 7b 86 00 00 	lea    0x867b(%rip),%rcx        # 3ef5e <elf_crc32.crc32_table+0x83e>
   368e3:	41 89 c1             	mov    %eax,%r9d
   368e6:	31 c0                	xor    %eax,%eax
   368e8:	e8 23 d7 fc ff       	callq  4010 <snprintf@plt>
   368ed:	48 8b 7c 24 48       	mov    0x48(%rsp),%rdi
   368f2:	4c 89 e6             	mov    %r12,%rsi
   368f5:	31 d2                	xor    %edx,%edx
   368f7:	ff 54 24 40          	callq  *0x40(%rsp)
   368fb:	b9 01 00 00 00       	mov    $0x1,%ecx
   36900:	40 84 ed             	test   %bpl,%bpl
   36903:	0f 89 00 0a 00 00    	jns    37309 <read_line_info+0x21f9>
   36909:	83 c3 07             	add    $0x7,%ebx
   3690c:	4c 8b 4c 24 28       	mov    0x28(%rsp),%r9
   36911:	48 8b 54 24 30       	mov    0x30(%rsp),%rdx
   36916:	48 85 d2             	test   %rdx,%rdx
   36919:	75 82                	jne    3689d <read_line_info+0x178d>
   3691b:	e9 dd 00 00 00       	jmpq   369fd <read_line_info+0x18ed>
   36920:	b8 ff 00 00 00       	mov    $0xff,%eax
   36925:	29 f8                	sub    %edi,%eax
   36927:	31 d2                	xor    %edx,%edx
   36929:	48 8b 74 24 70       	mov    0x70(%rsp),%rsi
   3692e:	f7 76 10             	divl   0x10(%rsi)
   36931:	89 c1                	mov    %eax,%ecx
   36933:	44 01 e1             	add    %r12d,%ecx
   36936:	8b 46 04             	mov    0x4(%rsi),%eax
   36939:	0f af c1             	imul   %ecx,%eax
   3693c:	8b 76 08             	mov    0x8(%rsi),%esi
   3693f:	31 d2                	xor    %edx,%edx
   36941:	f7 f6                	div    %esi
   36943:	48 01 44 24 08       	add    %rax,0x8(%rsp)
   36948:	89 c8                	mov    %ecx,%eax
   3694a:	31 d2                	xor    %edx,%edx
   3694c:	f7 f6                	div    %esi
   3694e:	41 89 d4             	mov    %edx,%r12d
   36951:	e9 c4 fa ff ff       	jmpq   3641a <read_line_info+0x130a>
   36956:	48 83 fa 01          	cmp    $0x1,%rdx
   3695a:	0f 87 f7 00 00 00    	ja     36a57 <read_line_info+0x1947>
   36960:	83 7c 24 50 00       	cmpl   $0x0,0x50(%rsp)
   36965:	0f 84 3e 02 00 00    	je     36ba9 <read_line_info+0x1a99>
   3696b:	31 c0                	xor    %eax,%eax
   3696d:	e9 8f 02 00 00       	jmpq   36c01 <read_line_info+0x1af1>
   36972:	48 85 d2             	test   %rdx,%rdx
   36975:	0f 84 87 00 00 00    	je     36a02 <read_line_info+0x18f2>
   3697b:	31 c9                	xor    %ecx,%ecx
   3697d:	31 db                	xor    %ebx,%ebx
   3697f:	49 8d 41 01          	lea    0x1(%r9),%rax
   36983:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   36988:	48 83 c2 ff          	add    $0xffffffffffffffff,%rdx
   3698c:	48 89 54 24 30       	mov    %rdx,0x30(%rsp)
   36991:	41 0f b6 29          	movzbl (%r9),%ebp
   36995:	83 fb 40             	cmp    $0x40,%ebx
   36998:	72 48                	jb     369e2 <read_line_info+0x18d2>
   3699a:	85 c9                	test   %ecx,%ecx
   3699c:	75 44                	jne    369e2 <read_line_info+0x18d2>
   3699e:	4c 8b 44 24 18       	mov    0x18(%rsp),%r8
   369a3:	2b 44 24 20          	sub    0x20(%rsp),%eax
   369a7:	be c8 00 00 00       	mov    $0xc8,%esi
   369ac:	4c 8d a4 24 e0 00 00 	lea    0xe0(%rsp),%r12
   369b3:	00 
   369b4:	4c 89 e7             	mov    %r12,%rdi
   369b7:	48 8d 15 09 85 00 00 	lea    0x8509(%rip),%rdx        # 3eec7 <elf_crc32.crc32_table+0x7a7>
   369be:	48 8d 0d 99 85 00 00 	lea    0x8599(%rip),%rcx        # 3ef5e <elf_crc32.crc32_table+0x83e>
   369c5:	41 89 c1             	mov    %eax,%r9d
   369c8:	31 c0                	xor    %eax,%eax
   369ca:	e8 41 d6 fc ff       	callq  4010 <snprintf@plt>
   369cf:	48 8b 7c 24 48       	mov    0x48(%rsp),%rdi
   369d4:	4c 89 e6             	mov    %r12,%rsi
   369d7:	31 d2                	xor    %edx,%edx
   369d9:	ff 54 24 40          	callq  *0x40(%rsp)
   369dd:	b9 01 00 00 00       	mov    $0x1,%ecx
   369e2:	40 84 ed             	test   %bpl,%bpl
   369e5:	0f 89 1e 09 00 00    	jns    37309 <read_line_info+0x21f9>
   369eb:	83 c3 07             	add    $0x7,%ebx
   369ee:	4c 8b 4c 24 28       	mov    0x28(%rsp),%r9
   369f3:	48 8b 54 24 30       	mov    0x30(%rsp),%rdx
   369f8:	48 85 d2             	test   %rdx,%rdx
   369fb:	75 82                	jne    3697f <read_line_info+0x186f>
   369fd:	4c 8b 64 24 10       	mov    0x10(%rsp),%r12
   36a02:	83 7c 24 50 00       	cmpl   $0x0,0x50(%rsp)
   36a07:	0f 85 0d fa ff ff    	jne    3641a <read_line_info+0x130a>
   36a0d:	4c 8b 44 24 18       	mov    0x18(%rsp),%r8
   36a12:	44 2b 4c 24 20       	sub    0x20(%rsp),%r9d
   36a17:	be c8 00 00 00       	mov    $0xc8,%esi
   36a1c:	48 8d 9c 24 e0 00 00 	lea    0xe0(%rsp),%rbx
   36a23:	00 
   36a24:	48 89 df             	mov    %rbx,%rdi
   36a27:	48 8d 15 99 84 00 00 	lea    0x8499(%rip),%rdx        # 3eec7 <elf_crc32.crc32_table+0x7a7>
   36a2e:	48 8d 0d 82 84 00 00 	lea    0x8482(%rip),%rcx        # 3eeb7 <elf_crc32.crc32_table+0x797>
   36a35:	31 c0                	xor    %eax,%eax
   36a37:	e8 d4 d5 fc ff       	callq  4010 <snprintf@plt>
   36a3c:	48 8b 7c 24 48       	mov    0x48(%rsp),%rdi
   36a41:	48 89 de             	mov    %rbx,%rsi
   36a44:	31 d2                	xor    %edx,%edx
   36a46:	ff 54 24 40          	callq  *0x40(%rsp)
   36a4a:	c7 44 24 50 01 00 00 	movl   $0x1,0x50(%rsp)
   36a51:	00 
   36a52:	e9 c3 f9 ff ff       	jmpq   3641a <read_line_info+0x130a>
   36a57:	48 8d 46 03          	lea    0x3(%rsi),%rax
   36a5b:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   36a60:	48 83 c1 fd          	add    $0xfffffffffffffffd,%rcx
   36a64:	48 89 4c 24 30       	mov    %rcx,0x30(%rsp)
   36a69:	83 7c 24 38 00       	cmpl   $0x0,0x38(%rsp)
   36a6e:	0f 84 7e 01 00 00    	je     36bf2 <read_line_info+0x1ae2>
   36a74:	0f b6 4e 01          	movzbl 0x1(%rsi),%ecx
   36a78:	48 c1 e1 08          	shl    $0x8,%rcx
   36a7c:	0f b6 46 02          	movzbl 0x2(%rsi),%eax
   36a80:	e9 79 01 00 00       	jmpq   36bfe <read_line_info+0x1aee>
   36a85:	4c 8b 64 24 10       	mov    0x10(%rsp),%r12
   36a8a:	4c 8b 4c 24 28       	mov    0x28(%rsp),%r9
   36a8f:	4c 8b 44 24 30       	mov    0x30(%rsp),%r8
   36a94:	4d 85 c0             	test   %r8,%r8
   36a97:	0f 85 24 f8 ff ff    	jne    362c1 <read_line_info+0x11b1>
   36a9d:	83 7c 24 50 00       	cmpl   $0x0,0x50(%rsp)
   36aa2:	0f 84 6e 01 00 00    	je     36c16 <read_line_info+0x1b06>
   36aa8:	31 c9                	xor    %ecx,%ecx
   36aaa:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   36aaf:	49 83 c6 ff          	add    $0xffffffffffffffff,%r14
   36ab3:	4c 29 f1             	sub    %r14,%rcx
   36ab6:	0f 83 b6 01 00 00    	jae    36c72 <read_line_info+0x1b62>
   36abc:	e9 57 09 00 00       	jmpq   37418 <read_line_info+0x2308>
   36ac1:	4c 8b 64 24 10       	mov    0x10(%rsp),%r12
   36ac6:	48 8b 4c 24 70       	mov    0x70(%rsp),%rcx
   36acb:	8b 41 04             	mov    0x4(%rcx),%eax
   36ace:	8b 71 08             	mov    0x8(%rcx),%esi
   36ad1:	44 89 e1             	mov    %r12d,%ecx
   36ad4:	4c 01 f1             	add    %r14,%rcx
   36ad7:	48 0f af c1          	imul   %rcx,%rax
   36adb:	31 d2                	xor    %edx,%edx
   36add:	48 f7 f6             	div    %rsi
   36ae0:	48 01 44 24 08       	add    %rax,0x8(%rsp)
   36ae5:	48 89 c8             	mov    %rcx,%rax
   36ae8:	31 d2                	xor    %edx,%edx
   36aea:	48 f7 f6             	div    %rsi
   36aed:	49 89 d4             	mov    %rdx,%r12
   36af0:	4c 8b 74 24 58       	mov    0x58(%rsp),%r14
   36af5:	e9 20 f9 ff ff       	jmpq   3641a <read_line_info+0x130a>
   36afa:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
   36b01:	89 e9                	mov    %ebp,%ecx
   36b03:	48 d3 e0             	shl    %cl,%rax
   36b06:	f6 c3 40             	test   $0x40,%bl
   36b09:	b9 00 00 00 00       	mov    $0x0,%ecx
   36b0e:	48 0f 44 c1          	cmove  %rcx,%rax
   36b12:	83 fd 40             	cmp    $0x40,%ebp
   36b15:	48 0f 43 c1          	cmovae %rcx,%rax
   36b19:	49 09 c6             	or     %rax,%r14
   36b1c:	4c 8b 64 24 10       	mov    0x10(%rsp),%r12
   36b21:	45 01 f5             	add    %r14d,%r13d
   36b24:	4c 8b 74 24 58       	mov    0x58(%rsp),%r14
   36b29:	e9 ec f8 ff ff       	jmpq   3641a <read_line_info+0x130a>
   36b2e:	4d 85 f6             	test   %r14,%r14
   36b31:	0f 84 bb 03 00 00    	je     36ef2 <read_line_info+0x1de2>
   36b37:	49 8d 46 ff          	lea    -0x1(%r14),%rax
   36b3b:	48 8b 4c 24 70       	mov    0x70(%rsp),%rcx
   36b40:	48 3b 41 30          	cmp    0x30(%rcx),%rax
   36b44:	0f 83 ff 08 00 00    	jae    37449 <read_line_info+0x2339>
   36b4a:	48 8b 41 38          	mov    0x38(%rcx),%rax
   36b4e:	4e 8b 7c f0 f8       	mov    -0x8(%rax,%r14,8),%r15
   36b53:	e9 ac 07 00 00       	jmpq   37304 <read_line_info+0x21f4>
   36b58:	4c 8b 44 24 18       	mov    0x18(%rsp),%r8
   36b5d:	44 2b 4c 24 20       	sub    0x20(%rsp),%r9d
   36b62:	be c8 00 00 00       	mov    $0xc8,%esi
   36b67:	48 8d 9c 24 e0 00 00 	lea    0xe0(%rsp),%rbx
   36b6e:	00 
   36b6f:	48 89 df             	mov    %rbx,%rdi
   36b72:	48 8d 15 4e 83 00 00 	lea    0x834e(%rip),%rdx        # 3eec7 <elf_crc32.crc32_table+0x7a7>
   36b79:	48 8d 0d 37 83 00 00 	lea    0x8337(%rip),%rcx        # 3eeb7 <elf_crc32.crc32_table+0x797>
   36b80:	31 c0                	xor    %eax,%eax
   36b82:	e8 89 d4 fc ff       	callq  4010 <snprintf@plt>
   36b87:	48 8b 7c 24 48       	mov    0x48(%rsp),%rdi
   36b8c:	48 89 de             	mov    %rbx,%rsi
   36b8f:	31 d2                	xor    %edx,%edx
   36b91:	ff 54 24 40          	callq  *0x40(%rsp)
   36b95:	c7 44 24 50 01 00 00 	movl   $0x1,0x50(%rsp)
   36b9c:	00 
   36b9d:	4c 8d 3d 4f 76 00 00 	lea    0x764f(%rip),%r15        # 3e1f3 <str.0+0x3d3>
   36ba4:	e9 71 f8 ff ff       	jmpq   3641a <read_line_info+0x130a>
   36ba9:	4c 8b 44 24 18       	mov    0x18(%rsp),%r8
   36bae:	44 2b 4c 24 20       	sub    0x20(%rsp),%r9d
   36bb3:	be c8 00 00 00       	mov    $0xc8,%esi
   36bb8:	48 8d 9c 24 e0 00 00 	lea    0xe0(%rsp),%rbx
   36bbf:	00 
   36bc0:	48 89 df             	mov    %rbx,%rdi
   36bc3:	48 8d 15 fd 82 00 00 	lea    0x82fd(%rip),%rdx        # 3eec7 <elf_crc32.crc32_table+0x7a7>
   36bca:	48 8d 0d e6 82 00 00 	lea    0x82e6(%rip),%rcx        # 3eeb7 <elf_crc32.crc32_table+0x797>
   36bd1:	31 c0                	xor    %eax,%eax
   36bd3:	e8 38 d4 fc ff       	callq  4010 <snprintf@plt>
   36bd8:	48 8b 7c 24 48       	mov    0x48(%rsp),%rdi
   36bdd:	48 89 de             	mov    %rbx,%rsi
   36be0:	31 d2                	xor    %edx,%edx
   36be2:	ff 54 24 40          	callq  *0x40(%rsp)
   36be6:	c7 44 24 50 01 00 00 	movl   $0x1,0x50(%rsp)
   36bed:	00 
   36bee:	31 c0                	xor    %eax,%eax
   36bf0:	eb 0f                	jmp    36c01 <read_line_info+0x1af1>
   36bf2:	0f b6 4e 02          	movzbl 0x2(%rsi),%ecx
   36bf6:	48 c1 e1 08          	shl    $0x8,%rcx
   36bfa:	0f b6 46 01          	movzbl 0x1(%rsi),%eax
   36bfe:	48 09 c8             	or     %rcx,%rax
   36c01:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
   36c06:	48 01 c1             	add    %rax,%rcx
   36c09:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
   36c0e:	45 31 e4             	xor    %r12d,%r12d
   36c11:	e9 04 f8 ff ff       	jmpq   3641a <read_line_info+0x130a>
   36c16:	4c 8b 44 24 18       	mov    0x18(%rsp),%r8
   36c1b:	44 2b 4c 24 20       	sub    0x20(%rsp),%r9d
   36c20:	be c8 00 00 00       	mov    $0xc8,%esi
   36c25:	48 8d 9c 24 e0 00 00 	lea    0xe0(%rsp),%rbx
   36c2c:	00 
   36c2d:	48 89 df             	mov    %rbx,%rdi
   36c30:	48 8d 15 90 82 00 00 	lea    0x8290(%rip),%rdx        # 3eec7 <elf_crc32.crc32_table+0x7a7>
   36c37:	48 8d 0d 79 82 00 00 	lea    0x8279(%rip),%rcx        # 3eeb7 <elf_crc32.crc32_table+0x797>
   36c3e:	31 c0                	xor    %eax,%eax
   36c40:	e8 cb d3 fc ff       	callq  4010 <snprintf@plt>
   36c45:	48 8b 7c 24 48       	mov    0x48(%rsp),%rdi
   36c4a:	48 89 de             	mov    %rbx,%rsi
   36c4d:	31 d2                	xor    %edx,%edx
   36c4f:	ff 54 24 40          	callq  *0x40(%rsp)
   36c53:	c7 44 24 50 01 00 00 	movl   $0x1,0x50(%rsp)
   36c5a:	00 
   36c5b:	48 8b 4c 24 30       	mov    0x30(%rsp),%rcx
   36c60:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   36c65:	49 83 c6 ff          	add    $0xffffffffffffffff,%r14
   36c69:	4c 29 f1             	sub    %r14,%rcx
   36c6c:	0f 82 a6 07 00 00    	jb     37418 <read_line_info+0x2308>
   36c72:	4c 01 74 24 28       	add    %r14,0x28(%rsp)
   36c77:	48 89 4c 24 30       	mov    %rcx,0x30(%rsp)
   36c7c:	44 89 ea             	mov    %r13d,%edx
   36c7f:	4c 89 ff             	mov    %r15,%rdi
   36c82:	44 89 e6             	mov    %r12d,%esi
   36c85:	48 89 c5             	mov    %rax,%rbp
   36c88:	4c 8b 74 24 58       	mov    0x58(%rsp),%r14
   36c8d:	e9 9b f7 ff ff       	jmpq   3642d <read_line_info+0x131d>
   36c92:	48 89 44 24 60       	mov    %rax,0x60(%rsp)
   36c97:	31 c0                	xor    %eax,%eax
   36c99:	48 85 c9             	test   %rcx,%rcx
   36c9c:	74 17                	je     36cb5 <read_line_info+0x1ba5>
   36c9e:	48 8b 54 24 60       	mov    0x60(%rsp),%rdx
   36ca3:	80 3c 02 00          	cmpb   $0x0,(%rdx,%rax,1)
   36ca7:	74 0c                	je     36cb5 <read_line_info+0x1ba5>
   36ca9:	48 83 c0 01          	add    $0x1,%rax
   36cad:	48 39 c1             	cmp    %rax,%rcx
   36cb0:	75 f1                	jne    36ca3 <read_line_info+0x1b93>
   36cb2:	48 89 c8             	mov    %rcx,%rax
   36cb5:	48 83 c0 01          	add    $0x1,%rax
   36cb9:	48 39 c1             	cmp    %rax,%rcx
   36cbc:	0f 82 20 08 00 00    	jb     374e2 <read_line_info+0x23d2>
   36cc2:	48 8b 54 24 60       	mov    0x60(%rsp),%rdx
   36cc7:	4c 8d 0c 02          	lea    (%rdx,%rax,1),%r9
   36ccb:	4c 89 4c 24 28       	mov    %r9,0x28(%rsp)
   36cd0:	48 29 c1             	sub    %rax,%rcx
   36cd3:	48 89 4c 24 30       	mov    %rcx,0x30(%rsp)
   36cd8:	0f 84 9a 00 00 00    	je     36d78 <read_line_info+0x1c68>
   36cde:	31 d2                	xor    %edx,%edx
   36ce0:	31 ed                	xor    %ebp,%ebp
   36ce2:	45 31 f6             	xor    %r14d,%r14d
   36ce5:	49 8d 41 01          	lea    0x1(%r9),%rax
   36ce9:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   36cee:	48 83 c1 ff          	add    $0xffffffffffffffff,%rcx
   36cf2:	48 89 4c 24 30       	mov    %rcx,0x30(%rsp)
   36cf7:	41 0f b6 19          	movzbl (%r9),%ebx
   36cfb:	83 fd 3f             	cmp    $0x3f,%ebp
   36cfe:	77 16                	ja     36d16 <read_line_info+0x1c06>
   36d00:	89 d8                	mov    %ebx,%eax
   36d02:	83 e0 7f             	and    $0x7f,%eax
   36d05:	89 e9                	mov    %ebp,%ecx
   36d07:	48 d3 e0             	shl    %cl,%rax
   36d0a:	49 09 c6             	or     %rax,%r14
   36d0d:	84 db                	test   %bl,%bl
   36d0f:	78 51                	js     36d62 <read_line_info+0x1c52>
   36d11:	e9 b1 00 00 00       	jmpq   36dc7 <read_line_info+0x1cb7>
   36d16:	85 d2                	test   %edx,%edx
   36d18:	75 44                	jne    36d5e <read_line_info+0x1c4e>
   36d1a:	4c 8b 44 24 18       	mov    0x18(%rsp),%r8
   36d1f:	2b 44 24 20          	sub    0x20(%rsp),%eax
   36d23:	be c8 00 00 00       	mov    $0xc8,%esi
   36d28:	4c 8d bc 24 e0 00 00 	lea    0xe0(%rsp),%r15
   36d2f:	00 
   36d30:	4c 89 ff             	mov    %r15,%rdi
   36d33:	48 8d 15 8d 81 00 00 	lea    0x818d(%rip),%rdx        # 3eec7 <elf_crc32.crc32_table+0x7a7>
   36d3a:	48 8d 0d 1d 82 00 00 	lea    0x821d(%rip),%rcx        # 3ef5e <elf_crc32.crc32_table+0x83e>
   36d41:	41 89 c1             	mov    %eax,%r9d
   36d44:	31 c0                	xor    %eax,%eax
   36d46:	e8 c5 d2 fc ff       	callq  4010 <snprintf@plt>
   36d4b:	48 8b 7c 24 48       	mov    0x48(%rsp),%rdi
   36d50:	4c 89 fe             	mov    %r15,%rsi
   36d53:	31 d2                	xor    %edx,%edx
   36d55:	ff 54 24 40          	callq  *0x40(%rsp)
   36d59:	ba 01 00 00 00       	mov    $0x1,%edx
   36d5e:	84 db                	test   %bl,%bl
   36d60:	79 65                	jns    36dc7 <read_line_info+0x1cb7>
   36d62:	83 c5 07             	add    $0x7,%ebp
   36d65:	4c 8b 4c 24 28       	mov    0x28(%rsp),%r9
   36d6a:	48 8b 4c 24 30       	mov    0x30(%rsp),%rcx
   36d6f:	48 85 c9             	test   %rcx,%rcx
   36d72:	0f 85 6d ff ff ff    	jne    36ce5 <read_line_info+0x1bd5>
   36d78:	83 7c 24 50 00       	cmpl   $0x0,0x50(%rsp)
   36d7d:	75 45                	jne    36dc4 <read_line_info+0x1cb4>
   36d7f:	4c 8b 44 24 18       	mov    0x18(%rsp),%r8
   36d84:	44 2b 4c 24 20       	sub    0x20(%rsp),%r9d
   36d89:	be c8 00 00 00       	mov    $0xc8,%esi
   36d8e:	48 8d 9c 24 e0 00 00 	lea    0xe0(%rsp),%rbx
   36d95:	00 
   36d96:	48 89 df             	mov    %rbx,%rdi
   36d99:	48 8d 15 27 81 00 00 	lea    0x8127(%rip),%rdx        # 3eec7 <elf_crc32.crc32_table+0x7a7>
   36da0:	48 8d 0d 10 81 00 00 	lea    0x8110(%rip),%rcx        # 3eeb7 <elf_crc32.crc32_table+0x797>
   36da7:	31 c0                	xor    %eax,%eax
   36da9:	e8 62 d2 fc ff       	callq  4010 <snprintf@plt>
   36dae:	48 8b 7c 24 48       	mov    0x48(%rsp),%rdi
   36db3:	48 89 de             	mov    %rbx,%rsi
   36db6:	31 d2                	xor    %edx,%edx
   36db8:	ff 54 24 40          	callq  *0x40(%rsp)
   36dbc:	c7 44 24 50 01 00 00 	movl   $0x1,0x50(%rsp)
   36dc3:	00 
   36dc4:	45 31 f6             	xor    %r14d,%r14d
   36dc7:	31 db                	xor    %ebx,%ebx
   36dc9:	31 c9                	xor    %ecx,%ecx
   36dcb:	4c 8b 4c 24 28       	mov    0x28(%rsp),%r9
   36dd0:	48 8b 54 24 30       	mov    0x30(%rsp),%rdx
   36dd5:	48 85 d2             	test   %rdx,%rdx
   36dd8:	75 24                	jne    36dfe <read_line_info+0x1cee>
   36dda:	e9 79 01 00 00       	jmpq   36f58 <read_line_info+0x1e48>
   36ddf:	83 c3 07             	add    $0x7,%ebx
   36de2:	40 84 ed             	test   %bpl,%bpl
   36de5:	0f 89 b9 01 00 00    	jns    36fa4 <read_line_info+0x1e94>
   36deb:	4c 8b 4c 24 28       	mov    0x28(%rsp),%r9
   36df0:	48 8b 54 24 30       	mov    0x30(%rsp),%rdx
   36df5:	48 85 d2             	test   %rdx,%rdx
   36df8:	0f 84 5a 01 00 00    	je     36f58 <read_line_info+0x1e48>
   36dfe:	49 8d 41 01          	lea    0x1(%r9),%rax
   36e02:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   36e07:	48 83 c2 ff          	add    $0xffffffffffffffff,%rdx
   36e0b:	48 89 54 24 30       	mov    %rdx,0x30(%rsp)
   36e10:	41 0f b6 29          	movzbl (%r9),%ebp
   36e14:	83 fb 40             	cmp    $0x40,%ebx
   36e17:	72 c6                	jb     36ddf <read_line_info+0x1ccf>
   36e19:	85 c9                	test   %ecx,%ecx
   36e1b:	75 c2                	jne    36ddf <read_line_info+0x1ccf>
   36e1d:	4c 8b 44 24 18       	mov    0x18(%rsp),%r8
   36e22:	2b 44 24 20          	sub    0x20(%rsp),%eax
   36e26:	be c8 00 00 00       	mov    $0xc8,%esi
   36e2b:	4c 8d bc 24 e0 00 00 	lea    0xe0(%rsp),%r15
   36e32:	00 
   36e33:	4c 89 ff             	mov    %r15,%rdi
   36e36:	48 8d 15 8a 80 00 00 	lea    0x808a(%rip),%rdx        # 3eec7 <elf_crc32.crc32_table+0x7a7>
   36e3d:	48 8d 0d 1a 81 00 00 	lea    0x811a(%rip),%rcx        # 3ef5e <elf_crc32.crc32_table+0x83e>
   36e44:	41 89 c1             	mov    %eax,%r9d
   36e47:	31 c0                	xor    %eax,%eax
   36e49:	e8 c2 d1 fc ff       	callq  4010 <snprintf@plt>
   36e4e:	48 8b 7c 24 48       	mov    0x48(%rsp),%rdi
   36e53:	4c 89 fe             	mov    %r15,%rsi
   36e56:	31 d2                	xor    %edx,%edx
   36e58:	ff 54 24 40          	callq  *0x40(%rsp)
   36e5c:	b9 01 00 00 00       	mov    $0x1,%ecx
   36e61:	e9 79 ff ff ff       	jmpq   36ddf <read_line_info+0x1ccf>
   36e66:	48 85 c9             	test   %rcx,%rcx
   36e69:	0f 84 8f 00 00 00    	je     36efe <read_line_info+0x1dee>
   36e6f:	48 89 c2             	mov    %rax,%rdx
   36e72:	31 c0                	xor    %eax,%eax
   36e74:	31 ed                	xor    %ebp,%ebp
   36e76:	4c 8d 4a 01          	lea    0x1(%rdx),%r9
   36e7a:	4c 89 4c 24 28       	mov    %r9,0x28(%rsp)
   36e7f:	48 83 c1 ff          	add    $0xffffffffffffffff,%rcx
   36e83:	48 89 4c 24 30       	mov    %rcx,0x30(%rsp)
   36e88:	0f b6 1a             	movzbl (%rdx),%ebx
   36e8b:	85 c0                	test   %eax,%eax
   36e8d:	75 47                	jne    36ed6 <read_line_info+0x1dc6>
   36e8f:	83 fd 40             	cmp    $0x40,%ebp
   36e92:	72 42                	jb     36ed6 <read_line_info+0x1dc6>
   36e94:	4c 8b 44 24 18       	mov    0x18(%rsp),%r8
   36e99:	44 2b 4c 24 20       	sub    0x20(%rsp),%r9d
   36e9e:	be c8 00 00 00       	mov    $0xc8,%esi
   36ea3:	4c 8d b4 24 e0 00 00 	lea    0xe0(%rsp),%r14
   36eaa:	00 
   36eab:	4c 89 f7             	mov    %r14,%rdi
   36eae:	48 8d 15 12 80 00 00 	lea    0x8012(%rip),%rdx        # 3eec7 <elf_crc32.crc32_table+0x7a7>
   36eb5:	48 8d 0d a2 80 00 00 	lea    0x80a2(%rip),%rcx        # 3ef5e <elf_crc32.crc32_table+0x83e>
   36ebc:	31 c0                	xor    %eax,%eax
   36ebe:	e8 4d d1 fc ff       	callq  4010 <snprintf@plt>
   36ec3:	48 8b 7c 24 48       	mov    0x48(%rsp),%rdi
   36ec8:	4c 89 f6             	mov    %r14,%rsi
   36ecb:	31 d2                	xor    %edx,%edx
   36ecd:	ff 54 24 40          	callq  *0x40(%rsp)
   36ed1:	b8 01 00 00 00       	mov    $0x1,%eax
   36ed6:	84 db                	test   %bl,%bl
   36ed8:	0f 89 26 04 00 00    	jns    37304 <read_line_info+0x21f4>
   36ede:	48 8b 4c 24 30       	mov    0x30(%rsp),%rcx
   36ee3:	48 85 c9             	test   %rcx,%rcx
   36ee6:	74 16                	je     36efe <read_line_info+0x1dee>
   36ee8:	83 c5 07             	add    $0x7,%ebp
   36eeb:	48 8b 54 24 28       	mov    0x28(%rsp),%rdx
   36ef0:	eb 84                	jmp    36e76 <read_line_info+0x1d66>
   36ef2:	4c 8d 3d fa 72 00 00 	lea    0x72fa(%rip),%r15        # 3e1f3 <str.0+0x3d3>
   36ef9:	e9 06 04 00 00       	jmpq   37304 <read_line_info+0x21f4>
   36efe:	83 7c 24 50 00       	cmpl   $0x0,0x50(%rsp)
   36f03:	0f 85 fb 03 00 00    	jne    37304 <read_line_info+0x21f4>
   36f09:	4c 8b 44 24 18       	mov    0x18(%rsp),%r8
   36f0e:	44 8b 4c 24 28       	mov    0x28(%rsp),%r9d
   36f13:	44 2b 4c 24 20       	sub    0x20(%rsp),%r9d
   36f18:	be c8 00 00 00       	mov    $0xc8,%esi
   36f1d:	48 8d 9c 24 e0 00 00 	lea    0xe0(%rsp),%rbx
   36f24:	00 
   36f25:	48 89 df             	mov    %rbx,%rdi
   36f28:	48 8d 15 98 7f 00 00 	lea    0x7f98(%rip),%rdx        # 3eec7 <elf_crc32.crc32_table+0x7a7>
   36f2f:	48 8d 0d 81 7f 00 00 	lea    0x7f81(%rip),%rcx        # 3eeb7 <elf_crc32.crc32_table+0x797>
   36f36:	31 c0                	xor    %eax,%eax
   36f38:	e8 d3 d0 fc ff       	callq  4010 <snprintf@plt>
   36f3d:	48 8b 7c 24 48       	mov    0x48(%rsp),%rdi
   36f42:	48 89 de             	mov    %rbx,%rsi
   36f45:	31 d2                	xor    %edx,%edx
   36f47:	ff 54 24 40          	callq  *0x40(%rsp)
   36f4b:	c7 44 24 50 01 00 00 	movl   $0x1,0x50(%rsp)
   36f52:	00 
   36f53:	e9 ac 03 00 00       	jmpq   37304 <read_line_info+0x21f4>
   36f58:	83 7c 24 50 00       	cmpl   $0x0,0x50(%rsp)
   36f5d:	75 45                	jne    36fa4 <read_line_info+0x1e94>
   36f5f:	4c 8b 44 24 18       	mov    0x18(%rsp),%r8
   36f64:	44 2b 4c 24 20       	sub    0x20(%rsp),%r9d
   36f69:	be c8 00 00 00       	mov    $0xc8,%esi
   36f6e:	48 8d 9c 24 e0 00 00 	lea    0xe0(%rsp),%rbx
   36f75:	00 
   36f76:	48 89 df             	mov    %rbx,%rdi
   36f79:	48 8d 15 47 7f 00 00 	lea    0x7f47(%rip),%rdx        # 3eec7 <elf_crc32.crc32_table+0x7a7>
   36f80:	48 8d 0d 30 7f 00 00 	lea    0x7f30(%rip),%rcx        # 3eeb7 <elf_crc32.crc32_table+0x797>
   36f87:	31 c0                	xor    %eax,%eax
   36f89:	e8 82 d0 fc ff       	callq  4010 <snprintf@plt>
   36f8e:	48 8b 7c 24 48       	mov    0x48(%rsp),%rdi
   36f93:	48 89 de             	mov    %rbx,%rsi
   36f96:	31 d2                	xor    %edx,%edx
   36f98:	ff 54 24 40          	callq  *0x40(%rsp)
   36f9c:	c7 44 24 50 01 00 00 	movl   $0x1,0x50(%rsp)
   36fa3:	00 
   36fa4:	31 db                	xor    %ebx,%ebx
   36fa6:	31 c9                	xor    %ecx,%ecx
   36fa8:	4c 8b 4c 24 28       	mov    0x28(%rsp),%r9
   36fad:	48 8b 54 24 30       	mov    0x30(%rsp),%rdx
   36fb2:	48 85 d2             	test   %rdx,%rdx
   36fb5:	75 20                	jne    36fd7 <read_line_info+0x1ec7>
   36fb7:	e9 80 00 00 00       	jmpq   3703c <read_line_info+0x1f2c>
   36fbc:	83 c3 07             	add    $0x7,%ebx
   36fbf:	40 84 ed             	test   %bpl,%bpl
   36fc2:	0f 89 c0 00 00 00    	jns    37088 <read_line_info+0x1f78>
   36fc8:	4c 8b 4c 24 28       	mov    0x28(%rsp),%r9
   36fcd:	48 8b 54 24 30       	mov    0x30(%rsp),%rdx
   36fd2:	48 85 d2             	test   %rdx,%rdx
   36fd5:	74 65                	je     3703c <read_line_info+0x1f2c>
   36fd7:	49 8d 41 01          	lea    0x1(%r9),%rax
   36fdb:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   36fe0:	48 83 c2 ff          	add    $0xffffffffffffffff,%rdx
   36fe4:	48 89 54 24 30       	mov    %rdx,0x30(%rsp)
   36fe9:	41 0f b6 29          	movzbl (%r9),%ebp
   36fed:	83 fb 40             	cmp    $0x40,%ebx
   36ff0:	72 ca                	jb     36fbc <read_line_info+0x1eac>
   36ff2:	85 c9                	test   %ecx,%ecx
   36ff4:	75 c6                	jne    36fbc <read_line_info+0x1eac>
   36ff6:	4c 8b 44 24 18       	mov    0x18(%rsp),%r8
   36ffb:	2b 44 24 20          	sub    0x20(%rsp),%eax
   36fff:	be c8 00 00 00       	mov    $0xc8,%esi
   37004:	4c 8d bc 24 e0 00 00 	lea    0xe0(%rsp),%r15
   3700b:	00 
   3700c:	4c 89 ff             	mov    %r15,%rdi
   3700f:	48 8d 15 b1 7e 00 00 	lea    0x7eb1(%rip),%rdx        # 3eec7 <elf_crc32.crc32_table+0x7a7>
   37016:	48 8d 0d 41 7f 00 00 	lea    0x7f41(%rip),%rcx        # 3ef5e <elf_crc32.crc32_table+0x83e>
   3701d:	41 89 c1             	mov    %eax,%r9d
   37020:	31 c0                	xor    %eax,%eax
   37022:	e8 e9 cf fc ff       	callq  4010 <snprintf@plt>
   37027:	48 8b 7c 24 48       	mov    0x48(%rsp),%rdi
   3702c:	4c 89 fe             	mov    %r15,%rsi
   3702f:	31 d2                	xor    %edx,%edx
   37031:	ff 54 24 40          	callq  *0x40(%rsp)
   37035:	b9 01 00 00 00       	mov    $0x1,%ecx
   3703a:	eb 80                	jmp    36fbc <read_line_info+0x1eac>
   3703c:	83 7c 24 50 00       	cmpl   $0x0,0x50(%rsp)
   37041:	75 45                	jne    37088 <read_line_info+0x1f78>
   37043:	4c 8b 44 24 18       	mov    0x18(%rsp),%r8
   37048:	44 2b 4c 24 20       	sub    0x20(%rsp),%r9d
   3704d:	be c8 00 00 00       	mov    $0xc8,%esi
   37052:	48 8d 9c 24 e0 00 00 	lea    0xe0(%rsp),%rbx
   37059:	00 
   3705a:	48 89 df             	mov    %rbx,%rdi
   3705d:	48 8d 15 63 7e 00 00 	lea    0x7e63(%rip),%rdx        # 3eec7 <elf_crc32.crc32_table+0x7a7>
   37064:	48 8d 0d 4c 7e 00 00 	lea    0x7e4c(%rip),%rcx        # 3eeb7 <elf_crc32.crc32_table+0x797>
   3706b:	31 c0                	xor    %eax,%eax
   3706d:	e8 9e cf fc ff       	callq  4010 <snprintf@plt>
   37072:	48 8b 7c 24 48       	mov    0x48(%rsp),%rdi
   37077:	48 89 de             	mov    %rbx,%rsi
   3707a:	31 d2                	xor    %edx,%edx
   3707c:	ff 54 24 40          	callq  *0x40(%rsp)
   37080:	c7 44 24 50 01 00 00 	movl   $0x1,0x50(%rsp)
   37087:	00 
   37088:	48 8b 44 24 60       	mov    0x60(%rsp),%rax
   3708d:	80 38 2f             	cmpb   $0x2f,(%rax)
   37090:	75 0a                	jne    3709c <read_line_info+0x1f8c>
   37092:	4c 8b 7c 24 60       	mov    0x60(%rsp),%r15
   37097:	e9 68 02 00 00       	jmpq   37304 <read_line_info+0x21f4>
   3709c:	48 8b 44 24 68       	mov    0x68(%rsp),%rax
   370a1:	45 85 f6             	test   %r14d,%r14d
   370a4:	74 23                	je     370c9 <read_line_info+0x1fb9>
   370a6:	41 83 c6 ff          	add    $0xffffffff,%r14d
   370aa:	48 8b 44 24 70       	mov    0x70(%rsp),%rax
   370af:	4c 3b 70 20          	cmp    0x20(%rax),%r14
   370b3:	0f 83 a4 04 00 00    	jae    3755d <read_line_info+0x244d>
   370b9:	49 c1 e6 03          	shl    $0x3,%r14
   370bd:	48 8b 44 24 70       	mov    0x70(%rsp),%rax
   370c2:	4c 03 70 28          	add    0x28(%rax),%r14
   370c6:	4c 89 f0             	mov    %r14,%rax
   370c9:	4c 8b 30             	mov    (%rax),%r14
   370cc:	4c 89 f7             	mov    %r14,%rdi
   370cf:	e8 f4 cf fc ff       	callq  40c8 <strlen@plt>
   370d4:	48 89 c5             	mov    %rax,%rbp
   370d7:	48 8b 7c 24 60       	mov    0x60(%rsp),%rdi
   370dc:	e8 e7 cf fc ff       	callq  40c8 <strlen@plt>
   370e1:	49 89 c4             	mov    %rax,%r12
   370e4:	48 8d 34 28          	lea    (%rax,%rbp,1),%rsi
   370e8:	48 83 c6 02          	add    $0x2,%rsi
   370ec:	48 8b 54 24 40       	mov    0x40(%rsp),%rdx
   370f1:	48 8b 4c 24 48       	mov    0x48(%rsp),%rcx
   370f6:	48 8b 7c 24 58       	mov    0x58(%rsp),%rdi
   370fb:	e8 40 9d ff ff       	callq  30e40 <__rdos_backtrace_alloc>
   37100:	48 85 c0             	test   %rax,%rax
   37103:	0f 84 1a 03 00 00    	je     37423 <read_line_info+0x2313>
   37109:	49 89 c7             	mov    %rax,%r15
   3710c:	48 89 c3             	mov    %rax,%rbx
   3710f:	4c 89 ff             	mov    %r15,%rdi
   37112:	4c 89 f6             	mov    %r14,%rsi
   37115:	48 89 ea             	mov    %rbp,%rdx
   37118:	e8 bb cf fc ff       	callq  40d8 <memcpy@plt>
   3711d:	41 c6 04 2f 2f       	movb   $0x2f,(%r15,%rbp,1)
   37122:	49 8d 3c 2f          	lea    (%r15,%rbp,1),%rdi
   37126:	48 83 c7 01          	add    $0x1,%rdi
   3712a:	49 83 c4 01          	add    $0x1,%r12
   3712e:	48 8b 74 24 60       	mov    0x60(%rsp),%rsi
   37133:	4c 89 e2             	mov    %r12,%rdx
   37136:	e8 9d cf fc ff       	callq  40d8 <memcpy@plt>
   3713b:	e9 c4 01 00 00       	jmpq   37304 <read_line_info+0x21f4>
   37140:	48 83 f9 01          	cmp    $0x1,%rcx
   37144:	76 7d                	jbe    371c3 <read_line_info+0x20b3>
   37146:	49 8d 49 03          	lea    0x3(%r9),%rcx
   3714a:	48 89 4c 24 28       	mov    %rcx,0x28(%rsp)
   3714f:	49 83 c0 fd          	add    $0xfffffffffffffffd,%r8
   37153:	4c 89 44 24 30       	mov    %r8,0x30(%rsp)
   37158:	83 7c 24 38 00       	cmpl   $0x0,0x38(%rsp)
   3715d:	0f 84 14 01 00 00    	je     37277 <read_line_info+0x2167>
   37163:	41 0f b6 41 01       	movzbl 0x1(%r9),%eax
   37168:	48 c1 e0 08          	shl    $0x8,%rax
   3716c:	41 0f b6 49 02       	movzbl 0x2(%r9),%ecx
   37171:	e9 32 01 00 00       	jmpq   372a8 <read_line_info+0x2198>
   37176:	4c 8b 44 24 18       	mov    0x18(%rsp),%r8
   3717b:	49 89 f9             	mov    %rdi,%r9
   3717e:	44 2b 4c 24 20       	sub    0x20(%rsp),%r9d
   37183:	be c8 00 00 00       	mov    $0xc8,%esi
   37188:	48 8d 9c 24 e0 00 00 	lea    0xe0(%rsp),%rbx
   3718f:	00 
   37190:	48 89 df             	mov    %rbx,%rdi
   37193:	48 8d 15 2d 7d 00 00 	lea    0x7d2d(%rip),%rdx        # 3eec7 <elf_crc32.crc32_table+0x7a7>
   3719a:	48 8d 0d 9c 7d 00 00 	lea    0x7d9c(%rip),%rcx        # 3ef3d <elf_crc32.crc32_table+0x81d>
   371a1:	31 c0                	xor    %eax,%eax
   371a3:	e8 68 ce fc ff       	callq  4010 <snprintf@plt>
   371a8:	48 8b 7c 24 48       	mov    0x48(%rsp),%rdi
   371ad:	48 89 de             	mov    %rbx,%rsi
   371b0:	31 d2                	xor    %edx,%edx
   371b2:	ff 54 24 40          	callq  *0x40(%rsp)
   371b6:	31 c0                	xor    %eax,%eax
   371b8:	e9 42 01 00 00       	jmpq   372ff <read_line_info+0x21ef>
   371bd:	48 83 f9 03          	cmp    $0x3,%rcx
   371c1:	77 65                	ja     37228 <read_line_info+0x2118>
   371c3:	83 7c 24 50 00       	cmpl   $0x0,0x50(%rsp)
   371c8:	75 48                	jne    37212 <read_line_info+0x2102>
   371ca:	4c 8b 44 24 18       	mov    0x18(%rsp),%r8
   371cf:	49 89 f9             	mov    %rdi,%r9
   371d2:	44 2b 4c 24 20       	sub    0x20(%rsp),%r9d
   371d7:	be c8 00 00 00       	mov    $0xc8,%esi
   371dc:	48 8d 9c 24 e0 00 00 	lea    0xe0(%rsp),%rbx
   371e3:	00 
   371e4:	48 89 df             	mov    %rbx,%rdi
   371e7:	48 8d 15 d9 7c 00 00 	lea    0x7cd9(%rip),%rdx        # 3eec7 <elf_crc32.crc32_table+0x7a7>
   371ee:	48 8d 0d c2 7c 00 00 	lea    0x7cc2(%rip),%rcx        # 3eeb7 <elf_crc32.crc32_table+0x797>
   371f5:	31 c0                	xor    %eax,%eax
   371f7:	e8 14 ce fc ff       	callq  4010 <snprintf@plt>
   371fc:	48 8b 7c 24 48       	mov    0x48(%rsp),%rdi
   37201:	48 89 de             	mov    %rbx,%rsi
   37204:	31 d2                	xor    %edx,%edx
   37206:	ff 54 24 40          	callq  *0x40(%rsp)
   3720a:	c7 44 24 50 01 00 00 	movl   $0x1,0x50(%rsp)
   37211:	00 
   37212:	31 c0                	xor    %eax,%eax
   37214:	e9 e6 00 00 00       	jmpq   372ff <read_line_info+0x21ef>
   37219:	48 8d 7c 24 18       	lea    0x18(%rsp),%rdi
   3721e:	e8 ad ba ff ff       	callq  32cd0 <read_uint64>
   37223:	e9 d7 00 00 00       	jmpq   372ff <read_line_info+0x21ef>
   37228:	49 8d 49 05          	lea    0x5(%r9),%rcx
   3722c:	48 89 4c 24 28       	mov    %rcx,0x28(%rsp)
   37231:	49 83 c0 fb          	add    $0xfffffffffffffffb,%r8
   37235:	4c 89 44 24 30       	mov    %r8,0x30(%rsp)
   3723a:	83 7c 24 38 00       	cmpl   $0x0,0x38(%rsp)
   3723f:	74 41                	je     37282 <read_line_info+0x2172>
   37241:	41 0f b6 41 01       	movzbl 0x1(%r9),%eax
   37246:	48 c1 e0 18          	shl    $0x18,%rax
   3724a:	41 0f b6 49 02       	movzbl 0x2(%r9),%ecx
   3724f:	48 c1 e1 10          	shl    $0x10,%rcx
   37253:	48 09 c1             	or     %rax,%rcx
   37256:	41 0f b6 41 03       	movzbl 0x3(%r9),%eax
   3725b:	48 c1 e0 08          	shl    $0x8,%rax
   3725f:	48 09 c8             	or     %rcx,%rax
   37262:	41 0f b6 49 04       	movzbl 0x4(%r9),%ecx
   37267:	eb 3f                	jmp    372a8 <read_line_info+0x2198>
   37269:	83 7c 24 50 00       	cmpl   $0x0,0x50(%rsp)
   3726e:	74 42                	je     372b2 <read_line_info+0x21a2>
   37270:	31 db                	xor    %ebx,%ebx
   37272:	e9 85 00 00 00       	jmpq   372fc <read_line_info+0x21ec>
   37277:	41 0f b6 41 02       	movzbl 0x2(%r9),%eax
   3727c:	48 c1 e0 08          	shl    $0x8,%rax
   37280:	eb 21                	jmp    372a3 <read_line_info+0x2193>
   37282:	41 0f b6 41 04       	movzbl 0x4(%r9),%eax
   37287:	48 c1 e0 18          	shl    $0x18,%rax
   3728b:	41 0f b6 49 03       	movzbl 0x3(%r9),%ecx
   37290:	48 c1 e1 10          	shl    $0x10,%rcx
   37294:	48 09 c1             	or     %rax,%rcx
   37297:	41 0f b6 41 02       	movzbl 0x2(%r9),%eax
   3729c:	48 c1 e0 08          	shl    $0x8,%rax
   372a0:	48 09 c8             	or     %rcx,%rax
   372a3:	41 0f b6 49 01       	movzbl 0x1(%r9),%ecx
   372a8:	48 09 c1             	or     %rax,%rcx
   372ab:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
   372b0:	eb 52                	jmp    37304 <read_line_info+0x21f4>
   372b2:	4c 8b 44 24 18       	mov    0x18(%rsp),%r8
   372b7:	49 89 f9             	mov    %rdi,%r9
   372ba:	44 2b 4c 24 20       	sub    0x20(%rsp),%r9d
   372bf:	31 db                	xor    %ebx,%ebx
   372c1:	be c8 00 00 00       	mov    $0xc8,%esi
   372c6:	48 8d ac 24 e0 00 00 	lea    0xe0(%rsp),%rbp
   372cd:	00 
   372ce:	48 89 ef             	mov    %rbp,%rdi
   372d1:	48 8d 15 ef 7b 00 00 	lea    0x7bef(%rip),%rdx        # 3eec7 <elf_crc32.crc32_table+0x7a7>
   372d8:	48 8d 0d d8 7b 00 00 	lea    0x7bd8(%rip),%rcx        # 3eeb7 <elf_crc32.crc32_table+0x797>
   372df:	31 c0                	xor    %eax,%eax
   372e1:	e8 2a cd fc ff       	callq  4010 <snprintf@plt>
   372e6:	48 8b 7c 24 48       	mov    0x48(%rsp),%rdi
   372eb:	48 89 ee             	mov    %rbp,%rsi
   372ee:	31 d2                	xor    %edx,%edx
   372f0:	ff 54 24 40          	callq  *0x40(%rsp)
   372f4:	c7 44 24 50 01 00 00 	movl   $0x1,0x50(%rsp)
   372fb:	00 
   372fc:	0f b6 c3             	movzbl %bl,%eax
   372ff:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   37304:	4c 8b 74 24 58       	mov    0x58(%rsp),%r14
   37309:	4c 8b 64 24 10       	mov    0x10(%rsp),%r12
   3730e:	e9 07 f1 ff ff       	jmpq   3641a <read_line_info+0x130a>
   37313:	40 b5 01             	mov    $0x1,%bpl
   37316:	48 83 bc 24 a8 00 00 	cmpq   $0x0,0xa8(%rsp)
   3731d:	00 00 
   3731f:	4c 8b a4 24 88 00 00 	mov    0x88(%rsp),%r12
   37326:	00 
   37327:	4c 8b bc 24 80 00 00 	mov    0x80(%rsp),%r15
   3732e:	00 
   3732f:	0f 84 da df ff ff    	je     3530f <read_line_info+0x1ff>
   37335:	40 84 ed             	test   %bpl,%bpl
   37338:	0f 84 d1 df ff ff    	je     3530f <read_line_info+0x1ff>
   3733e:	83 7c 24 50 00       	cmpl   $0x0,0x50(%rsp)
   37343:	0f 85 c6 df ff ff    	jne    3530f <read_line_info+0x1ff>
   37349:	4c 8d 84 24 90 00 00 	lea    0x90(%rsp),%r8
   37350:	00 
   37351:	be 18 00 00 00       	mov    $0x18,%esi
   37356:	48 8b 7c 24 58       	mov    0x58(%rsp),%rdi
   3735b:	4c 89 fa             	mov    %r15,%rdx
   3735e:	4c 89 e1             	mov    %r12,%rcx
   37361:	e8 2a 9b ff ff       	callq  30e90 <__rdos_backtrace_vector_grow>
   37366:	48 85 c0             	test   %rax,%rax
   37369:	0f 84 a0 df ff ff    	je     3530f <read_line_info+0x1ff>
   3736f:	48 c7 00 ff ff ff ff 	movq   $0xffffffffffffffff,(%rax)
   37376:	0f 57 c0             	xorps  %xmm0,%xmm0
   37379:	0f 11 40 08          	movups %xmm0,0x8(%rax)
   3737d:	48 8d b4 24 90 00 00 	lea    0x90(%rsp),%rsi
   37384:	00 
   37385:	48 8b 7c 24 58       	mov    0x58(%rsp),%rdi
   3738a:	4c 89 fa             	mov    %r15,%rdx
   3738d:	4c 89 e1             	mov    %r12,%rcx
   37390:	e8 0b 9c ff ff       	callq  30fa0 <__rdos_backtrace_vector_release>
   37395:	85 c0                	test   %eax,%eax
   37397:	0f 84 72 df ff ff    	je     3530f <read_line_info+0x1ff>
   3739d:	48 8b 9c 24 90 00 00 	mov    0x90(%rsp),%rbx
   373a4:	00 
   373a5:	48 8b b4 24 a8 00 00 	mov    0xa8(%rsp),%rsi
   373ac:	00 
   373ad:	48 8d 0d 2c 03 00 00 	lea    0x32c(%rip),%rcx        # 376e0 <line_compare>
   373b4:	ba 18 00 00 00       	mov    $0x18,%edx
   373b9:	48 89 df             	mov    %rbx,%rdi
   373bc:	e8 0f 19 00 00       	callq  38cd0 <__rdos_backtrace_qsort>
   373c1:	48 8b 84 24 f0 01 00 	mov    0x1f0(%rsp),%rax
   373c8:	00 
   373c9:	48 89 18             	mov    %rbx,(%rax)
   373cc:	48 8b 9c 24 f8 01 00 	mov    0x1f8(%rsp),%rbx
   373d3:	00 
   373d4:	b8 01 00 00 00       	mov    $0x1,%eax
   373d9:	48 8b 8c 24 a8 00 00 	mov    0xa8(%rsp),%rcx
   373e0:	00 
   373e1:	e9 b9 df ff ff       	jmpq   3539f <read_line_info+0x28f>
   373e6:	4c 8b 44 24 18       	mov    0x18(%rsp),%r8
   373eb:	44 8b 4c 24 28       	mov    0x28(%rsp),%r9d
   373f0:	44 2b 4c 24 20       	sub    0x20(%rsp),%r9d
   373f5:	48 8d 15 cb 7a 00 00 	lea    0x7acb(%rip),%rdx        # 3eec7 <elf_crc32.crc32_table+0x7a7>
   373fc:	48 8d 0d b3 7b 00 00 	lea    0x7bb3(%rip),%rcx        # 3efb6 <elf_crc32.crc32_table+0x896>
   37403:	48 8d 9c 24 e0 00 00 	lea    0xe0(%rsp),%rbx
   3740a:	00 
   3740b:	be c8 00 00 00       	mov    $0xc8,%esi
   37410:	48 89 df             	mov    %rbx,%rdi
   37413:	e9 d2 de ff ff       	jmpq   352ea <read_line_info+0x1da>
   37418:	83 7c 24 50 00       	cmpl   $0x0,0x50(%rsp)
   3741d:	0f 84 8e 00 00 00    	je     374b1 <read_line_info+0x23a1>
   37423:	31 ed                	xor    %ebp,%ebp
   37425:	48 83 bc 24 a8 00 00 	cmpq   $0x0,0xa8(%rsp)
   3742c:	00 00 
   3742e:	4c 8b a4 24 88 00 00 	mov    0x88(%rsp),%r12
   37435:	00 
   37436:	4c 8b bc 24 80 00 00 	mov    0x80(%rsp),%r15
   3743d:	00 
   3743e:	0f 85 f1 fe ff ff    	jne    37335 <read_line_info+0x2225>
   37444:	e9 c6 de ff ff       	jmpq   3530f <read_line_info+0x1ff>
   37449:	4c 8b 44 24 18       	mov    0x18(%rsp),%r8
   3744e:	44 8b 4c 24 28       	mov    0x28(%rsp),%r9d
   37453:	44 2b 4c 24 20       	sub    0x20(%rsp),%r9d
   37458:	48 8d 15 68 7a 00 00 	lea    0x7a68(%rip),%rdx        # 3eec7 <elf_crc32.crc32_table+0x7a7>
   3745f:	48 8d 0d b5 7b 00 00 	lea    0x7bb5(%rip),%rcx        # 3f01b <elf_crc32.crc32_table+0x8fb>
   37466:	31 ed                	xor    %ebp,%ebp
   37468:	48 8d 9c 24 e0 00 00 	lea    0xe0(%rsp),%rbx
   3746f:	00 
   37470:	be c8 00 00 00       	mov    $0xc8,%esi
   37475:	48 89 df             	mov    %rbx,%rdi
   37478:	31 c0                	xor    %eax,%eax
   3747a:	e8 91 cb fc ff       	callq  4010 <snprintf@plt>
   3747f:	48 8b 7c 24 48       	mov    0x48(%rsp),%rdi
   37484:	48 89 de             	mov    %rbx,%rsi
   37487:	31 d2                	xor    %edx,%edx
   37489:	ff 54 24 40          	callq  *0x40(%rsp)
   3748d:	48 83 bc 24 a8 00 00 	cmpq   $0x0,0xa8(%rsp)
   37494:	00 00 
   37496:	4c 8b a4 24 88 00 00 	mov    0x88(%rsp),%r12
   3749d:	00 
   3749e:	4c 8b bc 24 80 00 00 	mov    0x80(%rsp),%r15
   374a5:	00 
   374a6:	0f 85 89 fe ff ff    	jne    37335 <read_line_info+0x2225>
   374ac:	e9 5e de ff ff       	jmpq   3530f <read_line_info+0x1ff>
   374b1:	4c 8b 44 24 18       	mov    0x18(%rsp),%r8
   374b6:	44 8b 4c 24 28       	mov    0x28(%rsp),%r9d
   374bb:	44 2b 4c 24 20       	sub    0x20(%rsp),%r9d
   374c0:	48 8d 15 00 7a 00 00 	lea    0x7a00(%rip),%rdx        # 3eec7 <elf_crc32.crc32_table+0x7a7>
   374c7:	48 8d 0d e9 79 00 00 	lea    0x79e9(%rip),%rcx        # 3eeb7 <elf_crc32.crc32_table+0x797>
   374ce:	31 ed                	xor    %ebp,%ebp
   374d0:	48 8d 9c 24 e0 00 00 	lea    0xe0(%rsp),%rbx
   374d7:	00 
   374d8:	be c8 00 00 00       	mov    $0xc8,%esi
   374dd:	48 89 df             	mov    %rbx,%rdi
   374e0:	eb 3a                	jmp    3751c <read_line_info+0x240c>
   374e2:	83 7c 24 50 00       	cmpl   $0x0,0x50(%rsp)
   374e7:	0f 85 36 ff ff ff    	jne    37423 <read_line_info+0x2313>
   374ed:	4c 8b 44 24 18       	mov    0x18(%rsp),%r8
   374f2:	4c 8b 4c 24 60       	mov    0x60(%rsp),%r9
   374f7:	44 2b 4c 24 20       	sub    0x20(%rsp),%r9d
   374fc:	48 8d 15 c4 79 00 00 	lea    0x79c4(%rip),%rdx        # 3eec7 <elf_crc32.crc32_table+0x7a7>
   37503:	48 8d 0d ad 79 00 00 	lea    0x79ad(%rip),%rcx        # 3eeb7 <elf_crc32.crc32_table+0x797>
   3750a:	31 ed                	xor    %ebp,%ebp
   3750c:	48 8d 9c 24 e0 00 00 	lea    0xe0(%rsp),%rbx
   37513:	00 
   37514:	be c8 00 00 00       	mov    $0xc8,%esi
   37519:	48 89 df             	mov    %rbx,%rdi
   3751c:	31 c0                	xor    %eax,%eax
   3751e:	e8 ed ca fc ff       	callq  4010 <snprintf@plt>
   37523:	48 8b 7c 24 48       	mov    0x48(%rsp),%rdi
   37528:	48 89 de             	mov    %rbx,%rsi
   3752b:	31 d2                	xor    %edx,%edx
   3752d:	ff 54 24 40          	callq  *0x40(%rsp)
   37531:	c7 44 24 50 01 00 00 	movl   $0x1,0x50(%rsp)
   37538:	00 
   37539:	48 83 bc 24 a8 00 00 	cmpq   $0x0,0xa8(%rsp)
   37540:	00 00 
   37542:	4c 8b a4 24 88 00 00 	mov    0x88(%rsp),%r12
   37549:	00 
   3754a:	4c 8b bc 24 80 00 00 	mov    0x80(%rsp),%r15
   37551:	00 
   37552:	0f 85 dd fd ff ff    	jne    37335 <read_line_info+0x2225>
   37558:	e9 b2 dd ff ff       	jmpq   3530f <read_line_info+0x1ff>
   3755d:	4c 8b 44 24 18       	mov    0x18(%rsp),%r8
   37562:	44 8b 4c 24 28       	mov    0x28(%rsp),%r9d
   37567:	44 2b 4c 24 20       	sub    0x20(%rsp),%r9d
   3756c:	48 8d 15 54 79 00 00 	lea    0x7954(%rip),%rdx        # 3eec7 <elf_crc32.crc32_table+0x7a7>
   37573:	48 8d 0d 72 7a 00 00 	lea    0x7a72(%rip),%rcx        # 3efec <elf_crc32.crc32_table+0x8cc>
   3757a:	e9 e7 fe ff ff       	jmpq   37466 <read_line_info+0x2356>
   3757f:	90                   	nop

0000000000037580 <line_search>:
   37580:	48 8b 0f             	mov    (%rdi),%rcx
   37583:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   37588:	48 3b 0e             	cmp    (%rsi),%rcx
   3758b:	72 09                	jb     37596 <line_search+0x16>
   3758d:	31 c0                	xor    %eax,%eax
   3758f:	48 3b 4e 18          	cmp    0x18(%rsi),%rcx
   37593:	0f 93 c0             	setae  %al
   37596:	c3                   	retq   
   37597:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   3759e:	00 00 

00000000000375a0 <function_addrs_search>:
   375a0:	48 8b 0f             	mov    (%rdi),%rcx
   375a3:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   375a8:	48 3b 0e             	cmp    (%rsi),%rcx
   375ab:	72 09                	jb     375b6 <function_addrs_search+0x16>
   375ad:	31 c0                	xor    %eax,%eax
   375af:	48 3b 4e 08          	cmp    0x8(%rsi),%rcx
   375b3:	0f 93 c0             	setae  %al
   375b6:	c3                   	retq   
   375b7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   375be:	00 00 

00000000000375c0 <report_inlined_functions>:
   375c0:	55                   	push   %rbp
   375c1:	41 57                	push   %r15
   375c3:	41 56                	push   %r14
   375c5:	41 55                	push   %r13
   375c7:	41 54                	push   %r12
   375c9:	53                   	push   %rbx
   375ca:	50                   	push   %rax
   375cb:	49 89 d4             	mov    %rdx,%r12
   375ce:	48 89 3c 24          	mov    %rdi,(%rsp)
   375d2:	48 8b 56 20          	mov    0x20(%rsi),%rdx
   375d6:	31 ed                	xor    %ebp,%ebp
   375d8:	48 85 d2             	test   %rdx,%rdx
   375db:	0f 84 e6 00 00 00    	je     376c7 <report_inlined_functions+0x107>
   375e1:	4d 89 ce             	mov    %r9,%r14
   375e4:	4d 89 c7             	mov    %r8,%r15
   375e7:	49 89 cd             	mov    %rcx,%r13
   375ea:	48 89 f3             	mov    %rsi,%rbx
   375ed:	48 8b 76 18          	mov    0x18(%rsi),%rsi
   375f1:	4c 8d 05 a8 ff ff ff 	lea    -0x58(%rip),%r8        # 375a0 <function_addrs_search>
   375f8:	48 89 e7             	mov    %rsp,%rdi
   375fb:	b9 18 00 00 00       	mov    $0x18,%ecx
   37600:	e8 8b ca fc ff       	callq  4090 <bsearch@plt>
   37605:	48 85 c0             	test   %rax,%rax
   37608:	0f 84 b9 00 00 00    	je     376c7 <report_inlined_functions+0x107>
   3760e:	48 8b 4b 18          	mov    0x18(%rbx),%rcx
   37612:	48 8b 53 20          	mov    0x20(%rbx),%rdx
   37616:	48 89 c5             	mov    %rax,%rbp
   37619:	48 29 cd             	sub    %rcx,%rbp
   3761c:	48 c1 fd 03          	sar    $0x3,%rbp
   37620:	48 be ab aa aa aa aa 	movabs $0xaaaaaaaaaaaaaaab,%rsi
   37627:	aa aa aa 
   3762a:	48 0f af ee          	imul   %rsi,%rbp
   3762e:	48 83 c5 01          	add    $0x1,%rbp
   37632:	48 8b 3c 24          	mov    (%rsp),%rdi
   37636:	48 39 d5             	cmp    %rdx,%rbp
   37639:	73 46                	jae    37681 <report_inlined_functions+0xc1>
   3763b:	48 89 c3             	mov    %rax,%rbx
   3763e:	48 83 c3 18          	add    $0x18,%rbx
   37642:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   37649:	00 00 00 
   3764c:	0f 1f 40 00          	nopl   0x0(%rax)
   37650:	48 3b 3b             	cmp    (%rbx),%rdi
   37653:	72 2c                	jb     37681 <report_inlined_functions+0xc1>
   37655:	48 3b 7b 08          	cmp    0x8(%rbx),%rdi
   37659:	73 1f                	jae    3767a <report_inlined_functions+0xba>
   3765b:	48 83 c0 18          	add    $0x18,%rax
   3765f:	48 89 dd             	mov    %rbx,%rbp
   37662:	48 29 cd             	sub    %rcx,%rbp
   37665:	48 c1 fd 03          	sar    $0x3,%rbp
   37669:	48 0f af ee          	imul   %rsi,%rbp
   3766d:	48 83 c5 01          	add    $0x1,%rbp
   37671:	48 83 c3 18          	add    $0x18,%rbx
   37675:	48 39 d5             	cmp    %rdx,%rbp
   37678:	72 d6                	jb     37650 <report_inlined_functions+0x90>
   3767a:	48 83 c3 e8          	add    $0xffffffffffffffe8,%rbx
   3767e:	48 89 d8             	mov    %rbx,%rax
   37681:	48 8b 58 10          	mov    0x10(%rax),%rbx
   37685:	48 89 de             	mov    %rbx,%rsi
   37688:	4c 89 e2             	mov    %r12,%rdx
   3768b:	4c 89 e9             	mov    %r13,%rcx
   3768e:	4d 89 f8             	mov    %r15,%r8
   37691:	4d 89 f1             	mov    %r14,%r9
   37694:	e8 27 ff ff ff       	callq  375c0 <report_inlined_functions>
   37699:	89 c5                	mov    %eax,%ebp
   3769b:	85 c0                	test   %eax,%eax
   3769d:	75 28                	jne    376c7 <report_inlined_functions+0x107>
   3769f:	48 8b 34 24          	mov    (%rsp),%rsi
   376a3:	49 8b 17             	mov    (%r15),%rdx
   376a6:	41 8b 0e             	mov    (%r14),%ecx
   376a9:	4c 8b 03             	mov    (%rbx),%r8
   376ac:	4c 89 ef             	mov    %r13,%rdi
   376af:	41 ff d4             	callq  *%r12
   376b2:	89 c5                	mov    %eax,%ebp
   376b4:	85 c0                	test   %eax,%eax
   376b6:	75 0f                	jne    376c7 <report_inlined_functions+0x107>
   376b8:	48 8b 43 08          	mov    0x8(%rbx),%rax
   376bc:	49 89 07             	mov    %rax,(%r15)
   376bf:	8b 43 10             	mov    0x10(%rbx),%eax
   376c2:	41 89 06             	mov    %eax,(%r14)
   376c5:	31 ed                	xor    %ebp,%ebp
   376c7:	89 e8                	mov    %ebp,%eax
   376c9:	48 83 c4 08          	add    $0x8,%rsp
   376cd:	5b                   	pop    %rbx
   376ce:	41 5c                	pop    %r12
   376d0:	41 5d                	pop    %r13
   376d2:	41 5e                	pop    %r14
   376d4:	41 5f                	pop    %r15
   376d6:	5d                   	pop    %rbp
   376d7:	c3                   	retq   
   376d8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   376df:	00 

00000000000376e0 <line_compare>:
   376e0:	48 8b 0e             	mov    (%rsi),%rcx
   376e3:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   376e8:	48 39 0f             	cmp    %rcx,(%rdi)
   376eb:	72 1a                	jb     37707 <line_compare+0x27>
   376ed:	b8 01 00 00 00       	mov    $0x1,%eax
   376f2:	77 13                	ja     37707 <line_compare+0x27>
   376f4:	8b 4e 14             	mov    0x14(%rsi),%ecx
   376f7:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   376fc:	39 4f 14             	cmp    %ecx,0x14(%rdi)
   376ff:	7c 06                	jl     37707 <line_compare+0x27>
   37701:	0f 9f c0             	setg   %al
   37704:	0f b6 c0             	movzbl %al,%eax
   37707:	c3                   	retq   
   37708:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   3770f:	00 

0000000000037710 <read_function_entry>:
   37710:	55                   	push   %rbp
   37711:	41 57                	push   %r15
   37713:	41 56                	push   %r14
   37715:	41 55                	push   %r13
   37717:	41 54                	push   %r12
   37719:	53                   	push   %rbx
   3771a:	48 81 ec 58 01 00 00 	sub    $0x158,%rsp
   37721:	48 89 cd             	mov    %rcx,%rbp
   37724:	48 89 74 24 50       	mov    %rsi,0x50(%rsp)
   37729:	48 89 7c 24 28       	mov    %rdi,0x28(%rsp)
   3772e:	49 8b 48 18          	mov    0x18(%r8),%rcx
   37732:	48 85 c9             	test   %rcx,%rcx
   37735:	0f 84 0d 09 00 00    	je     38048 <read_function_entry+0x938>
   3773b:	4d 89 c5             	mov    %r8,%r13
   3773e:	49 89 d7             	mov    %rdx,%r15
   37741:	4c 89 4c 24 78       	mov    %r9,0x78(%rsp)
   37746:	4d 8b 4d 10          	mov    0x10(%r13),%r9
   3774a:	48 85 c9             	test   %rcx,%rcx
   3774d:	0f 84 a1 08 00 00    	je     37ff4 <read_function_entry+0x8e4>
   37753:	48 89 6c 24 38       	mov    %rbp,0x38(%rsp)
   37758:	31 d2                	xor    %edx,%edx
   3775a:	31 ed                	xor    %ebp,%ebp
   3775c:	45 31 f6             	xor    %r14d,%r14d
   3775f:	90                   	nop
   37760:	49 8d 41 01          	lea    0x1(%r9),%rax
   37764:	49 89 45 10          	mov    %rax,0x10(%r13)
   37768:	48 83 c1 ff          	add    $0xffffffffffffffff,%rcx
   3776c:	49 89 4d 18          	mov    %rcx,0x18(%r13)
   37770:	41 0f b6 19          	movzbl (%r9),%ebx
   37774:	83 fd 3f             	cmp    $0x3f,%ebp
   37777:	77 17                	ja     37790 <read_function_entry+0x80>
   37779:	89 d8                	mov    %ebx,%eax
   3777b:	83 e0 7f             	and    $0x7f,%eax
   3777e:	89 e9                	mov    %ebp,%ecx
   37780:	48 d3 e0             	shl    %cl,%rax
   37783:	49 09 c6             	or     %rax,%r14
   37786:	84 db                	test   %bl,%bl
   37788:	78 0e                	js     37798 <read_function_entry+0x88>
   3778a:	eb 74                	jmp    37800 <read_function_entry+0xf0>
   3778c:	0f 1f 40 00          	nopl   0x0(%rax)
   37790:	85 d2                	test   %edx,%edx
   37792:	74 19                	je     377ad <read_function_entry+0x9d>
   37794:	84 db                	test   %bl,%bl
   37796:	79 68                	jns    37800 <read_function_entry+0xf0>
   37798:	83 c5 07             	add    $0x7,%ebp
   3779b:	4d 8b 4d 10          	mov    0x10(%r13),%r9
   3779f:	49 8b 4d 18          	mov    0x18(%r13),%rcx
   377a3:	48 85 c9             	test   %rcx,%rcx
   377a6:	75 b8                	jne    37760 <read_function_entry+0x50>
   377a8:	e9 47 08 00 00       	jmpq   37ff4 <read_function_entry+0x8e4>
   377ad:	4d 8b 45 00          	mov    0x0(%r13),%r8
   377b1:	41 2b 45 08          	sub    0x8(%r13),%eax
   377b5:	be c8 00 00 00       	mov    $0xc8,%esi
   377ba:	4c 8d a4 24 90 00 00 	lea    0x90(%rsp),%r12
   377c1:	00 
   377c2:	4c 89 e7             	mov    %r12,%rdi
   377c5:	48 8d 15 fb 76 00 00 	lea    0x76fb(%rip),%rdx        # 3eec7 <elf_crc32.crc32_table+0x7a7>
   377cc:	48 8d 0d 8b 77 00 00 	lea    0x778b(%rip),%rcx        # 3ef5e <elf_crc32.crc32_table+0x83e>
   377d3:	41 89 c1             	mov    %eax,%r9d
   377d6:	31 c0                	xor    %eax,%eax
   377d8:	e8 33 c8 fc ff       	callq  4010 <snprintf@plt>
   377dd:	49 8b 7d 30          	mov    0x30(%r13),%rdi
   377e1:	4c 89 e6             	mov    %r12,%rsi
   377e4:	31 d2                	xor    %edx,%edx
   377e6:	41 ff 55 28          	callq  *0x28(%r13)
   377ea:	ba 01 00 00 00       	mov    $0x1,%edx
   377ef:	84 db                	test   %bl,%bl
   377f1:	78 a5                	js     37798 <read_function_entry+0x88>
   377f3:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   377fa:	00 00 00 
   377fd:	0f 1f 00             	nopl   (%rax)
   37800:	bb 01 00 00 00       	mov    $0x1,%ebx
   37805:	4d 85 f6             	test   %r14,%r14
   37808:	0f 84 9d 08 00 00    	je     380ab <read_function_entry+0x99b>
   3780e:	49 8d 46 ff          	lea    -0x1(%r14),%rax
   37812:	49 8b 57 48          	mov    0x48(%r15),%rdx
   37816:	48 39 d0             	cmp    %rdx,%rax
   37819:	0f 83 f1 03 00 00    	jae    37c10 <read_function_entry+0x500>
   3781f:	4d 8b 67 50          	mov    0x50(%r15),%r12
   37823:	48 c1 e0 05          	shl    $0x5,%rax
   37827:	4d 39 34 04          	cmp    %r14,(%r12,%rax,1)
   3782b:	0f 85 e3 03 00 00    	jne    37c14 <read_function_entry+0x504>
   37831:	49 01 c4             	add    %rax,%r12
   37834:	4d 85 e4             	test   %r12,%r12
   37837:	0f 84 6c 08 00 00    	je     380a9 <read_function_entry+0x999>
   3783d:	41 8b 5c 24 08       	mov    0x8(%r12),%ebx
   37842:	48 83 fb 2e          	cmp    $0x2e,%rbx
   37846:	0f 87 ed 06 00 00    	ja     37f39 <read_function_entry+0x829>
   3784c:	48 b8 08 00 00 20 00 	movabs $0x400020000008,%rax
   37853:	40 00 00 
   37856:	48 0f a3 d8          	bt     %rbx,%rax
   3785a:	48 8b 84 24 a0 01 00 	mov    0x1a0(%rsp),%rax
   37861:	00 
   37862:	48 89 c2             	mov    %rax,%rdx
   37865:	b9 00 00 00 00       	mov    $0x0,%ecx
   3786a:	bd 00 00 00 00       	mov    $0x0,%ebp
   3786f:	be 00 00 00 00       	mov    $0x0,%esi
   37874:	b8 00 00 00 00       	mov    $0x0,%eax
   37879:	73 5f                	jae    378da <read_function_entry+0x1ca>
   3787b:	be 28 00 00 00       	mov    $0x28,%esi
   37880:	48 8b 7c 24 28       	mov    0x28(%rsp),%rdi
   37885:	48 8b 94 24 90 01 00 	mov    0x190(%rsp),%rdx
   3788c:	00 
   3788d:	48 8b 8c 24 98 01 00 	mov    0x198(%rsp),%rcx
   37894:	00 
   37895:	e8 a6 95 ff ff       	callq  30e40 <__rdos_backtrace_alloc>
   3789a:	48 85 c0             	test   %rax,%rax
   3789d:	0f 84 06 08 00 00    	je     380a9 <read_function_entry+0x999>
   378a3:	48 89 c6             	mov    %rax,%rsi
   378a6:	83 fb 1d             	cmp    $0x1d,%ebx
   378a9:	48 8b 84 24 a0 01 00 	mov    0x1a0(%rsp),%rax
   378b0:	00 
   378b1:	48 89 c2             	mov    %rax,%rdx
   378b4:	48 0f 44 94 24 a8 01 	cmove  0x1a8(%rsp),%rdx
   378bb:	00 00 
   378bd:	0f 57 c0             	xorps  %xmm0,%xmm0
   378c0:	0f 11 46 10          	movups %xmm0,0x10(%rsi)
   378c4:	0f 11 06             	movups %xmm0,(%rsi)
   378c7:	48 c7 46 20 00 00 00 	movq   $0x0,0x20(%rsi)
   378ce:	00 
   378cf:	40 b5 01             	mov    $0x1,%bpl
   378d2:	b9 01 00 00 00       	mov    $0x1,%ecx
   378d7:	48 89 f0             	mov    %rsi,%rax
   378da:	48 89 b4 24 80 00 00 	mov    %rsi,0x80(%rsp)
   378e1:	00 
   378e2:	48 89 94 24 88 00 00 	mov    %rdx,0x88(%rsp)
   378e9:	00 
   378ea:	89 4c 24 0c          	mov    %ecx,0xc(%rsp)
   378ee:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   378f3:	49 83 7c 24 10 00    	cmpq   $0x0,0x10(%r12)
   378f9:	0f 84 69 03 00 00    	je     37c68 <read_function_entry+0x558>
   378ff:	31 c0                	xor    %eax,%eax
   37901:	48 89 44 24 70       	mov    %rax,0x70(%rsp)
   37906:	31 c0                	xor    %eax,%eax
   37908:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
   3790d:	c7 44 24 44 00 00 00 	movl   $0x0,0x44(%rsp)
   37914:	00 
   37915:	c7 44 24 24 00 00 00 	movl   $0x0,0x24(%rsp)
   3791c:	00 
   3791d:	31 c0                	xor    %eax,%eax
   3791f:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
   37924:	31 c0                	xor    %eax,%eax
   37926:	48 89 44 24 60       	mov    %rax,0x60(%rsp)
   3792b:	31 c0                	xor    %eax,%eax
   3792d:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
   37932:	45 31 f6             	xor    %r14d,%r14d
   37935:	eb 38                	jmp    3796f <read_function_entry+0x25f>
   37937:	83 7c 24 10 00       	cmpl   $0x0,0x10(%rsp)
   3793c:	48 8b 44 24 48       	mov    0x48(%rsp),%rax
   37941:	48 0f 44 44 24 18    	cmove  0x18(%rsp),%rax
   37947:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
   3794c:	b8 01 00 00 00       	mov    $0x1,%eax
   37951:	48 8b 4c 24 60       	mov    0x60(%rsp),%rcx
   37956:	0f 44 c8             	cmove  %eax,%ecx
   37959:	48 89 4c 24 60       	mov    %rcx,0x60(%rsp)
   3795e:	66 90                	xchg   %ax,%ax
   37960:	49 83 c6 01          	add    $0x1,%r14
   37964:	4d 3b 74 24 10       	cmp    0x10(%r12),%r14
   37969:	0f 83 2c 03 00 00    	jae    37c9b <read_function_entry+0x58b>
   3796f:	49 8b 44 24 18       	mov    0x18(%r12),%rax
   37974:	42 8b 7c f0 04       	mov    0x4(%rax,%r14,8),%edi
   37979:	41 8b 4f 18          	mov    0x18(%r15),%ecx
   3797d:	41 8b 57 1c          	mov    0x1c(%r15),%edx
   37981:	45 8b 47 20          	mov    0x20(%r15),%r8d
   37985:	48 8b 44 24 50       	mov    0x50(%rsp),%rax
   3798a:	4c 8b 48 50          	mov    0x50(%rax),%r9
   3798e:	4c 89 ee             	mov    %r13,%rsi
   37991:	48 8d 5c 24 10       	lea    0x10(%rsp),%rbx
   37996:	53                   	push   %rbx
   37997:	ff 70 58             	pushq  0x58(%rax)
   3799a:	e8 81 ba ff ff       	callq  33420 <read_attribute>
   3799f:	48 83 c4 10          	add    $0x10,%rsp
   379a3:	85 c0                	test   %eax,%eax
   379a5:	0f 84 fe 06 00 00    	je     380a9 <read_function_entry+0x999>
   379ab:	41 83 7c 24 08 11    	cmpl   $0x11,0x8(%r12)
   379b1:	75 1c                	jne    379cf <read_function_entry+0x2bf>
   379b3:	49 8b 44 24 18       	mov    0x18(%r12),%rax
   379b8:	42 8b 04 f0          	mov    (%rax,%r14,8),%eax
   379bc:	83 f0 11             	xor    $0x11,%eax
   379bf:	0b 44 24 10          	or     0x10(%rsp),%eax
   379c3:	75 0a                	jne    379cf <read_function_entry+0x2bf>
   379c5:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   379ca:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   379cf:	40 84 ed             	test   %bpl,%bpl
   379d2:	74 8c                	je     37960 <read_function_entry+0x250>
   379d4:	49 8b 44 24 18       	mov    0x18(%r12),%rax
   379d9:	42 8b 0c f0          	mov    (%rax,%r14,8),%ecx
   379dd:	83 f9 30             	cmp    $0x30,%ecx
   379e0:	7e 59                	jle    37a3b <read_function_entry+0x32b>
   379e2:	8d 51 b9             	lea    -0x47(%rcx),%edx
   379e5:	83 fa 27             	cmp    $0x27,%edx
   379e8:	0f 87 a3 00 00 00    	ja     37a91 <read_function_entry+0x381>
   379ee:	48 8d 0d a7 73 00 00 	lea    0x73a7(%rip),%rcx        # 3ed9c <elf_crc32.crc32_table+0x67c>
   379f5:	48 89 ce             	mov    %rcx,%rsi
   379f8:	48 63 0c 91          	movslq (%rcx,%rdx,4),%rcx
   379fc:	48 01 f1             	add    %rsi,%rcx
   379ff:	ff e1                	jmpq   *%rcx
   37a01:	8b 44 24 10          	mov    0x10(%rsp),%eax
   37a05:	83 f8 06             	cmp    $0x6,%eax
   37a08:	74 09                	je     37a13 <read_function_entry+0x303>
   37a0a:	83 f8 01             	cmp    $0x1,%eax
   37a0d:	0f 85 4d ff ff ff    	jne    37960 <read_function_entry+0x250>
   37a13:	b8 01 00 00 00       	mov    $0x1,%eax
   37a18:	48 89 44 24 70       	mov    %rax,0x70(%rsp)
   37a1d:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   37a22:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
   37a27:	49 83 c6 01          	add    $0x1,%r14
   37a2b:	4d 3b 74 24 10       	cmp    0x10(%r12),%r14
   37a30:	0f 82 39 ff ff ff    	jb     3796f <read_function_entry+0x25f>
   37a36:	e9 60 02 00 00       	jmpq   37c9b <read_function_entry+0x58b>
   37a3b:	83 f9 03             	cmp    $0x3,%ecx
   37a3e:	0f 84 e0 00 00 00    	je     37b24 <read_function_entry+0x414>
   37a44:	83 f9 11             	cmp    $0x11,%ecx
   37a47:	0f 84 ea fe ff ff    	je     37937 <read_function_entry+0x227>
   37a4d:	83 f9 12             	cmp    $0x12,%ecx
   37a50:	0f 85 0a ff ff ff    	jne    37960 <read_function_entry+0x250>
   37a56:	8b 44 24 10          	mov    0x10(%rsp),%eax
   37a5a:	83 f8 01             	cmp    $0x1,%eax
   37a5d:	0f 84 55 01 00 00    	je     37bb8 <read_function_entry+0x4a8>
   37a63:	85 c0                	test   %eax,%eax
   37a65:	0f 85 f5 fe ff ff    	jne    37960 <read_function_entry+0x250>
   37a6b:	c7 44 24 24 01 00 00 	movl   $0x1,0x24(%rsp)
   37a72:	00 
   37a73:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   37a78:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
   37a7d:	49 83 c6 01          	add    $0x1,%r14
   37a81:	4d 3b 74 24 10       	cmp    0x10(%r12),%r14
   37a86:	0f 82 e3 fe ff ff    	jb     3796f <read_function_entry+0x25f>
   37a8c:	e9 0a 02 00 00       	jmpq   37c9b <read_function_entry+0x58b>
   37a91:	83 f9 31             	cmp    $0x31,%ecx
   37a94:	74 1e                	je     37ab4 <read_function_entry+0x3a4>
   37a96:	81 f9 07 20 00 00    	cmp    $0x2007,%ecx
   37a9c:	0f 85 be fe ff ff    	jne    37960 <read_function_entry+0x250>
   37aa2:	83 7c 24 10 03       	cmpl   $0x3,0x10(%rsp)
   37aa7:	0f 85 b3 fe ff ff    	jne    37960 <read_function_entry+0x250>
   37aad:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   37ab2:	eb 54                	jmp    37b08 <read_function_entry+0x3f8>
   37ab4:	42 8b 44 f0 04       	mov    0x4(%rax,%r14,8),%eax
   37ab9:	83 f8 10             	cmp    $0x10,%eax
   37abc:	0f 84 9e fe ff ff    	je     37960 <read_function_entry+0x250>
   37ac2:	83 f8 20             	cmp    $0x20,%eax
   37ac5:	0f 84 95 fe ff ff    	je     37960 <read_function_entry+0x250>
   37acb:	8b 44 24 10          	mov    0x10(%rsp),%eax
   37acf:	83 f8 04             	cmp    $0x4,%eax
   37ad2:	74 09                	je     37add <read_function_entry+0x3cd>
   37ad4:	83 f8 01             	cmp    $0x1,%eax
   37ad7:	0f 85 83 fe ff ff    	jne    37960 <read_function_entry+0x250>
   37add:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
   37ae2:	48 8b 7c 24 50       	mov    0x50(%rsp),%rdi
   37ae7:	4c 89 fe             	mov    %r15,%rsi
   37aea:	48 8b 8c 24 90 01 00 	mov    0x190(%rsp),%rcx
   37af1:	00 
   37af2:	4c 8b 84 24 98 01 00 	mov    0x198(%rsp),%r8
   37af9:	00 
   37afa:	e8 01 06 00 00       	callq  38100 <read_referenced_name>
   37aff:	48 85 c0             	test   %rax,%rax
   37b02:	0f 84 58 fe ff ff    	je     37960 <read_function_entry+0x250>
   37b08:	48 8b 4c 24 30       	mov    0x30(%rsp),%rcx
   37b0d:	48 89 01             	mov    %rax,(%rcx)
   37b10:	49 83 c6 01          	add    $0x1,%r14
   37b14:	4d 3b 74 24 10       	cmp    0x10(%r12),%r14
   37b19:	0f 82 50 fe ff ff    	jb     3796f <read_function_entry+0x25f>
   37b1f:	e9 77 01 00 00       	jmpq   37c9b <read_function_entry+0x58b>
   37b24:	83 7c 24 10 03       	cmpl   $0x3,0x10(%rsp)
   37b29:	0f 85 31 fe ff ff    	jne    37960 <read_function_entry+0x250>
   37b2f:	48 8b 4c 24 30       	mov    0x30(%rsp),%rcx
   37b34:	48 83 39 00          	cmpq   $0x0,(%rcx)
   37b38:	0f 85 22 fe ff ff    	jne    37960 <read_function_entry+0x250>
   37b3e:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   37b43:	48 89 01             	mov    %rax,(%rcx)
   37b46:	49 83 c6 01          	add    $0x1,%r14
   37b4a:	4d 3b 74 24 10       	cmp    0x10(%r12),%r14
   37b4f:	0f 82 1a fe ff ff    	jb     3796f <read_function_entry+0x25f>
   37b55:	e9 41 01 00 00       	jmpq   37c9b <read_function_entry+0x58b>
   37b5a:	83 7c 24 10 01       	cmpl   $0x1,0x10(%rsp)
   37b5f:	0f 85 fb fd ff ff    	jne    37960 <read_function_entry+0x250>
   37b65:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   37b6a:	48 85 c0             	test   %rax,%rax
   37b6d:	74 77                	je     37be6 <read_function_entry+0x4d6>
   37b6f:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
   37b73:	48 8b 54 24 78       	mov    0x78(%rsp),%rdx
   37b78:	48 3b 4a 30          	cmp    0x30(%rdx),%rcx
   37b7c:	0f 83 e9 04 00 00    	jae    3806b <read_function_entry+0x95b>
   37b82:	48 8b 4a 38          	mov    0x38(%rdx),%rcx
   37b86:	48 8b 44 c1 f8       	mov    -0x8(%rcx,%rax,8),%rax
   37b8b:	eb 60                	jmp    37bed <read_function_entry+0x4dd>
   37b8d:	83 7c 24 10 01       	cmpl   $0x1,0x10(%rsp)
   37b92:	0f 85 c8 fd ff ff    	jne    37960 <read_function_entry+0x250>
   37b98:	8b 44 24 18          	mov    0x18(%rsp),%eax
   37b9c:	48 8b 4c 24 30       	mov    0x30(%rsp),%rcx
   37ba1:	89 41 10             	mov    %eax,0x10(%rcx)
   37ba4:	49 83 c6 01          	add    $0x1,%r14
   37ba8:	4d 3b 74 24 10       	cmp    0x10(%r12),%r14
   37bad:	0f 82 bc fd ff ff    	jb     3796f <read_function_entry+0x25f>
   37bb3:	e9 e3 00 00 00       	jmpq   37c9b <read_function_entry+0x58b>
   37bb8:	c7 44 24 24 01 00 00 	movl   $0x1,0x24(%rsp)
   37bbf:	00 
   37bc0:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   37bc5:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
   37bca:	c7 44 24 44 01 00 00 	movl   $0x1,0x44(%rsp)
   37bd1:	00 
   37bd2:	49 83 c6 01          	add    $0x1,%r14
   37bd6:	4d 3b 74 24 10       	cmp    0x10(%r12),%r14
   37bdb:	0f 82 8e fd ff ff    	jb     3796f <read_function_entry+0x25f>
   37be1:	e9 b5 00 00 00       	jmpq   37c9b <read_function_entry+0x58b>
   37be6:	48 8d 05 06 66 00 00 	lea    0x6606(%rip),%rax        # 3e1f3 <str.0+0x3d3>
   37bed:	48 8b 4c 24 30       	mov    0x30(%rsp),%rcx
   37bf2:	48 89 41 08          	mov    %rax,0x8(%rcx)
   37bf6:	49 83 c6 01          	add    $0x1,%r14
   37bfa:	4d 3b 74 24 10       	cmp    0x10(%r12),%r14
   37bff:	0f 82 6a fd ff ff    	jb     3796f <read_function_entry+0x25f>
   37c05:	e9 91 00 00 00       	jmpq   37c9b <read_function_entry+0x58b>
   37c0a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   37c10:	4d 8b 67 50          	mov    0x50(%r15),%r12
   37c14:	48 8d 84 24 98 00 00 	lea    0x98(%rsp),%rax
   37c1b:	00 
   37c1c:	0f 57 c0             	xorps  %xmm0,%xmm0
   37c1f:	0f 11 00             	movups %xmm0,(%rax)
   37c22:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
   37c29:	00 
   37c2a:	4c 89 b4 24 90 00 00 	mov    %r14,0x90(%rsp)
   37c31:	00 
   37c32:	b9 20 00 00 00       	mov    $0x20,%ecx
   37c37:	48 8d bc 24 90 00 00 	lea    0x90(%rsp),%rdi
   37c3e:	00 
   37c3f:	4c 89 e6             	mov    %r12,%rsi
   37c42:	4c 8d 05 b7 b7 ff ff 	lea    -0x4849(%rip),%r8        # 33400 <abbrev_compare>
   37c49:	e8 42 c4 fc ff       	callq  4090 <bsearch@plt>
   37c4e:	48 85 c0             	test   %rax,%rax
   37c51:	0f 84 f8 03 00 00    	je     3804f <read_function_entry+0x93f>
   37c57:	49 89 c4             	mov    %rax,%r12
   37c5a:	4d 85 e4             	test   %r12,%r12
   37c5d:	0f 85 da fb ff ff    	jne    3783d <read_function_entry+0x12d>
   37c63:	e9 41 04 00 00       	jmpq   380a9 <read_function_entry+0x999>
   37c68:	31 c0                	xor    %eax,%eax
   37c6a:	48 89 44 24 60       	mov    %rax,0x60(%rsp)
   37c6f:	31 c0                	xor    %eax,%eax
   37c71:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
   37c76:	31 c0                	xor    %eax,%eax
   37c78:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
   37c7d:	c7 44 24 24 00 00 00 	movl   $0x0,0x24(%rsp)
   37c84:	00 
   37c85:	c7 44 24 44 00 00 00 	movl   $0x0,0x44(%rsp)
   37c8c:	00 
   37c8d:	31 c0                	xor    %eax,%eax
   37c8f:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
   37c94:	31 c0                	xor    %eax,%eax
   37c96:	48 89 44 24 70       	mov    %rax,0x70(%rsp)
   37c9b:	40 84 ed             	test   %bpl,%bpl
   37c9e:	4c 8b 74 24 30       	mov    0x30(%rsp),%r14
   37ca3:	74 0a                	je     37caf <read_function_entry+0x59f>
   37ca5:	49 83 3e 00          	cmpq   $0x0,(%r14)
   37ca9:	0f 84 a2 02 00 00    	je     37f51 <read_function_entry+0x841>
   37caf:	83 7c 24 0c 00       	cmpl   $0x0,0xc(%rsp)
   37cb4:	48 8b 6c 24 38       	mov    0x38(%rsp),%rbp
   37cb9:	0f 84 fa 02 00 00    	je     37fb9 <read_function_entry+0x8a9>
   37cbf:	83 7c 24 70 00       	cmpl   $0x0,0x70(%rsp)
   37cc4:	48 8b 7c 24 48       	mov    0x48(%rsp),%rdi
   37cc9:	0f 84 88 01 00 00    	je     37e57 <read_function_entry+0x747>
   37ccf:	48 83 ec 08          	sub    $0x8,%rsp
   37cd3:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
   37cd8:	48 8b 74 24 58       	mov    0x58(%rsp),%rsi
   37cdd:	4c 89 fa             	mov    %r15,%rdx
   37ce0:	4c 89 f1             	mov    %r14,%rcx
   37ce3:	4c 8b 44 24 70       	mov    0x70(%rsp),%r8
   37ce8:	49 89 e9             	mov    %rbp,%r9
   37ceb:	ff b4 24 90 00 00 00 	pushq  0x90(%rsp)
   37cf2:	ff b4 24 a8 01 00 00 	pushq  0x1a8(%rsp)
   37cf9:	ff b4 24 a8 01 00 00 	pushq  0x1a8(%rsp)
   37d00:	e8 ab 07 00 00       	callq  384b0 <add_function_ranges>
   37d05:	8b 4c 24 2c          	mov    0x2c(%rsp),%ecx
   37d09:	48 83 c4 20          	add    $0x20,%rsp
   37d0d:	85 c0                	test   %eax,%eax
   37d0f:	0f 84 94 03 00 00    	je     380a9 <read_function_entry+0x999>
   37d15:	41 83 7c 24 0c 00    	cmpl   $0x0,0xc(%r12)
   37d1b:	bb 01 00 00 00       	mov    $0x1,%ebx
   37d20:	0f 84 aa 02 00 00    	je     37fd0 <read_function_entry+0x8c0>
   37d26:	85 c9                	test   %ecx,%ecx
   37d28:	0f 84 df 00 00 00    	je     37e0d <read_function_entry+0x6fd>
   37d2e:	0f 57 c0             	xorps  %xmm0,%xmm0
   37d31:	0f 29 84 24 a0 00 00 	movaps %xmm0,0xa0(%rsp)
   37d38:	00 
   37d39:	0f 29 84 24 90 00 00 	movaps %xmm0,0x90(%rsp)
   37d40:	00 
   37d41:	48 8b 7c 24 28       	mov    0x28(%rsp),%rdi
   37d46:	48 8b 74 24 50       	mov    0x50(%rsp),%rsi
   37d4b:	4c 89 fa             	mov    %r15,%rdx
   37d4e:	48 89 e9             	mov    %rbp,%rcx
   37d51:	4d 89 e8             	mov    %r13,%r8
   37d54:	4c 8b 4c 24 78       	mov    0x78(%rsp),%r9
   37d59:	48 8d 84 24 90 00 00 	lea    0x90(%rsp),%rax
   37d60:	00 
   37d61:	50                   	push   %rax
   37d62:	ff b4 24 a8 01 00 00 	pushq  0x1a8(%rsp)
   37d69:	ff b4 24 a8 01 00 00 	pushq  0x1a8(%rsp)
   37d70:	ff b4 24 a8 01 00 00 	pushq  0x1a8(%rsp)
   37d77:	e8 94 f9 ff ff       	callq  37710 <read_function_entry>
   37d7c:	48 83 c4 20          	add    $0x20,%rsp
   37d80:	85 c0                	test   %eax,%eax
   37d82:	0f 84 21 03 00 00    	je     380a9 <read_function_entry+0x999>
   37d88:	48 83 bc 24 a8 00 00 	cmpq   $0x0,0xa8(%rsp)
   37d8f:	00 00 
   37d91:	0f 84 39 02 00 00    	je     37fd0 <read_function_entry+0x8c0>
   37d97:	48 8b 7c 24 28       	mov    0x28(%rsp),%rdi
   37d9c:	48 8d b4 24 90 00 00 	lea    0x90(%rsp),%rsi
   37da3:	00 
   37da4:	48 8b 94 24 90 01 00 	mov    0x190(%rsp),%rdx
   37dab:	00 
   37dac:	48 8b 8c 24 98 01 00 	mov    0x198(%rsp),%rcx
   37db3:	00 
   37db4:	e8 e7 91 ff ff       	callq  30fa0 <__rdos_backtrace_vector_release>
   37db9:	85 c0                	test   %eax,%eax
   37dbb:	0f 84 e8 02 00 00    	je     380a9 <read_function_entry+0x999>
   37dc1:	49 89 ec             	mov    %rbp,%r12
   37dc4:	48 8b ac 24 90 00 00 	mov    0x90(%rsp),%rbp
   37dcb:	00 
   37dcc:	48 8b b4 24 a8 00 00 	mov    0xa8(%rsp),%rsi
   37dd3:	00 
   37dd4:	ba 18 00 00 00       	mov    $0x18,%edx
   37dd9:	48 89 ef             	mov    %rbp,%rdi
   37ddc:	48 8d 0d dd 02 00 00 	lea    0x2dd(%rip),%rcx        # 380c0 <function_addrs_compare>
   37de3:	e8 e8 0e 00 00       	callq  38cd0 <__rdos_backtrace_qsort>
   37de8:	49 89 6e 18          	mov    %rbp,0x18(%r14)
   37dec:	4c 89 e5             	mov    %r12,%rbp
   37def:	48 8b 84 24 a8 00 00 	mov    0xa8(%rsp),%rax
   37df6:	00 
   37df7:	49 89 46 20          	mov    %rax,0x20(%r14)
   37dfb:	49 8b 4d 18          	mov    0x18(%r13),%rcx
   37dff:	48 85 c9             	test   %rcx,%rcx
   37e02:	0f 85 3e f9 ff ff    	jne    37746 <read_function_entry+0x36>
   37e08:	e9 9e 02 00 00       	jmpq   380ab <read_function_entry+0x99b>
   37e0d:	48 8b 7c 24 28       	mov    0x28(%rsp),%rdi
   37e12:	48 8b 74 24 50       	mov    0x50(%rsp),%rsi
   37e17:	4c 89 fa             	mov    %r15,%rdx
   37e1a:	48 89 e9             	mov    %rbp,%rcx
   37e1d:	4d 89 e8             	mov    %r13,%r8
   37e20:	4c 8b 4c 24 78       	mov    0x78(%rsp),%r9
   37e25:	ff b4 24 a8 01 00 00 	pushq  0x1a8(%rsp)
   37e2c:	ff b4 24 a8 01 00 00 	pushq  0x1a8(%rsp)
   37e33:	ff b4 24 a8 01 00 00 	pushq  0x1a8(%rsp)
   37e3a:	ff b4 24 a8 01 00 00 	pushq  0x1a8(%rsp)
   37e41:	e8 ca f8 ff ff       	callq  37710 <read_function_entry>
   37e46:	48 83 c4 20          	add    $0x20,%rsp
   37e4a:	85 c0                	test   %eax,%eax
   37e4c:	0f 85 7e 01 00 00    	jne    37fd0 <read_function_entry+0x8c0>
   37e52:	e9 52 02 00 00       	jmpq   380a9 <read_function_entry+0x999>
   37e57:	83 7c 24 60 00       	cmpl   $0x0,0x60(%rsp)
   37e5c:	0f 84 30 01 00 00    	je     37f92 <read_function_entry+0x882>
   37e62:	83 7c 24 24 00       	cmpl   $0x0,0x24(%rsp)
   37e67:	0f 84 25 01 00 00    	je     37f92 <read_function_entry+0x882>
   37e6d:	48 89 6c 24 38       	mov    %rbp,0x38(%rsp)
   37e72:	83 7c 24 44 00       	cmpl   $0x0,0x44(%rsp)
   37e77:	48 89 fb             	mov    %rdi,%rbx
   37e7a:	b8 00 00 00 00       	mov    $0x0,%eax
   37e7f:	48 0f 44 d8          	cmove  %rax,%rbx
   37e83:	48 03 5c 24 58       	add    0x58(%rsp),%rbx
   37e88:	48 8b 44 24 50       	mov    0x50(%rsp),%rax
   37e8d:	48 8b 40 08          	mov    0x8(%rax),%rax
   37e91:	48 01 c7             	add    %rax,%rdi
   37e94:	48 01 c3             	add    %rax,%rbx
   37e97:	48 8b ac 24 88 00 00 	mov    0x88(%rsp),%rbp
   37e9e:	00 
   37e9f:	48 8b 45 18          	mov    0x18(%rbp),%rax
   37ea3:	48 85 c0             	test   %rax,%rax
   37ea6:	74 2d                	je     37ed5 <read_function_entry+0x7c5>
   37ea8:	48 8b 4d 00          	mov    0x0(%rbp),%rcx
   37eac:	48 8d 14 40          	lea    (%rax,%rax,2),%rdx
   37eb0:	48 8b 44 d1 f0       	mov    -0x10(%rcx,%rdx,8),%rax
   37eb5:	48 39 c7             	cmp    %rax,%rdi
   37eb8:	74 09                	je     37ec3 <read_function_entry+0x7b3>
   37eba:	48 8d 70 01          	lea    0x1(%rax),%rsi
   37ebe:	48 39 f7             	cmp    %rsi,%rdi
   37ec1:	75 12                	jne    37ed5 <read_function_entry+0x7c5>
   37ec3:	48 8d 0c d1          	lea    (%rcx,%rdx,8),%rcx
   37ec7:	48 83 c1 e8          	add    $0xffffffffffffffe8,%rcx
   37ecb:	4c 39 71 10          	cmp    %r14,0x10(%rcx)
   37ecf:	0f 84 0d 01 00 00    	je     37fe2 <read_function_entry+0x8d2>
   37ed5:	48 89 7c 24 48       	mov    %rdi,0x48(%rsp)
   37eda:	be 18 00 00 00       	mov    $0x18,%esi
   37edf:	48 8b 7c 24 28       	mov    0x28(%rsp),%rdi
   37ee4:	48 8b 94 24 90 01 00 	mov    0x190(%rsp),%rdx
   37eeb:	00 
   37eec:	48 8b 8c 24 98 01 00 	mov    0x198(%rsp),%rcx
   37ef3:	00 
   37ef4:	49 89 e8             	mov    %rbp,%r8
   37ef7:	e8 94 8f ff ff       	callq  30e90 <__rdos_backtrace_vector_grow>
   37efc:	48 85 c0             	test   %rax,%rax
   37eff:	0f 84 a4 01 00 00    	je     380a9 <read_function_entry+0x999>
   37f05:	48 8b 4c 24 48       	mov    0x48(%rsp),%rcx
   37f0a:	48 89 08             	mov    %rcx,(%rax)
   37f0d:	48 89 58 08          	mov    %rbx,0x8(%rax)
   37f11:	4c 89 70 10          	mov    %r14,0x10(%rax)
   37f15:	48 83 45 18 01       	addq   $0x1,0x18(%rbp)
   37f1a:	48 8b 6c 24 38       	mov    0x38(%rsp),%rbp
   37f1f:	8b 4c 24 0c          	mov    0xc(%rsp),%ecx
   37f23:	41 83 7c 24 0c 00    	cmpl   $0x0,0xc(%r12)
   37f29:	bb 01 00 00 00       	mov    $0x1,%ebx
   37f2e:	0f 85 f2 fd ff ff    	jne    37d26 <read_function_entry+0x616>
   37f34:	e9 97 00 00 00       	jmpq   37fd0 <read_function_entry+0x8c0>
   37f39:	48 8b 84 24 a0 01 00 	mov    0x1a0(%rsp),%rax
   37f40:	00 
   37f41:	48 89 c2             	mov    %rax,%rdx
   37f44:	31 c9                	xor    %ecx,%ecx
   37f46:	31 ed                	xor    %ebp,%ebp
   37f48:	31 f6                	xor    %esi,%esi
   37f4a:	31 c0                	xor    %eax,%eax
   37f4c:	e9 89 f9 ff ff       	jmpq   378da <read_function_entry+0x1ca>
   37f51:	ba 28 00 00 00       	mov    $0x28,%edx
   37f56:	48 8b 7c 24 28       	mov    0x28(%rsp),%rdi
   37f5b:	48 8b b4 24 80 00 00 	mov    0x80(%rsp),%rsi
   37f62:	00 
   37f63:	48 8b 8c 24 90 01 00 	mov    0x190(%rsp),%rcx
   37f6a:	00 
   37f6b:	4c 8b 84 24 98 01 00 	mov    0x198(%rsp),%r8
   37f72:	00 
   37f73:	e8 08 8f ff ff       	callq  30e80 <__rdos_backtrace_free>
   37f78:	31 c9                	xor    %ecx,%ecx
   37f7a:	48 8b 6c 24 38       	mov    0x38(%rsp),%rbp
   37f7f:	41 83 7c 24 0c 00    	cmpl   $0x0,0xc(%r12)
   37f85:	bb 01 00 00 00       	mov    $0x1,%ebx
   37f8a:	0f 85 96 fd ff ff    	jne    37d26 <read_function_entry+0x616>
   37f90:	eb 3e                	jmp    37fd0 <read_function_entry+0x8c0>
   37f92:	ba 28 00 00 00       	mov    $0x28,%edx
   37f97:	48 8b 7c 24 28       	mov    0x28(%rsp),%rdi
   37f9c:	48 8b b4 24 80 00 00 	mov    0x80(%rsp),%rsi
   37fa3:	00 
   37fa4:	48 8b 8c 24 90 01 00 	mov    0x190(%rsp),%rcx
   37fab:	00 
   37fac:	4c 8b 84 24 98 01 00 	mov    0x198(%rsp),%r8
   37fb3:	00 
   37fb4:	e8 c7 8e ff ff       	callq  30e80 <__rdos_backtrace_free>
   37fb9:	31 c9                	xor    %ecx,%ecx
   37fbb:	41 83 7c 24 0c 00    	cmpl   $0x0,0xc(%r12)
   37fc1:	bb 01 00 00 00       	mov    $0x1,%ebx
   37fc6:	0f 85 5a fd ff ff    	jne    37d26 <read_function_entry+0x616>
   37fcc:	0f 1f 40 00          	nopl   0x0(%rax)
   37fd0:	49 8b 4d 18          	mov    0x18(%r13),%rcx
   37fd4:	48 85 c9             	test   %rcx,%rcx
   37fd7:	0f 85 69 f7 ff ff    	jne    37746 <read_function_entry+0x36>
   37fdd:	e9 c9 00 00 00       	jmpq   380ab <read_function_entry+0x99b>
   37fe2:	48 39 c3             	cmp    %rax,%rbx
   37fe5:	0f 86 2f ff ff ff    	jbe    37f1a <read_function_entry+0x80a>
   37feb:	48 89 59 08          	mov    %rbx,0x8(%rcx)
   37fef:	e9 26 ff ff ff       	jmpq   37f1a <read_function_entry+0x80a>
   37ff4:	bb 01 00 00 00       	mov    $0x1,%ebx
   37ff9:	41 83 7d 38 00       	cmpl   $0x0,0x38(%r13)
   37ffe:	0f 85 a7 00 00 00    	jne    380ab <read_function_entry+0x99b>
   38004:	4d 8b 45 00          	mov    0x0(%r13),%r8
   38008:	45 2b 4d 08          	sub    0x8(%r13),%r9d
   3800c:	48 8d 15 b4 6e 00 00 	lea    0x6eb4(%rip),%rdx        # 3eec7 <elf_crc32.crc32_table+0x7a7>
   38013:	48 8d 0d 9d 6e 00 00 	lea    0x6e9d(%rip),%rcx        # 3eeb7 <elf_crc32.crc32_table+0x797>
   3801a:	48 8d ac 24 90 00 00 	lea    0x90(%rsp),%rbp
   38021:	00 
   38022:	be c8 00 00 00       	mov    $0xc8,%esi
   38027:	48 89 ef             	mov    %rbp,%rdi
   3802a:	31 c0                	xor    %eax,%eax
   3802c:	e8 df bf fc ff       	callq  4010 <snprintf@plt>
   38031:	49 8b 7d 30          	mov    0x30(%r13),%rdi
   38035:	48 89 ee             	mov    %rbp,%rsi
   38038:	31 d2                	xor    %edx,%edx
   3803a:	41 ff 55 28          	callq  *0x28(%r13)
   3803e:	41 c7 45 38 01 00 00 	movl   $0x1,0x38(%r13)
   38045:	00 
   38046:	eb 63                	jmp    380ab <read_function_entry+0x99b>
   38048:	bb 01 00 00 00       	mov    $0x1,%ebx
   3804d:	eb 5c                	jmp    380ab <read_function_entry+0x99b>
   3804f:	48 8d 35 9b 6e 00 00 	lea    0x6e9b(%rip),%rsi        # 3eef1 <elf_crc32.crc32_table+0x7d1>
   38056:	31 db                	xor    %ebx,%ebx
   38058:	48 8b bc 24 98 01 00 	mov    0x198(%rsp),%rdi
   3805f:	00 
   38060:	31 d2                	xor    %edx,%edx
   38062:	ff 94 24 90 01 00 00 	callq  *0x190(%rsp)
   38069:	eb 40                	jmp    380ab <read_function_entry+0x99b>
   3806b:	4d 8b 45 00          	mov    0x0(%r13),%r8
   3806f:	45 8b 4d 10          	mov    0x10(%r13),%r9d
   38073:	45 2b 4d 08          	sub    0x8(%r13),%r9d
   38077:	48 8d 15 49 6e 00 00 	lea    0x6e49(%rip),%rdx        # 3eec7 <elf_crc32.crc32_table+0x7a7>
   3807e:	48 8d 0d c1 6f 00 00 	lea    0x6fc1(%rip),%rcx        # 3f046 <elf_crc32.crc32_table+0x926>
   38085:	48 8d ac 24 90 00 00 	lea    0x90(%rsp),%rbp
   3808c:	00 
   3808d:	be c8 00 00 00       	mov    $0xc8,%esi
   38092:	48 89 ef             	mov    %rbp,%rdi
   38095:	31 c0                	xor    %eax,%eax
   38097:	e8 74 bf fc ff       	callq  4010 <snprintf@plt>
   3809c:	49 8b 7d 30          	mov    0x30(%r13),%rdi
   380a0:	48 89 ee             	mov    %rbp,%rsi
   380a3:	31 d2                	xor    %edx,%edx
   380a5:	41 ff 55 28          	callq  *0x28(%r13)
   380a9:	31 db                	xor    %ebx,%ebx
   380ab:	89 d8                	mov    %ebx,%eax
   380ad:	48 81 c4 58 01 00 00 	add    $0x158,%rsp
   380b4:	5b                   	pop    %rbx
   380b5:	41 5c                	pop    %r12
   380b7:	41 5d                	pop    %r13
   380b9:	41 5e                	pop    %r14
   380bb:	41 5f                	pop    %r15
   380bd:	5d                   	pop    %rbp
   380be:	c3                   	retq   
   380bf:	90                   	nop

00000000000380c0 <function_addrs_compare>:
   380c0:	48 8b 0e             	mov    (%rsi),%rcx
   380c3:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   380c8:	48 39 0f             	cmp    %rcx,(%rdi)
   380cb:	72 18                	jb     380e5 <function_addrs_compare+0x25>
   380cd:	b8 01 00 00 00       	mov    $0x1,%eax
   380d2:	77 11                	ja     380e5 <function_addrs_compare+0x25>
   380d4:	48 8b 4e 08          	mov    0x8(%rsi),%rcx
   380d8:	48 39 4f 08          	cmp    %rcx,0x8(%rdi)
   380dc:	72 07                	jb     380e5 <function_addrs_compare+0x25>
   380de:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   380e3:	76 01                	jbe    380e6 <function_addrs_compare+0x26>
   380e5:	c3                   	retq   
   380e6:	48 8b 47 10          	mov    0x10(%rdi),%rax
   380ea:	48 8b 38             	mov    (%rax),%rdi
   380ed:	48 8b 46 10          	mov    0x10(%rsi),%rax
   380f1:	48 8b 30             	mov    (%rax),%rsi
   380f4:	e9 67 bf fc ff       	jmpq   4060 <strcmp@plt>
   380f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000038100 <read_referenced_name>:
   38100:	55                   	push   %rbp
   38101:	41 57                	push   %r15
   38103:	41 56                	push   %r14
   38105:	41 55                	push   %r13
   38107:	41 54                	push   %r12
   38109:	53                   	push   %rbx
   3810a:	48 81 ec 18 01 00 00 	sub    $0x118,%rsp
   38111:	4d 89 c7             	mov    %r8,%r15
   38114:	48 8b 46 10          	mov    0x10(%rsi),%rax
   38118:	48 39 d0             	cmp    %rdx,%rax
   3811b:	0f 87 6a 01 00 00    	ja     3828b <read_referenced_name+0x18b>
   38121:	48 89 f3             	mov    %rsi,%rbx
   38124:	48 29 c2             	sub    %rax,%rdx
   38127:	48 8b 76 08          	mov    0x8(%rsi),%rsi
   3812b:	48 39 d6             	cmp    %rdx,%rsi
   3812e:	0f 86 57 01 00 00    	jbe    3828b <read_referenced_name+0x18b>
   38134:	48 8d 05 fb 5f 00 00 	lea    0x5ffb(%rip),%rax        # 3e136 <str.0+0x316>
   3813b:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   38140:	48 8b 47 20          	mov    0x20(%rdi),%rax
   38144:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   38149:	4c 8b 0b             	mov    (%rbx),%r9
   3814c:	49 01 d1             	add    %rdx,%r9
   3814f:	4c 89 4c 24 18       	mov    %r9,0x18(%rsp)
   38154:	48 29 d6             	sub    %rdx,%rsi
   38157:	48 89 74 24 20       	mov    %rsi,0x20(%rsp)
   3815c:	8b 47 60             	mov    0x60(%rdi),%eax
   3815f:	89 44 24 28          	mov    %eax,0x28(%rsp)
   38163:	48 89 4c 24 30       	mov    %rcx,0x30(%rsp)
   38168:	4c 89 7c 24 38       	mov    %r15,0x38(%rsp)
   3816d:	c7 44 24 40 00 00 00 	movl   $0x0,0x40(%rsp)
   38174:	00 
   38175:	0f 84 c1 00 00 00    	je     3823c <read_referenced_name+0x13c>
   3817b:	48 89 4c 24 48       	mov    %rcx,0x48(%rsp)
   38180:	48 89 3c 24          	mov    %rdi,(%rsp)
   38184:	ba 00 00 00 00       	mov    $0x0,%edx
   38189:	45 31 ed             	xor    %r13d,%r13d
   3818c:	31 ed                	xor    %ebp,%ebp
   3818e:	66 90                	xchg   %ax,%ax
   38190:	49 8d 41 01          	lea    0x1(%r9),%rax
   38194:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   38199:	48 83 c6 ff          	add    $0xffffffffffffffff,%rsi
   3819d:	48 89 74 24 20       	mov    %rsi,0x20(%rsp)
   381a2:	45 0f b6 21          	movzbl (%r9),%r12d
   381a6:	41 83 fd 3f          	cmp    $0x3f,%r13d
   381aa:	77 24                	ja     381d0 <read_referenced_name+0xd0>
   381ac:	44 89 e0             	mov    %r12d,%eax
   381af:	83 e0 7f             	and    $0x7f,%eax
   381b2:	44 89 e9             	mov    %r13d,%ecx
   381b5:	48 d3 e0             	shl    %cl,%rax
   381b8:	48 09 c5             	or     %rax,%rbp
   381bb:	45 84 e4             	test   %r12b,%r12b
   381be:	78 65                	js     38225 <read_referenced_name+0x125>
   381c0:	e9 d8 00 00 00       	jmpq   3829d <read_referenced_name+0x19d>
   381c5:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   381cc:	00 00 00 
   381cf:	90                   	nop
   381d0:	85 d2                	test   %edx,%edx
   381d2:	75 4c                	jne    38220 <read_referenced_name+0x120>
   381d4:	4c 8b 44 24 08       	mov    0x8(%rsp),%r8
   381d9:	2b 44 24 10          	sub    0x10(%rsp),%eax
   381dd:	be c8 00 00 00       	mov    $0xc8,%esi
   381e2:	4c 8d 74 24 50       	lea    0x50(%rsp),%r14
   381e7:	4c 89 f7             	mov    %r14,%rdi
   381ea:	48 8d 15 d6 6c 00 00 	lea    0x6cd6(%rip),%rdx        # 3eec7 <elf_crc32.crc32_table+0x7a7>
   381f1:	48 8d 0d 66 6d 00 00 	lea    0x6d66(%rip),%rcx        # 3ef5e <elf_crc32.crc32_table+0x83e>
   381f8:	41 89 c1             	mov    %eax,%r9d
   381fb:	31 c0                	xor    %eax,%eax
   381fd:	e8 0e be fc ff       	callq  4010 <snprintf@plt>
   38202:	48 8b 7c 24 38       	mov    0x38(%rsp),%rdi
   38207:	4c 89 f6             	mov    %r14,%rsi
   3820a:	31 d2                	xor    %edx,%edx
   3820c:	ff 54 24 30          	callq  *0x30(%rsp)
   38210:	ba 01 00 00 00       	mov    $0x1,%edx
   38215:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   3821c:	00 00 00 
   3821f:	90                   	nop
   38220:	45 84 e4             	test   %r12b,%r12b
   38223:	79 78                	jns    3829d <read_referenced_name+0x19d>
   38225:	41 83 c5 07          	add    $0x7,%r13d
   38229:	4c 8b 4c 24 18       	mov    0x18(%rsp),%r9
   3822e:	48 8b 74 24 20       	mov    0x20(%rsp),%rsi
   38233:	48 85 f6             	test   %rsi,%rsi
   38236:	0f 85 54 ff ff ff    	jne    38190 <read_referenced_name+0x90>
   3823c:	83 7c 24 40 00       	cmpl   $0x0,0x40(%rsp)
   38241:	0f 85 8b 00 00 00    	jne    382d2 <read_referenced_name+0x1d2>
   38247:	4c 8b 44 24 08       	mov    0x8(%rsp),%r8
   3824c:	44 2b 4c 24 10       	sub    0x10(%rsp),%r9d
   38251:	48 8d 15 6f 6c 00 00 	lea    0x6c6f(%rip),%rdx        # 3eec7 <elf_crc32.crc32_table+0x7a7>
   38258:	48 8d 0d 58 6c 00 00 	lea    0x6c58(%rip),%rcx        # 3eeb7 <elf_crc32.crc32_table+0x797>
   3825f:	48 8d 5c 24 50       	lea    0x50(%rsp),%rbx
   38264:	be c8 00 00 00       	mov    $0xc8,%esi
   38269:	48 89 df             	mov    %rbx,%rdi
   3826c:	31 c0                	xor    %eax,%eax
   3826e:	e8 9d bd fc ff       	callq  4010 <snprintf@plt>
   38273:	48 8b 7c 24 38       	mov    0x38(%rsp),%rdi
   38278:	48 89 de             	mov    %rbx,%rsi
   3827b:	31 d2                	xor    %edx,%edx
   3827d:	ff 54 24 30          	callq  *0x30(%rsp)
   38281:	c7 44 24 40 01 00 00 	movl   $0x1,0x40(%rsp)
   38288:	00 
   38289:	eb 47                	jmp    382d2 <read_referenced_name+0x1d2>
   3828b:	48 8d 35 e5 6d 00 00 	lea    0x6de5(%rip),%rsi        # 3f077 <elf_crc32.crc32_table+0x957>
   38292:	31 ed                	xor    %ebp,%ebp
   38294:	4c 89 ff             	mov    %r15,%rdi
   38297:	31 d2                	xor    %edx,%edx
   38299:	ff d1                	callq  *%rcx
   3829b:	eb 76                	jmp    38313 <read_referenced_name+0x213>
   3829d:	48 85 ed             	test   %rbp,%rbp
   382a0:	74 30                	je     382d2 <read_referenced_name+0x1d2>
   382a2:	48 8d 45 ff          	lea    -0x1(%rbp),%rax
   382a6:	48 8b 53 48          	mov    0x48(%rbx),%rdx
   382aa:	48 39 d0             	cmp    %rdx,%rax
   382ad:	73 79                	jae    38328 <read_referenced_name+0x228>
   382af:	4c 8b 73 50          	mov    0x50(%rbx),%r14
   382b3:	48 c1 e0 05          	shl    $0x5,%rax
   382b7:	49 39 2c 06          	cmp    %rbp,(%r14,%rax,1)
   382bb:	75 6f                	jne    3832c <read_referenced_name+0x22c>
   382bd:	49 01 c6             	add    %rax,%r14
   382c0:	4c 8b 24 24          	mov    (%rsp),%r12
   382c4:	4d 85 f6             	test   %r14,%r14
   382c7:	0f 85 a7 00 00 00    	jne    38374 <read_referenced_name+0x274>
   382cd:	e9 a8 01 00 00       	jmpq   3847a <read_referenced_name+0x37a>
   382d2:	4c 8b 44 24 08       	mov    0x8(%rsp),%r8
   382d7:	44 8b 4c 24 18       	mov    0x18(%rsp),%r9d
   382dc:	44 2b 4c 24 10       	sub    0x10(%rsp),%r9d
   382e1:	48 8d 15 df 6b 00 00 	lea    0x6bdf(%rip),%rdx        # 3eec7 <elf_crc32.crc32_table+0x7a7>
   382e8:	48 8d 0d b6 6d 00 00 	lea    0x6db6(%rip),%rcx        # 3f0a5 <elf_crc32.crc32_table+0x985>
   382ef:	31 ed                	xor    %ebp,%ebp
   382f1:	48 8d 5c 24 50       	lea    0x50(%rsp),%rbx
   382f6:	be c8 00 00 00       	mov    $0xc8,%esi
   382fb:	48 89 df             	mov    %rbx,%rdi
   382fe:	31 c0                	xor    %eax,%eax
   38300:	e8 0b bd fc ff       	callq  4010 <snprintf@plt>
   38305:	48 8b 7c 24 38       	mov    0x38(%rsp),%rdi
   3830a:	48 89 de             	mov    %rbx,%rsi
   3830d:	31 d2                	xor    %edx,%edx
   3830f:	ff 54 24 30          	callq  *0x30(%rsp)
   38313:	48 89 e8             	mov    %rbp,%rax
   38316:	48 81 c4 18 01 00 00 	add    $0x118,%rsp
   3831d:	5b                   	pop    %rbx
   3831e:	41 5c                	pop    %r12
   38320:	41 5d                	pop    %r13
   38322:	41 5e                	pop    %r14
   38324:	41 5f                	pop    %r15
   38326:	5d                   	pop    %rbp
   38327:	c3                   	retq   
   38328:	4c 8b 73 50          	mov    0x50(%rbx),%r14
   3832c:	4c 8b 24 24          	mov    (%rsp),%r12
   38330:	0f 57 c0             	xorps  %xmm0,%xmm0
   38333:	0f 11 44 24 58       	movups %xmm0,0x58(%rsp)
   38338:	48 c7 44 24 68 00 00 	movq   $0x0,0x68(%rsp)
   3833f:	00 00 
   38341:	48 89 6c 24 50       	mov    %rbp,0x50(%rsp)
   38346:	4c 8d 05 b3 b0 ff ff 	lea    -0x4f4d(%rip),%r8        # 33400 <abbrev_compare>
   3834d:	48 8d 7c 24 50       	lea    0x50(%rsp),%rdi
   38352:	b9 20 00 00 00       	mov    $0x20,%ecx
   38357:	4c 89 f6             	mov    %r14,%rsi
   3835a:	e8 31 bd fc ff       	callq  4090 <bsearch@plt>
   3835f:	48 85 c0             	test   %rax,%rax
   38362:	0f 84 19 01 00 00    	je     38481 <read_referenced_name+0x381>
   38368:	49 89 c6             	mov    %rax,%r14
   3836b:	4d 85 f6             	test   %r14,%r14
   3836e:	0f 84 06 01 00 00    	je     3847a <read_referenced_name+0x37a>
   38374:	49 83 7e 10 00       	cmpq   $0x0,0x10(%r14)
   38379:	0f 84 fb 00 00 00    	je     3847a <read_referenced_name+0x37a>
   3837f:	45 31 ed             	xor    %r13d,%r13d
   38382:	31 ed                	xor    %ebp,%ebp
   38384:	eb 19                	jmp    3839f <read_referenced_name+0x29f>
   38386:	83 7c 24 50 03       	cmpl   $0x3,0x50(%rsp)
   3838b:	0f 84 07 01 00 00    	je     38498 <read_referenced_name+0x398>
   38391:	49 83 c5 01          	add    $0x1,%r13
   38395:	4d 3b 6e 10          	cmp    0x10(%r14),%r13
   38399:	0f 83 74 ff ff ff    	jae    38313 <read_referenced_name+0x213>
   3839f:	49 8b 46 18          	mov    0x18(%r14),%rax
   383a3:	42 8b 7c e8 04       	mov    0x4(%rax,%r13,8),%edi
   383a8:	8b 4b 18             	mov    0x18(%rbx),%ecx
   383ab:	8b 53 1c             	mov    0x1c(%rbx),%edx
   383ae:	44 8b 43 20          	mov    0x20(%rbx),%r8d
   383b2:	4d 8b 4c 24 50       	mov    0x50(%r12),%r9
   383b7:	48 8d 74 24 08       	lea    0x8(%rsp),%rsi
   383bc:	48 8d 44 24 50       	lea    0x50(%rsp),%rax
   383c1:	50                   	push   %rax
   383c2:	41 ff 74 24 58       	pushq  0x58(%r12)
   383c7:	e8 54 b0 ff ff       	callq  33420 <read_attribute>
   383cc:	48 83 c4 10          	add    $0x10,%rsp
   383d0:	85 c0                	test   %eax,%eax
   383d2:	0f 84 a2 00 00 00    	je     3847a <read_referenced_name+0x37a>
   383d8:	49 8b 4e 18          	mov    0x18(%r14),%rcx
   383dc:	42 8b 04 e9          	mov    (%rcx,%r13,8),%eax
   383e0:	83 f8 6d             	cmp    $0x6d,%eax
   383e3:	7f 59                	jg     3843e <read_referenced_name+0x33e>
   383e5:	83 f8 03             	cmp    $0x3,%eax
   383e8:	74 6d                	je     38457 <read_referenced_name+0x357>
   383ea:	83 f8 47             	cmp    $0x47,%eax
   383ed:	75 a2                	jne    38391 <read_referenced_name+0x291>
   383ef:	42 8b 44 e9 04       	mov    0x4(%rcx,%r13,8),%eax
   383f4:	83 f8 10             	cmp    $0x10,%eax
   383f7:	74 98                	je     38391 <read_referenced_name+0x291>
   383f9:	83 f8 20             	cmp    $0x20,%eax
   383fc:	74 93                	je     38391 <read_referenced_name+0x291>
   383fe:	8b 44 24 50          	mov    0x50(%rsp),%eax
   38402:	83 f8 04             	cmp    $0x4,%eax
   38405:	74 05                	je     3840c <read_referenced_name+0x30c>
   38407:	83 f8 01             	cmp    $0x1,%eax
   3840a:	75 85                	jne    38391 <read_referenced_name+0x291>
   3840c:	48 8b 54 24 58       	mov    0x58(%rsp),%rdx
   38411:	4c 89 e7             	mov    %r12,%rdi
   38414:	48 89 de             	mov    %rbx,%rsi
   38417:	48 8b 4c 24 48       	mov    0x48(%rsp),%rcx
   3841c:	4d 89 f8             	mov    %r15,%r8
   3841f:	e8 dc fc ff ff       	callq  38100 <read_referenced_name>
   38424:	48 85 c0             	test   %rax,%rax
   38427:	48 0f 45 e8          	cmovne %rax,%rbp
   3842b:	49 83 c5 01          	add    $0x1,%r13
   3842f:	4d 3b 6e 10          	cmp    0x10(%r14),%r13
   38433:	0f 82 66 ff ff ff    	jb     3839f <read_referenced_name+0x29f>
   38439:	e9 d5 fe ff ff       	jmpq   38313 <read_referenced_name+0x213>
   3843e:	83 f8 6e             	cmp    $0x6e,%eax
   38441:	0f 84 3f ff ff ff    	je     38386 <read_referenced_name+0x286>
   38447:	3d 07 20 00 00       	cmp    $0x2007,%eax
   3844c:	0f 84 34 ff ff ff    	je     38386 <read_referenced_name+0x286>
   38452:	e9 3a ff ff ff       	jmpq   38391 <read_referenced_name+0x291>
   38457:	83 7c 24 50 03       	cmpl   $0x3,0x50(%rsp)
   3845c:	0f 85 2f ff ff ff    	jne    38391 <read_referenced_name+0x291>
   38462:	48 8b 6c 24 58       	mov    0x58(%rsp),%rbp
   38467:	49 83 c5 01          	add    $0x1,%r13
   3846b:	4d 3b 6e 10          	cmp    0x10(%r14),%r13
   3846f:	0f 82 2a ff ff ff    	jb     3839f <read_referenced_name+0x29f>
   38475:	e9 99 fe ff ff       	jmpq   38313 <read_referenced_name+0x213>
   3847a:	31 ed                	xor    %ebp,%ebp
   3847c:	e9 92 fe ff ff       	jmpq   38313 <read_referenced_name+0x213>
   38481:	48 8d 35 69 6a 00 00 	lea    0x6a69(%rip),%rsi        # 3eef1 <elf_crc32.crc32_table+0x7d1>
   38488:	31 ed                	xor    %ebp,%ebp
   3848a:	4c 89 ff             	mov    %r15,%rdi
   3848d:	31 d2                	xor    %edx,%edx
   3848f:	ff 54 24 48          	callq  *0x48(%rsp)
   38493:	e9 7b fe ff ff       	jmpq   38313 <read_referenced_name+0x213>
   38498:	48 8b 6c 24 58       	mov    0x58(%rsp),%rbp
   3849d:	e9 71 fe ff ff       	jmpq   38313 <read_referenced_name+0x213>
   384a2:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   384a9:	00 00 00 
   384ac:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000384b0 <add_function_ranges>:
   384b0:	55                   	push   %rbp
   384b1:	41 57                	push   %r15
   384b3:	41 56                	push   %r14
   384b5:	41 55                	push   %r13
   384b7:	41 54                	push   %r12
   384b9:	53                   	push   %rbx
   384ba:	48 81 ec 28 01 00 00 	sub    $0x128,%rsp
   384c1:	4c 89 4c 24 40       	mov    %r9,0x40(%rsp)
   384c6:	48 89 4c 24 50       	mov    %rcx,0x50(%rsp)
   384cb:	48 89 7c 24 58       	mov    %rdi,0x58(%rsp)
   384d0:	48 8b bc 24 68 01 00 	mov    0x168(%rsp),%rdi
   384d7:	00 
   384d8:	4c 8b bc 24 60 01 00 	mov    0x160(%rsp),%r15
   384df:	00 
   384e0:	48 8b 46 48          	mov    0x48(%rsi),%rax
   384e4:	4c 29 c0             	sub    %r8,%rax
   384e7:	0f 86 c2 06 00 00    	jbe    38baf <add_function_ranges+0x6ff>
   384ed:	49 89 d5             	mov    %rdx,%r13
   384f0:	49 89 f4             	mov    %rsi,%r12
   384f3:	48 8d 0d 62 5c 00 00 	lea    0x5c62(%rip),%rcx        # 3e15c <str.0+0x33c>
   384fa:	48 89 0c 24          	mov    %rcx,(%rsp)
   384fe:	48 8b 4e 40          	mov    0x40(%rsi),%rcx
   38502:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
   38507:	49 01 c8             	add    %rcx,%r8
   3850a:	4c 89 44 24 10       	mov    %r8,0x10(%rsp)
   3850f:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   38514:	8b 46 60             	mov    0x60(%rsi),%eax
   38517:	89 44 24 20          	mov    %eax,0x20(%rsp)
   3851b:	4c 89 7c 24 28       	mov    %r15,0x28(%rsp)
   38520:	48 89 7c 24 30       	mov    %rdi,0x30(%rsp)
   38525:	c7 44 24 38 00 00 00 	movl   $0x0,0x38(%rsp)
   3852c:	00 
   3852d:	48 89 54 24 48       	mov    %rdx,0x48(%rsp)
   38532:	41 8b 45 20          	mov    0x20(%r13),%eax
   38536:	83 c0 ff             	add    $0xffffffff,%eax
   38539:	83 f8 07             	cmp    $0x7,%eax
   3853c:	76 32                	jbe    38570 <add_function_ranges+0xc0>
   3853e:	e9 bd 00 00 00       	jmpq   38600 <add_function_ranges+0x150>
   38543:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
   38548:	83 7c 24 38 00       	cmpl   $0x0,0x38(%rsp)
   3854d:	0f 85 6c 06 00 00    	jne    38bbf <add_function_ranges+0x70f>
   38553:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   3855a:	00 00 00 
   3855d:	0f 1f 00             	nopl   (%rax)
   38560:	41 8b 45 20          	mov    0x20(%r13),%eax
   38564:	83 c0 ff             	add    $0xffffffff,%eax
   38567:	83 f8 07             	cmp    $0x7,%eax
   3856a:	0f 87 90 00 00 00    	ja     38600 <add_function_ranges+0x150>
   38570:	48 8d 0d c5 68 00 00 	lea    0x68c5(%rip),%rcx        # 3ee3c <elf_crc32.crc32_table+0x71c>
   38577:	48 63 04 81          	movslq (%rcx,%rax,4),%rax
   3857b:	48 01 c8             	add    %rcx,%rax
   3857e:	ff e0                	jmpq   *%rax
   38580:	4c 8b 4c 24 10       	mov    0x10(%rsp),%r9
   38585:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   3858a:	48 85 c0             	test   %rax,%rax
   3858d:	0f 84 e2 02 00 00    	je     38875 <add_function_ranges+0x3c5>
   38593:	49 8d 49 01          	lea    0x1(%r9),%rcx
   38597:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
   3859c:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
   385a0:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   385a5:	41 8a 29             	mov    (%r9),%bpl
   385a8:	e9 0b 03 00 00       	jmpq   388b8 <add_function_ranges+0x408>
   385ad:	0f 1f 00             	nopl   (%rax)
   385b0:	4c 8b 4c 24 10       	mov    0x10(%rsp),%r9
   385b5:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   385ba:	48 83 f8 01          	cmp    $0x1,%rax
   385be:	0f 86 90 00 00 00    	jbe    38654 <add_function_ranges+0x1a4>
   385c4:	49 8d 49 02          	lea    0x2(%r9),%rcx
   385c8:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
   385cd:	48 83 c0 fe          	add    $0xfffffffffffffffe,%rax
   385d1:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   385d6:	83 7c 24 20 00       	cmpl   $0x0,0x20(%rsp)
   385db:	0f 84 0d 03 00 00    	je     388ee <add_function_ranges+0x43e>
   385e1:	41 0f b6 01          	movzbl (%r9),%eax
   385e5:	48 c1 e0 08          	shl    $0x8,%rax
   385e9:	41 0f b6 79 01       	movzbl 0x1(%r9),%edi
   385ee:	e9 54 03 00 00       	jmpq   38947 <add_function_ranges+0x497>
   385f3:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   385fa:	00 00 00 
   385fd:	0f 1f 00             	nopl   (%rax)
   38600:	4c 8b 04 24          	mov    (%rsp),%r8
   38604:	44 8b 4c 24 10       	mov    0x10(%rsp),%r9d
   38609:	44 2b 4c 24 08       	sub    0x8(%rsp),%r9d
   3860e:	be c8 00 00 00       	mov    $0xc8,%esi
   38613:	48 8d 6c 24 60       	lea    0x60(%rsp),%rbp
   38618:	48 89 ef             	mov    %rbp,%rdi
   3861b:	48 8d 15 a5 68 00 00 	lea    0x68a5(%rip),%rdx        # 3eec7 <elf_crc32.crc32_table+0x7a7>
   38622:	48 8d 0d 14 69 00 00 	lea    0x6914(%rip),%rcx        # 3ef3d <elf_crc32.crc32_table+0x81d>
   38629:	31 c0                	xor    %eax,%eax
   3862b:	e8 e0 b9 fc ff       	callq  4010 <snprintf@plt>
   38630:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
   38635:	48 89 ee             	mov    %rbp,%rsi
   38638:	31 d2                	xor    %edx,%edx
   3863a:	ff 54 24 28          	callq  *0x28(%rsp)
   3863e:	eb 55                	jmp    38695 <add_function_ranges+0x1e5>
   38640:	4c 8b 4c 24 10       	mov    0x10(%rsp),%r9
   38645:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   3864a:	48 83 f8 03          	cmp    $0x3,%rax
   3864e:	0f 87 93 01 00 00    	ja     387e7 <add_function_ranges+0x337>
   38654:	4c 8b 04 24          	mov    (%rsp),%r8
   38658:	44 2b 4c 24 08       	sub    0x8(%rsp),%r9d
   3865d:	be c8 00 00 00       	mov    $0xc8,%esi
   38662:	48 8d 6c 24 60       	lea    0x60(%rsp),%rbp
   38667:	48 89 ef             	mov    %rbp,%rdi
   3866a:	48 8d 15 56 68 00 00 	lea    0x6856(%rip),%rdx        # 3eec7 <elf_crc32.crc32_table+0x7a7>
   38671:	48 8d 0d 3f 68 00 00 	lea    0x683f(%rip),%rcx        # 3eeb7 <elf_crc32.crc32_table+0x797>
   38678:	31 c0                	xor    %eax,%eax
   3867a:	e8 91 b9 fc ff       	callq  4010 <snprintf@plt>
   3867f:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
   38684:	48 89 ee             	mov    %rbp,%rsi
   38687:	31 d2                	xor    %edx,%edx
   38689:	ff 54 24 28          	callq  *0x28(%rsp)
   3868d:	c7 44 24 38 01 00 00 	movl   $0x1,0x38(%rsp)
   38694:	00 
   38695:	31 ff                	xor    %edi,%edi
   38697:	41 8b 45 20          	mov    0x20(%r13),%eax
   3869b:	83 c0 ff             	add    $0xffffffff,%eax
   3869e:	83 f8 07             	cmp    $0x7,%eax
   386a1:	0f 87 b9 02 00 00    	ja     38960 <add_function_ranges+0x4b0>
   386a7:	48 8d 0d ae 67 00 00 	lea    0x67ae(%rip),%rcx        # 3ee5c <elf_crc32.crc32_table+0x73c>
   386ae:	48 63 04 81          	movslq (%rcx,%rax,4),%rax
   386b2:	48 01 c8             	add    %rcx,%rax
   386b5:	ff e0                	jmpq   *%rax
   386b7:	4c 8b 4c 24 10       	mov    0x10(%rsp),%r9
   386bc:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   386c1:	48 85 c0             	test   %rax,%rax
   386c4:	0f 84 12 02 00 00    	je     388dc <add_function_ranges+0x42c>
   386ca:	49 8d 49 01          	lea    0x1(%r9),%rcx
   386ce:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
   386d3:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
   386d7:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   386dc:	41 8a 29             	mov    (%r9),%bpl
   386df:	e9 9c 04 00 00       	jmpq   38b80 <add_function_ranges+0x6d0>
   386e4:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   386eb:	00 00 00 
   386ee:	66 90                	xchg   %ax,%ax
   386f0:	48 89 e7             	mov    %rsp,%rdi
   386f3:	e8 d8 a5 ff ff       	callq  32cd0 <read_uint64>
   386f8:	48 89 c7             	mov    %rax,%rdi
   386fb:	41 8b 45 20          	mov    0x20(%r13),%eax
   386ff:	83 c0 ff             	add    $0xffffffff,%eax
   38702:	83 f8 07             	cmp    $0x7,%eax
   38705:	76 a0                	jbe    386a7 <add_function_ranges+0x1f7>
   38707:	e9 54 02 00 00       	jmpq   38960 <add_function_ranges+0x4b0>
   3870c:	0f 1f 40 00          	nopl   0x0(%rax)
   38710:	4c 8b 4c 24 10       	mov    0x10(%rsp),%r9
   38715:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   3871a:	48 83 f8 01          	cmp    $0x1,%rax
   3871e:	76 44                	jbe    38764 <add_function_ranges+0x2b4>
   38720:	49 8d 49 02          	lea    0x2(%r9),%rcx
   38724:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
   38729:	48 83 c0 fe          	add    $0xfffffffffffffffe,%rax
   3872d:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   38732:	83 7c 24 20 00       	cmpl   $0x0,0x20(%rsp)
   38737:	0f 84 bc 01 00 00    	je     388f9 <add_function_ranges+0x449>
   3873d:	41 0f b6 09          	movzbl (%r9),%ecx
   38741:	48 c1 e1 08          	shl    $0x8,%rcx
   38745:	41 0f b6 41 01       	movzbl 0x1(%r9),%eax
   3874a:	e9 b7 01 00 00       	jmpq   38906 <add_function_ranges+0x456>
   3874f:	90                   	nop
   38750:	4c 8b 4c 24 10       	mov    0x10(%rsp),%r9
   38755:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   3875a:	48 83 f8 03          	cmp    $0x3,%rax
   3875e:	0f 87 ca 00 00 00    	ja     3882e <add_function_ranges+0x37e>
   38764:	83 7c 24 38 00       	cmpl   $0x0,0x38(%rsp)
   38769:	0f 85 35 02 00 00    	jne    389a4 <add_function_ranges+0x4f4>
   3876f:	4c 8b 04 24          	mov    (%rsp),%r8
   38773:	44 2b 4c 24 08       	sub    0x8(%rsp),%r9d
   38778:	be c8 00 00 00       	mov    $0xc8,%esi
   3877d:	4c 8d 74 24 60       	lea    0x60(%rsp),%r14
   38782:	48 89 fd             	mov    %rdi,%rbp
   38785:	4c 89 f7             	mov    %r14,%rdi
   38788:	48 8d 15 38 67 00 00 	lea    0x6738(%rip),%rdx        # 3eec7 <elf_crc32.crc32_table+0x7a7>
   3878f:	48 8d 0d 21 67 00 00 	lea    0x6721(%rip),%rcx        # 3eeb7 <elf_crc32.crc32_table+0x797>
   38796:	31 c0                	xor    %eax,%eax
   38798:	e8 73 b8 fc ff       	callq  4010 <snprintf@plt>
   3879d:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
   387a2:	4c 89 f6             	mov    %r14,%rsi
   387a5:	31 d2                	xor    %edx,%edx
   387a7:	ff 54 24 28          	callq  *0x28(%rsp)
   387ab:	48 89 ef             	mov    %rbp,%rdi
   387ae:	c7 44 24 38 01 00 00 	movl   $0x1,0x38(%rsp)
   387b5:	00 
   387b6:	e9 e9 01 00 00       	jmpq   389a4 <add_function_ranges+0x4f4>
   387bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   387c0:	48 89 fb             	mov    %rdi,%rbx
   387c3:	48 89 e7             	mov    %rsp,%rdi
   387c6:	e8 05 a5 ff ff       	callq  32cd0 <read_uint64>
   387cb:	48 89 df             	mov    %rbx,%rdi
   387ce:	4c 8b 84 24 70 01 00 	mov    0x170(%rsp),%r8
   387d5:	00 
   387d6:	48 89 c1             	mov    %rax,%rcx
   387d9:	48 09 f9             	or     %rdi,%rcx
   387dc:	0f 85 d8 01 00 00    	jne    389ba <add_function_ranges+0x50a>
   387e2:	e9 bc 03 00 00       	jmpq   38ba3 <add_function_ranges+0x6f3>
   387e7:	49 8d 49 04          	lea    0x4(%r9),%rcx
   387eb:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
   387f0:	48 83 c0 fc          	add    $0xfffffffffffffffc,%rax
   387f4:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   387f9:	83 7c 24 20 00       	cmpl   $0x0,0x20(%rsp)
   387fe:	0f 84 1e 01 00 00    	je     38922 <add_function_ranges+0x472>
   38804:	41 0f b6 01          	movzbl (%r9),%eax
   38808:	48 c1 e0 18          	shl    $0x18,%rax
   3880c:	41 0f b6 49 01       	movzbl 0x1(%r9),%ecx
   38811:	48 c1 e1 10          	shl    $0x10,%rcx
   38815:	48 09 c1             	or     %rax,%rcx
   38818:	41 0f b6 41 02       	movzbl 0x2(%r9),%eax
   3881d:	48 c1 e0 08          	shl    $0x8,%rax
   38821:	48 09 c8             	or     %rcx,%rax
   38824:	41 0f b6 79 03       	movzbl 0x3(%r9),%edi
   38829:	e9 19 01 00 00       	jmpq   38947 <add_function_ranges+0x497>
   3882e:	49 8d 49 04          	lea    0x4(%r9),%rcx
   38832:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
   38837:	48 83 c0 fc          	add    $0xfffffffffffffffc,%rax
   3883b:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   38840:	83 7c 24 20 00       	cmpl   $0x0,0x20(%rsp)
   38845:	0f 84 aa 02 00 00    	je     38af5 <add_function_ranges+0x645>
   3884b:	41 0f b6 01          	movzbl (%r9),%eax
   3884f:	48 c1 e0 18          	shl    $0x18,%rax
   38853:	41 0f b6 49 01       	movzbl 0x1(%r9),%ecx
   38858:	48 c1 e1 10          	shl    $0x10,%rcx
   3885c:	48 09 c1             	or     %rax,%rcx
   3885f:	41 0f b6 51 02       	movzbl 0x2(%r9),%edx
   38864:	48 c1 e2 08          	shl    $0x8,%rdx
   38868:	48 09 ca             	or     %rcx,%rdx
   3886b:	41 0f b6 41 03       	movzbl 0x3(%r9),%eax
   38870:	e9 a5 02 00 00       	jmpq   38b1a <add_function_ranges+0x66a>
   38875:	4c 8b 04 24          	mov    (%rsp),%r8
   38879:	44 2b 4c 24 08       	sub    0x8(%rsp),%r9d
   3887e:	31 ed                	xor    %ebp,%ebp
   38880:	be c8 00 00 00       	mov    $0xc8,%esi
   38885:	4c 8d 74 24 60       	lea    0x60(%rsp),%r14
   3888a:	4c 89 f7             	mov    %r14,%rdi
   3888d:	48 8d 15 33 66 00 00 	lea    0x6633(%rip),%rdx        # 3eec7 <elf_crc32.crc32_table+0x7a7>
   38894:	48 8d 0d 1c 66 00 00 	lea    0x661c(%rip),%rcx        # 3eeb7 <elf_crc32.crc32_table+0x797>
   3889b:	31 c0                	xor    %eax,%eax
   3889d:	e8 6e b7 fc ff       	callq  4010 <snprintf@plt>
   388a2:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
   388a7:	4c 89 f6             	mov    %r14,%rsi
   388aa:	31 d2                	xor    %edx,%edx
   388ac:	ff 54 24 28          	callq  *0x28(%rsp)
   388b0:	c7 44 24 38 01 00 00 	movl   $0x1,0x38(%rsp)
   388b7:	00 
   388b8:	40 0f b6 fd          	movzbl %bpl,%edi
   388bc:	48 8b ac 24 60 01 00 	mov    0x160(%rsp),%rbp
   388c3:	00 
   388c4:	49 89 ef             	mov    %rbp,%r15
   388c7:	41 8b 45 20          	mov    0x20(%r13),%eax
   388cb:	83 c0 ff             	add    $0xffffffff,%eax
   388ce:	83 f8 07             	cmp    $0x7,%eax
   388d1:	0f 86 d0 fd ff ff    	jbe    386a7 <add_function_ranges+0x1f7>
   388d7:	e9 84 00 00 00       	jmpq   38960 <add_function_ranges+0x4b0>
   388dc:	83 7c 24 38 00       	cmpl   $0x0,0x38(%rsp)
   388e1:	0f 84 4c 02 00 00    	je     38b33 <add_function_ranges+0x683>
   388e7:	31 ed                	xor    %ebp,%ebp
   388e9:	e9 92 02 00 00       	jmpq   38b80 <add_function_ranges+0x6d0>
   388ee:	41 0f b6 41 01       	movzbl 0x1(%r9),%eax
   388f3:	48 c1 e0 08          	shl    $0x8,%rax
   388f7:	eb 4a                	jmp    38943 <add_function_ranges+0x493>
   388f9:	41 0f b6 49 01       	movzbl 0x1(%r9),%ecx
   388fe:	48 c1 e1 08          	shl    $0x8,%rcx
   38902:	41 0f b6 01          	movzbl (%r9),%eax
   38906:	48 09 c8             	or     %rcx,%rax
   38909:	4c 8b 84 24 70 01 00 	mov    0x170(%rsp),%r8
   38910:	00 
   38911:	48 89 c1             	mov    %rax,%rcx
   38914:	48 09 f9             	or     %rdi,%rcx
   38917:	0f 85 9d 00 00 00    	jne    389ba <add_function_ranges+0x50a>
   3891d:	e9 81 02 00 00       	jmpq   38ba3 <add_function_ranges+0x6f3>
   38922:	41 0f b6 41 03       	movzbl 0x3(%r9),%eax
   38927:	48 c1 e0 18          	shl    $0x18,%rax
   3892b:	41 0f b6 49 02       	movzbl 0x2(%r9),%ecx
   38930:	48 c1 e1 10          	shl    $0x10,%rcx
   38934:	48 09 c1             	or     %rax,%rcx
   38937:	41 0f b6 41 01       	movzbl 0x1(%r9),%eax
   3893c:	48 c1 e0 08          	shl    $0x8,%rax
   38940:	48 09 c8             	or     %rcx,%rax
   38943:	41 0f b6 39          	movzbl (%r9),%edi
   38947:	48 09 c7             	or     %rax,%rdi
   3894a:	41 8b 45 20          	mov    0x20(%r13),%eax
   3894e:	83 c0 ff             	add    $0xffffffff,%eax
   38951:	83 f8 07             	cmp    $0x7,%eax
   38954:	0f 86 4d fd ff ff    	jbe    386a7 <add_function_ranges+0x1f7>
   3895a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   38960:	4c 8b 04 24          	mov    (%rsp),%r8
   38964:	44 8b 4c 24 10       	mov    0x10(%rsp),%r9d
   38969:	44 2b 4c 24 08       	sub    0x8(%rsp),%r9d
   3896e:	be c8 00 00 00       	mov    $0xc8,%esi
   38973:	48 8d 6c 24 60       	lea    0x60(%rsp),%rbp
   38978:	48 89 fb             	mov    %rdi,%rbx
   3897b:	48 89 ef             	mov    %rbp,%rdi
   3897e:	48 8d 15 42 65 00 00 	lea    0x6542(%rip),%rdx        # 3eec7 <elf_crc32.crc32_table+0x7a7>
   38985:	48 8d 0d b1 65 00 00 	lea    0x65b1(%rip),%rcx        # 3ef3d <elf_crc32.crc32_table+0x81d>
   3898c:	31 c0                	xor    %eax,%eax
   3898e:	e8 7d b6 fc ff       	callq  4010 <snprintf@plt>
   38993:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
   38998:	48 89 ee             	mov    %rbp,%rsi
   3899b:	31 d2                	xor    %edx,%edx
   3899d:	ff 54 24 28          	callq  *0x28(%rsp)
   389a1:	48 89 df             	mov    %rbx,%rdi
   389a4:	31 c0                	xor    %eax,%eax
   389a6:	4c 8b 84 24 70 01 00 	mov    0x170(%rsp),%r8
   389ad:	00 
   389ae:	48 89 c1             	mov    %rax,%rcx
   389b1:	48 09 f9             	or     %rdi,%rcx
   389b4:	0f 84 e9 01 00 00    	je     38ba3 <add_function_ranges+0x6f3>
   389ba:	41 8b 4d 20          	mov    0x20(%r13),%ecx
   389be:	83 c1 ff             	add    $0xffffffff,%ecx
   389c1:	83 f9 07             	cmp    $0x7,%ecx
   389c4:	77 6a                	ja     38a30 <add_function_ranges+0x580>
   389c6:	48 8d 15 af 64 00 00 	lea    0x64af(%rip),%rdx        # 3ee7c <elf_crc32.crc32_table+0x75c>
   389cd:	48 63 0c 8a          	movslq (%rdx,%rcx,4),%rcx
   389d1:	48 01 d1             	add    %rdx,%rcx
   389d4:	ff e1                	jmpq   *%rcx
   389d6:	48 81 ff ff 00 00 00 	cmp    $0xff,%rdi
   389dd:	75 51                	jne    38a30 <add_function_ranges+0x580>
   389df:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
   389e4:	83 7c 24 38 00       	cmpl   $0x0,0x38(%rsp)
   389e9:	0f 84 71 fb ff ff    	je     38560 <add_function_ranges+0xb0>
   389ef:	e9 cb 01 00 00       	jmpq   38bbf <add_function_ranges+0x70f>
   389f4:	48 81 ff ff ff 00 00 	cmp    $0xffff,%rdi
   389fb:	75 33                	jne    38a30 <add_function_ranges+0x580>
   389fd:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
   38a02:	83 7c 24 38 00       	cmpl   $0x0,0x38(%rsp)
   38a07:	0f 84 53 fb ff ff    	je     38560 <add_function_ranges+0xb0>
   38a0d:	e9 ad 01 00 00       	jmpq   38bbf <add_function_ranges+0x70f>
   38a12:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
   38a17:	48 39 cf             	cmp    %rcx,%rdi
   38a1a:	75 14                	jne    38a30 <add_function_ranges+0x580>
   38a1c:	e9 22 fb ff ff       	jmpq   38543 <add_function_ranges+0x93>
   38a21:	48 83 ff ff          	cmp    $0xffffffffffffffff,%rdi
   38a25:	0f 84 aa 00 00 00    	je     38ad5 <add_function_ranges+0x625>
   38a2b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   38a30:	4c 89 fb             	mov    %r15,%rbx
   38a33:	4d 89 e7             	mov    %r12,%r15
   38a36:	4d 8b 64 24 08       	mov    0x8(%r12),%r12
   38a3b:	4c 03 64 24 40       	add    0x40(%rsp),%r12
   38a40:	4c 01 e7             	add    %r12,%rdi
   38a43:	49 01 c4             	add    %rax,%r12
   38a46:	49 8b 40 18          	mov    0x18(%r8),%rax
   38a4a:	48 85 c0             	test   %rax,%rax
   38a4d:	74 2d                	je     38a7c <add_function_ranges+0x5cc>
   38a4f:	49 8b 08             	mov    (%r8),%rcx
   38a52:	48 8d 14 40          	lea    (%rax,%rax,2),%rdx
   38a56:	48 8b 44 d1 f0       	mov    -0x10(%rcx,%rdx,8),%rax
   38a5b:	48 39 c7             	cmp    %rax,%rdi
   38a5e:	74 09                	je     38a69 <add_function_ranges+0x5b9>
   38a60:	48 8d 70 01          	lea    0x1(%rax),%rsi
   38a64:	48 39 f7             	cmp    %rsi,%rdi
   38a67:	75 13                	jne    38a7c <add_function_ranges+0x5cc>
   38a69:	48 8d 0c d1          	lea    (%rcx,%rdx,8),%rcx
   38a6d:	48 83 c1 e8          	add    $0xffffffffffffffe8,%rcx
   38a71:	48 8b 54 24 50       	mov    0x50(%rsp),%rdx
   38a76:	48 39 51 10          	cmp    %rdx,0x10(%rcx)
   38a7a:	74 6e                	je     38aea <add_function_ranges+0x63a>
   38a7c:	49 89 fe             	mov    %rdi,%r14
   38a7f:	be 18 00 00 00       	mov    $0x18,%esi
   38a84:	48 8b 7c 24 58       	mov    0x58(%rsp),%rdi
   38a89:	48 89 da             	mov    %rbx,%rdx
   38a8c:	48 8b 8c 24 68 01 00 	mov    0x168(%rsp),%rcx
   38a93:	00 
   38a94:	4d 89 c5             	mov    %r8,%r13
   38a97:	e8 f4 83 ff ff       	callq  30e90 <__rdos_backtrace_vector_grow>
   38a9c:	48 85 c0             	test   %rax,%rax
   38a9f:	0f 84 1a 01 00 00    	je     38bbf <add_function_ranges+0x70f>
   38aa5:	4c 89 30             	mov    %r14,(%rax)
   38aa8:	4c 89 60 08          	mov    %r12,0x8(%rax)
   38aac:	48 8b 4c 24 50       	mov    0x50(%rsp),%rcx
   38ab1:	48 89 48 10          	mov    %rcx,0x10(%rax)
   38ab5:	49 83 45 18 01       	addq   $0x1,0x18(%r13)
   38aba:	4d 89 fc             	mov    %r15,%r12
   38abd:	49 89 df             	mov    %rbx,%r15
   38ac0:	4c 8b 6c 24 48       	mov    0x48(%rsp),%r13
   38ac5:	83 7c 24 38 00       	cmpl   $0x0,0x38(%rsp)
   38aca:	0f 84 90 fa ff ff    	je     38560 <add_function_ranges+0xb0>
   38ad0:	e9 ea 00 00 00       	jmpq   38bbf <add_function_ranges+0x70f>
   38ad5:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
   38ada:	83 7c 24 38 00       	cmpl   $0x0,0x38(%rsp)
   38adf:	0f 84 7b fa ff ff    	je     38560 <add_function_ranges+0xb0>
   38ae5:	e9 d5 00 00 00       	jmpq   38bbf <add_function_ranges+0x70f>
   38aea:	49 39 c4             	cmp    %rax,%r12
   38aed:	76 cb                	jbe    38aba <add_function_ranges+0x60a>
   38aef:	4c 89 61 08          	mov    %r12,0x8(%rcx)
   38af3:	eb c5                	jmp    38aba <add_function_ranges+0x60a>
   38af5:	41 0f b6 41 03       	movzbl 0x3(%r9),%eax
   38afa:	48 c1 e0 18          	shl    $0x18,%rax
   38afe:	41 0f b6 49 02       	movzbl 0x2(%r9),%ecx
   38b03:	48 c1 e1 10          	shl    $0x10,%rcx
   38b07:	48 09 c1             	or     %rax,%rcx
   38b0a:	41 0f b6 51 01       	movzbl 0x1(%r9),%edx
   38b0f:	48 c1 e2 08          	shl    $0x8,%rdx
   38b13:	48 09 ca             	or     %rcx,%rdx
   38b16:	41 0f b6 01          	movzbl (%r9),%eax
   38b1a:	48 09 d0             	or     %rdx,%rax
   38b1d:	4c 8b 84 24 70 01 00 	mov    0x170(%rsp),%r8
   38b24:	00 
   38b25:	48 89 c1             	mov    %rax,%rcx
   38b28:	48 09 f9             	or     %rdi,%rcx
   38b2b:	0f 85 89 fe ff ff    	jne    389ba <add_function_ranges+0x50a>
   38b31:	eb 70                	jmp    38ba3 <add_function_ranges+0x6f3>
   38b33:	4c 8b 04 24          	mov    (%rsp),%r8
   38b37:	44 2b 4c 24 08       	sub    0x8(%rsp),%r9d
   38b3c:	31 ed                	xor    %ebp,%ebp
   38b3e:	be c8 00 00 00       	mov    $0xc8,%esi
   38b43:	4c 8d 7c 24 60       	lea    0x60(%rsp),%r15
   38b48:	49 89 fe             	mov    %rdi,%r14
   38b4b:	4c 89 ff             	mov    %r15,%rdi
   38b4e:	48 8d 15 72 63 00 00 	lea    0x6372(%rip),%rdx        # 3eec7 <elf_crc32.crc32_table+0x7a7>
   38b55:	48 8d 0d 5b 63 00 00 	lea    0x635b(%rip),%rcx        # 3eeb7 <elf_crc32.crc32_table+0x797>
   38b5c:	31 c0                	xor    %eax,%eax
   38b5e:	e8 ad b4 fc ff       	callq  4010 <snprintf@plt>
   38b63:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
   38b68:	4c 89 fe             	mov    %r15,%rsi
   38b6b:	31 d2                	xor    %edx,%edx
   38b6d:	ff 54 24 28          	callq  *0x28(%rsp)
   38b71:	4c 89 f7             	mov    %r14,%rdi
   38b74:	c7 44 24 38 01 00 00 	movl   $0x1,0x38(%rsp)
   38b7b:	00 
   38b7c:	0f 1f 40 00          	nopl   0x0(%rax)
   38b80:	4c 8b 84 24 70 01 00 	mov    0x170(%rsp),%r8
   38b87:	00 
   38b88:	40 0f b6 c5          	movzbl %bpl,%eax
   38b8c:	48 8b ac 24 60 01 00 	mov    0x160(%rsp),%rbp
   38b93:	00 
   38b94:	49 89 ef             	mov    %rbp,%r15
   38b97:	48 89 c1             	mov    %rax,%rcx
   38b9a:	48 09 f9             	or     %rdi,%rcx
   38b9d:	0f 85 17 fe ff ff    	jne    389ba <add_function_ranges+0x50a>
   38ba3:	31 db                	xor    %ebx,%ebx
   38ba5:	83 7c 24 38 00       	cmpl   $0x0,0x38(%rsp)
   38baa:	0f 94 c3             	sete   %bl
   38bad:	eb 12                	jmp    38bc1 <add_function_ranges+0x711>
   38baf:	48 8d 35 18 65 00 00 	lea    0x6518(%rip),%rsi        # 3f0ce <elf_crc32.crc32_table+0x9ae>
   38bb6:	31 db                	xor    %ebx,%ebx
   38bb8:	31 d2                	xor    %edx,%edx
   38bba:	41 ff d7             	callq  *%r15
   38bbd:	eb 02                	jmp    38bc1 <add_function_ranges+0x711>
   38bbf:	31 db                	xor    %ebx,%ebx
   38bc1:	89 d8                	mov    %ebx,%eax
   38bc3:	48 81 c4 28 01 00 00 	add    $0x128,%rsp
   38bca:	5b                   	pop    %rbx
   38bcb:	41 5c                	pop    %r12
   38bcd:	41 5d                	pop    %r13
   38bcf:	41 5e                	pop    %r14
   38bd1:	41 5f                	pop    %r15
   38bd3:	5d                   	pop    %rbp
   38bd4:	c3                   	retq   
   38bd5:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   38bdc:	00 00 00 
   38bdf:	90                   	nop

0000000000038be0 <__rdos_backtrace_get_view>:
   38be0:	55                   	push   %rbp
   38be1:	41 57                	push   %r15
   38be3:	41 56                	push   %r14
   38be5:	41 55                	push   %r13
   38be7:	41 54                	push   %r12
   38be9:	53                   	push   %rbx
   38bea:	50                   	push   %rax
   38beb:	4d 89 cc             	mov    %r9,%r12
   38bee:	4d 89 c7             	mov    %r8,%r15
   38bf1:	49 89 cd             	mov    %rcx,%r13
   38bf4:	89 f5                	mov    %esi,%ebp
   38bf6:	48 89 fb             	mov    %rdi,%rbx
   38bf9:	45 31 f6             	xor    %r14d,%r14d
   38bfc:	89 f7                	mov    %esi,%edi
   38bfe:	48 89 d6             	mov    %rdx,%rsi
   38c01:	31 d2                	xor    %edx,%edx
   38c03:	e8 28 b4 fc ff       	callq  4030 <lseek@plt>
   38c08:	48 85 c0             	test   %rax,%rax
   38c0b:	78 57                	js     38c64 <__rdos_backtrace_get_view+0x84>
   38c0d:	48 8b 44 24 40       	mov    0x40(%rsp),%rax
   38c12:	48 89 df             	mov    %rbx,%rdi
   38c15:	48 89 c3             	mov    %rax,%rbx
   38c18:	4c 89 ee             	mov    %r13,%rsi
   38c1b:	4c 89 fa             	mov    %r15,%rdx
   38c1e:	4c 89 e1             	mov    %r12,%rcx
   38c21:	e8 1a 82 ff ff       	callq  30e40 <__rdos_backtrace_alloc>
   38c26:	48 89 43 08          	mov    %rax,0x8(%rbx)
   38c2a:	48 85 c0             	test   %rax,%rax
   38c2d:	74 68                	je     38c97 <__rdos_backtrace_get_view+0xb7>
   38c2f:	48 89 03             	mov    %rax,(%rbx)
   38c32:	4c 89 6b 10          	mov    %r13,0x10(%rbx)
   38c36:	89 ef                	mov    %ebp,%edi
   38c38:	48 89 c6             	mov    %rax,%rsi
   38c3b:	4c 89 ea             	mov    %r13,%rdx
   38c3e:	e8 0d b4 fc ff       	callq  4050 <read@plt>
   38c43:	48 85 c0             	test   %rax,%rax
   38c46:	78 32                	js     38c7a <__rdos_backtrace_get_view+0x9a>
   38c48:	41 be 01 00 00 00    	mov    $0x1,%r14d
   38c4e:	4c 39 e8             	cmp    %r13,%rax
   38c51:	73 44                	jae    38c97 <__rdos_backtrace_get_view+0xb7>
   38c53:	48 8d 35 a3 64 00 00 	lea    0x64a3(%rip),%rsi        # 3f0fd <elf_crc32.crc32_table+0x9dd>
   38c5a:	45 31 f6             	xor    %r14d,%r14d
   38c5d:	4c 89 e7             	mov    %r12,%rdi
   38c60:	31 d2                	xor    %edx,%edx
   38c62:	eb 27                	jmp    38c8b <__rdos_backtrace_get_view+0xab>
   38c64:	e8 57 b4 fc ff       	callq  40c0 <__errno_location@plt>
   38c69:	8b 10                	mov    (%rax),%edx
   38c6b:	48 8d 35 80 64 00 00 	lea    0x6480(%rip),%rsi        # 3f0f2 <elf_crc32.crc32_table+0x9d2>
   38c72:	4c 89 e7             	mov    %r12,%rdi
   38c75:	41 ff d7             	callq  *%r15
   38c78:	eb 1d                	jmp    38c97 <__rdos_backtrace_get_view+0xb7>
   38c7a:	e8 41 b4 fc ff       	callq  40c0 <__errno_location@plt>
   38c7f:	8b 10                	mov    (%rax),%edx
   38c81:	48 8d 35 70 64 00 00 	lea    0x6470(%rip),%rsi        # 3f0f8 <elf_crc32.crc32_table+0x9d8>
   38c88:	4c 89 e7             	mov    %r12,%rdi
   38c8b:	41 ff d7             	callq  *%r15
   38c8e:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
   38c92:	e8 19 b4 fc ff       	callq  40b0 <free@plt>
   38c97:	44 89 f0             	mov    %r14d,%eax
   38c9a:	48 83 c4 08          	add    $0x8,%rsp
   38c9e:	5b                   	pop    %rbx
   38c9f:	41 5c                	pop    %r12
   38ca1:	41 5d                	pop    %r13
   38ca3:	41 5e                	pop    %r14
   38ca5:	41 5f                	pop    %r15
   38ca7:	5d                   	pop    %rbp
   38ca8:	c3                   	retq   
   38ca9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000038cb0 <__rdos_backtrace_release_view>:
   38cb0:	53                   	push   %rbx
   38cb1:	49 89 c8             	mov    %rcx,%r8
   38cb4:	48 89 d1             	mov    %rdx,%rcx
   38cb7:	48 89 f3             	mov    %rsi,%rbx
   38cba:	48 8b 76 08          	mov    0x8(%rsi),%rsi
   38cbe:	48 8b 53 10          	mov    0x10(%rbx),%rdx
   38cc2:	e8 b9 81 ff ff       	callq  30e80 <__rdos_backtrace_free>
   38cc7:	0f 57 c0             	xorps  %xmm0,%xmm0
   38cca:	0f 11 03             	movups %xmm0,(%rbx)
   38ccd:	5b                   	pop    %rbx
   38cce:	c3                   	retq   
   38ccf:	90                   	nop

0000000000038cd0 <__rdos_backtrace_qsort>:
   38cd0:	55                   	push   %rbp
   38cd1:	41 57                	push   %r15
   38cd3:	41 56                	push   %r14
   38cd5:	41 55                	push   %r13
   38cd7:	41 54                	push   %r12
   38cd9:	53                   	push   %rbx
   38cda:	48 81 ec 88 00 00 00 	sub    $0x88,%rsp
   38ce1:	48 89 54 24 18       	mov    %rdx,0x18(%rsp)
   38ce6:	48 83 fe 02          	cmp    $0x2,%rsi
   38cea:	0f 82 96 07 00 00    	jb     39486 <__rdos_backtrace_qsort+0x7b6>
   38cf0:	49 89 ce             	mov    %rcx,%r14
   38cf3:	49 89 f5             	mov    %rsi,%r13
   38cf6:	49 89 ff             	mov    %rdi,%r15
   38cf9:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   38cfe:	48 8d 0c 00          	lea    (%rax,%rax,1),%rcx
   38d02:	48 89 4c 24 78       	mov    %rcx,0x78(%rsp)
   38d07:	48 8d 48 e0          	lea    -0x20(%rax),%rcx
   38d0b:	48 c1 e9 05          	shr    $0x5,%rcx
   38d0f:	48 89 4c 24 40       	mov    %rcx,0x40(%rsp)
   38d14:	48 83 c1 01          	add    $0x1,%rcx
   38d18:	49 89 c4             	mov    %rax,%r12
   38d1b:	49 83 e4 e0          	and    $0xffffffffffffffe0,%r12
   38d1f:	89 ca                	mov    %ecx,%edx
   38d21:	83 e2 01             	and    $0x1,%edx
   38d24:	48 89 54 24 38       	mov    %rdx,0x38(%rsp)
   38d29:	48 29 d1             	sub    %rdx,%rcx
   38d2c:	48 89 4c 24 30       	mov    %rcx,0x30(%rsp)
   38d31:	89 c1                	mov    %eax,%ecx
   38d33:	83 e1 03             	and    $0x3,%ecx
   38d36:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
   38d3b:	48 83 c0 30          	add    $0x30,%rax
   38d3f:	48 89 44 24 60       	mov    %rax,0x60(%rsp)
   38d44:	4c 89 74 24 10       	mov    %r14,0x10(%rsp)
   38d49:	4c 89 64 24 20       	mov    %r12,0x20(%rsp)
   38d4e:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   38d53:	48 85 c0             	test   %rax,%rax
   38d56:	0f 84 c6 06 00 00    	je     39422 <__rdos_backtrace_qsort+0x752>
   38d5c:	4c 01 f8             	add    %r15,%rax
   38d5f:	48 89 44 24 50       	mov    %rax,0x50(%rsp)
   38d64:	4b 8d 04 27          	lea    (%r15,%r12,1),%rax
   38d68:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
   38d6d:	4b 8d 04 27          	lea    (%r15,%r12,1),%rax
   38d71:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
   38d76:	49 8d 7f 30          	lea    0x30(%r15),%rdi
   38d7a:	48 8b 44 24 60       	mov    0x60(%rsp),%rax
   38d7f:	4c 01 f8             	add    %r15,%rax
   38d82:	48 89 44 24 70       	mov    %rax,0x70(%rsp)
   38d87:	48 89 7c 24 48       	mov    %rdi,0x48(%rsp)
   38d8c:	4c 89 7c 24 28       	mov    %r15,0x28(%rsp)
   38d91:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   38d98:	00 00 00 
   38d9b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   38da0:	4c 89 ea             	mov    %r13,%rdx
   38da3:	48 d1 ea             	shr    %rdx
   38da6:	48 89 d1             	mov    %rdx,%rcx
   38da9:	4c 8b 4c 24 18       	mov    0x18(%rsp),%r9
   38dae:	49 0f af c9          	imul   %r9,%rcx
   38db2:	49 8d 04 0f          	lea    (%r15,%rcx,1),%rax
   38db6:	49 83 f9 20          	cmp    $0x20,%r9
   38dba:	72 1f                	jb     38ddb <__rdos_backtrace_qsort+0x10b>
   38dbc:	48 83 c2 01          	add    $0x1,%rdx
   38dc0:	49 0f af d1          	imul   %r9,%rdx
   38dc4:	4c 01 fa             	add    %r15,%rdx
   38dc7:	49 39 d7             	cmp    %rdx,%r15
   38dca:	0f 83 c0 00 00 00    	jae    38e90 <__rdos_backtrace_qsort+0x1c0>
   38dd0:	48 3b 44 24 50       	cmp    0x50(%rsp),%rax
   38dd5:	0f 83 b5 00 00 00    	jae    38e90 <__rdos_backtrace_qsort+0x1c0>
   38ddb:	4c 89 f9             	mov    %r15,%rcx
   38dde:	31 f6                	xor    %esi,%esi
   38de0:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   38de5:	48 89 f5             	mov    %rsi,%rbp
   38de8:	48 f7 d5             	not    %rbp
   38deb:	4c 01 cd             	add    %r9,%rbp
   38dee:	48 85 ff             	test   %rdi,%rdi
   38df1:	74 29                	je     38e1c <__rdos_backtrace_qsort+0x14c>
   38df3:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   38dfa:	00 00 00 
   38dfd:	0f 1f 00             	nopl   (%rax)
   38e00:	0f b6 19             	movzbl (%rcx),%ebx
   38e03:	0f b6 10             	movzbl (%rax),%edx
   38e06:	88 11                	mov    %dl,(%rcx)
   38e08:	88 18                	mov    %bl,(%rax)
   38e0a:	48 83 c6 01          	add    $0x1,%rsi
   38e0e:	48 83 c1 01          	add    $0x1,%rcx
   38e12:	48 83 c0 01          	add    $0x1,%rax
   38e16:	48 83 c7 ff          	add    $0xffffffffffffffff,%rdi
   38e1a:	75 e4                	jne    38e00 <__rdos_backtrace_qsort+0x130>
   38e1c:	48 83 fd 03          	cmp    $0x3,%rbp
   38e20:	0f 82 1a 01 00 00    	jb     38f40 <__rdos_backtrace_qsort+0x270>
   38e26:	4c 89 cf             	mov    %r9,%rdi
   38e29:	48 29 f7             	sub    %rsi,%rdi
   38e2c:	31 d2                	xor    %edx,%edx
   38e2e:	66 90                	xchg   %ax,%ax
   38e30:	0f b6 34 11          	movzbl (%rcx,%rdx,1),%esi
   38e34:	0f b6 1c 10          	movzbl (%rax,%rdx,1),%ebx
   38e38:	88 1c 11             	mov    %bl,(%rcx,%rdx,1)
   38e3b:	40 88 34 10          	mov    %sil,(%rax,%rdx,1)
   38e3f:	0f b6 74 11 01       	movzbl 0x1(%rcx,%rdx,1),%esi
   38e44:	0f b6 5c 10 01       	movzbl 0x1(%rax,%rdx,1),%ebx
   38e49:	88 5c 11 01          	mov    %bl,0x1(%rcx,%rdx,1)
   38e4d:	40 88 74 10 01       	mov    %sil,0x1(%rax,%rdx,1)
   38e52:	0f b6 74 11 02       	movzbl 0x2(%rcx,%rdx,1),%esi
   38e57:	0f b6 5c 10 02       	movzbl 0x2(%rax,%rdx,1),%ebx
   38e5c:	88 5c 11 02          	mov    %bl,0x2(%rcx,%rdx,1)
   38e60:	40 88 74 10 02       	mov    %sil,0x2(%rax,%rdx,1)
   38e65:	0f b6 74 11 03       	movzbl 0x3(%rcx,%rdx,1),%esi
   38e6a:	0f b6 5c 10 03       	movzbl 0x3(%rax,%rdx,1),%ebx
   38e6f:	88 5c 11 03          	mov    %bl,0x3(%rcx,%rdx,1)
   38e73:	40 88 74 10 03       	mov    %sil,0x3(%rax,%rdx,1)
   38e78:	48 83 c2 04          	add    $0x4,%rdx
   38e7c:	48 39 d7             	cmp    %rdx,%rdi
   38e7f:	75 af                	jne    38e30 <__rdos_backtrace_qsort+0x160>
   38e81:	e9 ba 00 00 00       	jmpq   38f40 <__rdos_backtrace_qsort+0x270>
   38e86:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   38e8d:	00 00 00 
   38e90:	48 83 7c 24 40 00    	cmpq   $0x0,0x40(%rsp)
   38e96:	0f 84 d6 03 00 00    	je     39272 <__rdos_backtrace_qsort+0x5a2>
   38e9c:	48 01 f9             	add    %rdi,%rcx
   38e9f:	31 d2                	xor    %edx,%edx
   38ea1:	48 8b 74 24 30       	mov    0x30(%rsp),%rsi
   38ea6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   38ead:	00 00 00 
   38eb0:	0f 10 44 17 d0       	movups -0x30(%rdi,%rdx,1),%xmm0
   38eb5:	0f 10 4c 17 e0       	movups -0x20(%rdi,%rdx,1),%xmm1
   38eba:	0f 10 54 11 d0       	movups -0x30(%rcx,%rdx,1),%xmm2
   38ebf:	0f 10 5c 11 e0       	movups -0x20(%rcx,%rdx,1),%xmm3
   38ec4:	0f 11 54 17 d0       	movups %xmm2,-0x30(%rdi,%rdx,1)
   38ec9:	0f 11 5c 17 e0       	movups %xmm3,-0x20(%rdi,%rdx,1)
   38ece:	0f 11 44 11 d0       	movups %xmm0,-0x30(%rcx,%rdx,1)
   38ed3:	0f 11 4c 11 e0       	movups %xmm1,-0x20(%rcx,%rdx,1)
   38ed8:	0f 10 44 17 f0       	movups -0x10(%rdi,%rdx,1),%xmm0
   38edd:	0f 10 0c 17          	movups (%rdi,%rdx,1),%xmm1
   38ee1:	0f 10 54 11 f0       	movups -0x10(%rcx,%rdx,1),%xmm2
   38ee6:	0f 10 1c 11          	movups (%rcx,%rdx,1),%xmm3
   38eea:	0f 11 54 17 f0       	movups %xmm2,-0x10(%rdi,%rdx,1)
   38eef:	0f 11 1c 17          	movups %xmm3,(%rdi,%rdx,1)
   38ef3:	0f 11 44 11 f0       	movups %xmm0,-0x10(%rcx,%rdx,1)
   38ef8:	0f 11 0c 11          	movups %xmm1,(%rcx,%rdx,1)
   38efc:	48 83 c2 40          	add    $0x40,%rdx
   38f00:	48 83 c6 fe          	add    $0xfffffffffffffffe,%rsi
   38f04:	75 aa                	jne    38eb0 <__rdos_backtrace_qsort+0x1e0>
   38f06:	48 83 7c 24 38 00    	cmpq   $0x0,0x38(%rsp)
   38f0c:	74 28                	je     38f36 <__rdos_backtrace_qsort+0x266>
   38f0e:	41 0f 10 04 17       	movups (%r15,%rdx,1),%xmm0
   38f13:	41 0f 10 4c 17 10    	movups 0x10(%r15,%rdx,1),%xmm1
   38f19:	0f 10 14 10          	movups (%rax,%rdx,1),%xmm2
   38f1d:	0f 10 5c 10 10       	movups 0x10(%rax,%rdx,1),%xmm3
   38f22:	41 0f 11 14 17       	movups %xmm2,(%r15,%rdx,1)
   38f27:	41 0f 11 5c 17 10    	movups %xmm3,0x10(%r15,%rdx,1)
   38f2d:	0f 11 04 10          	movups %xmm0,(%rax,%rdx,1)
   38f31:	0f 11 4c 10 10       	movups %xmm1,0x10(%rax,%rdx,1)
   38f36:	4d 39 cc             	cmp    %r9,%r12
   38f39:	0f 85 d0 02 00 00    	jne    3920f <__rdos_backtrace_qsort+0x53f>
   38f3f:	90                   	nop
   38f40:	49 83 fd 02          	cmp    $0x2,%r13
   38f44:	73 4a                	jae    38f90 <__rdos_backtrace_qsort+0x2c0>
   38f46:	31 db                	xor    %ebx,%ebx
   38f48:	48 8d 04 1b          	lea    (%rbx,%rbx,1),%rax
   38f4c:	4c 39 e8             	cmp    %r13,%rax
   38f4f:	0f 82 05 05 00 00    	jb     3945a <__rdos_backtrace_qsort+0x78a>
   38f55:	48 8d 7b 01          	lea    0x1(%rbx),%rdi
   38f59:	49 29 fd             	sub    %rdi,%r13
   38f5c:	49 0f af f9          	imul   %r9,%rdi
   38f60:	4c 01 ff             	add    %r15,%rdi
   38f63:	4c 89 ee             	mov    %r13,%rsi
   38f66:	4c 89 ca             	mov    %r9,%rdx
   38f69:	4c 89 f1             	mov    %r14,%rcx
   38f6c:	e8 5f fd ff ff       	callq  38cd0 <__rdos_backtrace_qsort>
   38f71:	48 8b 7c 24 48       	mov    0x48(%rsp),%rdi
   38f76:	49 89 dd             	mov    %rbx,%r13
   38f79:	48 83 fb 02          	cmp    $0x2,%rbx
   38f7d:	0f 83 1d fe ff ff    	jae    38da0 <__rdos_backtrace_qsort+0xd0>
   38f83:	e9 fe 04 00 00       	jmpq   39486 <__rdos_backtrace_qsort+0x7b6>
   38f88:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   38f8f:	00 
   38f90:	41 bf 01 00 00 00    	mov    $0x1,%r15d
   38f96:	4c 8b 64 24 70       	mov    0x70(%rsp),%r12
   38f9b:	45 31 f6             	xor    %r14d,%r14d
   38f9e:	31 db                	xor    %ebx,%ebx
   38fa0:	4c 89 ac 24 80 00 00 	mov    %r13,0x80(%rsp)
   38fa7:	00 
   38fa8:	eb 2a                	jmp    38fd4 <__rdos_backtrace_qsort+0x304>
   38faa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   38fb0:	4c 89 eb             	mov    %r13,%rbx
   38fb3:	4c 8b 4c 24 18       	mov    0x18(%rsp),%r9
   38fb8:	49 83 c7 01          	add    $0x1,%r15
   38fbc:	49 83 c6 01          	add    $0x1,%r14
   38fc0:	4d 01 cc             	add    %r9,%r12
   38fc3:	4c 8b ac 24 80 00 00 	mov    0x80(%rsp),%r13
   38fca:	00 
   38fcb:	4d 39 ef             	cmp    %r13,%r15
   38fce:	0f 84 0c 02 00 00    	je     391e0 <__rdos_backtrace_qsort+0x510>
   38fd4:	49 89 dd             	mov    %rbx,%r13
   38fd7:	4c 89 fd             	mov    %r15,%rbp
   38fda:	49 0f af e9          	imul   %r9,%rbp
   38fde:	48 8b 7c 24 28       	mov    0x28(%rsp),%rdi
   38fe3:	48 01 fd             	add    %rdi,%rbp
   38fe6:	48 89 ee             	mov    %rbp,%rsi
   38fe9:	ff 54 24 10          	callq  *0x10(%rsp)
   38fed:	85 c0                	test   %eax,%eax
   38fef:	7e bf                	jle    38fb0 <__rdos_backtrace_qsort+0x2e0>
   38ff1:	4d 8d 45 01          	lea    0x1(%r13),%r8
   38ff5:	4c 89 fb             	mov    %r15,%rbx
   38ff8:	4d 39 c7             	cmp    %r8,%r15
   38ffb:	4c 8b 4c 24 18       	mov    0x18(%rsp),%r9
   39000:	74 b6                	je     38fb8 <__rdos_backtrace_qsort+0x2e8>
   39002:	4c 89 c2             	mov    %r8,%rdx
   39005:	49 0f af d1          	imul   %r9,%rdx
   39009:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
   3900e:	48 8d 0c 10          	lea    (%rax,%rdx,1),%rcx
   39012:	49 83 f9 20          	cmp    $0x20,%r9
   39016:	73 0c                	jae    39024 <__rdos_backtrace_qsort+0x354>
   39018:	31 d2                	xor    %edx,%edx
   3901a:	48 8b 5c 24 08       	mov    0x8(%rsp),%rbx
   3901f:	e9 fc 00 00 00       	jmpq   39120 <__rdos_backtrace_qsort+0x450>
   39024:	4c 89 f6             	mov    %r14,%rsi
   39027:	49 0f af f1          	imul   %r9,%rsi
   3902b:	48 8b 7c 24 78       	mov    0x78(%rsp),%rdi
   39030:	48 01 f7             	add    %rsi,%rdi
   39033:	48 01 c7             	add    %rax,%rdi
   39036:	48 39 f9             	cmp    %rdi,%rcx
   39039:	48 8b 5c 24 08       	mov    0x8(%rsp),%rbx
   3903e:	73 1d                	jae    3905d <__rdos_backtrace_qsort+0x38d>
   39040:	4c 01 ce             	add    %r9,%rsi
   39043:	48 01 c6             	add    %rax,%rsi
   39046:	49 83 c5 02          	add    $0x2,%r13
   3904a:	4d 0f af e9          	imul   %r9,%r13
   3904e:	49 01 c5             	add    %rax,%r13
   39051:	4c 39 ee             	cmp    %r13,%rsi
   39054:	73 07                	jae    3905d <__rdos_backtrace_qsort+0x38d>
   39056:	31 d2                	xor    %edx,%edx
   39058:	e9 c3 00 00 00       	jmpq   39120 <__rdos_backtrace_qsort+0x450>
   3905d:	48 83 7c 24 40 00    	cmpq   $0x0,0x40(%rsp)
   39063:	0f 84 5e 01 00 00    	je     391c7 <__rdos_backtrace_qsort+0x4f7>
   39069:	48 03 54 24 48       	add    0x48(%rsp),%rdx
   3906e:	31 f6                	xor    %esi,%esi
   39070:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
   39075:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   3907c:	00 00 00 
   3907f:	90                   	nop
   39080:	0f 10 44 32 d0       	movups -0x30(%rdx,%rsi,1),%xmm0
   39085:	0f 10 4c 32 e0       	movups -0x20(%rdx,%rsi,1),%xmm1
   3908a:	41 0f 10 54 34 d0    	movups -0x30(%r12,%rsi,1),%xmm2
   39090:	41 0f 10 5c 34 e0    	movups -0x20(%r12,%rsi,1),%xmm3
   39096:	0f 11 54 32 d0       	movups %xmm2,-0x30(%rdx,%rsi,1)
   3909b:	0f 11 5c 32 e0       	movups %xmm3,-0x20(%rdx,%rsi,1)
   390a0:	41 0f 11 44 34 d0    	movups %xmm0,-0x30(%r12,%rsi,1)
   390a6:	41 0f 11 4c 34 e0    	movups %xmm1,-0x20(%r12,%rsi,1)
   390ac:	0f 10 44 32 f0       	movups -0x10(%rdx,%rsi,1),%xmm0
   390b1:	0f 10 0c 32          	movups (%rdx,%rsi,1),%xmm1
   390b5:	41 0f 10 54 34 f0    	movups -0x10(%r12,%rsi,1),%xmm2
   390bb:	41 0f 10 1c 34       	movups (%r12,%rsi,1),%xmm3
   390c0:	0f 11 54 32 f0       	movups %xmm2,-0x10(%rdx,%rsi,1)
   390c5:	0f 11 1c 32          	movups %xmm3,(%rdx,%rsi,1)
   390c9:	41 0f 11 44 34 f0    	movups %xmm0,-0x10(%r12,%rsi,1)
   390cf:	41 0f 11 0c 34       	movups %xmm1,(%r12,%rsi,1)
   390d4:	48 83 c6 40          	add    $0x40,%rsi
   390d8:	48 83 c7 fe          	add    $0xfffffffffffffffe,%rdi
   390dc:	75 a2                	jne    39080 <__rdos_backtrace_qsort+0x3b0>
   390de:	48 83 7c 24 38 00    	cmpq   $0x0,0x38(%rsp)
   390e4:	74 26                	je     3910c <__rdos_backtrace_qsort+0x43c>
   390e6:	0f 10 04 31          	movups (%rcx,%rsi,1),%xmm0
   390ea:	0f 10 4c 31 10       	movups 0x10(%rcx,%rsi,1),%xmm1
   390ef:	0f 10 54 35 00       	movups 0x0(%rbp,%rsi,1),%xmm2
   390f4:	0f 10 5c 35 10       	movups 0x10(%rbp,%rsi,1),%xmm3
   390f9:	0f 11 14 31          	movups %xmm2,(%rcx,%rsi,1)
   390fd:	0f 11 5c 31 10       	movups %xmm3,0x10(%rcx,%rsi,1)
   39102:	0f 11 44 35 00       	movups %xmm0,0x0(%rbp,%rsi,1)
   39107:	0f 11 4c 35 10       	movups %xmm1,0x10(%rbp,%rsi,1)
   3910c:	48 8b 54 24 20       	mov    0x20(%rsp),%rdx
   39111:	4c 39 ca             	cmp    %r9,%rdx
   39114:	0f 84 a5 00 00 00    	je     391bf <__rdos_backtrace_qsort+0x4ef>
   3911a:	48 01 d1             	add    %rdx,%rcx
   3911d:	48 01 d5             	add    %rdx,%rbp
   39120:	48 89 d6             	mov    %rdx,%rsi
   39123:	48 f7 d6             	not    %rsi
   39126:	4c 01 ce             	add    %r9,%rsi
   39129:	48 85 db             	test   %rbx,%rbx
   3912c:	74 30                	je     3915e <__rdos_backtrace_qsort+0x48e>
   3912e:	48 89 df             	mov    %rbx,%rdi
   39131:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   39138:	00 00 00 
   3913b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   39140:	0f b6 19             	movzbl (%rcx),%ebx
   39143:	0f b6 45 00          	movzbl 0x0(%rbp),%eax
   39147:	88 01                	mov    %al,(%rcx)
   39149:	88 5d 00             	mov    %bl,0x0(%rbp)
   3914c:	48 83 c2 01          	add    $0x1,%rdx
   39150:	48 83 c1 01          	add    $0x1,%rcx
   39154:	48 83 c5 01          	add    $0x1,%rbp
   39158:	48 83 c7 ff          	add    $0xffffffffffffffff,%rdi
   3915c:	75 e2                	jne    39140 <__rdos_backtrace_qsort+0x470>
   3915e:	48 83 fe 03          	cmp    $0x3,%rsi
   39162:	72 5b                	jb     391bf <__rdos_backtrace_qsort+0x4ef>
   39164:	4c 89 ce             	mov    %r9,%rsi
   39167:	48 29 d6             	sub    %rdx,%rsi
   3916a:	31 d2                	xor    %edx,%edx
   3916c:	0f 1f 40 00          	nopl   0x0(%rax)
   39170:	0f b6 04 11          	movzbl (%rcx,%rdx,1),%eax
   39174:	0f b6 5c 15 00       	movzbl 0x0(%rbp,%rdx,1),%ebx
   39179:	88 1c 11             	mov    %bl,(%rcx,%rdx,1)
   3917c:	88 44 15 00          	mov    %al,0x0(%rbp,%rdx,1)
   39180:	0f b6 44 11 01       	movzbl 0x1(%rcx,%rdx,1),%eax
   39185:	0f b6 5c 15 01       	movzbl 0x1(%rbp,%rdx,1),%ebx
   3918a:	88 5c 11 01          	mov    %bl,0x1(%rcx,%rdx,1)
   3918e:	88 44 15 01          	mov    %al,0x1(%rbp,%rdx,1)
   39192:	0f b6 44 11 02       	movzbl 0x2(%rcx,%rdx,1),%eax
   39197:	0f b6 5c 15 02       	movzbl 0x2(%rbp,%rdx,1),%ebx
   3919c:	88 5c 11 02          	mov    %bl,0x2(%rcx,%rdx,1)
   391a0:	88 44 15 02          	mov    %al,0x2(%rbp,%rdx,1)
   391a4:	0f b6 44 11 03       	movzbl 0x3(%rcx,%rdx,1),%eax
   391a9:	0f b6 5c 15 03       	movzbl 0x3(%rbp,%rdx,1),%ebx
   391ae:	88 5c 11 03          	mov    %bl,0x3(%rcx,%rdx,1)
   391b2:	88 44 15 03          	mov    %al,0x3(%rbp,%rdx,1)
   391b6:	48 83 c2 04          	add    $0x4,%rdx
   391ba:	48 39 d6             	cmp    %rdx,%rsi
   391bd:	75 b1                	jne    39170 <__rdos_backtrace_qsort+0x4a0>
   391bf:	4c 89 c3             	mov    %r8,%rbx
   391c2:	e9 f1 fd ff ff       	jmpq   38fb8 <__rdos_backtrace_qsort+0x2e8>
   391c7:	31 f6                	xor    %esi,%esi
   391c9:	48 83 7c 24 38 00    	cmpq   $0x0,0x38(%rsp)
   391cf:	0f 85 11 ff ff ff    	jne    390e6 <__rdos_backtrace_qsort+0x416>
   391d5:	e9 32 ff ff ff       	jmpq   3910c <__rdos_backtrace_qsort+0x43c>
   391da:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   391e0:	48 85 db             	test   %rbx,%rbx
   391e3:	74 3a                	je     3921f <__rdos_backtrace_qsort+0x54f>
   391e5:	48 89 d9             	mov    %rbx,%rcx
   391e8:	49 0f af c9          	imul   %r9,%rcx
   391ec:	4c 8b 7c 24 28       	mov    0x28(%rsp),%r15
   391f1:	49 8d 2c 0f          	lea    (%r15,%rcx,1),%rbp
   391f5:	49 83 f9 20          	cmp    $0x20,%r9
   391f9:	73 47                	jae    39242 <__rdos_backtrace_qsort+0x572>
   391fb:	4c 89 f9             	mov    %r15,%rcx
   391fe:	31 f6                	xor    %esi,%esi
   39200:	4c 8b 74 24 10       	mov    0x10(%rsp),%r14
   39205:	4c 8b 64 24 20       	mov    0x20(%rsp),%r12
   3920a:	e9 2d 01 00 00       	jmpq   3933c <__rdos_backtrace_qsort+0x66c>
   3920f:	4c 01 e0             	add    %r12,%rax
   39212:	48 8b 4c 24 68       	mov    0x68(%rsp),%rcx
   39217:	4c 89 e6             	mov    %r12,%rsi
   3921a:	e9 c1 fb ff ff       	jmpq   38de0 <__rdos_backtrace_qsort+0x110>
   3921f:	31 db                	xor    %ebx,%ebx
   39221:	4c 8b 74 24 10       	mov    0x10(%rsp),%r14
   39226:	4c 8b 7c 24 28       	mov    0x28(%rsp),%r15
   3922b:	4c 8b 64 24 20       	mov    0x20(%rsp),%r12
   39230:	48 8d 04 1b          	lea    (%rbx,%rbx,1),%rax
   39234:	4c 39 e8             	cmp    %r13,%rax
   39237:	0f 83 18 fd ff ff    	jae    38f55 <__rdos_backtrace_qsort+0x285>
   3923d:	e9 18 02 00 00       	jmpq   3945a <__rdos_backtrace_qsort+0x78a>
   39242:	48 8d 53 01          	lea    0x1(%rbx),%rdx
   39246:	49 0f af d1          	imul   %r9,%rdx
   3924a:	4c 01 fa             	add    %r15,%rdx
   3924d:	49 39 d7             	cmp    %rdx,%r15
   39250:	4c 8b 64 24 20       	mov    0x20(%rsp),%r12
   39255:	48 8b 44 24 48       	mov    0x48(%rsp),%rax
   3925a:	73 29                	jae    39285 <__rdos_backtrace_qsort+0x5b5>
   3925c:	48 3b 6c 24 50       	cmp    0x50(%rsp),%rbp
   39261:	73 22                	jae    39285 <__rdos_backtrace_qsort+0x5b5>
   39263:	4c 89 f9             	mov    %r15,%rcx
   39266:	31 f6                	xor    %esi,%esi
   39268:	4c 8b 74 24 10       	mov    0x10(%rsp),%r14
   3926d:	e9 ca 00 00 00       	jmpq   3933c <__rdos_backtrace_qsort+0x66c>
   39272:	31 d2                	xor    %edx,%edx
   39274:	48 83 7c 24 38 00    	cmpq   $0x0,0x38(%rsp)
   3927a:	0f 85 8e fc ff ff    	jne    38f0e <__rdos_backtrace_qsort+0x23e>
   39280:	e9 b1 fc ff ff       	jmpq   38f36 <__rdos_backtrace_qsort+0x266>
   39285:	48 83 7c 24 40 00    	cmpq   $0x0,0x40(%rsp)
   3928b:	0f 84 57 01 00 00    	je     393e8 <__rdos_backtrace_qsort+0x718>
   39291:	48 01 c1             	add    %rax,%rcx
   39294:	31 d2                	xor    %edx,%edx
   39296:	48 8b 74 24 30       	mov    0x30(%rsp),%rsi
   3929b:	4c 8b 74 24 10       	mov    0x10(%rsp),%r14
   392a0:	0f 10 44 10 d0       	movups -0x30(%rax,%rdx,1),%xmm0
   392a5:	0f 10 4c 10 e0       	movups -0x20(%rax,%rdx,1),%xmm1
   392aa:	0f 10 54 11 d0       	movups -0x30(%rcx,%rdx,1),%xmm2
   392af:	0f 10 5c 11 e0       	movups -0x20(%rcx,%rdx,1),%xmm3
   392b4:	0f 11 54 10 d0       	movups %xmm2,-0x30(%rax,%rdx,1)
   392b9:	0f 11 5c 10 e0       	movups %xmm3,-0x20(%rax,%rdx,1)
   392be:	0f 11 44 11 d0       	movups %xmm0,-0x30(%rcx,%rdx,1)
   392c3:	0f 11 4c 11 e0       	movups %xmm1,-0x20(%rcx,%rdx,1)
   392c8:	0f 10 44 10 f0       	movups -0x10(%rax,%rdx,1),%xmm0
   392cd:	0f 10 0c 10          	movups (%rax,%rdx,1),%xmm1
   392d1:	0f 10 54 11 f0       	movups -0x10(%rcx,%rdx,1),%xmm2
   392d6:	0f 10 1c 11          	movups (%rcx,%rdx,1),%xmm3
   392da:	0f 11 54 10 f0       	movups %xmm2,-0x10(%rax,%rdx,1)
   392df:	0f 11 1c 10          	movups %xmm3,(%rax,%rdx,1)
   392e3:	0f 11 44 11 f0       	movups %xmm0,-0x10(%rcx,%rdx,1)
   392e8:	0f 11 0c 11          	movups %xmm1,(%rcx,%rdx,1)
   392ec:	48 83 c2 40          	add    $0x40,%rdx
   392f0:	48 83 c6 fe          	add    $0xfffffffffffffffe,%rsi
   392f4:	75 aa                	jne    392a0 <__rdos_backtrace_qsort+0x5d0>
   392f6:	48 83 7c 24 38 00    	cmpq   $0x0,0x38(%rsp)
   392fc:	74 2a                	je     39328 <__rdos_backtrace_qsort+0x658>
   392fe:	41 0f 10 04 17       	movups (%r15,%rdx,1),%xmm0
   39303:	41 0f 10 4c 17 10    	movups 0x10(%r15,%rdx,1),%xmm1
   39309:	0f 10 54 15 00       	movups 0x0(%rbp,%rdx,1),%xmm2
   3930e:	0f 10 5c 15 10       	movups 0x10(%rbp,%rdx,1),%xmm3
   39313:	41 0f 11 14 17       	movups %xmm2,(%r15,%rdx,1)
   39318:	41 0f 11 5c 17 10    	movups %xmm3,0x10(%r15,%rdx,1)
   3931e:	0f 11 44 15 00       	movups %xmm0,0x0(%rbp,%rdx,1)
   39323:	0f 11 4c 15 10       	movups %xmm1,0x10(%rbp,%rdx,1)
   39328:	4d 39 cc             	cmp    %r9,%r12
   3932b:	0f 84 17 fc ff ff    	je     38f48 <__rdos_backtrace_qsort+0x278>
   39331:	4c 01 e5             	add    %r12,%rbp
   39334:	48 8b 4c 24 58       	mov    0x58(%rsp),%rcx
   39339:	4c 89 e6             	mov    %r12,%rsi
   3933c:	48 89 f0             	mov    %rsi,%rax
   3933f:	48 f7 d0             	not    %rax
   39342:	4c 01 c8             	add    %r9,%rax
   39345:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   3934a:	48 85 ff             	test   %rdi,%rdi
   3934d:	74 21                	je     39370 <__rdos_backtrace_qsort+0x6a0>
   3934f:	90                   	nop
   39350:	44 0f b6 01          	movzbl (%rcx),%r8d
   39354:	0f b6 55 00          	movzbl 0x0(%rbp),%edx
   39358:	88 11                	mov    %dl,(%rcx)
   3935a:	44 88 45 00          	mov    %r8b,0x0(%rbp)
   3935e:	48 83 c6 01          	add    $0x1,%rsi
   39362:	48 83 c1 01          	add    $0x1,%rcx
   39366:	48 83 c5 01          	add    $0x1,%rbp
   3936a:	48 83 c7 ff          	add    $0xffffffffffffffff,%rdi
   3936e:	75 e0                	jne    39350 <__rdos_backtrace_qsort+0x680>
   39370:	48 83 f8 03          	cmp    $0x3,%rax
   39374:	0f 82 ce fb ff ff    	jb     38f48 <__rdos_backtrace_qsort+0x278>
   3937a:	4c 89 cf             	mov    %r9,%rdi
   3937d:	48 29 f7             	sub    %rsi,%rdi
   39380:	31 d2                	xor    %edx,%edx
   39382:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   39389:	00 00 00 
   3938c:	0f 1f 40 00          	nopl   0x0(%rax)
   39390:	0f b6 34 11          	movzbl (%rcx,%rdx,1),%esi
   39394:	0f b6 44 15 00       	movzbl 0x0(%rbp,%rdx,1),%eax
   39399:	88 04 11             	mov    %al,(%rcx,%rdx,1)
   3939c:	40 88 74 15 00       	mov    %sil,0x0(%rbp,%rdx,1)
   393a1:	0f b6 74 11 01       	movzbl 0x1(%rcx,%rdx,1),%esi
   393a6:	0f b6 44 15 01       	movzbl 0x1(%rbp,%rdx,1),%eax
   393ab:	88 44 11 01          	mov    %al,0x1(%rcx,%rdx,1)
   393af:	40 88 74 15 01       	mov    %sil,0x1(%rbp,%rdx,1)
   393b4:	0f b6 74 11 02       	movzbl 0x2(%rcx,%rdx,1),%esi
   393b9:	0f b6 44 15 02       	movzbl 0x2(%rbp,%rdx,1),%eax
   393be:	88 44 11 02          	mov    %al,0x2(%rcx,%rdx,1)
   393c2:	40 88 74 15 02       	mov    %sil,0x2(%rbp,%rdx,1)
   393c7:	0f b6 74 11 03       	movzbl 0x3(%rcx,%rdx,1),%esi
   393cc:	0f b6 44 15 03       	movzbl 0x3(%rbp,%rdx,1),%eax
   393d1:	88 44 11 03          	mov    %al,0x3(%rcx,%rdx,1)
   393d5:	40 88 74 15 03       	mov    %sil,0x3(%rbp,%rdx,1)
   393da:	48 83 c2 04          	add    $0x4,%rdx
   393de:	48 39 d7             	cmp    %rdx,%rdi
   393e1:	75 ad                	jne    39390 <__rdos_backtrace_qsort+0x6c0>
   393e3:	e9 60 fb ff ff       	jmpq   38f48 <__rdos_backtrace_qsort+0x278>
   393e8:	31 d2                	xor    %edx,%edx
   393ea:	4c 8b 74 24 10       	mov    0x10(%rsp),%r14
   393ef:	48 83 7c 24 38 00    	cmpq   $0x0,0x38(%rsp)
   393f5:	0f 85 03 ff ff ff    	jne    392fe <__rdos_backtrace_qsort+0x62e>
   393fb:	e9 28 ff ff ff       	jmpq   39328 <__rdos_backtrace_qsort+0x658>
   39400:	48 89 d8             	mov    %rbx,%rax
   39403:	48 f7 d0             	not    %rax
   39406:	49 01 c5             	add    %rax,%r13
   39409:	4c 89 ff             	mov    %r15,%rdi
   3940c:	4c 89 ee             	mov    %r13,%rsi
   3940f:	31 d2                	xor    %edx,%edx
   39411:	4c 89 f1             	mov    %r14,%rcx
   39414:	e8 b7 f8 ff ff       	callq  38cd0 <__rdos_backtrace_qsort>
   39419:	49 89 dd             	mov    %rbx,%r13
   3941c:	48 83 fb 02          	cmp    $0x2,%rbx
   39420:	72 64                	jb     39486 <__rdos_backtrace_qsort+0x7b6>
   39422:	bd 01 00 00 00       	mov    $0x1,%ebp
   39427:	31 db                	xor    %ebx,%ebx
   39429:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   39430:	4c 89 ff             	mov    %r15,%rdi
   39433:	4c 89 fe             	mov    %r15,%rsi
   39436:	41 ff d6             	callq  *%r14
   39439:	31 c9                	xor    %ecx,%ecx
   3943b:	85 c0                	test   %eax,%eax
   3943d:	0f 9f c1             	setg   %cl
   39440:	48 01 cb             	add    %rcx,%rbx
   39443:	48 83 c5 01          	add    $0x1,%rbp
   39447:	49 39 ed             	cmp    %rbp,%r13
   3944a:	75 e4                	jne    39430 <__rdos_backtrace_qsort+0x760>
   3944c:	48 8d 04 1b          	lea    (%rbx,%rbx,1),%rax
   39450:	4c 39 e8             	cmp    %r13,%rax
   39453:	73 ab                	jae    39400 <__rdos_backtrace_qsort+0x730>
   39455:	4c 8b 4c 24 18       	mov    0x18(%rsp),%r9
   3945a:	4c 89 ff             	mov    %r15,%rdi
   3945d:	48 89 de             	mov    %rbx,%rsi
   39460:	4c 89 ca             	mov    %r9,%rdx
   39463:	4c 89 f1             	mov    %r14,%rcx
   39466:	4c 89 cd             	mov    %r9,%rbp
   39469:	e8 62 f8 ff ff       	callq  38cd0 <__rdos_backtrace_qsort>
   3946e:	48 83 c3 01          	add    $0x1,%rbx
   39472:	49 29 dd             	sub    %rbx,%r13
   39475:	48 0f af dd          	imul   %rbp,%rbx
   39479:	49 01 df             	add    %rbx,%r15
   3947c:	49 83 fd 02          	cmp    $0x2,%r13
   39480:	0f 83 c8 f8 ff ff    	jae    38d4e <__rdos_backtrace_qsort+0x7e>
   39486:	48 81 c4 88 00 00 00 	add    $0x88,%rsp
   3948d:	5b                   	pop    %rbx
   3948e:	41 5c                	pop    %r12
   39490:	41 5d                	pop    %r13
   39492:	41 5e                	pop    %r14
   39494:	41 5f                	pop    %r15
   39496:	5d                   	pop    %rbp
   39497:	c3                   	retq   

0000000000039498 <__rust_probestack>:
   39498:	55                   	push   %rbp
   39499:	48 89 e5             	mov    %rsp,%rbp
   3949c:	49 89 c3             	mov    %rax,%r11
   3949f:	49 81 fb 00 10 00 00 	cmp    $0x1000,%r11
   394a6:	76 1c                	jbe    394c4 <__rust_probestack+0x2c>
   394a8:	48 81 ec 00 10 00 00 	sub    $0x1000,%rsp
   394af:	48 85 64 24 08       	test   %rsp,0x8(%rsp)
   394b4:	49 81 eb 00 10 00 00 	sub    $0x1000,%r11
   394bb:	49 81 fb 00 10 00 00 	cmp    $0x1000,%r11
   394c2:	77 e4                	ja     394a8 <__rust_probestack+0x10>
   394c4:	4c 29 dc             	sub    %r11,%rsp
   394c7:	48 85 64 24 08       	test   %rsp,0x8(%rsp)
   394cc:	48 01 c4             	add    %rax,%rsp
   394cf:	c9                   	leaveq 
   394d0:	c3                   	retq   
   394d1:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   394d8:	00 00 00 
   394db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000394e0 <__floattisf>:
   394e0:	48 89 f8             	mov    %rdi,%rax
   394e3:	48 09 f0             	or     %rsi,%rax
   394e6:	74 62                	je     3954a <__floattisf+0x6a>
   394e8:	31 d2                	xor    %edx,%edx
   394ea:	49 89 f8             	mov    %rdi,%r8
   394ed:	49 f7 d8             	neg    %r8
   394f0:	48 19 f2             	sbb    %rsi,%rdx
   394f3:	48 85 f6             	test   %rsi,%rsi
   394f6:	48 0f 49 d6          	cmovns %rsi,%rdx
   394fa:	4c 0f 49 c7          	cmovns %rdi,%r8
   394fe:	49 0f bd c0          	bsr    %r8,%rax
   39502:	b9 7f 00 00 00       	mov    $0x7f,%ecx
   39507:	48 0f 45 c8          	cmovne %rax,%rcx
   3950b:	83 f1 3f             	xor    $0x3f,%ecx
   3950e:	83 c1 40             	add    $0x40,%ecx
   39511:	48 0f bd c2          	bsr    %rdx,%rax
   39515:	83 f0 3f             	xor    $0x3f,%eax
   39518:	48 85 d2             	test   %rdx,%rdx
   3951b:	0f 44 c1             	cmove  %ecx,%eax
   3951e:	41 b9 80 00 00 00    	mov    $0x80,%r9d
   39524:	41 29 c1             	sub    %eax,%r9d
   39527:	bf 7f 00 00 00       	mov    $0x7f,%edi
   3952c:	29 c7                	sub    %eax,%edi
   3952e:	41 83 f9 18          	cmp    $0x18,%r9d
   39532:	76 1a                	jbe    3954e <__floattisf+0x6e>
   39534:	41 83 f9 1a          	cmp    $0x1a,%r9d
   39538:	74 6b                	je     395a5 <__floattisf+0xc5>
   3953a:	41 83 f9 19          	cmp    $0x19,%r9d
   3953e:	75 1f                	jne    3955f <__floattisf+0x7f>
   39540:	4c 0f a4 c2 01       	shld   $0x1,%r8,%rdx
   39545:	4d 01 c0             	add    %r8,%r8
   39548:	eb 5b                	jmp    395a5 <__floattisf+0xc5>
   3954a:	0f 57 c0             	xorps  %xmm0,%xmm0
   3954d:	c3                   	retq   
   3954e:	04 18                	add    $0x18,%al
   39550:	89 c1                	mov    %eax,%ecx
   39552:	49 d3 e0             	shl    %cl,%r8
   39555:	31 d2                	xor    %edx,%edx
   39557:	a8 40                	test   $0x40,%al
   39559:	49 0f 44 d0          	cmove  %r8,%rdx
   3955d:	eb 77                	jmp    395d6 <__floattisf+0xf6>
   3955f:	53                   	push   %rbx
   39560:	b1 66                	mov    $0x66,%cl
   39562:	28 c1                	sub    %al,%cl
   39564:	4d 89 c2             	mov    %r8,%r10
   39567:	49 0f ad d2          	shrd   %cl,%rdx,%r10
   3956b:	49 89 d3             	mov    %rdx,%r11
   3956e:	49 d3 eb             	shr    %cl,%r11
   39571:	31 db                	xor    %ebx,%ebx
   39573:	f6 c1 40             	test   $0x40,%cl
   39576:	4d 0f 45 d3          	cmovne %r11,%r10
   3957a:	4c 0f 45 db          	cmovne %rbx,%r11
   3957e:	04 1a                	add    $0x1a,%al
   39580:	89 c1                	mov    %eax,%ecx
   39582:	4c 0f a5 c2          	shld   %cl,%r8,%rdx
   39586:	49 d3 e0             	shl    %cl,%r8
   39589:	a8 40                	test   $0x40,%al
   3958b:	49 0f 45 d0          	cmovne %r8,%rdx
   3958f:	4c 0f 45 c3          	cmovne %rbx,%r8
   39593:	31 c0                	xor    %eax,%eax
   39595:	49 09 d0             	or     %rdx,%r8
   39598:	0f 95 c0             	setne  %al
   3959b:	4c 09 d0             	or     %r10,%rax
   3959e:	49 89 c0             	mov    %rax,%r8
   395a1:	4c 89 da             	mov    %r11,%rdx
   395a4:	5b                   	pop    %rbx
   395a5:	44 89 c0             	mov    %r8d,%eax
   395a8:	c1 e8 02             	shr    $0x2,%eax
   395ab:	83 e0 01             	and    $0x1,%eax
   395ae:	4c 09 c0             	or     %r8,%rax
   395b1:	48 83 c0 01          	add    $0x1,%rax
   395b5:	48 83 d2 00          	adc    $0x0,%rdx
   395b9:	a9 00 00 00 04       	test   $0x4000000,%eax
   395be:	0f 94 c1             	sete   %cl
   395c1:	41 0f 45 f9          	cmovne %r9d,%edi
   395c5:	80 f1 03             	xor    $0x3,%cl
   395c8:	48 d3 e8             	shr    %cl,%rax
   395cb:	48 01 d2             	add    %rdx,%rdx
   395ce:	80 f1 3f             	xor    $0x3f,%cl
   395d1:	48 d3 e2             	shl    %cl,%rdx
   395d4:	09 c2                	or     %eax,%edx
   395d6:	48 c1 ee 20          	shr    $0x20,%rsi
   395da:	81 e6 00 00 00 80    	and    $0x80000000,%esi
   395e0:	c1 e7 17             	shl    $0x17,%edi
   395e3:	81 c7 00 00 80 3f    	add    $0x3f800000,%edi
   395e9:	81 e7 00 00 80 7f    	and    $0x7f800000,%edi
   395ef:	81 e2 ff ff 7f 00    	and    $0x7fffff,%edx
   395f5:	09 f2                	or     %esi,%edx
   395f7:	09 fa                	or     %edi,%edx
   395f9:	66 0f 6e c2          	movd   %edx,%xmm0
   395fd:	c3                   	retq   
   395fe:	66 90                	xchg   %ax,%ax

0000000000039600 <__floattidf>:
   39600:	48 89 f8             	mov    %rdi,%rax
   39603:	48 09 f0             	or     %rsi,%rax
   39606:	74 63                	je     3966b <__floattidf+0x6b>
   39608:	45 31 c0             	xor    %r8d,%r8d
   3960b:	49 89 fa             	mov    %rdi,%r10
   3960e:	49 f7 da             	neg    %r10
   39611:	49 19 f0             	sbb    %rsi,%r8
   39614:	48 85 f6             	test   %rsi,%rsi
   39617:	4c 0f 49 c6          	cmovns %rsi,%r8
   3961b:	4c 0f 49 d7          	cmovns %rdi,%r10
   3961f:	49 0f bd c2          	bsr    %r10,%rax
   39623:	b9 7f 00 00 00       	mov    $0x7f,%ecx
   39628:	48 0f 45 c8          	cmovne %rax,%rcx
   3962c:	83 f1 3f             	xor    $0x3f,%ecx
   3962f:	83 c1 40             	add    $0x40,%ecx
   39632:	49 0f bd c0          	bsr    %r8,%rax
   39636:	83 f0 3f             	xor    $0x3f,%eax
   39639:	4d 85 c0             	test   %r8,%r8
   3963c:	0f 44 c1             	cmove  %ecx,%eax
   3963f:	41 b9 80 00 00 00    	mov    $0x80,%r9d
   39645:	41 29 c1             	sub    %eax,%r9d
   39648:	bf 7f 00 00 00       	mov    $0x7f,%edi
   3964d:	29 c7                	sub    %eax,%edi
   3964f:	41 83 f9 35          	cmp    $0x35,%r9d
   39653:	76 1a                	jbe    3966f <__floattidf+0x6f>
   39655:	41 83 f9 37          	cmp    $0x37,%r9d
   39659:	74 6b                	je     396c6 <__floattidf+0xc6>
   3965b:	41 83 f9 36          	cmp    $0x36,%r9d
   3965f:	75 1f                	jne    39680 <__floattidf+0x80>
   39661:	4d 0f a4 d0 01       	shld   $0x1,%r10,%r8
   39666:	4d 01 d2             	add    %r10,%r10
   39669:	eb 5b                	jmp    396c6 <__floattidf+0xc6>
   3966b:	0f 57 c0             	xorps  %xmm0,%xmm0
   3966e:	c3                   	retq   
   3966f:	04 35                	add    $0x35,%al
   39671:	89 c1                	mov    %eax,%ecx
   39673:	49 d3 e2             	shl    %cl,%r10
   39676:	31 d2                	xor    %edx,%edx
   39678:	a8 40                	test   $0x40,%al
   3967a:	49 0f 44 d2          	cmove  %r10,%rdx
   3967e:	eb 6d                	jmp    396ed <__floattidf+0xed>
   39680:	53                   	push   %rbx
   39681:	b1 49                	mov    $0x49,%cl
   39683:	28 c1                	sub    %al,%cl
   39685:	4d 89 d3             	mov    %r10,%r11
   39688:	4d 0f ad c3          	shrd   %cl,%r8,%r11
   3968c:	4c 89 c2             	mov    %r8,%rdx
   3968f:	48 d3 ea             	shr    %cl,%rdx
   39692:	31 db                	xor    %ebx,%ebx
   39694:	f6 c1 40             	test   $0x40,%cl
   39697:	4c 0f 45 da          	cmovne %rdx,%r11
   3969b:	48 0f 45 d3          	cmovne %rbx,%rdx
   3969f:	04 37                	add    $0x37,%al
   396a1:	89 c1                	mov    %eax,%ecx
   396a3:	4d 0f a5 d0          	shld   %cl,%r10,%r8
   396a7:	49 d3 e2             	shl    %cl,%r10
   396aa:	a8 40                	test   $0x40,%al
   396ac:	4d 0f 45 c2          	cmovne %r10,%r8
   396b0:	4c 0f 45 d3          	cmovne %rbx,%r10
   396b4:	31 c0                	xor    %eax,%eax
   396b6:	4d 09 c2             	or     %r8,%r10
   396b9:	0f 95 c0             	setne  %al
   396bc:	4c 09 d8             	or     %r11,%rax
   396bf:	49 89 c2             	mov    %rax,%r10
   396c2:	49 89 d0             	mov    %rdx,%r8
   396c5:	5b                   	pop    %rbx
   396c6:	44 89 d2             	mov    %r10d,%edx
   396c9:	c1 ea 02             	shr    $0x2,%edx
   396cc:	83 e2 01             	and    $0x1,%edx
   396cf:	4c 09 d2             	or     %r10,%rdx
   396d2:	48 83 c2 01          	add    $0x1,%rdx
   396d6:	49 83 d0 00          	adc    $0x0,%r8
   396da:	48 0f ba e2 37       	bt     $0x37,%rdx
   396df:	0f 93 c1             	setae  %cl
   396e2:	41 0f 42 f9          	cmovb  %r9d,%edi
   396e6:	80 f1 03             	xor    $0x3,%cl
   396e9:	4c 0f ad c2          	shrd   %cl,%r8,%rdx
   396ed:	81 c7 ff 03 00 00    	add    $0x3ff,%edi
   396f3:	48 b8 00 00 00 00 00 	movabs $0x8000000000000000,%rax
   396fa:	00 00 80 
   396fd:	48 21 c6             	and    %rax,%rsi
   39700:	81 e7 ff 07 00 00    	and    $0x7ff,%edi
   39706:	48 c1 e7 34          	shl    $0x34,%rdi
   3970a:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffff,%rax
   39711:	ff 0f 00 
   39714:	48 21 d0             	and    %rdx,%rax
   39717:	48 09 f0             	or     %rsi,%rax
   3971a:	48 09 f8             	or     %rdi,%rax
   3971d:	66 48 0f 6e c0       	movq   %rax,%xmm0
   39722:	c3                   	retq   
   39723:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   3972a:	00 00 00 
   3972d:	0f 1f 00             	nopl   (%rax)

0000000000039730 <__floatuntisf>:
   39730:	48 89 f8             	mov    %rdi,%rax
   39733:	48 09 f0             	or     %rsi,%rax
   39736:	74 4c                	je     39784 <__floatuntisf+0x54>
   39738:	48 0f bd c7          	bsr    %rdi,%rax
   3973c:	b9 7f 00 00 00       	mov    $0x7f,%ecx
   39741:	48 0f 45 c8          	cmovne %rax,%rcx
   39745:	83 f1 3f             	xor    $0x3f,%ecx
   39748:	83 c1 40             	add    $0x40,%ecx
   3974b:	48 0f bd c6          	bsr    %rsi,%rax
   3974f:	83 f0 3f             	xor    $0x3f,%eax
   39752:	48 85 f6             	test   %rsi,%rsi
   39755:	0f 44 c1             	cmove  %ecx,%eax
   39758:	41 b8 80 00 00 00    	mov    $0x80,%r8d
   3975e:	41 29 c0             	sub    %eax,%r8d
   39761:	ba 7f 00 00 00       	mov    $0x7f,%edx
   39766:	29 c2                	sub    %eax,%edx
   39768:	41 83 f8 18          	cmp    $0x18,%r8d
   3976c:	76 1a                	jbe    39788 <__floatuntisf+0x58>
   3976e:	41 83 f8 1a          	cmp    $0x1a,%r8d
   39772:	74 6a                	je     397de <__floatuntisf+0xae>
   39774:	41 83 f8 19          	cmp    $0x19,%r8d
   39778:	75 1f                	jne    39799 <__floatuntisf+0x69>
   3977a:	48 0f a4 fe 01       	shld   $0x1,%rdi,%rsi
   3977f:	48 01 ff             	add    %rdi,%rdi
   39782:	eb 5a                	jmp    397de <__floatuntisf+0xae>
   39784:	0f 57 c0             	xorps  %xmm0,%xmm0
   39787:	c3                   	retq   
   39788:	04 18                	add    $0x18,%al
   3978a:	89 c1                	mov    %eax,%ecx
   3978c:	48 d3 e7             	shl    %cl,%rdi
   3978f:	31 f6                	xor    %esi,%esi
   39791:	a8 40                	test   $0x40,%al
   39793:	48 0f 44 f7          	cmove  %rdi,%rsi
   39797:	eb 75                	jmp    3980e <__floatuntisf+0xde>
   39799:	b1 66                	mov    $0x66,%cl
   3979b:	28 c1                	sub    %al,%cl
   3979d:	49 89 f9             	mov    %rdi,%r9
   397a0:	49 0f ad f1          	shrd   %cl,%rsi,%r9
   397a4:	49 89 f2             	mov    %rsi,%r10
   397a7:	49 d3 ea             	shr    %cl,%r10
   397aa:	45 31 db             	xor    %r11d,%r11d
   397ad:	f6 c1 40             	test   $0x40,%cl
   397b0:	4d 0f 45 ca          	cmovne %r10,%r9
   397b4:	4d 0f 45 d3          	cmovne %r11,%r10
   397b8:	04 1a                	add    $0x1a,%al
   397ba:	89 c1                	mov    %eax,%ecx
   397bc:	48 0f a5 fe          	shld   %cl,%rdi,%rsi
   397c0:	48 d3 e7             	shl    %cl,%rdi
   397c3:	a8 40                	test   $0x40,%al
   397c5:	48 0f 45 f7          	cmovne %rdi,%rsi
   397c9:	49 0f 45 fb          	cmovne %r11,%rdi
   397cd:	31 c0                	xor    %eax,%eax
   397cf:	48 09 f7             	or     %rsi,%rdi
   397d2:	0f 95 c0             	setne  %al
   397d5:	4c 09 c8             	or     %r9,%rax
   397d8:	48 89 c7             	mov    %rax,%rdi
   397db:	4c 89 d6             	mov    %r10,%rsi
   397de:	89 f8                	mov    %edi,%eax
   397e0:	c1 e8 02             	shr    $0x2,%eax
   397e3:	83 e0 01             	and    $0x1,%eax
   397e6:	48 09 f8             	or     %rdi,%rax
   397e9:	48 83 c0 01          	add    $0x1,%rax
   397ed:	48 83 d6 00          	adc    $0x0,%rsi
   397f1:	a9 00 00 00 04       	test   $0x4000000,%eax
   397f6:	0f 94 c1             	sete   %cl
   397f9:	41 0f 45 d0          	cmovne %r8d,%edx
   397fd:	80 f1 03             	xor    $0x3,%cl
   39800:	48 d3 e8             	shr    %cl,%rax
   39803:	48 01 f6             	add    %rsi,%rsi
   39806:	80 f1 3f             	xor    $0x3f,%cl
   39809:	48 d3 e6             	shl    %cl,%rsi
   3980c:	09 c6                	or     %eax,%esi
   3980e:	c1 e2 17             	shl    $0x17,%edx
   39811:	81 c2 00 00 80 3f    	add    $0x3f800000,%edx
   39817:	81 e2 00 00 80 7f    	and    $0x7f800000,%edx
   3981d:	81 e6 ff ff 7f 00    	and    $0x7fffff,%esi
   39823:	09 d6                	or     %edx,%esi
   39825:	66 0f 6e c6          	movd   %esi,%xmm0
   39829:	c3                   	retq   
   3982a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000039830 <__floatuntidf>:
   39830:	48 89 f8             	mov    %rdi,%rax
   39833:	48 09 f0             	or     %rsi,%rax
   39836:	74 4e                	je     39886 <__floatuntidf+0x56>
   39838:	48 0f bd c7          	bsr    %rdi,%rax
   3983c:	b9 7f 00 00 00       	mov    $0x7f,%ecx
   39841:	48 0f 45 c8          	cmovne %rax,%rcx
   39845:	83 f1 3f             	xor    $0x3f,%ecx
   39848:	83 c1 40             	add    $0x40,%ecx
   3984b:	48 0f bd c6          	bsr    %rsi,%rax
   3984f:	83 f0 3f             	xor    $0x3f,%eax
   39852:	48 85 f6             	test   %rsi,%rsi
   39855:	0f 44 c1             	cmove  %ecx,%eax
   39858:	41 b8 80 00 00 00    	mov    $0x80,%r8d
   3985e:	41 29 c0             	sub    %eax,%r8d
   39861:	41 b9 7f 00 00 00    	mov    $0x7f,%r9d
   39867:	41 29 c1             	sub    %eax,%r9d
   3986a:	41 83 f8 35          	cmp    $0x35,%r8d
   3986e:	76 1a                	jbe    3988a <__floatuntidf+0x5a>
   39870:	41 83 f8 37          	cmp    $0x37,%r8d
   39874:	74 6a                	je     398e0 <__floatuntidf+0xb0>
   39876:	41 83 f8 36          	cmp    $0x36,%r8d
   3987a:	75 1f                	jne    3989b <__floatuntidf+0x6b>
   3987c:	48 0f a4 fe 01       	shld   $0x1,%rdi,%rsi
   39881:	48 01 ff             	add    %rdi,%rdi
   39884:	eb 5a                	jmp    398e0 <__floatuntidf+0xb0>
   39886:	0f 57 c0             	xorps  %xmm0,%xmm0
   39889:	c3                   	retq   
   3988a:	04 35                	add    $0x35,%al
   3988c:	89 c1                	mov    %eax,%ecx
   3988e:	48 d3 e7             	shl    %cl,%rdi
   39891:	31 d2                	xor    %edx,%edx
   39893:	a8 40                	test   $0x40,%al
   39895:	48 0f 44 d7          	cmove  %rdi,%rdx
   39899:	eb 6b                	jmp    39906 <__floatuntidf+0xd6>
   3989b:	b1 49                	mov    $0x49,%cl
   3989d:	28 c1                	sub    %al,%cl
   3989f:	49 89 fa             	mov    %rdi,%r10
   398a2:	49 0f ad f2          	shrd   %cl,%rsi,%r10
   398a6:	48 89 f2             	mov    %rsi,%rdx
   398a9:	48 d3 ea             	shr    %cl,%rdx
   398ac:	45 31 db             	xor    %r11d,%r11d
   398af:	f6 c1 40             	test   $0x40,%cl
   398b2:	4c 0f 45 d2          	cmovne %rdx,%r10
   398b6:	49 0f 45 d3          	cmovne %r11,%rdx
   398ba:	04 37                	add    $0x37,%al
   398bc:	89 c1                	mov    %eax,%ecx
   398be:	48 0f a5 fe          	shld   %cl,%rdi,%rsi
   398c2:	48 d3 e7             	shl    %cl,%rdi
   398c5:	a8 40                	test   $0x40,%al
   398c7:	48 0f 45 f7          	cmovne %rdi,%rsi
   398cb:	49 0f 45 fb          	cmovne %r11,%rdi
   398cf:	31 c0                	xor    %eax,%eax
   398d1:	48 09 f7             	or     %rsi,%rdi
   398d4:	0f 95 c0             	setne  %al
   398d7:	4c 09 d0             	or     %r10,%rax
   398da:	48 89 c7             	mov    %rax,%rdi
   398dd:	48 89 d6             	mov    %rdx,%rsi
   398e0:	89 fa                	mov    %edi,%edx
   398e2:	c1 ea 02             	shr    $0x2,%edx
   398e5:	83 e2 01             	and    $0x1,%edx
   398e8:	48 09 fa             	or     %rdi,%rdx
   398eb:	48 83 c2 01          	add    $0x1,%rdx
   398ef:	48 83 d6 00          	adc    $0x0,%rsi
   398f3:	48 0f ba e2 37       	bt     $0x37,%rdx
   398f8:	0f 93 c1             	setae  %cl
   398fb:	45 0f 42 c8          	cmovb  %r8d,%r9d
   398ff:	80 f1 03             	xor    $0x3,%cl
   39902:	48 0f ad f2          	shrd   %cl,%rsi,%rdx
   39906:	41 81 c1 ff 03 00 00 	add    $0x3ff,%r9d
   3990d:	41 81 e1 ff 07 00 00 	and    $0x7ff,%r9d
   39914:	49 c1 e1 34          	shl    $0x34,%r9
   39918:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffff,%rax
   3991f:	ff 0f 00 
   39922:	48 21 d0             	and    %rdx,%rax
   39925:	4c 09 c8             	or     %r9,%rax
   39928:	66 48 0f 6e c0       	movq   %rax,%xmm0
   3992d:	c3                   	retq   
   3992e:	66 90                	xchg   %ax,%ax

0000000000039930 <__fixsfti>:
   39930:	66 0f 7e c6          	movd   %xmm0,%esi
   39934:	89 f1                	mov    %esi,%ecx
   39936:	81 e1 00 00 80 7f    	and    $0x7f800000,%ecx
   3993c:	31 c0                	xor    %eax,%eax
   3993e:	ba 00 00 00 00       	mov    $0x0,%edx
   39943:	81 f9 00 00 80 3f    	cmp    $0x3f800000,%ecx
   39949:	72 25                	jb     39970 <__fixsfti+0x40>
   3994b:	c1 e9 17             	shr    $0x17,%ecx
   3994e:	48 8d 41 81          	lea    -0x7f(%rcx),%rax
   39952:	48 83 f8 7e          	cmp    $0x7e,%rax
   39956:	76 19                	jbe    39971 <__fixsfti+0x41>
   39958:	31 c0                	xor    %eax,%eax
   3995a:	85 f6                	test   %esi,%esi
   3995c:	0f 99 c0             	setns  %al
   3995f:	48 f7 d8             	neg    %rax
   39962:	48 ba 00 00 00 00 00 	movabs $0x8000000000000000,%rdx
   39969:	00 00 80 
   3996c:	48 83 da 00          	sbb    $0x0,%rdx
   39970:	c3                   	retq   
   39971:	89 f7                	mov    %esi,%edi
   39973:	81 e7 ff ff 7f 00    	and    $0x7fffff,%edi
   39979:	81 cf 00 00 80 00    	or     $0x800000,%edi
   3997f:	48 83 f8 17          	cmp    $0x17,%rax
   39983:	73 0d                	jae    39992 <__fixsfti+0x62>
   39985:	b0 16                	mov    $0x16,%al
   39987:	28 c8                	sub    %cl,%al
   39989:	89 c1                	mov    %eax,%ecx
   3998b:	d3 ef                	shr    %cl,%edi
   3998d:	45 31 c0             	xor    %r8d,%r8d
   39990:	eb 1c                	jmp    399ae <__fixsfti+0x7e>
   39992:	89 ff                	mov    %edi,%edi
   39994:	80 c1 6a             	add    $0x6a,%cl
   39997:	31 c0                	xor    %eax,%eax
   39999:	45 31 c0             	xor    %r8d,%r8d
   3999c:	49 0f a5 f8          	shld   %cl,%rdi,%r8
   399a0:	48 d3 e7             	shl    %cl,%rdi
   399a3:	f6 c1 40             	test   $0x40,%cl
   399a6:	4c 0f 45 c7          	cmovne %rdi,%r8
   399aa:	48 0f 45 f8          	cmovne %rax,%rdi
   399ae:	31 d2                	xor    %edx,%edx
   399b0:	48 89 f8             	mov    %rdi,%rax
   399b3:	48 f7 d8             	neg    %rax
   399b6:	4c 19 c2             	sbb    %r8,%rdx
   399b9:	85 f6                	test   %esi,%esi
   399bb:	48 0f 49 c7          	cmovns %rdi,%rax
   399bf:	49 0f 49 d0          	cmovns %r8,%rdx
   399c3:	c3                   	retq   
   399c4:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   399cb:	00 00 00 
   399ce:	66 90                	xchg   %ax,%ax

00000000000399d0 <__fixdfti>:
   399d0:	66 48 0f 7e c6       	movq   %xmm0,%rsi
   399d5:	48 89 f1             	mov    %rsi,%rcx
   399d8:	48 c1 e9 34          	shr    $0x34,%rcx
   399dc:	81 e1 ff 07 00 00    	and    $0x7ff,%ecx
   399e2:	31 c0                	xor    %eax,%eax
   399e4:	ba 00 00 00 00       	mov    $0x0,%edx
   399e9:	48 81 f9 ff 03 00 00 	cmp    $0x3ff,%rcx
   399f0:	72 26                	jb     39a18 <__fixdfti+0x48>
   399f2:	48 8d 81 01 fc ff ff 	lea    -0x3ff(%rcx),%rax
   399f9:	48 83 f8 7e          	cmp    $0x7e,%rax
   399fd:	76 1a                	jbe    39a19 <__fixdfti+0x49>
   399ff:	31 c0                	xor    %eax,%eax
   39a01:	48 85 f6             	test   %rsi,%rsi
   39a04:	0f 99 c0             	setns  %al
   39a07:	48 f7 d8             	neg    %rax
   39a0a:	48 ba 00 00 00 00 00 	movabs $0x8000000000000000,%rdx
   39a11:	00 00 80 
   39a14:	48 83 da 00          	sbb    $0x0,%rdx
   39a18:	c3                   	retq   
   39a19:	48 ba ff ff ff ff ff 	movabs $0xfffffffffffff,%rdx
   39a20:	ff 0f 00 
   39a23:	48 89 f7             	mov    %rsi,%rdi
   39a26:	48 21 d7             	and    %rdx,%rdi
   39a29:	48 01 d7             	add    %rdx,%rdi
   39a2c:	48 83 c7 01          	add    $0x1,%rdi
   39a30:	48 83 f8 34          	cmp    $0x34,%rax
   39a34:	73 0e                	jae    39a44 <__fixdfti+0x74>
   39a36:	b0 33                	mov    $0x33,%al
   39a38:	28 c8                	sub    %cl,%al
   39a3a:	89 c1                	mov    %eax,%ecx
   39a3c:	48 d3 ef             	shr    %cl,%rdi
   39a3f:	45 31 c0             	xor    %r8d,%r8d
   39a42:	eb 1a                	jmp    39a5e <__fixdfti+0x8e>
   39a44:	80 c1 4d             	add    $0x4d,%cl
   39a47:	31 c0                	xor    %eax,%eax
   39a49:	45 31 c0             	xor    %r8d,%r8d
   39a4c:	49 0f a5 f8          	shld   %cl,%rdi,%r8
   39a50:	48 d3 e7             	shl    %cl,%rdi
   39a53:	f6 c1 40             	test   $0x40,%cl
   39a56:	4c 0f 45 c7          	cmovne %rdi,%r8
   39a5a:	48 0f 45 f8          	cmovne %rax,%rdi
   39a5e:	31 d2                	xor    %edx,%edx
   39a60:	48 89 f8             	mov    %rdi,%rax
   39a63:	48 f7 d8             	neg    %rax
   39a66:	4c 19 c2             	sbb    %r8,%rdx
   39a69:	48 85 f6             	test   %rsi,%rsi
   39a6c:	48 0f 49 c7          	cmovns %rdi,%rax
   39a70:	49 0f 49 d0          	cmovns %r8,%rdx
   39a74:	c3                   	retq   
   39a75:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   39a7c:	00 00 00 
   39a7f:	90                   	nop

0000000000039a80 <__fixunssfdi>:
   39a80:	66 0f 7e c2          	movd   %xmm0,%edx
   39a84:	89 d1                	mov    %edx,%ecx
   39a86:	81 e1 00 00 80 7f    	and    $0x7f800000,%ecx
   39a8c:	31 c0                	xor    %eax,%eax
   39a8e:	81 f9 00 00 80 3f    	cmp    $0x3f800000,%ecx
   39a94:	72 19                	jb     39aaf <__fixunssfdi+0x2f>
   39a96:	85 d2                	test   %edx,%edx
   39a98:	78 15                	js     39aaf <__fixunssfdi+0x2f>
   39a9a:	c1 e9 17             	shr    $0x17,%ecx
   39a9d:	48 8d 41 81          	lea    -0x7f(%rcx),%rax
   39aa1:	48 83 f8 3f          	cmp    $0x3f,%rax
   39aa5:	76 09                	jbe    39ab0 <__fixunssfdi+0x30>
   39aa7:	c1 fa 1f             	sar    $0x1f,%edx
   39aaa:	f7 d2                	not    %edx
   39aac:	48 63 c2             	movslq %edx,%rax
   39aaf:	c3                   	retq   
   39ab0:	89 d6                	mov    %edx,%esi
   39ab2:	81 e6 ff ff 7f 00    	and    $0x7fffff,%esi
   39ab8:	81 ce 00 00 80 00    	or     $0x800000,%esi
   39abe:	48 83 f8 17          	cmp    $0x17,%rax
   39ac2:	73 0a                	jae    39ace <__fixunssfdi+0x4e>
   39ac4:	b0 16                	mov    $0x16,%al
   39ac6:	28 c8                	sub    %cl,%al
   39ac8:	89 c1                	mov    %eax,%ecx
   39aca:	d3 ee                	shr    %cl,%esi
   39acc:	eb 08                	jmp    39ad6 <__fixunssfdi+0x56>
   39ace:	89 f6                	mov    %esi,%esi
   39ad0:	80 c1 2a             	add    $0x2a,%cl
   39ad3:	48 d3 e6             	shl    %cl,%rsi
   39ad6:	48 89 f0             	mov    %rsi,%rax
   39ad9:	48 f7 d8             	neg    %rax
   39adc:	85 d2                	test   %edx,%edx
   39ade:	48 0f 49 c6          	cmovns %rsi,%rax
   39ae2:	c3                   	retq   
   39ae3:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   39aea:	00 00 00 
   39aed:	0f 1f 00             	nopl   (%rax)

0000000000039af0 <__fixunssfti>:
   39af0:	66 0f 7e c6          	movd   %xmm0,%esi
   39af4:	89 f1                	mov    %esi,%ecx
   39af6:	81 e1 00 00 80 7f    	and    $0x7f800000,%ecx
   39afc:	31 c0                	xor    %eax,%eax
   39afe:	81 f9 00 00 80 3f    	cmp    $0x3f800000,%ecx
   39b04:	72 19                	jb     39b1f <__fixunssfti+0x2f>
   39b06:	85 f6                	test   %esi,%esi
   39b08:	78 15                	js     39b1f <__fixunssfti+0x2f>
   39b0a:	c1 e9 17             	shr    $0x17,%ecx
   39b0d:	48 8d 41 81          	lea    -0x7f(%rcx),%rax
   39b11:	48 83 f8 7f          	cmp    $0x7f,%rax
   39b15:	76 0c                	jbe    39b23 <__fixunssfti+0x33>
   39b17:	c1 fe 1f             	sar    $0x1f,%esi
   39b1a:	f7 d6                	not    %esi
   39b1c:	48 63 c6             	movslq %esi,%rax
   39b1f:	48 89 c2             	mov    %rax,%rdx
   39b22:	c3                   	retq   
   39b23:	89 f7                	mov    %esi,%edi
   39b25:	81 e7 ff ff 7f 00    	and    $0x7fffff,%edi
   39b2b:	81 cf 00 00 80 00    	or     $0x800000,%edi
   39b31:	48 83 f8 17          	cmp    $0x17,%rax
   39b35:	73 0d                	jae    39b44 <__fixunssfti+0x54>
   39b37:	b0 16                	mov    $0x16,%al
   39b39:	28 c8                	sub    %cl,%al
   39b3b:	89 c1                	mov    %eax,%ecx
   39b3d:	d3 ef                	shr    %cl,%edi
   39b3f:	45 31 c0             	xor    %r8d,%r8d
   39b42:	eb 1c                	jmp    39b60 <__fixunssfti+0x70>
   39b44:	89 ff                	mov    %edi,%edi
   39b46:	80 c1 6a             	add    $0x6a,%cl
   39b49:	31 c0                	xor    %eax,%eax
   39b4b:	45 31 c0             	xor    %r8d,%r8d
   39b4e:	49 0f a5 f8          	shld   %cl,%rdi,%r8
   39b52:	48 d3 e7             	shl    %cl,%rdi
   39b55:	f6 c1 40             	test   $0x40,%cl
   39b58:	4c 0f 45 c7          	cmovne %rdi,%r8
   39b5c:	48 0f 45 f8          	cmovne %rax,%rdi
   39b60:	31 d2                	xor    %edx,%edx
   39b62:	48 89 f8             	mov    %rdi,%rax
   39b65:	48 f7 d8             	neg    %rax
   39b68:	4c 19 c2             	sbb    %r8,%rdx
   39b6b:	85 f6                	test   %esi,%esi
   39b6d:	48 0f 49 c7          	cmovns %rdi,%rax
   39b71:	49 0f 49 d0          	cmovns %r8,%rdx
   39b75:	c3                   	retq   
   39b76:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   39b7d:	00 00 00 

0000000000039b80 <__fixunsdfdi>:
   39b80:	66 48 0f 7e c2       	movq   %xmm0,%rdx
   39b85:	48 89 d1             	mov    %rdx,%rcx
   39b88:	48 c1 e9 34          	shr    $0x34,%rcx
   39b8c:	81 e1 ff 07 00 00    	and    $0x7ff,%ecx
   39b92:	31 c0                	xor    %eax,%eax
   39b94:	48 81 f9 ff 03 00 00 	cmp    $0x3ff,%rcx
   39b9b:	72 1c                	jb     39bb9 <__fixunsdfdi+0x39>
   39b9d:	48 85 d2             	test   %rdx,%rdx
   39ba0:	78 17                	js     39bb9 <__fixunsdfdi+0x39>
   39ba2:	48 8d 81 01 fc ff ff 	lea    -0x3ff(%rcx),%rax
   39ba9:	48 83 f8 3f          	cmp    $0x3f,%rax
   39bad:	76 0b                	jbe    39bba <__fixunsdfdi+0x3a>
   39baf:	48 c1 fa 3f          	sar    $0x3f,%rdx
   39bb3:	48 f7 d2             	not    %rdx
   39bb6:	48 89 d0             	mov    %rdx,%rax
   39bb9:	c3                   	retq   
   39bba:	48 be ff ff ff ff ff 	movabs $0xfffffffffffff,%rsi
   39bc1:	ff 0f 00 
   39bc4:	48 89 d7             	mov    %rdx,%rdi
   39bc7:	48 21 f7             	and    %rsi,%rdi
   39bca:	48 01 fe             	add    %rdi,%rsi
   39bcd:	48 83 c6 01          	add    $0x1,%rsi
   39bd1:	48 83 f8 34          	cmp    $0x34,%rax
   39bd5:	73 0b                	jae    39be2 <__fixunsdfdi+0x62>
   39bd7:	b0 33                	mov    $0x33,%al
   39bd9:	28 c8                	sub    %cl,%al
   39bdb:	89 c1                	mov    %eax,%ecx
   39bdd:	48 d3 ee             	shr    %cl,%rsi
   39be0:	eb 06                	jmp    39be8 <__fixunsdfdi+0x68>
   39be2:	80 c1 0d             	add    $0xd,%cl
   39be5:	48 d3 e6             	shl    %cl,%rsi
   39be8:	48 89 f0             	mov    %rsi,%rax
   39beb:	48 f7 d8             	neg    %rax
   39bee:	48 85 d2             	test   %rdx,%rdx
   39bf1:	48 0f 49 c6          	cmovns %rsi,%rax
   39bf5:	c3                   	retq   
   39bf6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   39bfd:	00 00 00 

0000000000039c00 <__fixunsdfti>:
   39c00:	66 48 0f 7e c6       	movq   %xmm0,%rsi
   39c05:	48 89 f1             	mov    %rsi,%rcx
   39c08:	48 c1 e9 34          	shr    $0x34,%rcx
   39c0c:	81 e1 ff 07 00 00    	and    $0x7ff,%ecx
   39c12:	31 c0                	xor    %eax,%eax
   39c14:	48 81 f9 ff 03 00 00 	cmp    $0x3ff,%rcx
   39c1b:	72 1c                	jb     39c39 <__fixunsdfti+0x39>
   39c1d:	48 85 f6             	test   %rsi,%rsi
   39c20:	78 17                	js     39c39 <__fixunsdfti+0x39>
   39c22:	48 8d 81 01 fc ff ff 	lea    -0x3ff(%rcx),%rax
   39c29:	48 83 f8 7f          	cmp    $0x7f,%rax
   39c2d:	76 0e                	jbe    39c3d <__fixunsdfti+0x3d>
   39c2f:	48 c1 fe 3f          	sar    $0x3f,%rsi
   39c33:	48 f7 d6             	not    %rsi
   39c36:	48 89 f0             	mov    %rsi,%rax
   39c39:	48 89 c2             	mov    %rax,%rdx
   39c3c:	c3                   	retq   
   39c3d:	48 ba ff ff ff ff ff 	movabs $0xfffffffffffff,%rdx
   39c44:	ff 0f 00 
   39c47:	48 89 f7             	mov    %rsi,%rdi
   39c4a:	48 21 d7             	and    %rdx,%rdi
   39c4d:	48 01 d7             	add    %rdx,%rdi
   39c50:	48 83 c7 01          	add    $0x1,%rdi
   39c54:	48 83 f8 34          	cmp    $0x34,%rax
   39c58:	73 0e                	jae    39c68 <__fixunsdfti+0x68>
   39c5a:	b0 33                	mov    $0x33,%al
   39c5c:	28 c8                	sub    %cl,%al
   39c5e:	89 c1                	mov    %eax,%ecx
   39c60:	48 d3 ef             	shr    %cl,%rdi
   39c63:	45 31 c0             	xor    %r8d,%r8d
   39c66:	eb 1a                	jmp    39c82 <__fixunsdfti+0x82>
   39c68:	80 c1 4d             	add    $0x4d,%cl
   39c6b:	31 c0                	xor    %eax,%eax
   39c6d:	45 31 c0             	xor    %r8d,%r8d
   39c70:	49 0f a5 f8          	shld   %cl,%rdi,%r8
   39c74:	48 d3 e7             	shl    %cl,%rdi
   39c77:	f6 c1 40             	test   $0x40,%cl
   39c7a:	4c 0f 45 c7          	cmovne %rdi,%r8
   39c7e:	48 0f 45 f8          	cmovne %rax,%rdi
   39c82:	31 d2                	xor    %edx,%edx
   39c84:	48 89 f8             	mov    %rdi,%rax
   39c87:	48 f7 d8             	neg    %rax
   39c8a:	4c 19 c2             	sbb    %r8,%rdx
   39c8d:	48 85 f6             	test   %rsi,%rsi
   39c90:	48 0f 49 c7          	cmovns %rdi,%rax
   39c94:	49 0f 49 d0          	cmovns %r8,%rdx
   39c98:	c3                   	retq   
   39c99:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000039ca0 <__powisf2>:
   39ca0:	0f 28 c8             	movaps %xmm0,%xmm1
   39ca3:	40 f6 c7 01          	test   $0x1,%dil
   39ca7:	74 0d                	je     39cb6 <__powisf2+0x16>
   39ca9:	0f 28 c1             	movaps %xmm1,%xmm0
   39cac:	8d 47 01             	lea    0x1(%rdi),%eax
   39caf:	83 f8 03             	cmp    $0x3,%eax
   39cb2:	73 12                	jae    39cc6 <__powisf2+0x26>
   39cb4:	eb 39                	jmp    39cef <__powisf2+0x4f>
   39cb6:	f3 0f 10 05 52 54 00 	movss  0x5452(%rip),%xmm0        # 3f110 <elf_crc32.crc32_table+0x9f0>
   39cbd:	00 
   39cbe:	8d 47 01             	lea    0x1(%rdi),%eax
   39cc1:	83 f8 03             	cmp    $0x3,%eax
   39cc4:	72 29                	jb     39cef <__powisf2+0x4f>
   39cc6:	89 f8                	mov    %edi,%eax
   39cc8:	eb 0e                	jmp    39cd8 <__powisf2+0x38>
   39cca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   39cd0:	8d 48 01             	lea    0x1(%rax),%ecx
   39cd3:	83 f9 02             	cmp    $0x2,%ecx
   39cd6:	76 17                	jbe    39cef <__powisf2+0x4f>
   39cd8:	89 c1                	mov    %eax,%ecx
   39cda:	c1 e9 1f             	shr    $0x1f,%ecx
   39cdd:	01 c8                	add    %ecx,%eax
   39cdf:	d1 f8                	sar    %eax
   39ce1:	f3 0f 59 c9          	mulss  %xmm1,%xmm1
   39ce5:	a8 01                	test   $0x1,%al
   39ce7:	74 e7                	je     39cd0 <__powisf2+0x30>
   39ce9:	f3 0f 59 c1          	mulss  %xmm1,%xmm0
   39ced:	eb e1                	jmp    39cd0 <__powisf2+0x30>
   39cef:	85 ff                	test   %edi,%edi
   39cf1:	78 01                	js     39cf4 <__powisf2+0x54>
   39cf3:	c3                   	retq   
   39cf4:	f3 0f 10 0d 14 54 00 	movss  0x5414(%rip),%xmm1        # 3f110 <elf_crc32.crc32_table+0x9f0>
   39cfb:	00 
   39cfc:	f3 0f 5e c8          	divss  %xmm0,%xmm1
   39d00:	0f 28 c1             	movaps %xmm1,%xmm0
   39d03:	c3                   	retq   
   39d04:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   39d0b:	00 00 00 
   39d0e:	66 90                	xchg   %ax,%ax

0000000000039d10 <__powidf2>:
   39d10:	66 0f 28 c8          	movapd %xmm0,%xmm1
   39d14:	40 f6 c7 01          	test   $0x1,%dil
   39d18:	74 0e                	je     39d28 <__powidf2+0x18>
   39d1a:	66 0f 28 c1          	movapd %xmm1,%xmm0
   39d1e:	8d 47 01             	lea    0x1(%rdi),%eax
   39d21:	83 f8 03             	cmp    $0x3,%eax
   39d24:	73 12                	jae    39d38 <__powidf2+0x28>
   39d26:	eb 37                	jmp    39d5f <__powidf2+0x4f>
   39d28:	f2 0f 10 05 80 09 00 	movsd  0x980(%rip),%xmm0        # 3a6b0 <_ZN4core7unicode12unicode_data2cc19BITSET_INDEX_CHUNKS17h8a1f39cd536e9344E+0x1f0>
   39d2f:	00 
   39d30:	8d 47 01             	lea    0x1(%rdi),%eax
   39d33:	83 f8 03             	cmp    $0x3,%eax
   39d36:	72 27                	jb     39d5f <__powidf2+0x4f>
   39d38:	89 f8                	mov    %edi,%eax
   39d3a:	eb 0c                	jmp    39d48 <__powidf2+0x38>
   39d3c:	0f 1f 40 00          	nopl   0x0(%rax)
   39d40:	8d 48 01             	lea    0x1(%rax),%ecx
   39d43:	83 f9 02             	cmp    $0x2,%ecx
   39d46:	76 17                	jbe    39d5f <__powidf2+0x4f>
   39d48:	89 c1                	mov    %eax,%ecx
   39d4a:	c1 e9 1f             	shr    $0x1f,%ecx
   39d4d:	01 c8                	add    %ecx,%eax
   39d4f:	d1 f8                	sar    %eax
   39d51:	f2 0f 59 c9          	mulsd  %xmm1,%xmm1
   39d55:	a8 01                	test   $0x1,%al
   39d57:	74 e7                	je     39d40 <__powidf2+0x30>
   39d59:	f2 0f 59 c1          	mulsd  %xmm1,%xmm0
   39d5d:	eb e1                	jmp    39d40 <__powidf2+0x30>
   39d5f:	85 ff                	test   %edi,%edi
   39d61:	78 01                	js     39d64 <__powidf2+0x54>
   39d63:	c3                   	retq   
   39d64:	f2 0f 10 0d 44 09 00 	movsd  0x944(%rip),%xmm1        # 3a6b0 <_ZN4core7unicode12unicode_data2cc19BITSET_INDEX_CHUNKS17h8a1f39cd536e9344E+0x1f0>
   39d6b:	00 
   39d6c:	f2 0f 5e c8          	divsd  %xmm0,%xmm1
   39d70:	66 0f 28 c1          	movapd %xmm1,%xmm0
   39d74:	c3                   	retq   
   39d75:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   39d7c:	00 00 00 
   39d7f:	90                   	nop

0000000000039d80 <__multi3>:
   39d80:	41 89 f8             	mov    %edi,%r8d
   39d83:	41 89 d2             	mov    %edx,%r10d
   39d86:	4c 89 d0             	mov    %r10,%rax
   39d89:	49 0f af c0          	imul   %r8,%rax
   39d8d:	41 89 c1             	mov    %eax,%r9d
   39d90:	48 c1 e8 20          	shr    $0x20,%rax
   39d94:	48 0f af cf          	imul   %rdi,%rcx
   39d98:	48 c1 ef 20          	shr    $0x20,%rdi
   39d9c:	4c 0f af d7          	imul   %rdi,%r10
   39da0:	49 01 c2             	add    %rax,%r10
   39da3:	44 89 d0             	mov    %r10d,%eax
   39da6:	49 c1 ea 20          	shr    $0x20,%r10
   39daa:	48 0f af f2          	imul   %rdx,%rsi
   39dae:	48 c1 ea 20          	shr    $0x20,%rdx
   39db2:	4c 0f af c2          	imul   %rdx,%r8
   39db6:	49 01 c0             	add    %rax,%r8
   39db9:	4c 89 c0             	mov    %r8,%rax
   39dbc:	48 c1 e0 20          	shl    $0x20,%rax
   39dc0:	4c 09 c8             	or     %r9,%rax
   39dc3:	49 c1 e8 20          	shr    $0x20,%r8
   39dc7:	48 0f af d7          	imul   %rdi,%rdx
   39dcb:	48 01 f2             	add    %rsi,%rdx
   39dce:	48 01 ca             	add    %rcx,%rdx
   39dd1:	4c 01 d2             	add    %r10,%rdx
   39dd4:	4c 01 c2             	add    %r8,%rdx
   39dd7:	c3                   	retq   
   39dd8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   39ddf:	00 

0000000000039de0 <__divti3>:
   39de0:	53                   	push   %rbx
   39de1:	48 89 cb             	mov    %rcx,%rbx
   39de4:	48 c1 fb 3f          	sar    $0x3f,%rbx
   39de8:	48 31 d9             	xor    %rbx,%rcx
   39deb:	48 31 da             	xor    %rbx,%rdx
   39dee:	48 29 da             	sub    %rbx,%rdx
   39df1:	48 19 d9             	sbb    %rbx,%rcx
   39df4:	48 89 d0             	mov    %rdx,%rax
   39df7:	48 09 c8             	or     %rcx,%rax
   39dfa:	74 2a                	je     39e26 <__divti3+0x46>
   39dfc:	48 89 f0             	mov    %rsi,%rax
   39dff:	48 c1 f8 3f          	sar    $0x3f,%rax
   39e03:	48 31 c3             	xor    %rax,%rbx
   39e06:	48 31 c6             	xor    %rax,%rsi
   39e09:	48 31 c7             	xor    %rax,%rdi
   39e0c:	48 29 c7             	sub    %rax,%rdi
   39e0f:	48 19 c6             	sbb    %rax,%rsi
   39e12:	ff 15 b0 e1 20 00    	callq  *0x20e1b0(%rip)        # 247fc8 <_GLOBAL_OFFSET_TABLE_+0x2d8>
   39e18:	48 31 da             	xor    %rbx,%rdx
   39e1b:	48 31 d8             	xor    %rbx,%rax
   39e1e:	48 29 d8             	sub    %rbx,%rax
   39e21:	48 19 da             	sbb    %rbx,%rdx
   39e24:	5b                   	pop    %rbx
   39e25:	c3                   	retq   
   39e26:	0f 0b                	ud2    
   39e28:	0f 0b                	ud2    
   39e2a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000039e30 <__modti3>:
   39e30:	53                   	push   %rbx
   39e31:	48 89 c8             	mov    %rcx,%rax
   39e34:	49 89 d0             	mov    %rdx,%r8
   39e37:	31 c9                	xor    %ecx,%ecx
   39e39:	48 f7 da             	neg    %rdx
   39e3c:	48 19 c1             	sbb    %rax,%rcx
   39e3f:	48 85 c0             	test   %rax,%rax
   39e42:	49 0f 49 d0          	cmovns %r8,%rdx
   39e46:	48 0f 49 c8          	cmovns %rax,%rcx
   39e4a:	48 89 d0             	mov    %rdx,%rax
   39e4d:	48 09 c8             	or     %rcx,%rax
   39e50:	74 27                	je     39e79 <__modti3+0x49>
   39e52:	48 89 f3             	mov    %rsi,%rbx
   39e55:	48 c1 fb 3f          	sar    $0x3f,%rbx
   39e59:	48 31 de             	xor    %rbx,%rsi
   39e5c:	48 31 df             	xor    %rbx,%rdi
   39e5f:	48 29 df             	sub    %rbx,%rdi
   39e62:	48 19 de             	sbb    %rbx,%rsi
   39e65:	ff 15 0d e1 20 00    	callq  *0x20e10d(%rip)        # 247f78 <_GLOBAL_OFFSET_TABLE_+0x288>
   39e6b:	48 31 da             	xor    %rbx,%rdx
   39e6e:	48 31 d8             	xor    %rbx,%rax
   39e71:	48 29 d8             	sub    %rbx,%rax
   39e74:	48 19 da             	sbb    %rbx,%rdx
   39e77:	5b                   	pop    %rbx
   39e78:	c3                   	retq   
   39e79:	0f 0b                	ud2    
   39e7b:	0f 0b                	ud2    
   39e7d:	0f 1f 00             	nopl   (%rax)

0000000000039e80 <__ashlti3>:
   39e80:	89 d1                	mov    %edx,%ecx
   39e82:	48 89 f8             	mov    %rdi,%rax
   39e85:	f6 c1 40             	test   $0x40,%cl
   39e88:	75 15                	jne    39e9f <__ashlti3+0x1f>
   39e8a:	48 89 f2             	mov    %rsi,%rdx
   39e8d:	85 c9                	test   %ecx,%ecx
   39e8f:	74 0d                	je     39e9e <__ashlti3+0x1e>
   39e91:	48 89 c6             	mov    %rax,%rsi
   39e94:	48 d3 e6             	shl    %cl,%rsi
   39e97:	48 0f a5 c2          	shld   %cl,%rax,%rdx
   39e9b:	48 89 f0             	mov    %rsi,%rax
   39e9e:	c3                   	retq   
   39e9f:	48 89 c2             	mov    %rax,%rdx
   39ea2:	48 d3 e2             	shl    %cl,%rdx
   39ea5:	31 c0                	xor    %eax,%eax
   39ea7:	c3                   	retq   
   39ea8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   39eaf:	00 

0000000000039eb0 <__ashrti3>:
   39eb0:	89 d1                	mov    %edx,%ecx
   39eb2:	48 89 f2             	mov    %rsi,%rdx
   39eb5:	f6 c1 40             	test   $0x40,%cl
   39eb8:	75 0f                	jne    39ec9 <__ashrti3+0x19>
   39eba:	48 89 f8             	mov    %rdi,%rax
   39ebd:	85 c9                	test   %ecx,%ecx
   39ebf:	74 07                	je     39ec8 <__ashrti3+0x18>
   39ec1:	48 0f ad d0          	shrd   %cl,%rdx,%rax
   39ec5:	48 d3 fa             	sar    %cl,%rdx
   39ec8:	c3                   	retq   
   39ec9:	48 89 d0             	mov    %rdx,%rax
   39ecc:	48 d3 f8             	sar    %cl,%rax
   39ecf:	48 c1 fa 3f          	sar    $0x3f,%rdx
   39ed3:	c3                   	retq   
   39ed4:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   39edb:	00 00 00 
   39ede:	66 90                	xchg   %ax,%ax

0000000000039ee0 <__lshrti3>:
   39ee0:	89 d1                	mov    %edx,%ecx
   39ee2:	48 89 f2             	mov    %rsi,%rdx
   39ee5:	f6 c1 40             	test   $0x40,%cl
   39ee8:	75 0f                	jne    39ef9 <__lshrti3+0x19>
   39eea:	48 89 f8             	mov    %rdi,%rax
   39eed:	85 c9                	test   %ecx,%ecx
   39eef:	74 07                	je     39ef8 <__lshrti3+0x18>
   39ef1:	48 0f ad d0          	shrd   %cl,%rdx,%rax
   39ef5:	48 d3 ea             	shr    %cl,%rdx
   39ef8:	c3                   	retq   
   39ef9:	48 d3 ea             	shr    %cl,%rdx
   39efc:	48 89 d0             	mov    %rdx,%rax
   39eff:	31 d2                	xor    %edx,%edx
   39f01:	c3                   	retq   
   39f02:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   39f09:	00 00 00 
   39f0c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000039f10 <__udivti3>:
   39f10:	45 31 c0             	xor    %r8d,%r8d
   39f13:	e9 38 00 00 00       	jmpq   39f50 <__udivmodti4>
   39f18:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   39f1f:	00 

0000000000039f20 <__umodti3>:
   39f20:	48 83 ec 18          	sub    $0x18,%rsp
   39f24:	0f 57 c0             	xorps  %xmm0,%xmm0
   39f27:	0f 11 44 24 08       	movups %xmm0,0x8(%rsp)
   39f2c:	4c 8d 44 24 08       	lea    0x8(%rsp),%r8
   39f31:	e8 1a 00 00 00       	callq  39f50 <__udivmodti4>
   39f36:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   39f3b:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
   39f40:	48 83 c4 18          	add    $0x18,%rsp
   39f44:	c3                   	retq   
   39f45:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   39f4c:	00 00 00 
   39f4f:	90                   	nop

0000000000039f50 <__udivmodti4>:
   39f50:	55                   	push   %rbp
   39f51:	41 57                	push   %r15
   39f53:	41 56                	push   %r14
   39f55:	41 54                	push   %r12
   39f57:	53                   	push   %rbx
   39f58:	49 89 ca             	mov    %rcx,%r10
   39f5b:	49 89 d1             	mov    %rdx,%r9
   39f5e:	49 89 f3             	mov    %rsi,%r11
   39f61:	49 89 fc             	mov    %rdi,%r12
   39f64:	48 85 f6             	test   %rsi,%rsi
   39f67:	74 3f                	je     39fa8 <__udivmodti4+0x58>
   39f69:	4d 85 c9             	test   %r9,%r9
   39f6c:	74 6d                	je     39fdb <__udivmodti4+0x8b>
   39f6e:	4d 85 d2             	test   %r10,%r10
   39f71:	0f 84 ab 00 00 00    	je     3a022 <__udivmodti4+0xd2>
   39f77:	b9 40 00 00 00       	mov    $0x40,%ecx
   39f7c:	b8 40 00 00 00       	mov    $0x40,%eax
   39f81:	74 08                	je     39f8b <__udivmodti4+0x3b>
   39f83:	49 0f bd c2          	bsr    %r10,%rax
   39f87:	48 83 f0 3f          	xor    $0x3f,%rax
   39f8b:	4d 85 db             	test   %r11,%r11
   39f8e:	74 08                	je     39f98 <__udivmodti4+0x48>
   39f90:	49 0f bd cb          	bsr    %r11,%rcx
   39f94:	48 83 f1 3f          	xor    $0x3f,%rcx
   39f98:	29 c8                	sub    %ecx,%eax
   39f9a:	83 f8 3f             	cmp    $0x3f,%eax
   39f9d:	0f 87 47 01 00 00    	ja     3a0ea <__udivmodti4+0x19a>
   39fa3:	e9 59 01 00 00       	jmpq   3a101 <__udivmodti4+0x1b1>
   39fa8:	4d 85 d2             	test   %r10,%r10
   39fab:	0f 85 39 01 00 00    	jne    3a0ea <__udivmodti4+0x19a>
   39fb1:	4d 85 c0             	test   %r8,%r8
   39fb4:	0f 84 c3 02 00 00    	je     3a27d <__udivmodti4+0x32d>
   39fba:	4d 85 c9             	test   %r9,%r9
   39fbd:	0f 84 07 03 00 00    	je     3a2ca <__udivmodti4+0x37a>
   39fc3:	4c 89 e0             	mov    %r12,%rax
   39fc6:	31 d2                	xor    %edx,%edx
   39fc8:	49 f7 f1             	div    %r9
   39fcb:	49 89 10             	mov    %rdx,(%r8)
   39fce:	49 c7 40 08 00 00 00 	movq   $0x0,0x8(%r8)
   39fd5:	00 
   39fd6:	e9 a7 02 00 00       	jmpq   3a282 <__udivmodti4+0x332>
   39fdb:	4d 85 d2             	test   %r10,%r10
   39fde:	0f 84 e6 02 00 00    	je     3a2ca <__udivmodti4+0x37a>
   39fe4:	4d 85 e4             	test   %r12,%r12
   39fe7:	74 7c                	je     3a065 <__udivmodti4+0x115>
   39fe9:	49 8d 42 ff          	lea    -0x1(%r10),%rax
   39fed:	49 85 c2             	test   %rax,%r10
   39ff0:	0f 94 c1             	sete   %cl
   39ff3:	4d 85 d2             	test   %r10,%r10
   39ff6:	0f 95 c2             	setne  %dl
   39ff9:	84 ca                	test   %cl,%dl
   39ffb:	0f 84 be 00 00 00    	je     3a0bf <__udivmodti4+0x16f>
   3a001:	4d 85 c0             	test   %r8,%r8
   3a004:	74 0a                	je     3a010 <__udivmodti4+0xc0>
   3a006:	4c 21 d8             	and    %r11,%rax
   3a009:	4d 89 20             	mov    %r12,(%r8)
   3a00c:	49 89 40 08          	mov    %rax,0x8(%r8)
   3a010:	4d 85 d2             	test   %r10,%r10
   3a013:	0f 84 79 02 00 00    	je     3a292 <__udivmodti4+0x342>
   3a019:	49 0f bc ca          	bsf    %r10,%rcx
   3a01d:	e9 75 02 00 00       	jmpq   3a297 <__udivmodti4+0x347>
   3a022:	49 8d 41 ff          	lea    -0x1(%r9),%rax
   3a026:	49 85 c1             	test   %rax,%r9
   3a029:	0f 94 c1             	sete   %cl
   3a02c:	4d 85 c9             	test   %r9,%r9
   3a02f:	0f 95 c2             	setne  %dl
   3a032:	84 ca                	test   %cl,%dl
   3a034:	74 5a                	je     3a090 <__udivmodti4+0x140>
   3a036:	4d 85 c0             	test   %r8,%r8
   3a039:	74 0e                	je     3a049 <__udivmodti4+0xf9>
   3a03b:	4c 21 e0             	and    %r12,%rax
   3a03e:	49 89 00             	mov    %rax,(%r8)
   3a041:	49 c7 40 08 00 00 00 	movq   $0x0,0x8(%r8)
   3a048:	00 
   3a049:	49 83 f9 01          	cmp    $0x1,%r9
   3a04d:	0f 84 68 02 00 00    	je     3a2bb <__udivmodti4+0x36b>
   3a053:	4d 85 c9             	test   %r9,%r9
   3a056:	0f 84 46 02 00 00    	je     3a2a2 <__udivmodti4+0x352>
   3a05c:	49 0f bc c9          	bsf    %r9,%rcx
   3a060:	e9 42 02 00 00       	jmpq   3a2a7 <__udivmodti4+0x357>
   3a065:	4d 85 c0             	test   %r8,%r8
   3a068:	74 13                	je     3a07d <__udivmodti4+0x12d>
   3a06a:	4c 89 d8             	mov    %r11,%rax
   3a06d:	31 d2                	xor    %edx,%edx
   3a06f:	49 f7 f2             	div    %r10
   3a072:	49 89 50 08          	mov    %rdx,0x8(%r8)
   3a076:	49 c7 00 00 00 00 00 	movq   $0x0,(%r8)
   3a07d:	4c 89 d8             	mov    %r11,%rax
   3a080:	31 d2                	xor    %edx,%edx
   3a082:	49 f7 f2             	div    %r10
   3a085:	49 89 c4             	mov    %rax,%r12
   3a088:	45 31 db             	xor    %r11d,%r11d
   3a08b:	e9 2b 02 00 00       	jmpq   3a2bb <__udivmodti4+0x36b>
   3a090:	b9 40 00 00 00       	mov    $0x40,%ecx
   3a095:	b8 40 00 00 00       	mov    $0x40,%eax
   3a09a:	4d 85 c9             	test   %r9,%r9
   3a09d:	74 08                	je     3a0a7 <__udivmodti4+0x157>
   3a09f:	49 0f bd c1          	bsr    %r9,%rax
   3a0a3:	48 83 f0 3f          	xor    $0x3f,%rax
   3a0a7:	83 c0 41             	add    $0x41,%eax
   3a0aa:	4d 85 db             	test   %r11,%r11
   3a0ad:	74 08                	je     3a0b7 <__udivmodti4+0x167>
   3a0af:	49 0f bd cb          	bsr    %r11,%rcx
   3a0b3:	48 83 f1 3f          	xor    $0x3f,%rcx
   3a0b7:	29 c8                	sub    %ecx,%eax
   3a0b9:	89 c2                	mov    %eax,%edx
   3a0bb:	f7 da                	neg    %edx
   3a0bd:	eb 4c                	jmp    3a10b <__udivmodti4+0x1bb>
   3a0bf:	b9 40 00 00 00       	mov    $0x40,%ecx
   3a0c4:	b8 40 00 00 00       	mov    $0x40,%eax
   3a0c9:	4d 85 d2             	test   %r10,%r10
   3a0cc:	74 08                	je     3a0d6 <__udivmodti4+0x186>
   3a0ce:	49 0f bd c2          	bsr    %r10,%rax
   3a0d2:	48 83 f0 3f          	xor    $0x3f,%rax
   3a0d6:	4d 85 db             	test   %r11,%r11
   3a0d9:	74 08                	je     3a0e3 <__udivmodti4+0x193>
   3a0db:	49 0f bd cb          	bsr    %r11,%rcx
   3a0df:	48 83 f1 3f          	xor    $0x3f,%rcx
   3a0e3:	29 c8                	sub    %ecx,%eax
   3a0e5:	83 f8 3e             	cmp    $0x3e,%eax
   3a0e8:	76 17                	jbe    3a101 <__udivmodti4+0x1b1>
   3a0ea:	4d 85 c0             	test   %r8,%r8
   3a0ed:	74 07                	je     3a0f6 <__udivmodti4+0x1a6>
   3a0ef:	4d 89 20             	mov    %r12,(%r8)
   3a0f2:	4d 89 58 08          	mov    %r11,0x8(%r8)
   3a0f6:	45 31 e4             	xor    %r12d,%r12d
   3a0f9:	45 31 db             	xor    %r11d,%r11d
   3a0fc:	e9 ba 01 00 00       	jmpq   3a2bb <__udivmodti4+0x36b>
   3a101:	ba 7f 00 00 00       	mov    $0x7f,%edx
   3a106:	29 c2                	sub    %eax,%edx
   3a108:	83 c0 01             	add    $0x1,%eax
   3a10b:	4c 89 e6             	mov    %r12,%rsi
   3a10e:	89 c1                	mov    %eax,%ecx
   3a110:	4c 0f ad de          	shrd   %cl,%r11,%rsi
   3a114:	4c 89 dd             	mov    %r11,%rbp
   3a117:	48 d3 ed             	shr    %cl,%rbp
   3a11a:	45 31 f6             	xor    %r14d,%r14d
   3a11d:	a8 40                	test   $0x40,%al
   3a11f:	48 0f 45 f5          	cmovne %rbp,%rsi
   3a123:	49 0f 45 ee          	cmovne %r14,%rbp
   3a127:	89 d1                	mov    %edx,%ecx
   3a129:	4d 0f a5 e3          	shld   %cl,%r12,%r11
   3a12d:	49 d3 e4             	shl    %cl,%r12
   3a130:	f6 c2 40             	test   $0x40,%dl
   3a133:	4d 0f 45 dc          	cmovne %r12,%r11
   3a137:	4d 0f 45 e6          	cmovne %r14,%r12
   3a13b:	85 c0                	test   %eax,%eax
   3a13d:	74 1f                	je     3a15e <__udivmodti4+0x20e>
   3a13f:	41 89 c7             	mov    %eax,%r15d
   3a142:	41 83 e7 01          	and    $0x1,%r15d
   3a146:	83 f8 01             	cmp    $0x1,%eax
   3a149:	75 23                	jne    3a16e <__udivmodti4+0x21e>
   3a14b:	31 c0                	xor    %eax,%eax
   3a14d:	45 31 f6             	xor    %r14d,%r14d
   3a150:	45 85 ff             	test   %r15d,%r15d
   3a153:	0f 85 c5 00 00 00    	jne    3a21e <__udivmodti4+0x2ce>
   3a159:	e9 03 01 00 00       	jmpq   3a261 <__udivmodti4+0x311>
   3a15e:	31 c0                	xor    %eax,%eax
   3a160:	4d 85 c0             	test   %r8,%r8
   3a163:	0f 85 fd 00 00 00    	jne    3a266 <__udivmodti4+0x316>
   3a169:	e9 ff 00 00 00       	jmpq   3a26d <__udivmodti4+0x31d>
   3a16e:	44 89 fa             	mov    %r15d,%edx
   3a171:	29 c2                	sub    %eax,%edx
   3a173:	45 31 f6             	xor    %r14d,%r14d
   3a176:	31 c0                	xor    %eax,%eax
   3a178:	31 ff                	xor    %edi,%edi
   3a17a:	4c 89 d9             	mov    %r11,%rcx
   3a17d:	0f 1f 00             	nopl   (%rax)
   3a180:	48 0f a4 f5 01       	shld   $0x1,%rsi,%rbp
   3a185:	48 0f a4 ce 01       	shld   $0x1,%rcx,%rsi
   3a18a:	4d 0f a4 e3 01       	shld   $0x1,%r12,%r11
   3a18f:	49 09 fb             	or     %rdi,%r11
   3a192:	4d 01 e4             	add    %r12,%r12
   3a195:	49 09 c4             	or     %rax,%r12
   3a198:	48 89 eb             	mov    %rbp,%rbx
   3a19b:	48 f7 d3             	not    %rbx
   3a19e:	48 89 f7             	mov    %rsi,%rdi
   3a1a1:	48 f7 d7             	not    %rdi
   3a1a4:	4c 01 cf             	add    %r9,%rdi
   3a1a7:	4c 11 d3             	adc    %r10,%rbx
   3a1aa:	48 c1 fb 3f          	sar    $0x3f,%rbx
   3a1ae:	48 89 df             	mov    %rbx,%rdi
   3a1b1:	4c 21 d7             	and    %r10,%rdi
   3a1b4:	48 89 d8             	mov    %rbx,%rax
   3a1b7:	4c 21 c8             	and    %r9,%rax
   3a1ba:	48 29 c6             	sub    %rax,%rsi
   3a1bd:	48 19 fd             	sbb    %rdi,%rbp
   3a1c0:	48 0f a4 f5 01       	shld   $0x1,%rsi,%rbp
   3a1c5:	48 c1 e9 3e          	shr    $0x3e,%rcx
   3a1c9:	83 e1 01             	and    $0x1,%ecx
   3a1cc:	48 8d 34 71          	lea    (%rcx,%rsi,2),%rsi
   3a1d0:	4d 0f a4 e3 01       	shld   $0x1,%r12,%r11
   3a1d5:	4d 01 e4             	add    %r12,%r12
   3a1d8:	49 29 dc             	sub    %rbx,%r12
   3a1db:	49 19 db             	sbb    %rbx,%r11
   3a1de:	48 89 e9             	mov    %rbp,%rcx
   3a1e1:	48 f7 d1             	not    %rcx
   3a1e4:	48 89 f0             	mov    %rsi,%rax
   3a1e7:	48 f7 d0             	not    %rax
   3a1ea:	4c 01 c8             	add    %r9,%rax
   3a1ed:	4c 11 d1             	adc    %r10,%rcx
   3a1f0:	48 c1 f9 3f          	sar    $0x3f,%rcx
   3a1f4:	89 c8                	mov    %ecx,%eax
   3a1f6:	83 e0 01             	and    $0x1,%eax
   3a1f9:	48 89 cf             	mov    %rcx,%rdi
   3a1fc:	4c 21 d7             	and    %r10,%rdi
   3a1ff:	4c 21 c9             	and    %r9,%rcx
   3a202:	48 29 ce             	sub    %rcx,%rsi
   3a205:	48 19 fd             	sbb    %rdi,%rbp
   3a208:	bf 00 00 00 00       	mov    $0x0,%edi
   3a20d:	4c 89 d9             	mov    %r11,%rcx
   3a210:	83 c2 02             	add    $0x2,%edx
   3a213:	0f 85 67 ff ff ff    	jne    3a180 <__udivmodti4+0x230>
   3a219:	45 85 ff             	test   %r15d,%r15d
   3a21c:	74 43                	je     3a261 <__udivmodti4+0x311>
   3a21e:	48 0f a4 f5 01       	shld   $0x1,%rsi,%rbp
   3a223:	4c 0f a4 de 01       	shld   $0x1,%r11,%rsi
   3a228:	48 89 e9             	mov    %rbp,%rcx
   3a22b:	48 f7 d1             	not    %rcx
   3a22e:	48 89 f2             	mov    %rsi,%rdx
   3a231:	48 f7 d2             	not    %rdx
   3a234:	4c 01 ca             	add    %r9,%rdx
   3a237:	4c 11 d1             	adc    %r10,%rcx
   3a23a:	48 c1 f9 3f          	sar    $0x3f,%rcx
   3a23e:	49 21 ca             	and    %rcx,%r10
   3a241:	49 21 c9             	and    %rcx,%r9
   3a244:	4c 29 ce             	sub    %r9,%rsi
   3a247:	4c 19 d5             	sbb    %r10,%rbp
   3a24a:	83 e1 01             	and    $0x1,%ecx
   3a24d:	4d 0f a4 e3 01       	shld   $0x1,%r12,%r11
   3a252:	4d 09 f3             	or     %r14,%r11
   3a255:	4d 01 e4             	add    %r12,%r12
   3a258:	49 09 c4             	or     %rax,%r12
   3a25b:	48 89 c8             	mov    %rcx,%rax
   3a25e:	45 31 f6             	xor    %r14d,%r14d
   3a261:	4d 85 c0             	test   %r8,%r8
   3a264:	74 07                	je     3a26d <__udivmodti4+0x31d>
   3a266:	49 89 30             	mov    %rsi,(%r8)
   3a269:	49 89 68 08          	mov    %rbp,0x8(%r8)
   3a26d:	4d 0f a4 e3 01       	shld   $0x1,%r12,%r11
   3a272:	4d 09 f3             	or     %r14,%r11
   3a275:	4d 01 e4             	add    %r12,%r12
   3a278:	49 09 c4             	or     %rax,%r12
   3a27b:	eb 3e                	jmp    3a2bb <__udivmodti4+0x36b>
   3a27d:	4d 85 c9             	test   %r9,%r9
   3a280:	74 48                	je     3a2ca <__udivmodti4+0x37a>
   3a282:	4c 89 e0             	mov    %r12,%rax
   3a285:	31 d2                	xor    %edx,%edx
   3a287:	49 f7 f1             	div    %r9
   3a28a:	45 31 db             	xor    %r11d,%r11d
   3a28d:	49 89 c4             	mov    %rax,%r12
   3a290:	eb 29                	jmp    3a2bb <__udivmodti4+0x36b>
   3a292:	b9 40 00 00 00       	mov    $0x40,%ecx
   3a297:	49 d3 eb             	shr    %cl,%r11
   3a29a:	4d 89 dc             	mov    %r11,%r12
   3a29d:	45 31 db             	xor    %r11d,%r11d
   3a2a0:	eb 19                	jmp    3a2bb <__udivmodti4+0x36b>
   3a2a2:	b9 40 00 00 00       	mov    $0x40,%ecx
   3a2a7:	4d 0f ad dc          	shrd   %cl,%r11,%r12
   3a2ab:	49 d3 eb             	shr    %cl,%r11
   3a2ae:	31 c0                	xor    %eax,%eax
   3a2b0:	f6 c1 40             	test   $0x40,%cl
   3a2b3:	4d 0f 45 e3          	cmovne %r11,%r12
   3a2b7:	4c 0f 45 d8          	cmovne %rax,%r11
   3a2bb:	4c 89 e0             	mov    %r12,%rax
   3a2be:	4c 89 da             	mov    %r11,%rdx
   3a2c1:	5b                   	pop    %rbx
   3a2c2:	41 5c                	pop    %r12
   3a2c4:	41 5e                	pop    %r14
   3a2c6:	41 5f                	pop    %r15
   3a2c8:	5d                   	pop    %rbp
   3a2c9:	c3                   	retq   
   3a2ca:	0f 0b                	ud2    
   3a2cc:	0f 0b                	ud2    
   3a2ce:	66 90                	xchg   %ax,%ax

000000000003a2d0 <__libc_csu_init>:
   3a2d0:	41 57                	push   %r15
   3a2d2:	41 56                	push   %r14
   3a2d4:	49 89 d7             	mov    %rdx,%r15
   3a2d7:	41 55                	push   %r13
   3a2d9:	41 54                	push   %r12
   3a2db:	4c 8d 25 1e bd 20 00 	lea    0x20bd1e(%rip),%r12        # 246000 <_ZN3std3sys4unix4args3imp15ARGV_INIT_ARRAY17h4c8688690839987aE>
   3a2e2:	55                   	push   %rbp
   3a2e3:	48 8d 2d 26 bd 20 00 	lea    0x20bd26(%rip),%rbp        # 246010 <__init_array_end>
   3a2ea:	53                   	push   %rbx
   3a2eb:	41 89 fd             	mov    %edi,%r13d
   3a2ee:	49 89 f6             	mov    %rsi,%r14
   3a2f1:	4c 29 e5             	sub    %r12,%rbp
   3a2f4:	48 83 ec 08          	sub    $0x8,%rsp
   3a2f8:	48 c1 fd 03          	sar    $0x3,%rbp
   3a2fc:	e8 bf 9c fc ff       	callq  3fc0 <_init>
   3a301:	48 85 ed             	test   %rbp,%rbp
   3a304:	74 20                	je     3a326 <__libc_csu_init+0x56>
   3a306:	31 db                	xor    %ebx,%ebx
   3a308:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   3a30f:	00 
   3a310:	4c 89 fa             	mov    %r15,%rdx
   3a313:	4c 89 f6             	mov    %r14,%rsi
   3a316:	44 89 ef             	mov    %r13d,%edi
   3a319:	41 ff 14 dc          	callq  *(%r12,%rbx,8)
   3a31d:	48 83 c3 01          	add    $0x1,%rbx
   3a321:	48 39 dd             	cmp    %rbx,%rbp
   3a324:	75 ea                	jne    3a310 <__libc_csu_init+0x40>
   3a326:	48 83 c4 08          	add    $0x8,%rsp
   3a32a:	5b                   	pop    %rbx
   3a32b:	5d                   	pop    %rbp
   3a32c:	41 5c                	pop    %r12
   3a32e:	41 5d                	pop    %r13
   3a330:	41 5e                	pop    %r14
   3a332:	41 5f                	pop    %r15
   3a334:	c3                   	retq   
   3a335:	90                   	nop
   3a336:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   3a33d:	00 00 00 

000000000003a340 <__libc_csu_fini>:
   3a340:	f3 c3                	repz retq 

Disassembly of section .fini:

000000000003a344 <_fini>:
   3a344:	48 83 ec 08          	sub    $0x8,%rsp
   3a348:	48 83 c4 08          	add    $0x8,%rsp
   3a34c:	c3                   	retq   
